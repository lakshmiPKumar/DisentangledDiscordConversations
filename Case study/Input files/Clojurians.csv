AuthorID,Author,Date,Content,Attachments,Reactions
2.66305E+17,john#2563,2017-05-20,Welcome the Clojurians Discord channel!,,
2.43147E+17,hagus#1255,2017-05-20,Woo!,,
3.15279E+17,goomba#1378,2017-05-20,Woo2!,,
9.68029E+16,trigoman#5270,2017-05-20,hello,,
2.66305E+17,john#2563,2017-05-20,hello trigoman,,
3.15417E+17,mobileink#1717,2017-05-21,four  messages?  that's it?  are there older msgs i'm not seeing?,,
3.01795E+17,arichiardi#2361,2017-05-21,probably not many joined 😉,,
2.43147E+17,hagus#1255,2017-05-21,"Well, this channel was only created yesterday I think. The entire thing is still very experimental. If more people jump in and try we'll see more 😃",,
3.01795E+17,arichiardi#2361,2017-05-21,"I guess we are ""forking"", we'll see how it pans out",,
2.43147E+17,hagus#1255,2017-05-21,"I'm deliberately trying to avoid calling it a fork or promoting one solution over another … I'd like people to try this Discord and use that knowledge to either make Slack better, adopt a different solution, adopt Discord, whatever ends up working for the community 😃",,
2.43147E+17,hagus#1255,2017-05-21,That could mean keeping this Discord alive because lots of people like it - we'll see how it goes!,,
3.01795E+17,arichiardi#2361,2017-05-21,"@hagus good point and good strategy, the two can coexist I guess",,
2.65283E+17,Slackwise#2471,2017-05-21,"Okay, so, if I wanted to release my code, could I do it under the GPL, or would I have to use the EPL?",,
2.65283E+17,Slackwise#2471,2017-05-21,"This would be an application, not a library.",,
2.43147E+17,hagus#1255,2017-05-21,IANAL but I would seach some clojure projects and see what their LICENSE files say.,,
2.43147E+17,hagus#1255,2017-05-21,Wow do I feel like an idiot. Today I learned vectors can be treated as functions too.,,
2.43147E+17,hagus#1255,2017-05-21,"```clojure
([:a :b :c :d :e :f :g] 3)
=> :d
```",,
2.65283E+17,Slackwise#2471,2017-05-21,It's all functions.,,
2.65283E+17,Slackwise#2471,2017-05-21,Everything is a function.,,
2.65283E+17,Slackwise#2471,2017-05-21,Even I'm a function.,,
2.65283E+17,Slackwise#2471,2017-05-21,One day I'll return to the source.,,
2.65283E+17,Slackwise#2471,2017-05-21,(Trying to use GitHub search to find a project with a non-EPL license...),,
2.65283E+17,Slackwise#2471,2017-05-21,Doesn't look like a query option.,,
2.65283E+17,Slackwise#2471,2017-05-21,"I guess I can use some API voodoo, I guess.",,
2.65283E+17,Slackwise#2471,2017-05-21,That doesn't guarantee license compatibility for redistribution EPL derivatives.,,
2.65283E+17,Slackwise#2471,2017-05-21,"I'm no lawyer, so it's hard to tell. :/",,
2.66305E+17,john#2563,2017-05-21,gitter might be a good fourthternative,,
2.65283E+17,Slackwise#2471,2017-05-21,Hmm.,,
2.65283E+17,Slackwise#2471,2017-05-21,I tried on the Slack channel but someone said likely not.,,
2.65283E+17,Slackwise#2471,2017-05-21,"Wait, maybe ask someone at the FSF to see if the EPL is compatible with the GPL.",,
2.65283E+17,Slackwise#2471,2017-05-21,"Heh, just found this: ""The EPL 1.0 is not compatible with the GPL, and a work created by combining a work licensed under the GPL with a work licensed under the EPL cannot be lawfully distributed.""",,
2.65283E+17,Slackwise#2471,2017-05-21,That's kinda' disappointing.,,
2.43147E+17,hagus#1255,2017-05-21,"the takeaway is that the GPL is not compatible with anything, ever 😃",,
2.65283E+17,Slackwise#2471,2017-05-21,Kind of. :/,,
2.65283E+17,Slackwise#2471,2017-05-21,It's ideological.,,
3.01795E+17,arichiardi#2361,2017-05-21,"EPL is just one choice, see this tweet: 
https://mobile.twitter.com/plexus/status/835119812187680769",,
3.01795E+17,arichiardi#2361,2017-05-21,I am also looking for the related blog post,,
3.01795E+17,arichiardi#2361,2017-05-21,"Duh, cannot find it",,
3.01795E+17,arichiardi#2361,2017-05-21,"I think Mozilla Public License makes a good license for oss projects, I need more investigation myself though",,
2.65283E+17,Slackwise#2471,2017-05-22,At least there's that. Hmm.,,
2.43147E+17,hagus#1255,2017-05-22,TIL `reduce-kv` when applied to a vector gives you the vector index as the key.,,👌 (1)
2.43147E+17,hagus#1255,2017-05-22,anyone know if there's such a thing as an anonymous spec?,,
2.43147E+17,hagus#1255,2017-05-22,"basically I have a map, and I want to arbitrarily say ""this map should have this particular key""",,
2.43147E+17,hagus#1255,2017-05-22,without having to spec the map itself,,
2.43147E+17,hagus#1255,2017-05-22,"oh duh, I think in this case I just spec the function.",,
2.87342E+17,Heavy metal pirate#4232,2017-05-22,"Hi guys. Can someone please tell me how to iterate in data like this? ({:foo bar}, {:bar foo}) i have been struggling for hours with it",,
3.01795E+17,arichiardi#2361,2017-05-22,@Heavy metal pirate what should your data outup look like? Basically a map is a seq of key/values so,,
3.01795E+17,arichiardi#2361,2017-05-22,"You need one map for the outer, one iteration for the individual maps",,
3.15182E+17,hswick#4417,2017-05-22,"@Heavy metal pirate ```clojure (map (fn [thing] (keys thing)) '({:foo ""bar""} {:bar ""foo""}))``` would be one way to iterate over your data",,
3.15182E+17,hswick#4417,2017-05-22,grr tried to do the fancy markup,,
3.15182E+17,hswick#4417,2017-05-22,"```clojure 
(def list-of-things '({:foo ""bar""} {:bar ""foo""}))
(map (fn [thing] (keys thing)) list-of-things)
```",,
3.15182E+17,hswick#4417,2017-05-22,messed it up again lol,,
2.43147E+17,hagus#1255,2017-05-22,"@hswick it's like 
`
```clojure
some stuff
```
`",,
3.15182E+17,hswick#4417,2017-05-22,"```clojure
(def foo [])
```",,
3.15182E+17,hswick#4417,2017-05-22,got it to work that time! thanks for the reminder @hagus,,👍 (1)
3.15279E+17,goomba#1378,2017-05-23,@Heavy metal pirate you trying to dig out the values or you want to concat them into a list or what?,,
3.15279E+17,goomba#1378,2017-05-23,"```clojure
(def ms [{:a 0} {:b 1}])
(apply concat (reduce #(apply conj %1 %2) [] ms)) ;;=> (:a 0 :b 1)
```",,
3.15279E+17,goomba#1378,2017-05-23,probably a better way to do that,,
3.15279E+17,goomba#1378,2017-05-23,🤔,,
3.15279E+17,goomba#1378,2017-05-23,"```clojure
(->> ms
  (reduce #(apply conj %1 %2) [])
  (apply concat)
```",,
3.15279E+17,goomba#1378,2017-05-23,I guess that's a _mild_ improvement,,
1.92897E+17,bbss#6837,2017-05-23,"```clojure
(flatten (map (comp flatten vec) [{:a 1} {:b 2}]))
```",,
1.92897E+17,bbss#6837,2017-05-23,not sure mine is an improvement 😂,,
3.15279E+17,goomba#1378,2017-05-23,I'm not really sure of anything when it comes right down to it 😅,,
3.15279E+17,goomba#1378,2017-05-23,I think that's the art of programming though.  Never really sure of anything but keep writing code and things keep working (mostly) ... so keep writing code 😂,,
1.92897E+17,bbss#6837,2017-05-23,"I am happy when it works, but it's always nice to see variations.",,
1.92897E+17,bbss#6837,2017-05-23,I try to write without defining functions myself 😄,,
1.92897E+17,bbss#6837,2017-05-23,"cool, just wrote my second macro or so 😄",,
1.92897E+17,bbss#6837,2017-05-23,"I have this fantasy where I write a spec, and then super quickly turn it into a view component.",,
1.92897E+17,bbss#6837,2017-05-23,so I wrote a macro that takes a `::spec-keys-keyword` and returns the symbols in req and opt.,,
1.92897E+17,bbss#6837,2017-05-23,"in a vector, so they can be used in a `{:keys [req-and-opt-symbols]}` binding",,
1.92897E+17,bbss#6837,2017-05-23,I can use the macro purely during writing the code by ciders `eval-last-sexp-and-replace`.,,
1.92897E+17,bbss#6837,2017-05-23,"how useful is that? not sure, saves a little typing and the errors that occur there I guess. But it would win me some cool-boy points.",,
1.92897E+17,bbss#6837,2017-05-23,I'm not sure that makes sense. I will record a video when I get it down.,,
3.15279E+17,goomba#1378,2017-05-23,"""I try to write without defining functions myself 😄"" 😂 😂",,
3.15279E+17,goomba#1378,2017-05-23,I think the concept of declarative front end programming is awesome,,
3.15279E+17,goomba#1378,2017-05-23,"I bet that's the next step, honestly",,
1.92897E+17,bbss#6837,2017-05-23,graphQL signals a step towards it for sure,,
1.92897E+17,bbss#6837,2017-05-23,"the project I'm working on makes use of falcorJS, also declarative and data focussed",,
2.43147E+17,hagus#1255,2017-05-23,"does anyone actually know where ""if"" is defined in clojure? I know it's a special form, but it's neither in clojure.core or clojure.lang.RT (that I can find)",,
3.10522E+17,tosh#0150,2017-05-24,great read: http://tonsky.me/blog/readable-clojure/,,
3.15279E+17,goomba#1378,2017-05-24,"makes good points but at the same time some points seem more like stylistic preferences than universal ""clean code"" practices",,
3.15279E+17,goomba#1378,2017-05-24,"like, don't use threading macros?",,
3.15279E+17,goomba#1378,2017-05-24,don't use higher order functions??,,
3.10522E+17,tosh#0150,2017-05-24,i like how let forms can be a substitute for threading macros,,
3.10522E+17,tosh#0150,2017-05-24,in cases where the transformations yield different kinds of things,,
1.23962E+17,屈才#4590,2017-05-24,"Hey guys, I just started using Clojure this week and I've fallen in love. I came from about 6 years of Java, 2 or so of Scala, and ~6 months of experimenting with Haskell.
I originally picked up Clojure for the sole purpose of web-stuff, but tbh now it's my favorite language.",,
1.23962E+17,屈才#4590,2017-05-24,"That said I have some questions.
Where does clojurescript come into play?",,
2.66305E+17,john#2563,2017-05-24,"Well, aren't you just the ideal candidate 😉",,
1.23962E+17,屈才#4590,2017-05-24,I am 😮?,,
2.66305E+17,john#2563,2017-05-24,"Clojurescript is for when you desire Clojure-like syntax and _some_ Clojure-like semantics, while working in JS land.",,
2.66305E+17,john#2563,2017-05-24,Many of JS' limitations carry over to CLJS,,
1.23962E+17,屈才#4590,2017-05-24,"I went to Clojure desperately trying to avoid Javascript, and I found a happy spot with things like Compojure, Hiccup, etc",,
1.23962E+17,屈才#4590,2017-05-24,But I'm wondering if I'm shooting myself in the foot,,
2.66305E+17,john#2563,2017-05-24,"I don't think so. Designing everything server-side, in CLJ, is still a very valid path.",,
2.66305E+17,john#2563,2017-05-24,SPAs and heavier client-side features are just going to be easier in CLJS,,
1.23962E+17,屈才#4590,2017-05-24,The idea me and my friends are going to be working on is quite similar in presentation to reddit,,
1.23962E+17,屈才#4590,2017-05-24,"The ideas we want to throw in and the stuff behind it is different, but the whole.. ""package"" I guess is just very reddit-y",,
2.66305E+17,john#2563,2017-05-24,"You can def do the whole thing without dipping into CLJS, if you don't want to yet.",,
2.66305E+17,john#2563,2017-05-24,And certain aspects of your reddit-like thing are going to require server-side coordination anyway.,,
2.66305E+17,john#2563,2017-05-24,"Like, authentication and authorization over certain resources",,
1.23962E+17,屈才#4590,2017-05-24,"😅 I'm having lots of fun, but having never done any web-stuff and having never used clojure is making this one hell of an experience, in a good way",,
2.66305E+17,john#2563,2017-05-24,"Starting off, it's a bit of a firehose. Same as any other paradigm, but others are just more normalized.",,
2.66305E+17,john#2563,2017-05-24,If try to imagine how hard Clojure would be if you didn't know Java. That's what CLJS will be like if you don't know JS.,,
2.66305E+17,john#2563,2017-05-24,Knowing the host makes things quicker and easier to get started.,,
1.23962E+17,屈才#4590,2017-05-24,"Makes sense, but tbh Java didn't really help me with Clojure at all

Actually, whenever I try to relate it to Java I get hopelessly confused, but if I just ""go at it"" I guess it's wonderful",,
1.23962E+17,屈才#4590,2017-05-24,"I want to say all my functional exploration helped me get here, but it's so foriegn that I can't even say that much",,
1.23962E+17,屈才#4590,2017-05-24,The Lispyness just felt incredibly intuitive,,
2.66305E+17,john#2563,2017-05-24,"from a certain perspective true. But error messages, for example. You'll be much more familiar with them than someone not familiar with java.",,
2.66305E+17,john#2563,2017-05-24,and interop,,
1.23962E+17,屈才#4590,2017-05-24,"That's true, error messages are kinda hellish I've noticed, and Java exp probs helps",,
1.23962E+17,屈才#4590,2017-05-24,Interop with objects from other libs is hell,,
2.66305E+17,john#2563,2017-05-24,Java devs have much less trouble with interop,,
1.23962E+17,屈才#4590,2017-05-24,"Native-clojure stuff comes like second nature, but using stuff I even know in Java is impossible",,
2.66305E+17,john#2563,2017-05-24,and CLJ/CLJS are very pro-interop languages,,
2.66305E+17,john#2563,2017-05-24,"@屈才 hmm. lots of folks speak fondly of Clojure's interop with Java. I've found it to be pretty smooth, though I still have a few blind spots here and there.",,
1.23962E+17,屈才#4590,2017-05-24,I think I just fail to translate between Java and Clojure ways of thinking effectively,,
1.23962E+17,屈才#4590,2017-05-24,I kind-of loathe java and only use it because by this point I'd have to be a retard to not be great at it,,
1.23962E+17,屈才#4590,2017-05-24,Maybe Scala interop would be easier,,
2.66305E+17,john#2563,2017-05-24,"Algorithmically, yeah, you would usually produce far different solutions, and you wouldn't mix them. But in terms of building wrappers around existing java libs, people tend to be pretty happy with it.",,
1.23962E+17,屈才#4590,2017-05-24,One day I'll be a clojure wizard,,"💯 (1),👌 (1)"
2.66305E+17,john#2563,2017-05-24,"Remember though that anyone can invent new constructs with macros. Because it is infinitely extensible, every wizard can potentially be a noob tomorrow. There's no upper bound on the wizardry.",,
2.66305E+17,john#2563,2017-05-24,_(if that's any consolation)_,,
1.23962E+17,屈才#4590,2017-05-24,Wise words mr wizard,,
2.66305E+17,john#2563,2017-05-24,lol https://www.youtube.com/watch?v=2Op3QLzMgSY,,
2.66305E+17,john#2563,2017-05-24,love that wizard,,
1.23962E+17,屈才#4590,2017-05-25,Was this recorded on an potato?,,
1.92897E+17,bbss#6837,2017-05-25,1986 top gear I think.,,
2.65283E+17,Slackwise#2471,2017-05-25,http://tonsky.me/blog/readable-clojure/,,
2.65283E+17,Slackwise#2471,2017-05-25,"Sooooo, thoughts?",,
2.65283E+17,Slackwise#2471,2017-05-25,Don't agree with the `seq` bit. Or avoiding higher order function composition.,,
2.65283E+17,Slackwise#2471,2017-05-25,"The asterisk for references isn't that bad an idea, but maybe not an asterisk. I dunno.",,
3.15279E+17,goomba#1378,2017-05-25,"Yeah, I had similar thoughts @Slackwise",,
3.15279E+17,goomba#1378,2017-05-25,"I understand his point that you can go overboard with the anonymous scripts and whatnot but as long as you keep your functions small and aren't doing side effects and have tests and adhere to your input/output contract I think mandating that you shouldn't user higher level functions, threading macros, maps/sets as functions, etc is really robbing you of a lot of the power/elegance of the language",,
3.15279E+17,goomba#1378,2017-05-25,I mean... as an example... if I have a vector and then I want a sorted vector,,
3.15279E+17,goomba#1378,2017-05-25,and then let's say I want to add one to each item in the vector,,
2.65283E+17,Slackwise#2471,2017-05-25,A key reason I like Clojure is its expressiveness.,,
3.15279E+17,goomba#1378,2017-05-25,"```clojure
(let [v [2 3 1 4 5]
               sorted-v (sort v)
               sorted-v-plus-one (map #(+ 1 %) sorted-v)]
      sorted-v-plus-one)
```",,
2.65283E+17,Slackwise#2471,2017-05-25,"Probably the most important reason to me, personally.",,
3.15279E+17,goomba#1378,2017-05-25,that strikes me as awfully silly,,
3.15279E+17,goomba#1378,2017-05-25,naming those intermediate values doesn't really do much for you,,
2.65283E+17,Slackwise#2471,2017-05-25,"I do like naming things. It's a critical element for me, but it depends on what's going on.",,
3.15279E+17,goomba#1378,2017-05-25,"```clojure
(-> [2 3 1 4 5]
   (sort)
   (map #(+ 1 %)))
```
I find much nicer",,
2.65283E+17,Slackwise#2471,2017-05-25,"Most of my ""variables"" in other languages are for destructuring and naming things for clarity.",,
3.15279E+17,goomba#1378,2017-05-25,mhm... but renaming every step in a transformation can be really redundant,,
2.65283E+17,Slackwise#2471,2017-05-25,It depends on what the context is.,,
2.65283E+17,Slackwise#2471,2017-05-25,No rule should be 100%.,,
3.15279E+17,goomba#1378,2017-05-25,even that one 😂,,
3.15279E+17,goomba#1378,2017-05-25,paradoooooxxxxx,,
2.65283E+17,Slackwise#2471,2017-05-25,"```JavaScript
return REPLACEMENTS.reduce((text, replacement) => {
  let [regex, substitution] = replacement;
  return text.replace(regex, substitution);
}, text);
```",,
2.65283E+17,Slackwise#2471,2017-05-25,"Like, I just wrote that.",,
3.15279E+17,goomba#1378,2017-05-25,I'm adding more features to my current Python/MySQL/JavaScript 😦 it sucks,,
3.15279E+17,goomba#1378,2017-05-25,can't wait to rewrite this whole thing,,
2.65283E+17,Slackwise#2471,2017-05-25,I could have made it a single line.,,
3.15279E+17,goomba#1378,2017-05-25,is that JSX?,,
2.65283E+17,Slackwise#2471,2017-05-25,Just JS.,,
3.15279E+17,goomba#1378,2017-05-25,"man, I'm behind the times on JS",,
2.65283E+17,Slackwise#2471,2017-05-25,"Yeah, destructuring is nice.",,
2.65283E+17,Slackwise#2471,2017-05-25,And lambda literal.,,
3.15279E+17,goomba#1378,2017-05-25,"I learned how to ""destructure"" in Python... it's hideous",,
3.15279E+17,goomba#1378,2017-05-25,"```Python
(lambda kvs: (lambda k, v: (k, v))(*kvs))({1: 2, 2: 3}.items())
```",,
2.65283E+17,Slackwise#2471,2017-05-25,That's actual Python?,,
3.15279E+17,goomba#1378,2017-05-25,yep,,
2.65283E+17,Slackwise#2471,2017-05-25,Is that an expression then?,,
2.65283E+17,Slackwise#2471,2017-05-25,I assume so.,,
3.15279E+17,goomba#1378,2017-05-25,yeah just an expression... not bound to anything or doing anything,,
3.15279E+17,goomba#1378,2017-05-25,"`;; => ((1, 2), (2, 3))`",,
2.65283E+17,Slackwise#2471,2017-05-25,"I know minimal Python, but that's confusing.",,
2.65283E+17,Slackwise#2471,2017-05-25,Is the asterisk destructuring?,,
2.65283E+17,Slackwise#2471,2017-05-25,Perl/Ruby style.,,
3.15279E+17,goomba#1378,2017-05-25,that's kind of like notation for `apply`,,
3.15279E+17,goomba#1378,2017-05-25,"so 
```Python
def add(a, b):
    return a + b

>>> add(1, 2)
3
>>> add(*[1, 2])
3
```",,
2.65283E+17,Slackwise#2471,2017-05-25,"Um, interesting.",,
3.15279E+17,goomba#1378,2017-05-25,"what I just wrote (the ""destructuring"") is a very non-idiomatic way to write Python",,
2.65283E+17,Slackwise#2471,2017-05-25,Is that for any function?,,
3.15279E+17,goomba#1378,2017-05-25,yeah that's for any function,,
3.15279E+17,goomba#1378,2017-05-25,"it would be equivalent to, say, 
```Python
>>> apply(add, [1, 2])
3
```",,
2.65283E+17,Slackwise#2471,2017-05-25,"Ohhhh, wait, yeah, it's the deglobbing like in Perl/Ruby",,
2.65283E+17,Slackwise#2471,2017-05-25,Ruby has it too of course.,,
3.15279E+17,goomba#1378,2017-05-25,but `apply` isn't an actual function in Python.  Well it is but it's deprecated and doesn't actually work the way you would expect,,
3.15279E+17,goomba#1378,2017-05-25,Idk.  Python is great for a lot of stuff but it's like programming with a box of crayons,,
2.65283E+17,Slackwise#2471,2017-05-25,It's an old Perl idiom.,,
3.15279E+17,goomba#1378,2017-05-25,only so much you can do to make it elegant 😂,,
2.65283E+17,Slackwise#2471,2017-05-25,"`x, y = *[1, 2];`",,
2.65283E+17,Slackwise#2471,2017-05-25,Same thing in all 3 langs.,,
2.65283E+17,Slackwise#2471,2017-05-25,Works for arguments too.,,
3.15279E+17,goomba#1378,2017-05-25,"in Python that sort of ""destructuring"" happens at assignment time, but very limited",,
3.15279E+17,goomba#1378,2017-05-25,"`x, y = [1, 2]` works fine",,
3.15279E+17,goomba#1378,2017-05-25,"but, you can't destructure function params",,
3.15279E+17,goomba#1378,2017-05-25,without a lot of annoying work like making specialized decorators or doing it within the function body,,
2.65283E+17,Slackwise#2471,2017-05-25,http://blog.honeybadger.io/ruby-splat-array-manipulation-destructuring/,,
2.65283E+17,Slackwise#2471,2017-05-25,"Yeah, same thing entirely.",,
3.15279E+17,goomba#1378,2017-05-25,I'm gonna have to learn Ruby soon... not overly looking forward to that,,
3.15279E+17,goomba#1378,2017-05-25,since I want to move to Chef for deployments,,
3.15279E+17,goomba#1378,2017-05-25,that's pretty much one of the only things that Clojure is missing from its stack,,
3.15279E+17,goomba#1378,2017-05-25,"I'm amazed that I can replace my database, back end, AND front end with Clojure",,
3.15279E+17,goomba#1378,2017-05-25,if only I could replace my devops too that would be heavenly,,
2.65283E+17,Slackwise#2471,2017-05-25,"Man, guess I didn't know the asterisk was implied in some cases. Hah.",,
2.65283E+17,Slackwise#2471,2017-05-25,Going from Python to Ruby is cake.,,
3.15279E+17,goomba#1378,2017-05-25,well that is one of the gorgeous things about Clojure ... all the syntax is dead simple,,
2.65283E+17,Slackwise#2471,2017-05-25,The reverse is a bit hard because Python is purposely more restrictive.,,
3.15279E+17,goomba#1378,2017-05-25,i'm really lucky that for whatever reason Python was my first language,,
3.15279E+17,goomba#1378,2017-05-25,I don't think I could learn it as a second language,,
3.15279E+17,goomba#1378,2017-05-25,some of the stuff in it seems like madness coming from other languages,,
2.65283E+17,Slackwise#2471,2017-05-25,I like it for small programs. It's so damn clean.,,
2.65283E+17,Slackwise#2471,2017-05-25,I often incidentally write valid Python. Lol,,
3.15279E+17,goomba#1378,2017-05-25,hahahaha,,
2.65283E+17,Slackwise#2471,2017-05-25,Even the colon is intuitive.,,
3.15279E+17,goomba#1378,2017-05-25,"yeah it's great for certain operations.  I love it for devops, file system work, and certain kinds of statistics and machine learning",,
2.65283E+17,Slackwise#2471,2017-05-25,I love Python's whitespace sensitivity.,,
2.65283E+17,Slackwise#2471,2017-05-25,I saw an s-expression preprocessor that used whitespace and indentation.,,
2.65283E+17,Slackwise#2471,2017-05-25,It was super clean.,,
2.65283E+17,Slackwise#2471,2017-05-25,I think they called them i-expressions,,
3.15279E+17,goomba#1378,2017-05-25,in Python?,,
2.65283E+17,Slackwise#2471,2017-05-25,In Scheme.,,
3.15279E+17,goomba#1378,2017-05-25,ah,,
2.65283E+17,Slackwise#2471,2017-05-25,Made your Scheme look Pythony.,,
3.15279E+17,goomba#1378,2017-05-25,😄,,
2.65283E+17,Slackwise#2471,2017-05-25,https://srfi.schemers.org/srfi-119/srfi-119.html,,
2.65283E+17,Slackwise#2471,2017-05-25,,https://cdn.discordapp.com/attachments/315388260987830272/317365823435964426/image-2.png,
2.65283E+17,Slackwise#2471,2017-05-25,"My latest idea was to just take your syntax highlighting and make parens really light grey. So they're visible, but don't stand out as much.",,
2.65283E+17,Slackwise#2471,2017-05-25,All your symbols would now stand out.,,
3.15279E+17,goomba#1378,2017-05-25,"ah, interesting",,
3.15279E+17,goomba#1378,2017-05-25,looking at scheme syntax now,,
2.65283E+17,Slackwise#2471,2017-05-25,It's just sexyexpressions with no reader syntax for vectors/maps.,,
3.15279E+17,goomba#1378,2017-05-25,"someone in here recommened ""the reasoned schemer"" as a good primer for logic programming",,
2.65283E+17,Slackwise#2471,2017-05-25,All the schemer books are supposedly good. I have them on my phone ready to read.,,
3.15279E+17,goomba#1378,2017-05-25,you know it just occured to me that one of the strongest selling points of Python is also one of its biggest weaknesses,,
3.15279E+17,goomba#1378,2017-05-25,"""it's really close to English""",,
2.65283E+17,Slackwise#2471,2017-05-25,"I guess yes and no. Clojure is pretty Englishy, sort of.",,
3.15279E+17,goomba#1378,2017-05-25,it is if you're used to reading it,,
3.15279E+17,goomba#1378,2017-05-25,but for someone with little programming background prefix notation isn't natural,,
2.65283E+17,Slackwise#2471,2017-05-25,The most English language I know is the VB family.,,
2.65283E+17,Slackwise#2471,2017-05-25,"```VB
If Foo IsNot Nothing AndAlso Foo <> """" Then
    DoSomething
End If
```",,
3.15279E+17,goomba#1378,2017-05-25,haha,,
3.15279E+17,goomba#1378,2017-05-25,"```Python
if foo is not None and isinstance(foo, str):
    do_something()
```",,
2.65283E+17,Slackwise#2471,2017-05-25,It's pleasant to type because you aren't using as many brackets and special chars.,,
3.15279E+17,goomba#1378,2017-05-25,would be the Python version,,
2.65283E+17,Slackwise#2471,2017-05-25,"On the flip side, C# is a mess.",,
3.15279E+17,goomba#1378,2017-05-25,oh... yeah... the C* languages,,
3.15279E+17,goomba#1378,2017-05-25,I've just made peace with the fact that I'll never do C++,,
3.15279E+17,goomba#1378,2017-05-25,"it's not a language, it's a career",,
3.15279E+17,goomba#1378,2017-05-25,"so many libraries, so many idioms",,
2.65283E+17,Slackwise#2471,2017-05-25,It's a mess. It's the opposite of Clojure.,,
2.65283E+17,Slackwise#2471,2017-05-25,Clojure has given me peace of mind.,,
2.65283E+17,Slackwise#2471,2017-05-25,"""They're all values! Pass em around!""",,
2.65283E+17,Slackwise#2471,2017-05-25,Then I go back to the other languages and I'm terrified of passing references.,,
2.43147E+17,hagus#1255,2017-05-25,"@Slackwise what about AppleScript for ""english"" languages",,
2.65283E+17,Slackwise#2471,2017-05-25,"Yeah, that too.",,
2.65283E+17,Slackwise#2471,2017-05-25,That was *extremely* English-y.,,
2.43147E+17,hagus#1255,2017-05-25,"Horrible, horrible stuff ... although I know people who got used to it",,
2.65283E+17,Slackwise#2471,2017-05-25,It drove me crazy.,,
2.65283E+17,Slackwise#2471,2017-05-25,I remember writing an IRC script to pull my currently playing song from iTunes back in the day using it. It was awful.,,
2.65283E+17,Slackwise#2471,2017-05-25,I also found some bridges between the API and other languages. I think i eventually had it all working in Perl.,,
2.43147E+17,hagus#1255,2017-05-25,Yeah there are scripting bridges to the underlying apple events,,
2.65283E+17,Slackwise#2471,2017-05-25,(That was like 2002 though.),,
2.43147E+17,hagus#1255,2017-05-25,"quartz composer was super nice though, not entirely dissimilar from Apache NiFi in some ways, but for graphics rather than data",,
2.65283E+17,Slackwise#2471,2017-05-25,"I assume Automator made most scripts obsolete, or did it generate AppleScript?",,
2.65283E+17,Slackwise#2471,2017-05-25,I don't recall ever using Automator for anything.,,
2.43147E+17,hagus#1255,2017-05-25,Automator bangs on the underlying apple events. AppleScript lives on but it's basically there for compatibility,,
2.65283E+17,Slackwise#2471,2017-05-25,It's strange that AutoHotKey isn't a standard Windows utility.,,
2.43147E+17,hagus#1255,2017-05-25,what does it do?,,
2.65283E+17,Slackwise#2471,2017-05-25,"Same thing, effectively.",,
2.65283E+17,Slackwise#2471,2017-05-25,It's a WinForms and keybinding automator.,,
2.65283E+17,Slackwise#2471,2017-05-25,A weaker Automator.,,
2.43147E+17,hagus#1255,2017-05-25,AppleEvents are a little more sophisticated than that ... basically each app can register its own automation hooks,,
2.65283E+17,Slackwise#2471,2017-05-25,Yeah.,,
2.43147E+17,hagus#1255,2017-05-25,"If you want to bang on a window with mouse clicks and such, I believe you're actually sending apple events to the window server",,
2.65283E+17,Slackwise#2471,2017-05-25,X11 has some crazy flexibility.,,
2.65283E+17,Slackwise#2471,2017-05-25,I know there is a WM written in Emacs.,,
2.65283E+17,Slackwise#2471,2017-05-25,You can have Emacs handle windows.,,
2.65283E+17,Slackwise#2471,2017-05-25,https://github.com/ch11ng/exwm/blob/master/README.md,,
2.43147E+17,hagus#1255,2017-05-25,"it's not clear to me how much of that is deliberate API vs. cool hacks people have done 😃 I've not looked into it much, although I would not mind a machine that just booted straight into emacs …",,
2.65283E+17,Slackwise#2471,2017-05-25,X11 is powerful but a mess.,,
2.65283E+17,Slackwise#2471,2017-05-25,Especially security-wise.,,
2.65283E+17,Slackwise#2471,2017-05-25,My goal is to make a faux Lisp Machine.,,
2.65283E+17,Slackwise#2471,2017-05-25,So I've been assembling the pieces.,,
2.65283E+17,Slackwise#2471,2017-05-25,GuixSD plus Emacs and that WM.,,
2.65283E+17,Slackwise#2471,2017-05-25,And then a cobbled together browser using the new GTK controls features in Emacs.,,
2.65283E+17,Slackwise#2471,2017-05-25,That means Scheme for the init/daemon manager.,,
2.65283E+17,Slackwise#2471,2017-05-25,As well as the package manager.,,
2.65283E+17,Slackwise#2471,2017-05-25,"Then Emacs Lisp for your desktop and ""apps"".",,
2.65283E+17,Slackwise#2471,2017-05-25,And there are Emacs packages to manage GuixSD.,,
2.43147E+17,hagus#1255,2017-05-25,I have a feeling I saw a similar type of thing at one point,,
2.65283E+17,Slackwise#2471,2017-05-25,"Well, this would be super useable.",,
2.65283E+17,Slackwise#2471,2017-05-25,In that Guix is based on Nix.,,
2.65283E+17,Slackwise#2471,2017-05-25,"In reality, you also need a repo with non-GPL'd  packages, and probably Chrome itself, alongside Emacs.",,
2.65283E+17,Slackwise#2471,2017-05-25,Unless you want to be a purist.,,
2.65283E+17,Slackwise#2471,2017-05-25,I think the GtkWebClient uses WebKit at least.,,
2.43147E+17,hagus#1255,2017-05-25,I really liked nix the few times I tried it … I met John Wiegley at an emacs meetup and heard him talking about how he uses it. I was instantly sold.,,
2.65283E+17,Slackwise#2471,2017-05-25,"Yeah, I was too. Then shortly after discovered Guix.",,
2.65283E+17,Slackwise#2471,2017-05-25,"So I'm like ""Oh, it's Nix but all in Scheme?! Sign me up!""",,
2.65283E+17,Slackwise#2471,2017-05-25,I can't go back to Gentoo anymore.,,
2.65283E+17,Slackwise#2471,2017-05-25,Gentoo's Portage is as good as non-functional package managers get.,,
2.66305E+17,john#2563,2017-05-25,_wishes there were a Clojuix_,,
2.65283E+17,Slackwise#2471,2017-05-25,But man is it a joke compared to Nix.,,
2.65283E+17,Slackwise#2471,2017-05-25,"Gimme a Clojure running chip, Clojure based kernel/OS, and Emacs.",,
2.43147E+17,hagus#1255,2017-05-25,"I think homebrew is the best non-functional package manager out there,",,
2.43147E+17,hagus#1255,2017-05-25,sounds like you want a Clojure TempleOS 😉,,
2.65283E+17,Slackwise#2471,2017-05-25,Gentoo is what builds Chrome OS.,,
2.65283E+17,Slackwise#2471,2017-05-25,I was a Gentoo wizard. It's hard to compare anything else to it. It has basically all the features you need.,,
2.65283E+17,Slackwise#2471,2017-05-25,But it still fails at a number of hard things.,,
2.65283E+17,Slackwise#2471,2017-05-25,And configuration is still a pain.,,
2.65283E+17,Slackwise#2471,2017-05-25,You had to run diff merges on config files.,,
2.65283E+17,Slackwise#2471,2017-05-25,Guix exposes config as Scheme.,,
2.66305E+17,john#2563,2017-05-25,Looks like somebody is still hacking on JNode: https://github.com/jnode/jnode,,
2.66305E+17,john#2563,2017-05-25,a whole OS written in Java,,
1.57759E+17,Quixoticelixer#6239,2017-05-25,oh lord help me no,,
2.66305E+17,john#2563,2017-05-25,just wrap it 😉,,
3.01795E+17,arichiardi#2361,2017-05-25,@Slackwise NixOs Looks perfect about the configuration side,,
2.65283E+17,Slackwise#2471,2017-05-25,"@arichiardi Yeah, but, a lot of it ends up being bash because Nix expressions are limited.",,
2.65283E+17,Slackwise#2471,2017-05-25,Whereas Guix fixes that by just using Scheme.,,
2.65283E+17,Slackwise#2471,2017-05-25,So any package can define configs in Scheme.,,
2.65283E+17,Slackwise#2471,2017-05-25,"It's all Scheme, even up to and including the init system, and daemon manager.",,
2.65283E+17,Slackwise#2471,2017-05-25,Nix just uses systemd,,
2.65283E+17,Slackwise#2471,2017-05-25,And a whole load of bash.,,
2.65283E+17,Slackwise#2471,2017-05-25,(As far as I saw.),,
2.65283E+17,Slackwise#2471,2017-05-25,It also means some of the nix expressions have snippets of bash.,,
2.65283E+17,Slackwise#2471,2017-05-25,And aren't purely functional.,,
3.01795E+17,arichiardi#2361,2017-05-25,wow guix is nice,,
2.65283E+17,Slackwise#2471,2017-05-25,"Its flaws are: (a) still in alpha state, and (b) officially, the distribution, will probably never host non-GPL apps.",,
2.65283E+17,Slackwise#2471,2017-05-25,"There's a way to load your own packages, of course.",,
2.65283E+17,Slackwise#2471,2017-05-25,So I expect a fork eventually.,,
2.65283E+17,Slackwise#2471,2017-05-25,"Which will just include Steam and NVIDIA drivers and Chrome, etc.",,
2.65283E+17,Slackwise#2471,2017-05-25,And probably a nice installer.,,
2.65283E+17,Slackwise#2471,2017-05-25,It feels inevitable.,,
2.65283E+17,Slackwise#2471,2017-05-25,Because I will do it if I have to!,,
3.15279E+17,goomba#1378,2017-05-25,I know I'm late to the party but I freaking love AutoHotKey,,
3.15279E+17,goomba#1378,2017-05-25,it's the only thing that makes windows occasionally bearable,,
3.15279E+17,goomba#1378,2017-05-25,autokey for Linux is pretty cool but not quite as powerful... of course... since it's Linux you don't really need AHK-type stuff for many things that you can just configure normally because Linux,,
2.65283E+17,Slackwise#2471,2017-05-25,Yep. AHK was an absolute asset automating proprietary medical software back at my last company.,,
3.15279E+17,goomba#1378,2017-05-25,whoaaa!!,,
3.15279E+17,goomba#1378,2017-05-25,you used AHK in production!?,,
3.15279E+17,goomba#1378,2017-05-25,that's awesome!!,,
2.65283E+17,Slackwise#2471,2017-05-25,Yep.,,
2.66305E+17,john#2563,2017-05-25,"Yeah, I've automated some business apps with AHK. Also selenium lol",,
3.15279E+17,goomba#1378,2017-05-25,wowww super cool 😄,,
2.65283E+17,Slackwise#2471,2017-05-25,It was used to glue certain systems together.,,
2.65283E+17,Slackwise#2471,2017-05-25,Or to automate certain steps.,,
2.65283E+17,Slackwise#2471,2017-05-25,Like performing data exports.,,
3.15279E+17,goomba#1378,2017-05-25,seriously that's pretty amazing,,
2.65283E+17,Slackwise#2471,2017-05-25,I hacked together some crazy stuff over there. Lol,,
2.65283E+17,Slackwise#2471,2017-05-25,Just before I left I was rewriting a terminal emulator data entry system.,,
2.65283E+17,Slackwise#2471,2017-05-25,I created a functional recursive UI menu​ descent algorithm for this one app.,,
2.65283E+17,Slackwise#2471,2017-05-25,That was fun.,,
2.65283E+17,Slackwise#2471,2017-05-25,Using pattern matching too.,,
2.65283E+17,Slackwise#2471,2017-05-25,I didn't finish it.,,
2.65283E+17,Slackwise#2471,2017-05-25,Had to deal with the ICD-9 to ICD-10 transition.,,
2.65283E+17,Slackwise#2471,2017-05-25,Then I got a new job.,,
2.65283E+17,Slackwise#2471,2017-05-25,/me shrugs.,,
2.65283E+17,Slackwise#2471,2017-05-25,AHK saved countless hours.,,
3.15279E+17,goomba#1378,2017-05-25,so what web stack is everyone using these days? anyone doing a clojure-based stack?,,
2.65283E+17,Slackwise#2471,2017-05-25,I wish.,,
3.15279E+17,goomba#1378,2017-05-25,hahaha me too 😛,,
3.15279E+17,goomba#1378,2017-05-25,luckily for me I'm in a position to totally switch over to clojure as long as I'm willing to do the work,,
2.65283E+17,Slackwise#2471,2017-05-25,I'm in no position to do anything at all here. I'm just a code monkey now.,,
2.65283E+17,Slackwise#2471,2017-05-25,Went from lead dev to code monkey.,,😅 (1)
1.57759E+17,Quixoticelixer#6239,2017-05-25,i need a programmable keyboard,,
2.65283E+17,Slackwise#2471,2017-05-25,I have one.,,
2.65283E+17,Slackwise#2471,2017-05-25,I'm selling it.,,
2.65283E+17,Slackwise#2471,2017-05-25,Likely.,,
1.57759E+17,Quixoticelixer#6239,2017-05-25,why,,
2.65283E+17,Slackwise#2471,2017-05-25,Well I'm switching to a board with different switches.,,
2.65283E+17,Slackwise#2471,2017-05-25,I will sell the board I like less.,,
2.66305E+17,john#2563,2017-05-25,I've only done programming as a side gig for years. Sometimes helping small businesses automate some business processes. Some integrations. I doubt I'll ever program full time if I can't do it in Clojure.,,
1.57759E+17,Quixoticelixer#6239,2017-05-25,what switches,,
2.65283E+17,Slackwise#2471,2017-05-25,Which will likely be my Ducky One TKL RGB with MX Browns.,,
2.65283E+17,Slackwise#2471,2017-05-25,It's a fantastic board.,,
2.65283E+17,Slackwise#2471,2017-05-25,I'm just switching to Clears.,,
2.65283E+17,Slackwise#2471,2017-05-25,It has an ARM chip on it.,,
2.65283E+17,Slackwise#2471,2017-05-25,And full macro support.,,
2.65283E+17,Slackwise#2471,2017-05-25,And programming.,,
2.65283E+17,Slackwise#2471,2017-05-25,With intervals between every keystroke.,,
2.65283E+17,Slackwise#2471,2017-05-25,Or even exact input speed simulation.,,
1.57759E+17,Quixoticelixer#6239,2017-05-25,browns..,,
1.57759E+17,Quixoticelixer#6239,2017-05-25,bler,,
2.65283E+17,Slackwise#2471,2017-05-25,All hardware. No software.,,
2.65283E+17,Slackwise#2471,2017-05-25,I like Browns. They're just really light.,,
2.65283E+17,Slackwise#2471,2017-05-25,"I'm probably gonna enjoy my Clear board more, even though it's a downgrade in every other way. (Except keycaps.)",,
2.65283E+17,Slackwise#2471,2017-05-25,"@Quixoticelixer Either way, your best bet is a Corsair if you want software interacting macros, otherwise either a Ducky or POK3R, which have hardware enabled programming.",,
1.57759E+17,Quixoticelixer#6239,2017-05-25,yeah i think i'll go ffor something likea pok3r,,
1.57759E+17,Quixoticelixer#6239,2017-05-25,or a OLK,,
2.65283E+17,Slackwise#2471,2017-05-25,I might be crazy enough to resolder switches on my Ducky.,,
1.57759E+17,Quixoticelixer#6239,2017-05-25,I have greys on my current keyboard,,
2.65283E+17,Slackwise#2471,2017-05-25,"Clears on all the main keys, Reds on modifiers.",,
2.65283E+17,Slackwise#2471,2017-05-25,Maybe a super heavy switch for the spacebar.,,
2.65283E+17,Slackwise#2471,2017-05-25,I also want to make my own board.,,
2.65283E+17,Slackwise#2471,2017-05-25,A 60% with a RasPi or similar shoved inside.,,
2.65283E+17,Slackwise#2471,2017-05-25,Maybe make a top cover that doubles as a display.,,
2.65283E+17,Slackwise#2471,2017-05-25,Have a portable SSH machine.,,
2.65283E+17,Slackwise#2471,2017-05-25,Fun hardware project.,,
1.57759E+17,Quixoticelixer#6239,2017-05-25,mm,,
1.23962E+17,屈才#4590,2017-05-25,I have this bot that adds all messages in the servers it's in to a db and I made markov chains of users with clojure,,😆 (1)
1.23962E+17,屈才#4590,2017-05-25,Absolutely beautiful,,
2.65283E+17,Slackwise#2471,2017-05-25,Oh no. Nobody I talk to is real!,,
2.65283E+17,Slackwise#2471,2017-05-25,Is this some form of e-gaslighting?!,,
2.65283E+17,Slackwise#2471,2017-05-25,https://news.ycombinator.com/item?id=14418013,,
2.65283E+17,Slackwise#2471,2017-05-25,What is this nonsense?!,,
2.65283E+17,Slackwise#2471,2017-05-25,Someone Fox News me with spin that will make me happy!,,
3.01795E+17,arichiardi#2361,2017-05-25,you should not even share that man 😉 Fake news ah ah!,,"😘 (1),👌 (1)"
1.23962E+17,屈才#4590,2017-05-25,"So, who wants to try and write a repl-bot from the repl provided by the repl-bot",,
2.65283E+17,Slackwise#2471,2017-05-25,LOL,,
1.57759E+17,Quixoticelixer#6239,2017-05-25,did you read it?,,
2.65283E+17,Slackwise#2471,2017-05-25,It's sitting on my other screen while I've been watching Twin Peaks and eating dinner.,,
1.57759E+17,Quixoticelixer#6239,2017-05-25,its about how clojuer isn't dead,,
2.65283E+17,Slackwise#2471,2017-05-25,"Oh, good.",,
2.65283E+17,Slackwise#2471,2017-05-25,I read the title and got scared.,,
2.65283E+17,Slackwise#2471,2017-05-25,And cried a little.,,
2.65283E+17,Slackwise#2471,2017-05-25,My worldview can't be shattered.,,
2.65283E+17,Slackwise#2471,2017-05-25,It's so fragile.,,
2.65283E+17,Slackwise#2471,2017-05-25,(I can't even tell if I'm being sarcastic.),,
2.65283E+17,Slackwise#2471,2017-05-25,https://www.youtube.com/watch?v=C2QrWzsfghA,,
1.92897E+17,bbss#6837,2017-05-25,yeah I don't like the clickbaityness of all these recent discussion titles. But fair points are being discussed.,,
3.01795E+17,arichiardi#2361,2017-05-26,"Agree points are fair, and will be addressed at some point. When folks will have time to spend on some good tooling. I am talking to myself here probably 😀",,
1.90548E+17,seancorfield#3069,2017-05-26,Not just yourself 😃,,
1.90548E+17,seancorfield#3069,2017-05-26,I think it's an interesting observation that the mailing list traffic has slowed as the mix of hobbyist vs professional in the community seems to have shifted. I think a lot of what is being surfaced in these discussions is just the natural maturing of the language and its ecosystem.,,
1.90548E+17,seancorfield#3069,2017-05-26,"We're in a new world where the number of languages just keeps growing so individual languages are not going to follow either the boom or bust trajectories of old -- there are now middle-ground trajectories that are perfectly healthy for languages to follow. Haskell has ""avoided success at all costs"" and is probably more widespread now than it has ever been (after 25+ years) but no one would claim Haskell is anywhere close to going mainstream (would they?).",,
3.16276E+17,cminus#2564,2017-05-26,I'm content with the tooling.  What am I missing?  Editor attached repl is some strong tooling,,
2.65283E+17,Slackwise#2471,2017-05-26,"I haven't checked the latest Cursive progress, but is there an interactive debugger you can step through?",,
2.65283E+17,Slackwise#2471,2017-05-26,Can we make decent Android apps with Clojure yet?,,
2.65283E+17,Slackwise#2471,2017-05-26,Refactoring tools? (I guess Cursive would bring that too.),,
2.65283E+17,Slackwise#2471,2017-05-26,Probably the same with profiling.,,
3.16276E+17,cminus#2564,2017-05-26,"refactoring tools are very introspective.  I'm not sure what that looks like for Clojure.  Profiling seems fine with existing tools, but  some help demangling clojure fn names would be nice",,
2.65283E+17,Slackwise#2471,2017-05-26,I want to see the flow of data through a function. Like watch a map getting transformed step by step. That'd be cool.,,
2.65283E+17,Slackwise#2471,2017-05-26,"Each step, see a diff of what changed.",,
2.65283E+17,Slackwise#2471,2017-05-26,Like highlighting an element.,,
2.65283E+17,Slackwise#2471,2017-05-26,And being able to see what it changed from.,,
2.65283E+17,Slackwise#2471,2017-05-26,Would be a good learning tool as well.,,
2.65283E+17,Slackwise#2471,2017-05-26,"Basically, a fancy Watch window.",,
2.65283E+17,Slackwise#2471,2017-05-26,I need to see how far Cursive has progressed.,,
2.65283E+17,Slackwise#2471,2017-05-26,All I've used so far is LightTable.,,
3.16276E+17,cminus#2564,2017-05-26,http://bpiel.github.io/sayid/,,
3.16276E+17,cminus#2564,2017-05-26,This has been on my list to try,,
2.65283E+17,Slackwise#2471,2017-05-26,That looks cool. I really gotta get an Emacs config going. Spacemacs is neat but I have my own ideas.,,
3.16276E+17,cminus#2564,2017-05-26,I can't quit vim.  The mucle memory runs deep! vim-fireplace is easy to get going,,
2.65283E+17,Slackwise#2471,2017-05-26,I ain't quitting Vim. I've been using it since 98.,,
2.65283E+17,Slackwise#2471,2017-05-26,"As soon as I'm writing blocks of code or text, I start to try and use commands.",,
2.65283E+17,Slackwise#2471,2017-05-26,No matter where.,,
2.65283E+17,Slackwise#2471,2017-05-26,I plan to do my own Spacemacs essentially.,,
2.65283E+17,Slackwise#2471,2017-05-26,But only with the bits I want.,,
2.65283E+17,Slackwise#2471,2017-05-26,I want to very aggressively define buffer behavior.,,
2.65283E+17,Slackwise#2471,2017-05-26,So I'll be adapting some of the Emacs buffer/window utils to keep things organized.,,
2.65283E+17,Slackwise#2471,2017-05-26,"And just binding them to Ctrl-W in evil, otherwise Ctrl-Space globally.",,
2.65283E+17,Slackwise#2471,2017-05-26,I want to also manage my desktop with Win-Space.,,
3.16276E+17,cminus#2564,2017-05-26,"haha, 1994 for me!",,
2.65283E+17,Slackwise#2471,2017-05-26,So the same window actions on Win-Space will work inside Emacs with Ctrl-Space,,
2.65283E+17,Slackwise#2471,2017-05-26,I'll mostly map them to Vims ^W behavior.,,
2.65283E+17,Slackwise#2471,2017-05-26,"Or around it, at least.",,
2.65283E+17,Slackwise#2471,2017-05-26,I was too young in 94. :P,,
2.65283E+17,Slackwise#2471,2017-05-26,98 would place me in like 7/8th grade or so.,,
2.65283E+17,Slackwise#2471,2017-05-26,I honestly spent several months using a text only console around then.,,
2.65283E+17,Slackwise#2471,2017-05-26,"You could do everything but view images. But, I was on a 56k and a Pentium Pro.",,
2.65283E+17,Slackwise#2471,2017-05-26,Sooooooo,,
2.65283E+17,Slackwise#2471,2017-05-26,It didn't matter.,,
2.65283E+17,Slackwise#2471,2017-05-26,I dumped Windows 98 for Slackware.,,
2.65283E+17,Slackwise#2471,2017-05-26,First thing I ever did on Linux was compile a kernel to get my USRobotics 56k V92 PCI modem working on an ISA bus mobo.,,
3.01795E+17,arichiardi#2361,2017-05-26,Cursive is still needing some polishing​ regarding cljs but it is going to get there (last I checked),,
3.01795E+17,arichiardi#2361,2017-05-26,A new version came out not long ago,,
2.65283E+17,Slackwise#2471,2017-05-26,"In the process of getting all the kernel headers from an RPM, I discovered RPM hell.",,
2.65283E+17,Slackwise#2471,2017-05-26,And a friend recommended Slackware and gave me discs.,,
3.01795E+17,arichiardi#2361,2017-05-26,Am an Emacs user but an eterogeneus team needs other means,,
2.65283E+17,Slackwise#2471,2017-05-26,Oh and a copy of the kernel source on CD.,,
2.65283E+17,Slackwise#2471,2017-05-26,Now I'm moving to Emacs because evil is awesome.,,
3.01795E+17,arichiardi#2361,2017-05-26,I tried to push Emacs with Clojure but it was not a good idea 😀,,
2.65283E+17,Slackwise#2471,2017-05-26,"I love the hackability, conceptually.",,
2.65283E+17,Slackwise#2471,2017-05-26,VimL is an abomination.,,
2.65283E+17,Slackwise#2471,2017-05-26,And Vim plugins are awful.,,
2.65283E+17,Slackwise#2471,2017-05-26,Fake Vim text objects too.,,
2.65283E+17,Slackwise#2471,2017-05-26,"Also, I drank the koolaid on Lisps.",,
2.65283E+17,Slackwise#2471,2017-05-26,I am working on porting my custom theme to Spacemacs. Gonna spend all weekend probably hacking together my own config stealing what I like about Spacemacs.,,
2.65283E+17,Slackwise#2471,2017-05-26,Have a new keyboard coming in so it'll be extra pleasant a process. :P,,
2.65283E+17,Slackwise#2471,2017-05-26,Maybe I can finally learn paredit and/or parinfer.,,
2.65283E+17,Slackwise#2471,2017-05-26,I believe someone ported the paren text objects from Vim to Evil.,,
2.65283E+17,Slackwise#2471,2017-05-26,I guess I'll learn those if anything.,,
3.16276E+17,cminus#2564,2017-05-26,@Slackwise You have a similar Linux origin story to mine! Although I installed Linux instead of Win95.  I didn't want to give up the DOS comand line.  I even went so far as to configure a DOS tcp/ip stack so I could play network quake.   Feeding my PC those 4 slackware floppies changed everything.  That and the Sun Sparcstations in the CS lab.,,
2.65283E+17,Slackwise#2471,2017-05-26,"Hah, yeah. I was a kid tho. I did what I could with what I had.",,
2.65283E+17,Slackwise#2471,2017-05-26,I just had my hand me down desktop.,,
2.65283E+17,Slackwise#2471,2017-05-26,And my old 486DX hand me down laptop.,,
2.65283E+17,Slackwise#2471,2017-05-26,I used Slackware for ages.,,
2.65283E+17,Slackwise#2471,2017-05-26,Until I got a PowerBook G4. Still used Slack.,,
2.65283E+17,Slackwise#2471,2017-05-26,Moved to Gentoo once I had an okay PC.,,
2.65283E+17,Slackwise#2471,2017-05-26,That was like 2004.,,
2.66305E+17,john#2563,2017-05-26,Yeah I got into slack/debian around 2003. The button on the cd tray still didn't work yet. You had to `umount` to get the thing to open lol,,
2.65283E+17,Slackwise#2471,2017-05-26,I remember also an eject command. :P,,
2.66305E+17,john#2563,2017-05-26,lol,,
2.66305E+17,john#2563,2017-05-26,"And if you hung your system, there was no getting that cd tray open without restarting into bios",,
2.66305E+17,john#2563,2017-05-26,or a butter knife 😃,,
2.65283E+17,Slackwise#2471,2017-05-26,I miss the good old times when w3m was good enough for 90% of browsing.,,
2.65283E+17,Slackwise#2471,2017-05-26,I used to hyperfocus by using the local console and just text apps.,,
2.65283E+17,Slackwise#2471,2017-05-26,I think Win-Arrows was bound to changing ttys in Gentoo at least.,,
2.66305E+17,john#2563,2017-05-26,They started cramming js in there.,,
2.66305E+17,john#2563,2017-05-26,You could probably throw V8 under w3m 😉,,
2.65283E+17,Slackwise#2471,2017-05-26,Well Emacs now has Gtk support.,,
2.65283E+17,Slackwise#2471,2017-05-26,So you can probably render some pages in GtkWebClient or whatever.,,
2.65283E+17,Slackwise#2471,2017-05-26,"You can live the text life again, maybe, with some exceptions.",,
2.65283E+17,Slackwise#2471,2017-05-26,"I want to, at least.",,
2.66305E+17,john#2563,2017-05-26,_goes and builds a reactive text app with CLJS/React/W3M/V8_,,
2.65283E+17,Slackwise#2471,2017-05-26,Hahaha,,
2.65283E+17,Slackwise#2471,2017-05-26,Retrolectron,,
2.65283E+17,Slackwise#2471,2017-05-26,Elretron,,
2.65283E+17,Slackwise#2471,2017-05-26,El... Re.. retro... Retro elec... I don't know.,,
3.15279E+17,goomba#1378,2017-05-26,realize I'm late to the party (again) but cursive has step through debugging,,
2.65283E+17,Slackwise#2471,2017-05-26,That's excellent. I need to really try Cursive again.,,
2.65283E+17,Slackwise#2471,2017-05-26,I last used it as a plug-in.,,
3.15279E+17,goomba#1378,2017-05-26,it's still a plug in but it's a really well integrated one,,
3.15279E+17,goomba#1378,2017-05-26,to be fair it's imperfect as far as step through debugging goes but it's getting better,,
3.15279E+17,goomba#1378,2017-05-26,hey who is this Zack Maril guy?,,
3.15279E+17,goomba#1378,2017-05-26,and why is he so unhappy?,,
1.90548E+17,seancorfield#3069,2017-05-26,Perhaps we need an #editors channel here? Seems to be a lot of editor discussion and almost no Clojure discussion 😃,,
1.90548E+17,seancorfield#3069,2017-05-26,(Looking at this from the point of view of whether Discord would be a suitable Slack replacement/addition -- and Slack works because people keep stuff on topic),,
1.90548E+17,seancorfield#3069,2017-05-26,I created #editors ...,,
1.90548E+17,seancorfield#3069,2017-05-26,(there's already an #emacs channel but it sort of needs its own space usually),,
3.15279E+17,goomba#1378,2017-05-26,hahaha fair enough... although I think the less disciplined nature is in some ways more appealing to me and I'm taking advantage of that while it's still small 😛,,
2.65283E+17,Slackwise#2471,2017-05-26,Move it up nearby #emacs,,
3.15279E+17,goomba#1378,2017-05-26,but you are correct.,,
3.15279E+17,goomba#1378,2017-05-26,"Also, welcome @seancorfield !  It's quite an honor having you here 😄",,
1.90548E+17,seancorfield#3069,2017-05-26,@Slackwise  I didn't realize the ordering here affects everyone's view of the channel list? That seems... precarious...,,
2.65283E+17,Slackwise#2471,2017-05-26,"This channel is always going to be a bit weird though because everything on this Discord is tangentially related to Clojure, if not just everyone's association with each other.",,
1.90548E+17,seancorfield#3069,2017-05-26,"@goomba Thanks. I figure after all the discussion on the clojure@ mailing list (and the #community-development channel in Slack), I should make an effort to try out Matrix/Riot and Discord and see how they compare.",,
1.90548E+17,seancorfield#3069,2017-05-26,"Well @Slackwise comparing to #clojure on Slack, that's kept focused on Clojure programming/language stuff to improve signal/noise. If we want to see if Discord _could_ supplant Slack, I expect folks will want that S/N ratio or else they won't bother. And of course this itself is a meta-discussion that probably belongs in another channel 😃",,
2.65283E+17,Slackwise#2471,2017-05-26,"Sure. I'll help police that, if anything.",,
2.65283E+17,Slackwise#2471,2017-05-26,Can we assume #general is anything goes?,,
1.90548E+17,seancorfield#3069,2017-05-26,"Yeah, that sounds fair.",,👍 (1)
2.66305E+17,john#2563,2017-05-26,"Yeah, we've been abusing the #topic for a while since nobody was here 😃",,
2.66305E+17,john#2563,2017-05-26,Nice to get the conversation going though,,
2.43147E+17,hagus#1255,2017-05-26,I just spent the majority of today debugging an OOM that ended up being caused by a rogue SQL statement (select * from table with 25 million rows),,
2.43147E+17,hagus#1255,2017-05-26,I'm kinda ticked off that all my staring at YourKit and the logs didn't find the problem. There's something deficient here and I need to think about what I'm doing wrong …,,
2.43147E+17,hagus#1255,2017-05-26,(I ended up executing forms one by one in the REPL until I noticed one of them never returned),,
1.90548E+17,seancorfield#3069,2017-05-26,"I suspect that sort of OOM would be transient so I'm not sure YourKit would catch it -- it's not like it was a memory leak... as soon as the OOM exception hits, all work building the ResultSet etc would be abandoned and the memory would be released...",,
2.43147E+17,hagus#1255,2017-05-26,I did manage to catch it in yourkit and I was stumped as to why there was this massive quantity of unreachable memory that wasn't being GC'd even when I forced it,,
1.90548E+17,seancorfield#3069,2017-05-26,"(using clojure.java.jdbc, I'd expect the OOM to happen in the doall realizing the transformed result set and for that to then be released as soon as the exception triggered)",,
2.43147E+17,hagus#1255,2017-05-26,oh I have a lazy resultset that I'm spooling onto a channel,,
1.90548E+17,seancorfield#3069,2017-05-26,Sometimes all the memory in the world just isn't enough... 😃,,
2.43147E+17,hagus#1255,2017-05-26,well I thought I must be doing something crazy in a loop! or holding on to the head of a seq somewhere,,
2.43147E+17,hagus#1255,2017-05-26,"I don't log the SQL statements usually because they can be very large (I create a temporary on-commit-drop table, index it, then join against that. JDBC prepared statements don't enjoy hundreds of thousands of parameters 😉 )",,
2.43147E+17,hagus#1255,2017-05-26,"I think the solution coming to mind is to pray to the effigy of mnygard, asking for forgiveness and the wisdom to wrap this I/O in a circuitbreaker next time",,☦ (1)
2.43147E+17,hagus#1255,2017-05-27,"wanted: an idiom to replace 
```clojure
(when (map? something) something)
```",,
2.43147E+17,hagus#1255,2017-05-27,without repeating `something`,,
2.43147E+17,hagus#1255,2017-05-27,"in my particular case I'm writing
```clojure
(and (bound? *some-thread-var*) *some-thread-var*)
``` but same general deal",,
2.43147E+17,hagus#1255,2017-05-27,"oh except no I'm not, if a var is unbound you can't test it with `bound?.  
```clojure
clojure.lang.Var$Unbound cannot be cast to clojure.lang.Var
``` 
🤔",,
1.23962E+17,屈才#4590,2017-05-29,"Coming from Java, Scala, Haskell, I'm no stranger to reading and seeking information out",,
1.23962E+17,屈才#4590,2017-05-29,But since starting with Clojure,,
1.23962E+17,屈才#4590,2017-05-29,I've watched at least like 75 talks,,
1.23962E+17,屈才#4590,2017-05-29,Haven't seen simple made easy yet but It's bookmarked,,
2.65283E+17,Slackwise#2471,2017-05-29,Oh man,,
2.65283E+17,Slackwise#2471,2017-05-29,That's the talk that started me on the path.,,
2.65283E+17,Slackwise#2471,2017-05-29,"""Who is this incredibly insightful man and why is he talking so rationally my head is about to nod off my shoulders?""",,
1.90548E+17,seancorfield#3069,2017-05-29,"Yeah, I was at Strange Loop that year -- it was a good talk.",,
1.90548E+17,seancorfield#3069,2017-05-29,"We already had Clojure in production by then (as a secondary language that we were using to write low-level, reusable code).",,
2.65283E+17,Slackwise#2471,2017-05-29,"That talk really did help me a lot, indirectly.",,
2.65283E+17,Slackwise#2471,2017-05-29,I consider it one of the greatest talks ever.,,
1.90548E+17,seancorfield#3069,2017-05-29,"Strange Loop 2011 had a lot of Clojure content. I thought it was one of the best conferences I'd ever attended. Lately tho' I've been going to both Clojure/West and Clojure/conj and skipping Strange Loop. I can only really do two conferences a year so I had to choose between Strange Loop and one of those two Clojure conferences. Some years I picked C/W, some I picked C/c.",,
2.65283E+17,Slackwise#2471,2017-05-29,I think it just put together a bunch of disparate thoughts that have been floating around in my mind for some time. Sanity coalesced.,,
2.43147E+17,hagus#1255,2017-05-29,"I really want to hit Strange Loop this year. Unfortunately I'll miss Euro Clojure, but I've been to two C/W and one C/c so far.",,
2.22879E+17,MystickPhoenix#4987,2017-05-30,"simple made easy is the one talk that really changed how I look at software and code.  For me, it was actually a paradigm shift.  Unfortunately for me, it was a shift away from the established way of doing things at my current job.",,👍 (1)
2.65283E+17,Slackwise#2471,2017-05-30,I developed a much greater anxiety around reference types soon after.,,
3.15279E+17,goomba#1378,2017-05-30,hahaha,,
3.15279E+17,goomba#1378,2017-05-30,Funny I never actually saw those talks but I heard them all from my brother who converted me by proxy,,
3.15279E+17,goomba#1378,2017-05-30,"@MystickPhoenix yep I think I might've even gotten ""laid off"" from the job that I was at for rocking the boat too much in the functional direction 😂",,
2.22879E+17,MystickPhoenix#4987,2017-05-31,I know that I've inadvertently burned a lot of political capital with my love of Clojure and the functional paradigm.,,
3.15279E+17,goomba#1378,2017-05-31,It's a mind disease that you can't shake but makes you stronger 😂,,
3.15279E+17,goomba#1378,2017-05-31,it's so powerful --- the clojure datastructure paradigm.  It allows you to tackle _every problem_ reusing the _same techniques_,,
3.15279E+17,goomba#1378,2017-05-31,"assoc, update, first, last, loop, etc etc",,
3.15279E+17,goomba#1378,2017-05-31,"With, like, 20 functions you can do almost anything.  If you know the rest of the core lib it's just that much better",,
2.22879E+17,MystickPhoenix#4987,2017-05-31,"I agree whole heartedly.  Sadly the direction the company was going was to Go instead of being open to exploring other languages and after Clojure, Go felt like a giant step backward.",,
2.65283E+17,Slackwise#2471,2017-05-31,Go: the opposite of expressive language.,,
1.90548E+17,seancorfield#3069,2017-05-31,I learned Go a few years back. I was disappointed. Rust is what I had hoped Go would be.,,
2.65283E+17,Slackwise#2471,2017-05-31,Same. So much so.,,
2.65283E+17,Slackwise#2471,2017-05-31,Only complaints about Rust are the syntax and some syntactic features.,,
2.65283E+17,Slackwise#2471,2017-05-31,Like omitting semicolons to return. wat,,
2.65283E+17,Slackwise#2471,2017-05-31,I'm honestly surprised most new non-homoiconic languages haven't jumped on the readability bandwagon.,,
2.65283E+17,Slackwise#2471,2017-05-31,Like Python or CoffeeScript.,,
1.90548E+17,seancorfield#3069,2017-05-31,"As for burning ""political capital"" @MystickPhoenix sometimes you have to be very careful how you persuade a company to consider alternative tech. Where I work, we looked at Scala first, and took it to production for a small subproject. It was successful to some degree but not ""successful enough"", so we looked at Clojure next. That was good enough to expand its use over time. Six years later, we're a Clojure-only shop on the back end (although we still have some non-Clojure legacy code).",,
2.22879E+17,MystickPhoenix#4987,2017-05-31,"@seancorfield I agree 100%.  I just finished watching this talk on introducing Rust to a company and I inadvertently screwed up just about every single tip, LOL
https://www.youtube.com/watch?v=GCsxYAxw3JQ",,
1.90548E+17,seancorfield#3069,2017-05-31,"Hah, she said ""It depends"". I got a crazy rep in one tech community for responding to almost any question with ""It depends"" 😃",,
2.65283E+17,Slackwise#2471,2017-05-31,https://twitter.com/stuarthalloway/status/869927364473618432,,
2.65283E+17,Slackwise#2471,2017-05-31,"Oh boy, guess I gotta go!",,
2.65283E+17,Slackwise#2471,2017-06-02,What's the best place to follow Clojure news?,,
2.98148E+17,lepistane#2482,2017-06-02,reddit,,
2.98148E+17,lepistane#2482,2017-06-02,"slack channel clojure/cls 
google group",,
2.98148E+17,lepistane#2482,2017-06-02,usually there is overlap,,
2.65283E+17,Slackwise#2471,2017-06-02,"Oh, then I guess I'm with it.",,
1.92897E+17,bbss#6837,2017-06-02,I also subscribe to https://therepl.net/,,💯 (1)
2.65283E+17,Slackwise#2471,2017-06-02,Thanks. I'll see if I can get an RSS feed for it.,,
1.90548E+17,seancorfield#3069,2017-06-02,People still use RSS? I thought that had died off with blogs going so quiet (as Twitter wiped so many of them out)...,,
2.65283E+17,Slackwise#2471,2017-06-02,"I'm actually writing an ""RSS Reader"" app that generates feeds from whatever source you choose. I want to bring back syndication, even if it means scraping sites and calling APIs.",,
2.65283E+17,Slackwise#2471,2017-06-02,(What's holding me back right now is the legality surrounding scraping and the DMCA.),,
2.97347E+17,ThuglasAdams#7685,2017-06-02,I don't know why syndication shouldn't be propped up,,
2.22879E+17,MystickPhoenix#4987,2017-06-02,I actually prefer RSS as it puts all the various blogs and news articles that I want to read in *one* location.,,
2.22879E+17,MystickPhoenix#4987,2017-06-02,"curretly using feedly, but I've also used feedreader in the past and had good luck",,
2.65283E+17,Slackwise#2471,2017-06-02,"My idea for a syndication reader is to just write it as a Clojure backend that periodically runs scripts that fetch data from whatever sources and generates a ""feed"" for each one.",,
2.65283E+17,Slackwise#2471,2017-06-02,Then make a ClojureScript front end to render it. Or use your own RSS reader of choice.,,
2.65283E+17,Slackwise#2471,2017-06-02,"Which means now all these non-syndicated sources have an ""RSS feed"".",,
2.65283E+17,Slackwise#2471,2017-06-02,So for example that mailing list.,,
2.65283E+17,Slackwise#2471,2017-06-02,Scrape the archive and generate a feed from it.,,
2.97347E+17,ThuglasAdams#7685,2017-06-02,and integrate your app with Growl 😃,,
2.97347E+17,ThuglasAdams#7685,2017-06-02,to send you notifications when you get new items in your feed,,
2.65283E+17,Slackwise#2471,2017-06-02,"Sure, if you want. I personally don't want to be reminded of news unless it's super important. I rather read it at my leisure. But yeah, you could integrate whatever you want. I would leave it hackable and extendable with Clojure, of course.",,
1.57759E+17,Quixoticelixer#6239,2017-06-02,it is nice to know where to lok though when you want to find something,,
2.86738E+17,MetaHertz#1461,2017-06-03,Hello everyone! Is it possible to use Clojure as a scripting language? Now I use Racket for this purpose.,,
1.57759E+17,Quixoticelixer#6239,2017-06-03,no,,
1.57759E+17,Quixoticelixer#6239,2017-06-03,if you do so,,
1.57759E+17,Quixoticelixer#6239,2017-06-03,richard hicky will smite you down,,
2.65283E+17,Slackwise#2471,2017-06-03,"You can sorta use Boot to script, as well as ""Lumo"".",,
2.65283E+17,Slackwise#2471,2017-06-03,"Other alternatives are Pixie, Guile, or even ELisp.",,
1.57759E+17,Quixoticelixer#6239,2017-06-03,hy as well,,
2.86738E+17,MetaHertz#1461,2017-06-03,"Ok, thanks a lot to everyone. I'll continue to use Racket.",,
1.57759E+17,Quixoticelixer#6239,2017-06-03,ew,,
3.16006E+17,alex-dixon#9085,2017-06-03,@MetaHertz  I see people using Clojurescript for scripting quite a bit,,
3.16006E+17,alex-dixon#9085,2017-06-03,http://blog.fikesfarm.com/posts/2015-08-01-planck-scripting.html,,
3.01795E+17,arichiardi#2361,2017-06-03,Lumo works perfectly for scripts,,
3.01795E+17,arichiardi#2361,2017-06-03,I would be interested in know how to do it in Racket as well though 😀,,
2.97347E+17,ThuglasAdams#7685,2017-06-03,what is te difference between planck and lumo?,,
2.43147E+17,hagus#1255,2017-06-04,"@ThuglasAdams planck is essentially a port of CLJS to JavaScriptCore, it also provides platform native APIs for things like I/O",,
2.43147E+17,hagus#1255,2017-06-04,Lumo I believe is all about self hosted CLJS on top of node.js,,
2.43147E+17,hagus#1255,2017-06-04,"So maybe: Planck is node.js for CLJS, while Lumo is CLJS for node.js 😃",,
2.43147E+17,hagus#1255,2017-06-04,I would pick Planck for real scripting on a host - Lumo is obviously really cool but you will have to install npm packages as part of your script to do anything meaningful (like pull a URL via HTTP),,
2.65283E+17,Slackwise#2471,2017-06-04,I need to port Clojure to the Guile VM.,,💯 (1)
2.65283E+17,Slackwise#2471,2017-06-04,"Then when Emacs moves to the Guile VM, we can code Clojure for Emacs.",,👌 (1)
2.65283E+17,Slackwise#2471,2017-06-04,And for anything else that uses the Guile lib for scripting.,,
2.65283E+17,Slackwise#2471,2017-06-04,I kinda' just want one VM to become some sort of ultimate standard.,,
2.65283E+17,Slackwise#2471,2017-06-04,So we can just shove it everywhere.,,
2.65283E+17,Slackwise#2471,2017-06-04,Even have chips designed to run the VM bytecode directly.,,
2.86738E+17,MetaHertz#1461,2017-06-04,"@alex-dixon It seems to me that CLJS is, probably, a good tool for creating Gnome 3 applications because there is gjs which is used to run a lot of stuff written in js specially for Gnome.",,👍 (1)
2.86738E+17,MetaHertz#1461,2017-06-04,@Slackwise +1,,👍 (2)
1.57759E+17,Quixoticelixer#6239,2017-06-04,what is gjs,,
2.86738E+17,MetaHertz#1461,2017-06-04,"@Quixoticelixer https://wiki.gnome.org/Projects/Gjs 
This tool allows to create GTK applications by using only JavaScript.",,
1.57759E+17,Quixoticelixer#6239,2017-06-04,oh dear,,
2.65283E+17,Slackwise#2471,2017-06-04,Gnome 3 is just a mess.,,
2.65283E+17,Slackwise#2471,2017-06-04,A damn shame.,,
2.65283E+17,Slackwise#2471,2017-06-04,"Their official documentation recommends ""monkey patching"", directly, to implement plugins.",,
2.65283E+17,Slackwise#2471,2017-06-04,"And of course, every single little version, something changes and breaks some extension.",,
2.65283E+17,Slackwise#2471,2017-06-04,The UI itself is unusable in stock form.,,
2.65283E+17,Slackwise#2471,2017-06-04,There's not a soul that uses it as-designed.,,
2.86738E+17,MetaHertz#1461,2017-06-04,"KDE is much worse. I used that crap for two years, and now I prefer Gnome on desktop and StumpWM on laptop. These aren't ideal solutions, but more or less are ok to me now.",,
2.65283E+17,Slackwise#2471,2017-06-04,It's sad what's happened to the Linux desktop landscape. :/,,
2.65283E+17,Slackwise#2471,2017-06-04,I just use a heavily modified Gnome.,,
2.86738E+17,MetaHertz#1461,2017-06-04,"@Slackwise yes, almost completely broken.",,
2.86738E+17,MetaHertz#1461,2017-06-04,We have to develop a new one written in pure Clojure.,,
2.65283E+17,Slackwise#2471,2017-06-04,:D,,
2.86738E+17,MetaHertz#1461,2017-06-04,😃,,
2.65283E+17,Slackwise#2471,2017-06-04,I am so down for that.,,
2.65283E+17,Slackwise#2471,2017-06-04,I've actually been pondering using that one Emacs extension that lets you use emacs to control X11.,,
2.65283E+17,Slackwise#2471,2017-06-04,https://github.com/ch11ng/exwm,,
2.65283E+17,Slackwise#2471,2017-06-04,Run that as the WM for Gnome.,,
2.65283E+17,Slackwise#2471,2017-06-04,"My other alternative idea was to just code a proper ""dock"" for Xfce and use that.",,
1.57759E+17,Quixoticelixer#6239,2017-06-04,there is um,,
1.57759E+17,Quixoticelixer#6239,2017-06-04,a wm that is emacsish,,
2.65283E+17,Slackwise#2471,2017-06-04,"I mean, this really is Emacs controlling your windows. Lol",,
2.65283E+17,Slackwise#2471,2017-06-04,"I haven't used it yet, but the idea sounds fun.",,
1.23962E+17,屈才#4590,2017-06-04,I've considered writing a window manager but have no real clue how,,
1.23962E+17,屈才#4590,2017-06-04,I use i3/bspwm on my laptop and kde on desktop,,
1.57759E+17,Quixoticelixer#6239,2017-06-04,i love i3,,
3.01795E+17,arichiardi#2361,2017-06-04,i3 user here as well 😉,,
2.43147E+17,hagus#1255,2017-06-05,oh god doing your own reader literals is super trashy in Clojure :/,,
2.98148E+17,lepistane#2482,2017-06-05,make library for it,,
2.98148E+17,lepistane#2482,2017-06-05,make it easier,,
2.98148E+17,lepistane#2482,2017-06-05,contribute to raging community 😄,,
3.01795E+17,arichiardi#2361,2017-06-05,@hagus yeah 😉,,
2.43147E+17,hagus#1255,2017-06-06,"You know you've been programming too much Clojure when you see variable assignment in another language and it seems like ""spooky action at a distance""",,
1.57759E+17,Quixoticelixer#6239,2017-06-06,thing = new Thing,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,or when something is mutated,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,or commas,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,and backwards colons,,
2.43147E+17,hagus#1255,2017-06-06,"the specific case I had was someone assigning something to a global ... took me a moment ... ""the hell, that's not an atom. oh wait ...""",,
1.57759E+17,Quixoticelixer#6239,2017-06-06,"for javascript the maps are similiar {thing: ""thing""}",,
1.57759E+17,Quixoticelixer#6239,2017-06-06,but not the same,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,so I always write it clojure style,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,and then change it once I realise thats not how you do it,,
2.43147E+17,hagus#1255,2017-06-06,"yah, at least with Ruby keywords look the same 😃",,
2.43147E+17,hagus#1255,2017-06-06,"and at least with Ruby, keywords exist",,
1.57759E+17,Quixoticelixer#6239,2017-06-06,I haven't really programming in ruby before,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,what is it like,,
2.65283E+17,Slackwise#2471,2017-06-06,"As good as procedural languages get, IMO.",,
2.65283E+17,Slackwise#2471,2017-06-06,"A ton of syntax, versus Lisps, obviously, but it's intuitive to a Lisper.",,
2.43147E+17,hagus#1255,2017-06-06,@Quixoticelixer it's very influenced by smalltalk and lisp,,
2.65283E+17,Slackwise#2471,2017-06-06,It's basically Smalltalk meets Perl.,,
2.65283E+17,Slackwise#2471,2017-06-06,To be the most accurate.,,
2.65283E+17,Slackwise#2471,2017-06-06,With a buch of Lisp flavoring.,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,I always assumed it would be simliar to python,,
2.65283E+17,Slackwise#2471,2017-06-06,They end up similar in feature set.,,
2.65283E+17,Slackwise#2471,2017-06-06,"I mean, technically Perl too.",,
2.65283E+17,Slackwise#2471,2017-06-06,Perl is just not as OOPy.,,
2.65283E+17,Slackwise#2471,2017-06-06,I still wrote a ton of Ruby.,,
2.65283E+17,Slackwise#2471,2017-06-06,I find it extremely pleasant.,,
2.65283E+17,Slackwise#2471,2017-06-06,"I mean, it's fully expression oriented, has lambds, closures, all the base higher order functions, currying functions, and metaprogramming at a granularity higher than eval.",,
2.65283E+17,Slackwise#2471,2017-06-06,And the same base data structures that Clojure has. (Clojure really copying Ruby/Python in this regard.),,
2.65283E+17,Slackwise#2471,2017-06-06,"From Ruby to Clojure, it was intuitive.",,
2.65283E+17,Slackwise#2471,2017-06-06,"Oh, and a fun bit is finding out the author of Eloquent Ruby moved to Clojure. :P",,
2.65283E+17,Slackwise#2471,2017-06-06,"He works at Relevance, actually.",,
2.65283E+17,Slackwise#2471,2017-06-06,I figure there are a lot of Rubyists in the Clojure world.,,
2.65283E+17,Slackwise#2471,2017-06-06,https://www.youtube.com/watch?v=4Sso4HtvJsw,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,maybe I will switch,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,from python to ruby,,
1.90548E+17,seancorfield#3069,2017-06-06,"Yeah, I've heard a lot of Rubyists move to Clojure and love it.",,
2.65283E+17,Slackwise#2471,2017-06-06,Ruby is far more intuitive to a Clojurist.,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,python is special sometimes,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,and not in a good way,,
1.90548E+17,seancorfield#3069,2017-06-06,"I don't like Ruby. There, I said it.",,
2.65283E+17,Slackwise#2471,2017-06-06,I love Python's whitespace sensitivity. Just the syntax overall is pleasant to read.,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,idk,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,like,,
2.65283E+17,Slackwise#2471,2017-06-06,"IIRC, though, not everything is an expression.",,
1.57759E+17,Quixoticelixer#6239,2017-06-06,its nice but when I am trying to do a script on IDLE on my rpi,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,and I get indentation errors,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,from mixing tabs and sapces,,
1.90548E+17,seancorfield#3069,2017-06-06,"I've had several goes at learning it on and off for years. I took Uni. Washington's ""Programming Languages"" course and a third of that is in Ruby and ... well, I really didn't like it at all ...",,
1.57759E+17,Quixoticelixer#6239,2017-06-06,im like,,
2.65283E+17,Slackwise#2471,2017-06-06,"And not everything is an object, or faked enough to be an object.",,
1.57759E+17,Quixoticelixer#6239,2017-06-06,does this really need to hapen,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,"I mean, for serious stuff",,
1.57759E+17,Quixoticelixer#6239,2017-06-06,I am probably going to try an duse clojure,,
1.90548E+17,seancorfield#3069,2017-06-06,But syntax is very subjective 😃,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,"but for simple stuff I don't really want to go lein new blerg, cd blerg/src/clj, emacs core.clj",,
1.57759E+17,Quixoticelixer#6239,2017-06-06,and change .project.clj,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,and wait 10 eyars for lein,,
2.65283E+17,Slackwise#2471,2017-06-06,Whereas in Ruby you can just write `%w[foo bar baz].map{|x| puts x}`,,
1.90548E+17,seancorfield#3069,2017-06-06,That's why we switched to Boot -- start a REPL and then just pull dependencies in as needed... leave it running all day... or even for many days.,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,I have seen boot,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,but I am not really sure what it does,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,compared to lein,,
1.90548E+17,seancorfield#3069,2017-06-06,Boot is a full replacement for Lein and does a lot more. Boot can be used instead of Ant/shell scripts too.,,
1.90548E+17,seancorfield#3069,2017-06-06,We switched from Lein to Boot about 18 months ago.,,
1.90548E+17,seancorfield#3069,2017-06-06,And now our entire build/test/deploy pipeline is built on Boot (which wasn't possible with Lein).,,
1.90548E+17,seancorfield#3069,2017-06-06,We can even build Docker images with Boot 😃,,
2.86738E+17,MetaHertz#1461,2017-06-06,@seancorfield thanks a lot for the description. I see that there's a serious reason to try Boot.,,
1.90548E+17,seancorfield#3069,2017-06-06,I blogged about it quite a bit http://seancorfield.github.io,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,huh,,
1.57759E+17,Quixoticelixer#6239,2017-06-06,@seancorfield I assume you live in SF?,,
1.90548E+17,seancorfield#3069,2017-06-06,"I'm in the SF Bay Area, but not SF. The header image was taken by a good friend... a former colleague from Macromedia...",,
1.90548E+17,seancorfield#3069,2017-06-06,For a while I ran one of the Bay Area Clojure meetups... but I got a bit tired of a) organizing it and b) trekking all the way into SF early enough for the meetup 😃,,
2.86738E+17,MetaHertz#1461,2017-06-06,"@seancorfield nice blog, thanks for sharing.",,
2.86738E+17,MetaHertz#1461,2017-06-06,I've a question about boot-clj. Is it possible to use mono/.net instead of jvm as backend with boot? Lein allows it (throught a plugin lein-clr).,,
1.90548E+17,seancorfield#3069,2017-06-07,"Good question. I don't know anyone using the CLR version of Clojure. I mean, I know _some_ people do use it but it's a very small number.",,
1.90548E+17,seancorfield#3069,2017-06-07,"But if JVM-based Leiningen can compile Clojure-CLR then it would be easy to do it with Boot (you'd just have to write a task for it -- which is ""just"" Clojure code).",,
1.90548E+17,seancorfield#3069,2017-06-07,"I guess I'd ask, why would you want to use the CLR version of Clojure? Is there some particular constraint on your environment that requires a non-JVM solution? Or is it just curiosity because you're on Windows?",,
1.90548E+17,seancorfield#3069,2017-06-07,"FWIW, there are 64 members in the #clr channel on the Clojurians Slack and there's a clojure-clr mailing list on Google Groups so you'll probably get better answers there.",,
1.90548E+17,seancorfield#3069,2017-06-07,"Although I'm on a Windows laptop right now, I don't use Windows for development 😃 I use Mac for most of my desktop, Linux for deployment, and even on my Windows laptop I use the WSL / Ubuntu setup for dev work 😃",,
2.86738E+17,MetaHertz#1461,2017-06-07,"> why would you want to use the CLR 
Just for fun first of all. // I'm a Linux user but I think that .net and mono are great because they're well designed for those who implement functional languages. Anyway there is no difference to me because I just use language and don't create a new one. 

> #clr channel
Oh, it's interesting, thank you! )",,
2.97347E+17,ThuglasAdams#7685,2017-06-07,llvm is best,,
2.65283E+17,Slackwise#2471,2017-06-07,"I was toying with the idea of using Clojure-CLR for a . NET project at the office, but realistically, it was just not a good idea. Arguably a burden on other devs working on it later, and it seems a bit too much a redheaded stepchild. Couldn't conscionably do so.",,
1.90548E+17,seancorfield#3069,2017-06-07,@ThuglasAdams Is there a Clojure version that targets LLVM? (the fans of LLVM seem quite evangelical but in reality JVM and CLR dominate the world so I think alternative VMs have a big hill to climb),,
2.65283E+17,Slackwise#2471,2017-06-07,LLVM would be awesome.,,
2.97347E+17,ThuglasAdams#7685,2017-06-07,"@seancorfield No idea, but I do know that I love throwing out the ""llvm is best"" out in the water and seeing what fishies I catch 😉",,
2.43147E+17,hagus#1255,2017-06-07,TIL that `when-first` has been missing from my life,,
2.97347E+17,ThuglasAdams#7685,2017-06-07,i don't understand what that's for?,,
2.43147E+17,hagus#1255,2017-06-07,"instead of having to write
```clojure
(when (seq some-vec)
  (let [first-element (first some-vec)]
     ; ok now do something with first-element
))
```",,
2.43147E+17,hagus#1255,2017-06-07,"basically if you need to check if something is a non-empty sequence, and if so, do something with the first element",,
2.65283E+17,Slackwise#2471,2017-06-07,Beautiful.,,
2.97347E+17,ThuglasAdams#7685,2017-06-07,I think I'm having trouble understanding the macro,,
2.97347E+17,ThuglasAdams#7685,2017-06-07,"```clojure
(defmacro when-first
  ""bindings => x xs

  Roughly the same as (when (seq xs) (let [x (first xs)] body)) but xs is evaluated only once""
  {:added ""1.0""}
  [bindings & body]
  (assert-args
     (vector? bindings) ""a vector for its binding""
     (= 2 (count bindings)) ""exactly 2 forms in binding vector"")
  (let [[x xs] bindings]
    `(when-let [xs# (seq ~xs)]
       (let [~x (first xs#)]
           ~@body))))
```",,
2.97347E+17,ThuglasAdams#7685,2017-06-07,"it's like, how is 'x' being used?",,
2.43147E+17,hagus#1255,2017-06-07,yeah macros are like that 😃,,
2.43147E+17,hagus#1255,2017-06-07,so `bindings` in this case is going to be whatever you passed as the first argument to the macro,,
2.43147E+17,hagus#1255,2017-06-07,so if you said,,
2.43147E+17,hagus#1255,2017-06-07,"```clojure
(when-first [first-elem my-vector]
  (println ""first-elem was"" first-elem))
```",,
2.43147E+17,hagus#1255,2017-06-07,"in the macro code `bindings` will be `[first-elem my-vector]`, literally just a vector of symbols at that stage",,
2.43147E+17,hagus#1255,2017-06-07,so it's then destructured so that `x` is bound locally to `first-elem` and `xs` is bound locally to `my-vector`,,
2.43147E+17,hagus#1255,2017-06-07,you can also expand the macro to see what comes out,,
2.43147E+17,hagus#1255,2017-06-07,straight from our friend @repl-bot,,
2.43147E+17,hagus#1255,2017-06-07,"```clojure
 (let* [temp4657auto (clojure.core/seq my-vector)] 
  (clojure.core/when temp4657auto 
    (clojure.core/let [xs5205auto temp4657auto] 
      (clojure.core/let [first-elem (clojure.core/first xs5205auto__)]
        (println ""first-elem was"" first-elem)))))
```",,
2.97347E+17,ThuglasAdams#7685,2017-06-07,"yeah, I need to learn about macro notation",,
4.56227E+17,Deleted User#0000,2017-06-08,hai,,
1.57759E+17,Quixoticelixer#6239,2017-06-08,henlo,,
2.43147E+17,hagus#1255,2017-06-08,can anyone explain this?,,
2.43147E+17,hagus#1255,2017-06-08,"```clojure
  (clojure.walk/prewalk
    #(if (map-entry? %)
       (clojure.tools.trace/trace %)
       %) {:a {:b {:c 456}}})
  ;TRACE: [:a {:b {:c 456}}]
  ;TRACE: [:b {:c 456}]
  ;TRACE: [:c 456]
  ;=> {:a {:b {:c 456}}}

  (clojure.walk/postwalk
    #(if (map-entry? %)
       (clojure.tools.trace/trace %)
       %) {:a {:b {:c 456}}})
  ;=> {:a {:b {:c 456}}}
```",,
1.90548E+17,seancorfield#3069,2017-06-08,"Yes, there's a JIRA issue open about it. `postwalk` doesn't preserve `MapEntry` types.",,
1.90548E+17,seancorfield#3069,2017-06-08,https://dev.clojure.org/jira/browse/CLJ-2031,,
1.90548E+17,seancorfield#3069,2017-06-08,(go vote for it @hagus!),,
2.43147E+17,hagus#1255,2017-06-08,a bug! so I'm not going crazy 😃,,
2.43147E+17,hagus#1255,2017-06-08,"some of the jira stuff is kind of interesting - this kind of bug I'd expect to be a no-brainer, well protected by a test suite, and easy to integrate quickly",,
2.43147E+17,hagus#1255,2017-06-08,but I see a lot of bugs like this just parked with little action. at least this one is screened in to 1.9,,
2.43147E+17,hagus#1255,2017-06-08,(and I voted for it 😉 ),,
1.90548E+17,seancorfield#3069,2017-06-08,I think in this case not many people use generic tree walkers -- they write custom walkers instead?,,
2.43147E+17,hagus#1255,2017-06-08,or use specter or some such. it's true that prewalk and postwalk are pretty limited but they still have an API contract they are supposed to fulfill,,
1.90548E+17,seancorfield#3069,2017-06-08,"Well, `postwalk` still _produces_ hash maps -- it just doesn't preserve the specific `MapEntry` type. So it's an edge case a lot of people have not run into. Yet.",,
2.43147E+17,hagus#1255,2017-06-08,i would love to know more about the decision process … this is a classic problem for anyone who vends API. how can you tell who uses it and how important it is? has anyone built functionality that *depends* on the faulty behavior? I'm sure Cognitect have a process of some kind,,
1.90548E+17,seancorfield#3069,2017-06-08,The process is described in detail on the wiki somewhere. With a flow diagram of how JIRA issues are reviewed and implemented.,,
1.90548E+17,seancorfield#3069,2017-06-08,And the Cognitect folks have talked about it fairly extensively in various venues.,,
1.90548E+17,seancorfield#3069,2017-06-08,"If a JIRA issue doesn't get many votes, it's reasonable to assume it's not very important, or at least not important to many people 😃",,
1.90548E+17,seancorfield#3069,2017-06-08,"In this case, `map-entry?` was only added in Clojure 1.8 so it's also reasonable to assume people weren't commonly writing code that checked for the `MapEntry` type before that...",,
2.43147E+17,hagus#1255,2017-06-08,"Cool, I'll do some research to learn more",,
2.97347E+17,ThuglasAdams#7685,2017-06-09,org.clojure/tools.trace looks pretty neat,,
2.97347E+17,ThuglasAdams#7685,2017-06-09,I like how you can trace an entire namespace,,
2.43147E+17,hagus#1255,2017-06-09,"@ThuglasAdams yeah it's neat, I've only just started using it",,
1.57759E+17,Quixoticelixer#6239,2017-06-10,what is the best way to connect and interact with a databse,,
2.98148E+17,lepistane#2482,2017-06-11,in clj?,,
2.98148E+17,lepistane#2482,2017-06-11,i've used,,
2.98148E+17,lepistane#2482,2017-06-11,examples from,,
2.98148E+17,lepistane#2482,2017-06-11,luminus,,
1.57759E+17,Quixoticelixer#6239,2017-06-11,yeah,,
1.57759E+17,Quixoticelixer#6239,2017-06-11,I have used hugsql in luminus,,
1.57759E+17,Quixoticelixer#6239,2017-06-11,but I was wondering if there were any other options,,
1.57759E+17,Quixoticelixer#6239,2017-06-11,I actually just need something usper suimple,,
2.97347E+17,ThuglasAdams#7685,2017-06-12,"I used H2, and that was ok. I wouldn't recommend it",,
2.97347E+17,ThuglasAdams#7685,2017-06-12,H2 that used a flat db file,,
1.90548E+17,seancorfield#3069,2017-06-12,"@Quixoticelixer You're already using `clojure.java.jdbc` I assume? What else do you need, beyond that, if you want ""something super simple""?",,
1.57759E+17,Quixoticelixer#6239,2017-06-12,well,,
1.57759E+17,Quixoticelixer#6239,2017-06-12,I am now,,
1.04579E+17,Mr. E Nigma#1375,2017-06-12,"https://github.com/clojure-cookbook/clojure-cookbook is a good resource for answering the ""how do i..."" questions",,
1.90548E+17,seancorfield#3069,2017-06-12,It's unfortunate that refers to an outdated version of `clojure.java.jdbc` (0.3.0).,,
1.57759E+17,Quixoticelixer#6239,2017-06-12,Do you know,,
1.57759E+17,Quixoticelixer#6239,2017-06-12,what is great,,
1.57759E+17,Quixoticelixer#6239,2017-06-12,about livin gin nz,,
1.57759E+17,Quixoticelixer#6239,2017-06-12,I buy a book,,
1.57759E+17,Quixoticelixer#6239,2017-06-12,$25,,
1.57759E+17,Quixoticelixer#6239,2017-06-12,shipping,,
1.57759E+17,Quixoticelixer#6239,2017-06-12,$30,,
1.90548E+17,seancorfield#3069,2017-06-12,(the databases chapter of the Clojure Cookbook is based almost entirely on the clojuredocs java.jdbc content from that time),,
1.90548E+17,seancorfield#3069,2017-06-12,"(at least, for the SQL DB stuff -- that chapter covers other non-SQL DBs too)",,
1.57759E+17,Quixoticelixer#6239,2017-06-12,yeah I did some research,,
1.57759E+17,Quixoticelixer#6239,2017-06-12,all I do is need to put a json string into a database,,
3.15182E+17,hswick#4417,2017-06-12,"if thats all you have to do then jdbc should cover you, but from my research/experience hugsql is the best for sql stuff, not so sure about nosql",,
1.57759E+17,Quixoticelixer#6239,2017-06-12,"well, I am using postgres anyway",,
3.15182E+17,hswick#4417,2017-06-12,"i was concerned that hugsql was dead because it hadnt got a lot of action for a while, but i saw the maintaner actually made some updates today",,
1.90548E+17,seancorfield#3069,2017-06-12,@hswick I think it depends very much on your use case...,,
1.90548E+17,seancorfield#3069,2017-06-12,"If you know what your SQL statements are in advance and you want to keep them separate from your Clojure code, HugSQL makes sense. If you need to build your SQL statements dynamically because they involve a lot of conditional logic, then HoneySQL is likely to be a better choice (since you get composability of SQL fragments).",,
1.90548E+17,seancorfield#3069,2017-06-12,"For World Singles, HugSQL would really only address a small portion of our SQL usage.",,
1.90548E+17,seancorfield#3069,2017-06-12,(so it really wouldn't be worth having separation of code and SQL for that small portion),,
3.15182E+17,hswick#4417,2017-06-13,"completely agree, very much depends. i tried honeysql out and felt like the dsl didnt give that much leverage over plain sql, maybe i just didnt try hard enough.",,
1.57759E+17,Quixoticelixer#6239,2017-06-13,maybe I will use a dsl for another project I am doing,,
1.57759E+17,Quixoticelixer#6239,2017-06-13,instead of hugsql,,
2.43147E+17,hagus#1255,2017-06-17,does anyone have any examples of really good Clojure API wrappers around RESTful web services? just looking for stuff that seems well regarded and idiomatic,,
3.01795E+17,arichiardi#2361,2017-06-17,I'd look at yada @hagus usually you'd use ring but yada's resource orientation is worth a try,,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"Does anyone have a good framework or other advice for working with lots of state in a single atom server-side  in Clojure and/or Clojurescript (server-side)? I have some code where it's going to be better if I keep all my state in a single atom and maintain some kind of push relationship if I can like in clojurescript (Om next, Reagent, Reframe, etc.). It'll be used in a  long-running process that makes extensive use of core.async. I'd like to create something like a reframe subscription that pushes updates at some defined/reasonable frequency to various records (components) and other pieces of code interested in specific queries of that state. Not sure if using any of these more UI-centric libs is a good idea as some of them reference either the DOM or a fake DOM for testing. 

I had thought to just use atoms and watches, but it feels like I'll just be reinventing the wheel with all the management I'll throw on top of it vs. something that already exists. Any suggestions for up-to-date libs that have decent performance? Long story short, I have a lot of code sharing going on between web, server-side, and pure-server apps (in this case), so I'd like to keep the code as similar as possible.",,
2.98148E+17,lepistane#2482,2017-06-19,"i am not an expert but feels like you are doing something wrong. 
why isnt that data (that you want to put in atom on server side and want to maintain) in database?
maybe datomic would be the way to go? 

cant help u with libraries.
but i feel like you are doing something wrong 
or i am noob and havent understood the question 

maybe just maybe atoms arent way to go but REFS are? 
check them out",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"it is in a database, but it is not efficient to query the database constantly. Moreover, there's an event loop of sorts where I only want changed values, not to requery even memory every time.",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"Regarding datomic, I cannot use datomic for any piece but my main server because there is a client app (desktop) and a server app (user-run/cloud deployable as well) that will not allow me to use Datomic due to licensing/ease of deployment",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,Refs are not necessary in this case either and the problem remains the same with any sort of watches,,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"Finally, I need to synchronize my state with remote instances. I do save things in a local, embedded DB, but that is more for efficiency or to sync activity that happened while there was no connectivity. Om-next in essence seems to have some good fits for all this, but it seems to me that the query/update model is in part tied to components and rendering in a UI, so it would take some work to resolve that. Reagent and ratom on the other hand seems like it would work, but again it's more UI focused. There's things like reactive streams that could possibly work but would require a lot of extra work to add some of what things like om next or reframe already do.",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"In summary, having a single source of truth is going to help me a lot rather than sprinkling state into many places (ex: core.async go blocks). Querying an embedded database every 16ms or so is not going to work well so there needs to be minimum an in-memory representation. To a degree again Datomic fits the bill but it is a non-starter since at least several components of my app can run on a user's desktop and/or server(s).",,
2.98148E+17,lepistane#2482,2017-06-19,uhh... there is a lib for that,,
2.98148E+17,lepistane#2482,2017-06-19,aa cant remember name i saw it once or twice on github,,
2.98148E+17,lepistane#2482,2017-06-19,if i do i will pm it,,
3.15182E+17,hswick#4417,2017-06-19,you could check out datascript,,
3.15182E+17,hswick#4417,2017-06-19,immutable in-memory db,,
3.15182E+17,hswick#4417,2017-06-19,i guess you also want event handling though,,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"yeah I've mucked around with datascript. That's find if I want querying, but as far as I know doesn't provide any built-in subscription model without some other framework.",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,I've looked into the funcool beicon project which might work for me,,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"as far as the db itself, just being an atom is fine for the in-memory part",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"And I should add that most of this data can be read from another app's UI, but for the purposes of this server-side stuff, it is a simulation of sorts",,
3.15182E+17,hswick#4417,2017-06-19,wow beicons api seems pretty simple,,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"So in essence it's like a browser doing ""Render"" but render is running the simulation each frame rather than rendering a dom",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"the other data I have is streams, but since some of them are large, I persist those remotely and only temporarily locally",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"for that I'm not so worried about querying, this is more for sim data that is changing like LERPing between values every few seconds",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"so I can do something like LERP some value,  transact the data into an atom/memory DB, and eventually persist it remotely (for loading later/sharing remotely/etc)",,
3.15182E+17,hswick#4417,2017-06-19,Hmmm i guess i dont get why you would reactive streams on the server and wouldnt just do the calculations and then send the data over a normal websocket,,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"but the sim needs the new LERP'd value in a few places and it doesn't make sense to me to constantly every sim frame be doing ""get"" type operations on a map when the data hasn't always changed",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"because this ""is"" a server",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"There are first-party servers (remote) which you can save data to if you want, but that's optional",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"And 3rd party servers (user owned), i..e this",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"So these servers are meant to do calculations, allow user defined functions and such, and all kinds of other stuff. There's no requirement to send data remotely if you don't want to, however you give up things like storing giant streams and such of course",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"In the remote case, yes I do communicate over a websocket and fall back to polling. That data gets written to Kafka and eventually cassandra and elasticsearch as well",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"But that's stream data, not this sim data really. Think like values of knobs and sliders and gauges and such that control what is being done to a stream. Stream storage itself is another concern.",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,But I'd like to try to treat everything as a stream if I can because it makes things cleaner and nicer for doing some level of meta-type operations like a stream of UI changes,,
3.15182E+17,hswick#4417,2017-06-19,sounds to me like you should just treat everything as stream and then sprinkle in the rx streams when you need it for optimization purposes it seems like,,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,yeah that was my thought too. I'm just looking to see if there's latest and greatest option besides something like rx.js (which beicon uses),,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"So pulling map keys as I am iterating in some event loop seems the antithesis of that, which is why I wanted something more reactive",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"and given some data can arrive over the websocket, it becomes easier too if I can just feed that into the same change stream and not worry where it came from/how",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"like if you imagine a user in some UI tweaks a knob, that change gets sent eventually to this server doing processing and reads out the underlying value it needs to change how it processes the stream (with some obvious delay)",,
3.15182E+17,hswick#4417,2017-06-19,"from what ive read in clojure community i feel like most people would recommend going with streams + core.async, core.async being used to build whatever specific event loop model you need",,
3.15182E+17,hswick#4417,2017-06-19,maybe you could just follow this pattern https://github.com/clojure/core.async/wiki/Pub-Sub,,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,yeah I'm already using core.async for the things doing the processing,,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"you could think of it as a pipeline of processes like unix pipes, each represented by a series of go blocks and connections between them (oversimplifying)",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"So each process needs some parameters (some global, some unique to the process)",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"so it's just a matter of giving the guts of the go-block some value as it is doing something like ""go-loop"" at various points in the loop where there are local bindings",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,and/or pulling from a channel depending on what the data is,,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,but yeah the actual inputs to the processes are just arriving on channels,,
3.15182E+17,hswick#4417,2017-06-19,"i would imagine core.async would cover all those cases, core.async + immutable data structures is latest and greatest 😆",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"it pretty much does, like I said it's just a matter of the parameters/settings used to operate on the inputs over time",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"those change over time, so I am just trying to figure out the best way I can get them somewhere, hopefully via push rather than pull",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"and even if I had a go block that was pushing, it still needs to be notified somehow of a change, so it's more about the notification mechanism (ex: subscription) than it is anything else",,
2.8658E+17,Sandwich of Unusual Size#2947,2017-06-19,"building that off watches on an atom works, just my feeling that it is reinventing the wheel",,
3.15182E+17,hswick#4417,2017-06-19,"im not an expert but i think pubsub would solve your problem, or at least some kind of mechanism would solve your problem. I think you have all the libraries (tech) you need just need to find the right design pattern, im sure other people have seen this type of problem before",,
3.15182E+17,hswick#4417,2017-06-19,*some kind of broadcast mechanism,,
1.57759E+17,Quixoticelixer#6239,2017-06-19,What is the best way to remove escaped strings from a list/vec of strings,,
3.15182E+17,hswick#4417,2017-06-20,probably filter,,
3.16777E+17,Pyreneean Desman#0295,2017-06-20,how do strings escape? (huge beginner here),,
3.15182E+17,hswick#4417,2017-06-20,"""\n"" is escaped n but would be interpreted as newline (maybe thats a bad example), usually you use them in regexes like escaping special characters",,
3.16777E+17,Pyreneean Desman#0295,2017-06-20,ok thank you,,
1.23962E+17,屈才#4590,2017-06-21,Whoever made that repl bot,,
1.23962E+17,屈才#4590,2017-06-21,You were SMART with making it not abusable,,
1.38887E+17,Scallions#8493,2017-06-22,"So, where does everyone put their specs? In the same namespace or seperate namespace?",,
1.57759E+17,Quixoticelixer#6239,2017-06-22,I don't use spec,,
1.57759E+17,Quixoticelixer#6239,2017-06-22,i'm not cool sorry,,
1.38887E+17,Scallions#8493,2017-06-22,boot -x,,
1.38887E+17,Scallions#8493,2017-06-22,"I mean, I'm not cool either",,
1.38887E+17,Scallions#8493,2017-06-22,Just wondering on how to get started on being cool.,,
1.38887E+17,Scallions#8493,2017-06-22,"*note to self, discord is not my terminal*",,
3.15182E+17,hswick#4417,2017-06-23,"Seen some people for larger specs put them in separate ns, but if it's small then I guess put it in same. Just like any other piece of code",,
3.15279E+17,goomba#1378,2017-06-30,dumb general question,,
3.15279E+17,goomba#1378,2017-06-30,`:a` vs `::a`,,
3.15279E+17,goomba#1378,2017-06-30,I understand effectively `::a` namespaces the keyword but I don't really understand the point,,
3.15182E+17,hswick#4417,2017-06-30,"huh, ive literally never seen that before",,
3.15279E+17,goomba#1378,2017-06-30,I'm starting to see it more often,,
3.15279E+17,goomba#1378,2017-06-30,,https://cdn.discordapp.com/attachments/315388260987830272/330404103861829642/unknown.png,
3.15279E+17,goomba#1378,2017-06-30,often in multimethods and datomic stuff,,
3.15182E+17,hswick#4417,2017-06-30,oh :a would be a keyword,,
3.15182E+17,hswick#4417,2017-06-30,have you looked here? https://clojure.org/reference/multimethods,,
3.15182E+17,hswick#4417,2017-06-30,the double colon is super weird,,
1.92897E+17,bbss#6837,2017-07-01,@goomba it's called auto-namespacing. It fully qualifies the keyword in the namespace it's in.,,
1.92897E+17,bbss#6837,2017-07-01,https://clojure.org/guides/spec#_registry,,
1.92897E+17,bbss#6837,2017-07-01,explanation a little below registry,,
3.15279E+17,goomba#1378,2017-07-01,"@bbss Unless there's a part in there that explains _why_ they're using auto-namespacing, I still don't get it 😅",,
3.15279E+17,goomba#1378,2017-07-01,I understand the functionality but I don't get the usecase,,
1.92897E+17,bbss#6837,2017-07-01,"@goomba oh sorry, misread. I guess the point is to easily get a unique :some-attribute.",,
1.92897E+17,bbss#6837,2017-07-01,It has to be registered in a global registry,,
1.92897E+17,bbss#6837,2017-07-01,in case of spec*,,
1.92897E+17,bbss#6837,2017-07-01,so you might have address for the person namespaces and address for the company namespace,,
3.15279E+17,goomba#1378,2017-07-01,fair enough,,
1.92897E+17,bbss#6837,2017-07-01,"yea to be honest it's one of the less elegant parts of namespacing data, you could do :car/brand, which was nice, but a spec can't be called ::car/brand.",,
1.92897E+17,bbss#6837,2017-07-01,because autonamespaced can't have / 😦,,
1.22109E+17,Anticrisis#3048,2017-07-01,"hey, is there a spec predicate for a valid map key? I feel stupid that I can't find such a thing right now. Docs say anything that implements hashCode and equals.",,
1.92897E+17,bbss#6837,2017-07-02,@Anticrisis keyword?,,
3.01795E+17,arichiardi#2361,2017-07-02,There has been some discussion on the newsgroup about the global registry and the naming of your specs. Currently there is no way to have a parametrical registry and they aren't planning to support it,,
1.22109E+17,Anticrisis#3048,2017-07-02,"@bbss keyword? doesn't cover all valid map keys, only keywords. At first I thought you were trolling me with ""key?"" -- that's basically the predicate I need to make. ident? is helpful but also incomplete.",,
1.22109E+17,Anticrisis#3048,2017-07-02,"Of course, I can't think of a clojure object that isn't a valid key, so maybe any? will have to do.",,
1.92897E+17,bbss#6837,2017-07-02,"@Anticrisis oh right.. Sorry, not trolling 😄 I think any? is a good choice.",,
1.63628E+17,tufflax#8251,2017-07-03,"@Anticrisis Yes, anything can be a key",,
3.29763E+17,zcaudate#9919,2017-07-07,who's actually using spec and how are you finding it?,,
1.92897E+17,bbss#6837,2017-07-07,"I'm using it somewhat, mostly for experimenting though. I am interested to see how much value data generation can give.",,
1.92897E+17,bbss#6837,2017-07-07,"Specifically the generation is pretty cool, but doesn't always work out, especially in ClojureScript it more easily gives up finding a valid piece of data. That's a rough edge.",,
3.29763E+17,zcaudate#9919,2017-07-07,I just really can't stand `::keyword`,,
3.29763E+17,zcaudate#9919,2017-07-07,can it run with `:keyword` or `:ns/keyword`?,,
1.92897E+17,bbss#6837,2017-07-07,"I don't mind the auto namespace so much, but the fact that those can't be ::car/color annoys me",,
3.29763E+17,zcaudate#9919,2017-07-07,you can do that,,
1.92897E+17,bbss#6837,2017-07-07,hmm really?,,
3.29763E+17,zcaudate#9919,2017-07-07,well... if you go (require [something.car :as car]),,
3.29763E+17,zcaudate#9919,2017-07-07,and ::car/keyword expands to :something.car/keyword,,
3.29763E+17,zcaudate#9919,2017-07-07,but only in the code,,
1.92897E+17,bbss#6837,2017-07-07,well defining a spec (spec/def ::car/color (spec/spec string?))  didn't work when I last tried.,,
3.29763E+17,zcaudate#9919,2017-07-07,the problem I have with that is with code analysis,,
3.29763E+17,zcaudate#9919,2017-07-07,there's a request on kibit that's 5 years old because kibit can't figure out what to do with ::keyword,,
3.29763E+17,zcaudate#9919,2017-07-07,it's much harder because it depends on the namespace that it's in,,
1.92897E+17,bbss#6837,2017-07-07,Kibit doesn't use the analyzer?,,
3.29763E+17,zcaudate#9919,2017-07-07,I'm not sure,,
1.92897E+17,bbss#6837,2017-07-07,I'd think that would at least give it the file name.,,
1.92897E+17,bbss#6837,2017-07-07,I haven't used kibit much yet.,,
1.92897E+17,bbss#6837,2017-07-07,I should probably make that a default for my projects and integrate it in my workflow,,
3.29763E+17,zcaudate#9919,2017-07-07,haha,,
3.29763E+17,zcaudate#9919,2017-07-07,what are you working on atm?,,
1.92897E+17,bbss#6837,2017-07-07,"Hmm for money, I'm working on data.worldbank.org in JavaScript/node.",,
1.92897E+17,bbss#6837,2017-07-07,and in my own time I'm just on a ton of small projects with mostly ClojureScript (and Clojure where I need a back-end),,
1.92897E+17,bbss#6837,2017-07-07,"currently mostly experimenting with ways to make front-ends. Using datascript because I like the idea of normalized front-end state, querying that and options that gives for visualizing the codebase.",,
1.92897E+17,bbss#6837,2017-07-07,Also datascript is easy to persist to server and broadcast to other clients.,,
1.92897E+17,bbss#6837,2017-07-07,How about you? I've read your blog quite often in the past 😃,,
3.29763E+17,zcaudate#9919,2017-07-07,oh sweet.,,
3.29763E+17,zcaudate#9919,2017-07-07,yeah I'm looking to do a bit more frontend stuff myself.,,
1.92897E+17,bbss#6837,2017-07-07,ClojureScript is an exciting place for that in my opinion 😃,,👆 (1)
1.92897E+17,bbss#6837,2017-07-07,so many good ideas developing,,
3.29763E+17,zcaudate#9919,2017-07-07,"all those core.async, datascript stuff is really cool",,
3.29763E+17,zcaudate#9919,2017-07-07,yeah for real. it makes ui programming much less painful that it did,,
3.29763E+17,zcaudate#9919,2017-07-07,*than,,
1.92897E+17,bbss#6837,2017-07-07,"yeah, I have a new project coming up, will be pushing to use mori.js",,
1.92897E+17,bbss#6837,2017-07-07,I've used it a bit in the past and it's much better than alternatives.,,
1.92897E+17,bbss#6837,2017-07-07,Doing reduce/map/filter on javascript objects is freakin' awkward. And Facebooks' immutable library doesn't improve that much.,,
1.92897E+17,bbss#6837,2017-07-07,"Lodash and ramda make that more doable, but mori > those imo",,
1.92897E+17,bbss#6837,2017-07-07,mori is ClojureScript datastructures + many of the clojurescript functions.,,
1.92897E+17,bbss#6837,2017-07-07,redux has been good for the JS world I think. Forcing immutability in some sense 😃,,
1.92897E+17,bbss#6837,2017-07-07,and that's now one of the most popular state management options,,
1.92897E+17,bbss#6837,2017-07-07,we also use it on the worldbank project,,
3.29763E+17,zcaudate#9919,2017-07-07,oh that's fantastic,,
3.29763E+17,zcaudate#9919,2017-07-07,would they use cljs?,,
1.92897E+17,bbss#6837,2017-07-07,"hmm, I was actually the one that set it up in the start. I didn't want to take the gamble being the only dev on the project that does CLJ",,
3.29763E+17,zcaudate#9919,2017-07-07,i guess you can push datascript first,,
3.29763E+17,zcaudate#9919,2017-07-07,and then slowly sneak the compiler in there,,
1.92897E+17,bbss#6837,2017-07-07,"datascript does have a JS api, but it's a bit awkward, with datastructures in strings",,
3.29763E+17,zcaudate#9919,2017-07-07,and then... voila!,,
3.29763E+17,zcaudate#9919,2017-07-07,oh.,,
1.92897E+17,bbss#6837,2017-07-07,yeah I am actually thinking of doing that now with cljs spec,,
3.29763E+17,zcaudate#9919,2017-07-07,yeah. that's a problem,,
1.92897E+17,bbss#6837,2017-07-07,just including specs for the model and using it for at least generation for tests,,
3.29763E+17,zcaudate#9919,2017-07-07,oh cool,,
1.92897E+17,bbss#6837,2017-07-07,that might pique interest for what more it can do,,
1.92897E+17,bbss#6837,2017-07-07,1000% code coverage 😂,,
3.29763E+17,zcaudate#9919,2017-07-07,so you're using spec for frontend testing,,
3.29763E+17,zcaudate#9919,2017-07-07,that's really cool,,
1.92897E+17,bbss#6837,2017-07-07,well it has the value proposition that you can use it for schema validation,,
1.92897E+17,bbss#6837,2017-07-07,which is something that is not uncommon in the react world,,
1.92897E+17,bbss#6837,2017-07-07,"and if you have them, you can also generate data to automatically fill those components up with test data",,
1.92897E+17,bbss#6837,2017-07-07,I think it's very valuable,,
1.92897E+17,bbss#6837,2017-07-07,"I haven't used it in anger but it's worth a try, it all sounds worth it. Able to remove effort on decent unit tests and such.",,
3.29763E+17,zcaudate#9919,2017-07-07,"yeah. that would make things alot easier. also, if there was a way to generate documentation for spec - something like swagger - that'll be great",,
1.92897E+17,bbss#6837,2017-07-07,Yeah I'm sure that will be made at some point 😃,,
3.29763E+17,zcaudate#9919,2017-07-07,you should totally do it,,
1.92897E+17,bbss#6837,2017-07-07,"Yeah, would be good if I can sneak it into a project. Part JS and part CLJS.",,
3.15279E+17,goomba#1378,2017-07-07,"anyone want to play ""why is my clojure so slow"" with me today?",,
3.15279E+17,goomba#1378,2017-07-07,trying to do some data processing,,
3.15279E+17,goomba#1378,2017-07-07,"```(defn -main [& args]
  (let [value (slurp (nth files 1020))
        ws (words value)]
    (as-> {} x
        (time (assoc x :bigrams (bigrams ws)))
        (time (assoc x :trigrams (trigrams ws)))
        (time (assoc x :quadgrams (quadgrams ws))))))

""Elapsed time: 1570.11396 msecs""
""Elapsed time: 1957.212454 msecs""
""Elapsed time: 2403.794646 msecs""
```
This seems unreasonable to me",,
3.15279E+17,goomba#1378,2017-07-07,"```(defn ngrams [n contents]
  (let [ngs (partition n 1 contents)]
    (frequencies ngs)))

(defn bigrams [contents]
  (ngrams 2 contents))

(defn trigrams [contents]
  (ngrams 3 contents))

(defn quadgrams [contents]
  (ngrams 4 contents))
```",,
3.15279E+17,goomba#1378,2017-07-07,"I like to be the guy that says ""oh yeah? Well you should try Clojure"" but right now my Python code is running 10-100 times faster to do the same thing so I'm hoping I'm just doing something wrong 😭",,
3.29763E+17,zcaudate#9919,2017-07-07,@goomba what's your file?,,
3.15279E+17,goomba#1378,2017-07-07,a project gutenburg book,,
3.15279E+17,goomba#1378,2017-07-07,`.txt` type,,
3.15279E+17,goomba#1378,2017-07-07,lol.... I ended up writing a crappy Python/clojure interop library,,
3.15279E+17,goomba#1378,2017-07-07,time still isn't great but apparently faster than native Clojure even though it's over server/http/json 😂 😭,,
3.15279E+17,goomba#1378,2017-07-07,"so I hear the word ""reflection"" used a lot",,
3.15279E+17,goomba#1378,2017-07-07,what does that mean exactly?,,
3.15279E+17,goomba#1378,2017-07-07,"@seancorfield hooked me up with an answer in clojurians slack.  Thanks Sean, happy birthday!",,
1.57759E+17,Quixoticelixer#6239,2017-07-07,hmm,,
1.57759E+17,Quixoticelixer#6239,2017-07-07,"I mean, I don't really undersyadn what is happening",,
1.57759E+17,Quixoticelixer#6239,2017-07-07,but it seems unlikely that clojure shuld be over an order of magnitude slower,,
3.15279E+17,goomba#1378,2017-07-07,several orders of magnitude,,
1.57759E+17,Quixoticelixer#6239,2017-07-07,2 or 3 times slower would be suprising,,
1.57759E+17,Quixoticelixer#6239,2017-07-07,ut yeah,,
3.15279E+17,goomba#1378,2017-07-07,yeah I'm as shocked as you are,,
3.15279E+17,goomba#1378,2017-07-07,it's especially weird because `reduce` is about 100 times faster in Clojure when you're doing something like `assoc` into a map or `conj` to a list,,
1.57759E+17,Quixoticelixer#6239,2017-07-07,"there must be something ""obivous"" that is slowingit down a lot",,
3.15279E+17,goomba#1378,2017-07-07,"```def ftime(f):
    def fn(*args, **kwargs):
        t0 = time.time()
        res = f(*args, **kwargs)
        t = (time.time() - t0) * 1000
        print(f""Elapsed time: {t:.6f} msecs"")
        return res
    return fn
@ftime
def rtest():
    return reduce(lambda x, y: x + [y], range(10000), [])
x = rtest()
Elapsed time: 206.310987 msecs
```

```
(def x (time (reduce #(conj % %2) [] (range 10000))))
""Elapsed time: 3.70408 msecs""
```",,
3.15279E+17,goomba#1378,2017-07-07,it's even worse with maps,,
3.15279E+17,goomba#1378,2017-07-07,and yet somehow `frequency` is much slower than `collection.Counter`,,
1.38887E+17,Scallions#8493,2017-07-07,Have you looked at the time performance of that partition fn in *ngrams*?,,
1.38887E+17,Scallions#8493,2017-07-07,"Its just my speculation, but I'm midly suspicious of partition's performance when its step size is less than its partition size.",,
1.38887E+17,Scallions#8493,2017-07-08,"On a midly related note, I wish partition with *step* argument had a transducer arity, but its arity space is all taken up.",,
1.38887E+17,Scallions#8493,2017-07-08,"@goomba Also, what is *words* doing? Is it returning a lazy seq or a concrete data structure?",,
1.38887E+17,Scallions#8493,2017-07-08,"In general, if you need to optimize sequential stuff like this, I would be mindful on how deep your lazy seqs are and the data structure that is ultimately backing them.",,
1.38887E+17,Scallions#8493,2017-07-08,Having a swallower stack of seqs and an efficient data struct underneath is a step towards better performance.,,
3.15279E+17,goomba#1378,2017-07-08,I did a little investigating @Scallions ... the partition clocks in about 500 msecs for that file,,
3.15279E+17,goomba#1378,2017-07-08,`frequency` is running at about 1200 msecs,,
3.15279E+17,goomba#1378,2017-07-08,`words` is a regex that removes all punctuation from the string and calls `.toLowerCase` on it,,
1.38887E+17,Scallions#8493,2017-07-08,@goomba can I see the source for words? I'm mildly intrigued on why freqs is running so slow.,,
3.15279E+17,goomba#1378,2017-07-08,"certainly!
```clojure
(defn words [contents]
  (-> contents
      (.toLowerCase)
      (clojure.string/replace #""[^a-z&&[^\p{Space}]]"" """")))
```",,
3.15279E+17,goomba#1378,2017-07-08,honestly that regex didn't work at all,,
3.15279E+17,goomba#1378,2017-07-08,hahaha 😅,,
3.15279E+17,goomba#1378,2017-07-08,not used to Java regex,,
1.38887E+17,Scallions#8493,2017-07-08,"heh, takes a while to get use to.",,
3.15279E+17,goomba#1378,2017-07-08,"I'm trying for (in Python) `re.sub('\s+', '\s', contents)`",,
3.15279E+17,goomba#1378,2017-07-08,I suspect part of the reason I'm having a lot of issues with text processing in general is I'm unaccustomed to chars since they don't exist in Python,,
3.15279E+17,goomba#1378,2017-07-08,well... they can but in practice you don't work with them much,,
3.15279E+17,goomba#1378,2017-07-08,I'm not sure if it's more efficient to manipulate strings or char arrays in Java,,
3.15279E+17,goomba#1378,2017-07-08,actually I'm not even sure if a string is a thing in Java 😛 😅 😭,,
1.38887E+17,Scallions#8493,2017-07-08,trying to dechiper your regex.,,
1.38887E+17,Scallions#8493,2017-07-08,lol,,
3.15279E+17,goomba#1378,2017-07-08,lol all you need to know is it doesn't work,,
3.15279E+17,goomba#1378,2017-07-08,I'm trying to replace all whitespace greater than length one with a single space,,
1.38887E+17,Scallions#8493,2017-07-08,what the general idea? remove all punctuations? and collapse whitespaces?,,
3.15279E+17,goomba#1378,2017-07-08,right,,
1.38887E+17,Scallions#8493,2017-07-08,alrighty,,
3.15279E+17,goomba#1378,2017-07-08,"remove all punctuation, convert to lower case, trim all whitespace",,
3.15279E+17,goomba#1378,2017-07-08,it had the punctuation removed in a previous step,,
3.15279E+17,goomba#1378,2017-07-08,"```clojure
(defn extract-book [contents]
  (let [lang (language contents)
        start (re-escape ""*** START OF THIS PROJECT GUTENBERG EBOOK "")
        end (-> (re-escape (format ""*** END OF THIS PROJECT GUTENBERG EBOOK %s ***"" (title contents))))
        startp (re-pattern (format ""(?s)(?<=%s).*(?=%s)"" start end))]
    (if (not= lang ""English"")
      nil
      (re-find startp contents))))
```
like so",,
3.15279E+17,goomba#1378,2017-07-08,by the way I'm sure my Clojure is all garbage if you have any pointers I'm receptive,,
1.38887E+17,Scallions#8493,2017-07-08,we all start somewhere. It wasn't long ago when my clojure was terrible.,,
1.38887E+17,Scallions#8493,2017-07-08,give me some time and ill read through your stuff.,,
3.15279E+17,goomba#1378,2017-07-08,haha no worries!! don't feel like you have to 😛,,
3.15279E+17,goomba#1378,2017-07-08,but it is certainly appreciated!,,
1.38887E+17,Scallions#8493,2017-07-08,its no problem.,,
1.38887E+17,Scallions#8493,2017-07-08,"btw, this program makes character ngrams?",,
1.38887E+17,Scallions#8493,2017-07-08,not word level ngrams?,,
1.38887E+17,Scallions#8493,2017-07-08,"2gram for ""foo"" -> ""fo"" and ""oo""",,
3.15279E+17,goomba#1378,2017-07-08,"well the type of cipher we're trying to break, when decoded, would look something like `ilikekevinbacon`",,
3.15279E+17,goomba#1378,2017-07-08,so... my initial efforts were to remove all whitespaces and then get the overlapping ngrams,,
3.15279E+17,goomba#1378,2017-07-08,thus we could do a frequency based attack,,
3.15279E+17,goomba#1378,2017-07-08,"I was provided some frequency tables for bigrams, trigrams, quadgrams, etc, but the unfortunately gibberish strings were being scored above actual english strings",,
3.15279E+17,goomba#1378,2017-07-08,so I had to consider the possibility that the frequency tables I got weren't adequate and so I did some datamining of project gutenburg and got about 40k books,,
3.15279E+17,goomba#1378,2017-07-08,"then I set about processing them as described above but at 10-15 seconds per book was way to slow, even with massive parallelism",,
3.15279E+17,goomba#1378,2017-07-08,even if I were to parallelize the ngram crunching it would still bottleneck at about 3.5 seconds per book (with my current implementation) and ended up abandoning it in favor of a Python implementation which made me 😭,,
3.15279E+17,goomba#1378,2017-07-08,but without much tuning at all crunching a book in Python took about 0.3 seconds,,
3.15279E+17,goomba#1378,2017-07-08,so I set up a machine that could crunch 64 books at a time and got through them all in about 1.5 hours,,
3.15279E+17,goomba#1378,2017-07-08,"should also mention that I did substantially more in depth analysis, ngrams were just the start",,
3.15279E+17,goomba#1378,2017-07-08,"also measured words by string length, frequency by character position, intraword letter transition frequencies, interword transition frequencies by both letter and length, and word length frequency",,
3.15279E+17,goomba#1378,2017-07-08,the whole idea is to update the heuristic to a markov chain using a modified viterbi lattice technique to hopefully provide better probabilistic results,,
3.15279E+17,goomba#1378,2017-07-08,"it's amazing how hard it's turning out to be to write this function:
```clojure
(defn english-ness [s]
    ;<some float between 0 and 1>
)
```",,
1.38887E+17,Scallions#8493,2017-07-08,"so, I've done some testing",,
1.38887E+17,Scallions#8493,2017-07-08,I think partition is the slow part of your program,,
1.38887E+17,Scallions#8493,2017-07-08,"Your using partition as a sliding window of chars, so its returning a seq of seq of chars.",,
1.38887E+17,Scallions#8493,2017-07-08,and freqs is hasing each seq of chars into a map.,,
1.38887E+17,Scallions#8493,2017-07-08,hashing,,
1.38887E+17,Scallions#8493,2017-07-08,so the ngrams are represented as a seq of chars.,,
1.38887E+17,Scallions#8493,2017-07-08,its faster to use a string instead,,
1.38887E+17,Scallions#8493,2017-07-08,"so instead of using partition, use a function that returns a seq of strings, where ngrams represented as a string.",,
1.38887E+17,Scallions#8493,2017-07-08,"`(defn subs-windows
  [n s]
  (map #(subs s % (+ % n))
       (range (- (count s) (dec n)))))
`",,
1.38887E+17,Scallions#8493,2017-07-08,"```(defn subs-windows
  [n s]
  (map #(subs s % (+ % n))
       (range (- (count s) (dec n)))))

```",,
1.38887E+17,Scallions#8493,2017-07-08,i wrote this func to replace partition.,,
1.38887E+17,Scallions#8493,2017-07-08,"so ngrams should become ....

```
(defn ngrams [n contents]
  (let [ngs (subs-windows n contents)]
    (frequencies ngs)))
```",,
1.38887E+17,Scallions#8493,2017-07-08,"If your familiar with transducers, this can be optimized a bit more.",,
1.38887E+17,Scallions#8493,2017-07-08,"```clojure

(defn subs-windows-educt
  [n s]
  (eduction (map #(subs s % (+ % n)))
            (range (- (count s) (dec n)))))

(defn ngrams3 [n contents]
  (->> contents
       (subs-windows-educt n)
       (frequencies)))

```",,👏 (2)
3.15279E+17,goomba#1378,2017-07-08,I'm not but it's something I really need to learn,,
1.38887E+17,Scallions#8493,2017-07-08,"With eductions, you can get rid of the lazy in-between seq and hit the fast path of frequencies.",,
1.38887E+17,Scallions#8493,2017-07-08,but i think the performance gain is minor,,
3.15279E+17,goomba#1378,2017-07-08,😮 that's very cool!  I've never seen `eduction` before,,
1.38887E+17,Scallions#8493,2017-07-08,try it out and let me know if it helps,,
3.15279E+17,goomba#1378,2017-07-08,"oh man, that is a really cool function",,
1.38887E+17,Scallions#8493,2017-07-08,its sounds really cool,,
1.38887E+17,Scallions#8493,2017-07-08,rich has a way with words,,
3.15279E+17,goomba#1378,2017-07-08,he does... I was just reading an article on that,,
3.15279E+17,goomba#1378,2017-07-08,whoa!,,
3.15279E+17,goomba#1378,2017-07-08,huge performance boost!,,
3.15279E+17,goomba#1378,2017-07-08,"for this:
```clojure
(let [ws (words (slurp (nth files 1020)))]
  (as-> {} x
        (time (assoc x :bigrams (bigrams ws)))
        (time (assoc x :trigrams (trigrams ws)))
        (time (assoc x :quadgrams (quadgrams ws)))))

;; old ngrams
""Elapsed time: 2757.354376 msecs""
""Elapsed time: 2871.269136 msecs""
""Elapsed time: 5800.472912 msecs""

;; new ngrams
""Elapsed time: 472.799067 msecs""
""Elapsed time: 546.266424 msecs""
""Elapsed time: 600.353238 msecs""
```",,
3.15279E+17,goomba#1378,2017-07-08,"wait, what exactly is `subs-windows-educt` doing?? Is that getting all `ngrams` less than `n`??",,
3.15279E+17,goomba#1378,2017-07-08,if so that's an order of magnitude faster!! 12s to 0.6s!!!!,,
1.38887E+17,Scallions#8493,2017-07-08,"just try it out

(subs-windows-educt 4 ""FOOBAR"") 

or something along those lines",,
1.38887E+17,Scallions#8493,2017-07-08,"gives me (""FOOB"" ""OOBA"" ""OBAR"")",,
3.15279E+17,goomba#1378,2017-07-08,"okay, so still need to run all of them but that's still 12 sec to 1.5 sec",,
3.15279E+17,goomba#1378,2017-07-08,"that's pretty amazing, will need to meditate on this!!",,
1.38887E+17,Scallions#8493,2017-07-08,How long does the python version take?,,
3.15279E+17,goomba#1378,2017-07-08,let me grab the same file so I can do an apples-ish comparison,,
3.15279E+17,goomba#1378,2017-07-08,"I won't pollute the page with the Python code but it clocks in at 
`Elapsed time: 1385.450363`",,
3.15279E+17,goomba#1378,2017-07-08,honestly it's really hard to do a comparison,,
3.15279E+17,goomba#1378,2017-07-08,getting a pretty high variability in the times,,
3.15279E+17,goomba#1378,2017-07-08,I just ran the clojure version in a loop,,
3.15279E+17,goomba#1378,2017-07-08,"```
""Elapsed time: 2968.816692 msecs""
""Elapsed time: 2319.135285 msecs""
""Elapsed time: 2653.415719 msecs""
""Elapsed time: 1760.249621 msecs""
""Elapsed time: 4849.011896 msecs""
""Elapsed time: 1633.566859 msecs""
""Elapsed time: 1479.432911 msecs""
""Elapsed time: 3271.42944 msecs""
""Elapsed time: 1590.141252 msecs""
""Elapsed time: 1635.948575 msecs""
```",,
3.15279E+17,goomba#1378,2017-07-08,"ah, I think part of the reason the Python is running consistently faster is because I'm doing a lot of memoization tricks",,
3.15279E+17,goomba#1378,2017-07-08,"🤔 that also explains the ""memory leak"" I was seeing when running at scale 🤔",,
3.15279E+17,goomba#1378,2017-07-08,lol forgot about that,,
3.15279E+17,goomba#1378,2017-07-08,however...,,
3.15279E+17,goomba#1378,2017-07-08,With Clojure it would be very easy to run those jobs in parallel using go blocks,,
3.15279E+17,goomba#1378,2017-07-08,well... easy if you know what you're doing which I don't 😂,,
3.15279E+17,goomba#1378,2017-07-08,That's not really possible in Python,,
3.15182E+17,hswick#4417,2017-07-08,Everytime I tried to parallelize my python code it would crap out and give me errors about pickles,,
3.15279E+17,goomba#1378,2017-07-08,😂 😂 😂 😂,,
3.15279E+17,goomba#1378,2017-07-08,"yeah, interprocess communication is very irritating in Python",,
3.15279E+17,goomba#1378,2017-07-08,also has a pretty hefty overhead,,
3.15279E+17,goomba#1378,2017-07-08,the most granularity I could get with parallelization was at the book level,,
3.15279E+17,goomba#1378,2017-07-08,but I'm thinking with Clojure I could actually parallelize the `ngram` operations 🤔,,
3.15279E+17,goomba#1378,2017-07-08,lets see... what would I need for that...,,
3.15182E+17,hswick#4417,2017-07-08,pmap ftw,,
3.15279E+17,goomba#1378,2017-07-08,eh?,,
3.15182E+17,hswick#4417,2017-07-08,puts on resume expert in multithreading,,
3.15182E+17,hswick#4417,2017-07-08,pmap for the win,,
3.15279E+17,goomba#1378,2017-07-08,bwahahaha,,
3.15279E+17,goomba#1378,2017-07-08,😮 😮,,
3.15279E+17,goomba#1378,2017-07-08,is pmap lazy ??,,
3.15182E+17,hswick#4417,2017-07-08,"on clojuredocs ""Semi-lazy in that the
parallel computation stays ahead of the consumption, but doesn't
realize the entire result unless required.""",,
3.15279E+17,goomba#1378,2017-07-08,either way WOW GOOD CALL!!! Look at these times!!,,
3.15279E+17,goomba#1378,2017-07-08,"```
""Elapsed time: 1057.804951 msecs""
""Elapsed time: 794.708441 msecs""
""Elapsed time: 764.035451 msecs""
""Elapsed time: 796.403398 msecs""
""Elapsed time: 774.651062 msecs""
""Elapsed time: 739.087022 msecs""
""Elapsed time: 1000.918872 msecs""
""Elapsed time: 1202.689747 msecs""
""Elapsed time: 1229.828847 msecs""
""Elapsed time: 940.420306 msecs""
```",,
3.15182E+17,hswick#4417,2017-07-08,😆 I was half joking but I'm glad it helped!!!,,
3.15279E+17,goomba#1378,2017-07-08,"changed
```
(let [ws (words (slurp (nth files 1020)))]
    (time {:bigrams   (bigrams ws)
           :trigrams  (trigrams ws)
           :quadgrams (quadgrams ws)}))
```
to
```
(let [ws (words (slurp (nth files 1020)))]
    (time (vec (pmap #(% ws) [bigrams trigrams quadgrams]))))
```",,
3.15279E+17,goomba#1378,2017-07-08,that's awesome!!!!!,,
3.15279E+17,goomba#1378,2017-07-08,this is amazing!  You guys ( @Scallions @hswick ) have restored my faith in Clojure!!! 😭 😭 😭 (happy tears),,"😃 (3),👌 (3)"
1.38887E+17,Scallions#8493,2017-07-08,"Well, I'm glad to have helped.",,
1.38887E+17,Scallions#8493,2017-07-08,"now you can be that guy!

*being smug in clojure*",,
1.57759E+17,Quixoticelixer#6239,2017-07-08,[Smugs in Clojure],,
3.15279E+17,goomba#1378,2017-07-08,YES!  that's the best feeling ever!!,,
3.15279E+17,goomba#1378,2017-07-08,pretty sure the only people more smug than us are the haskell guys,,
3.15279E+17,goomba#1378,2017-07-08,"but, I mean, come on.  I want to do something more practical than make my computer hot haha",,
3.15279E+17,goomba#1378,2017-07-08,"also, _hello_, macros?",,
3.15279E+17,goomba#1378,2017-07-08,"plus I've never heard of HaskellScript, or HaskelTomic",,
3.15279E+17,goomba#1378,2017-07-08,"nevermind, maybe we are the most smug",,
3.15279E+17,goomba#1378,2017-07-08,smuggest?,,
3.15279E+17,goomba#1378,2017-07-08,smugliest?,,
1.57759E+17,Quixoticelixer#6239,2017-07-08,smugliest,,
3.15279E+17,goomba#1378,2017-07-08,:nods: 😐,,
3.15279E+17,goomba#1378,2017-07-08,"I finally realized your handle is ""quixotic elixer"".  I was previously reading it as ""quicks eh tick licks er""",,
1.57759E+17,Quixoticelixer#6239,2017-07-08,"its actually ""q"" ""uixoticelixer""",,
3.15279E+17,goomba#1378,2017-07-08,oooooohhhh,,
3.15279E+17,goomba#1378,2017-07-08,my bad 😂,,
3.15279E+17,goomba#1378,2017-07-10,@crgrand in Clojurians showed me how to use xforms with that code and it actually cut the time down by another 50% to a full 10x speed increase,,
3.15182E+17,hswick#4417,2017-07-10,You should put out a ngrams library,,
1.23962E+17,屈才#4590,2017-07-10,Anyone here use pedestal,,
1.23962E+17,屈才#4590,2017-07-10,I can't figure out how to serve my fuckin' css,,
1.23962E+17,屈才#4590,2017-07-10,"Compojure was piss easy, this is hell",,
3.15279E+17,goomba#1378,2017-07-10,@hswick 😅,,
3.15279E+17,goomba#1378,2017-07-10,@屈才 I've been using Garden... pretty easy so far,,
1.23962E+17,屈才#4590,2017-07-10,I cannot figure this out,,
1.23962E+17,屈才#4590,2017-07-10,It's insanity,,
3.15279E+17,goomba#1378,2017-07-10,😦,,
3.15279E+17,goomba#1378,2017-07-10,Hate that crap,,
1.23962E+17,屈才#4590,2017-07-10,I just want to put my gay little css file out there,,
1.23962E+17,屈才#4590,2017-07-10,I see no reason to use pedestal over compojure atm it seems like unusable garbage,,
3.15279E+17,goomba#1378,2017-07-10,😂 yeah I'm not sure... I keep it basic af ... do most stuff with react/quiescent so only need to server two or three static files and the rest is dynamic,,
1.38887E+17,Scallions#8493,2017-07-11,I peeked at that slack thread @goomba . cgrand's transducer looks pretty interesting and performant.,,
3.15279E+17,goomba#1378,2017-07-11,yeah... excited for when I have the mental bandwidth to open up the hood on the xforms @Scallions,,
1.92897E+17,bbss#6837,2017-07-13,so did we beat python peeps? can we smug in clojure?,,
1.57759E+17,Quixoticelixer#6239,2017-07-13,python isnt even smug,,
1.57759E+17,Quixoticelixer#6239,2017-07-13,pytohn is like normie level language,,
1.92897E+17,bbss#6837,2017-07-13,Heheh. Python is.. acceptableeee 🍋,,
1.57759E+17,Quixoticelixer#6239,2017-07-13,lemon?,,
1.92897E+17,bbss#6837,2017-07-13,https://www.youtube.com/watch?v=TPpUafsSSaY,,
1.92897E+17,bbss#6837,2017-07-13,"I tried writing python with a lot of nested maps and reduces, it became unreadable",,
1.92897E+17,bbss#6837,2017-07-13,python is def not made for functional programming 😃,,
1.57759E+17,Quixoticelixer#6239,2017-07-13,i ned to learn how ot use teh threading macros,,👍 (1)
1.92897E+17,bbss#6837,2017-07-13,"threading macros, can't live without them. 😄",,
1.64166E+17,Zylox#2470,2017-07-13,"threading macro, its like lisp with more implying",,
1.64166E+17,Zylox#2470,2017-07-13,and less lisp,,
1.23962E+17,屈才#4590,2017-07-17,Anyone happen to know why my Compojure api is being broken into 404s and OPTION requests by CORS,,
1.23962E+17,屈才#4590,2017-07-17,It's pissing me off and I can't fix it,,
1.57759E+17,Quixoticelixer#6239,2017-07-17,"no, but CORS confuses me",,
1.23962E+17,屈才#4590,2017-07-17,Any time I've had a clojure REST api on localhost while developing,,
1.23962E+17,屈才#4590,2017-07-17,CORS fucks everyhting up,,
1.23962E+17,屈才#4590,2017-07-17,and I never *know* how i fix it i just do,,
1.57759E+17,Quixoticelixer#6239,2017-07-17,i just remove  it,,
1.23962E+17,屈才#4590,2017-07-17,remove what?,,
1.57759E+17,Quixoticelixer#6239,2017-07-17,things that look like they might have something to do with cors,,
1.57759E+17,Quixoticelixer#6239,2017-07-17,i'm very profeshnil,,
1.23962E+17,屈才#4590,2017-07-17,Unfortunately I actually need it,,
1.23962E+17,屈才#4590,2017-07-17,and it works when i move it off localhost,,
1.57759E+17,Quixoticelixer#6239,2017-07-17,aaah,,
1.23962E+17,屈才#4590,2017-07-17,I fucking hate server side development,,
1.23962E+17,屈才#4590,2017-07-17,"This shit is hell, even in Clojure",,
1.23962E+17,屈才#4590,2017-07-17,and this is dead-ass the easiest language on the planet,,
1.18096E+17,stuckpanda#5806,2017-07-18,"so the cors issues happen when you run the backend on your local machine, but not when you run it on the prod server? is the frontend on your local machine trying to talk to your prod server via hardcoded urls?",,
2.17303E+17,daz#0293,2017-07-18,"Could it be different ports? One thing I do is set Allow-Access-control-origin to `*`. and enable a OPTIONS request with the same header sent to the browser, for local. And then just have different configuration for prod and local and testing etc.",,
1.57759E+17,Quixoticelixer#6239,2017-07-18,github crash,,
1.23962E+17,屈才#4590,2017-07-25,i dun get it man,,
1.23962E+17,屈才#4590,2017-07-25,Macros are hard,,
1.23962E+17,屈才#4590,2017-07-27,"Ugh, any smarter people around?",,
1.57759E+17,Quixoticelixer#6239,2017-07-27,no,,
2.65283E+17,Slackwise#2471,2017-07-27,"No, I'm the smartest person here, and that's not saying much. Sorry.",,
3.29763E+17,zcaudate#9919,2017-07-27,"@hagus, @AlexE ^^",,
1.78739E+17,AlexE#7100,2017-07-27,?,,
3.29763E+17,zcaudate#9919,2017-07-28,I thought it was pretty obvious. It's difficult to communicate these days. If I had said 'there is a damsel in distress' it would usually get me booted out in most places these days.,,
1.57759E+17,Quixoticelixer#6239,2017-07-28,ehat,,
1.23962E+17,屈才#4590,2017-07-28,I want to write this macro,,
1.23962E+17,屈才#4590,2017-07-28,that defines a method,,
1.23962E+17,屈才#4590,2017-07-28,and takes 1 arg with a constant name,,
1.23962E+17,屈才#4590,2017-07-28,and then I guess an anonymous fn inside that gets applied to the params for that function,,
1.23962E+17,屈才#4590,2017-07-28,but I couldn't figure out how to do it,,
1.23962E+17,屈才#4590,2017-07-28,I'm making a macro for a json response and I ended up just settling for somethiing simpler,,
1.23962E+17,屈才#4590,2017-07-28,http://shekels.wtf/i/dda2067720da.meme.png,,
1.23962E+17,屈才#4590,2017-07-28,So I can do smth like this,,
1.23962E+17,屈才#4590,2017-07-28,http://shekels.wtf/i/f5daa770cd40.meme.png,,
1.23962E+17,屈才#4590,2017-07-28,"But ideally, json-response would make a method itself and be used like
```clojure
(json-response create-user [email :email password :password]
    (add-user! email password)
    (make-auth-token req))```",,
1.23962E+17,屈才#4590,2017-07-28,or I suppose if it was defined as an anonymous fn req could be substituted with `%`/`%1`,,
1.23962E+17,屈才#4590,2017-07-28,"either way I'd want that to expand to a method definition with 1 parameter named req, the let block, and then the expr",,
3.29763E+17,zcaudate#9919,2017-07-28,@alice: so you want to have it destructure params?,,
3.29763E+17,zcaudate#9919,2017-07-28,I see what you want to do... like  `(defresponse create-user ...)`,,
3.29763E+17,zcaudate#9919,2017-07-28,"it's a little dangerous to have `req` like that and to be honest, it's probably better if you don't use a macro",,
3.29763E+17,zcaudate#9919,2017-07-28,this should work:,,
3.29763E+17,zcaudate#9919,2017-07-28,"```
(defmacro jason-response [name bindings body]
    `(defn ~name [{:keys [~'params] :as ~'req}]
       (let [~(apply hash-map bindings) ~'params]
         ~@body)))
```",,
3.29763E+17,zcaudate#9919,2017-07-28,you can check by calling macroexpand-1,,
3.29763E+17,zcaudate#9919,2017-07-28,"```
(macroexpand-1 '(jason-response create-user [email :email password :password]
                                  [email password]))

  => (clojure.core/defn create-user [{:as req, :keys [params]}]
       (clojure.core/let [{email :email, password :password} params] email password))
```",,
3.29763E+17,zcaudate#9919,2017-07-28,"```
  (create-user {:params {:email ""hello@world.com"" :password ""secret""}})
  => [""hello@world.com"" ""secret""]
```",,
3.29763E+17,zcaudate#9919,2017-07-28,"I forgot the `&` before `body`:
```
(defmacro jason-response [name bindings & body]
    `(defn ~name [{:keys [~'params] :as ~'req}]
       (let [~(apply hash-map bindings) ~'params]
         ~@body)))
```",,
3.29763E+17,zcaudate#9919,2017-07-28,"I would advise against doing that and just using :
```
(defn create-user [{:as req, :keys [params]}]
       (let [{email :email, password :password} params]
         ...
         ...))
```",,
3.29763E+17,zcaudate#9919,2017-07-28,cos it's pretty clear already,,
1.23962E+17,屈才#4590,2017-07-30,I suppose you're right,,
1.89169E+17,srasu#0042,2017-08-05,"So the book Clojure for the Brave and True suggests that the use function and :use reference in the ns macro are considered frowned-upon in production code. Is that still valid, and why is that the case?",,
1.92897E+17,bbss#6837,2017-08-06,"@srasu when you use use, definitions from that namespace get imported as if it's in your current namespace",,
1.92897E+17,bbss#6837,2017-08-06,this means that you can have name collisions,,
1.92897E+17,bbss#6837,2017-08-06,which can cause problems obviously.,,
1.92897E+17,bbss#6837,2017-08-06,it's more for when you're hacking around and you don't want to manage importing and deleting obsolete imports,,
1.92897E+17,bbss#6837,2017-08-06,does that make sense or would you like an example?,,
1.89169E+17,srasu#0042,2017-08-06,That makes sense.,,
1.23962E+17,屈才#4590,2017-08-13,Clojure is tthe best language I've ever used and the community is fucking dead,,
1.23962E+17,屈才#4590,2017-08-13,why,,
2.98148E+17,lepistane#2482,2017-08-13,it's mostly on slack,,
2.98148E+17,lepistane#2482,2017-08-13,not here,,
2.98148E+17,lepistane#2482,2017-08-13,this is just one man operation to spread it to discord too,,
2.98148E+17,lepistane#2482,2017-08-13,anyway,,
2.98148E+17,lepistane#2482,2017-08-13,can anyone help me with,,
2.98148E+17,lepistane#2482,2017-08-13,"oke am i doing something wrong?


[2:36] 
ajax.cljs `post` to server and when i use `:body` it's `#object[java.io.ByteArrayInputStream 0x5aec0e6e java.io.ByteArrayInputStream@5aec0e6e]`
is that normal ?
what do i do now?


[2:36] 
do i need to parse that with `transit.clj`


[2:36] 
or error is else where?",,
1.92897E+17,bbss#6837,2017-08-13,@屈才 https://clojurians.slack.com/ is more alive,,
1.57759E+17,Quixoticelixer#6239,2017-08-15,I dojn't really like slack,,
1.57759E+17,Quixoticelixer#6239,2017-08-15,for open source stuff,,
1.57759E+17,Quixoticelixer#6239,2017-08-15,I think it is quite bad for open source communities,,
9.52897E+16,yung hygiene#5230,2017-08-16,"agreed, IRC is best",,
1.57759E+17,Quixoticelixer#6239,2017-08-16,irc is okay,,
1.57759E+17,Quixoticelixer#6239,2017-08-16,discord is okay,,
1.92897E+17,bbss#6837,2017-08-16,@zcaudate I just started doing stuff with protobuf for making use of the StarCraft 2 AI API that DeepMind+Blizzard recently  released.,,
1.92897E+17,bbss#6837,2017-08-16,The clojure library for protobuf is not maintained anymore and I'm hitting a lot of issues with that.,,
1.92897E+17,bbss#6837,2017-08-16,"Dropping down to Java seems like the best way to go, but my god is it mutable and java-ish.",,
1.92897E+17,bbss#6837,2017-08-16,I'm really excited having discovered your http://docs.caudate.me/lucidity/lucid-mind.html,,
1.92897E+17,bbss#6837,2017-08-16,that should help out a bunch navigating through Java swamp-land,,
1.92897E+17,bbss#6837,2017-08-17,"Yep, the .? operator is a new addition to my toolbox for sure 😃",,
1.57759E+17,Quixoticelixer#6239,2017-08-17,?,,
9.52897E+16,yung hygiene#5230,2017-08-17,:monkaS:,,
2.98148E+17,lepistane#2482,2017-08-17,yo my manz,,
2.98148E+17,lepistane#2482,2017-08-17,wadap,,
2.08302E+17,Sgoettschkes#2749,2017-08-18,I'm starting to go crazy with the ring site-defaults and anti-forgery. Anyone have experience with it and a few minutes?,,
2.98148E+17,lepistane#2482,2017-08-18,i've kindaa used it,,
2.98148E+17,lepistane#2482,2017-08-18,but with luminus,,
2.98148E+17,lepistane#2482,2017-08-18,that all has been setup,,
2.98148E+17,lepistane#2482,2017-08-18,i just follow like monkey,,👍 (1)
3.15182E+17,hswick#4417,2017-08-18,switched to luminus because i was specifically having such a hard time with ring configuration,,
3.15182E+17,hswick#4417,2017-08-23,Hey if anyone is interested in messing with a linear algebra library. Just released a stablish version of nd4j wrapper https://github.com/hswick/jutsu.matrix,,
1.92897E+17,bbss#6837,2017-08-25,cool,,
1.92897E+17,bbss#6837,2017-08-25,I guess some day I will get to that. I'm hoping to get into machine learning,,
1.92897E+17,bbss#6837,2017-08-25,"but I haven't spent much time on math in my life, a shame I think now.",,
1.92897E+17,bbss#6837,2017-08-25,how does it compare to core.matrix and neanderthal ?,,
3.15182E+17,hswick#4417,2017-08-25,I actually learned linear algebra by using core.matrix lol,,
1.92897E+17,bbss#6837,2017-08-25,ah that sounds good 😄,,
1.92897E+17,bbss#6837,2017-08-25,I am planning to learn by doing too,,
1.92897E+17,bbss#6837,2017-08-25,"StarCraft II api, so HYPED",,
1.92897E+17,bbss#6837,2017-08-25,my fav game has a ML AI api,,
3.15182E+17,hswick#4417,2017-08-25,"I would say the big difference is the internal library that I'm using ND4J. It can use cpu, gpu, multi gpu, which core.matrix didn't really have. There was an implementation of core.matrix using ND4J but it wasn't very developed and mine already ahs significantly more features. Difference with neanderthal is that I'm striving to be more user friendly lol, and once again ND4J",,
1.92897E+17,bbss#6837,2017-08-25,cool,,
1.92897E+17,bbss#6837,2017-08-25,"how about cortex? I've looked at that for a bit too, it seems to work with cpu and nvidia, and I think I saw some talk about openCL",,
3.15182E+17,hswick#4417,2017-08-25,"Reason I am targeting ND4J is to interact with Deeplearning4j which uses ND4J under the hood. Currently working on a wrapper for that so you will be able to plug it in, and crush those fools in StarCraft using python",,
1.92897E+17,bbss#6837,2017-08-25,you will also work on the SC api?,,
3.15182E+17,hswick#4417,2017-08-25,"Well I havent used SC api, but I would imagine since its an API you can plug in whatever the hell you want",,
1.92897E+17,bbss#6837,2017-08-25,yep,,
1.92897E+17,bbss#6837,2017-08-25,I have already started on it actually,,
1.92897E+17,bbss#6837,2017-08-25,a week back or so,,
1.92897E+17,bbss#6837,2017-08-25,https://github.com/bbss/cljsc2,,
1.92897E+17,bbss#6837,2017-08-25,not much there..,,
1.92897E+17,bbss#6837,2017-08-25,but I have done more work last week,,
3.15182E+17,hswick#4417,2017-08-25,"Dif with cortex is that Deeplearning4j has a lot more algos, like recurrent neural nets and it can utilize multi gpus which I believe cortex cant",,
1.92897E+17,bbss#6837,2017-08-25,protobuf library is not maintained so dealing with the Java generated protobuf classes is annoying,,
1.92897E+17,bbss#6837,2017-08-25,"so I use a grammer file for the proto spec, and use instaparse to parse the api's spec",,
1.92897E+17,bbss#6837,2017-08-25,then turn that into clojure spec,,
1.92897E+17,bbss#6837,2017-08-25,which is almost done,,
1.92897E+17,bbss#6837,2017-08-25,and I've written some proof of concept to turn that into java,,
1.92897E+17,bbss#6837,2017-08-25,so you don't have to use the damn imperative builder Api that java gives to protobuf,,
3.15182E+17,hswick#4417,2017-08-25,"Thats rad! Would be more than happy to help with some of the AI stuff, never played SC before, but I'm trying to get my hands dirty with as many applied machine learning projects as possible",,
1.92897E+17,bbss#6837,2017-08-25,and get autocomplete on the specs/spec explorer if ide supports that,,
1.92897E+17,bbss#6837,2017-08-25,"oh, I am really looking for a mentor of sorts so any type of help is appreciated",,
1.92897E+17,bbss#6837,2017-08-25,I was thinking of actively trying to find people who can help me after I make something useful for using the api from clojure,,
1.92897E+17,bbss#6837,2017-08-25,because imo it's an awesome playground for ML,,
3.15182E+17,hswick#4417,2017-08-25,"Sweet! I'm not an ML expert, but I am trying to make ML more accessible for Clojure community",,
1.92897E+17,bbss#6837,2017-08-25,"it has a raw data api, but the DeepMind team made sure to make a fair match between human and machine possible",,
1.92897E+17,bbss#6837,2017-08-25,so they're offering feature layers,,
1.92897E+17,bbss#6837,2017-08-25,"kind of visual approach with low information, similar to what you as a humanget",,
1.92897E+17,bbss#6837,2017-08-25,and they even have an api to control the clicking and dragging of units using co-ordinates on screen,,
1.92897E+17,bbss#6837,2017-08-25,my plan is: get the specs to be able to generate the protobufs,,
1.92897E+17,bbss#6837,2017-08-25,so go from clojure map -> message -> response,,
1.92897E+17,bbss#6837,2017-08-25,"- then create a run-loop and actually interact with the game, maybe try to imperatively finish a mini-game to get familiar
- then create a web-app that renders the available feature layers (the python api uses a framework called pygame, but I think the protobuf api gives image data in some format that should be browser-viewable)",,
1.92897E+17,bbss#6837,2017-08-25,in my wildest fantasy I create an awesome clojure(script) app that demo's different approaches to problems using screenshots and feature layers,,
1.92897E+17,bbss#6837,2017-08-25,and have a way to comfortably start up multiple faster than realtime sessions,,
1.92897E+17,bbss#6837,2017-08-25,all from the repl 😃,,
3.15182E+17,hswick#4417,2017-08-25,That sounds ambitious! But I beleive in you! 💯,,
1.92897E+17,bbss#6837,2017-08-25,haha yea aiming high 😄,,
3.15182E+17,hswick#4417,2017-08-25,"Definitely ping me when you think its ready to go, hopefully by then my ML lib will be ready",,
1.92897E+17,bbss#6837,2017-08-25,"thanks for the encouragement, I will keep updating about progress if you would like",,
1.92897E+17,bbss#6837,2017-08-25,sure! 😄,,
1.92897E+17,bbss#6837,2017-08-25,"it's something I will be investing a lot of time in, even if work gets busy I will still always make some time for it. it has such strong overlap with my interests, no way I can let this slip 😄",,
3.15182E+17,hswick#4417,2017-08-27,Is there a way to see what java classes you have imported in a namespace?,,
1.30052E+17,gibb#5070,2017-08-28,"I'm looking to do some graph exploration and visualization of some pretty shoddily gathered data, and Clojure seems like a good fit with the interactive programming experience in the REPL.
Does anyone know of a good graph visualization library for clojure that could be presented either as html or images?",,
1.30052E+17,gibb#5070,2017-08-28,"Interactivity with the ""finished product"" is not a requirement but would be nice (like being able to collapse/expand the graph at a node).
Just exported images for a powerpoint is good enough for now",,
1.30052E+17,gibb#5070,2017-08-28,"I'm currently running thru all the top google hits for ""graph visualization clojure"", but any real experience would be super helplful too! =)",,
3.15182E+17,hswick#4417,2017-08-28,"@gibb Recently put out a library that will do just that! 😄 https://github.com/hswick/jutsu It uses plotly on the frontend, so you have a ton of options there. And worse case if jutsu doesnt quite fit your needs, making your own custom tool with plotly using cljs is pretty easy.",,
1.30052E+17,gibb#5070,2017-08-28,"Sounds noice, I'll take a look =)",,
3.18878E+17,AlexBaranosky#3488,2017-08-29,what's the best new Clojure tech in the last year?,,
1.90548E+17,seancorfield#3069,2017-08-29,Does clojure.spec fit into that window?,,
3.18878E+17,AlexBaranosky#3488,2017-08-29,"nah, too old 😃",,
3.18878E+17,AlexBaranosky#3488,2017-08-29,I'm looking for something I'm too in my own echo chamber to know exists,,
3.18878E+17,AlexBaranosky#3488,2017-08-29,I'm stuck in my ways,,"💯 (1),👌 (1)"
1.92897E+17,bbss#6837,2017-08-29,heard of graphQL? also pretty old by now but the clojure implementation is pretty good,,
1.92897E+17,bbss#6837,2017-08-29,"not sure what direction you're looking, being stuck in your ways and all 😄",,
1.92897E+17,bbss#6837,2017-08-29,"I find the machine learning stuff for clojure exciting, Neanderthal/cortex.",,
1.92897E+17,bbss#6837,2017-08-29,For web server I like yada/aleph a lot.,,
3.01795E+17,arichiardi#2361,2017-09-03,Oh jutsu is very nice thanks!!,,😄 (1)
3.15182E+17,hswick#4417,2017-09-03,Recently added more examples to the readme,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,i wrote my first useful macro 1,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,!,,🤘 (2)
1.57759E+17,Quixoticelixer#6239,2017-09-04,"```clj


(def command-file (slurp ""data.json""))

(defn read-data []
  (->> (json/parse-string command-file)
       (seq)
       (map (fn [data] (create-command (symbol (first data)) (last data))))
       (map var-get)
       (vec)))

(defmacro create-command [name result]
  (let [name-sym (gensym ""name"")
        type-sym (gensym ""type"")
        data-sym (gensym ""data"")]
    `(defn ~name-sym [~type-sym ~data-sym] (discord/answer-command ~data-sym ~name (str ~result)))))
```",,😮 (1)
2.37128E+17,Frozen Yogurt Princess#1597,2017-09-04,defn should only occur on the top-level,,
2.37128E+17,Frozen Yogurt Princess#1597,2017-09-04,"To be honest, I'm not good at reading macros, but couldn't that macro be replaced with a function returning a function?",,
1.89169E+17,srasu#0042,2017-09-04,Well if he's using create-command at top level... Granted maybe it should be called def-command then.,,
1.89169E+17,srasu#0042,2017-09-04,"And maybe it could, if he doesn't want it to be able to be required by other namespaces.",,
1.57759E+17,Quixoticelixer#6239,2017-09-04,idk,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,What do you mean have it at the top level?,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,isn't it alreay at the top level,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,or am I missing something,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,I think I probably don't need a macro,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,but originially I wanted you to be able to name the function,,
1.3695E+17,Lilly Knight#1014,2017-09-04,By top level they mean like... ok so `def` `defn` and `defmacro` in that example are at toplevel,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,yeah?,,
1.3695E+17,Lilly Knight#1014,2017-09-04,They don't return to anything. They're not in a let. They're just toplevel forms,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,"oh, so that macro defn?",,
1.57759E+17,Quixoticelixer#6239,2017-09-04,should be at top level,,
1.3695E+17,Lilly Knight#1014,2017-09-04,No that's fine,,
1.3695E+17,Lilly Knight#1014,2017-09-04,Wrapping `defn` with macros is a non-problem,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,"ye, cool",,
1.3695E+17,Lilly Knight#1014,2017-09-04,The important thing to keep in mind is that if you do something like,,
1.3695E+17,Lilly Knight#1014,2017-09-04,"```clojure
(let [...]
  (defn some-func [...]
      ....))
```",,
1.3695E+17,Lilly Knight#1014,2017-09-04,Pardon the shitty formatting,,
1.3695E+17,Lilly Knight#1014,2017-09-04,Then the defn affects global state,,
1.3695E+17,Lilly Knight#1014,2017-09-04,If you def or defn or defmacro something that's not constrained to local scope the same way say `define` is in scheme,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,ahhh,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,A better way to do it would be to return an anonymous function?,,
1.3695E+17,Lilly Knight#1014,2017-09-04,Are you intending for users to use them in local scope only?,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,"uhh, I actually pass the functions to another library that uses them",,
1.3695E+17,Lilly Knight#1014,2017-09-04,Then yeah a lambda/fn makes more sense,,
1.3695E+17,Lilly Knight#1014,2017-09-04,Also you can just include literal strings in your macro-quote,,
1.3695E+17,Lilly Knight#1014,2017-09-04,You don't have to define gensyms for them,,
1.3695E+17,Lilly Knight#1014,2017-09-04,Granted I've been grubbing around with C for the last few months so maybe something has fallen out of my head,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,hmm,,
1.57759E+17,Quixoticelixer#6239,2017-09-04,the thick plotttens,,
1.30052E+17,gibb#5070,2017-09-05,Anyone tried some gorilla-repl?,,
1.30052E+17,gibb#5070,2017-09-05,I'm trying to do some rudimentary data exploration,,
2.98148E+17,lepistane#2482,2017-09-05,i havent,,
2.98148E+17,lepistane#2482,2017-09-05,but heard it is fun to work with,,
2.98148E+17,lepistane#2482,2017-09-05,i havent tried anything beside cider,,
1.30052E+17,gibb#5070,2017-09-06,I've tried it out for a few hours now and it's pretty good. Haven't really got the hang of a great workflow tho,,
3.15182E+17,hswick#4417,2017-09-06,"I thought gorilla-repl could be cool, unfortunately it isn't maintained though... Been thinking it would be cool to fork nightlight and make it more gorilla repl style",,
1.90548E+17,seancorfield#3069,2017-09-06,@gibb maybe take a look at ProtoREPL for Atom and the ProtoREPL charts package which lets you visualize data directly inside your editor (Atom).,,
1.90548E+17,seancorfield#3069,2017-09-06,"I was a long-time Emacs users (dating back to the 17.x days!) and I switched to ProtoREPL completely after seeing Jason Gilman's talk at Conj last year. I love the inline results and inline documentation, and the smooth REPL integration.",,
3.15182E+17,hswick#4417,2017-09-07,"@seancorfield are you able to use rainbow parens in proto repl? I remember this feature lacking due to the nature of Atom, or at least being buggy when I used it last",,
1.90548E+17,seancorfield#3069,2017-09-07,With Parinfer fading out closing parens I haven't felt the need for rainbow parens.,,
1.90548E+17,seancorfield#3069,2017-09-07,Now I'm at my desk @hswick I looked in the Atom packages and found this https://atom.io/packages/rainbow-delimiters so I might give it a try...,,
1.90548E+17,seancorfield#3069,2017-09-07,"...yeah, that's a nice compromise! Only active for the form around the cursor, so the effect follows your activity around the file. I think I could get used to that, but I must admit, I had removed rainbow parens from Emacs the last time I rebuilt my setup so I hadn't been missing it.",,
3.15182E+17,hswick#4417,2017-09-07,"Ehhh, that isnt too bad. I'm pretty reliant on rainbow parens, so I think I'll stick with nightlight for now.",,
1.3695E+17,Lilly Knight#1014,2017-09-07,Is there no rainbow parens for Atom?,,
1.3695E+17,Lilly Knight#1014,2017-09-07,That seems like a major oversight,,
3.15182E+17,hswick#4417,2017-09-08,"Its the way hgihlighting works in Atom. Good for doing syntax highlighting, but not for rainbow parens",,
3.15182E+17,hswick#4417,2017-09-08,"I would know, because I tried helping out with an implementation before",,
1.57759E+17,Quixoticelixer#6239,2017-09-10,What is your guys preffered db library?,,
1.3695E+17,Lilly Knight#1014,2017-09-10,yesql,,
1.3695E+17,Lilly Knight#1014,2017-09-10,It basically lets you just write SQL and load it as clojure functions,,
1.3695E+17,Lilly Knight#1014,2017-09-10,(although you'll probably still want to write wrappers at some point since they all take maps),,
1.57759E+17,Quixoticelixer#6239,2017-09-10,hmmm,,
1.57759E+17,Quixoticelixer#6239,2017-09-10,I think I will probably go for hugsql + conman,,
1.57759E+17,Quixoticelixer#6239,2017-09-10,but mostly becuase it is already set upp,,
1.57759E+17,Quixoticelixer#6239,2017-09-10,How do you do seeds?,,
2.98148E+17,lepistane#2482,2017-09-11,hugsql,,
2.98148E+17,lepistane#2482,2017-09-11,it is better than yesql,,
3.15294E+17,Odie#2665,2017-09-11,Anybody have experience with writing nrepl middlewares?,,
3.15294E+17,Odie#2665,2017-09-11,Having trouble figuring out how to test a middleware function I'm trying to work on...,,
2.98148E+17,lepistane#2482,2017-09-11,"have no experience with that
could this help ?
http://www.luminusweb.net/docs/middleware.md",,
3.15294E+17,Odie#2665,2017-09-11,Well... I believe that's documentation on how to work with ring middleware... but I'm after info about working with nrepl middleware... 😦,,
2.98148E+17,lepistane#2482,2017-09-12,"how did i miss 'nrepl' from you question
my god......
soz",,
1.57759E+17,Quixoticelixer#6239,2017-09-12,I need to practice more,,
1.57759E+17,Quixoticelixer#6239,2017-09-12,functional programming is hard soemtiems,,
2.98148E+17,lepistane#2482,2017-09-13,SICP is great for that,,
2.98148E+17,lepistane#2482,2017-09-13,i recommended it to those who wanna start programming,,
2.98148E+17,lepistane#2482,2017-09-13,"it's like initialization in ancient societies - you survive good programmer comes back, you die - no programmer 😄",,
2.98148E+17,lepistane#2482,2017-09-13,then they are not for programming or they might like design good push for that 😄,,
1.57759E+17,Quixoticelixer#6239,2017-09-28,How to add  HSTS header to a ring response?,,
2.98148E+17,lepistane#2482,2017-09-29,make custom middleware,,
2.98148E+17,lepistane#2482,2017-09-29,are u using luminus?,,
1.57759E+17,Quixoticelixer#6239,2017-09-29,Yeah,,
2.98148E+17,lepistane#2482,2017-09-29,cljs > ajax.cljs there is function `default-headers`,,
2.98148E+17,lepistane#2482,2017-09-29,you could update that 😃,,
2.98148E+17,lepistane#2482,2017-09-29,i was putting csrf token there,,
2.98148E+17,lepistane#2482,2017-10-11,"working with some api
wanna do this
```curl --user api-key: -XPUT --data-binary @- https://api.test.com << EOF 
if (rows.length > 10) {
  alarm('Too many rows');
}
EOF
{
  ""success"": true
}```


how do i do that with clojure? 
i am using https://github.com/dakrone/clj-http

but i am unable to find how to do binary-data
only thing i found is byte-array in `:mutipart` for POST 

has anyone done this ?",,
2.98148E+17,lepistane#2482,2017-10-11,"found solution
use 
`:as :byte-array` in clj request map works like a charm",,
1.89169E+17,srasu#0042,2017-10-31,"So I'm trying to get a repl running in a built application, is there a specific way to do that? Google hasn't been particularly helpful.",,
2.98148E+17,lepistane#2482,2017-10-31,good question,,
2.98148E+17,lepistane#2482,2017-10-31,i'd like to know this too,,
1.89169E+17,srasu#0042,2017-11-06,"So for the replbot, did you use the old clj-discord @hagus ?",,
1.57759E+17,Quixoticelixer#6239,2017-11-06,if I have a database call,,
1.57759E+17,Quixoticelixer#6239,2017-11-06,and i want to use the result twice,,
1.57759E+17,Quixoticelixer#6239,2017-11-06,if i have it in a let in the functon,,
1.57759E+17,Quixoticelixer#6239,2017-11-06,the database won't get queried twice will it?,,
2.98148E+17,lepistane#2482,2017-11-07,it shouldn't,,
2.98148E+17,lepistane#2482,2017-11-07,it should get queried once when let binding happens,,
2.98148E+17,lepistane#2482,2017-11-07,@Quixoticelixer,,
2.98148E+17,lepistane#2482,2017-11-07,"you can test it easily 
(time (query))

(time (ur-let-that-has-query))

time1 = time2 u good",,
1.57759E+17,Quixoticelixer#6239,2017-11-07,the thick plottens,,
1.57759E+17,Quixoticelixer#6239,2017-11-07,hm ironically this is a problem,,
9.13297E+16,andrei#7237,2017-11-11,"I have a quick question. If I have a string like this:
```... att-4-negative = -20% slower firing speed\n}}\n{{Quotation|'''Tomislav''' publicity blurb|Look at all those people scrambling around with their tiny, ugly guns. But this-- this gun is b-e-a-utiful. So pick this beast up and blast away those distrustful little buggers all the way to Hell. Is it worth it? Of course it is.}}\n\nThe ...'''
```
How can I pull out the description only, using clojure? (Between ""publicity blurb|"" and "".}}""",,
9.13297E+16,andrei#7237,2017-11-11,"hmm, I ended up using look-ahead regex.",,
1.89169E+17,srasu#0042,2017-11-11,"Does anyone know of a good framework for building mobile applications that are cross-platform between Android and iOS without a whole ton of work in Clojure? Only thing I'm seeing atm is React Native, and I'm worried that I won't be able to find any good OpenGL bindings for that.",,
2.98148E+17,lepistane#2482,2017-11-11,"i know that people are using 
http://cljsrn.org

in production 

so i suppose they needed OpenGL too",,
2.98148E+17,lepistane#2482,2017-11-11,havent tried or heard of any examples but there should be binding for that,,
1.89169E+17,srasu#0042,2017-11-11,Okay. Thanks.,,
1.89169E+17,srasu#0042,2017-11-11,"I'm also curious, for those who have used lein-droid, I'm running into an issue.
```text
clojure.lang.Compiler$CompilerException: java.lang.ClassNotFoundException: org.sonatype.aether.util.version.GenericVersionScheme, compiling:(leiningen/droid/classpath.clj:1:1)
 at clojure.lang.Compiler.load (Compiler.java:7391)
    clojure.lang.RT.loadResourceScript (RT.java:372)
    clojure.lang.RT.loadResourceScript (RT.java:363)
    clojure.lang.RT.load (RT.java:453)
    clojure.lang.RT.load (RT.java:419)
    clojure.core$load$fn__5677.invoke (core.clj:5893)
    clojure.core$load.invokeStatic (core.clj:5892)
```
It goes on much longer than that for that too. I've gathered that there's some dependency that it doesn't package with it that I don't have, but I don't know how I would go about fixing that. Any ideas?",,
1.89169E+17,srasu#0042,2017-11-11,I even tried adding the latest version of `org.sonatype.aether/aether-util` as a dependency and it still didn't work.,,
1.89169E+17,srasu#0042,2017-11-11,Also tried adding those dependencies to the project.clj inside the .jar file of lein-droid,,
1.89169E+17,srasu#0042,2017-11-12,Well the temporary solution is to do it in linux,,
9.13297E+16,andrei#7237,2017-11-17,"i have a really dumb question
I have a json stream that I'm decoding and running `flatmap` on, and the output I get is
`([:key val] [:key2 val2] ..x1000)`
but when I try to use `(map :key)` it always returns nil. what am I doing wrong here?",,
1.92897E+17,bbss#6837,2017-11-17,"you are mapping vectors, not maps",,
3.09474E+17,jshah#3301,2017-11-18,"Hi everyone! Does anyone have good references to building UI's in a functional sort of way? I'm building a webapp using the usual suspects (compojure, hiccup, ring etc.)",,
2.98148E+17,lepistane#2482,2017-11-18,"@jshah 
not sure how complex UI you want but
https://htembh.herokuapp.com/

i made this using reagent 
you can find git link on the site


There are examples that i used but i found those by searching 
sites that use reagent



But mostly i followed the book https://pragprog.com/book/dswdcloj2/web-development-with-clojure-second-edition",,
3.09474E+17,jshah#3301,2017-11-18,"@lepistane Awesome, thanks for the reference 😄",,
9.851E+16,Fredd#4626,2017-11-29,"Hello,",,
9.851E+16,Fredd#4626,2017-11-29,I'm a bit new to Clojure and was wondering what the reason for this error message would be? :- ),,
9.851E+16,Fredd#4626,2017-11-29,,https://cdn.discordapp.com/attachments/315388260987830272/385447332168335362/unknown.png,
3.09474E+17,jshah#3301,2017-11-29,What is your add function supposed to do?,,
9.851E+16,Fredd#4626,2017-11-29,"Nothing, just wanted to test calling a function with two separate functions and then computing the value.",,
9.851E+16,Fredd#4626,2017-11-29,Just learning about high-order functions.,,
3.09474E+17,jshah#3301,2017-11-29,Add (identity n),,
3.09474E+17,jshah#3301,2017-11-29,Right now you're trying to pass the value of 7 as function by doing (7) which doesn't make sense.,,
3.09474E+17,jshah#3301,2017-11-29,If you do `(defn add [nr] (identity nr))` that should do the trick.,,
9.851E+16,Fredd#4626,2017-11-29,By using the keywoard identity the value is returned rather than the func,,
9.851E+16,Fredd#4626,2017-11-29,function call?,,
3.09474E+17,jshah#3301,2017-11-29,`(identity x) returns x.`,,
3.09474E+17,jshah#3301,2017-11-29,Yea,,
9.851E+16,Fredd#4626,2017-11-29,Thanks! 😃,,
9.851E+16,Fredd#4626,2017-11-29,"I'm trying to call the add-two function with add, multiply and 7 as arguments.",,
9.851E+16,Fredd#4626,2017-11-29,fn1=>add fn2=>multiply value=>7,,
3.09474E+17,jshah#3301,2017-11-29,"I get 56, is that the expected answer?",,
3.09474E+17,jshah#3301,2017-11-29,Anytime! Here is more information on the identity function. https://clojuredocs.org/clojure.core/identity,,
3.09474E+17,jshah#3301,2017-12-03,Hello everyone! Does anyone have a library which well organized or an article/blogpost which outlines the pitfalls of designing libraries?,,
1.89169E+17,srasu#0042,2017-12-03,I haven't really seen any. Biggest thing I can think of that I've seen in a bunch of talks is that once people start using your library you have to move away from making breaking changes to making growing changes. Which open-source projects often break this rule because of how few people are involved in making changes.,,
1.89169E+17,srasu#0042,2017-12-03,"Breaking changes being something like removing or renaming functions, changing what parameters they take, or reducing how much or what kind of data is returned from a given function call. Growing changes being things like adding new functions, adding how much is returned from existing functions, adding new (optional) arguments (or arities) to functions, etc.",,
1.38887E+17,Scallions#8493,2017-12-03,Rich talked about this in his spec-culation keynote.,,
1.38887E+17,Scallions#8493,2017-12-03,https://www.youtube.com/watch?v=oyLBGkS5ICk,,
1.38887E+17,Scallions#8493,2017-12-03,"Its more about how you should maintain a library.
Basically, try to never make breaking changes. Accrete new stuff. Relax your library's contraints. Namespaces are cheap.",,
1.57759E+17,Quixoticelixer#6239,2017-12-03,I think early it is okay to break stuff,,
1.57759E+17,Quixoticelixer#6239,2017-12-03,and infact shuold try to break stuff as much as possible but then come to a point where you don't break anything unless it is super duper important,,
1.89169E+17,srasu#0042,2017-12-04,"I agree that breaking things before release is fine. So did Rich actually. It's just that you can't just say ""Oh, I'm calling this 'alpha' so I can make breaking changes whenever I want"" since even if you're in ""alpha"" you can still have people who depend on your code.",,
3.15182E+17,hswick#4417,2017-12-06,you know or just name shit properly the first time,,
1.89169E+17,srasu#0042,2017-12-06,"I mean naming stuff right is all fine and dandy, but what if you suddenly figure out your system is set up wrong internally and you have to change the external api in order for it to be workable?",,
3.15182E+17,hswick#4417,2017-12-06,yeah i was mostly joking,,
1.89169E+17,srasu#0042,2017-12-06,Good. :P,,
1.89169E+17,srasu#0042,2017-12-06,"I take everything way too seriously. Never figured out why. Might be my literal actual OCD (which has little to do with thet stereotype), but probably not. 's unfortunate.",,
1.40245E+17,tterrag#1098,2017-12-30,"hey all, bit of a weird question. I'm trying to run some clojure input using clojail, and I keep getting the unhelpful error `Don't know how to create ISeq from: clojure.lang.Var`. I'm not sure how my setup is going wrong. I can get it to work from a REPL, but setting it up in java seems to not work, or maybe I'm doing something wrong. this is my current test code:
```java
        IFn require = Clojure.var(""clojure.core"", ""require"");
        require.invoke(Clojure.read(""clojail.core""));
        require.invoke(Clojure.read(""clojail.jvm""));
        require.invoke(Clojure.read(""clojail.testers""));

        IFn sandbox = Clojure.var(""clojail.core"", ""sandbox"");
        IFn sb = (IFn) sandbox.invoke(Clojure.var(""clojail.testers"", ""secure-tester""));
        System.out.println(sb.invoke(0));
```",,
1.40245E+17,tterrag#1098,2017-12-30,"it seems that somehow the `tester` is wrong, since it's erroring here: https://github.com/mshenfield/clojail/blob/issue-10-use-clojure-1-5-through-1-7/src/clojail/core.clj#L109",,
1.40245E+17,tterrag#1098,2017-12-30,"I realize this is a pretty odd question, so let me know if it's off topic for the channel",,
1.40245E+17,tterrag#1098,2017-12-30,oh and full stack https://pastebin.com/XsCPuSsk,,
1.89169E+17,srasu#0042,2017-12-30,"So it just sounds like something that you're passing a var to is expecting not a var, but what's contained at the var instead. I don't have much experience calling Clojure from Java, but maybe you need to deref the `Clojure.var(""clojail.testers"", ""secure-tester"")` part somehow. What you're currently doing is equivalent to this:
```clojure
(def sb (sandbox #'clojail.testers/secure-tester))
```
But what you really want to be doing is this:
```clojure
(def sb (sandbox @#'clojail.testers/secure-tester))
```",,
1.89169E+17,srasu#0042,2017-12-30,@tterrag,,
1.40245E+17,tterrag#1098,2017-12-30,yeah I was just messing with that,,
1.40245E+17,tterrag#1098,2017-12-30,I think I can cast it to a Var and call getRawRoot(),,
1.89169E+17,srasu#0042,2017-12-30,"Yeah, that could definitely be it.",,
1.40245E+17,tterrag#1098,2017-12-30,"yay, it works 😄",,
1.89169E+17,srasu#0042,2017-12-30,Awesome!,,
1.89169E+17,srasu#0042,2017-12-30,Glad you got it figured out!,,
1.89169E+17,srasu#0042,2017-12-30,"Also wow, clojail is old. Does it work with Clojure 1.9.0? It hasn't seen any updates in like 5 years!",,
1.89169E+17,srasu#0042,2017-12-30,"Oh, this is a fork that was updated more recently. Still though, two years ago.",,
1.40245E+17,tterrag#1098,2017-12-30,"yeah idk, I'm going with 1.7 for now",,
1.40245E+17,tterrag#1098,2017-12-30,might attempt to use newer clojure builds later,,
1.40245E+17,tterrag#1098,2017-12-30,couldn't find anything more up to date,,
3.95627E+17,Rib#0872,2018-01-04,good morning clojurians,,👌 (3)
2.98148E+17,lepistane#2482,2018-01-04,yoooooooo,,
1.89169E+17,srasu#0042,2018-01-04,hey there,,
2.16295E+17,HactarCE#5314,2018-01-04,Good morning!,,
3.15182E+17,hswick#4417,2018-01-04,Yooo! Clojure party around the world!,,
1.89169E+17,srasu#0042,2018-01-04,Lol. How is everyone?,,
1.89169E+17,srasu#0042,2018-01-04,What kinds of projects be working on?,,
3.15182E+17,hswick#4417,2018-01-04,"I’ve been working for an Ethereum scaling project called Truebit. Just a bunch of JS mostly and a little bit of rust, sadly no Clojure except for my open source data analytics libs that I’ve thankfully been getting other people to contribute on which is nice",,
1.89169E+17,srasu#0042,2018-01-04,That's nice.,,
1.89169E+17,srasu#0042,2018-01-04,"I'm currently going through a Graphics course, which is going to be interesting. On the side though I've got a couple Clojure projects, one of which is the foundation of a startup that I'm working on, which is going to be super fun.",,
3.15182E+17,hswick#4417,2018-01-04,"Graphics courses are pretty fun, I made 3D asteroids haha",,
2.16295E+17,HactarCE#5314,2018-01-04,"I'm going to try to port <https://github.com/HactarCE/Metatape> as my first big (bigger than Tic-tac-toe, at least) ClojureScript project",,
1.89169E+17,srasu#0042,2018-01-04,nice,,
2.3267E+17,poppybro#0571,2018-01-04,"I am working on an LSTM neural network that generates hip hop drum beats. Mostly wanted to try out Deeplearning4j from Clojure.  If it works out I want to make it into a midi instrument you can jam with. Thanks for asking btw, I joined this server for some extra motivation hahah! Hope you all are having a great day",,
1.89169E+17,srasu#0042,2018-01-04,Definitely. And that sounds like one of the coolest projects I've heard of in a while. I wonder if you could eventually hook that into a discord bot to play its music over voice chat. XD,,
3.15182E+17,hswick#4417,2018-01-04,@poppybro check out jutsu.ai it’s my library which wraps features from Deeplearning4j!,,
2.3267E+17,poppybro#0571,2018-01-04,"@hswick im getting to the network configuration today... was dreading whatever builder hell interop was awaiting me. your lib looks like it will get me past that. ill definitely give it a whirl, thanks!",,
2.23866E+17,supreme#2012,2018-01-05,"Is it possible to destructure a string into it's first character and the rest of the string using destructuring? In the bindings for this loop, the author did not do so - https://clojuredocs.org/clojure.core/loop#example-542692d4c026201cdc326ff7",,
1.89169E+17,srasu#0042,2018-01-05,You'd have to take the seq of the string I do believe.,,
2.23866E+17,supreme#2012,2018-01-05,Yes that looks like it would work - https://clojuredocs.org/clojure.core/seq,,
2.72734E+17,AltLock#5724,2018-01-05,Can someone tell me why I get an error here?,https://cdn.discordapp.com/attachments/315388260987830272/398875137287389187/2018-01-05-172659_947x596_scrot.png,
2.72734E+17,AltLock#5724,2018-01-05,"Here it is in text form so you can copy-paste:

(defn multiples [curr max]

  (if (or (= 0 (rem curr 3)) (= 0 (rem curr 5)))
    (println curr))

  (if (= curr max )
    (println ""done!"")
    (recur (inc curr) max)) )",,
3.09474E+17,jshah#3301,2018-01-05,Place the function before main,,
2.72734E+17,AltLock#5724,2018-01-05,Just realized this xD,,
2.72734E+17,AltLock#5724,2018-01-05,Stupid me. Why is this necessary if I may ask?,,
2.72734E+17,AltLock#5724,2018-01-05,"Clojure gets compiled, yes?",,
3.09474E+17,jshah#3301,2018-01-05,"Yes, I believe so.",,
3.09474E+17,jshah#3301,2018-01-05,There is a way to declare functions before hand at which point the order doesn't matter,,
2.72734E+17,AltLock#5724,2018-01-05,"Ah. I'll look that up. Thank you very much. I didn't expect this to be a thing, I thought the compiler would go through the whole file first and understand that the function exists.",,
1.89169E+17,srasu#0042,2018-01-05,"It is compiled, yes. The thing is though, it's a single-pass compiler. That means things are defined sequentially. Kind of like in ye-olde C days (but with no headers). I'm not aware of the specific reason for this, but I think it's mostly just because it creates a simpler compiler.",,
1.89169E+17,srasu#0042,2018-01-05,What you can do though is to use the `declare` macro to let the compiler know that they are defined (but without creating a base binding) and that it can be used before it gets `def`ed,,
2.72734E+17,AltLock#5724,2018-01-05,"Thanks for the explanation, I'll just move my -main function to the bottom of my sourcefiles. I prefer them to be at the top to get an overview of what the program does, but I prefer less bugs than more because of it(possibly forgetting to declare a function)",,
1.89169E+17,srasu#0042,2018-01-05,"One thing that you'll find as you program more and more in clojure is that you generally want to read your code from the inside out on the small scale, but on the large scale (even for just deeper nested calls that get separated into lines) it's frequently good to just read your code from the bottom up. That way you can see things as they are used, instead of seeing all the details without an overview of what's trying to be accomplished.",,
3.15182E+17,hswick#4417,2018-01-05,Yeah Rich Hickey was pretty adamant about that from what I’ve heard,,
2.72734E+17,AltLock#5724,2018-01-05,"True that. This isn't my first programming language, I've used Ruby before in a sysadmin style(I need to do x. Let's google how to do a, b and c to get to x) as I am a student sysadmin. But I really want to learn programming too, so I've taken up clojure with the Clojure for the Brave and True book. I was really enjoying it till I got to those order issues, but now I'm glad it's a simple n00b mistake.",,
1.89169E+17,srasu#0042,2018-01-05,That's definitely a good book to start with. That's how I got my start in Clojure actually.,,
1.89169E+17,srasu#0042,2018-01-05,"Also ruby is an interesting one. I haven't touched it much myself but I've heard it leans heavily on making things easy, at the expense of making things very complex.",,
1.89169E+17,srasu#0042,2018-01-05,(in the way rich wants us to use those terms),,
2.72734E+17,AltLock#5724,2018-01-05,"It is! I consider it even better than Why_s poignant guide to Ruby, which is praised a lot in the Ruby community.",,
2.72734E+17,AltLock#5724,2018-01-05,"Ruby is really easy to use, but I guess you're correct on the part that Ruby itself can be quite complex because of the amount of features and different paradigms it has built in by default",,
3.15182E+17,hswick#4417,2018-01-05,You may have noticed that Clojure uses some styleistic things from ruby,,
3.15182E+17,hswick#4417,2018-01-05,like boolean functions ending with ?,,
2.72734E+17,AltLock#5724,2018-01-05,"Yeah, I like that :)",,
1.89169E+17,srasu#0042,2018-01-05,"Honestly it took me longer to wrap my head around immutability than it should have. But that's mostly from the near-decade I spent doing imperative, object-oriented code before I got started with Clojure. That had really worn me down to the point where I was basically fed up with programming. I started Clojure though and it made it fun again. Even when I'm using other languages.",,
2.72734E+17,AltLock#5724,2018-01-05,It makes reading both Ruby and Clojure really easy,,
1.89169E+17,srasu#0042,2018-01-05,"Yeah, I definitely agree. Clojure has a good emphasis on readability over other lisps.",,✌ (2)
2.72734E+17,AltLock#5724,2018-01-05,"About immutability, I've ran into the same today. I was trying to append items to a list recursively, it really takes me some brainpower to get it working and looking nicely.",,
1.89169E+17,srasu#0042,2018-01-05,This is true. It requires a whole different way of thinking.,,
1.89169E+17,srasu#0042,2018-01-05,Which is why I'm so glad that Clojure tries to be readable. You tend to do so many things that are foreign to programmers who haven't done things functionally before that having it be more difficult to read could just be too much.,,
1.89169E+17,srasu#0042,2018-01-05,"And I personally really like it since it means I don't have to spend any real brain power on parsing what the code is supposed to do (unlike when I code in ALGOL-descended languages), so instead I can focus entirely on the difficulty of wrapping my head around the problem space. I have to say that understanding transducer factory factories is a little hard when you're still trying to think in an imperative manner, so readability is a must. XD",,
2.72734E+17,AltLock#5724,2018-01-05,"Yeah. I once tried haskell, I immediately gave up at the ""::"" Clojure just has functions essentially. Yeah, different types with different names, but it all looks like this: ""(+ 1 2 3)""",,
1.89169E+17,srasu#0042,2018-01-05,"Mhmm. Makes it quite nice. Until you run into someone who likes macros too much, but meh. XD",,
2.72734E+17,AltLock#5724,2018-01-05,"I haven't played with them yet, but I heard it's essentially defining a part of the language, right?",,
1.89169E+17,srasu#0042,2018-01-05,"Basically. There's a bunch of valid use cases, and honestly it took me a really long time to see when those use cases are really applicable, but recently (several months ago) I've gotten my head wrapped around it and now I can't imagine working without them. Except I have to since I also do a lot of code in C. :P",,
2.72734E+17,AltLock#5724,2018-01-05,"I have done a bit of metaprogramming in Ruby, so in that sense the flow of Ruby -> Clojure is really nice. I get that defining and changing the language itself can be really powerful, while someone who started with JS or Python really needs to scrap everything and learn again.",,
1.89169E+17,srasu#0042,2018-01-05,"Yeah, I started in Java, went to C#, learned C, then C++, and few data languages, and bounced around with a little JavaScript every once in a while before I found Clojure. So I'm like the exact person who would have the hardest time transitioning probably. XD",,
2.72734E+17,AltLock#5724,2018-01-05,BTW; I had a question. Is clojurescript exactly the same as clojure in the syntax sense? Or are there catches I need to know about?,,
1.89169E+17,srasu#0042,2018-01-05,"So ClojureScript has a few minor differences. There are a few absent things, like the only reference types are atoms. Then there's a slight change in the require syntax where you have to refer macros separately from everything else.",,
1.89169E+17,srasu#0042,2018-01-05,"And the interop syntax is slightly different, since there's a different host language. But for the most part it's the same, yes.",,
1.89169E+17,srasu#0042,2018-01-05,"Tons of code runs equally well on both runtimes, which is why the .cljc format exists. It's there for code that runs on both clojure and clojurescript, plus it has some support for compiler flags to use different forms depending on the host it's running with.",,
2.72734E+17,AltLock#5724,2018-01-05,"I suppose it runs on 'itself', so that's the benefit and of course the reason why it is even possible to have Clojure on two different platforms.",,
1.89169E+17,srasu#0042,2018-01-05,"Well, I wouldn't really say it runs on itself. That would the Clojure in Clojure project, which eventually got renamed to the tools.analyzer and tools.emitter libraries.",,
2.72734E+17,AltLock#5724,2018-01-05,"Anyway, I think I'll go and continue reading braveclojure now. I'm really eager to go through it :)",,
1.89169E+17,srasu#0042,2018-01-05,"Go for it! It's a fantastic book,  and there's some advanced stuff in there too. I still occasionally go back to look at what it has on core.async.",,👌 (1)
1.82016E+17,WhoNeedszZz#9017,2018-01-06,@AltLock btw you can use code blocks in Discord using two sets of 3 backticks and the language following the first pair,,
1.82016E+17,WhoNeedszZz#9017,2018-01-06,"```clojure
(assoc [] [1 2 3])
```",,
2.72734E+17,AltLock#5724,2018-01-06,"Ah yeah. I forgot that was a thing. Thanks, @WhoNeedszZz",,👍 (1)
1.89169E+17,srasu#0042,2018-01-06,It's also pretty cool that you can actually get clojure highlighting.,,👆 (1)
1.82016E+17,WhoNeedszZz#9017,2018-01-09,Is there a way to use multiple arity functions where a given value for one or more of the parameters does something different than other values?,,
3.15182E+17,hswick#4417,2018-01-09,Can you give an example?,,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,"So instead of ```clojure
[a b]
``` 
you could do something like ```clojure
[1 b]
```",,
3.15182E+17,hswick#4417,2018-01-09,Would a be a different type than 1? Maybe pattern matching is what you are looking for,,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,Would it matter?,,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,I want to do one thing when a is 1 and another when a is not 1,,
1.38887E+17,Scallions#8493,2018-01-09,You can use multimethods to accomplish this.,,
3.15182E+17,hswick#4417,2018-01-09,In terms of the arguments for the function probably not. Sounds like you could use pattern matching or a cond expression or multimethods. Or simple if statements,,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,I know I could just use simple if statements. I was just curious if there was a feature like this as other languages support that. Haskell comes to mind for one.,,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,Multimethods is definitely not what I'm looking for,,
1.38887E+17,Scallions#8493,2018-01-09,I don't think clojure has something like this builtin.,,
1.38887E+17,Scallions#8493,2018-01-09,"core.match library is the closest thing to this. I imagine if you want to replicate this feature, you would need to write a macro that combines `fn` and `match` from core.match.",,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,"Ok, I'll take a look at that. Thanks",,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,"Doesn't seem to be it either. I want to call functions when a is 1 or not, not return a data structure",,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,"Here' a Haskell example of the kind of thing I'm trying to do:
```haskell
factorial :: (Integral a) => a -> a  
factorial 0 = 1  
factorial n = n * factorial (n - 1)
```",,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,"So yes, pattern matching is correct, but with functions or values being returned",,
2.16295E+17,HactarCE#5314,2018-01-09,It's probably simplest just to use `cond`,,
2.16295E+17,HactarCE#5314,2018-01-09,"E.g.
```Clojure
(defn factorial [n]
 (cond
  (zero? n) 1
  :else (* n (factorial (dec n)))))
```",,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,"Ok, that works for two conditions. What about more than two?",,
2.16295E+17,HactarCE#5314,2018-01-09,Keep adding more clauses,,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,"Oh, ok",,
2.16295E+17,HactarCE#5314,2018-01-09,"```Clojure
(defn factorial [n]
 (cond
  (zero? n) 1
  (< n 0) nil
  (<= n 2) n
  :else (* n (factorial (dec n)))))
```",,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,Figured there was a way to do it. Thanks,,
2.16295E+17,HactarCE#5314,2018-01-09,Np,,
2.16295E+17,HactarCE#5314,2018-01-09,"The `:else` clause is optional, I think",,
2.16295E+17,HactarCE#5314,2018-01-09,probably just returns `nil` unless it's included,,
1.89169E+17,srasu#0042,2018-01-09,"What you're looking for @WhoNeedszZz is pattern matching. These two libraries together allow both pattern-matching and erlang-style function definitions with pattern matching. It should do exactly what you want and look nice too.
https://github.com/clojure/core.match
https://github.com/killme2008/defun",,
1.82016E+17,WhoNeedszZz#9017,2018-01-09,"@srasu Er, what @HactarCE wrote is what I was looking for.",,
1.89169E+17,srasu#0042,2018-01-09,"I mean you were using haskell as an example, so it would make sense if you were looking for pattern matching, but okay.",,
1.40245E+17,tterrag#1098,2018-01-09,how would I `require` something with an alias in java?,,
1.40245E+17,tterrag#1098,2018-01-09,"like I can do
```java
IFn require = Clojure.var(""clojure.core"", ""require"");
require.invoke(Clojure.read(""clojure.string""));
```",,
1.40245E+17,tterrag#1098,2018-01-09,but what if I want clojure.string to be :as str,,
1.40245E+17,tterrag#1098,2018-01-09,"ok, I think I have it working, but the problem is that the sandbox runs in a different scope I believe",,
1.40245E+17,tterrag#1098,2018-01-09,"nevermind, it's failing even when I do `Clojure.var(""str"", ""reverse"").invoke(""abcde"")` directly after :/",,
1.40245E+17,tterrag#1098,2018-01-09,"aha, I just saw #interop-therapy",,
1.40245E+17,tterrag#1098,2018-01-09,"if anyone has any insight, we can continue there 😃",,
1.40245E+17,tterrag#1098,2018-01-10,I got it solved (kinda),,
2.23866E+17,supreme#2012,2018-01-10,How would you truncate the result of summing a group of numbers to exactly 8 decimal places?,,
1.40245E+17,tterrag#1098,2018-01-10,java's DecimalFormat likely,,
2.3267E+17,poppybro#0571,2018-01-12,@hswick reporting back... found jutsu to be a pleasure for my usecase! currently training my neural net. you dont happen to know anything about windows compatibility  do you? ive selected the cuda nd4j backend library but the training UI still lists CPU. figured id ask here before i start looking at the dl4j docs,,
2.3267E+17,poppybro#0571,2018-01-12,nvm!  i just need to install the corresponding CUDA toolkit. thanks for the great lib!,,
2.3267E+17,poppybro#0571,2018-01-12,addendum: i had to install the CUDA toolkit version corresponding to the DL4j version and ND4j version being used (8.0). I had accidentally installed 9.1. the first time and was getting all kinds of exceptions.,,
3.09474E+17,jshah#3301,2018-01-12,Hi everyone! Quick question: if I wanted to access `:c` then why doesn't `(get-in [:a [:b [:c]]] [:a :b])` work?,,
1.89169E+17,srasu#0042,2018-01-12,Because :a and :b are not the keys for that set of vectors.,,
1.89169E+17,srasu#0042,2018-01-12,"While technically vectors are associative datastructures, they associate indexes to values, not keys to values.",,
3.09474E+17,jshah#3301,2018-01-12,Ohhhhhhh!,,
1.89169E+17,srasu#0042,2018-01-12,"So if you wanted to do that you'd actually do this:
```clojure
(get-in [:a [:b [:c]]] [1 1 0])
```",,👍 (1)
3.09474E+17,jshah#3301,2018-01-12,That's why I was confused. I saw that vectors implemented association but didn't realize it was between indexes and values 😛,,
1.89169E+17,srasu#0042,2018-01-12,Yes.,,
3.15182E+17,hswick#4417,2018-01-12,@poppybro glad you got it working! Transitioning to dl4j and there were some bugs. Been too busy to fix it lol,,
3.09474E+17,jshah#3301,2018-01-17,@srasu Hello! I was looking at your library for Discord Bots and I was wondering if it was atleast partly functional? I'm not looking to make anything complex.,,
1.89169E+17,srasu#0042,2018-01-17,"It's partially functional, yes. At the moment I'm going over a bit of an overhaul as I start to use it to build a bot myself so I get a better feel for what it needs to solve.",,
1.89169E+17,srasu#0042,2018-01-17,That example bot which (almost) works is pushed in the examples folder at the moment. Only thing in it that doesn't work at the moment is the guild-specific state.,,
1.89169E+17,srasu#0042,2018-01-17,Forgot to handle the case where the guild didn't already have an entry in the vector.,,
3.09474E+17,jshah#3301,2018-01-17,"Okay, that sounds great.",,
1.89169E+17,srasu#0042,2018-01-17,Cool,,
3.09474E+17,jshah#3301,2018-01-17,"Hi everyone. A quick question about the usage of `(ns-publics)`. While using it through the repl, the function works fine however, when I try to include in my file I get an error which says ""No namespace found"" even though the namespace is there and it works through repl. I am using it like `(ns-publics 'projectname.filename)` in the file. What could be the reason for this to happen?",,
1.89169E+17,srasu#0042,2018-02-07,So last night I translated the classic macro `once-only` into clojure. That was an undertaking.,,
1.89169E+17,srasu#0042,2018-02-07,"Not so much the writing of it itself (though that was definitely a challenge, and would have been outright impossible for me without cider's macroexpand feature), but the understanding of what was going on with all the splicing. Just wow.",,
1.89169E+17,srasu#0042,2018-02-07,"For any interested, here's the macro:
```clojure
(defmacro once-only [[& names] & body]
  (let [gensyms (repeatedly (count names) gensym)]
    `(let [~@(mapcat (fn [g] `(~g (gensym))) gensyms)]
       `(let ~(into [] (apply concat ~(mapv (fn [g n] ``(~~g ~~n)) gensyms names)))
          ~(let [~@(mapcat (fn [n g] `(~n ~g)) names gensyms)]
             ~@body)))))
```
I'm more than willing to offer a basic explanation of what's going on for anyone interested.",,
1.89169E+17,srasu#0042,2018-02-07,There's a _lot_ to unpack in those six lines.,,
2.98148E+17,lepistane#2482,2018-02-07,"that's kind of you.
lets hear it 

i am not familiar with classic macros
where did you learn about them? 
any good resources? 

why is it used?",,
1.89169E+17,srasu#0042,2018-02-07,"""classic macro"" isn't really a defined subset of macros, it's simply how I'm referring to one of the more advanced commonly-used macros in other lisp dialects. This particular macro I found source for in Practical Common Lisp, and I spent the evening last night translating it.
This particular macro is used in the writing of macros where you want an argument to be evaluated precisely once.
The way that this works is by having the macro defined using this macro introduce a let into the using code which binds gensyms to the value of evaluating the argument, and then the macro allows you while writing your macro to refer to these new gensyms under the original names.
For example:
```clojure
(defmacro testing [form]
  (once-only [form]
    `[~form ~form]))
```
Would expand to this (conceptually, in reality it's somewhat messier due to the machinery for generating the binding vector):
```clojure
(defmacro testing [form]
  (let [G__001 (gensym)]
    `(let [~G__001 ~form]
      ~(let [form G__001]
        [form form]))))
```
And using said macro will expand to this:
```clojure
(testing (do (println ""Hello from the macro!"") (+ 2 2)))
(let [G__002 (do (println ""Hello from the macro!"" ) (+ 2 2))]
  [G__002 G__002])
```
Which will seem a little cryptic at first, but what it does is allows the the macro creator to refer to the forms using their original symbols repeatedly within the body of their macro, without worrying about them being evaluated more than once.
So for this example, without using the once-only macro this would have instead expanded and evaluated the println multiple times, however because of the once-only macro the println is evaluated exactly once, but the value returned from the containing form is used multiple times.",,
1.89169E+17,srasu#0042,2018-02-07,@lepistane,,
1.89169E+17,srasu#0042,2018-02-07,"So far all of this could be done without the complex mapcat and into machinery, but all that becomes required once you allow multiple arguments to be within the vector of forms to be evaluated precisely once.",,
1.89169E+17,srasu#0042,2018-02-07,"And finally because this is a hygenic macro that is itself assissting in the creation of other hygenic macros, we have to use gensym both inside the main body of the macro, as well as within the body of the macro that is being written using `once-only`",,
2.98148E+17,lepistane#2482,2018-02-07,wow this is interesting,,
2.98148E+17,lepistane#2482,2018-02-07,thank you for this,,
2.98148E+17,lepistane#2482,2018-02-07,btw what would you recommend as a resource,,
2.98148E+17,lepistane#2482,2018-02-07,i really enjoy lisp,,
2.98148E+17,lepistane#2482,2018-02-07,and i wanna learn more,,
2.98148E+17,lepistane#2482,2018-02-07,i was searching for clojure books that teach basics or lisp,,
2.98148E+17,lepistane#2482,2018-02-07,but they usually teach clojure assuming you know basics,,
2.98148E+17,lepistane#2482,2018-02-07,"( i am following michael jordans advice ""master the basics"" )",,
2.98148E+17,lepistane#2482,2018-02-07,so far i am 1/2 through the SICP,,
1.89169E+17,srasu#0042,2018-02-07,A good one is https://www.braveclojure.com/foreword/,,
2.98148E+17,lepistane#2482,2018-02-07,i read it but dont feel it hits the spot like SICP does,,
1.89169E+17,srasu#0042,2018-02-07,It's a free online book that takes you from knowing little to nothing about programming through decent macros and asyncronous code using clojure.,,
2.98148E+17,lepistane#2482,2018-02-07,https://mitpress.mit.edu/sicp/full-text/book/book.html,,
1.89169E+17,srasu#0042,2018-02-07,"And then another decent one is Practical Common Lisp, also available online for free, though that focuses on Common Lisp which is both object-oriented and imperative, as opposed to Clojure's procedural and functional model.",,
2.98148E+17,lepistane#2482,2018-02-07,that's nice,,
2.98148E+17,lepistane#2482,2018-02-07,i haven't heard for that one,,
1.89169E+17,srasu#0042,2018-02-07,http://www.gigamonkeys.com/book/,,
1.89169E+17,srasu#0042,2018-02-07,"Those are the two resources I've used, but other than that I have mostly just worked on projects and used clojure to learn it. I however did find this book helpful in getting macros to initially click for me:
https://pragprog.com/book/cjclojure/mastering-clojure-macros",,
2.98148E+17,lepistane#2482,2018-02-07,OOH i totally forgot about this one,,
2.98148E+17,lepistane#2482,2018-02-07,tnx man,,
2.98148E+17,lepistane#2482,2018-02-07,"are those projects public? 
ccould you share some links?",,
1.89169E+17,srasu#0042,2018-02-07,"I've shared at least one on here before. I'm currently working on two main projects that I can share between my university work (also have an application being developed for a startup, but I can't share that for obvious reasons). Those being discljord, a library for creating discord bots in Clojure. It's currently functional, though ugly. I want to finish up my state system for it and then add a layer of syntactic abstraction to make it nicer to use.
https://github.com/IGJoshua/discljord
Then I'm also working on a small game engine that's pure Clojure over top of OpenGL using lwjgl's bindings for OpenGL, OpenAL, etc. 
That's available here:
https://github.com/IGJoshua/handmade-clojure
On that one I've been working on getting the window and mesh rendering to work well (although I haven't had the time to get super far yet), and I'm just about at the time where I want to start making some minor decisions about how I want to model the engine, and I've been debating between an Entity Component System and a kind of event-based reactive system. I might try a bit of both soon to see which one works better.",,
1.89169E+17,srasu#0042,2018-02-07,"Notably in order to have the rendering engine have nice syntax for the lower level, I created an updated version of the old clojure contrib library that alters the import-static macro to use ^:const on the values it generates, and to include an ""import all"" so that I can just do an import of a class from LWJGL and use the functions from OpenGL directly.",,
1.89169E+17,srasu#0042,2018-02-07,"I didn't spend the time to figure out how the def-proxied macros work for that library though, so I didn't get a working version of def-proxied-all. Although I did update def-proxied to use ^:const as well",,
1.23962E+17,屈才#4590,2018-02-07,Wow glad to see this place alive,,
1.23962E+17,屈才#4590,2018-02-07,All my other programmer friends hate fp and clojure specifically,,
1.89169E+17,srasu#0042,2018-02-07,I found the only one of my programmer friends who was open to learning clojure was the lazy one.,,
1.89169E+17,srasu#0042,2018-02-07,Which seems hilariously appropriate.,,
1.23962E+17,屈才#4590,2018-02-07,Bro like,,
1.23962E+17,屈才#4590,2018-02-07,im so lazy,,
1.23962E+17,屈才#4590,2018-02-07,I spent like 300 hours making emacs so much my own that I only have to type words sometimes,,
1.23962E+17,屈才#4590,2018-02-07,do u ever spend like 10x the time you spend on a job on making something to make doing the job easier,,
1.89169E+17,srasu#0042,2018-02-07,I used to.,,
1.89169E+17,srasu#0042,2018-02-07,"Then I decided to get an opinionated thing that would do all that for me, spend a few hours learning it, and be like every other industry where people learn to deal with the tools they have rather than going off to make their own tools every twelve seconds. XD
(^ accurate description of myself a while back)",,
1.89169E+17,srasu#0042,2018-02-07,"Which is why I use Spacemacs now. I used to have a massive config with emacs, but now it's just spacemacs with vim settings.",,
1.89169E+17,srasu#0042,2018-02-07,I will grant though that I still sometimes add new layers to spacemacs for personal things. Like when I made a mode specifically for integration with Arcadia and clojure for Unity development.,,
1.23962E+17,屈才#4590,2018-02-08,I have my own layer for lisp editing,,
1.23962E+17,屈才#4590,2018-02-08,basically just adapting stuff already in spacemacs to my needs,,
2.98148E+17,lepistane#2482,2018-02-08,"in that case i am minimalist :D
just give me smallest set possible that i can be productive with and i am happy",,
2.98148E+17,lepistane#2482,2018-02-08,i have setup from brave-and-true book,,
2.98148E+17,lepistane#2482,2018-02-08,little bit modified but basically that is it,,
2.98148E+17,lepistane#2482,2018-02-08,added magit and such cool tools,,
2.98148E+17,lepistane#2482,2018-02-08,😄,,
1.89169E+17,srasu#0042,2018-02-08,Nice,,
2.98148E+17,lepistane#2482,2018-02-08,what do you guys think,,
2.98148E+17,lepistane#2482,2018-02-08,about,,
2.98148E+17,lepistane#2482,2018-02-08,java changes,,
2.98148E+17,lepistane#2482,2018-02-08,http://blog.joda.org/2018/02/java-9-has-six-weeks-to-live.html,,
2.98148E+17,lepistane#2482,2018-02-08,what will you do?,,
1.23962E+17,屈才#4590,2018-02-08,"http://shekels.wtf/i/48a7db87a749da607c1ddb4971c4fa08.png

Has anyone ever delt with out-of-order printing in Cider?",,
2.98148E+17,lepistane#2482,2018-02-08,use promises,,
1.89169E+17,srasu#0042,2018-02-08,"I've dealt with that when multithreading. Easy fix is to use core.async, and pass all your print requests via a channel, and have a go-loop pull from the channel and print stuff",,
1.89169E+17,srasu#0042,2018-02-08,But I haven't dealt with that as being a uniquely-cider problem.,,
2.18087E+17,brian_penguin#9893,2018-02-12,@lepistane  the humble bundle functional programming drop this week has several clojure books and a bunch of other stuff too,,
1.89169E+17,srasu#0042,2018-02-12,That sounds awesome,,
3.09474E+17,jshah#3301,2018-02-13,Here's a link to the Humble Bundle for anyone interested: : https://www.humblebundle.com/books/functional-programming-books?partner=indiekings&charity=110098,,
2.98148E+17,lepistane#2482,2018-02-13,tnx,,
2.98148E+17,lepistane#2482,2018-02-13,@brian_penguin,,
4.1244E+17,neirac#3154,2018-02-13,Awesome thanks,,
4.03891E+17,shljkm#0110,2018-02-14,Hello everyone! What do people use for clojure crash monitoring? What options are there?,,
1.89169E+17,srasu#0042,2018-02-14,"Anything that works with java works with clojure, theoretically.",,
1.89169E+17,srasu#0042,2018-02-14,"Quick google search turns up this one:
https://rollbar.com/features/",,
4.03891E+17,shljkm#0110,2018-02-14,do you use it personally? or any alternatives?,,
4.03891E+17,shljkm#0110,2018-02-14,@srasu,,
1.89169E+17,srasu#0042,2018-02-14,"Personally I just use my REPL for anything. But I will grant you that _as yet_ I don't have any clojure code running in production. That will be changing fairly soon, but not just yet.",,
4.03891E+17,shljkm#0110,2018-02-14,I see,,
2.65283E+17,Slackwise#2471,2018-02-15,https://gist.github.com/reborg/dc8b0c96c397a56668905e2767fd697f,,👌 (3)
1.57759E+17,Quixoticelixer#6239,2018-03-04,@srasu how is the bot going,,
1.89169E+17,srasu#0042,2018-03-04,"Unfortunately I haven't had a lot of time to work on it recently, but I actually just picked it up again last weekend. I'm taking a look at some of what I did and I'm thinking there were a few things that I was working towards that didn't quite work. I was going at it from a high-level standpoint a little too quickly.",,
1.89169E+17,srasu#0042,2018-03-04,"I'm wanting to do a little re-working of the lower-level stuff before I start working towards high-level things, that way you can use lower-level constructs if you need to.",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,yeah,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,It might be a good idea to keep it quite low level and have a seperate library to have the highe level stuff,,
1.89169E+17,srasu#0042,2018-03-04,"That's part of what I was starting to think honestly. I've rather recently realized that I need to focus a little more on so-called ""compression oriented programming"" and that I tend to overabstract things too quickly. So I'm on the fence honestly between scrapping it and starting from scratch again, or if I just want to strip out some of the stuff that wasn't working and going from there.",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,hm,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,I think it is probably a good idea to put different abstraction levels into one library,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,if that makes sence?,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,sense,,
1.89169E+17,srasu#0042,2018-03-04,"Yeah, I'm not thinking I want to pull it into different libraries, mostly just having different levels of abstraction in different namespaces.",,
1.89169E+17,srasu#0042,2018-03-04,probably.,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,"But yeah, with my experience this is one of the hardest problems in terms of design (discord libraries/bots)",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,implentation is pretty easy,,
1.89169E+17,srasu#0042,2018-03-04,"My main thought is just ensuring that I have a full continuum from the low-level operations all the way up to being able to just say something like:
```clojure
(defbot main
    :commands {""echo"" (send-message channel contents)})
```",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,yeah,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,I might a tiny discord bot in js,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,that can read commands from a json file,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,"but you want to do that for simple commands, but then also have a lot more power for other things",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,but not want to have to use the low level stuff if you just want a ping,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,for example,,
1.89169E+17,srasu#0042,2018-03-04,For sure.,,
1.89169E+17,srasu#0042,2018-03-04,"Yeah. Main reason I haven't had a lot of time for it recently is that coinciding with my graphics class I got started on a little clojure open-gl project. I've not gotten very far with it yet, but I've got asset loading and the beginnings of a shader pipeline. So I'm pretty happy with it so far. But I'm thinking I want to put some more time into the discord bot api soon.",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,yeah,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,"I just need an excuse to do more programming, I haven't been doing nearly enough lately",,
1.89169E+17,srasu#0042,2018-03-04,I can safely say I've nearly been doing too much.,,
1.89169E+17,srasu#0042,2018-03-04,But unfortunately most of it has been C++,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,I'm doing a Diploma in Horticulture,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,Which isn't what you would call programming heavy,,
1.89169E+17,srasu#0042,2018-03-04,"Yeah, I was going to say.",,
1.89169E+17,srasu#0042,2018-03-04,"I'm just a few months away from getting my bachelors in Game Development. Already signed on with a small company working in software as well as the main programmer and it's a mobile thing using Expo and CLJS. I'm pretty excited for it. So I've been working on that product in my spare time when I'm not working on class stuff, discljord, and my little opengl project.",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,"Game Dev, cool",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,Know much about Rust?,,
1.89169E+17,srasu#0042,2018-03-04,"Yup. Was going to do software, but machine learning was easier for me to find resources on than computer graphics and game engine architecture, so I did the games degree.",,
1.89169E+17,srasu#0042,2018-03-04,"I don't unfortunately. It's been on my shortlist for a while, but I've yet to get to it",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,"I would like to learn it, but I don't have a need for it",,
1.89169E+17,srasu#0042,2018-03-04,"that's the thing. I've nearly reached the point where I've stopped learning new technologies until I need them. I know _about_ a lot of things that I don't know how to use. But I'm comfortable picking up just about anything, so I'm not too worried about grabbing the ""next big thing"" before it becomes big.",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,Yeah,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,I mean it look sgood especially for game development,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,but it is very new and you aren't going to miss out if you wait a few years,,
1.89169E+17,srasu#0042,2018-03-04,"Yeah. That's the thing, I'm not really worried about new technologies in game dev because I personally would want to stick to either C or a lisp dialect. If it turns out to be real good I'll use it, but so far I generally want either the speed and clarity of C, or the expressiveness of Lisp. I rarely like any of the middle ground languages. If I were to really pick a language to be the best of both worlds it would be Common Lisp since that can be as fast as C if you know what you're doing.",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,yeah,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,"I think ideally Rust should be at least as fast as C, it's sort of at the same level but yeah",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,You can do anything in C and you can do it fast,,
1.89169E+17,srasu#0042,2018-03-04,"But yeah, I'm pretty interested in Rust because it looks pretty cool. I might spend an hour or two tonight peeking at it if I don't decide to spend that time working on discljord.",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,But to be honest the biggest problem I am having is with design,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,How to think about a problem before putting it into a computer program,,
1.57759E+17,Quixoticelixer#6239,2018-03-04,But I think the best solution to that is to program more,,
1.89169E+17,srasu#0042,2018-03-04,"For sure. Honestly I've found the more I program stuff, the more programming is the best way to design it. Which is codified in the idea of ""compression oriented programming"". Basically do things in the stupidest way you can think of, and then once you start doing it multiple times extract it. It's one of the simplest ways you can start to do code reuse, and allows you to organically see where your project is going and start to refactor to make it work better once you have a good idea of what the requirements actually are, instead of speculating wildly about what you might need.",,
1.89169E+17,srasu#0042,2018-03-04,"It's surprising to me that it's taken me so long to come to that conclusion, given that I've been programming about 6-12 hours a day for the past 10 years.",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,"Yeah, how ever I think that once you get more experience you can guess and estimate stuff better, and design things right from the start instead of bushwacking",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,and it varies a lot in different problems and domains,,
1.89169E+17,srasu#0042,2018-03-04,"That's the thing, I've thought that too for years. Even when I've been working on a project in a similar genre to something I've done a dozen times before, it always surprises me that I have no idea what the requirements actually end up being. So in my experience _so far_ I've found that it's better to avoid abstracting too early even if you think you know what's going to need to be abstracted.",,
1.89169E+17,srasu#0042,2018-03-04,"And I'm saying that personally I want to go _back_ to bushwacking after spending several about 4 years doing just that, and then another 6 doing so-called ""good design"" whether that was OO design for the first 5 years of that, or ""module"" style design like I have been doing for the last year.",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,"I think that abstraction is necessarily the same as design though, and like you describe it is very easy to think you will probably need to abstract something and then it turns out that was a terrible idea",,
1.89169E+17,srasu#0042,2018-03-04,"Can't tell you how many times I've done that, so yeah. For sure.",,
1.57759E+17,Quixoticelixer#6239,2018-03-04,also documentation is good shit yo,,
1.89169E+17,srasu#0042,2018-03-04,For sure. The clojure docs are some of the best I've seen.,,
1.89169E+17,srasu#0042,2018-03-04,Which has been a massive help,,
1.89169E+17,srasu#0042,2018-03-04,"Just opened up discljord, and it's better than I remember. I just need to pull out a few things that aren't necessary, and re-think state, and i think I'll be in a decent place to start building up some abstractions on top of it as I develop a bot on top of it.",,
1.57759E+17,Quixoticelixer#6239,2018-03-07,@srasu You up?,,
1.89169E+17,srasu#0042,2018-03-07,"Lol, messaged me minutes after I shut my computer down for the night. What's up?",,
1.89169E+17,srasu#0042,2018-03-07,@Quixoticelixer,,
1.57759E+17,Quixoticelixer#6239,2018-03-07,"Ah, nothing important",,
1.89169E+17,srasu#0042,2018-03-07,Okay. Curious anyways though.,,
1.57759E+17,Quixoticelixer#6239,2018-03-07,Just was going ot ask stuff about the bot,,
1.57759E+17,Quixoticelixer#6239,2018-03-07,/library,,
1.89169E+17,srasu#0042,2018-03-07,"Ah okay. Yeah, haven't made any changes yet, just looking at it. I think my next step is to rip out the state abstraction and build a complex example bot. That'll get me working on the http api which needs finishing, and it'll help me figure out how I need to change the storage of the bot.",,
1.89169E+17,srasu#0042,2018-03-07,"I'm hoping to have time this weekend, but my schedule is killer. The depressing part of this is that I know for a fact that I will have more time once I graduate for the libraries I'm working on.",,
1.89169E+17,srasu#0042,2018-03-07,The school has got me on three projects that could each be a full time job. So my schedule is insane.,,
1.57759E+17,Quixoticelixer#6239,2018-03-07,I would love to work on it,,
1.57759E+17,Quixoticelixer#6239,2018-03-07,but i need instructions,,
1.57759E+17,Quixoticelixer#6239,2018-03-07,or sort of a design overview,,
1.89169E+17,srasu#0042,2018-03-07,Oh okay. I'll work on one and I'll put it up in the repo.,,
1.89169E+17,srasu#0042,2018-03-07,I might be able to get it up this evening.,,
1.57759E+17,Quixoticelixer#6239,2018-03-08,queueing,,
1.89169E+17,srasu#0042,2018-03-10,@Quixoticelixer After spending some time and thought it seems like the main thing that I can predict discljord needing right now is coverage of dicord's HTTP API.,,
1.89169E+17,srasu#0042,2018-03-10,"The other big thing I want to do with it is start making a somewhat complex bot with it and start ironing out pain points. Since I was premature with how I wanted to do state, I think I'm going to rip that out entirely and then start building a bot, and start making niceties for what I start figuring out is needed. The biggest barrier in the way of being able to make that bot though is said coverage of the HTTP api.",,
1.57759E+17,Quixoticelixer#6239,2018-03-10,i think maybe that it should be the bots responsibility to do most of the state?,,
1.89169E+17,srasu#0042,2018-03-10,"Any actual bot-related state, sure. I'm keeping that. The main thing I want to pitch right now is the idea of ""bot wide"" and ""guild specific"" state because my api for it was absolute trash. I want to use the bot a bit and manage my own state for a bit so that I can see how the api could help manage it.",,
1.89169E+17,srasu#0042,2018-03-10,"That way I don't make assumptions about what's good, and then end up totally wrong like last time.",,
1.57759E+17,Quixoticelixer#6239,2018-03-10,yeah,,
1.89169E+17,srasu#0042,2018-03-10,"In any case, any PR's with HTTP api coverage or example bots would be great. More http coverage is what's needed to take it from barely functional to pleasant to use, and more bots would be a good way for me to read over it and see the pain points I need to smooth over.",,
1.89169E+17,srasu#0042,2018-03-10,The main namespace for http stuff is the discljord.messanging namespace.,,
1.89169E+17,srasu#0042,2018-03-10,"Actually, I was just playing around with the state api. It honestly doesn't feel as bad as I remember.",,
1.89169E+17,srasu#0042,2018-03-10,"The more I play with it, the more I'm starting to think I did a good job. I just need to fix a lot of pain points and add another layer or two of abstraction, because right now it's doing a lot of stuff manually.",,
1.57759E+17,Quixoticelixer#6239,2018-03-10,looks good,,
1.89169E+17,srasu#0042,2018-03-10,"I had to make a few tweaks so that it acts right, but for the most part i think it's good. the one big thing that I _know_ I need to fix is making sure that the ""update-guild-state"" function can add new guilds if one doesn't exist.",,
1.89169E+17,srasu#0042,2018-03-10,"Just finished the last of the edits I needed for my quote-bot to work properly. Turns out I had an issue where if I updated the state of a guild with no state yet, it wouldn't put it in there because I forgot how specter works. In any case, it's working now and I have a bot up and running off my raspberry pi that's based on the most recent version of discljord.",,
1.89169E+17,srasu#0042,2018-03-10,"Okay, well i have my first bot up and running using discljord. It's on a boot script on my raspberry pi. And I've discovered that there's a need for bots to have an autosave feature for bot state. And it would probably be good to have state that's transient so that it's not included in saves at all. Either that or just leave all saving to the user, which I don't personally like.",,
1.89169E+17,srasu#0042,2018-03-11,"Done some tweaking, and now it's up on the examples.basic-bot namespace. Got it running on a raspberry pi and working in another server that I'm on. I think the library is ready for use now. There's just some abstractions that need to be made and some more coverage of the discord http api. Already have enough to be able to send messages easily though so that's good.",,
1.89169E+17,srasu#0042,2018-03-11,"Link for anyone interested who didn't get it when I shared it before.
http://github.com/IGJoshua/discljord",,
1.57759E+17,Quixoticelixer#6239,2018-03-11,@srasu i am having a lot of trouble getting the example bot to work,,
1.89169E+17,srasu#0042,2018-03-11,"What's the issue so far? You do need two files in the resources directory. One that's the token.txt with the token just as a copy paste from the site, and one that's owner.txt with your id in it.",,
1.57759E+17,Quixoticelixer#6239,2018-03-11,I'm reaching the maximum text message size for the websocket,,
1.57759E+17,Quixoticelixer#6239,2018-03-11,or,,
1.57759E+17,Quixoticelixer#6239,2018-03-11,rather gniazdo,,
2.65283E+17,Slackwise#2471,2018-03-11,Nest?,,
1.89169E+17,srasu#0042,2018-03-11,"Oh. How's that? I've never had that issue on my windows laptop, manjaro desktop, or raspberry pi.",,
1.57759E+17,Quixoticelixer#6239,2018-03-11,I used the token for my own bot,,
1.57759E+17,Quixoticelixer#6239,2018-03-11,and I tihnk i have had this problem before,,
1.57759E+17,Quixoticelixer#6239,2018-03-11,i can give you its token if you want to check,,
1.89169E+17,srasu#0042,2018-03-11,I'm out of the house for a bit longer. But could you give me a stack trace? Or the logs from gniazdo?,,
1.57759E+17,Quixoticelixer#6239,2018-03-11,sure,,
1.57759E+17,Quixoticelixer#6239,2018-03-11,"```
Sending heartbeat from usual route
2018-03-12 16:08:18.731:WARN:oejwc.Parser:WebSocketClient@1204628513-25:
org.eclipse.jetty.websocket.api.MessageTooLargeException: Text message size [80620] exceeds maximum size [65536]
    at org.eclipse.jetty.websocket.api.WebSocketPolicy.assertValidTextMessageSize(WebSocketPolicy.java:140)
    at org.eclipse.jetty.websocket.common.Parser.assertSanePayloadLength(Parser.java:127)
    at org.eclipse.jetty.websocket.common.Parser.parseFrame(Parser.java:480)
    at org.eclipse.jetty.websocket.common.Parser.parse(Parser.java:252)
    at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.readParse(AbstractWebSocketConnection.java:675)
    at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:505)
    at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)
    at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
    at org.eclipse.jetty.io.ssl.SslConnection.onFillable(SslConnection.java:186)
    at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)
    at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)
    at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)
    at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceAndRun(ExecuteProduceConsume.java:246)
    at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:156)
    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:654)
    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:572)
    at java.base/java.lang.Thread.run(Thread.java:844)
Connection closed. code: 1009
message: Text message size [80620] exceeds maximum size [65536]
Unknown stop code
```",,
1.89169E+17,srasu#0042,2018-03-11,"Well it seems like something broke in the heartbeat then. Check to see if commenting out the send in the heartbeat in discljord.connections makes this error go away. It'll make the bot disconnect quickly, but we'll know it's send and not recieve.",,
1.89169E+17,srasu#0042,2018-03-11,Also that message size is _way_ too huge for me to know what's going on with it.,,
1.89169E+17,srasu#0042,2018-03-11,Maybe change the send to a println,,
1.89169E+17,srasu#0042,2018-03-11,So you can see what it was trying to send.,,
1.89169E+17,srasu#0042,2018-03-11,Preferably a pprint,,
1.57759E+17,Quixoticelixer#6239,2018-03-11,yeah,,
1.89169E+17,srasu#0042,2018-03-11,Because all it should be sending is some json.,,
1.89169E+17,srasu#0042,2018-03-11,Which for a heartbeat should be like a few dozen bytes at most.,,
1.57759E+17,Quixoticelixer#6239,2018-03-11,hm,,
1.57759E+17,Quixoticelixer#6239,2018-03-11,"I commentedout the send in the heartbeat, the same thing is happening although the stack trade seem sshorter",,
1.89169E+17,srasu#0042,2018-03-11,"Okay, so maybe its a receive that's crashing it then. That's odd.",,
1.89169E+17,srasu#0042,2018-03-11,Which makes sense since it's coming from the parse method.,,
1.57759E+17,Quixoticelixer#6239,2018-03-11,is there a way to increase the maximum message size?,,
1.89169E+17,srasu#0042,2018-03-11,No idea. Never had this problem. Maybe use cider's debugger of a few functions and see if anything looks crazy?,,
1.89169E+17,srasu#0042,2018-03-11,Pm me the token and an invite perms link for it too if you would so I can test it on my server once I get home.,,
1.89169E+17,srasu#0042,2018-03-12,"Alright, with your token getting the same error. Gonna troubleshoot to see if I can figure out what it is.",,
1.57759E+17,Quixoticelixer#6239,2018-03-12,hmm,,
1.89169E+17,srasu#0042,2018-03-12,"Okay, confirmed that it isn't the heartbeat. Got logging from both before and after the send",,
1.89169E+17,srasu#0042,2018-03-12,"Wait, no, not necessarily.",,
1.89169E+17,srasu#0042,2018-03-12,since it runs off a thread pool.,,
1.89169E+17,srasu#0042,2018-03-12,Just tried it with my bot key. Same problem.,,
1.89169E+17,srasu#0042,2018-03-12,"So now I have to figure out what's different between the code for the bot that I'm using on my pi, and this example. Becuase they're in different codebases, I just don't know the difference at this point.",,
1.57759E+17,Quixoticelixer#6239,2018-03-12,is there any way to incease the maximum message size?,,
1.89169E+17,srasu#0042,2018-03-12,Been looking that up. I'm not getting anything.,,
1.89169E+17,srasu#0042,2018-03-12,"wait, yes you can",,
1.89169E+17,srasu#0042,2018-03-12,https://stackoverflow.com/questions/17497173/jetty-9-websocket-server-max-message-size-on-session,,
1.89169E+17,srasu#0042,2018-03-12,I'm quick booting into windows to see if I have any changes that didn't get pushed that might fix this issue.,,
1.89169E+17,srasu#0042,2018-03-12,"Okay, running the exact same code from windows is giving me no error whatsoever.",,
1.89169E+17,srasu#0042,2018-03-12,So I'm starting to get pretty puzzled at why this would happen.,,
1.89169E+17,srasu#0042,2018-03-12,Has that stack exchange answer give you any luck @Quixoticelixer ?,,
1.57759E+17,Quixoticelixer#6239,2018-03-12,i haven't had time to give it a good shot yet,,
1.57759E+17,Quixoticelixer#6239,2018-03-12,https://github.com/stalefruits/gniazdo/issues/22,,
1.57759E+17,Quixoticelixer#6239,2018-03-12,i found this as well,,
1.89169E+17,srasu#0042,2018-03-12,"Okay, well this is odd. I just tried to use your token on windows and that has the same issue now.",,
1.57759E+17,Quixoticelixer#6239,2018-03-12,The Thick Plottens...,,
1.89169E+17,srasu#0042,2018-03-12,well getting this to take an optional client is being way more of a pain than I thought it would be.,,
1.89169E+17,srasu#0042,2018-03-12,And ofc it takes nil for a client. Why _wouldn't_ it? Well that makes this easier. >.>,,
1.89169E+17,srasu#0042,2018-03-12,Got it working @Quixoticelixer!,,
1.89169E+17,srasu#0042,2018-03-12,And I've pushed the change that fixed it.,,
1.89169E+17,srasu#0042,2018-03-12,It was just setting the max size.,,
1.89169E+17,srasu#0042,2018-03-12,Let me know if it works for you.,,
1.57759E+17,Quixoticelixer#6239,2018-03-12,"no, you haven't pushed it yet",,
1.57759E+17,Quixoticelixer#6239,2018-03-12,,https://cdn.discordapp.com/attachments/315388260987830272/422629986546089985/Screen_Shot_2018-03-12_at_18.40.21.png,
1.89169E+17,srasu#0042,2018-03-12,???,,
1.89169E+17,srasu#0042,2018-03-12,Lol,,
1.89169E+17,srasu#0042,2018-03-12,that's hilarious.,,
1.89169E+17,srasu#0042,2018-03-12,"It's 'cause when I switched to windows my computer's clock was 5 hours off. It switches back after a bit, but apparently I made the commit before it fixed.",,
1.57759E+17,Quixoticelixer#6239,2018-03-12,"well, in four hours i'll check it out",,
1.89169E+17,srasu#0042,2018-03-12,"Lol. Well it's up now, whether or not it's future tech is up to interpretation. Might as well check it out now. XD",,
1.89169E+17,srasu#0042,2018-03-12,"Next thing I think I might be adding to this bot is repl support associated with a specific channel. Initially it'll just be pm's with the owner, but I'll set it up so that it can be put in a channel. When I do that though I'll probably make it another separate example so that I can do all the appropriate sandboxing etc so that maybe we can have #repl-bot working again under discljord.",,
1.57759E+17,Quixoticelixer#6239,2018-03-12,okay it seems to be working,,
1.89169E+17,srasu#0042,2018-03-12,Awesome,,
1.89169E+17,srasu#0042,2018-03-12,"Yup, working from my server too.",,
1.57759E+17,Quixoticelixer#6239,2018-03-12,how do you add a quote?,,
1.89169E+17,srasu#0042,2018-03-12,`!quote add <username> <quote>`,,
1.89169E+17,srasu#0042,2018-03-12,"then fetch quotes with 
`!quote [username]`",,
1.89169E+17,srasu#0042,2018-03-12,"username has to be one word, but a mention is always one word, so i like using those.",,
1.89169E+17,srasu#0042,2018-03-12,"if no username is provided to the fetch quote command, it'll randomly select a user, along with randomly selecting a quote.",,
1.57759E+17,Quixoticelixer#6239,2018-03-12,aah,,
1.89169E+17,srasu#0042,2018-03-12,"Alright, I've got to head to bed. But I'm going to try to get some more work done on discljord in the coming days. Going to try to get it up to spec to be one of the community bot api's over in the Discord API server.",,
1.57759E+17,Quixoticelixer#6239,2018-03-12,yeah goodnight,,
1.89169E+17,srasu#0042,2018-03-12,"Yup, you too.",,
1.89169E+17,srasu#0042,2018-03-12,"Just pushed another change. Surprised it took me this long to do since it's such a major workflow thing. I wrapped the calls to the event listeners dispatched in discljord.bots in a try/catch block that will print the exception to `*err*` and won't crash the thread. This way if a listener throws an exception you can just keep working on it, re-evaluate the function, and test it immediately instead of having to restart the bot. Major workflow improvement.",,
1.89169E+17,srasu#0042,2018-03-12,Here's basic example. Next thing I want to do is make it so that each channel that you message the bot from has a different environment. That way one person using the bot in one channel won't affect the other channels it's used in.,https://cdn.discordapp.com/attachments/315388260987830272/422810694724091914/unknown.png,
1.89169E+17,srasu#0042,2018-03-12,After ironing out a couple issues:,https://cdn.discordapp.com/attachments/315388260987830272/422813637535858689/unknown.png,
1.89169E+17,srasu#0042,2018-03-12,One thing I'm still puzzled about now though is how I could get stack traces to print in a way that's reasonable. I tried putting `(binding [*err* *out*] ...)` around my eval but that just gave me nothing at all.,,
1.89169E+17,srasu#0042,2018-03-12,Got that mostly working now too.,https://cdn.discordapp.com/attachments/315388260987830272/422815900673245194/unknown.png,
1.89169E+17,srasu#0042,2018-03-12,Pushed the repl-bot to the repo.,,
1.89169E+17,srasu#0042,2018-03-12,"Hmmm, need to make sure disconnects are more graceful. Maybe make a standardized disconnect event that can be sent from anywhere in the api. That way I can make sure stuff doesn't go wrong when the websocket sends an EOF.",,
1.89169E+17,srasu#0042,2018-03-12,"(like just happened, crashed the heartbeat thread, and none of the event listeners shut down, and the bot didn't try to reconnect)",,
1.57759E+17,Quixoticelixer#6239,2018-03-13,watch out for sideeffects in the repl,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,"for the messaging api, would it be a good idea to have an async channel feed a loop",,
1.57759E+17,Quixoticelixer#6239,2018-03-13,that can sleep if it needs to be rate limited?,,
1.89169E+17,srasu#0042,2018-03-13,"Yes, that's something I have in the massive comment in that namespace. It was something I was thinking about, but hadn't gotten around to yet.",,
1.57759E+17,Quixoticelixer#6239,2018-03-13,"```clojure
(defn process-messages [callback]
  (let [c chan
        rate-limited? false]
    (go (while (not rate-limited?) ((<! c))))
    (go (!> c callback))))
```",,
1.57759E+17,Quixoticelixer#6239,2018-03-13,okay i have it going,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,with an async channel,,
1.89169E+17,srasu#0042,2018-03-13,Nice.,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,"```clojure
(def server-channel (chan))

(defn process-messages [callback channel]
  (let [rate-limited? false]
    (go (while (not rate-limited?) ((<! channel))))
    (go (>! channel callback))))

```",,
1.57759E+17,Quixoticelixer#6239,2018-03-13,could i have access to the repository?,,
1.89169E+17,srasu#0042,2018-03-13,"Lol, I've got both of our bots responding to quotes here.",,
1.89169E+17,srasu#0042,2018-03-13,I'm thinking I generally want to go off of pull requests. Is there something you need it for other than just adding directly to where I'm working? Mostly asking because I'm also working in it atm.,,
1.89169E+17,srasu#0042,2018-03-13,"Oh, and have you looked at the rate limits on the discordapp website? It's per-endpoint.",,
1.57759E+17,Quixoticelixer#6239,2018-03-13,"its not a huge issue, just that I  my repo is mirrored anyway",,
1.89169E+17,srasu#0042,2018-03-13,"Ah, okay. Sure, I can give you main repo access.",,
1.89169E+17,srasu#0042,2018-03-13,Send you the invite link,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,thanks,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,i'll try not to force merge into master too much,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,and yeah it still need logic for checking if it is rate limitred,,
1.89169E+17,srasu#0042,2018-03-13,"Yeah, the main thing there is that whether or not you're rate limited is dependent on a lot of things. Like what kind of http request type you're using, what channel or message or guild id is in the http url, etc. So there's a lot in it. I guess I was already thinking towards over engineering this though. Can probably build up from simple and make it better.",,
1.57759E+17,Quixoticelixer#6239,2018-03-13,a really simple solution would just be to sleep for a second two if you are returned a 429,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,Another thing to do eventually might be to ad in a database,,
1.89169E+17,srasu#0042,2018-03-13,"Yeah, but that's not going to cut it if I want to get this into the Discord API server.",,
1.57759E+17,Quixoticelixer#6239,2018-03-13,yeah,,
1.89169E+17,srasu#0042,2018-03-13,And I already have a bot using this that is used frequently enough that a 2 second delay between sends would be killer.,,
1.89169E+17,srasu#0042,2018-03-13,Not to mention it's not technically compliant.,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,yeah,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,"well, we need to parse the response and store it in state",,
1.89169E+17,srasu#0042,2018-03-13,Yup.,,
1.89169E+17,srasu#0042,2018-03-13,Need to store it in bot state too.,,
1.89169E+17,srasu#0042,2018-03-13,Which is why I have the `::bots/internal-state` key in the bot's state.,,
1.89169E+17,srasu#0042,2018-03-13,This way you can run multiple bots from the same JVM instance.,,
1.89169E+17,srasu#0042,2018-03-13,Sound good to you?,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,yeah,,
1.89169E+17,srasu#0042,2018-03-13,Cool.,,
1.57759E+17,Quixoticelixer#6239,2018-03-13,another thing that needs to be simplified is creating message commands,,
1.89169E+17,srasu#0042,2018-03-13,"Is it too complex at the moment? All you need is the bot, channel, and message",,
1.89169E+17,srasu#0042,2018-03-13,"Or I guess rather, what could make it simpler?",,
1.89169E+17,srasu#0042,2018-03-13,"btw, just so that it's clear what I'm shooting for with discljord, I'm aiming to get it featured on the Discord API server, and to do that it has to comply with this:
https://gist.github.com/meew0/bbbbd5348967dee5f7e84c0cd58983fd",,
1.89169E+17,srasu#0042,2018-03-13,"I'm thinking that after playing with it for a bit that regexes may be a good way to do commands since commands are supposed to be fairly simple, rather than complex grammars. I plan to make sure that there are lower-level facilities if regex isn't enough for a specific bot, but it'll likely be the default way of making commands. Although I might make another layer on top of that so that people working with the api don't even have to go down to the regex level if they don't like.
I just uploaded the first macro that'll play into that, since frequently with systems like that you'd like it to try to match certain predicates in order until it finds one that it matches, and then not try any more.",,
1.57759E+17,Quixoticelixer#6239,2018-03-14,i think with the command matching,,
1.57759E+17,Quixoticelixer#6239,2018-03-14,there should be several ways for sure,,
1.57759E+17,Quixoticelixer#6239,2018-03-14,from a simple EDN map to a queue of the JSON events,,
1.89169E+17,srasu#0042,2018-03-14,"Yeah. Right now the low-level way to do it is to receive the :message-create event which is converted from json to edn before it's shipped off to the listener. However I'm thinking I want to make another layer overtop of that since often what a bot will want to do with a message-create is just to use it for commands instead of scanning it for offensive stuff or doing caps checks like a mod bot might. So I want people to be able to have like a generic ""commands"" api, plus the regular listener api.",,
3.39749E+17,Zaphodious#4242,2018-03-14,"Olá folks! Problem I'm toying with - an Atom lazily backed by a database. There are a few libraries I've found that persist atom contents, but not one that allows you to interact with a database *through* an Atom, loading data lazily when needed.",,
3.39749E+17,Zaphodious#4242,2018-03-14,"I'm trying to figure it out. What would be the best way to tackle the problem, in your opinion?",,
3.39749E+17,Zaphodious#4242,2018-03-14,"Well, rather, through a ref-like object, as at some point it loses what makes an Atom an Atom",,
1.57759E+17,Quixoticelixer#6239,2018-03-14,Why do you need it?,,
1.89169E+17,srasu#0042,2018-03-14,"I mean if you're determined to have it work _just_ like an atom, then just write a lower-level java class that implements the same functionality as an atom. Otherwise, I'd recommend determining an interface that works best for how your database is actually backed. But I might be in a minority here because I generally don't recommend abstracting things too much (in spite of doing it myself, it's a habit I'm trying to get out of).",,
3.39749E+17,Zaphodious#4242,2018-03-14,"Building a web app, and its a bit distracting and annoying having to use a different set of functions to get what's basically the same data from different places.",,
1.89169E+17,srasu#0042,2018-03-14,(although for a web app obviously that java bit doesn't work),,
3.39749E+17,Zaphodious#4242,2018-03-14,"Right now I have a single abstraction over the data that both server and client side components can use, but it would make things a bit simpler if I could just think ""this is an Atom"".",,
3.39749E+17,Zaphodious#4242,2018-03-14,"I was thinking about making a Record that Implimented IDeref on CLJ and whatever it requires on CLJS, but I'm not sure about that.",,
1.89169E+17,srasu#0042,2018-03-15,That doesn't sound like a bad idea.,,
1.89169E+17,srasu#0042,2018-03-15,"@Quixoticelixer any idea how to send EOF over a websocket from the server using http-kit? I'm trying to reproduce a bug where the bots are always disconnecting on EOF so that I can get them to reconnect, but I can't replicate it with my test suite.",,
1.89169E+17,srasu#0042,2018-03-15,"Dang it. One of the few times I want a dynamic var that acts like they do in common lisp, only to be swatted down by the fact that I can't use set! on a root binding. >.>",,
1.30231E+17,sarna#3904,2018-03-15,what are dynamic vars?,,
1.30231E+17,sarna#3904,2018-03-15,if you don't mind explaining,,
1.30231E+17,sarna#3904,2018-03-15,are they globals? 🤔,,
1.89169E+17,srasu#0042,2018-03-15,"They are globals, but they have dynamic scope.",,
1.89169E+17,srasu#0042,2018-03-15,Which means that you can effectively change them in a way that reaches down into calls to change how they function.,,
1.89169E+17,srasu#0042,2018-03-15,"So for example:
```clojure
(binding [*out* *err*]
  (println ""Hello, this is an error!""))
```
This will rebind the dynamic var `*out*` from standard output to the value of the dynamic var `*err*` which by default is standard error. So this would print out ""Hello, this is an error!"" to standard error.",,
1.89169E+17,srasu#0042,2018-03-15,"I wanted to do something like so:
```clojure
(binding [*log-file* ""test.txt""]
  (log ""Hello, world!""))
```
That in and of itself is easy enough to do, but setting up a default value for it like so unfortunately doesn't work:
```clojure
(defn init-logging
  [filename]
  (set! *log-file* filename))
```
If this worked, you'd be able to set a default logging file, and then not need to wrap each call to log in a `binding` form. There are ways around this with a lexically-scoped `atom` to store the default values, but I wish that I could just `set!` the root value of a var.",,
1.89169E+17,srasu#0042,2018-03-15,@sarna,,
1.30231E+17,sarna#3904,2018-03-15,oh 👀 thanks for going in depth 🙏,,
1.89169E+17,srasu#0042,2018-03-15,No problem.,,
1.89169E+17,srasu#0042,2018-03-15,"Oh and for reference to create them you use this:
```clojure
(def ^:dynamic *var-name* initial-value)
```
It has to be surrounded by asterisks like that.",,
1.30231E+17,sarna#3904,2018-03-15,🤔 interesting,,
1.89169E+17,srasu#0042,2018-03-15,"That's an old convention from back in common lisp. *var-name* was a dynamic var, while +var-name+ was a constant. We kept the convention for asterisks, but we upgraded it to an actual compiler warning to not follow that convention.",,
1.30231E+17,sarna#3904,2018-03-15,makes sense,,
1.89169E+17,srasu#0042,2018-03-15,"Well I've been having issues with EOF with discljord, so today I implemented some real logging. Still deals with race conditions when logging from different threads, but I'm going to fix that soon by making it into a work queue so that it doesn't look trash when it logs.",,
1.30231E+17,sarna#3904,2018-03-15,are you making a bot?,,
1.30231E+17,sarna#3904,2018-03-15,or are you the library maintainer 👀,,
1.89169E+17,srasu#0042,2018-03-15,Both.,,
1.30231E+17,sarna#3904,2018-03-15,ohh neat,,
1.30231E+17,sarna#3904,2018-03-15,I've made a bot in Rust already,,
1.30231E+17,sarna#3904,2018-03-15,"it scrapes stuff from a dictionary and plays music
+ welcome/goodbye messages",,
1.30231E+17,sarna#3904,2018-03-15,"(it's a server for learning Danish, we wanted to be able to search for stuff in the dictionary easily)",,
1.89169E+17,srasu#0042,2018-03-15,Nice. I'm just making bots for testing purposes for maintaining my api. So far it's just a quote bot and a clojure repl bot.,,
1.89169E+17,srasu#0042,2018-03-15,But I intend to make a lot more later on.,,
1.30231E+17,sarna#3904,2018-03-15,oh nice :^),,
1.30231E+17,sarna#3904,2018-03-15,I'd love to help but maybe like :^)) when I'll know how to actually do things,,
1.89169E+17,srasu#0042,2018-03-15,"Once I get a proper sandboxing setup for the repl bot too, I'll offer to have the #repl-bot channel get filled again.",,
1.89169E+17,srasu#0042,2018-03-15,Because I think we should have a repl here. :P,,
1.30231E+17,sarna#3904,2018-03-15,o! absolutely,,
1.30231E+17,sarna#3904,2018-03-15,one suggestion though - I think token should be an environment variable,,
1.30231E+17,sarna#3904,2018-03-15,if you type it by hand and upload to GitHub.. bad stuff can happen :^),,
1.89169E+17,srasu#0042,2018-03-15,I considered it. Honestly a lot of the bot could be global in one way or another. I decided against it however so that multiple bots can be run off the same JVM instance.,,
1.30231E+17,sarna#3904,2018-03-15,"oh, haven't thought about this",,
1.30231E+17,sarna#3904,2018-03-15,"but still, I think like TOKEN1 TOKEN2 TOKEN3 wouldn't be as bad",,
1.30231E+17,sarna#3904,2018-03-15,as environment variables,,
1.89169E+17,srasu#0042,2018-03-15,"Again, that's reasonable, but kind of redundant since you'll just be passing the bot around into functions that do stuff with said bot anyways. Adding an extra key to the bot doesn't really change anything as compared to that except that suddenly you have to contend with another global that has to be cross-namespace.",,
1.30231E+17,sarna#3904,2018-03-15,🤔 good point,,
1.89169E+17,srasu#0042,2018-03-15,"Feel free to take a look at it. If you do have any suggested changes, feel free to make a pull request.",,
1.30231E+17,sarna#3904,2018-03-15,alright :),,
1.30231E+17,sarna#3904,2018-03-15,"I'd just put a warning so people won't upload their tokens to GitHub, that's all",,
1.89169E+17,srasu#0042,2018-03-15,just put it in your .gitignore,,
1.30231E+17,sarna#3904,2018-03-15,yup,,
1.89169E+17,srasu#0042,2018-03-15,Why does logging have to be such a nightmare?,,
1.30231E+17,sarna#3904,2018-03-16,why so?,,
1.89169E+17,srasu#0042,2018-03-16,"Oh, it's just you'd figure it'd be easy to log everything to a dated file and make sure that it's a separate thread doing the writing and to make it so that you can do it all with a single macro, a log macro. But of course it can't be that simple.",,
1.30231E+17,sarna#3904,2018-03-16,of course :^),,
1.89169E+17,srasu#0042,2018-03-16,@Quixoticelixer I'm having issues with my logging. I'm moving it to another branch for now and moving master over to try to help with reconnections.,,
1.57759E+17,Quixoticelixer#6239,2018-03-16,what library are you using,,
1.57759E+17,Quixoticelixer#6239,2018-03-16,?,,
1.89169E+17,srasu#0042,2018-03-16,None atm. I'm thinking I might need to bring one in since the thing that I did broke websockets.,,
1.89169E+17,srasu#0042,2018-03-16,It's currently on the repo under master. Haven't gotten to fixing the branches yet.,,
1.57759E+17,Quixoticelixer#6239,2018-03-16,yeah nah a logging library is a goodidea,,
1.89169E+17,srasu#0042,2018-03-16,"Probably is, yeah. The way I had it set up seemed okay at first glance, but for whatever reason it just killed my test suite for connections.",,
1.89169E+17,srasu#0042,2018-03-16,"Okay, I've got the retries set up for reconnection, which will hopefully fix the EOF issue. You may need to do a hard reset of master to the correct commit in order to get things to line up right though @Quixoticelixer",,
1.57759E+17,Quixoticelixer#6239,2018-03-16,ok,,
1.89169E+17,srasu#0042,2018-03-16,Really hitting the point with the web sockets that testing is more trouble than it's worth.,,
1.32473E+17,Ood2airo#2848,2018-03-20,Guys,,
1.32473E+17,Ood2airo#2848,2018-03-20,maria.cloud is SO AWESOME,,
1.32473E+17,Ood2airo#2848,2018-03-20,how I didn't see it before,,
2.98148E+17,lepistane#2482,2018-03-20,"it is recent addition 
i saw it few weeks ago posted on reddit",,
2.88883E+17,"Liria ^(;,;)^#0001",2018-03-21,What is maria.cloud,,
1.89169E+17,srasu#0042,2018-03-21,It seems like a tutorial environment for cljs,,
2.98148E+17,lepistane#2482,2018-03-21,"yep, you can eval everything in browser",,
1.89169E+17,srasu#0042,2018-03-21,And I just got a close code of 1001 from my discord bot. It's seeming like I need to make sure that every stop code _except_ 1000 and the ones specifically mentioned by the discord api need to do a reconnect loop.,,
2.16295E+17,HactarCE#5314,2018-03-22,?,,
2.98148E+17,lepistane#2482,2018-03-22,@HactarCE they are making discord bot,,
2.16295E+17,HactarCE#5314,2018-03-22,I gathered that much; I just don't understand what the four-digit codes (signals from Discord?) mean in this context,,
1.89169E+17,srasu#0042,2018-03-22,It's disconnect codes for websockets.,,
2.16295E+17,HactarCE#5314,2018-03-22,oh alright,,
1.32473E+17,Ood2airo#2848,2018-03-23,"Hey guys, have you seen this?
https://insights.stackoverflow.com/survey/2018/#work-salary-and-experience-by-language",,
1.32473E+17,Ood2airo#2848,2018-03-23,"""Highest-paid language in the world"" definitely sounds more impressing than ""Voted 50th most popular language at the TIOBE awards"" ;)",,
1.89169E+17,srasu#0042,2018-03-23,"Well this is dumb now. Bot api just got caught in an infinite loop of reconnect, but it won't ever hit the connection rate limit because it's not sending an identify packet, it's sending reconnect packets. So it's just getting in a loop of invalid sessions.",,
1.89169E+17,srasu#0042,2018-03-23,Wonder what's causing that.,,
1.30231E+17,sarna#3904,2018-03-23,"@srasu there's a discord server for serenity (Rust's discord bot library)
maybe they'd help you? they seem pretty knowledgeable about this",,
1.89169E+17,srasu#0042,2018-03-23,This is really just issues with my own code at this point. I'm slowly working out the issues. The biggest problem that i've had so far has simply been that I have a very difficult time recreating the issues I've been having in my test environment.,,
1.89169E+17,srasu#0042,2018-03-23,I don't think that the rust people will be very helpful in debugging a combination of clojure and jetty websockets.,,
1.89169E+17,srasu#0042,2018-03-23,At least not more than the main Discord API server.,,
1.30231E+17,sarna#3904,2018-03-23,"ah, alright then",,
1.89169E+17,srasu#0042,2018-03-23,Thanks for the suggestion though.,,
1.30231E+17,sarna#3904,2018-03-23,good luck 🤞,,
1.30231E+17,sarna#3904,2018-03-23,"I'm reading the joy of clojure atm, maybe I'll join you :^) *somewhere in the future*",,
1.89169E+17,srasu#0042,2018-03-23,"Lol, thanks. I'd love to have more people along and doing pull requests for discljord.",,
1.89169E+17,srasu#0042,2018-03-23,"And honestly I've not been using clojure for all that long. I've known about it for probably about 5 years, but my first real delves into it were just before college, about two years ago.",,
1.30231E+17,sarna#3904,2018-03-23,I've made a CLI tic tac toe in it a year ago or so,,
1.30231E+17,sarna#3904,2018-03-23,or two years ago 🤔 I don't really remember,,
1.30231E+17,sarna#3904,2018-03-23,"then I switched over to Rust, been busy with school",,
1.89169E+17,srasu#0042,2018-03-23,"Fair enough. My first project that I did that was outside of just random test bits was making game of life with seesaw. That was fun. I used transducers to do game updates. It was stupidly complex for what I did, but I learned a lot.",,
1.30231E+17,sarna#3904,2018-03-23,"I hope to cheat at uni 😬 ""hey come on it's just a java library""",,
1.89169E+17,srasu#0042,2018-03-23,"Lol. I wish I could do stuff like that here, but everything's in C++ and I barely get away with avoiding classes.",,
1.30231E+17,sarna#3904,2018-03-23,"my course will be more ""practical"", which probably means Java/C#
(developing an app every semester)",,
1.30231E+17,sarna#3904,2018-03-23,I hope to make pong before summer 🤔,,
1.89169E+17,srasu#0042,2018-03-23,"Lol. I feel like mine is pretty practical too. It's all about game development. My choices were game development or software development, and the main difference was in software I get machine learning, and in game dev I get graphics and engine development. I'd already taken machine learning, so the choice seemed obvious to me.",,
1.89169E+17,srasu#0042,2018-03-23,On the side though I've made a little graphics engine in Clojure with OpenGL. I hope to make it into a full engine using ECS and composable shaders down the line.,,
1.89169E+17,srasu#0042,2018-03-23,The thing uses LWJGL and GLFW so it's pretty portable. And already the dynamicity of clojure is coming in handy. I just need ways of recompiling shaders at runtime so that I can stop closing and re-opening the window when I need to change the shaders.,,
1.30231E+17,sarna#3904,2018-03-23,"oh, nice",,
1.30231E+17,sarna#3904,2018-03-23,I've been thinking about doing some libgdx,,
1.30231E+17,sarna#3904,2018-03-23,play-clj seems abandoned 🤔,,
1.89169E+17,srasu#0042,2018-03-23,"I found a guy who made a glsl parser and merger using common lisp so he could make shader behavior inheritance based. I really like the idea, and the way that he did it is actually really good for just making it all composable, but the issue was he tied the composition to multiple inheritance instead of just a list of shader components. Made the order weird and required knowledge of the inheritance tree. I want it to be simpler than that.",,
1.89169E+17,srasu#0042,2018-03-23,"I like the idea of libgdx, but I wasn't able to find a way to use it that gave me as much control as I wanted. And play-clj is pretty much abandoned at this point. He's moved on to working on play-cljs",,
1.30231E+17,sarna#3904,2018-03-23,multiple inheritance 👀,,
1.30231E+17,sarna#3904,2018-03-23,yup,,
1.30231E+17,sarna#3904,2018-03-23,and play-cljs is a very different thing,,
1.30231E+17,sarna#3904,2018-03-23,I'd have to write my own wrapper and I'm not qualified enough for that lmao,,
1.30231E+17,sarna#3904,2018-03-23,I can barely do fizzbuzz,,
1.89169E+17,srasu#0042,2018-03-23,"Yeah, multiple inheritance is pretty common in CLOS from what I've seen. Since CLOS objects don't have methods, it makes it easier.",,
1.30231E+17,sarna#3904,2018-03-23,"hmm, Clojure promises to lower this cognitive load you're under when programming",,
1.30231E+17,sarna#3904,2018-03-23,how do you deal with nested data structures?,,
1.30231E+17,sarna#3904,2018-03-23,they've been troubling me a bit,,
1.89169E+17,srasu#0042,2018-03-23,"I don't mind them usually. And when they're particularly troublesome, I use specter.",,
1.89169E+17,srasu#0042,2018-03-23,https://github.com/nathanmarz/specter,,
1.89169E+17,srasu#0042,2018-03-23,I have this as an include in almost all my projects for the purpose of dealing with deeply nested datastructures.,,
1.89169E+17,srasu#0042,2018-03-23,"It adds an additional abstraction for structures, and that's navigation. Makes transforming nested data structures a lot easier.",,
1.89169E+17,srasu#0042,2018-03-23,"It's also hella fast, so that's good.",,
1.30231E+17,sarna#3904,2018-03-23,"I've been doing advent of code and I've ended up with something like
`(([""foo"", ""bar""]), ([""baz""]))`
I wanted to map over the words, and oh man",,
1.89169E+17,srasu#0042,2018-03-23,Lol,,
1.89169E+17,srasu#0042,2018-03-23,"```clojure
(transform [ALL ALL ALL] identity weird-list)
```
^ This is what you would do for this",,
1.30231E+17,sarna#3904,2018-03-23,👀 fancy,,
1.32473E+17,Ood2airo#2848,2018-03-24,"Suskeyhose: hey, is your opengl thing open sources yet?",,
1.32473E+17,Ood2airo#2848,2018-03-24,"I've tried tinkering with libgdx, but it's not very well suited for interactive development",,
1.32473E+17,Ood2airo#2848,2018-03-24,"Lots of singletones, stuff breaks if you try to restart the rendering without terminating jvm",,
1.32473E+17,Ood2airo#2848,2018-03-24,"Also, it's not even libgdx alone, it's lwjgl too",,
1.32473E+17,Ood2airo#2848,2018-03-24,https://github.com/libgdx/libgdx/issues/4677,,
1.89169E+17,srasu#0042,2018-03-24,It's on my github actually.,,
1.89169E+17,srasu#0042,2018-03-24,One thing I need to fix though is the fact that it requires a modified version of contrib imports,,
1.89169E+17,srasu#0042,2018-03-24,And I was only able to put it on clojars as a snapshot.,,
1.89169E+17,srasu#0042,2018-03-24,I have not figured out getting a full thing on clojars yet,,
1.32473E+17,Ood2airo#2848,2018-03-24,"Could you provide a link to the repo?

https://screenshotscdn.firefoxusercontent.com/images/60a8f314-4a5f-48a2-94ee-0796f564a36e.png",,
1.89169E+17,srasu#0042,2018-03-24,"Oh, sorry, sure.",,
1.89169E+17,srasu#0042,2018-03-24,https://github.com/IGJoshua/handmade-clojure,,
1.32473E+17,Ood2airo#2848,2018-03-24,"Thanks, I'll have a look!",,
1.89169E+17,srasu#0042,2018-03-25,"Well, updated the test suites for discljord. I think they're a lot more manageable now, and the connections one no longer takes like 10 seconds to run. Got the times down a lot because I was doing too much sleeping for the connections. Got the one in bots-test to be conformant to the updated api etc. So I'm feeling better about my tests now.",,👍 (2)
1.02464E+17,Suro#1920,2018-03-26,Anybody writing a SAAS in Clojure? How are you handling multi-tenancy? What libraries do you use?,,
1.02464E+17,Suro#1920,2018-03-26,There doesn't seem to be any open source samples of Clojure multi-tenancy.,,
1.89169E+17,srasu#0042,2018-03-26,Saas?,,
1.30231E+17,sarna#3904,2018-03-26,software as a service,,
1.89169E+17,srasu#0042,2018-03-26,"ah, okay.",,
1.89169E+17,srasu#0042,2018-03-26,Seems like it wouldn't be too hard. Just start building up state per-tenant in go blocks. The cost of any given user will be pretty damn low.,,👍 (1)
1.02464E+17,Suro#1920,2018-03-27,Maybe my problem is making my first clojure project a SAAS instead of something simpler...,,
1.02464E+17,Suro#1920,2018-03-27,"It's just hard to justify learning clojure when I can be up and running with multitenancy in a day with Elixir/Phoenix, .NET Core, or Python / Django",,
1.89169E+17,srasu#0042,2018-03-27,I mean it's a bit much to try any new language on a project that big if you don't have experience with it.,,
1.89169E+17,srasu#0042,2018-03-27,"I'd be _far_ more comfortable taking up a large project with Clojure than Python, but that's just because I have more experience with Clojure.
Clojure has a lot of really cool features, some of which are very difficult or impossible to replicate in most other languages, so if you want to benefit from them, I'd fully recommend starting with something smaller. For example, my first project with Clojure was a graphical version of the Game of Life using seesaw. That was my first real project with it. Took probably 2 days or so between classes.
Since then I've moved on to far more advanced projects, like an OpenGL rendering engine, and a partially-complete discord api for clojure. So I'd highly recommend doing something like that instead in your free time, rather than going for something so large immediately.",,
2.16295E+17,HactarCE#5314,2018-03-27,GoL sounds fun... I'll keep that in the back of my mind for the next time I'm looking for a small project,,
1.89169E+17,srasu#0042,2018-03-27,I enjoyed it. I did something kind of dumb with it though. I'd just figured out how transducers work so I expressed the logic of a generation as one. It turns out transducers add a lot of complexity when you only have one step.,,
1.02464E+17,Suro#1920,2018-03-28,@srasu does your uni teach clojure / lisp?,,
1.89169E+17,srasu#0042,2018-03-28,"No, unfortunately not. I took it up on the side during other classes that weren't particularly challenging for me because of my experience.
Even if it did though, I'd be in the wrong degree program to get it. I'm in game development.",,
1.89169E+17,srasu#0042,2018-03-28,"Gah, this is really frustrating. @Quixoticelixer would you be willing to take a peek at connection.clj?
I ran into an error today that I'm stumped on. The stability of connections with discord servers is really low, they're having disconnects all the time. I just tried to make sure that the bot would try to reconnect when it's passed a 1001 stop code so that would hopefully fix some things, and it gave me some odd things today when I used it. Take a look at this segment of the log:
```text
Connected!
Sending connection packet. Resume: nil
Connection closed. code: 1006
message: WebSocket Read EOF
Read an EOF, reconnecting.
Causes for reconnect: (End of file)
Attempting resume? true
Opening socket during reconnect
Connected!
Sending connection packet. Resume: true
Connection closed. code: 1001
message: Shutdown
Stop code 1001, reconnecting
Causes for reconnect: (Error 1001)
Attempting resume? true
Causes for reconnect: (Invalid session)
Attempting resume? false
Opening socket during reconnect
Opening socket during reconnect
Connected!
Sending connection packet. Resume: false
Connected!
Sending connection packet. Resume: true
Connection closed. code: 4005
message: Already authenticated.
Closing message proc
...
```
Any idea why it would do two reconnects like that?",,
1.57759E+17,Quixoticelixer#6239,2018-03-28,hm,,
1.57759E+17,Quixoticelixer#6239,2018-03-28,not really,,
1.89169E+17,srasu#0042,2018-03-28,I'm thinking the only way it could happen is if it received the invalid session packet and then disconnected before the function could send the reconnect message. So it seems like the invalid session is somehow triggering multiple runs.,,
1.57759E+17,Quixoticelixer#6239,2018-03-28,one thing to be careful of is make sure that you are not running two instances of the bot,,
1.57759E+17,Quixoticelixer#6239,2018-03-28,that can be very confusing,,
1.89169E+17,srasu#0042,2018-03-28,"well, actually, my tests are throwing a fit. Apparently I didn't notice. Let me see if this is the same issue.",,
1.89169E+17,srasu#0042,2018-03-28,"It is, in fact.",,
1.89169E+17,srasu#0042,2018-03-28,Looks like it was an issue with the 1001 stop code,,
1.89169E+17,srasu#0042,2018-03-28,"I'm trying to get it to reconnect if the 1001 code is generated by discord's servers, but not reconnect if it's generated by my tests or my own disconnect messages.",,
1.89169E+17,srasu#0042,2018-03-28,"I feel like maybe this whole thing needs to be calmed down a bit, and I just need to have it set up as an agent so that connections and disconnections can be handled with those semantics, and that way it would mean that I can tell what state I'm in. But that doesn't seem to work quite right either in my head.",,
1.89169E+17,srasu#0042,2018-03-28,"Just made a new branch, ""reconnects"" which I'll be using to experiment more with figuring out how to make connections with discord more stable.",,
1.30231E+17,sarna#3904,2018-04-02,@srasu what's the current state of discljord?,,
1.30231E+17,sarna#3904,2018-04-02,does it work? does it do things?? does it NPE into oblivion three milliseconds after you start it???,,
1.89169E+17,srasu#0042,2018-04-02,"It works pretty darn well if i do say so myself, but there are some issues. Specifically it sometimes disconnects and doesn't reconnect like it should.",,
1.30231E+17,sarna#3904,2018-04-02,👀 oh my,,
1.30231E+17,sarna#3904,2018-04-02,can I use it or will you crucify me,,
1.89169E+17,srasu#0042,2018-04-02,feel free,,
1.89169E+17,srasu#0042,2018-04-02,"I'm currently using it for a bot that's being used on two servers, so I'd love to have more eyes on it.",,
1.89169E+17,srasu#0042,2018-04-02,"If you have anything to add to it too, feel free to fork it and make a pull request.",,
1.30231E+17,sarna#3904,2018-04-02,alright nice 👍,,
1.89169E+17,srasu#0042,2018-04-02,"If you need examples of how to make a bot, check the examples.repl-bot and examples.basic-bot namespaces.",,
1.89169E+17,srasu#0042,2018-04-02,They both have fully functioning bots associated with them.,,
1.30231E+17,sarna#3904,2018-04-02,alrighty :^),,
1.30231E+17,sarna#3904,2018-04-02,do you plan on adding music support?,,
1.89169E+17,srasu#0042,2018-04-02,"Eventually I'll probably add voice support, yes. But that's not in the cards at least until I get full coverage of the api.",,
1.30231E+17,sarna#3904,2018-04-02,nice!,,
1.89169E+17,srasu#0042,2018-04-04,"Oh, I feel like an idiot. I should have something in the bot's state that's a ""should close"" that's set to false, and is checked when seeing if a reconnect is needed. That way I can have the bot constantly be trying to reconnect when dealing with discord, but at the same time will be able to do a clean disconnect for tests etc.",,
1.89169E+17,srasu#0042,2018-04-04,Then I just have to make it so that all the connects and disconnects are handled in one logical thread maybe. That way it can be synchronous and prevent having to deal with multiple simultaneous attempts to reconnect.,,
1.30231E+17,sarna#3904,2018-04-04,oo sweet 👀,,
1.23962E+17,屈才#4590,2018-04-04,"Hey guys, I have some fucking confusion going on right now",,
1.23962E+17,屈才#4590,2018-04-04,"```
 :body
 #object[org.eclipse.jetty.server.HttpInputOverHTTP 0x6d270d2e ""HttpInputOverHTTP@6d270d2e""]
```",,
1.23962E+17,屈才#4590,2018-04-04,"For some reason, the :body of all my routes is HttpInputOverHTTP",,
1.23962E+17,屈才#4590,2018-04-04,"```clojure
(defn wrap-middleware [handler]
  (-> handler
      (wrap-routes wrap-params)
      (wrap-routes wrap-keyword-params)
      (wrap-routes wrap-json-body)
      (wrap-routes wrap-json-response)
      (wrap-routes wrap-defaults (assoc-in site-defaults [:security :anti-forgery] false))
      (wrap-routes wrap-user)
      wrap-exceptions
      wrap-reload))
```",,
1.23962E+17,屈才#4590,2018-04-04,My middleware looks like this,,
1.23962E+17,屈才#4590,2018-04-04,wrap-user does nothing except print the request for now,,
1.23962E+17,屈才#4590,2018-04-04,The rest come from ring.middleware.*,,
1.23962E+17,屈才#4590,2018-04-04,I've been scratching my head for an hour,,
1.23962E+17,屈才#4590,2018-04-04,"I'm making my request like this
`curl -X POST http://localhost:3000/lol -d x=y`",,
3.15294E+17,Odie#2665,2018-04-05,@屈才  Looks like `(slurp (:body request))` should get you the content of the request.,,
3.15294E+17,Odie#2665,2018-04-05,"Found a short discussion here:
https://groups.google.com/forum/#!topic/clojure/1nmrmdHNYQo",,
1.23962E+17,屈才#4590,2018-04-05,Returns nil :/,,
1.23962E+17,屈才#4590,2018-04-05,tried that,,
3.15294E+17,Odie#2665,2018-04-05,Returns nil? o_O,,
1.23962E+17,屈才#4590,2018-04-05,Yup,,
3.15294E+17,Odie#2665,2018-04-05,Well~ is the content of the body some binary data?,,
1.23962E+17,屈才#4590,2018-04-05,Should be a string,,
3.15294E+17,Odie#2665,2018-04-05,Do you want to try to just read some bytes out and see what the content looks like?,,
1.23962E+17,屈才#4590,2018-04-05,How?,,
3.15294E+17,Odie#2665,2018-04-05,http://download.eclipse.org/jetty/stable-9/apidocs/org/eclipse/jetty/server/HttpInput.html#read-byte:A-int-int-,,
3.15294E+17,Odie#2665,2018-04-05,"also looks like
http://download.eclipse.org/jetty/stable-9/apidocs/org/eclipse/jetty/server/HttpInput.html#nextContent--
would give you an object that has a ByteBuffer you can examine",,
1.23962E+17,屈才#4590,2018-04-05,Read gives a nullpointer,,
1.23962E+17,屈才#4590,2018-04-05,Same for nextContent,,
3.15294E+17,Odie#2665,2018-04-05,can you share the code on github?,,
1.23962E+17,屈才#4590,2018-04-05,"Yeah, will tomorrow",,
1.23962E+17,屈才#4590,2018-04-06,Never put it on git,,
1.23962E+17,屈才#4590,2018-04-06,made a new project just to test,,
1.23962E+17,屈才#4590,2018-04-06,Adding the wrap-json-body middleware is what does it,,
1.23962E+17,屈才#4590,2018-04-06,but why!?!?,,
1.23962E+17,屈才#4590,2018-04-06,Without fail,,
1.23962E+17,屈才#4590,2018-04-06,"if I post to a route wrapped with wrap-json-body, body is always
```

 :body
 #object[org.eclipse.jetty.server.HttpInputOverHTTP 0x5dd0b40d ""HttpInputOverHTTP@5dd0b40d""],

```",,
1.23962E+17,屈才#4590,2018-04-06,any ideas?,,
3.15294E+17,Odie#2665,2018-04-07,"Could be that wrap-json-body has already read from that HttpInputOverHTTP object. By the time you get a hold of it in the handler, the input stream has already been exhausted so you can't read anything further out from it.",,
1.30231E+17,sarna#3904,2018-04-11,do you guys use lein or rather boot?,,
1.89169E+17,srasu#0042,2018-04-11,"I use lein for all my projects so far, but I want to learn boot for some more complex projects.",,
2.16295E+17,HactarCE#5314,2018-04-11,"I've used Boot once, and it takes a little while just to get going, but I think it's worth it.",,
2.16295E+17,HactarCE#5314,2018-04-11,"There also isn't a ton of boilerplate that can't be modified in useful ways, which is nice.",,
1.30231E+17,sarna#3904,2018-04-11,lein generates *a lot* of stuff,,
1.30231E+17,sarna#3904,2018-04-11,boot seems to be more lightweight,,
1.30231E+17,sarna#3904,2018-04-11,but uh configuring everything by hand 😩,,
2.16295E+17,HactarCE#5314,2018-04-11,Eh don't worry,,
2.16295E+17,HactarCE#5314,2018-04-11,"It does take an hour or two the first time, but they have guides",,
1.30231E+17,sarna#3904,2018-04-11,yeah I've used it for small projects,,
1.30231E+17,sarna#3904,2018-04-11,namely advent of code,,
1.30231E+17,sarna#3904,2018-04-11,it was pretty nice,,
1.89169E+17,srasu#0042,2018-04-11,Main thing I personally want to use it for is electron apps.,,
1.89169E+17,srasu#0042,2018-04-11,I've never had luck with the lein templates to do it,,
1.30231E+17,sarna#3904,2018-04-11,can you use cljs in electron? would be sweet,,
2.16295E+17,HactarCE#5314,2018-04-11,I concur. I've got a project in my backlog for the summer that would rely on CLJS + Electron.,,
1.89169E+17,srasu#0042,2018-04-11,"Yes. The main lein template for it is descjop, but I haven't had much luck with it.",,
1.89169E+17,srasu#0042,2018-04-11,Which is why I want to use boot.,,
1.89169E+17,srasu#0042,2018-04-11,The main problem I'm going to have with it probably is how to run the main thread in clj since it's normally c++ i think. Unless it's normally node with c++ interoperability.,,
1.23962E+17,屈才#4590,2018-04-12,When there's an error in my code a new repl buffer is opened along with the cider-error buffer,,
1.23962E+17,屈才#4590,2018-04-12,"I'm ok with the cider-error buffer, but the new repl ends up just making a fibonacci sequence of unreadable repl windows that I hate",,
1.23962E+17,屈才#4590,2018-04-12,any way to disable?,,
3.15294E+17,Odie#2665,2018-04-12,that's strange. haven't encountered that before.,,
1.85461E+17,Armic#5115,2018-04-19,Is the slack community preferred over the discord community?,,
1.89169E+17,srasu#0042,2018-04-19,"It's a lot more active, that's for sure.",,
1.89169E+17,srasu#0042,2018-04-19,But it's easier to get your questions lost since it is more active.,,
2.98148E+17,lepistane#2482,2018-04-22,i like active discoud has become,,
2.98148E+17,lepistane#2482,2018-04-22,how*,,
1.89169E+17,srasu#0042,2018-04-22,"Yeah, it's definitely more active than it used to be.",,
2.98148E+17,lepistane#2482,2018-04-23,more ways we communicate the better,,
1.30231E+17,sarna#3904,2018-04-23,do you guys like laziness?,,
1.30231E+17,sarna#3904,2018-04-23,"I mean yeah infinite ranges and stuff, but is it worth it 🤔",,
3.15294E+17,Odie#2665,2018-04-23,worth what?,,
3.15294E+17,Odie#2665,2018-04-23,"the sequence is ""cached"" as it's realized, right?",,
1.30231E+17,sarna#3904,2018-04-23,worth unpredictability,,
3.15294E+17,Odie#2665,2018-04-23,"as in, you're not sure when it's actually realized/computed?",,
1.30231E+17,sarna#3904,2018-04-23,yeah,,
1.30231E+17,sarna#3904,2018-04-23,and stuff can blow up,,
3.15294E+17,Odie#2665,2018-04-23,I think it's *mostly* fine? it rarely blows up... but it definitely can be harder to figure out *why* when it does...,,
1.30231E+17,sarna#3904,2018-04-23,"I mean yeah, it's fine when it crashes and you can easily find out why - it's problematic when you *don't* know why",,
3.15294E+17,Odie#2665,2018-04-23,right,,
3.15294E+17,Odie#2665,2018-04-23,keeping the functions pure helps quite a bit... but it can really be a head scratcher if things break...,,
3.15294E+17,Odie#2665,2018-04-23,I do like the idea of being able to setup some very large computation without actually having to run it though.,,
3.15294E+17,Odie#2665,2018-04-23,"it sometimes makes clojure seem like magic. ""What? Cranking through 10k records too almost no time?""",,
3.15294E+17,Odie#2665,2018-04-23,It sounds like you don't really like it? Did you run into some problems with it?,,
1.38235E+17,I Al Istannen#1564,2018-04-23,Java streams are lazy too,,
1.38235E+17,I Al Istannen#1564,2018-04-23,But IDEA has a nice debugger for them by now,,
1.38235E+17,I Al Istannen#1564,2018-04-23,Not sure how clojure deals with that,,
1.38235E+17,I Al Istannen#1564,2018-04-23,But having a stacktrace in a completely unrelated path of the application because it was only realized now is a nightmare most of the time,,
3.15294E+17,Odie#2665,2018-04-23,do you frequently run into these types of issues in clojure?,,
1.30231E+17,sarna#3904,2018-04-23,"> It sounds like you don't really like it? Did you run into some problems with it?
in clojure? mostly I don't like how I can't print stuff because it's a lazy seq",,
3.15294E+17,Odie#2665,2018-04-23,mmm? why not? does `println` or `pprint` not work on them for some reason?,,
1.30231E+17,sarna#3904,2018-04-23,it doesn't,,
3.15294E+17,Odie#2665,2018-04-23,do you mind posting a short example?,,
1.30231E+17,sarna#3904,2018-04-23,https://repl.it/repls/MediumorchidLightcyanDiscussions,,
3.15294E+17,Odie#2665,2018-04-23,https://repl.it/repls/BuoyantParallelCodes,,
3.15294E+17,Odie#2665,2018-04-23,just throw the sequence at `println` and it works fine?,,
3.15294E+17,Odie#2665,2018-04-23,"also, cider has always printed the contents of the lazy sequences",,
3.15294E+17,Odie#2665,2018-04-23,I think cider has only recently started limiting the number of items in the lazy sequences it prints?,,
1.38235E+17,I Al Istannen#1564,2018-04-23,"```clojure
(doseq [x (str (map inc (range 10)))] (println x))
```
You would do that to print it, no? @sarna",,
1.38235E+17,I Al Istannen#1564,2018-04-23,or do you mean something different?,,
3.15294E+17,Odie#2665,2018-04-23,"```(println (map inc (range 10)))```
should be enough",,
1.38235E+17,I Al Istannen#1564,2018-04-23,,https://cdn.discordapp.com/attachments/315388260987830272/437999884067667968/unknown.png,
1.30231E+17,sarna#3904,2018-04-23,yeah I know how to print that particular example 👀 you've wanted a small example 👀 👀,,
1.38235E+17,I Al Istannen#1564,2018-04-23,that is due to `str` probably in your example,,
1.30231E+17,sarna#3904,2018-04-23,yeah,,
1.38235E+17,I Al Istannen#1564,2018-04-23,println handles it just fine,,
3.15294E+17,Odie#2665,2018-04-23,okay~ well~ just trying to figure out what kind of problem you're running into... because repls and println can handle lazy seqs without issues...,,
1.30231E+17,sarna#3904,2018-04-23,"btw, @I Al Istannen, your example:",https://cdn.discordapp.com/attachments/315388260987830272/438000354291089437/unknown.png,
1.30231E+17,sarna#3904,2018-04-23,:D,,
1.38235E+17,I Al Istannen#1564,2018-04-23,huh,,
1.38235E+17,I Al Istannen#1564,2018-04-23,oh right,,
1.38235E+17,I Al Istannen#1564,2018-04-23,it prints the string,,
1.38235E+17,I Al Istannen#1564,2018-04-23,lol,,
1.30231E+17,sarna#3904,2018-04-23,yup,,
1.38235E+17,I Al Istannen#1564,2018-04-23,Ah well 😄,,
1.38235E+17,I Al Istannen#1564,2018-04-23,"But yea, what Odie said",,
1.38235E+17,I Al Istannen#1564,2018-04-23,The problem is not quite clear,,
1.30231E+17,sarna#3904,2018-04-23,🤷 it's not that bad,,
1.89169E+17,srasu#0042,2018-04-23,Laziness is really useful when you're trying to deal with large datasets and aren't working with side effects.,,
1.89169E+17,srasu#0042,2018-04-23,Laziness being the default can be annoying when you're trying to map with side effects and the repl realizes them and you forget to put a `doall` into your code for it. XD,,
3.15294E+17,Odie#2665,2018-04-23,should really be doing a `doseq` to perform things with side effects though?,,
1.38235E+17,I Al Istannen#1564,2018-04-23,How much slower are lazy streams?,,
1.38235E+17,I Al Istannen#1564,2018-04-23,As from my understanding it always unwraps a few elements from the head along the chain,,
1.38235E+17,I Al Istannen#1564,2018-04-23,then stores them,,
1.38235E+17,I Al Istannen#1564,2018-04-23,and then goes on with passing them to the caller,,
1.38235E+17,I Al Istannen#1564,2018-04-23,probably negligible?,,
1.89169E+17,srasu#0042,2018-04-23,"I mean yes, doing doseq is better for side effects, but it's also more verbose.",,
1.89169E+17,srasu#0042,2018-04-23,I often use a mapv when I remember,,
3.15294E+17,Odie#2665,2018-04-23,"well, lazy seqs definitely has its performance penalties... kind of depends on how ""performance critical"" a piece of code is...",,
3.15294E+17,Odie#2665,2018-04-23,"but then again, we're usually working with persistent data structures that are already somewhat ""slower""...",,
3.15294E+17,Odie#2665,2018-04-23,it's just a tradeoff...,,
1.89169E+17,srasu#0042,2018-04-23,"This is also true, lazy seqs are not the most efficient things, and they also aren't as lazy as they might be in haskell. They tend to ""chunk"" instead of going in clean increments of one.",,
1.38235E+17,I Al Istannen#1564,2018-04-23,"Yea, I know",,
1.38235E+17,I Al Istannen#1564,2018-04-23,Which is nicer for performance probably,,
1.38235E+17,I Al Istannen#1564,2018-04-23,Just can be surprising,,
1.30231E+17,sarna#3904,2018-04-23,it can catch you off guard when you need 33 things and 64 are computed,,
1.89169E+17,srasu#0042,2018-04-23,"Yes, it is good for performance, reduces overhead of laziness, but it's still less performant than doing it all directly, however if you're working with huge data sets laziness is still better.",,
1.32473E+17,Ood2airo#2848,2018-04-23,"If you need 33 things to be computed, you should use e.g. promises. Trying to use lazy seqs for such kind of thing is plain wrong.",,
1.32473E+17,Ood2airo#2848,2018-04-23,*exactly 33 things,,
1.82016E+17,WhoNeedszZz#9017,2018-04-30,"Hey, folks. I'm writing a simple ReSTful API with Ring and have the basic CRUD operations implemented, but without authorization. I'd like to use Auth0 for authentication and have been going through their documentation for how to set it up. Unfortunately, there isn't any Clojure documentation so I have to look at another language's implemenation and figure out the process and use Clojure libraries to accomplish it. The thing is I don't know which Clojure libraries to use if they exist. A Ring middleware for Auth0 would be fantastic and I found one, but it seems to be incomplete. Where do I turn?",,
1.92897E+17,bbss#6837,2018-05-03,@WhoNeedszZz buddy and friend are libraries that come to mind.,,
1.92897E+17,bbss#6837,2018-05-03,https://github.com/walkable-server/realworld has a recent example usage of buddy,,
3.0535E+17,voltecrus#7692,2018-05-21,"A Map is a collection that maps keys to values. Two different map types are provided - hashed and sorted. Hash maps require keys that correctly support hashCode and equals. Sorted maps require keys that implement Comparable, or an instance of Comparator. Hash maps provide faster access (log32N hops) vs (logN hops), *but sorted maps are, well, sorted*.",,👌 (1)
3.0535E+17,voltecrus#7692,2018-05-21,Made me chuckle.,,
1.85535E+17,IamCarbonMan#1695,2018-06-08,"so, i'm somewhat new to both java and clojure. I'm writing an app",,
1.85535E+17,IamCarbonMan#1695,2018-06-08,"ehh, dangit, enter on this keyboard is right above period",,
1.85535E+17,IamCarbonMan#1695,2018-06-08,i'm writing an app to play music that learns your preferences,,
1.85535E+17,IamCarbonMan#1695,2018-06-08,"i have a loop that chooses the next song based on learned data, so basically that main loop is fine",,
1.85535E+17,IamCarbonMan#1695,2018-06-08,how can i have a separate thread/part of the code call methods on the class without breaking this loop?,,
1.85535E+17,IamCarbonMan#1695,2018-06-08,"commands are intercepted by tailing lines from a file, currently what i'm thinking is just recur the loop every second, checking if either the current file has finished playing (recur with next song) or if a command has been issued (exec command, update model, recur with next song)",,
1.85535E+17,IamCarbonMan#1695,2018-06-08,is there a more efficient way to do this?,,
1.89169E+17,srasu#0042,2018-06-09,Look into core.async,,
1.89169E+17,srasu#0042,2018-06-09,It's a good way to have multithreading with communication between the two,,
2.86991E+17,mandm4s#5333,2018-06-11,"I often see people who want to wrap something in a vector if it is not already one. Does anyone know if there is a core function that does this already? Something like the following works, but if it already exists in core I don't want to define it in a project and include it throughout each namespace. 
```
(fn [x] (if (vector? x) x [x])) 
```",,
2.98148E+17,lepistane#2482,2018-06-11,https://clojuredocs.org/clojure.core/vector,,
2.98148E+17,lepistane#2482,2018-06-11,what is your use case?,,
2.86991E+17,mandm4s#5333,2018-06-11,"right, so clojure.core/vector will put an element into a vector, but it will also put a vector inside of a vector. I'm wondering if there is a core function to only put 'x' in a vector if x itself is not a vector. 
```
(defn into-vector [x] (if (vector? x) x [x])

(into-vector 1) => [1] ;; 1 is not in a vector, so it wraps it in one. 
(into-vector [1]) => [1] ;; The input is already a vector, so it just returns it as is. 
```
Is there a built in function that accomplishes what into-vector does above? I don't have a specific use case right now, I've just seen this sort of thing being done in many places and wondering if there is a better way to do it.",,
2.98148E+17,lepistane#2482,2018-06-11,not that i know of,,
2.98148E+17,lepistane#2482,2018-06-11,"it's not a big deal if you make ur own function
that is already in clojure.core 😄",,
1.85535E+17,IamCarbonMan#1695,2018-06-21,Is there an efficient data structure i can use to store a single relationship between every combination of two items in a list?,,
1.85535E+17,IamCarbonMan#1695,2018-06-21,"basically, i have a list of say, 10 strings. currently i just combine the two strings and look that up in a map",,
1.85535E+17,IamCarbonMan#1695,2018-06-21,just wondering if there's a more efficient way,,
2.67464E+17,SlashDevSlashRandom#2112,2018-06-21,"efficient in space or time? for creation, insertion, lookup? can you provide a little more context?",,
1.85535E+17,IamCarbonMan#1695,2018-06-22,uhhh,,
1.85535E+17,IamCarbonMan#1695,2018-06-22,"time i guess? i expect to store up to 1000 items, so the possible permutations of 2 is like a millionish. space isn't a huge issue since each actual entry will just be an int",,
1.85535E+17,IamCarbonMan#1695,2018-06-22,what i want is fast lookups of each relationship using one of its members,,
1.85535E+17,IamCarbonMan#1695,2018-06-22,"for example, given

```
(def items [""a"" ""b"" ""c""])
(def relations {""ab"" 1 ""ac"" 2 ""ba"" 4 ""bc"" 0 ""ca"" 4 ""cb"" 1})
```",,
1.85535E+17,IamCarbonMan#1695,2018-06-22,i would have a function that filters `relations` to entries whose key starts with a and returns the second letter of whichever key corresponds to the highest value,,
1.85535E+17,IamCarbonMan#1695,2018-06-22,"so basically, making that lookup as fast as possible is the main optimization point",,
1.85535E+17,IamCarbonMan#1695,2018-06-22,"all of this is premature optimization, and you know how bad that is. but i'm away from my computer and figured i'd ask in case there's a way better way to do it",,
1.89169E+17,srasu#0042,2018-06-22,Hash map with sets of two items as keys,,
1.89169E+17,srasu#0042,2018-06-22,@IamCarbonMan,,
1.89169E+17,srasu#0042,2018-06-22,"Or if you want order to matter, then vectors",,
2.47434E+17,ninjacop#4248,2018-06-22,"I am trying to make a function (I'm going to call it ""go-to"") where it takes 1 parameter (a location in the game) and checks to see if you are 1) in that location and 2) if you aren't already in that location, a specific hash map key's value will change from the old location to the new location. I've tried to use let, update-in, assoc, assoc-in and  redefining the variable/parameter used... Is there something I'm missing?",,
4.56227E+17,Deleted User#0000,2018-06-22,@ninjacop do you have a code snippet? maybe you want to use an atom? and do swap! on the map?,,
2.47434E+17,ninjacop#4248,2018-06-22,I'm AFK atm and my code is a real mess atm; I'll try that though,,
4.56227E+17,Deleted User#0000,2018-06-22,@ninjacop dont worry about the mess. if you can just post a little bit of the code we can see what is going on.,,
2.47434E+17,ninjacop#4248,2018-06-22,Ok brb,,
1.89169E+17,srasu#0042,2018-06-22,"If you haven't been using Clojure long and are coming from Java, C#, etc., then maybe it's that hash maps can't be modified in place? If you modify the hash map but don't return and assign it back into the original place then it won't change. You'll just thrash the garbage collector since you'll make a new modified hash map and then lose it into the ether.",,
1.89169E+17,srasu#0042,2018-06-22,@ninjacop,,
2.47434E+17,ninjacop#4248,2018-06-22,"I'm coming from Common Lisp, and I used a lot of hash maps there and it worked and was reliable :p",,
2.47434E+17,ninjacop#4248,2018-06-22,"```clojure
(def house {:here? false})

(defn goto
    """"
    ;;Just for the sake of simplicity, the user will input ""house""
    ([x])
       (if (not (and (some #(= x) location) (= (get x :here?) false)))
           (let [x  'house] 
                (assoc x :here? true ))))

;;user> (goto house)
;;=> (:here? true)

;;user> house
;;=> (:here? false)
```",,
2.47434E+17,ninjacop#4248,2018-06-22,k,,
2.47434E+17,ninjacop#4248,2018-06-22,"This doesn't work, just giving an example of how it would be used",,
2.47434E+17,ninjacop#4248,2018-06-22,The comments at the end would show a successful run,,
4.56227E+17,Deleted User#0000,2018-06-22,yeah you'd probably want a state atom (def house (atom {:here? false})),,
4.56227E+17,Deleted User#0000,2018-06-22,and then swap! or reset!,,
1.02464E+17,Suro#1920,2018-06-22,I want to make a Clojure project but I don't want to reinvent the wheel does  anyone know a good Clojure starter project with authentication and maybe password reset built?,,
2.47434E+17,ninjacop#4248,2018-06-22,"@Deleted User are you defining that atom inside the function, or is that separate?",,
4.56227E+17,Deleted User#0000,2018-06-22,then you could do something like (swap! house assoc :here? true),,
4.56227E+17,Deleted User#0000,2018-06-22,outside the function. just like you have in snippet,,
2.47434E+17,ninjacop#4248,2018-06-22,Oh ok,,
4.56227E+17,Deleted User#0000,2018-06-22,well i'm guessing that's what you'd want to do,,
4.56227E+17,Deleted User#0000,2018-06-22,@Suro what kind of project are you wanting to make?,,
2.47434E+17,ninjacop#4248,2018-06-22,I was thinking about instead of `(swap! house {...}) ` do `(swap! x {...})` inside the function,,
2.47434E+17,ninjacop#4248,2018-06-22,Because there is multiple possible locations,,
4.56227E+17,Deleted User#0000,2018-06-22,if you want to replace the hash-map then you would use reset! instead of swap,,
4.56227E+17,Deleted User#0000,2018-06-22,one sec. let me look at it again,,
1.02464E+17,Suro#1920,2018-06-22,@Deleted User job board,,
1.02464E+17,Suro#1920,2018-06-22,so a really simple crud app,,
4.56227E+17,Deleted User#0000,2018-06-22,@Suro gotcha. take a look at luminus. i think it is an easy way to get started and it has profiles for common cases,,
4.56227E+17,Deleted User#0000,2018-06-22,@Suro http://www.luminusweb.net/docs/profiles.html,,
4.56227E+17,Deleted User#0000,2018-06-22,and a lot of those profiles(maybe all?) will come with a few basic examples,,
1.02464E+17,Suro#1920,2018-06-22,thanks,,
4.56227E+17,Deleted User#0000,2018-06-22,@Suro so you'll run something like lein new luminus mytestapp +postgres +swagger,,
4.56227E+17,Deleted User#0000,2018-06-22,but im not sure if the provided example is going to use clojure spec or schema,,
4.56227E+17,Deleted User#0000,2018-06-22,@ninjacop yeah i suppose you can do swap! x,,
2.47434E+17,ninjacop#4248,2018-06-22,Awesome,,
2.47434E+17,ninjacop#4248,2018-06-22,Ty for help?,,
2.47434E+17,ninjacop#4248,2018-06-22,!,,
4.56227E+17,Deleted User#0000,2018-06-22,but you might want to consider something like having a single hash map for player state,,
2.47434E+17,ninjacop#4248,2018-06-22,Sure,,
1.85535E+17,IamCarbonMan#1695,2018-07-01,i'm looking for a non-SQL embedded database with fulltext support. are there any good projects like that,,
2.98148E+17,lepistane#2482,2018-07-04,how do i make my web app https,,
2.98148E+17,lepistane#2482,2018-07-04,?,,
1.57759E+17,Quixoticelixer#6239,2018-07-04,are you using apache/nginx?,,
2.98148E+17,lepistane#2482,2018-07-04,for lcojure?,,
2.98148E+17,lepistane#2482,2018-07-04,imutant,,
1.57759E+17,Quixoticelixer#6239,2018-07-04,i just put my apps behind NGINX and use that to set up https,,
2.98148E+17,lepistane#2482,2018-07-05,i will look into that,,
4.56227E+17,Deleted User#0000,2018-07-05,@lepistane  apache or nginx would be very simple. but if you want to do ssl with immutant take a look at https://github.com/immutant/feature-demo . specifically the demo.web ns,,
2.98148E+17,lepistane#2482,2018-07-05,@Deleted User tnx,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,i am new to clojure,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,"coming from javascript where you can do promise.all, how should i go about it for clojure?",,
4.48827E+17,donderdag#4004,2018-07-07,"@![Wys] Juzi if you're working with JS promises, then you can simply do `(.all js/Promise array-of-promises)`",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,no im doing it from clojure,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,javascript promises are easy to understand but i don't get clojure async operations,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,"like, if i have two futures, how do i make them run concurrently then return their value together",,
4.48827E+17,donderdag#4004,2018-07-07,"when you `deref` a future, it blocks that thread. so you can just do `(map deref futures)`",,
4.48827E+17,donderdag#4004,2018-07-07,"```clj
=> (map deref [(future 1) (future 2)])
(1 2)```",,
4.48827E+17,donderdag#4004,2018-07-07,they're not like JS promises,,
4.48827E+17,donderdag#4004,2018-07-07,"if you _want_ JS-style promises in Clojure, you can use http://funcool.github.io/promesa/latest/",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,i have two futures that does (Thread/sleep 2000),,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,doing the map deref seems to do it concurrently?,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,doesnt future create a new thread for each task,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,im confused haha,,
4.48827E+17,donderdag#4004,2018-07-07,"`future` _does_ create a new thread, but you can do a blocking wait on the result of that future by `deref`ing it",,
4.48827E+17,donderdag#4004,2018-07-07,https://www.braveclojure.com/concurrency/ this talks about them (it's a good book for beginners),,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,`(map deref (future (Thread/sleep 2000)) (future (Thread/sleep 2000)))`,,
4.48827E+17,donderdag#4004,2018-07-07,"`map` takes collections as the other arguments, not futures",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,hmm,,
4.48827E+17,donderdag#4004,2018-07-07,it's like `Array#map` in JS,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,"my goal is simply to take two futures, each with thread/sleep, and run them concurrently",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,and im looking for the clojure idiom to do this,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,"it doesn't have to be futures, it can be promises (so maybe it waits for 2 seconds before delivering a value)",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,or even channels from core.async,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,`(map deref [(future (Thread/sleep 2000)) (future (Thread/sleep 2000))])`,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,there was a typo before,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,but u get the idea,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,i just want them to be deref'ed concurrently,,
4.48827E+17,donderdag#4004,2018-07-07,"yeah there's no way to asynchronously `deref` a future as far as i know (although you can set a timeout), you can put the whole `map` expression in another future if you want",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,ah,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,lemme try putting them in another future,,
4.48827E+17,donderdag#4004,2018-07-07,if you `deref` that future you'll still have to wait 4 seconds,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,🤔,,
4.48827E+17,donderdag#4004,2018-07-07,futures are designed to be used synchronously,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,if i want to download two webpages concurently,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,i would be using channels for that then?,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,it's just weird behavious i dont expect,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,that map does it concurrently,,
4.48827E+17,donderdag#4004,2018-07-07,"map does not do it concurrently, it does it synchronously",,
4.48827E+17,donderdag#4004,2018-07-07,which is how futures work,,
4.48827E+17,donderdag#4004,2018-07-07,`deref` blocks the current thread until the future is completed,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,ah,,
4.48827E+17,donderdag#4004,2018-07-07,"so that map expression will wait 2 seconds twice, rather than doing it in parallel",,
4.48827E+17,donderdag#4004,2018-07-07,mapping over a collection of futures is no different to mapping over a collection of strings,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,i see,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,then how do people do multiple concurrent tasks at once with clojure?,,
4.48827E+17,donderdag#4004,2018-07-07,"there's no one solution, there are different solutions for different use-cases",,
4.48827E+17,donderdag#4004,2018-07-07,"promesa is one way, but also core.async and manifold",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,im actually using manifold at the moment,,
4.48827E+17,donderdag#4004,2018-07-07,ah,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,at least they have callbacks so that's familiar,,
4.48827E+17,donderdag#4004,2018-07-07,"one sec, there's an article about the various approaches to concurrency",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,okay,,
4.48827E+17,donderdag#4004,2018-07-07,https://purelyfunctional.tv/guide/clojure-concurrency/,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,thanks,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,i'll take a look,,
4.48827E+17,donderdag#4004,2018-07-07,no worries,,
4.48827E+17,donderdag#4004,2018-07-07,https://clojure.org/about/state is also worth reading,,
1.89169E+17,srasu#0042,2018-07-07,"```clojure
(require '[clojure.core.async :as a])
(defn deref-async
  [fut]
  (a/go @fut))

(let [n 2]
  (map deref-async (take n (repeatedly #(future (Thread/sleep 2000))))))
```",,
1.89169E+17,srasu#0042,2018-07-07,@![Wys] Juzi,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,oh,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,deref-async,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,using go channels,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,lmao,,
1.89169E+17,srasu#0042,2018-07-07,"deref-async isn't a thing anywhere, but this actually does what you want. It even gives you a way to get values back out.",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,i guess,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,thanks,,
1.89169E+17,srasu#0042,2018-07-07,"Because deref-async will even return a channel, which if you do a take on the channel, it will block and wait for the return value.",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,🤔,,
1.89169E+17,srasu#0042,2018-07-07,So this map will return a sequence of channels which will each have a single item put onto them - the return value of the future.,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,but then when i call the values,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,wont that block ?,,
4.48827E+17,donderdag#4004,2018-07-07,"if you use `<!!` it will, but if you use `<!` or `take!` it will not",,
1.89169E+17,srasu#0042,2018-07-07,"yes, but the thing is, that'll wait till the individual task is done. It won't wait on all tasks. This solution will only wait 2000 milliseconds, it won't wait 4 seconds",,
1.89169E+17,srasu#0042,2018-07-07,and even `<!` conceptually use blocking. It's just parking which means it doesn't actually tie up a runtime thread.,,
4.48827E+17,donderdag#4004,2018-07-07,"right, but it can only be done within a go block, so it's effectively non-blocking",,
1.89169E+17,srasu#0042,2018-07-07,"So for example:
```clojure
(require '[clojure.core.async :as a])
(defn deref-async
  ""Takes a future and gets its result on a separate logical thread, and returns a channel on which the result will eventually be put""
  [fut]
  (a/go @fut))

(defn promise-all
  ""Takes a sequence of futures, and runs them asynchronously, returning a sequence of their values""
  [seq]
  (map <!! (map deref-async seq)))
```",,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,nice yeah kinda like this,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,i was looking at core async but there wasn't a lot of helpful examples,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,this makes things alot clearer,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,thanks,,
1.89169E+17,srasu#0042,2018-07-07,"yeah, most of the helpful examples I've found have been in open-source libraries that _use_ them. The rest I've learned from playing around in a repl.",,
1.89169E+17,srasu#0042,2018-07-07,no problem!,,
1.89169E+17,srasu#0042,2018-07-07,"Lol, part of me now wants to make a transducer that does this, just for the exercise",,
4.48827E+17,donderdag#4004,2018-07-07,https://www.udemy.com/communicating-sequential-processes-with-coreasync/ this is a good course on core.async; it's not free though,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,feelsbadman,,
4.48827E+17,donderdag#4004,2018-07-07,https://www.braveclojure.com/core-async/ this is free however,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,ye i saw that one,,
1.89169E+17,srasu#0042,2018-07-07,I just realized that the for I had in my last example was just another map. So I changed that for clarity.,,
4.48827E+17,donderdag#4004,2018-07-07,it should really be a `doall` + `map` since they're side-effects,,
4.48827E+17,donderdag#4004,2018-07-07,can't be `run!` or `doseq` since you need the return values,,
1.70416E+17,![Wys] Juzi#1035,2018-07-07,🤔,,
4.48827E+17,donderdag#4004,2018-07-07,https://stuartsierra.com/2015/08/25/clojure-donts-lazy-effects,,
4.48827E+17,donderdag#4004,2018-07-07,guess you could define a `map!` as `(comp doall map)`,,
2.47434E+17,ninjacop#4248,2018-07-08,"Hi guys, I'm trying to use penumbra, but I keep getting this error message `Cannot locate native library: macosx/liblwjgl.dylib` what do I do?",,
4.56227E+17,Deleted User#0000,2018-07-08,@ninjacop i havent used prenumbra but you probably need to install a native library,,
4.56227E+17,Deleted User#0000,2018-07-08,does liblwjgl exist in brew or ports?,,
2.47434E+17,ninjacop#4248,2018-07-08,"It has its own site, but when I download the library it comes straight in jar files",,
2.47434E+17,ninjacop#4248,2018-07-08,"No .pkg or anything, even for max",,
2.47434E+17,ninjacop#4248,2018-07-08,Mac,,
2.47434E+17,ninjacop#4248,2018-07-08,"I'll try brew, seems like the way to go",,
2.47434E+17,ninjacop#4248,2018-07-08,@Deleted User nothing on brew,,
4.56227E+17,Deleted User#0000,2018-07-10,@ninjacop you will probably have to install it manually. it looks like the library is a little old so you might have to try an older version of the native library if the current one doesnt work,,
2.47434E+17,ninjacop#4248,2018-07-10,Got ha,,
2.47434E+17,ninjacop#4248,2018-07-10,Gotcha,,
4.56227E+17,Deleted User#0000,2018-07-10,@ninjacop if you get really stuck let me know and I cant look a little deeper,,
4.56227E+17,Deleted User#0000,2018-07-10,im guessing this is it https://www.lwjgl.org/download . note that version 2 is available at the bottom if 3 doesnt work,,
2.47434E+17,ninjacop#4248,2018-07-10,"Sure, I checked out lwgjl 3, but it was just a bunch of .jar files",,
2.47434E+17,ninjacop#4248,2018-07-10,Idk where to put him,,
4.56227E+17,Deleted User#0000,2018-07-10,"@ninjacop i've never used prenumbra. but in the Natives.java file it looks like it cannot find that file
```
        String fullname = System.mapLibraryName(name);

        String path = ""native/""+sysName+""/"" + fullname;
        InputStream in = Thread.currentThread().getContextClassLoader().getResourceAsStream(path); ```",,
2.47434E+17,ninjacop#4248,2018-07-10,"Yeah, I was thinking about that but I couldn't find that snippet",,
4.56227E+17,Deleted User#0000,2018-07-10,do you have a sample project? i will take a look,,
4.56227E+17,Deleted User#0000,2018-07-10,@ninjacop i have no clue what prenumbra is expecting. it is pretty old but the older lwjgl (2.7.1  guessing this version was used as  the util was used elsewhere in project). the older one also contains  the  .jnilib files  native/macosx/liblqjgl.jnilib once extracted,,
4.56227E+17,Deleted User#0000,2018-07-10,https://sourceforge.net/projects/java-game-lib/files/Official%20Releases/,,
4.56227E+17,Deleted User#0000,2018-07-10,if it was me i would start there,,
4.56227E+17,Deleted User#0000,2018-07-10,but like i said it's old and couldnt find much on it,,
2.47434E+17,ninjacop#4248,2018-07-10,I have .jnilibs in both my project directory/target and penumbra :GWfroggyBlobWokeThink:,,
4.56227E+17,Deleted User#0000,2018-07-10,"it's looking here         ```String path = ""native/""+sysName+""/"" + fullname;```",,
1.89169E+17,srasu#0042,2018-07-20,"For those more experienced with spec, how would you go about making a spec that defines a square vector? I've gotten this far, but I can't figure out how I could make sure the count of each of the vectors is the same as the count of the outer one. At least without just making a custom function for it.
```clojure
(s/def ::tile (s/nilable #{:black :white}))
(s/def ::board (s/coll-of (s/coll-of ::tile :kind vector?)
                          :kind vector?))
```
I know I could do it like so, but it feels a little weird and doesn't give good error output if I call explain:
```clojure
(s/def ::tile (s/nilable #{:black :white}))

(defn board?
  [b]
  (and
   (vector? b)
   (every? vector? b)
   (let [size (count b)]
     (every? #(= (count %) size)
             b))
   (every?
    (partial s/valid? ::tile)
    (flatten b))))

(s/def ::board board?)
```",,
4.56227E+17,Deleted User#0000,2018-07-20,:thinkfox:,,
4.56227E+17,Deleted User#0000,2018-07-20,I'm not sure i understand to tell you the truth,,
4.56227E+17,Deleted User#0000,2018-07-20,I've used spec before so i can help with that,,
4.56227E+17,Deleted User#0000,2018-07-20,It sorta sounds like you just need a custom predicate and a custom generator,,
4.56227E+17,Deleted User#0000,2018-07-20,```(s/spec some-predicate? :gen (some-generator))```,,
4.56227E+17,Deleted User#0000,2018-07-20,https://clojuredocs.org/clojure.spec.alpha/spec,,
4.56227E+17,Deleted User#0000,2018-07-20,">that defines a square vector? 

What is a square vector?",,
4.56227E+17,Deleted User#0000,2018-07-20,If you could give me some example data i could probs get you something @srasu,,
4.56227E+17,Deleted User#0000,2018-07-20,"You might be able to use <https://github.com/jeaye/orchestra>

and its `:fn` to check the counts",,
1.89169E+17,srasu#0042,2018-07-20,"It's a vector of vectors, where the counts of the inner vectors match the count of the outer one. Like a 2d array with matching dimension sizes.",,
1.89169E+17,srasu#0042,2018-07-20,But I'll look into making something with a custom generator.,,
3.09474E+17,jshah#3301,2018-07-24,"Hi everyone! I'm looking for some help related to `compojure` and `ring`. I am trying to create a simple API which returns `JSON`.

I was able to achieve that with `(-> app-routes wrap-json-body wrap-json-response (wrap-defaults site-defaults))`. However, how can I enable cors? It's not clear to me where `(wrap-cors :access-control-allow-orign [#"".*""])` should go.",,
2.98148E+17,lepistane#2482,2018-07-24,try before `(wrap-defaults...`,,
2.98148E+17,lepistane#2482,2018-07-24,but after json response,,
3.09474E+17,jshah#3301,2018-07-24,So `(-> app-routes wrap-json-body wrap-json-response (wrap-cors ....) (wrap-defaults site-defaults))` @lepistane ? (Is it okay if I ping you?),,
2.98148E+17,lepistane#2482,2018-07-24,"it's ok, yeah try that",,
3.09474E+17,jshah#3301,2018-07-24,The header doesn't show in Postman.,,
2.98148E+17,lepistane#2482,2018-07-24,"i will be honest - i haven't used cord before

try putting it first

order of middleware is important",,
2.98148E+17,lepistane#2482,2018-07-24,try different combinations (sorry my brain is fried worked like 12h :D),,
3.09474E+17,jshah#3301,2018-07-24,The reason I'm doing this is because I'm basically trying to let a react frontend interact with this server.,,
3.09474E+17,jshah#3301,2018-07-24,"haha, no worries. I'll try different stuff.",,
3.09474E+17,jshah#3301,2018-07-24,The solution is here: https://stackoverflow.com/questions/51503910/how-to-use-cors-with-json-response-in-compojure/51504139#51504139,,
3.09474E+17,jshah#3301,2018-07-24,I had `:access-control-allow-headers` when I should have had `:access-control-allow-methods`.,,
2.98148E+17,lepistane#2482,2018-07-25,damn... nice that u linked answer tnx,,👍 (1)
1.89169E+17,srasu#0042,2018-07-25,"I want to try to put a top-level loop at a namespace so that as soon as you load it, it will start up a go-loop to take stuff off a channel used internally in the namespace. 
I'm guessing that's not something you're generally supposed to do outside an interpreted environment, so what's the recommended way to get that effect? Just make a function to init and an atom to store if it's started, and then if it's not started call it at the beginning of every function in the namespace?",,
1.40467E+17,Nanoic#8714,2018-07-26,Hello can anyone help me with getting started?,,
1.40467E+17,Nanoic#8714,2018-07-26,leinengen's terminal window closes immediately after opening.,,
3.09474E+17,jshah#3301,2018-07-26,@Nanoic What kind of OS are you running? Have you added lein to the path? Do you try to execute a command after which it closes?,,
1.70416E+17,![Wys] Juzi#1035,2018-07-26,If you're on windows,,
1.70416E+17,![Wys] Juzi#1035,2018-07-26,Run it from the console or powershell,,
1.70416E+17,![Wys] Juzi#1035,2018-07-26,It typically meas there's some errr,,
1.70416E+17,![Wys] Juzi#1035,2018-07-26,So it exits immediately,,
1.40467E+17,Nanoic#8714,2018-07-27,I don't understand how to run it,,
1.40467E+17,Nanoic#8714,2018-07-27,I cannot locate the program,,
4.51486E+17,Grant#5854,2018-07-27,What OS? Windows? Mac? Linux?,,
1.40467E+17,Nanoic#8714,2018-07-27,Windows 10,,
4.51486E+17,Grant#5854,2018-07-27,"Ok, so you downloaded the lein batch file from the leiningen website, where is the lein.bat file?",,
1.40467E+17,Nanoic#8714,2018-07-27,I found a program in the file path C:\Users\arich\.lein,,
1.40467E+17,Nanoic#8714,2018-07-27,C:\Users\arich\.lein\bin,,
1.40467E+17,Nanoic#8714,2018-07-27,When I attempt to run lein.bat the terminal opens temporarily but closes very quickly.,,
4.51486E+17,Grant#5854,2018-07-27,lein is a command line tool. It is not meant to be used as a standalone application,,
4.51486E+17,Grant#5854,2018-07-27,You will need to add the directory to your PATH and then exectute commands from powershell or cmd e.g. `lein compile`,,
1.40467E+17,Nanoic#8714,2018-07-27,?So put create a new environment variable named PATH with the filepath C:\Users\arich.lein\bin,,
1.40467E+17,Nanoic#8714,2018-07-27,What should the value for LEIN_JAR be?,,
4.51486E+17,Grant#5854,2018-07-27,"@srasu I think you are asking for something like this?:

uses core.async

```(def state (atom {:running? false}))

(defn init! [my-chan]
  (swap! state assoc :running? true)
  (thread (while true (do-something (<!! my-chan)))))
```

Although I would add some more logic if you would like to make the thread interruptable/terminateable",,
1.40467E+17,Nanoic#8714,2018-07-27,I'm just getting a clojure cannot compile error,,
4.51486E+17,Grant#5854,2018-07-27,No you already have a PATH environment variable,,
4.51486E+17,Grant#5854,2018-07-27,you just need to append `C:\Users\arich.lein\bin` to the end,,
4.51486E+17,Grant#5854,2018-07-27,Try running `lein self-install` after you have it on your path,,
1.40467E+17,Nanoic#8714,2018-07-27,C:\Users\arich\.lein\bin already exists. Delete and retry.,,
1.40467E+17,Nanoic#8714,2018-07-27,What do I do next?,,
1.40467E+17,Nanoic#8714,2018-07-27,I don't really know how to get clojure running,,
1.40467E+17,Nanoic#8714,2018-07-27,or even write the program,,
1.40467E+17,Nanoic#8714,2018-07-27,I've only done Java at university,,
4.51486E+17,Grant#5854,2018-07-27,Ok sure well this is a good place to start with lein: https://github.com/technomancy/leiningen/blob/master/doc/TUTORIAL.md,,
4.51486E+17,Grant#5854,2018-07-27,"To get started with clojure, this book (free ebook) is pretty great: https://www.braveclojure.com/clojure-for-the-brave-and-true/",,
1.40467E+17,Nanoic#8714,2018-07-27,I'm getting errors,,
1.40467E+17,Nanoic#8714,2018-07-27,Error: Could not find or load main class clojure.main,,
1.40467E+17,Nanoic#8714,2018-07-27,Am I right to be doing this from the CMD?,,
4.51486E+17,Grant#5854,2018-07-27,What command are you running?,,
1.40467E+17,Nanoic#8714,2018-07-27,lein new app clojure-noob,,
4.51486E+17,Grant#5854,2018-07-27,have you already done `lein self-install` and was it successful?,,
1.89169E+17,srasu#0042,2018-07-27,"@Grant I settled on something like that, but I initially wanted something that started on requiring the namespace",,
1.40467E+17,Nanoic#8714,2018-07-27,it says it already exists after lein self-install,,
1.40467E+17,Nanoic#8714,2018-07-27,delete and retry,,
1.40467E+17,Nanoic#8714,2018-07-27,I tried lein self-install and it was unsuccess,,
1.70416E+17,![Wys] Juzi#1035,2018-07-27,@Nanoic did u open my computer -> advanced properties,,
1.70416E+17,![Wys] Juzi#1035,2018-07-27,And add lein to path,,
1.70416E+17,![Wys] Juzi#1035,2018-07-27,Once you have done that,,
1.70416E+17,![Wys] Juzi#1035,2018-07-27,The first time u run lein repl it will auto download clojure,,
1.70416E+17,![Wys] Juzi#1035,2018-07-27,At least that's what I did when I ran it from windows,,
1.40467E+17,Nanoic#8714,2018-07-28,?,,
1.40467E+17,Nanoic#8714,2018-07-28,like this,https://cdn.discordapp.com/attachments/315388260987830272/472843074213511188/unknown.png,
1.40467E+17,Nanoic#8714,2018-07-28,Should the Lein_Java_CMD in the user variables be set to the JDK?,,
1.70416E+17,![Wys] Juzi#1035,2018-07-28,yeah,,
1.70416E+17,![Wys] Juzi#1035,2018-07-28,"iirc you just need java home to point properly, which you can verify by running java on the command line",,
1.40467E+17,Nanoic#8714,2018-07-28,I changed it to Java bin directory,,
1.40467E+17,Nanoic#8714,2018-07-28,"When I check java -version in cmd I get 'java' is not recognized as an internal or external command,
operable program or batch file.",,
1.70416E+17,![Wys] Juzi#1035,2018-07-28,add both java and lein to your path haha,,
1.70416E+17,![Wys] Juzi#1035,2018-07-28,use `;` to separate them,,
1.40467E+17,Nanoic#8714,2018-07-28,I'm having trouble adding the Java bin,,
1.40467E+17,Nanoic#8714,2018-07-28,unsure which one,,
1.40467E+17,Nanoic#8714,2018-07-28,JDK 9 or JRE 9?,,
3.34388E+17,gelsorocha#8619,2018-07-31,"hello there, i'm studying composure and trying to create a test that simulates a call to a post endpoint, but when i run lein test it calls my neo4j instance, is there a way to configure my db to use in memory db or something like this? the way that i wrote my function the connection is passed as param, but i don't know where and how i configure the test instance",,
3.34388E+17,gelsorocha#8619,2018-07-31,https://github.com/gerocha/clojure-login-test/blob/master/src/clojure_login_test/handler.clj#L7,,
3.30242E+17,MoonCheese#3714,2018-08-02,"Hi, I'm having some trouble understanding futures.
What I don't get is why I have to do a `(shutdown-agents)` at the end of my main function so that it stops",,
2.98148E+17,lepistane#2482,2018-08-02,i don't remember doing shutdown-agents inside main when  i used futures,,
2.98148E+17,lepistane#2482,2018-08-02,https://www.braveclojure.com/concurrency/,,
2.98148E+17,lepistane#2482,2018-08-02,this might be useful for you,,
1.89169E+17,srasu#0042,2018-08-02,"Working more and more with spec. Rich spoke of some of the amazing potential of spec, but didn't give examples of it fulfilling that potential, so I'm left clueless on how to make a function which takes a parameter that is a collection of any spec, and returns a value conforming to the same spec.",,
4.51486E+17,Grant#5854,2018-08-02,"```(defn my-func [x] (do-something x))

(s/def ::my-spec (s/or :name string? :id int?))

(s/fdef my-func
  :args (s/cat :x (s/coll-of ::my-spec))
  :ret (s/coll-of ::my-spec))```",,
4.51486E+17,Grant#5854,2018-08-02,or do you mean something else @srasu,,
1.89169E+17,srasu#0042,2018-08-02,"I mean where you don't know what spec they will conform to at compile time, only that the argument and return will conform to the same one. Like a type variable in haskell.",,
1.89169E+17,srasu#0042,2018-08-02,"```
(defn my-func [x _] (do-something x))

(s/fdef my-func
  :args (s/cat :x (s/coll-of any?) :spec s/spec)
  :ret any?
  :fn (s/and #(s/valid (:spec (:args %)) (:ret %))
             #(s/valid (s/coll-of (:spec (:args %))) (:args %))))
```",,
1.89169E+17,srasu#0042,2018-08-02,"Like this, but without having to pass the spec that the args conform to",,
1.89169E+17,srasu#0042,2018-08-02,I get the feeling there's no way to do this generically.,,
1.89169E+17,srasu#0042,2018-08-02,"I'm currently programming go for fun, and using spec as much as I can. I am making a ""square vector"" spec constructor that takes a spec and then ensures that the passed argument is a vector of vectors, all with the same length as the outer vector. All the elements of the sub-vectors must conform to a passed spec (in this case, `::tile`). I also have a generator that takes a spec that has a generator, and will generate such a vector.",,
1.89169E+17,srasu#0042,2018-08-02,"I'm trying to spec some functions that operate on boards of any type, without specifying which spec their elements have to contain. So for example I'm getting the element at a coordinate in the vector. I want spec to specify that the argument can be a board with any spec, and that the return type will also conform to that spec.",,
1.89169E+17,srasu#0042,2018-08-02,"```haskell
getBoard :: Board a -> Integer -> Integer -> a
```
I'm trying to express this in spec.",,
1.89169E+17,srasu#0042,2018-08-02,@Grant,,
3.30242E+17,MoonCheese#3714,2018-08-02,"@lepistane that's odd. When I run either:
```(future (Thread/sleep 1000) (println ""hello""))
@(future (Thread/sleep 1000) (println ""hello""))```
It will print `hello` then hang; lein will not quit.
It only quits when I add `(shutdown-agents)` afterwards",,
1.70416E+17,![Wys] Juzi#1035,2018-08-02,Has anyone gotten clojure to work along a old Java project?,,
2.98148E+17,lepistane#2482,2018-08-03,"@MoonCheese oh yeah i just ran simple project with futures and that does happen
that's true",,
3.30242E+17,MoonCheese#3714,2018-08-03,But why?,,
1.70416E+17,![Wys] Juzi#1035,2018-08-03,yes,,
4.51486E+17,Grant#5854,2018-08-03,"@srasu 
hmm that is a good question. I do not believe that the current version of spec has that functionality out  of the box.",,
4.48827E+17,donderdag#4004,2018-08-03,"@MoonCheese @lepistane

from https://clojure.org/reference/agents:

""Note that use of Agents starts a pool of non-daemon background threads that will prevent shutdown of the JVM. Use shutdown-agents to terminate these threads and allow shutdown.""

i suppose the same applies for Futures",,
4.48827E+17,donderdag#4004,2018-08-03,"```clj
=> (doc shutdown-agents)
-------------------------
clojure.core/shutdown-agents
([])
  Initiates a shutdown of the thread pools that back the agent
  system. Running actions will complete, but no new actions will be
  accepted```",,
4.48827E+17,donderdag#4004,2018-08-03,"if you look at the source for `future`, it does reuse the Agent system:

```clj
=> (source future)
(defmacro future
  ""Takes a body of expressions and yields a future object that will
  invoke the body in another thread, and will cache the result and
  return it on all subsequent calls to deref/@. If the computation has
  not yet finished, calls to deref/@ will block, unless the variant of
  deref with timeout is used. See also - realized?.""
  {:added ""1.1""}
  [& body] `(future-call (^{:once true} fn* [] ~@body)))
nil
=> (source future-call)
(defn future-call
  ""Takes a function of no args and yields a future object that will
  invoke the function in another thread, and will cache the result and
  return it on all subsequent calls to deref/@. If the computation has
  not yet finished, calls to deref/@ will block, unless the variant
  of deref with timeout is used. See also - realized?.""
  {:added ""1.1""
   :static true}
  [f]
  (let [f (binding-conveyor-fn f)
        fut (.submit clojure.lang.Agent/soloExecutor ^Callable f)]
    (reify
     clojure.lang.IDeref
     (deref [_] (deref-future fut))
     clojure.lang.IBlockingDeref
     (deref
      [_ timeout-ms timeout-val]
      (deref-future fut timeout-ms timeout-val))
     clojure.lang.IPending
     (isRealized [_] (.isDone fut))
     java.util.concurrent.Future
      (get [_] (.get fut))
      (get [_ timeout unit] (.get fut timeout unit))
      (isCancelled [_] (.isCancelled fut))
      (isDone [_] (.isDone fut))
      (cancel [_ interrupt?] (.cancel fut interrupt?)))))
nil```",,👍 (2)
1.70416E+17,![Wys] Juzi#1035,2018-08-09,Arcadia for unity works!,,
1.89169E+17,srasu#0042,2018-08-09,Yes it does. I really like it. Although I personally am far more likely to write my own engine with Vulkan.,,
3.46868E+17,djeis#0042,2018-08-10,"How goes the editor tooling with that project? I keep meaning to come back and play with it, but I’ve yet to really feel at home with the workflow 😅",,
1.89169E+17,srasu#0042,2018-08-10,I mean Arcadia's tooling is pretty good if you use sublime text or emacs.,,
1.89169E+17,srasu#0042,2018-08-10,"They've got a repl, and it's overall pretty good.",,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,Hmm I think it works pretty nice,,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,Tho there are stuff u have to figure out,,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,Like using the repl to set up the game,,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,And also how it's easier to set up c sharp scripts just to hold data,,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,But overall it's easier to think about the game,,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,When it receives a state and displays a state,,
1.89169E+17,srasu#0042,2018-08-10,I mean when I did stuff with Arcadia I didn't use c# at all. I'd think the only reason to would be to allow you to store _mutable_ data.,,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,🤔,,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,has anyone got a working clojure tcp server example?,,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,trying to make one work with .Net networkstreams,,
3.46868E+17,djeis#0042,2018-08-10,"@srasu 
Last I checked I basically just got inferior-clojure-mode integration tho, which while definitely usable is well below the level of integration where I really feel like I can stretch my legs and play 😅",,
3.46868E+17,djeis#0042,2018-08-10,Unfortunately I suspect that unity isn’t really being helpful in that space tho.,,
3.46868E+17,djeis#0042,2018-08-10,Actually it looks like inf-clojure itself has gotten clever since I last played with it...,,
3.46868E+17,djeis#0042,2018-08-10,Time to update my config 😛,,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,🤔 at least i kinda got websockets working,,
1.70416E+17,![Wys] Juzi#1035,2018-08-10,instead of using tcp,,
1.89169E+17,srasu#0042,2018-08-15,"I'm thinking of trying to implement a lisp-y wrapper around bullet, and something that's occurred to me is that if I want to have clojure data represent the physics objects, then I need to store the id's of objects and similar information about them that's needed for the actual physics representation, but at the same time I want all that data to be transcient. It shouldn't be written to file if I try to print the data, and I don't want it to be in the main return of the function.
Since I want this to be an apparently pure function, I decided to investigate some things that I could do in order to get it to work properly.
The obvious first thought is that for each time you call the update function, it should create a new physics world in which to simulate everything, and then it would return pure clojure data representing the output of the world. While this could work in theory, I can't imagine that it would be fast to create a world, create tons of physics primitives, run the simulation for one time step, and then delete it all. So I've started thinking about how I could cache information.",,
1.89169E+17,srasu#0042,2018-08-15,"I was thinking that I could associate the kind of information I need (such as ID's of objects and the world etc) as metadata on the clojure data which represents the objects. That means that whenever you pass in a bit of clojure data it would look to see if there is a world that's been created for that data, and then look through each object and if it has an existing object in the physics world just update it, and if it doesn't, create a new one. Next it would do a physics step, and finally update the clojure data with the new metadata and data.
This way it should act like a pure function, in that it will appear as if it is doing the total amount of work required, but instead it will in fact be caching a lot of information to increase the speed.
Now, as I look at this solution I see one major issue. How do I account for releasing this data? When the garbage collector runs it may eventually eat the data of a physics world, but that world won't have been deleted since it would be foreign memory. I might be able to solve this with weak pointers and a spun off thread, but that feels a little gross to me.",,
1.70416E+17,![Wys] Juzi#1035,2018-08-15,i believe you can use https://clojuredocs.org/clojure.core/transient,,
1.89169E+17,srasu#0042,2018-08-15,"Yes, but the issue that I feel like I'd run into is the inability to call some kind of destructor when the object is garbage collected.",,
4.48827E+17,donderdag#4004,2018-08-16,@srasu could you use https://github.com/clojure/core.memoize or https://github.com/clojure/core.cache ?,,
2.18602E+17,lsenjov#4288,2018-08-16,You shouldn't have to manually call the gc (although you can if you really want with a system call).,,
2.18602E+17,lsenjov#4288,2018-08-16,"The gc will be automatically called many times through the process, as each java object ""garden"" isn't a monolith by design",,
2.18602E+17,lsenjov#4288,2018-08-16,"Oh right, invalidating your cache is what you're looking for",,
2.18602E+17,lsenjov#4288,2018-08-16,"Core.cache may not be a bad choice, it has a custom limit on how many objects to store",,
2.18602E+17,lsenjov#4288,2018-08-16,"Or are you attempting to store everything in play with the cache, then remove when it's destroyed?",,
1.70416E+17,![Wys] Juzi#1035,2018-08-16,lol why not just try it out,,
1.70416E+17,![Wys] Juzi#1035,2018-08-16,transients should handle most of your performance concerns,,
3.46868E+17,djeis#0042,2018-08-16,"Bullet’s a native lib, right? So the trouble is making sure the right native `free` call happens when the data isn’t needed up in Clojure land anymore...",,
3.46868E+17,djeis#0042,2018-08-16,"The trouble is the data that needs to be cached isn’t Clojure data, and copying to and from native memory every frame sounds like it’d never scale (to me at least).",,
4.48827E+17,donderdag#4004,2018-08-16,"there *is* a Java port of bullet, it appears",,
1.89169E+17,srasu#0042,2018-08-16,But it's out of date and unmaintained,,
1.89169E+17,srasu#0042,2018-08-16,"I mean what I'm really looking for is finalizers, but those aren't reliable because they aren't called if the jvm shuts down",,
1.89169E+17,srasu#0042,2018-08-16,"I suppose I'll just have to make the functions impure and return the full data set, and then make sure that the data like that is removed when it's written to disk, and the memory is freed.",,
4.48827E+17,donderdag#4004,2018-08-16,"yeah, you could give it a different namespace, like `:meta/id` and then do `(remove (comp #(= ""meta"" %) namespace key) data)` before writing it",,
3.46868E+17,djeis#0042,2018-08-16,Finalizers are neat until you start dealing with all the edge cases surrounding them lol,,
3.46868E+17,djeis#0042,2018-08-16,"Like, are there any guarantees about what thread they’ll be called on? Is it safe to take locks during GC? Etc.",,
1.89169E+17,srasu#0042,2018-08-16,That's a good point,,
3.09474E+17,jshah#3301,2018-08-16,"Hi everyone, how can I handle data from various sources and have it conform to a specification? Suppose, I have data about cars from three different sources which provides the same like car color, name, type etc., however, the JSON is different for each. I want to be able to take the different JSON and convert it a specification.",,
1.89169E+17,srasu#0042,2018-08-16,"I'd have three functions, and depending on the source call them. Make three different specs for the parsed input data, and make transformation functions to move from one of those to the actual car spec.",,
4.48827E+17,donderdag#4004,2018-08-16,"^

you can use clojure.spec or plumatic/schema for that",,
1.89169E+17,srasu#0042,2018-08-16,You definitely can make things too generic. I think this would be one of those cases.,,
1.89169E+17,srasu#0042,2018-08-16,if you tried to encapsulate that all in one function.,,
3.09474E+17,jshah#3301,2018-08-16,"Yea, I had a similar approach to the one you mentioned.",,
3.09474E+17,jshah#3301,2018-08-16,I figured there would be some library 😛,,
3.09474E+17,jshah#3301,2018-08-16,"But I suppose as donderdag mentions, we can use spec or something?",,
1.89169E+17,srasu#0042,2018-08-16,A library to transform data from an unknown format to an unknown format? XD,,
1.89169E+17,srasu#0042,2018-08-16,You can use spec for some basic parsing of data.,,
1.89169E+17,srasu#0042,2018-08-16,Using conform.,,
1.89169E+17,srasu#0042,2018-08-16,But it's not likely to be as flexible as you need.,,
3.09474E+17,jshah#3301,2018-08-16,"Hmmm, right.",,
3.09474E+17,jshah#3301,2018-08-16,"Yea, I was thinking I can define the spec for each response and then define the spec for what I want ultimately and then magic!",,
3.09474E+17,jshah#3301,2018-08-16,haha,,
1.89169E+17,srasu#0042,2018-08-16,I mean you'd have to have some way of mapping from one part of a spec to another part of a different spec. I can't imagine that using a library for it would be easier than just making a couple of transform functions. Not unless you can make a programatic way of defining the mapping.,,
1.89169E+17,srasu#0042,2018-08-16,"at which point it'd only be worth it if you had to do hundreds of _different_ transformations, not just the same transformation multiple times.",,
3.09474E+17,jshah#3301,2018-08-16,"Ahhh, okay. Better to go with a simpler approach, as you suggested.",,
3.09474E+17,jshah#3301,2018-08-16,Thanks for the quick help!,,
1.89169E+17,srasu#0042,2018-08-16,No problem! Let me know if you need anything else. I'm pretty happy to help whenever I can.,,
3.09474E+17,jshah#3301,2018-08-16,"Awesome! Thanks 😄 Maybe, if you're up for it, I can show you the solution once I've implemented it?",,
1.89169E+17,srasu#0042,2018-08-16,Sure,,
1.40467E+17,Nanoic#8714,2018-08-18,Hello,,
4.48827E+17,donderdag#4004,2018-08-18,heyo,,
1.40467E+17,Nanoic#8714,2018-08-18,How do I run Clojure on Windows?,,
3.46868E+17,djeis#0042,2018-08-18,"Leiningen runs on Windows, and the new Clojure cli tools ought to work as well (although I’ve yet to test that)",,
1.89169E+17,srasu#0042,2018-08-18,Last I saw the deps and cli tools were *nix only,,
1.89169E+17,srasu#0042,2018-08-18,but leiningen is great on windows,,
1.89169E+17,srasu#0042,2018-08-18,and cursive and counterclockwise were also pretty good on windows.,,
1.89169E+17,srasu#0042,2018-08-18,"Those rely on lein, but don't require you use the command line.",,
1.40467E+17,Nanoic#8714,2018-08-18,I tried it on a laptop and even though I did everything correctly it wouldn't work,,
1.40467E+17,Nanoic#8714,2018-08-18,Can I write Clojure on the same IDE that I run Java in?,,
1.89169E+17,srasu#0042,2018-08-18,"actually that's what I just mentioned. Cursive is a plugin for IntelliJ, and counterclockwise is a plugin for Eclipse.",,
1.40467E+17,Nanoic#8714,2018-08-18,Is there one for Netbeans?,,
1.89169E+17,srasu#0042,2018-08-18,"quick google search turns up somthing called ""enclojure,"" but I can't speak to how good it is or isn't because I haven't tried it.",,
3.46868E+17,djeis#0042,2018-08-18,Did you say that lein was giving you trouble?,,
1.40467E+17,Nanoic#8714,2018-08-18,YEAH,,
1.40467E+17,Nanoic#8714,2018-08-18,on a different Windows 10 machine,,
1.40467E+17,Nanoic#8714,2018-08-18,I tried messing with the environment variables but it didn't make a difference,,
3.46868E+17,djeis#0042,2018-08-18,Hmm.,,
1.40467E+17,Nanoic#8714,2018-08-18,It would say lein self-install,,
1.40467E+17,Nanoic#8714,2018-08-18,'Powershell' is not  a recognized command,,
3.46868E+17,djeis#0042,2018-08-18,Lol wut,,
1.40467E+17,Nanoic#8714,2018-08-18,It would always begin to install then fail,,
4.48827E+17,donderdag#4004,2018-08-18,"Boot works fine on Windows, I can personally attest.",,
4.48827E+17,donderdag#4004,2018-08-18,"the Clojure CLI tools don't work on Windows yet, but Windows support is being worked on",,
1.40467E+17,Nanoic#8714,2018-08-18,Didn't work as it should on mine,,
3.46868E+17,djeis#0042,2018-08-18,I’m assuming you did the same search as me and added that system32 dir to your path?,,
4.48827E+17,donderdag#4004,2018-08-18,"i don't use Lein, so dunno about that",,
1.40467E+17,Nanoic#8714,2018-08-18,Can't remember exactly what I did now,,
1.40467E+17,Nanoic#8714,2018-08-18,I followed a few tutorials that all said the same thing,,
1.40467E+17,Nanoic#8714,2018-08-18,got the same result. I was trying to use the Windows terminal,,
1.40467E+17,Nanoic#8714,2018-08-18,I managed to get Java working in CLI but not clojure,,
3.46868E+17,djeis#0042,2018-08-18,"Yeah, lein self-install is looking for something it’s not finding... do you have your dev machine handy?",,
1.40467E+17,Nanoic#8714,2018-08-18,No,,
1.40467E+17,Nanoic#8714,2018-08-18,I was using my parent's laptop over Summer,,
4.48827E+17,donderdag#4004,2018-08-18,did you say you were using w10? is using WSL an option?,,
1.40467E+17,Nanoic#8714,2018-08-18,I don't know what that is,,
4.48827E+17,donderdag#4004,2018-08-18,https://docs.microsoft.com/en-us/windows/wsl/about,,
1.40467E+17,Nanoic#8714,2018-08-18,I'm going to try again on my desktop which also runs Windows 10,,
3.46868E+17,djeis#0042,2018-08-18,"Well, if you get that same powershell error with lein I have a suggestion.",,
1.40467E+17,Nanoic#8714,2018-08-18,I'm not sure I want to run linux on top of this OS,,
3.46868E+17,djeis#0042,2018-08-18,"WSL doesn’t actually run Linux atop Windows, per-say, but running WSL doesn’t get you quite the integration that I wish it did either.",,
1.40467E+17,Nanoic#8714,2018-08-18,I do like the Windows CLI,,
4.48827E+17,donderdag#4004,2018-08-18,"yeah, WSL lets you run Linux programs directly on Windows",,
1.40467E+17,Nanoic#8714,2018-08-18,I don't want to mess with itr,,
1.40467E+17,Nanoic#8714,2018-08-18,My university teaches a mixture of Linux and Windows CLI depending on whether or not it's a network module,,
3.46868E+17,djeis#0042,2018-08-18,"WSL is a Windows NT level thingy which lets Windows run Linux applications natively, it’s just that Linux apps expect a Linux ecosystem running around them instead of a Windows one and Windows apps don’t know how to talk to Linux apps.",,
1.40467E+17,Nanoic#8714,2018-08-18,So it's like Wine for Windows?,,
3.46868E+17,djeis#0042,2018-08-18,"Yeah, pretty much.",,
3.46868E+17,djeis#0042,2018-08-18,Except integrated into the OS.,,
1.40467E+17,Nanoic#8714,2018-08-18,I'm not sure I want to make too many changes to my installation of Windows.,,
3.46868E+17,djeis#0042,2018-08-18,Fair enough.,,
1.40467E+17,Nanoic#8714,2018-08-18,But thanks all the same.,,
4.48827E+17,donderdag#4004,2018-08-18,"Lein *should* work on Windows just fine, but in case you can't get it to work, the other option is http://boot-clj.com",,
3.46868E+17,djeis#0042,2018-08-18,"As I said, if installing lein gives you that same powershell message again there’s a PATH variable thingy you can do that ought to fix it. Ought to, anyway... I’ve always had trouble with Windows.",,
1.40467E+17,Nanoic#8714,2018-08-18,Just looking at this enclojure,,
1.40467E+17,Nanoic#8714,2018-08-18,it was last updated in 2009 for Netbeans 6.7,,
3.46868E+17,djeis#0042,2018-08-18,Hm.,,
3.46868E+17,djeis#0042,2018-08-18,"I mean, the very basic tooling you need to livecode Clojure hasn’t really changed.",,
3.46868E+17,djeis#0042,2018-08-18,But like...,,
1.40467E+17,Nanoic#8714,2018-08-18,read the comments,,
3.46868E+17,djeis#0042,2018-08-18,I’m not sure I could enjoy working with only the bare bones editor integration.,,
4.48827E+17,donderdag#4004,2018-08-18,"yeah, Cursive on IntelliJ is by far the most used Java editor for Clojure",,
1.40467E+17,Nanoic#8714,2018-08-18,http://plugins.netbeans.org/plugin/8276/enclojure,,
4.48827E+17,donderdag#4004,2018-08-18,ah,,
3.46868E+17,djeis#0042,2018-08-18,Yeah that sucks...,,
4.48827E+17,donderdag#4004,2018-08-18,"you can probably get by without full Clojure support, but it's a much better experience with it, and i would try using an editor with it",,
1.40467E+17,Nanoic#8714,2018-08-18,I'm installing Counterclockwise for Ecliipse,,
4.48827E+17,donderdag#4004,2018-08-18,cool,,
1.40467E+17,Nanoic#8714,2018-08-18,Something's gone wrong with the Eclipse layout.,,
1.40467E+17,Nanoic#8714,2018-08-18,,https://cdn.discordapp.com/attachments/315388260987830272/480477942905045013/unknown.png,
3.46868E+17,djeis#0042,2018-08-18,Yeah that doesn’t look right...,,
3.46868E+17,djeis#0042,2018-08-18,"Keep going anyway and see if it sorts itself out? I dunno eclipse that well anymore, so I don’t have any good suggestions, but it doesn’t look too bad.",,
4.48827E+17,donderdag#4004,2018-08-18,afraid i'm no help either,,
3.46868E+17,djeis#0042,2018-08-18,Maybe just try hiding that blank window and see if it goes away lol,,
4.48827E+17,donderdag#4004,2018-08-18,"fwiw, i haven't really heard of anyone using Counterclockwise since Cursive came out",,
1.40467E+17,Nanoic#8714,2018-08-18,Is IntelliJ free>,,
4.48827E+17,donderdag#4004,2018-08-18,"there's a Community edition, yeah",,
4.48827E+17,donderdag#4004,2018-08-18,Cursive is free as well,,
1.89169E+17,srasu#0042,2018-08-18,For non commercial use,,☝🏼 (1)
1.40467E+17,Nanoic#8714,2018-08-18,I was taught to use  Java in Netbeans during the first year of university.,,
1.40467E+17,Nanoic#8714,2018-08-18,My university has  an AI module in the third year and they use Clojure,,
1.89169E+17,srasu#0042,2018-08-18,Honestly NetBeans was the worst Java ide I've used.,,
1.40467E+17,Nanoic#8714,2018-08-18,So I'll be learning  a functional language for the first time as well as AI.,,
4.48827E+17,donderdag#4004,2018-08-18,"haha, nice. using a Lisp for AI",,
4.48827E+17,donderdag#4004,2018-08-18,going back to its roots,,
1.40467E+17,Nanoic#8714,2018-08-18,Is there any particular reason to use a functional language for AI,,
3.46868E+17,djeis#0042,2018-08-18,Well.,,
3.46868E+17,djeis#0042,2018-08-18,It depends on if you're referring to machine learning or not.,,
3.46868E+17,djeis#0042,2018-08-18,I would say that functional style doesn't really provide much one way or the other for machine learning tasks.,,
3.46868E+17,djeis#0042,2018-08-18,"Now, just in general, I'd say that functional style is good to know and nice to use.",,
3.46868E+17,djeis#0042,2018-08-18,But admittedly I am biased 😅,,
4.48827E+17,donderdag#4004,2018-08-18,"yeah, i'm not quite sure why lisp was created for AI, it just was",,
3.46868E+17,djeis#0042,2018-08-18,Well.,,
4.48827E+17,donderdag#4004,2018-08-18,i guess the recursive nature of it?,,
3.46868E+17,djeis#0042,2018-08-18,If you're talking about AI more generally there's a lot that's nice about lisps.,,
3.46868E+17,djeis#0042,2018-08-18,"The exploratory nature of the language, for one, but also the data-orientation and the ease of representing code as data.",,
3.46868E+17,djeis#0042,2018-08-18,But people don't use AI to mean that kind of programming anymore lol,,
4.48827E+17,donderdag#4004,2018-08-18,TRUE,,
3.46868E+17,djeis#0042,2018-08-18,"Like, the ancestors of Prolog were lisp libraries, and that was considered AI at the time.",,
3.46868E+17,djeis#0042,2018-08-18,Expert systems which could do goal solving.,,
3.46868E+17,djeis#0042,2018-08-18,Lisps are really nice for writing libraries for those kinds of AI.,,
4.48827E+17,donderdag#4004,2018-08-18,"there's some newer stuff for doing ML in Clojure, if that's the kind of AI they mean",,
4.48827E+17,donderdag#4004,2018-08-18,like https://mxnet.apache.org,,
3.46868E+17,djeis#0042,2018-08-18,I don't doubt that you can make Clojure really nice for ML,,
4.48827E+17,donderdag#4004,2018-08-18,it's probably a long ways from Python still tho,,
3.46868E+17,djeis#0042,2018-08-18,But I wouldn't say that's because it's a functional language 😛,,
4.48827E+17,donderdag#4004,2018-08-18,right.,,
3.46868E+17,djeis#0042,2018-08-18,I'd say it's because Clojure is a really nice and well designed language in general,,
3.46868E+17,djeis#0042,2018-08-18,"But again, I'm biased 😅",,
4.48827E+17,donderdag#4004,2018-08-18,"well, pretty much everyone who comes into contact with Clojure says that, so i think you're safe",,
3.46868E+17,djeis#0042,2018-08-18,lol,,
3.46868E+17,djeis#0042,2018-08-18,"I'm on the border of being a Smug Lisp Weenie tho, so I try my very best not to fall over that edge.  Tbh it may be well too late for me tho.",,
4.48827E+17,donderdag#4004,2018-08-18,"well, there's a difference between 'lisp is great' and 'if you're not using lisp you're hitler'",,
3.46868E+17,djeis#0042,2018-08-18,HA!,,
3.46868E+17,djeis#0042,2018-08-18,😆,,
3.46868E+17,djeis#0042,2018-08-18,In my defense I use a variety of other languages. I just consistently am also using lisp...,,
4.48827E+17,donderdag#4004,2018-08-18,"lispatriotism is fine, lisp nationalism is not... it doesn't even have a portmanteau",,
3.46868E+17,djeis#0042,2018-08-18,lol,,
3.46868E+17,djeis#0042,2018-08-18,One of these days I'll write a dependently typed lisp and then I'll never need to leave 😛,,
4.48827E+17,donderdag#4004,2018-08-18,have you seen Lux?,,
4.48827E+17,donderdag#4004,2018-08-18,https://github.com/LuxLang/lux,,
3.46868E+17,djeis#0042,2018-08-18,"Oh yeah, I keep meaning to learn that one.",,
4.48827E+17,donderdag#4004,2018-08-18,"Shen is technically statically typed too, but i dunno any other languages with sequent calculus type systems",,
4.48827E+17,donderdag#4004,2018-08-18,seems neat though,,
4.48827E+17,donderdag#4004,2018-08-18,http://www.shenlanguage.org,,
1.40467E+17,Nanoic#8714,2018-08-18,I've heard Lisp criticised because it uses operator precedence that runs throughout the entire class.,,
4.48827E+17,donderdag#4004,2018-08-18,there's no such thing as operator precedence in lisp,,
1.40467E+17,Nanoic#8714,2018-08-18,There's no way to break it up,,
4.48827E+17,donderdag#4004,2018-08-18,all operators have the same precedence,,
4.48827E+17,donderdag#4004,2018-08-18,`(+ 1 2 (* 2 3))`,,
1.40467E+17,Nanoic#8714,2018-08-18,Isn't II over && in Java?,,
4.48827E+17,donderdag#4004,2018-08-18,"Clojure has its own semantics for `and` and `or`, distinct from Java's",,
4.48827E+17,donderdag#4004,2018-08-18,they have equal precedence,,
1.40467E+17,Nanoic#8714,2018-08-18,https://introcs.cs.princeton.edu/java/11precedence/,,
4.48827E+17,donderdag#4004,2018-08-18,"yeah, one of the nice things about lisps is you don't need to worry about that stuff",,
3.46868E+17,djeis#0042,2018-08-18,"It's all prefix notation, much simpler to understand and parse.",,
1.40467E+17,Nanoic#8714,2018-08-18,So divide is not over subtraction?,,
4.48827E+17,donderdag#4004,2018-08-18,nope,,
3.46868E+17,djeis#0042,2018-08-18,There's no cases where it would be ambiguous and need precedence rules.,,
3.46868E+17,djeis#0042,2018-08-18,So no operator is more important than any other.,,
4.48827E+17,donderdag#4004,2018-08-18,^,,
3.46868E+17,djeis#0042,2018-08-18,"There aren't really even operators, in the sense of C/Java style syntax.",,
3.46868E+17,djeis#0042,2018-08-18,Just functions.,,
1.40467E+17,Nanoic#8714,2018-08-18,So 1+2 is (+ 1 2)?,,
4.48827E+17,donderdag#4004,2018-08-18,precisely,,
4.48827E+17,donderdag#4004,2018-08-18,and you can do things like `(f +)`,,
1.40467E+17,Nanoic#8714,2018-08-18,How does assignment work?,,
1.89169E+17,srasu#0042,2018-08-18,Lol,,
3.46868E+17,djeis#0042,2018-08-18,Well.,,
3.46868E+17,djeis#0042,2018-08-18,It depends.,,
3.46868E+17,djeis#0042,2018-08-18,"Clojure makes assignment a little awkward because it's a functional language, although that's not a thing common to all lisps.",,
1.89169E+17,srasu#0042,2018-08-18,Clojure doesn't have the conventional assign syntax for most things.,,
3.46868E+17,djeis#0042,2018-08-18,"In Common Lisp, for example, assignment is `(setf <variable> <value>)`.",,
4.48827E+17,donderdag#4004,2018-08-18,it's better if you treat all definitions as constant,,
4.48827E+17,donderdag#4004,2018-08-18,in Clojure,,
1.89169E+17,srasu#0042,2018-08-18,Reason is that you normally use locals and constants instead of variables,,
3.46868E+17,djeis#0042,2018-08-18,"Clojure does have an assignment syntax, but it's limited intentionally.",,
3.46868E+17,djeis#0042,2018-08-18,And not something used often.,,
1.89169E+17,srasu#0042,2018-08-18,"When you really do need mutation, you use special thread-safe construct for it such as atoms, which is what you're looking for with a conventional variable.",,
3.46868E+17,djeis#0042,2018-08-18,^,,
3.46868E+17,djeis#0042,2018-08-18,So really...,,
3.46868E+17,djeis#0042,2018-08-18,"You make an atom with the atom function, and then assignment is calling `reset!` on it.",,
1.89169E+17,srasu#0042,2018-08-18,^,,
3.46868E+17,djeis#0042,2018-08-18,"Although even using `reset!` is frowned upon, usually you'd use the much more powerful `swap!`.",,
3.46868E+17,djeis#0042,2018-08-18,But `reset!` has its place.,,
1.40467E+17,Nanoic#8714,2018-08-18,I don't understand,,
1.40467E+17,Nanoic#8714,2018-08-18,in Java I'd write,,
3.46868E+17,djeis#0042,2018-08-18,Yeah that was a bit much...,,
1.40467E+17,Nanoic#8714,2018-08-18,int a = 1;,,
3.46868E+17,djeis#0042,2018-08-18,"So, the first thing to note, is that `int a = 1;` isn't an assignment, it's a declaration.",,
4.48827E+17,donderdag#4004,2018-08-18,"in Clojure that would be `(def a 1)` for a top-level (global) constant, and `(let [a 1] a)` for a local constant",,
1.89169E+17,srasu#0042,2018-08-18,"in clojure it'd be
```clojure
(let [a 1]
  ;; use a here
  )
```",,
3.46868E+17,djeis#0042,2018-08-18,"The fact that `int a = 1;` looks similar to `a = 5;` is to make your life easier, but they're really very different operations.",,
3.46868E+17,djeis#0042,2018-08-18,"The first is a declaration, the second is a mutation- it actually *changes* something.",,
1.89169E+17,srasu#0042,2018-08-18,^,,
3.46868E+17,djeis#0042,2018-08-18,"Clojure, as a functional language, is all about controlling when state changes.",,
4.48827E+17,donderdag#4004,2018-08-18,"@Nanoic some good resources to start with are:

https://aphyr.com/tags/Clojure-from-the-ground-up
https://www.braveclojure.com/clojure-for-the-brave-and-true/
http://shop.oreilly.com/product/0636920034292.do",,
3.46868E+17,djeis#0042,2018-08-18,So one of the things it does is not provide local variables at all- you get local constants (`int a = 1;`) but once you've created them they're fixed (no `a = 5;` afterwards). You need something more powerful if you want to change values in-place like that.,,
4.48827E+17,donderdag#4004,2018-08-18,"since you're familiar with Java, you might want to start with https://www.youtube.com/watch?v=P76Vbsk_3J0 and/or https://www.youtube.com/watch?v=VSdnJDO-xdg",,
3.46868E+17,djeis#0042,2018-08-18,"Global definitions can be updated after-the-fact, but that's mainly so that you can edit your code live and isn't meant to actually be used in final code.",,
4.48827E+17,donderdag#4004,2018-08-18,unless you have a satellite in orbit that needs a bugfix,,
3.46868E+17,djeis#0042,2018-08-18,True lol,,
3.46868E+17,djeis#0042,2018-08-18,"But once again, that's editing code live 😛",,
4.48827E+17,donderdag#4004,2018-08-18,fair enough,,
4.48827E+17,donderdag#4004,2018-08-18,"i was referencing http://flownet.com/gat/jpl-lisp.html, btw nanoic",,
1.40467E+17,Nanoic#8714,2018-08-19,Hello again,,
1.40467E+17,Nanoic#8714,2018-08-19,I can't get Clojure working in Eclipse,,
1.40467E+17,Nanoic#8714,2018-08-19,"I think it's installed correctly, I just don't know how to use it properly.",,
4.48827E+17,donderdag#4004,2018-08-19,@Nanoic have you tried going through https://doc.ccw-ide.org/documentation.html ?,,
1.40467E+17,Nanoic#8714,2018-08-19,I'm on Create your first project,,
1.40467E+17,Nanoic#8714,2018-08-19,and I'm having trouble selecting 'Load file in REPL from the Clojure menu.',,
1.40467E+17,Nanoic#8714,2018-08-19,I can't locate it,,
1.40467E+17,Nanoic#8714,2018-08-19,I got it working in  a fashion,,
1.40467E+17,Nanoic#8714,2018-08-19,It's like the IDLE shell in Python,,
1.40467E+17,Nanoic#8714,2018-08-19,I can code line by line,,
1.40467E+17,Nanoic#8714,2018-08-19,"I typed => (foo ""Hey"")",,
1.40467E+17,Nanoic#8714,2018-08-19,"and got Hey Hello, World!",,
1.40467E+17,Nanoic#8714,2018-08-19,it's concatenated with something else for some reason.,,
1.40467E+17,Nanoic#8714,2018-08-19,"Is this the only way to write Clojure, in this small panel at the bottom of the screen?",https://cdn.discordapp.com/attachments/315388260987830272/480690689659895818/unknown.png,
1.40467E+17,Nanoic#8714,2018-08-19,It's not what I was expecting,,
4.48827E+17,donderdag#4004,2018-08-19,"@Nanoic with editor integration, you never really type into the REPL directly",,
4.48827E+17,donderdag#4004,2018-08-19,"you type into your file, then press a keyboard shortcut to send the code to the REPL automatically",,
4.48827E+17,donderdag#4004,2018-08-19,https://doc.ccw-ide.org/documentation.html#_evaluate_clojure_code,,
4.48827E+17,donderdag#4004,2018-08-19,https://clojure.org/guides/repl/enhancing_your_repl_workflow#editor-integrations,,
4.48827E+17,donderdag#4004,2018-08-19,https://vimeo.com/223309989 watching this talk is helpful as well,,
4.56227E+17,Deleted User#0000,2018-08-19,also @Nanoic the reason it's concatenated is that `println` concatenates all its arguments with a space,,
4.48827E+17,donderdag#4004,2018-08-19,"yeah, you end up calling `(println ""this is a string"" ""Hello, world!"")`",,
3.46868E+17,djeis#0042,2018-08-19,"Yeah, generally with lisps you hop back and forth between livecoding in files (editing code in the file and rerunning the changed definitions using an editor key) and testing that code in the REPL (aka the shell or listener). You don’t do much programming in the REPL tho- if something gets nontrivial, write it as a definition in a file and then just run it from the REPL instead.",,
4.56227E+17,Deleted User#0000,2018-08-23,Is it silly to put nginx in front of immutant?,,
4.56227E+17,Deleted User#0000,2018-08-23,@Deleted User no it is not silly,,
1.70416E+17,![Wys] Juzi#1035,2018-08-25,mfw people think clojure can't be used at industrial scale lmao,,
2.98148E+17,lepistane#2482,2018-08-25,hatesrs,,
1.89169E+17,srasu#0042,2018-08-25,"yeah, that seems a bit odd that they think that.",,
1.71366E+17,mr.owl#5374,2018-08-25,At first glance it's kind of worrisome when a language doesn't have a type system,,
1.71366E+17,mr.owl#5374,2018-08-25,It would have to be very evident that that poses no issue before it ever gets widely adapted in industry,,
1.89169E+17,srasu#0042,2018-08-25,I mean yes but even already there's significant adoption and clojure is last I checked the highest paid language worldwide (but not in the us),,
4.48827E+17,donderdag#4004,2018-08-25,clojure is strongly typed + has an optional static type system,,
1.89169E+17,srasu#0042,2018-08-25,I mean yeah core.typed,,
3.46868E+17,djeis#0042,2018-08-25,"The JVM as a platform is strongly typed, so Clojure would have to go out of its way to escape that.",,
1.89169E+17,srasu#0042,2018-08-25,"True it is strongly typed, but it's still dynamically typed.",,
2.16295E+17,HactarCE#5314,2018-08-25,Weak typing bothers me,,
2.16295E+17,HactarCE#5314,2018-08-25,"I don't care static vs. dynamic, but weak typing just freaks me out. It's especially dangerous in combination with dynamic typing (looking at you, JS!)",,
3.46868E+17,djeis#0042,2018-08-25,Is JS weakly typed?,,
2.16295E+17,HactarCE#5314,2018-08-25,Isn't it?,,
3.46868E+17,djeis#0042,2018-08-25,"I agree it’s duck typed, but you still can’t violate the type system in any meaningful way.",,
2.16295E+17,HactarCE#5314,2018-08-25,"What about adding different types, like `""number: "" + 3`?",,
3.46868E+17,djeis#0042,2018-08-25,Weak typing would mean you could trick the type system into mis-assigning a type.,,
3.46868E+17,djeis#0042,2018-08-25,That’s just implicit coercion.,,
2.16295E+17,HactarCE#5314,2018-08-25,oohhhhh,,
3.46868E+17,djeis#0042,2018-08-25,"It’s weird, but not weak typing.",,
2.16295E+17,HactarCE#5314,2018-08-25,I must have been using an incorrect definition for strong vs. weak typing.,,
3.46868E+17,djeis#0042,2018-08-25,"Like, in C you can just change the type of a pointer with a cast and the compiler won’t check anything or complain- that’s weak typing.",,
2.16295E+17,HactarCE#5314,2018-08-25,"hm, there are various definitions https://en.wikipedia.org/wiki/Strong_and_weak_typing#Implicit_type_conversions_and_""type_punning""",,
3.46868E+17,djeis#0042,2018-08-25,"In java if you cast and the result type is incompatible then you get a null pointer back, whereas C just lets you go along with a pointer of the wrong type.",,
2.16295E+17,HactarCE#5314,2018-08-25,I wasn't wrong necessarily,,
3.46868E+17,djeis#0042,2018-08-25,"True, I’m just used to the definitions usually used in the programming language theory community 😅",,
2.16295E+17,HactarCE#5314,2018-08-25,Fair enough 🙂,,
3.46868E+17,djeis#0042,2018-08-25,"Static vs. dynamic is when the types are checked, strong vs. weak is if you can violate the type safety of the system.",,
2.16295E+17,HactarCE#5314,2018-08-25,👍,,
3.46868E+17,djeis#0042,2018-08-25,"Amusingly, Haskell is technically weakly typed, cus it does have an unsafe cast operation.",,
3.46868E+17,djeis#0042,2018-08-25,It’s just hidden and buried and people will hate you if you use it.,,
2.16295E+17,HactarCE#5314,2018-08-25,"That sounds very Haskelline. ""Yes, there _is_ a way to do that ... but it's not easy and you should really just avoid it.""",,
3.46868E+17,djeis#0042,2018-08-25,Lol,,
2.16295E+17,HactarCE#5314,2018-08-25,I feel like that's the same response they give to I/O though. /s,,
3.46868E+17,djeis#0042,2018-08-25,There are IO operations that actually perform side-effecting I/O too 😛,,
3.46868E+17,djeis#0042,2018-08-25,So technically it isn’t pure.,,
3.46868E+17,djeis#0042,2018-08-25,They’re just in the debug modules.,,
1.70416E+17,![Wys] Juzi#1035,2018-08-25,"""haskell is a pure functional language if you dont use any impure functions""",,
1.70416E+17,![Wys] Juzi#1035,2018-08-25,lmao,,
1.55398E+17,cryptid selfie#3116,2018-08-26,clojureee,,
1.55398E+17,cryptid selfie#3116,2018-08-27,is this place dead 😦,,
3.46868E+17,djeis#0042,2018-08-27,"No, just a little quiet sometimes",,
1.55398E+17,cryptid selfie#3116,2018-08-27,i quit coding until i found clojure its mad cray,,
3.46868E+17,djeis#0042,2018-08-27,Lisps are awesome 😁,,
1.89169E+17,srasu#0042,2018-08-27,"I'm working on something in project euler for prime factors.
```clojure
(defn factor-of?
  [fac num]
  (= (mod num fac) 0))

(declare primes)

(defn prime?
  [n]
  (if (< n 2)
    false
    (if (= n 2)
      true
      (every? identity (map #(not (factor-of? % n))
                            (take-while #(< % (/ n 2))
                                        primes))))))

(def primes (filter prime? (conj (map #(inc (* 2 %)) (drop 1 (range))) 2)))

(defn prime-factors
  ""Returns a vector of all prime factors of a number (including duplicates) in ascending order""
  [n]
  (if (prime? n)
    [n]
    (loop [possible-primes (take-while #(<= % (/ n 2)) primes)
           coll (transient [])
           n n]
      (if-let [next-prime (first possible-primes)]
        (if (> next-prime n)
          (recur (rest possible-primes) coll n)
          (if (factor-of? next-prime n)
            (recur possible-primes (conj! coll next-prime) (/ n next-prime))
            (recur (rest possible-primes) coll n)))
        (persistent! coll)))))

(defn -main
  [& args]
  (println
   (last (prime-factors 600851475143))))
```",,
1.89169E+17,srasu#0042,2018-08-27,This has some issues though,,
1.89169E+17,srasu#0042,2018-08-27,"namely, that it hangs when I try to get a very large index of `primes`. So in the actual use case though, it hangs when I run this after evaluating the file",,
1.89169E+17,srasu#0042,2018-08-27,"but if I evaluate `-main` again after stopping it during the hang (which means that the primes lazy-seq is being cached), it works instantly.",,
1.89169E+17,srasu#0042,2018-08-27,"Is this user error where I've just defined the sequence poorly such that if you consume a large part of it all at once it breaks, or is it an issue with Clojure?",,
4.48827E+17,donderdag#4004,2018-08-27,"@srasu i saw this in the Lisp discord, and my first instinct was that you're holding onto the head of the sequence somehow, and so the previous elements aren't being released",,
4.48827E+17,donderdag#4004,2018-08-27,but i'm not sure that's any help,,
4.48827E+17,donderdag#4004,2018-08-27,e.g. have you read this? https://stuartsierra.com/2015/04/26/clojure-donts-concat,,
1.89169E+17,srasu#0042,2018-08-27,"Well that's the complete code listing, so if it's happening, it's in that code. But notable is that it's not crashing and there's no exception thrown. It just hangs.",,
1.89169E+17,srasu#0042,2018-08-27,I did read that today to try and fix this issue actually.,,
4.48827E+17,donderdag#4004,2018-08-27,"ah, i see",,
4.48827E+17,donderdag#4004,2018-08-27,"i think this particular problem is beyond me, but there are quite a few Clojure internals experts in the Clojurians Slack, particularly those who frequent the #clojure-dev channel. i'd try there",,
1.89169E+17,srasu#0042,2018-08-27,Okay. I'll try it.,,👍🏼 (1)
1.55398E+17,cryptid selfie#3116,2018-08-28,"I definitely don't know enough to help, but transient / persistent! is to a get a speedup?",,
1.89169E+17,srasu#0042,2018-08-28,"Already am in some places, but this is a lazy sequence so it doesn't need it.",,
1.89169E+17,srasu#0042,2018-08-28,Actually if you look at the prime factors function it uses it,,
1.55398E+17,cryptid selfie#3116,2018-08-28,Out of curiosity I tried other prime factorisation .cljs out there and they all fail the same way. running out of memory?,,
1.89169E+17,srasu#0042,2018-08-28,"unlikely, that would throw an exception.",,
1.55398E+17,cryptid selfie#3116,2018-08-29,any luck?,,
1.55398E+17,cryptid selfie#3116,2018-08-29,"I found this code and sped it up using transients and by using zero? instead of (= 0

```(defn primegen2 [num] 
    (loop [ num num
            primes (transient [])
            candidate 2]
        (if (= 1 num) 
            (persistent! primes)
            (if (zero? (mod num candidate))
                (recur (/ num candidate) (conj! primes candidate) candidate)
                (recur num primes (inc candidate))
        ))
    )
)```",,
1.89169E+17,srasu#0042,2018-08-29,"I mean that helps, but it kind of misses the point. It's supposed to be a lazy sequence.",,
1.89169E+17,srasu#0042,2018-08-29,Also that's an interesting paren style you got there,,
1.55398E+17,cryptid selfie#3116,2018-08-29,"i figured there were some requirements i didnt know about, also yeah I just recently switched from python so i have no idea what im doing",,
1.55398E+17,cryptid selfie#3116,2018-08-29,do let me know if you resolve this,,
1.89169E+17,srasu#0042,2018-08-29,"Alright, will do. As fo the parens, usually it's just on the end of whatever line it closes off. You don't tend to need to have them on the same indentation as what opens them because you're already doing structural editing.",,
3.46868E+17,djeis#0042,2018-08-29,Ideally. Ideally you’re doing structural editing.,,
2.72791E+17,fidel cashflow#4956,2018-08-29,Clojure is hard,,
3.46868E+17,djeis#0042,2018-08-29,Not much harder than any other language 🤷,,
3.46868E+17,djeis#0042,2018-08-29,It can be a bit of a shock coming from some langs tho.,,
3.46868E+17,djeis#0042,2018-08-29,But that’s true of a lot of languages that force you to change paradigms.,,
1.89169E+17,srasu#0042,2018-08-29,"That's honestly what the biggest thing was for me personally. I had to adjust to functional programming when all I was used to was Object Oriented programming. Complete ""culture shock"" from that switch, which made it seem a lot harder.",,
1.55398E+17,cryptid selfie#3116,2018-08-29,"```(defn prime? [n]
      (.isProbablePrime (BigInteger/valueOf n) 1))

(def primes (filter prime? (range 1 600851475143)))
(prn (last primes))```

this already crashes as well.",,
1.89169E+17,srasu#0042,2018-08-29,Lol. Why not just use `(range)`?,,
1.89169E+17,srasu#0042,2018-08-29,granted you couldn't get the last of it though,,
1.89169E+17,srasu#0042,2018-08-29,"but yeah, it seems to be an issue with lazy seqs",,
1.55398E+17,cryptid selfie#3116,2018-08-29,even tried (lazy-seq,,
1.55398E+17,cryptid selfie#3116,2018-08-29,odd,,
1.55398E+17,cryptid selfie#3116,2018-08-30,I recently saw clojure used for genomics and they are lazy-seqing lots of 35gb files so there must be a way,,
2.3267E+17,poppybro#0571,2018-08-30,@cryptid selfie i too was burnt out on programming until i found clojure,,
1.89169E+17,srasu#0042,2018-08-30,"well if they use only small chunks at a time, then they're good",,
2.72791E+17,fidel cashflow#4956,2018-08-30,"I like my imeperative programming, Clojure seems weird and convoluted.",,
1.71366E+17,mr.owl#5374,2018-08-30,it's not for everyone,,
2.47434E+17,ninjacop#4248,2018-08-30,i dont like haskell too much,,
2.47434E+17,ninjacop#4248,2018-08-30,CLisp ftw,,
2.47434E+17,ninjacop#4248,2018-08-30,clojure's meh,,
3.46868E+17,djeis#0042,2018-08-30,Wrong lisp server then 😛,,
2.72791E+17,fidel cashflow#4956,2018-08-30,I quite prefer haskell tbh,,
2.72791E+17,fidel cashflow#4956,2018-08-30,then again my knoledge of clujure is basically nothing,,
2.72791E+17,fidel cashflow#4956,2018-08-30,it feels more intuitive,,
1.55398E+17,cryptid selfie#3116,2018-08-31,Clojure is love clojure is life,,
1.55398E+17,cryptid selfie#3116,2018-08-31,Anyone know where can I get the latest clojure/clojurescript android repl?,,
2.72791E+17,fidel cashflow#4956,2018-08-31,I can’t understand this language.,,
3.46868E+17,djeis#0042,2018-08-31,Anything in particular giving you trouble?,,
1.70416E+17,![Wys] Juzi#1035,2018-08-31,🤔,,
1.70416E+17,![Wys] Juzi#1035,2018-08-31,After learning clojure and Clisp other functional languages feel wonky,,
1.70416E+17,![Wys] Juzi#1035,2018-08-31,Like they have all these stuff but it makes as much sense to have it as Java forcing you to use classes as a file,,
2.72791E+17,fidel cashflow#4956,2018-09-01,"Yeah, i cant figure out even elementary thins",,
1.89169E+17,srasu#0042,2018-09-01,what are you having issues with?,,
2.72791E+17,fidel cashflow#4956,2018-09-01,"for example, for my first program in any language, i usually either write a prime number generator, or one of those number guessing games. Cant figure out either in clojure",,
2.72791E+17,fidel cashflow#4956,2018-09-01,after hello world ofc,,
2.72791E+17,fidel cashflow#4956,2018-09-01,i just have no idea how to approach it in clojure,,
1.89169E+17,srasu#0042,2018-09-01,"I mean prime number generator is pretty simple, but it requires thinking in strange ways if you want to do it in a clojure-ey way",,
2.72791E+17,fidel cashflow#4956,2018-09-01,What is the clojurian way?,,
1.89169E+17,srasu#0042,2018-09-01,Just a second and I'll pop up my other computer and I can show you an example one that's very clojure-ey,,
1.89169E+17,srasu#0042,2018-09-01,it's a lazy-seq generator that's kind of mutually-recursive,,
1.89169E+17,srasu#0042,2018-09-01,"but I can also show you another way which would be a bit more familiar, a proper brute-force approach.",,
2.72791E+17,fidel cashflow#4956,2018-09-01,"i usually either do the slow method of checking each number, or the fast method of iterating through a list of numbers and removing everything they are factors of",,
2.72791E+17,fidel cashflow#4956,2018-09-01,"pray, tell",,
1.89169E+17,srasu#0042,2018-09-01,"Okay, got the other computer now.",,
2.72791E+17,fidel cashflow#4956,2018-09-01,http://www.thesoftwaresimpleton.com/blog/2015/02/07/primes/,,
2.72791E+17,fidel cashflow#4956,2018-09-01,This seems really clojurey but i cant understand anything going on,,
1.89169E+17,srasu#0042,2018-09-01,"Here's the clojure-ey way
```clojure
(defn factor-of?
  [fac num]
  (= (mod num fac) 0))

(declare primes)

(defn prime?
  [n]
  (if (< n 2)
    false
    (if (= n 2)
      true
      (every? identity (map #(not (factor-of? % n))
                            (take-while #(< % (/ n 2))
                                        primes))))))

(def primes (filter prime? (conj (map #(inc (* 2 %)) (drop 1 (range))) 2)))
```",,
1.89169E+17,srasu#0042,2018-09-01,but this is a bit hard to understand if you aren't already familiar with the style of using higher order functions and lazy sequences yet,,
2.72791E+17,fidel cashflow#4956,2018-09-01,No idea what any of that means,,
1.89169E+17,srasu#0042,2018-09-01,And even then it's a bit odd since you're using the sequence of primes to define the sequence of primes,,
2.72791E+17,fidel cashflow#4956,2018-09-01,^^ thats what I do in python,,
2.72791E+17,fidel cashflow#4956,2018-09-01,"well, at least use the list of primes to get the list of primes",,
2.72791E+17,fidel cashflow#4956,2018-09-01,"or list of numbers, rather",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Lmao,,
1.89169E+17,srasu#0042,2018-09-01,"Okay, so the easiest part. `factor-of?` is just a function that returns true if modding the number by a factor returns 0",,
1.89169E+17,srasu#0042,2018-09-01,about as easy of a function as you can get,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,There's a shorter version but this is pretty much a translation of the Python version,,
2.72791E+17,fidel cashflow#4956,2018-09-01,mod is % right,,
1.89169E+17,srasu#0042,2018-09-01,yes,,
1.89169E+17,srasu#0042,2018-09-01,"the `primes` list is defined as taking the list of all odd numbers greater than 1, and also the number 2, but this could easily just be all positive numbers and work just fine, and then filtering to only the numbers which satisfy the `prime?` predicate",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,https://rosettacode.org/wiki/Category:Clojure,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,This is also helpful to see how the same problem is solved by multiple languages,,
2.72791E+17,fidel cashflow#4956,2018-09-01,Ok,,
1.89169E+17,srasu#0042,2018-09-01,"Finally, the `prime?` predicate just says that if a number is less than two, it's not prime, if it is two, it is prime, and lastly if every prime number less than half its size is not a factor of it, then it is a prime number.",,
1.89169E+17,srasu#0042,2018-09-01,"So relatively simple conceptually, but gives a good clean result with relatively few tests, so it should be about as performant as you can expect from lazy seq",,
2.72791E+17,fidel cashflow#4956,2018-09-01,That seems slow,,
2.72791E+17,fidel cashflow#4956,2018-09-01,"Say I want all prime numbers up to 100000, this would take ages, checking each number’s factors.",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,This is the magical version,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,https://rosettacode.org/wiki/Extensible_prime_generator#Clojure,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,You can memoize the results,,
1.89169E+17,srasu#0042,2018-09-01,"I mean in this case it's only checking the prime numbers below it, not all numbers, which significantly reduces computation time, not to mention I've also reduced the numbers that are tested, but there are probably plenty of ways to optimize it more, like memoization, etc.",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Lmao what he gave you is just a simple version,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,To teach you how clojure works,,
2.72791E+17,fidel cashflow#4956,2018-09-01,Yeah I know,,
2.72791E+17,fidel cashflow#4956,2018-09-01,There are obviously far faster versions,,
1.89169E+17,srasu#0042,2018-09-01,"```clojure
(defn prime?*
  [n]
  (if (< n 2)
    false
    (if (= n 2)
      true
      (loop [test 2]
        (if (factor-of? test n)
          false
          (if (> test (/ n 2))
            true
            (recur (inc test))))))))
```
Here's the even simpler, and probably more familiar, way to handle checking if a number is prime. In that it tests against more numbers and doesn't use the prime list to check",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,https://rosettacode.org/wiki/Primality_by_trial_division#Clojure,,
2.72791E+17,fidel cashflow#4956,2018-09-01,It just seems that to implement the same thing in python would be far easier,,
1.89169E+17,srasu#0042,2018-09-01,"And yeah, the cycle version is crazy",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,I would say clojure is great at making complicated problem simple,,
2.72791E+17,fidel cashflow#4956,2018-09-01,But Jesus it looks so complicated,,
1.89169E+17,srasu#0042,2018-09-01,"And I have no idea why it would appear to be easier in python. It's pretty similar length code from what I've seen, in fact nearly a direct conversion of what I showed should work in Python, though I don't know if python supports infinite lists with thunks like this",,
1.89169E+17,srasu#0042,2018-09-01,"Is it the syntax that bothers you, or the actual logic?",,
2.72791E+17,fidel cashflow#4956,2018-09-01,It doesnt,,
2.72791E+17,fidel cashflow#4956,2018-09-01,It’s both tbh.,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,And yes it's actually a 1 to 1 translation from Python to clojure,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,U remove the brackets,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,And they are the same lmao,,
2.72791E+17,fidel cashflow#4956,2018-09-01,"The syntax seems convoluted, the logic seems, ehh weird. I assume functions are first class citizens here?",,
1.89169E+17,srasu#0042,2018-09-01,"Alright, so to help with dealing with the syntax, I would recommend using parinfer.",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Functions are just data,,
1.89169E+17,srasu#0042,2018-09-01,"Yes, functions are first class citizens",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Data are first class citizens,,
1.89169E+17,srasu#0042,2018-09-01,"If you look at the example I showed, I was passing the `prime?` function to the `filter` function.",,
2.72791E+17,fidel cashflow#4956,2018-09-01,"I use the almighty vim, what do I need to make brackets not be a pain.",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Paredit,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Lmao,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Damn,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Dafuq,,
1.89169E+17,srasu#0042,2018-09-01,https://github.com/bhurlow/vim-parinfer,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Go Google vim clojure setup,,
1.89169E+17,srasu#0042,2018-09-01,"paredit is better, but parinfer will be easier to use if you're used to python.",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Yep,,
1.89169E+17,srasu#0042,2018-09-01,It takes your indentation and closes parens based on that.,,
2.72791E+17,fidel cashflow#4956,2018-09-01,I saw someone’s emacs config had rainbow brackets so you could match them easily. I want that.,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Isn't there a rainbowth plugin for vim,,
1.89169E+17,srasu#0042,2018-09-01,That's pretty easy,,
1.89169E+17,srasu#0042,2018-09-01,https://github.com/kien/rainbow_parentheses.vim,,
2.72791E+17,fidel cashflow#4956,2018-09-01,Idk,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Lmao,,
2.72791E+17,fidel cashflow#4956,2018-09-01,Take my star good sir.,,
1.89169E+17,srasu#0042,2018-09-01,"But if you're dealing with parinfer, you probably won't even need rainbow delimiters",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,The brackets are special,,
2.72791E+17,fidel cashflow#4956,2018-09-01,It’s so damn confusing.,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,You can't think of stuff like functions or variables in clojure,,
1.89169E+17,srasu#0042,2018-09-01,I dunno about that,,
2.72791E+17,fidel cashflow#4956,2018-09-01,Why,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,In clojure there is only data,,
1.89169E+17,srasu#0042,2018-09-01,"variables are just atoms, and functions are still functions. You can't inspect the value of a function and change it like data",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Functions can be treated as data,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,And vice versa,,
2.72791E+17,fidel cashflow#4956,2018-09-01,But how can data perform logical procedures?,,
1.89169E+17,srasu#0042,2018-09-01,So you're kind of talking out of your ass on that one @![Wys] Juzi,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Lmao,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,I mean the mental model,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,High level thinking,,
1.89169E+17,srasu#0042,2018-09-01,Also no.,,
1.89169E+17,srasu#0042,2018-09-01,Functions are still separate.,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Low level wise its just the same,,
2.72791E+17,fidel cashflow#4956,2018-09-01,I’m so fucking confused. I’m going back to Haskell.,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Well it makes it easier for me to think that way,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,/shrug,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Lmao,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,You can stick with something u like,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Haskell isn't that bad,,
2.72791E+17,fidel cashflow#4956,2018-09-01,I’ve been thoroughly confounded.,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Lmao,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,It's okay,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Hmm,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Maybe make a website crawler,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,In clojure,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,I believe you might have done something similar in haskell,,
2.72791E+17,fidel cashflow#4956,2018-09-01,"I can barely write a prime number generator, I’m not gonna be able to do thst.",,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,The syntax might be a little iffy,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Parinfer should help alot,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Try writing fizzbuzz,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Lmao,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Just small stuff to start,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Tbf I was thinking if learning reasonML but I haven't started it myself kek,,
2.72791E+17,fidel cashflow#4956,2018-09-01,Woooosh,,
2.72791E+17,fidel cashflow#4956,2018-09-01,Waaay over my head,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Lmao,,
2.72791E+17,fidel cashflow#4956,2018-09-01,Give me lItErally any imperative language I can do what you are saying.,,
2.72791E+17,fidel cashflow#4956,2018-09-01,Ack.,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Programming languages are supposed to be able to the same thing as each other lmao,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,~~doesnt mean all of them makes it easy for you though~~,,
2.72791E+17,fidel cashflow#4956,2018-09-01,C,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,Haven't written multithreaded programs in C in a long time,,
2.18602E+17,lsenjov#4288,2018-09-01,Well... the source of a function is attached as Metadata,,
2.18602E+17,lsenjov#4288,2018-09-01,"So you possibly *could* grab it out, change it, and recompile it",,
1.55398E+17,cryptid selfie#3116,2018-09-01,clojure takes a while to get into,,
1.55398E+17,cryptid selfie#3116,2018-09-01,I thought I would never be able to solve basic problems in it but you just need to learn some of the patterns and paradigms and then it gets easier,,👆 (1)
2.18602E+17,lsenjov#4288,2018-09-01,It took me a couple tries to understand how it works,,
2.18602E+17,lsenjov#4288,2018-09-01,At one point I realized it was all just big state machines,,😀 (1)
3.46868E+17,djeis#0042,2018-09-01,"Might I recommend Clojure for the Brave and True? It can be a little silly at times, but it does walk you through a lot of basic patterns in the language.",,
1.55398E+17,cryptid selfie#3116,2018-09-01,"yeah its Clojure for the Brave and True, and codinggame.com that helped me get into it",,
1.55398E+17,cryptid selfie#3116,2018-09-01,its good that its ridiculously silly because you remember the content better,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,The fastest way to understand clojure is by designing and making a game in clojure,,
1.70416E+17,![Wys] Juzi#1035,2018-09-01,That is probably when you realize the entire game is just a giant state machine,,👌 (1)
4.48827E+17,donderdag#4004,2018-09-01,"i DM'd them links to Brave Clojure, Living Clojure, Getting Clojure, and Programming Clojure 3rd ed",,"👍 (3),🥖 (1)"
4.48827E+17,donderdag#4004,2018-09-01,hopefully that helps,,
2.72791E+17,fidel cashflow#4956,2018-09-01,i'm using brave clojure,,
2.72791E+17,fidel cashflow#4956,2018-09-01,I made a factorial thing. Biggest accomplishment of my life.,,
4.48827E+17,donderdag#4004,2018-09-01,@fidel cashflow congrats!,,
2.72791E+17,fidel cashflow#4956,2018-09-01,I almost got the number guessing game to work,,👌🏼 (1)
1.55398E+17,cryptid selfie#3116,2018-09-02,"when I try to run lein run migrate it says cannot create JVM and it dies
unrecognized option: --add-modules

Anyone have any ideas?",,
1.55398E+17,cryptid selfie#3116,2018-09-02,hah.. it works without it...,,
1.89169E+17,srasu#0042,2018-09-02,It's because it's using an older version of the jdk,,
1.89169E+17,srasu#0042,2018-09-02,"Modules were added in Java 9, so if you're using 8 or older that flag would break it.",,
1.55398E+17,cryptid selfie#3116,2018-09-02,Im actually using 10 but it breaks for the same reason,,
1.70416E+17,![Wys] Juzi#1035,2018-09-02,didnt they revert modules lmao,,
1.55398E+17,cryptid selfie#3116,2018-09-02,"a lot of templates I tried have it included and you have to take it out in order to work, probably going to give newbies lots of headaches",,
1.55398E+17,cryptid selfie#3116,2018-09-02,and im pretty sure it worked at some point but I always had 10 I have no idea whats going on either tbh,,
2.72791E+17,fidel cashflow#4956,2018-09-02,could I get some help with my program?,,
2.72791E+17,fidel cashflow#4956,2018-09-02,it's working really weirdly,,
3.15294E+17,Odie#2665,2018-09-02,Whatcha need help with?,,
1.89169E+17,srasu#0042,2018-09-02,I've helped a bit already,,
3.15294E+17,Odie#2665,2018-09-02,Nice nice 😃,,
2.72791E+17,fidel cashflow#4956,2018-09-03,"Ye i was helpt, thanks tho",,
3.15294E+17,Odie#2665,2018-09-03,👍,,
2.72791E+17,fidel cashflow#4956,2018-09-03,👍,,
2.72791E+17,fidel cashflow#4956,2018-09-03,What is a smol and easy to use http server + client framework for clojure,,
4.48827E+17,donderdag#4004,2018-09-03,"@fidel cashflow http-kit provides both a server and a client: http://www.http-kit.org

other options for servers are Ring (https://github.com/ring-clojure/ring/), Pedestal (http://pedestal.io/), and Immutant (http://immutant.org)

another option for a client is clj-http (https://github.com/dakrone/clj-http)",,
2.72791E+17,fidel cashflow#4956,2018-09-03,thank you for the detailed respinse! I will look into all of them,,
4.48827E+17,donderdag#4004,2018-09-03,no worries 😃,,
2.72791E+17,fidel cashflow#4956,2018-09-03,:\),,
2.72791E+17,fidel cashflow#4956,2018-09-04,Why does clojure give the most useless compile errors,,
2.72791E+17,fidel cashflow#4956,2018-09-04,I just want a line number damnit not 47 java class exceptions,,
1.89169E+17,srasu#0042,2018-09-04,"Lol. Well it's probably buried in there, but it's definitely true that clojure's errors need work. Thankfully that's apparently one of their priorities in 1.10",,
2.72791E+17,fidel cashflow#4956,2018-09-04,"Thank god. I’m used to go errors, hec even c errors are friendlier.",,
1.89169E+17,srasu#0042,2018-09-04,"But if you aren't already used to looking through Java stack traces like I was when starting clojure, they can be a pain.",,
2.72791E+17,fidel cashflow#4956,2018-09-04,"Yeah, never used java",,
1.89169E+17,srasu#0042,2018-09-04,That's fair.,,
2.72791E+17,fidel cashflow#4956,2018-09-04,Are pointers a thing in clojure?,,
1.89169E+17,srasu#0042,2018-09-04,pointers aren't a thing in Java. Everything is references.,,
1.89169E+17,srasu#0042,2018-09-04,The same is true in Clojure.,,
2.72791E+17,fidel cashflow#4956,2018-09-04,"If not, can I edit a global atom passed as a parameter to a function?",,
1.89169E+17,srasu#0042,2018-09-04,Yes,,
2.72791E+17,fidel cashflow#4956,2018-09-04,Just by using (def),,
1.89169E+17,srasu#0042,2018-09-04,You can definitely edit atoms that are passed to functions as parameters using the same `swap!` and `reset!` functions,,
1.89169E+17,srasu#0042,2018-09-04,Whether they are global or local,,
2.72791E+17,fidel cashflow#4956,2018-09-04,"So if I want to overweight an atom list in a function, how would I do that?",,
1.89169E+17,srasu#0042,2018-09-04,"As far as how the stack traces go, what to look for is somewhere in the trace (if it's a runtime error and not a compile error) there will be a class name following this general format: `my.application.namespace$function` and that will tell you file and line number, as well as the useful information of which function the error occurred in. Compile errors that I recall don't have something like that to look for though.",,
1.89169E+17,srasu#0042,2018-09-04,"Oh, well it's the same as any other way of doing it. Like so:",,
1.89169E+17,srasu#0042,2018-09-04,"```clojure
(let [blah (atom [])
      mutate! (fn [a] (swap! a conj :mutated!))]
  (mutate! blah)
  (println @blah))
;; => [:mutated!]
```",,
2.72791E+17,fidel cashflow#4956,2018-09-04,I’m confused by that,,
2.72791E+17,fidel cashflow#4956,2018-09-04,Are !s macros?,,
1.89169E+17,srasu#0042,2018-09-04,"or:
```clojure
(let [blah (atom [:original!])
      mutate! (fn [a] (reset! a []))]
  (mutate! blah)
  (println @blah))
;; => []
```",,
1.89169E+17,srasu#0042,2018-09-04,"No, the `!` is just convention to say that it's doing something with side effects. But it's not strictly followed",,
1.89169E+17,srasu#0042,2018-09-04,so `!` is just a character that can be part of symbols,,
2.72791E+17,fidel cashflow#4956,2018-09-04,"Ok, I’m confused. Could you show me how I would overwright an atom passed as a parameter!",,
1.89169E+17,srasu#0042,2018-09-04,"I did. Notice the lambda is taking a parameter, and using it like an atom. Then that function is called with an atom defined in the let scope above it",,
1.70416E+17,![Wys] Juzi#1035,2018-09-04,🤔,,
1.89169E+17,srasu#0042,2018-09-04,"same basic thing:
```clojure
(def blah (atom []))

(defn mutate! [a]
  (swap! a conj :mutated!))

(mutate! blah)
(println @blah)
;; => [:mutated!]
```",,
1.70416E+17,![Wys] Juzi#1035,2018-09-04,i think he wants this : https://clojuredocs.org/clojure.core/swap%21,,
1.70416E+17,![Wys] Juzi#1035,2018-09-04,in a more concise manner lmao,,
1.89169E+17,srasu#0042,2018-09-04,except here everything is in global scope. It's the same as the local scoped version though.,,
2.72791E+17,fidel cashflow#4956,2018-09-04,I see,,
1.89169E+17,srasu#0042,2018-09-04,"And @![Wys] Juzi documentation is useful to people who already grok the ideas of the language. If you're running into issues of not quite understanding how atoms work, seeing the documentation for `swap!` isn't going to help.",,
2.72791E+17,fidel cashflow#4956,2018-09-04,I’m getting a weird error with something,,
1.70416E+17,![Wys] Juzi#1035,2018-09-04,🤔,,
1.70416E+17,![Wys] Juzi#1035,2018-09-04,¯\_(ツ)_/¯,,
2.72791E+17,fidel cashflow#4956,2018-09-04,Yeah I’m very new to clojure,,
1.70416E+17,![Wys] Juzi#1035,2018-09-04,i believe u tried brave clojure?,,
2.72791E+17,fidel cashflow#4956,2018-09-04,But thank you,,
2.72791E+17,fidel cashflow#4956,2018-09-04,"Yeah, I’m reading it now",,
1.70416E+17,![Wys] Juzi#1035,2018-09-04,okie,,
1.89169E+17,srasu#0042,2018-09-04,"Point is, atoms are similar to variables in other languages, and since they, like everything in java, are passed by reference, it means you can use its standard operations to mutate it and affect external state.",,
1.89169E+17,srasu#0042,2018-09-04,"Now, doing so isn't generally recommended outside specific cases or top-level functions because Clojure is a functional language and doing that kind of mutation is against the functional way of doing things and can increase conative overhead, but you can do it, and it's generally not too difficult and is thread safe.",,
2.72791E+17,fidel cashflow#4956,2018-09-04,"What does this mean:
“Exception in thread main java.lang.ClassCasxception clojure.lang.LazySeq cannot be cast to java.util.concurrent.Future”",,
1.89169E+17,srasu#0042,2018-09-04,"Granted if you read from the atom, compute some value, and then `reset!` it to something based on that read, you can still have data races. In that case you'll want to make a lambda which takes the atom's current state and returns the newly computed one, and then use that with `swap!`, which means you'll get automated retries and no data races.",,
2.72791E+17,fidel cashflow#4956,2018-09-04,CastException*,,
1.89169E+17,srasu#0042,2018-09-04,"Oh, that means either you or functions you are calling are using a particular argument as a Future from Java, but the argument is actually a LazySeq",,
2.72791E+17,fidel cashflow#4956,2018-09-04,What is a LazySeq,,
1.89169E+17,srasu#0042,2018-09-04,it's a list where not all the items exist yet.,,
2.72791E+17,fidel cashflow#4956,2018-09-04,I’ve narrowe it down to one function I wrote as the issue,,
1.89169E+17,srasu#0042,2018-09-04,A lot of the standard clojure sequence functions return lazy sequences,,
2.72791E+17,fidel cashflow#4956,2018-09-04,Oh I see the issue,,
2.72791E+17,fidel cashflow#4956,2018-09-04,"The function is recusrsive, the first iteration, it takes an atom, but then it passes local immutable lists for all the next iterations.",,
2.72791E+17,fidel cashflow#4956,2018-09-04,Yeah I fixed it,,
1.89169E+17,srasu#0042,2018-09-04,Cool!,,
1.85535E+17,IamCarbonMan#1695,2018-09-04,"what's the best way to wrap a C library (in my case xcb) with clojure? I know how to do it with Java but it doesn't really seem like there's any way to use JNI, JNA, etc effectively through clojure",,
1.85535E+17,IamCarbonMan#1695,2018-09-04,"there are libraries to call C library functions from clj, but I don't understand how I'm supposed to create and pass structs or pointers",,
1.85535E+17,IamCarbonMan#1695,2018-09-04,unless the only other way is just using the JNA namespace from clojure which feels clunky,,
4.48827E+17,donderdag#4004,2018-09-04,@IamCarbonMan probably the best way is to do it with Java then use interop from Clojure,,
1.85535E+17,IamCarbonMan#1695,2018-09-04,"yeah, i kinda figured. i'm actually almost looking at just making a pure X wrapper in clojure, using the x protocol xml files",,
4.48827E+17,donderdag#4004,2018-09-04,"ooh, that sounds pretty cool",,
4.48827E+17,donderdag#4004,2018-09-04,"oh, i see. you meant instead of doing the JNI <- Java <- Clojure dance. sorry,  i'm tired",,
1.85535E+17,IamCarbonMan#1695,2018-09-04,"yeah, i'd like to avoid jumping between 3 languages if possible. I actually think I might be able to use gloss+aleph to do this, which would honestly be pretty sweet",,
4.48827E+17,donderdag#4004,2018-09-04,fair enough. doing it with just zach tellman's stuff does sound nice,,
2.72791E+17,fidel cashflow#4956,2018-09-04,Does anyone have strong opinions about swing vs fn-fx?,,
1.89169E+17,srasu#0042,2018-09-04,"My experience is seesaw is more lispy, but fn-fx is in a more functional style.",,
1.70416E+17,![Wys] Juzi#1035,2018-09-04,https://ferret-lang.org/,,
4.48827E+17,donderdag#4004,2018-09-04,https://github.com/carp-lang/Carp,,
1.55398E+17,cryptid selfie#3116,2018-09-04,Ferret seems really cool,,
2.72791E+17,fidel cashflow#4956,2018-09-04,hmmmmmmmm,,
2.72791E+17,fidel cashflow#4956,2018-09-04,i cant figure out how to use ring for a web server,,
2.72791E+17,fidel cashflow#4956,2018-09-04,"```clj
(ns pear.core
  (:gen-class)
  (:require [clojure.data.json :as json]
            [digest]
            [ring.adapter.jetty]))
```
I did this, and put the dep in `project.clj`, but I cant use any of it's functions",,
4.48827E+17,donderdag#4004,2018-09-04,@fidel cashflow what's not working?,,
2.72791E+17,fidel cashflow#4956,2018-09-04,"I followed the directions, it throws a billion java errors",,
4.48827E+17,donderdag#4004,2018-09-04,which errors,,
4.48827E+17,donderdag#4004,2018-09-04,@fidel cashflow are these the directions you're referring to? https://github.com/ring-clojure/ring/wiki/Getting-Started,,
1.89169E+17,srasu#0042,2018-09-04,"@fidel cashflow you still have to namespace qualify them, or refer the functions into the namespace before you can use them.",,
2.72791E+17,fidel cashflow#4956,2018-09-04,How do I do thst,,
4.48827E+17,donderdag#4004,2018-09-04,"either use `ring.adapter.jetty/run-jetty`, or change your require to either `[ring.adapter.jetty :as whatever]` and use `whatever/run-jetty`, or  `[ring.adapter.jetty :refer [run-jetty]]` and use `run-jetty`",,
1.89169E+17,srasu#0042,2018-09-04,^,,
2.72791E+17,fidel cashflow#4956,2018-09-04,🤔,,
2.72791E+17,fidel cashflow#4956,2018-09-04,Is that the same as “from ring.adapter.jetty import run-jetty”,,
4.48827E+17,donderdag#4004,2018-09-04,yup,,
4.48827E+17,donderdag#4004,2018-09-04,"when you put `[ring.adapter.jetty]` (like `import math`) into your `:require` clause, Clojure loads the `ring.adapter.jetty` namespace, meaning you can refer to the public vars of that namespace with `ring.adapter.jetty/something`.

since that's verbose, you can also give the namespace a short alias, by using `[ring.adapter.jetty :as alias]` (like `import math as m`), meaning you can also refer to the vars from that namespace with `alias/something` (like `m.something`).

another option is to pull those vars directly into your own namespace with `[ring.adapter.jetty :refer [something]]` (like `from math import something`), and then you can use those directly with `something`",,
2.72791E+17,fidel cashflow#4956,2018-09-04,"Nice, If / is for getting stuff or of a namespace, what is . ?",,
1.89169E+17,srasu#0042,2018-09-04,`.` is an interop facility,,
1.89169E+17,srasu#0042,2018-09-04,it's for getting fields and methods from java objects.,,
4.48827E+17,donderdag#4004,2018-09-04,it's also a valid part of a namespace name,,
1.89169E+17,srasu#0042,2018-09-04,Also true,,
4.48827E+17,donderdag#4004,2018-09-04,"examples of the Java interop `.`: ```clj
=> (. Math PI)
3.141592653589793
=> (. Math sqrt 81)
9.0```",,
1.89169E+17,srasu#0042,2018-09-05,"Can also be
```clojure
(. Math (sqrt 81))
```",,☝🏼 (1)
1.55398E+17,cryptid selfie#3116,2018-09-05,"im using luminus with a h2 database and uhh, I tried lein run rollback and now lein run migrate wont work. where do i start fixing this haha",,
4.48827E+17,donderdag#4004,2018-09-05,@srasu i figured out where i heard that thing about Rich and Vars,,
4.48827E+17,donderdag#4004,2018-09-05,"it's from this talk: https://vimeo.com/195711510, around 36:17",,
4.48827E+17,donderdag#4004,2018-09-05,there's also a relevant Clojurians discussion here: https://clojurians-log.clojureverse.org/off-topic/2018-02-14,,
1.89169E+17,srasu#0042,2018-09-05,Awesome! I'll look at that soon.,,👌🏼 (1)
2.16295E+17,HactarCE#5314,2018-09-06,"Is this reasonably efficient/idiomatic?
```
;; 0 <= n < 16
(mapv #(bit-test n %) (range 4))) ; Return the bits in order.
```",,
4.48827E+17,donderdag#4004,2018-09-06,idiomatic to do what? test if the number's in a given range?,,
2.16295E+17,HactarCE#5314,2018-09-06,I want to get a vector of the bits in `n` (which is between `0` and `15` inclusive); e.g. `12` --> `[0 0 1 1]`,,
2.16295E+17,HactarCE#5314,2018-09-06,It works at least,,
4.48827E+17,donderdag#4004,2018-09-06,i guess it's fine then :p,,
2.16295E+17,HactarCE#5314,2018-09-06,"Actually it returns booleans, not `0` and `1`",,
2.16295E+17,HactarCE#5314,2018-09-06,but that's very easy to fix,,
4.24726E+17,will#9610,2018-09-07,"Hi Clojurians !

I have a question, how can i (unquote splicing ?) this list :
(def q '((where {:fav ""on""})
         (order :create_date :DESC)
         (limit ""2"")))

To get the following expression :
(select group-dao/glu-group
        (where {:fav ""on""})
        (order :create_date :DESC)
        (limit ""2""))",,
1.89169E+17,srasu#0042,2018-09-07,"you use the `apply` function.
```clojure
(apply select group-dao/glu-group '((where {:fav ""on""})
                                    (order :create_date :DESC)
                                    (limit""2"")))
(select group-dao/glu-group
        '(where {:fav ""on""})
        '(order :create_date :DESC)
        '(limit ""2""))
```
The above two calls are the same.  Granted I imagine you probably _did_ want to evaluate the where, order, and limit calls, so you could remove those quotes.",,
1.89169E+17,srasu#0042,2018-09-07,@will,,
1.89169E+17,srasu#0042,2018-09-07,"The `apply` function calls the first argument as a function, with all the rest of the arguments being passed through to said function. The only caveat is that the last argument is split into one argument for each element in the result of calling `seq` on said last argument.",,
4.24726E+17,will#9610,2018-09-07,"Oh i see, thank you very much !",,
1.89169E+17,srasu#0042,2018-09-07,No problem!,,
4.24726E+17,will#9610,2018-09-07,"Maybe i didn't understand well, but select is a macro (from korma library),
and i don't want to evaluate where, order, limit.",,
1.89169E+17,srasu#0042,2018-09-07,"Ah, okay. Well that makes it slightly more complicated.",,
4.24726E+17,will#9610,2018-09-07,Outch oh no 😦,,
1.89169E+17,srasu#0042,2018-09-07,"There's a few ways to do it without too much difficulty, but they aren't always recommended.",,
4.48827E+17,donderdag#4004,2018-09-07,the easiest way is `eval`,,
4.24726E+17,will#9610,2018-09-07,Is it safe ?,,
4.48827E+17,donderdag#4004,2018-09-07,if you don't use it on untrusted input,,
1.89169E+17,srasu#0042,2018-09-07,"So you could do the simple thing and destructure it if you know how many items there will be:
```clojure
(let [where-clause (first clauses)
      order-clause (second clauses)
      limit-clause (nth clauses 2]
  (select group-dao/glu-group where-clause order-clause limit-clause))
```
This is what I'd recommend if you can because it's safe.",,
4.24726E+17,will#9610,2018-09-07,Ok but i can't rely on because it can come from input,,
4.48827E+17,donderdag#4004,2018-09-07,"ah, ok then",,
1.89169E+17,srasu#0042,2018-09-07,"However, you _can_ use `eval` if you know that the input will be created by you in code and not assembled from disk (if it's going to be run on a computer others have access to and you care about that) or things being sent over the wire",,👍🏼 (1)
4.24726E+17,will#9610,2018-09-07,"Okay 😃 Thank you both, i will try",,
4.48827E+17,donderdag#4004,2018-09-07,the other option is to write a wrapping macro,,
1.89169E+17,srasu#0042,2018-09-07,"Yes, that's another decent option.",,
1.89169E+17,srasu#0042,2018-09-07,But that can have issues if you're getting the data at runtime and not compile time,,
4.48827E+17,donderdag#4004,2018-09-07,^,,
1.89169E+17,srasu#0042,2018-09-07,"All in all, the only solution that isn't extremely dependant on how `select` is implemented is the `eval` solution.",,
1.89169E+17,srasu#0042,2018-09-07,"If you're intending to be procedurally generating the queries from input though, you might want to look into what `select` expands to and use the more basic parts, considering that `select` is most likely designed for user friendliness and not necessarily composability.",,
4.48827E+17,donderdag#4004,2018-09-07,"if you're lucky, korma may have a public or private function helper for that select macro you can use",,
4.48827E+17,donderdag#4004,2018-09-07,you beat me to it suskey,,
1.89169E+17,srasu#0042,2018-09-07,"Lol, I tend to do that a lot with my typing speed. :P",,
4.24726E+17,will#9610,2018-09-07,"Oups run out of battery, i was wrong it doesn't come from user input, so i will go with eval",,
4.48827E+17,donderdag#4004,2018-09-07,"if you do `(source select)` in a REPL, you can see whether it uses a function internally to do the real work",,
4.24726E+17,will#9610,2018-09-07,oh ok nice,,
4.48827E+17,donderdag#4004,2018-09-07,"yep, looks like the `select` macro uses a function called `select*` along with `exec`",,
1.89169E+17,srasu#0042,2018-09-07,"Yes, that's a good way to do it. One thing to keep in mind though is that if it comes from disk on a machine that you don't have full control over, you pretty much have to consider data you write yourself as user input since those could be modified by other users of the machine whether local or remote and cause malicious behavior in your program if you eval anything from disk.",,
4.24726E+17,will#9610,2018-09-07,Yes i tried to inspect but without success at the moment :p,,
4.48827E+17,donderdag#4004,2018-09-07,i found the source on github: https://github.com/korma/Korma/blob/master/src/korma/core.clj#L113-L121,,
4.48827E+17,donderdag#4004,2018-09-07,"so, internally, all the macro does is build a query with `select*`, then pass it to `exec`",,
4.48827E+17,donderdag#4004,2018-09-07,so you can use `apply` with `select*`,,
4.24726E+17,will#9610,2018-09-07,oh ok i will try,,
1.89169E+17,srasu#0042,2018-09-07,That would be the best option I think,,
1.89169E+17,srasu#0042,2018-09-07,"Since most times top-level macros are built so that you can use them easily, but since they don't compose well it's best to make sure the pieces they are built from are themselves available and composable",,
1.89169E+17,srasu#0042,2018-09-07,"It's also interesting how in the Korma code they grab the var for select* and pass that, not just the function select*",,
4.48827E+17,donderdag#4004,2018-09-07,"yeah, that's curious",,
2.72791E+17,fidel cashflow#4956,2018-09-07,:\),,
1.89169E+17,srasu#0042,2018-09-07,"This is why the way that I think about things, and this is something most clearly voiced by Casey Muratori I think, is that for every abstraction it should be easy to reach down and use a lower-level abstraction, and then come back up to the higher level, all without having to restructure. Abstractions should be in clear and interchangable layers so that you never lose power by using a library.",,👍🏼 (3)
4.48827E+17,donderdag#4004,2018-09-07,"@will here's how you can do this kind of investigation from the comfort of your REPL (ignore the `boot -d korma` stuff, that's just me downloading korma locally): https://gist.github.com/sundarj/5f0ac7e9784e60f6673e8cc4a1f48ce9",,
4.24726E+17,will#9610,2018-09-07,"Eh eh nice to see, but in my usage i inspect source directly within emacs, i mostly do buffer driven dev 😛",,
4.48827E+17,donderdag#4004,2018-09-07,"oh, fair enough. that works also",,
1.89169E+17,srasu#0042,2018-09-07,Booting up a repl and having cider's go to definition is amazing for that.,,
4.24726E+17,will#9610,2018-09-07,Yes that is awesome,,
4.48827E+17,donderdag#4004,2018-09-07,i'm very basic in my workflow for now,,
2.72791E+17,fidel cashflow#4956,2018-09-07,im having some trouble getting seesaw to work how I want,,
2.72791E+17,fidel cashflow#4956,2018-09-07,what is the seesaw equivelant of Qt,,
2.72791E+17,fidel cashflow#4956,2018-09-07,qt's widgets*,,
2.72791E+17,fidel cashflow#4956,2018-09-07,"do I create a widget, give it a layout, and add otehr widgets to it, or is there a different way of doing stuff",,
1.89169E+17,srasu#0042,2018-09-07,Seesaw has some absolutely amazing documentation. How much of it have you checked out yet?,,
2.72791E+17,fidel cashflow#4956,2018-09-07,"very little, I dont know what to look for",,
1.89169E+17,srasu#0042,2018-09-07,https://github.com/daveray/seesaw/wiki,,
1.89169E+17,srasu#0042,2018-09-07,"Here's the base wiki for it, and it has links to everything that's relevant.",,
2.72791E+17,fidel cashflow#4956,2018-09-07,"i get it, i just dont understand what stuff is",,
2.72791E+17,fidel cashflow#4956,2018-09-07,like the Qt docs have a list of widgets,,
1.89169E+17,srasu#0042,2018-09-07,What are widgets in Qt? Just bits of UI that get rendered and might have events?,,
2.72791E+17,fidel cashflow#4956,2018-09-07,yeah basically,,
2.72791E+17,fidel cashflow#4956,2018-09-07,"the basic ""widget"" takes a string and displays it, there are also widgets like buttons, inputs, and boxes. You can subclass any widget to make your own with custom behavior",,
1.89169E+17,srasu#0042,2018-09-07,"Okay, so the terminology is the same as seesaw's ""widget"", which are the same as Swing's components. If you look at the widget page in the seesaw documentation it tells you a decent bit about them.",,
1.89169E+17,srasu#0042,2018-09-07,"If you want to have multiple things in a single area, like a panel or something, then that's seesaw's ""containers"" which also have a page",,
2.72791E+17,fidel cashflow#4956,2018-09-07,are containers just widgets with special behavior like in qt,,
1.89169E+17,srasu#0042,2018-09-07,"Not entirely sure what you're asking since I don't know how Qt works. Containers are just what they sound like though, they contain widgets.",,
2.72791E+17,fidel cashflow#4956,2018-09-07,ok,,
2.72791E+17,fidel cashflow#4956,2018-09-07,"i kidna like how everything in qt is just an abstraction of the base widget, kinda like how waylands does compositing, instead of x's defined ""bar"", ""window"", etc",,
1.89169E+17,srasu#0042,2018-09-07,"Also here is full reference documentation:
http://daveray.github.io/seesaw/",,
2.72791E+17,fidel cashflow#4956,2018-09-07,*is that javadoc?*,,
1.89169E+17,srasu#0042,2018-09-07,And that's fair. Honestly it's been a while since I've done GUI programming outside of UI stuff in an OpenGL game engine,,
1.89169E+17,srasu#0042,2018-09-07,"No, not javadoc.",,
2.72791E+17,fidel cashflow#4956,2018-09-07,*looks kinda like javadoc*,,
1.89169E+17,srasu#0042,2018-09-07,But the clojure equivalent,,
2.72791E+17,fidel cashflow#4956,2018-09-07,can you help me figure out how to install parinfer?,,
1.89169E+17,srasu#0042,2018-09-07,"What it does is it goes through and enumerates namespaces and vars in the namespaces, and then attaches their doc strings to them and displays it in hyperlinked format. So it's the Clojure equivalent to javadoc.",,
2.72791E+17,fidel cashflow#4956,2018-09-07,im not sure where to put the specified code,,
1.89169E+17,srasu#0042,2018-09-07,"Sure, I can try to help you with that",,
2.72791E+17,fidel cashflow#4956,2018-09-07,im just not sure what to do,,
1.89169E+17,srasu#0042,2018-09-07,"Wait, there might just be a parinfer layer you can add",,
1.89169E+17,srasu#0042,2018-09-07,as in by default,,
2.72791E+17,fidel cashflow#4956,2018-09-07,cool,,
2.72791E+17,fidel cashflow#4956,2018-09-07,where's the config file for that,,
1.89169E+17,srasu#0042,2018-09-07,"So if you go to your .spacemacs file (should be in the same directory as .emacs.d) and open it with a text editor (can do it straight from spacemacs by pressing `SPC f e d`), then go to the `dotspacemacs/layers` function, and add `parinfer` to the list called `dotspacemacs-configuration-layers` in the `setq-default`.",,
2.72791E+17,fidel cashflow#4956,2018-09-07,Neat!,,
2.72791E+17,fidel cashflow#4956,2018-09-07,And is theming a thing?,,
1.89169E+17,srasu#0042,2018-09-07,"Yes, theming is a thing",,
1.89169E+17,srasu#0042,2018-09-07,just press `SPC SPC helm-themes RET` and then search for one you like,,
2.72791E+17,fidel cashflow#4956,2018-09-07,syntax highlighting isnt working,,
1.89169E+17,srasu#0042,2018-09-07,how do you mean? Are you in the correct mode for the file you're in?,,
2.72791E+17,fidel cashflow#4956,2018-09-07,idk,,
2.72791E+17,fidel cashflow#4956,2018-09-07,im in a clojure file,,
2.72791E+17,fidel cashflow#4956,2018-09-07,its not highlighted,,
1.89169E+17,srasu#0042,2018-09-07,"Are you also in Clojure mode? Probably not. You should probably make sure `clojure` is another layer in the layers list, and then restart emacs. Then go to the file again",,
2.72791E+17,fidel cashflow#4956,2018-09-07,its enabled,,
1.89169E+17,srasu#0042,2018-09-07,"Alright, then once you're in the clojure file again, check on the modeline, it should tell you if you're in Clojure mode, Fundamental mode, Text mode, etc",,
2.72791E+17,fidel cashflow#4956,2018-09-07,wait how can I show a file tree,,
2.72791E+17,fidel cashflow#4956,2018-09-07,its SPC f o in spacevim,,
1.89169E+17,srasu#0042,2018-09-07,"if you want something like nerdtree, then it's `SPC f t`
If you want to open a file, then `SPC f f`",,
2.72791E+17,fidel cashflow#4956,2018-09-07,ok :\),,
2.72791E+17,fidel cashflow#4956,2018-09-07,"I added the parinfer layer, how can I check if it works",,
2.72791E+17,fidel cashflow#4956,2018-09-07,"also I love this, i have sexy rainbow parens by default",,
1.89169E+17,srasu#0042,2018-09-07,use it. Which best way to do that is to write a simple clojure form and then use tab and shift tab to move it about and see how it modifies the placement of the parens,,
2.72791E+17,fidel cashflow#4956,2018-09-07,ok,,
1.89169E+17,srasu#0042,2018-09-07,"If parinfer stuff isn't enabled by default, you may have to use `SPC SPC` to search for a couple commands, namely `parinfer-mode`, to turn on parinfer, and `parinfer-toggle-mode`, to make it change to the correct mode of handling parens",,
2.72791E+17,fidel cashflow#4956,2018-09-07,cool,,
2.72791E+17,fidel cashflow#4956,2018-09-07,"can I make the cursor be a vertical bar when in edit mode, and a box while in insert mode?",,
1.89169E+17,srasu#0042,2018-09-07,"Wait, you want it to be the opposite of normal vim?",,
2.72791E+17,fidel cashflow#4956,2018-09-07,?,,
2.72791E+17,fidel cashflow#4956,2018-09-07,"spacevim (what im used to) does | for insert, box for control",,
2.72791E+17,fidel cashflow#4956,2018-09-07,i keep accidentally inserting stuff,,
1.89169E+17,srasu#0042,2018-09-07,"Yeah, vim uses a box for normal mode, and a bar for insert. Same as spacemacs.",,
2.72791E+17,fidel cashflow#4956,2018-09-07,"oh i see the confusiong, i said the wront thing",,
2.72791E+17,fidel cashflow#4956,2018-09-07,spacemacs is using a box for insert rightnow,,
1.89169E+17,srasu#0042,2018-09-07,"Oh, really? I mean that's normal in emacs, but if you have evil enabled it should be like vim",,
2.72791E+17,fidel cashflow#4956,2018-09-07,straange,,
2.72791E+17,fidel cashflow#4956,2018-09-07,yeah normal vim uses all box,,
1.89169E+17,srasu#0042,2018-09-07,"True, in terminal it does.",,
2.72791E+17,fidel cashflow#4956,2018-09-07,as opposed to what,,
1.89169E+17,srasu#0042,2018-09-07,gvim has a bar in insert mode,,
2.72791E+17,fidel cashflow#4956,2018-09-07,gvim?,,
1.89169E+17,srasu#0042,2018-09-07,"yeah, that's the graphical vim.",,
2.72791E+17,fidel cashflow#4956,2018-09-07,why do people use GUIs for editors like that,,
1.89169E+17,srasu#0042,2018-09-07,A few reasons. Probably the primary ones are familiarity and the OS clipboard,,
2.72791E+17,fidel cashflow#4956,2018-09-07,the os clipboard is very useful,,
4.48827E+17,donderdag#4004,2018-09-07,"emacs has a TUI as well, but i always use the GUI :p",,
2.72791E+17,fidel cashflow#4956,2018-09-07,i always use the tui,,
2.72791E+17,fidel cashflow#4956,2018-09-07,by that i mean the 3 times ive used emacs,,
1.89169E+17,srasu#0042,2018-09-07,I'd honestly recommend using the emacs GUI version with a daemon,,
2.72791E+17,fidel cashflow#4956,2018-09-07,yeah,,
2.72791E+17,fidel cashflow#4956,2018-09-07,but the rendering  is broken in it,,
1.89169E+17,srasu#0042,2018-09-07,OS keyboard and extra hotkey support makes it way better,,
1.89169E+17,srasu#0042,2018-09-07,Really?,,
1.89169E+17,srasu#0042,2018-09-07,How's that?,,
2.72791E+17,fidel cashflow#4956,2018-09-07,all the unicode missing char boxes,,
1.89169E+17,srasu#0042,2018-09-07,That has more to do with which font family you're using and which fonts you have installed than anything else,,
2.72791E+17,fidel cashflow#4956,2018-09-07,how do i set font in the gui,,
1.89169E+17,srasu#0042,2018-09-07,"I mean if you use default spacemacs it'll need a different font than you normally use too, namely adobe's Source Code Pro font family is the default in spacemacs",,
1.89169E+17,srasu#0042,2018-09-07,In spacemacs there's a section in the .spacemacs file which sets the default font size and family. Just change that.,,
2.72791E+17,fidel cashflow#4956,2018-09-07,what i should chainge it to?,,
2.72791E+17,fidel cashflow#4956,2018-09-07,a full unicode font?,,
2.72791E+17,fidel cashflow#4956,2018-09-07,arial is the only 100% unicode ofnt I have,,
2.72791E+17,fidel cashflow#4956,2018-09-07,ded,https://cdn.discordapp.com/attachments/315388260987830272/487762859200348160/emacs-ded.png,
1.89169E+17,srasu#0042,2018-09-07,0.o,,
2.72791E+17,fidel cashflow#4956,2018-09-07,"ironically, the powerline symbols render",,
1.89169E+17,srasu#0042,2018-09-07,That's not just missing unicode,,
1.89169E+17,srasu#0042,2018-09-07,No idea wtf is going on with that. But if you set the font family to something you have that might help.,,
1.89169E+17,srasu#0042,2018-09-07,That whole front page by the way is mostly ascii.,,
2.72791E+17,fidel cashflow#4956,2018-09-07,i cant,,
2.72791E+17,fidel cashflow#4956,2018-09-07,well im sure i can,,
2.72791E+17,fidel cashflow#4956,2018-09-07,i just dont know how,,
1.89169E+17,srasu#0042,2018-09-07,I mean from terminal you can. With whatever editor you normally use. It's in the .spacemacs file,,
1.89169E+17,srasu#0042,2018-09-07,just search for `Source Code Pro` and you'll find the right line,,
2.72791E+17,fidel cashflow#4956,2018-09-07,"this is a 300 line file, how do i search in spacemacs",,
1.89169E+17,srasu#0042,2018-09-07,Same as vim. `/` starts a search forward through the document,,
2.72791E+17,fidel cashflow#4956,2018-09-07,yeah that was it,,
2.72791E+17,fidel cashflow#4956,2018-09-07,what's the most efficient way to remove all duplicates from a lis,,
2.18602E+17,lsenjov#4288,2018-09-07,`distinct`,,
2.18602E+17,lsenjov#4288,2018-09-07,https://clojuredocs.org/clojure.core/distinct,,
2.18602E+17,lsenjov#4288,2018-09-07,"If you don't care about ordering, you can also use `set`",,
1.89169E+17,srasu#0042,2018-09-07,or call `set` on it,,
1.89169E+17,srasu#0042,2018-09-07,"yeah, you edited it for that",,
2.18602E+17,lsenjov#4288,2018-09-07,"Yeah, I realised that was a thing",,
1.89169E+17,srasu#0042,2018-09-07,"Distinct is more useful if you care about ordering, and if you want a transducer for it",,
4.48827E+17,donderdag#4004,2018-09-07,the transducer is `dedupe` i think,,
4.48827E+17,donderdag#4004,2018-09-07,oh wait no that's something else,,
1.89169E+17,srasu#0042,2018-09-07,"yeah, dedupe is different",,
1.89169E+17,srasu#0042,2018-09-07,you just call `(distinct)` which gets you a stateful transducer,,
4.48827E+17,donderdag#4004,2018-09-07,right,,
2.72791E+17,fidel cashflow#4956,2018-09-07,"I want to find all unique words in a string, how can I split the string at each whitespace, so far I tried `(str/split ""string! this is longer in the code"" #"" "")`",,
1.89169E+17,srasu#0042,2018-09-07,"Have to say, I really like transducers. I haven't had anywhere in particular to apply them yet, but they're amazing",,
4.48827E+17,donderdag#4004,2018-09-07,they really are great,,
4.48827E+17,donderdag#4004,2018-09-07,"and you can pretty easily implement them in any language, which is sweet",,
2.18602E+17,lsenjov#4288,2018-09-07,"I think whitespace is `#""\\w+""`?",,
1.89169E+17,srasu#0042,2018-09-07,"well, any language with closures",,
2.18602E+17,lsenjov#4288,2018-09-07,"Hold on, let me look it up",,
2.18602E+17,lsenjov#4288,2018-09-07,"Oh right `#""\\s+""`",,
4.48827E+17,donderdag#4004,2018-09-07,i feel for the people using languages without closures,,
2.18602E+17,lsenjov#4288,2018-09-07,"@fidel cashflow `(clojure.string/split ""Test string    here  tab"" #""\s+"")`",,
1.89169E+17,srasu#0042,2018-09-07,Yeah. It's cool that you can implement them in C though with assembly,,
2.18602E+17,lsenjov#4288,2018-09-07,"Spits out `[""Test"" ""string"" ""here"" ""tab""]`",,
4.48827E+17,donderdag#4004,2018-09-07,oh really? neat,,
1.89169E+17,srasu#0042,2018-09-07,https://nullprogram.com/blog/2017/01/08/,,👍🏼 (1)
1.89169E+17,srasu#0042,2018-09-07,"It's platform-specific, but it can be done",,
4.48827E+17,donderdag#4004,2018-09-07,fair,,
2.72791E+17,fidel cashflow#4956,2018-09-07,mk,,
3.46868E+17,djeis#0042,2018-09-07,GNU C has stack-allocated closures.,,
1.25252E+17,sokrato#5896,2018-09-08,What can we expect in Clojure 2? What features/improvements will it have?,,
1.89169E+17,srasu#0042,2018-09-08,"Considering the semantic versioning scheme and Rich's views on backwards compatibility, never. :P",,
1.89169E+17,srasu#0042,2018-09-08,Clojure 1.10 has better error messages though,,
1.25252E+17,sokrato#5896,2018-09-08,"Oh, it will be 1.10?",,
1.25252E+17,sokrato#5896,2018-09-08,I thought it will be 2.0,,
1.25252E+17,sokrato#5896,2018-09-08,"So, what can I expect of 1.10?",,
1.25252E+17,sokrato#5896,2018-09-08,"Better error messages are great, btw",,
1.89169E+17,srasu#0042,2018-09-08,"Better error meshes, a new repl type called a prepl, dropped support for Java 7 and older, more specs, and lots of fixes have all been added in the alphas so far",,
2.72791E+17,fidel cashflow#4956,2018-09-08,"can I get some help with this? Trying to make a split with seesaw, get this error
```diff
- Exception in thread ""main"" java.lang.ClassCastException: seesaw.core.proxy$javax.swing.JSplitPane$Tag$fd407141 cannot be cast to clojure.lang.IFn, compiling:(/tmp/form-init6744427302022479518.clj:1:73)
```",,
1.89169E+17,srasu#0042,2018-09-08,Somewhere you're calling one of your components as a function.,,
2.72791E+17,fidel cashflow#4956,2018-09-08,"relevant clojure:
```clj
(def left-panel (flow-panel
                   :align :left
                   :hgap 20
                   :items [
                           messages
                           ]))
  (def messages-panel (flow-panel
                       :align :left
                       :hgap 20
                       :items [
                               messages
                               ]))
  (def split (left-right-split (scrollable left-panel) (scrollable messages-panel)
                               :divider-location 1/3))
```",,
2.72791E+17,fidel cashflow#4956,2018-09-08,messages is a valid seesaw element,,
2.72791E+17,fidel cashflow#4956,2018-09-08,ahh wiat i got it,,
2.72791E+17,fidel cashflow#4956,2018-09-08,i was doing (display (split)),,
2.72791E+17,fidel cashflow#4956,2018-09-08,instead of (display split),,
1.89169E+17,srasu#0042,2018-09-08,"clojure.lang.IFn is the interface for a clojure function. Clojure functions are classes which implement IFn. Currently you must somewhere have a JSplitPane called as a function, and since that class doesn't implement clojure.lang.IFn it doesn't work",,
1.89169E+17,srasu#0042,2018-09-08,"Yup, that's it",,
2.72791E+17,fidel cashflow#4956,2018-09-08,thanks!,,
1.89169E+17,srasu#0042,2018-09-08,No problem!,,
2.72791E+17,fidel cashflow#4956,2018-09-08,how does list mapping work?,,
1.89169E+17,srasu#0042,2018-09-08,what do you mean list mapping?,,
2.72791E+17,fidel cashflow#4956,2018-09-08,"like, for every element in teh list, multiply it by two, and put it back in it's respective position in a new list",,
4.48827E+17,donderdag#4004,2018-09-08,two options: use the `map` function: `(map (fn [x] (* x 2)) (range 1 6))` or use the `for` loop comprehension: `(for [x (range 1 6)] (* x 2))`,,
1.89169E+17,srasu#0042,2018-09-08,"Oh, you mean the `map` function. It works on anything that is considered `seqable?` so I wasn't immediately thinking of that when you specified lists.",,
1.89169E+17,srasu#0042,2018-09-08,"But yes, the `map` function takes a function, and then one collection per argument that the function passed to map takes.",,
2.72791E+17,fidel cashflow#4956,2018-09-08,Neat,,
2.72791E+17,fidel cashflow#4956,2018-09-08,That shall be quite useful.,,
1.89169E+17,srasu#0042,2018-09-08,"So you could just as easily do this to multiply things by 2:
```clojure
(map * (range 1 11) (repeat 2))
;; => (2 4 6 8 10 12 14 16 18 20)
```",,
4.48827E+17,donderdag#4004,2018-09-08,here's an equivalent to Python's `enumerate`: `(map vector (range) [:x :y :z])` (or use `(map-indexed vector [:x :y :z])`),,
1.89169E+17,srasu#0042,2018-09-08,"`(range 1 11)` gets the list of numbers from 1 to 10 inclusive, and `(repeat 2)` gives you an infinite lazy-seq of the number 2",,
1.89169E+17,srasu#0042,2018-09-08,So it takes one element from each sequence until one sequence is exhausted,,
4.48827E+17,donderdag#4004,2018-09-08,`map` in Clojure is basically `map` + `zip` from Python,,
2.72791E+17,fidel cashflow#4956,2018-09-08,"Swing looks awful, how can I make it better",,
2.72791E+17,fidel cashflow#4956,2018-09-08,Are there themes for it I can use?,,
2.72791E+17,fidel cashflow#4956,2018-09-08,"It doesn’t need to look native, just needs to not look like java",,
1.89169E+17,srasu#0042,2018-09-08,"I mean first off you can use `(native!)` to make all the components you make later look like their native counterparts. But yes, there are also theming libraries, plus libraries of widgets which hopefully don't look awful. The sad thing though is that there isn't really any good option that I've seen for making things look good on the desktop. And I don't just mean in Clojure either, I mean at all. All we have is electron and doing things from scratch yourself, and neither one is the best.",,
1.89169E+17,srasu#0042,2018-09-08,"But to answer the question, yes, there are things you can do with swing that make it look a hell of a lot better",,
1.89169E+17,srasu#0042,2018-09-08,"This guy has good examples of how to make Swing look good though:
https://www.youtube.com/watch?v=ZegZxFwgTYs",,
2.72791E+17,fidel cashflow#4956,2018-09-08,Damn that looks awesome!,,
1.89169E+17,srasu#0042,2018-09-08,Yeah he does a good job.,,
2.72791E+17,fidel cashflow#4956,2018-09-08,Hoow much work is it though”?,,
2.72791E+17,fidel cashflow#4956,2018-09-08,"i could whip that up in 20 minutes in electron, would it take significantly longer with seesaw?",,
2.72791E+17,fidel cashflow#4956,2018-09-08,"Oh he’s using some UI designer program, is that possible on linux with clojure",,
1.89169E+17,srasu#0042,2018-09-08,"If you look at the seesaw documentation, they have a way to use a frame builder with it",,
1.89169E+17,srasu#0042,2018-09-08,"But be aware, all the frame builder does (and this is true of NetBeans' frame builder too) is generate code which will initialize all the components to the values you tweak visually using the frame builder.",,
1.89169E+17,srasu#0042,2018-09-08,"The unfortunate part is that the code they generate is Java. But in Clojure land that doesn't matter much, especially with seesaw, because you can interoperate very easily, and seesaw gives you a way to take a pre-built frame and use it as a widget in seesaw",,
2.72791E+17,fidel cashflow#4956,2018-09-08,Thaa,,
2.72791E+17,fidel cashflow#4956,2018-09-08,"that seems awfully convoluted, I dont wysiwyg ui editors, would it be possible to use a theme as you mentioend to make it all with code?",,
1.89169E+17,srasu#0042,2018-09-08,"You can use themes, but they don't get this high of quality of results, moreover yes, you can do all of this with code pretty easily with the same or better results than him, it just involves it being a bit fiddley, because you'll have to configure a lot about each widget (which is slightly harder without having a UI to do so, but isn't too bad if you have a repl). But that's standard fare with UI stuff. Not to mention you could create config maps which you pass to the `config!` function from seesaw to get basically theming as well.",,
1.89169E+17,srasu#0042,2018-09-08,"But no matter what you do, from the web to desktop to mobile, programming good looking UI is hell because it's fiddley as all get out, and theming will never get you all the way there, regardless of platform or language.",,
2.72791E+17,fidel cashflow#4956,2018-09-08,Web is pretty easy,,
1.89169E+17,srasu#0042,2018-09-08,"Still though, I'd recommend looking into the frame builder option that seesaw mentions, that way you can graphically design the frame and it will work from within clojure.",,
2.72791E+17,fidel cashflow#4956,2018-09-08,"dispite having to write thousands of lines of css to get a good, working design for in house stuff",,
1.89169E+17,srasu#0042,2018-09-08,"That's my point though. Those thousands of lines of CSS are not free, and you have to do equivalent work in any other setting.",,
1.89169E+17,srasu#0042,2018-09-08,The only reason that web is easy is because we've made default packages of those available under things like wix and squarespace and wordpress,,
2.72791E+17,fidel cashflow#4956,2018-09-08,And bootstrap is a thing,,
1.89169E+17,srasu#0042,2018-09-08,"sure, but that's kind of my point. Outside of web technologies we don't have really good frameworks for making modern, good-looking UI's because everything's been moving to the web. But now as people are trying to move some things back to local, they're hauling the whole web world with them, which is why we have things like electron. What would be really good though is if we could just get good UI on desktop natively.",,
1.89169E+17,srasu#0042,2018-09-08,Or in context of .NET or Java,,
2.72791E+17,fidel cashflow#4956,2018-09-08,Tru,,
2.72791E+17,fidel cashflow#4956,2018-09-08,i wonder why nobody is working on that,,
2.72791E+17,fidel cashflow#4956,2018-09-08,or maybe they are,,
2.72791E+17,fidel cashflow#4956,2018-09-08,"if microsoft made a cross platfrom, modern ui library for .net im sure it would be popular",,
1.89169E+17,srasu#0042,2018-09-08,I have never seen a good UI library for a desktop environment that looks decent by default.,,
2.72791E+17,fidel cashflow#4956,2018-09-08,"https://github.com/kirill-grouchnikov/radiance This looks pretty good, how would I use this with seesaw?",,
2.72791E+17,fidel cashflow#4956,2018-09-08,Well at least i kinda like that design,,
1.89169E+17,srasu#0042,2018-09-08,"Call the constructors for the various swing components it provides, and follow seesaw documentation to register them to your seesaw frame.",,
4.48827E+17,donderdag#4004,2018-09-08,the seesaw wiki actually links to an older version (fork?) of that library: https://github.com/daveray/seesaw/wiki#i-think-swing-looks-like--what-can-i-do-about-that,,
1.89169E+17,srasu#0042,2018-09-08,"oh, cool",,
1.89169E+17,srasu#0042,2018-09-08,"anyway, `listen` and `config!` should work just fine with default swing components",,
2.72791E+17,fidel cashflow#4956,2018-09-08,"So... im still confused about using it, sorry, in the example proided by @donderdag, they specify substance in the :model, would I have to do that for every widget?",,
1.89169E+17,srasu#0042,2018-09-08,I'm not sure. It's been over a year since I used seesaw myself.,,
2.72791E+17,fidel cashflow#4956,2018-09-08,Ok,,
2.72791E+17,fidel cashflow#4956,2018-09-08,thank yoiu,,
4.48827E+17,donderdag#4004,2018-09-08,"try this http://insubstantial.github.io/insubstantial/substance/docs/getting-started.html
http://insubstantial.github.io/insubstantial/substance/learn.html",,
2.72791E+17,fidel cashflow#4956,2018-09-09,"Inspired by what suskeyhose said, I want to try making a simple ui library in clojure, does clojure have a defacto library for drawing shapes and images to a window?",,
3.46868E+17,djeis#0042,2018-09-09,"You could probably put something together using Quil, although I don't really know if it's a good idea to use that for something at the level of a full UI lib.",,
2.72791E+17,fidel cashflow#4956,2018-09-09,"Im not truing to make it fully functionalk, i just want to make an easy and good looking way to add text, buttons, and maybe input boxes if that is not too difficult",,
3.46868E+17,djeis#0042,2018-09-09,"Well, quil will give you a rendering system and a simple event system, and you can build UI atop that.",,
2.72791E+17,fidel cashflow#4956,2018-09-09,Great!,,
3.46868E+17,djeis#0042,2018-09-09,If you've ever used Processing it's a similar system.,,
3.46868E+17,djeis#0042,2018-09-09,Just built for clojure instead of pretending it isn't java lol,,
2.72791E+17,fidel cashflow#4956,2018-09-09,Neat,,
2.72791E+17,fidel cashflow#4956,2018-09-09,can it handle stuff like gradients and shadows?,,
3.46868E+17,djeis#0042,2018-09-09,"You know, I'm not actually sure.",,
2.72791E+17,fidel cashflow#4956,2018-09-09,Ok,,
3.46868E+17,djeis#0042,2018-09-09,"I've used processing itself to build simple GUIs, and I've tinkered with Quil and it seemed like a decent port/wrapper, but I never actually needed either of those things 😅",,
2.72791E+17,fidel cashflow#4956,2018-09-09,I see,,
2.72791E+17,fidel cashflow#4956,2018-09-09,"i wrote processing exactly once in my life, and it was to make a graph out of data i was collecting from a raspberry pi.",,
3.46868E+17,djeis#0042,2018-09-09,"Quil is a bit nicer of an API, imo, if only because some work was put in to make it feel natural in clojure.",,
3.46868E+17,djeis#0042,2018-09-09,"Things like `with-` macros for safely changing the state of the renderer, etc.",,
2.72791E+17,fidel cashflow#4956,2018-09-09,Thats nice,,
2.72791E+17,fidel cashflow#4956,2018-09-09,"so, my goal is for it to be able to handle stuff like button clicks, would I have to do some math to figure out if the x y coords of the click are inside the “button”?",,
3.46868E+17,djeis#0042,2018-09-09,"Yeah, although that's not terribly tricky.",,
3.46868E+17,djeis#0042,2018-09-09,Just bounds checking 🤷,,
2.72791E+17,fidel cashflow#4956,2018-09-09,It might get tricky with handling a bunch of clicks on different items,,
3.46868E+17,djeis#0042,2018-09-09,`minx <= mousex <= maxx and miny <= mousey <= maxy`,,
2.72791E+17,fidel cashflow#4956,2018-09-09,"So id do that for every “widget”, then call the action of the first match",,
3.46868E+17,djeis#0042,2018-09-09,You can package up buttons with their size and have a util that checks if the mouse is inside one.,,
3.46868E+17,djeis#0042,2018-09-09,"Yeah, pretty much.",,
2.72791E+17,fidel cashflow#4956,2018-09-09,is font rendering a thing?,,
3.46868E+17,djeis#0042,2018-09-09,Yes.,,
3.46868E+17,djeis#0042,2018-09-09,It has a whole system for managing text.,,
2.72791E+17,fidel cashflow#4956,2018-09-09,"Ok, i was worried i’d have to write a font renderer and anti-aliaser",,
3.46868E+17,djeis#0042,2018-09-09,"No, that itself is handled for you 😅",,
2.72791E+17,fidel cashflow#4956,2018-09-09,That’s way over my pay grade,,
2.72791E+17,fidel cashflow#4956,2018-09-09,Which is nothing,,
3.46868E+17,djeis#0042,2018-09-09,"Yeah, I wouldn't want to deal with that either lol",,
2.72791E+17,fidel cashflow#4956,2018-09-09,Is ttf easy to parse?,,
2.72791E+17,fidel cashflow#4956,2018-09-09,"i can concievably see writing a svg renderer, but all the bezier calculation would be hard",,
3.46868E+17,djeis#0042,2018-09-09,"Honestly I don't really know, I've never tried parsing it.",,
2.72791E+17,fidel cashflow#4956,2018-09-09,"Im looking into pencil too, it seems like it might fit my needs better",,
4.48827E+17,donderdag#4004,2018-09-09,"`minx <= mousex <= maxx and miny <= mousey <= maxy` is `(and (<= minx mousex maxx) (<= miny mousey maxy))` in Clojure, which is neat",,
3.46868E+17,djeis#0042,2018-09-09,This is true.,,
3.46868E+17,djeis#0042,2018-09-09,I wrote it python-style without even thinking about it lol,,
3.46868E+17,djeis#0042,2018-09-09,Which is a lang completely unrelated to our discussion.,,
2.72791E+17,fidel cashflow#4956,2018-09-09,Yep,,
4.48827E+17,donderdag#4004,2018-09-09,python's approach to it is nice as well,,
2.72791E+17,fidel cashflow#4956,2018-09-09,Ive grown fond of polish notation,,
3.46868E+17,djeis#0042,2018-09-09,Yeah normally I'd have gone straight there lol,,
3.46868E+17,djeis#0042,2018-09-09,I think I need some sleep...,,
4.48827E+17,donderdag#4004,2018-09-09,infix for arithemtic is pretty ingrained,,
3.46868E+17,djeis#0042,2018-09-09,Yeah... Guess that shows when I'm tired.,,
3.46868E+17,djeis#0042,2018-09-09,"After so many years of lisp you'd think I'd have beaten it out of me by now, but I'm too much of a polyglot I suppose 😅",,
2.72791E+17,fidel cashflow#4956,2018-09-09,Does python have a polish notation function for arithmetic?,,
3.46868E+17,djeis#0042,2018-09-09,Not that I know of.,,
2.72791E+17,fidel cashflow#4956,2018-09-09,shame,,
2.72791E+17,fidel cashflow#4956,2018-09-09,i shall make one,,
3.46868E+17,djeis#0042,2018-09-09,"Well, there's `hy`",,
4.48827E+17,donderdag#4004,2018-09-09,"`lambda x, y: x + y` :p",,
3.46868E+17,djeis#0042,2018-09-09,But that's more like a polish notation for the language lol,,
2.72791E+17,fidel cashflow#4956,2018-09-09,No the power of polish otation is being able to perform the same calculation on any finite number of things without writing the sign a dozen times,,
3.46868E+17,djeis#0042,2018-09-09,And throwing away operator precedence rules 😅,,
2.72791E+17,fidel cashflow#4956,2018-09-09,(+ 3 983 3 84 2) is easier 3+983+3+84+2,,
2.72791E+17,fidel cashflow#4956,2018-09-09,who needs order of operations?,,
3.46868E+17,djeis#0042,2018-09-09,"Which I consider a win as soon as you're past pemdas, and even then.",,
2.72791E+17,fidel cashflow#4956,2018-09-09,"it makes more sense to explicitly state what you want to do, the lisp way, than relying on some rules to define it for you",,
3.46868E+17,djeis#0042,2018-09-09,😁,,
3.46868E+17,djeis#0042,2018-09-09,"Anyway, so if you really want lisp in your python, you could try `hy`.",,
4.48827E+17,donderdag#4004,2018-09-09,"Hy has python interop too, which is cool",,
2.72791E+17,fidel cashflow#4956,2018-09-09,What does hy do,,
4.48827E+17,donderdag#4004,2018-09-09,http://hylang.org/,,
2.72791E+17,fidel cashflow#4956,2018-09-09,lisp function notation?,,
3.46868E+17,djeis#0042,2018-09-09,Yeah.,,
3.46868E+17,djeis#0042,2018-09-09,And macros.,,
3.46868E+17,djeis#0042,2018-09-09,"Its `let` form is weird tho, because python lacks a notion of block scope.",,
2.72791E+17,fidel cashflow#4956,2018-09-09,Now that is cool,,
3.46868E+17,djeis#0042,2018-09-09,But otherwise it's nice.,,
2.72791E+17,fidel cashflow#4956,2018-09-09,"for let, it could put everything in a lambda, and pass the value to it, that would scope it would it not?",,
3.46868E+17,djeis#0042,2018-09-09,Nope.,,
2.72791E+17,fidel cashflow#4956,2018-09-09,whyn’t,,
3.46868E+17,djeis#0042,2018-09-09,The `yield` statement.,,
3.46868E+17,djeis#0042,2018-09-09,It changes the enclosing function into a generator.,,
2.72791E+17,fidel cashflow#4956,2018-09-09,*statement*,,
2.72791E+17,fidel cashflow#4956,2018-09-09,*what about a **function***,,
3.46868E+17,djeis#0042,2018-09-09,"Well, it's an expression in `hy`.",,
3.46868E+17,djeis#0042,2018-09-09,But that's not the point.,,
3.46868E+17,djeis#0042,2018-09-09,When you use `yield` it changes the enclosing function into a generator.,,
2.72791E+17,fidel cashflow#4956,2018-09-09,djeils where can I get myself a lambda profile picture to show everyone im a hip functional programmer,,
3.46868E+17,djeis#0042,2018-09-09,I made mine in emacs lol,,
2.72791E+17,fidel cashflow#4956,2018-09-09,wot wot,,
2.72791E+17,fidel cashflow#4956,2018-09-09,how,,
3.46868E+17,djeis#0042,2018-09-09,It's all unicode characters.,,
2.72791E+17,fidel cashflow#4956,2018-09-09,now that,,
2.72791E+17,fidel cashflow#4956,2018-09-09,is impressive,,
2.72791E+17,fidel cashflow#4956,2018-09-09,give this man an “emacs god” role,,
2.72791E+17,fidel cashflow#4956,2018-09-09,*teach me*,,
3.46868E+17,djeis#0042,2018-09-09,"🤷 I just used insert-char to insert a lambda, combining overdot, and combining cedilla.",,
3.46868E+17,djeis#0042,2018-09-09,Then I scaled up the font and took a screenshot.,,
3.46868E+17,djeis#0042,2018-09-09,"Didn't even need to use emacs, technically.",,
2.72791E+17,fidel cashflow#4956,2018-09-09,Now that is heccin briliant,,
3.46868E+17,djeis#0042,2018-09-09,I just knew how to make emacs do what I needed.,,
2.72791E+17,fidel cashflow#4956,2018-09-09,i woulda been boring and used inkscape,,
2.72791E+17,fidel cashflow#4956,2018-09-09,Oof,,
3.30242E+17,MoonCheese#3714,2018-09-09,@djeis what do you mean by python lacks a notion of a block scope?,,
2.72791E+17,fidel cashflow#4956,2018-09-09,python lacks everything,,
3.46868E+17,djeis#0042,2018-09-09,Scope is always either global or relative to the containing function.,,
3.46868E+17,djeis#0042,2018-09-09,There's no smaller local scope than that.,,
3.30242E+17,MoonCheese#3714,2018-09-09,How about a function in a function,,
3.46868E+17,djeis#0042,2018-09-09,"That's a different scope, but it's not a nested one.",,
3.46868E+17,djeis#0042,2018-09-09,If the inner function uses a variable from the outer function there's a special system that gets involved.,,
3.46868E+17,djeis#0042,2018-09-09,That variable is made special and shared between them.,,
3.46868E+17,djeis#0042,2018-09-09,"So it acts like there's nesting, but none actually occurs.",,
3.46868E+17,djeis#0042,2018-09-09,"The important thing, tho, is python lacks anything like `let`.",,
3.46868E+17,djeis#0042,2018-09-09,"And you can't just do a lambda conversion, for a variety of annoying reasons 😅",,
2.72791E+17,fidel cashflow#4956,2018-09-09,Am i cool yet,,
3.46868E+17,djeis#0042,2018-09-09,Nice 😁,,
2.72791E+17,fidel cashflow#4956,2018-09-09,thancc,,
3.30242E+17,MoonCheese#3714,2018-09-09,"hmm, then what is considered nesting?",,
3.30242E+17,MoonCheese#3714,2018-09-09,a full copy?,,
3.46868E+17,djeis#0042,2018-09-09,"Well, it'd be nesting if the reflection system showed any parent-child relationship between the two scopes.",,
1.89169E+17,srasu#0042,2018-09-09,this makes me continue to dislike python more and more,,
1.89169E+17,srasu#0042,2018-09-09,"One of the biggest things I had against it was significant whitespace and annoying syntax, but now it's lacking proper lexical scope.",,
3.46868E+17,djeis#0042,2018-09-09,But anywhere it actually matters python only provides for the most local scope and the most global scope.,,
3.46868E+17,djeis#0042,2018-09-09,"Like, the exec/eval family or the `locals()` and `globals()` builtins.",,
3.30242E+17,MoonCheese#3714,2018-09-09,what would be the benefits of the reflection system showing a parent child relationship?,,
3.46868E+17,djeis#0042,2018-09-09,"Not much, it's more a pedantic point/implementation detail more than anything.",,
3.46868E+17,djeis#0042,2018-09-09,The inner function doesn't actually ever see the outer function.,,
3.46868E+17,djeis#0042,2018-09-09,Variables that they share just get handled specially.,,
3.46868E+17,djeis#0042,2018-09-09,"As I said, the important point is more that python lacks any kind of `let` construct.",,
3.46868E+17,djeis#0042,2018-09-09,Or any simple way to emulate one.,,
3.46868E+17,djeis#0042,2018-09-09,"This stumped the `hy` team for a while, and the solution they ended up going with is a bodge and they all know it lol",,
3.30242E+17,MoonCheese#3714,2018-09-09,lol,,
3.46868E+17,djeis#0042,2018-09-09,"In `hy`, `let` is acutally a rather complicated code-walking macro.",,
3.46868E+17,djeis#0042,2018-09-09,And the local variables get stored in a dictionary which itself is stored in a gensymmed variable.,,
3.30242E+17,MoonCheese#3714,2018-09-09,I was thinking,,
3.30242E+17,MoonCheese#3714,2018-09-09,"If I had the function:```def binder(a, fn):
    return fn(a)```",,
1.89169E+17,srasu#0042,2018-09-09,what the heck?,,
3.30242E+17,MoonCheese#3714,2018-09-09,"I could do something like let:```binder(3, lambda a:
    binder(4, lambda b:
    binder(""x"", lambda c:
        print(a, b, c))))```",,
3.46868E+17,djeis#0042,2018-09-09,We're well outside the scope of clojure now lol,,
1.89169E+17,srasu#0042,2018-09-09,that's insane,,
1.89169E+17,srasu#0042,2018-09-09,"sure, but it's still interesting @djeis",,
3.46868E+17,djeis#0042,2018-09-09,"If we're gonna post code samples we should move to #general, to be nice to people reading the chat logs lol",,
3.30242E+17,MoonCheese#3714,2018-09-09,alright,,
2.72791E+17,fidel cashflow#4956,2018-09-09,This ragument is futile,,
2.72791E+17,fidel cashflow#4956,2018-09-09,You’e both wrong,,
3.46868E+17,djeis#0042,2018-09-09,?,,
2.72791E+17,fidel cashflow#4956,2018-09-09,E,,
1.48131E+17,slifin#2813,2018-09-09,why does Clojure not warn me of a spec violation here?  https://pastebin.com/Qc55tqXa,,
1.89169E+17,srasu#0042,2018-09-09,what should it be warning you about?,,
1.48131E+17,slifin#2813,2018-09-09,"I'm trying to say ::x is a number, not a string",,
1.89169E+17,srasu#0042,2018-09-09,"Sure, but you're not actually using the spec anywhere",,
1.89169E+17,srasu#0042,2018-09-09,"You've created a spec named `::x` and you've separately made a map that has a key named `::x`, those two things are completely unrelated",,
1.48131E+17,slifin#2813,2018-09-09,"I see, I thought calling instrument would check the spec against the data within this namespace?",,
1.89169E+17,srasu#0042,2018-09-09,calling instrument with a function will ensure that each call to that function conforms to the spec that it was given with spec/fdef,,
1.89169E+17,srasu#0042,2018-09-09,Or rather that the input conforms to the args spec in that fdef,,
1.89169E+17,srasu#0042,2018-09-09,it doesn't check the output,,
1.89169E+17,srasu#0042,2018-09-09,If you want the entire spec checked for a function you have to use the `check` function,,
1.89169E+17,srasu#0042,2018-09-09,rather than just checking the args,,
1.48131E+17,slifin#2813,2018-09-09,"ok, so I would get a runtime error if I was to spec a function, where the inputs are invalid? and the function was called",,
1.48131E+17,slifin#2813,2018-09-09,do I have to specify the function in instrument? Or can instrument be called with no args?,,
1.89169E+17,srasu#0042,2018-09-09,"If you spec a function, instrument it, and then call it with invalid arguments, it would throw an exception, yes.",,
1.89169E+17,srasu#0042,2018-09-09,instrument has to be called with a symbol which refers to a function,,
1.89169E+17,srasu#0042,2018-09-09,specifically a namespace-qualified symbol,,
1.48131E+17,slifin#2813,2018-09-09,"okay, thank you that explains a lot",,
1.89169E+17,srasu#0042,2018-09-09,"```clojure
(defn foo [x]
  (inc x))
(spec/fdef foo
  :args (spec/cat :x number?)
  :ret number?)

(foo 5)
;; => 6
(foo ""hello"")
;; => Exception, cannot cast String to Integer

(test/instrument `foo)

(foo 5)
;; => 6
(foo ""hello"")
;; => Exception, doesn't conform to spec
```",,
1.89169E+17,srasu#0042,2018-09-09,"note the backtick, rather than a normal quote. Backtick namespace qualifies the symbol.",,
4.48827E+17,donderdag#4004,2018-09-09,"you can also call `instrument` with no args, and it instruments every function, iirc",,
4.48827E+17,donderdag#4004,2018-09-09,"""Instruments the vars named by sym-or-syms, a symbol or collection
of symbols, or all instrumentable vars if sym-or-syms is not
specified.""

yep",,
1.89169E+17,srasu#0042,2018-09-09,cool,,
1.48131E+17,slifin#2813,2018-09-09,is ```  :args (spec/cat number?)``` correct? clojurescript doesn't seem very happy with it,,
1.89169E+17,srasu#0042,2018-09-09,I mean clearly you have to have spec aliased to the namespace spec,,
4.48827E+17,donderdag#4004,2018-09-09,"no, it takes a number of keys and values, like `(s/cat :n number?)`",,
1.89169E+17,srasu#0042,2018-09-09,"Oh, right",,
1.89169E+17,srasu#0042,2018-09-09,duh,,
1.89169E+17,srasu#0042,2018-09-09,I forgot about that,,
1.89169E+17,srasu#0042,2018-09-09,Fixed in my example,,
4.48827E+17,donderdag#4004,2018-09-09,@slifin check out the spec guide https://clojure.org/guides/spec,,
1.89169E+17,srasu#0042,2018-09-09,"Also on an unrelated note, finally got a day to sit down and work on discljord. So I'm doing that. By the end of the day I should have a lot of the core component of my rework done, that being the new way socket connections are handled with Discord.",,
4.48827E+17,donderdag#4004,2018-09-09,"aah, sweet!",,
4.48827E+17,donderdag#4004,2018-09-09,have fun :p,,
1.48131E+17,slifin#2813,2018-09-09,:S this should error right? https://pastebin.com/rnEJgbaF,,
1.89169E+17,srasu#0042,2018-09-09,You have to instrument it before it'll error,,
1.89169E+17,srasu#0042,2018-09-09,it doesn't code walk to find out which functions are instrumented. That's a function that has side effects.,,
1.89169E+17,srasu#0042,2018-09-09,so change the order of the call to foo and the instrument,,
1.48131E+17,slifin#2813,2018-09-09,moving that line to line 4 appears to have no effect,,
1.89169E+17,srasu#0042,2018-09-09,You have to instrument it after you create it,,
1.89169E+17,srasu#0042,2018-09-09,but before you use it,,
1.89169E+17,srasu#0042,2018-09-09,so line 13,,
1.48131E+17,slifin#2813,2018-09-09,"ah yes, obvious in retrospect, I've got errors 😃 thank you",,
1.89169E+17,srasu#0042,2018-09-09,"Okay, so to clarify what `instrument` does, it takes the symbol that you pass it, and re-defines the function. It rebinds the var to a function which will first check the inputs, and then call your original function. Since this is a side-effecting thing, it has to be made _after_ the function is made, but _before_ you call it for it to take effect.",,
4.48827E+17,donderdag#4004,2018-09-09,@slifin you can see which symbols `instrument` is going to replace by running `(clojure.spec.test.alpha/instrumentable-syms)`,,
2.72791E+17,fidel cashflow#4956,2018-09-09,"Can someone recommend an alternative to quil that lets me specify a minimum window size, and make the window resizable by the user, and provide me with the current dimensions of the window?",,
1.55398E+17,cryptid selfie#3116,2018-09-10,quil can't do that? or do you want an alternative for other reasons,,
2.72791E+17,fidel cashflow#4956,2018-09-10,Really? Cause I found the resize canvas function but it doesn’t seem like it would make the actual window resizeable to the end user.,,
1.70416E+17,![Wys] Juzi#1035,2018-09-10,I think you need to respond to the window resize event and scale accordingly lol,,
2.72791E+17,fidel cashflow#4956,2018-09-10,How does one do such a thing,,
1.70416E+17,![Wys] Juzi#1035,2018-09-11,Resize sketch lmao,,
2.72791E+17,fidel cashflow#4956,2018-09-11,"Ah yes that helps me very much, I didn’t need context anyway you know.",,
1.55398E+17,cryptid selfie#3116,2018-09-12,"Why is my JVM saying ""unrecognized option --add-modules ""java.xml.bind"""" ? How can I fix this? I'm using Java 10 and Clojure 1.9.0. I simply took that argument out but now it seems figwheel requires it",,
2.72791E+17,fidel cashflow#4956,2018-09-12,Java 10 is a thing? I thought newest was 8,,
1.55398E+17,cryptid selfie#3116,2018-09-12,According to Lein Version yes it is,,
1.89169E+17,srasu#0042,2018-09-12,Java 11 isn't too far away,,
2.72791E+17,fidel cashflow#4956,2018-09-12,i thought we were at 8,,"🕗 (2),8⃣ (1)"
1.89169E+17,srasu#0042,2018-09-12,8 and 10 are the LTS branches.,,
1.89169E+17,srasu#0042,2018-09-12,They're on a 6 month release schedule now.,,
1.89169E+17,srasu#0042,2018-09-12,But the even ones are the LTS ones.,,
1.89169E+17,srasu#0042,2018-09-12,Testing side effects are a pain.,,
1.89169E+17,srasu#0042,2018-09-12,"Currently going through and working on the redesign of discljord (which is on the redesign branch), and I've been testing things with midje instead of clojure's built in test library. It isn't pretty when you're not dealing with pure functions.",,
1.89169E+17,srasu#0042,2018-09-12,I'm not sure how to get the meaning to be less cryptic though.,,
4.48827E+17,donderdag#4004,2018-09-12,@srasu you could try Expectations? https://clojure-expectations.github.io/interactions.html,,
1.89169E+17,srasu#0042,2018-09-12,"Oh, that's cool. But I don't think that works either in this case. I figured out part of what was the problem though. The side effect I wanted to test was mutating some internal state that's caputed in a closure and never exported. But I've got it settled now.",,
4.48827E+17,donderdag#4004,2018-09-12,"ah, i see. good that you got it figured out :~)",,
1.89169E+17,srasu#0042,2018-09-12,"Yeah, turns out I had just forgotten that I was planning on sending stuff off on an async channel, and I can check that's output to see if it did what it needed to",,
4.48827E+17,donderdag#4004,2018-09-12,makes sense,,
1.89169E+17,srasu#0042,2018-09-13,"Is there currently a way to spec multifns? I checked and apparently in the early days alex miller said there wasn't, but I haven't seen anything about it more recently",,
4.48827E+17,donderdag#4004,2018-09-13,multifns? do you mean fns with more than one arity?,,
1.89169E+17,srasu#0042,2018-09-13,I mean multimethods,,
4.48827E+17,donderdag#4004,2018-09-13,"a multimethod is a function, so can't you use `fdef` on it?",,
4.48827E+17,donderdag#4004,2018-09-13,"if you want to spec different things depending on a key, then you can use `multi-spec`",,
1.89169E+17,srasu#0042,2018-09-13,fdef doesn't work because a multimethod isn't actually a function. It's a special MultiFn object.,,
1.89169E+17,srasu#0042,2018-09-13,"I'm trying to spec a function used as an argument, which can be a multimethod.",,
1.89169E+17,srasu#0042,2018-09-13,But I suppose it's a bad idea to spec functions which have side effects.,,
1.89169E+17,srasu#0042,2018-09-13,So I'm moving the documentation from a spec to a better docstring,,
1.89169E+17,srasu#0042,2018-09-13,"Since spec is designed for defining the shape of data anyway, not random higher order function arguments. :P",,
1.89169E+17,srasu#0042,2018-09-13,"Which really means I probably shouldn't be spec'ing core.async channels and atoms either, but whatever.",,
1.89169E+17,srasu#0042,2018-09-13,It's for internals nobody is going to see if they aren't trying to upgrade my API to a new version of Discord.,,
1.89169E+17,srasu#0042,2018-09-13,"Oh, and don't forget the futures. XD
Totally defining a spec to `any?` and calling it `::future` for clarity of the spec. :P",,
4.48827E+17,donderdag#4004,2018-09-13,"haha, nice",,
4.48827E+17,donderdag#4004,2018-09-13,"@srasu seems to work for me:

```clj
boot.user=> (defmulti foo identity)
#'boot.user/foo
boot.user=> (defmethod foo 42 [_] 43)
#object[clojure.lang.MultiFn 0x2180f6fe ""clojure.lang.MultiFn@2180f6fe""]
boot.user=> (foo 42)
43
boot.user=> (s/fdef foo :args (s/cat :x int?))
boot.user/foo
boot.user=> (stest/instrument)
[boot.user/foo]
boot.user=> (foo)
clojure.lang.ExceptionInfo: Call to #'boot.user/foo did not conform to spec.
boot.user=> (foo 42)
43
boot.user=> (foo 43)
java.lang.IllegalArgumentException: No method in multimethod 'foo' for dispatch value: 43
boot.user=> (foo ""hello"")
clojure.lang.ExceptionInfo: Call to #'boot.user/foo did not conform to spec.```",,
1.89169E+17,srasu#0042,2018-09-13,"Yes, but now try doing another defmethod",,
1.89169E+17,srasu#0042,2018-09-13,"Also try passing a multimethod to a function which takes an fspec, which is the use case it broke for me on.",,
1.89169E+17,srasu#0042,2018-09-13,"The instrument call wraps the function in another call, and makes it into a function rather than a MultiFn object, which means future defmethods break because they're looking for that MultiFn. Furthermore the MultiFn object seems to just outright break when passed to an fspec",,
4.48827E+17,donderdag#4004,2018-09-13,"just turn off instrumentation before defining a new method, then turn it back on",,
4.48827E+17,donderdag#4004,2018-09-13,"and `fdef` uses `fspec` internally, so i don't think there should be a difference",,
1.89169E+17,srasu#0042,2018-09-13,"There isn't, my point was this  use case:
```clojure
(defn foo [f]
  (f))
(s/fdef
  :args (s/cat :fn (s/fspec :args (s/cat))))

(st/instrument)

(defmulti bar
  (fn []
    :blah))

(defmethod bar :blah
  []
  :baz)

(foo bar)
;; => exception, failed to conform to spec
```",,
1.89169E+17,srasu#0042,2018-09-13,obviously this should just return `:baz` with no issues,,
1.89169E+17,srasu#0042,2018-09-13,if you allow multimethods to be used the same way as functions,,
1.89169E+17,srasu#0042,2018-09-13,But currently they can't be interchanged in spec,,
1.89169E+17,srasu#0042,2018-09-13,"You'd have to make the call like this:
```clojure
(foo #(bar))
```",,
4.48827E+17,donderdag#4004,2018-09-13,"can't reproduce:

```clj
boot.user=> (defn foo [f] (f))
#'boot.user/foo
boot.user=> (s/fdef foo :args (s/cat :f (s/fspec :args (s/cat))))
boot.user/foo
boot.user=> (defmulti bar (fn [] :x))
#'boot.user/bar
boot.user=> (defmethod bar :x [] :y)
#object[clojure.lang.MultiFn 0x980dda ""clojure.lang.MultiFn@980dda""]
boot.user=> (bar)
:y
boot.user=> (stest/instrument)
[boot.user/foo]
boot.user=> (foo +)
0
boot.user=> (foo inc)
clojure.lang.ExceptionInfo: Call to #'boot.user/foo did not conform to spec.
boot.user=> (foo bar)
:y```",,
1.89169E+17,srasu#0042,2018-09-13,"really, that's interesting",,
1.89169E+17,srasu#0042,2018-09-13,I rebooted my repl a few times too and it kept happening,,
4.48827E+17,donderdag#4004,2018-09-13,"i am on alpha7, maybe that matters?",,
1.89169E+17,srasu#0042,2018-09-13,Maybe?,,
1.89169E+17,srasu#0042,2018-09-13,I'm just on 1.9,,
4.48827E+17,donderdag#4004,2018-09-13,could be a newer spec version fixed it,,
1.89169E+17,srasu#0042,2018-09-13,I feel like an idiot,,
1.89169E+17,srasu#0042,2018-09-13,"Nope, I was just missing a thing in my cat",,
1.89169E+17,srasu#0042,2018-09-13,totally misinterpreted that exception,,
4.48827E+17,donderdag#4004,2018-09-13,"oh, well then. turned out to be fixable in that case :B",,
1.89169E+17,srasu#0042,2018-09-13,"Lol, yeah.",,
4.48827E+17,donderdag#4004,2018-09-13,"i looked through the `fspec` source and it does the function checking with `ifn?` internally, which is super lax. so it did strike me as odd that you were running into issues",,
1.89169E+17,srasu#0042,2018-09-13,Still not planning on spec'ing my multimethods though. Just going to keep those to documentation.,,
1.89169E+17,srasu#0042,2018-09-13,The args can now be properly spec'ed though,,
1.89169E+17,srasu#0042,2018-09-13,which is good,,
4.48827E+17,donderdag#4004,2018-09-13,fair enough,,
1.89169E+17,srasu#0042,2018-09-13,"Also, with fspec, does it actually run the function in question? As in, should I be worried about side-effects of the function if it's spec'ed?",,
1.89169E+17,srasu#0042,2018-09-13,"Or for instances where the function will have side effects, should I just use `ifn?`?",,
4.48827E+17,donderdag#4004,2018-09-13,"fspec doesn't, but the instrumentation does a bunch of generating and running the function against those generated args",,
4.48827E+17,donderdag#4004,2018-09-13,"```clj
boot.user=> (defn zoop [] (prn 43))
#'boot.user/zoop
boot.user=> (foo zoop)
43
43
43
43
43
43
43
43
43
43
43
43
43
43
43
43
43
43
43
43
43
43
nil```",,
4.48827E+17,donderdag#4004,2018-09-13,"instrumentation is just a dev-time thing, so it shouldn't matter too much",,
1.89169E+17,srasu#0042,2018-09-13,I mean it will in this case where the side effects are connecting to or disconnecting from discord.,,
4.48827E+17,donderdag#4004,2018-09-13,"ah, right",,
1.89169E+17,srasu#0042,2018-09-13,And I want my users to be able to `(st/instrument)` to see if they're abusing my api,,
4.48827E+17,donderdag#4004,2018-09-13,i don't think it's intended for users,,
4.48827E+17,donderdag#4004,2018-09-13,you're supposed to do your own arg checking with `s/valid?`/`s/conform` if you want to alert your users,,
4.48827E+17,donderdag#4004,2018-09-13,nvm what i just said,,
4.48827E+17,donderdag#4004,2018-09-13,i wasn't thinking,,
1.89169E+17,srasu#0042,2018-09-13,The users are developers.,,
1.89169E+17,srasu#0042,2018-09-13,:P,,
4.48827E+17,donderdag#4004,2018-09-13,yeah i get it,,
4.48827E+17,donderdag#4004,2018-09-13,just the fatigue talking,,
1.89169E+17,srasu#0042,2018-09-13,fair enough,,
4.48827E+17,donderdag#4004,2018-09-13,maybe have a way to turn off the side-effects and just do like a `(Thread/sleep 1000)` instead,,
4.48827E+17,donderdag#4004,2018-09-13,or something along those lines,,
4.48827E+17,donderdag#4004,2018-09-13,don't see any particular reason that dev-time call checking should be tied to what the calls do in the world,,
1.55398E+17,cryptid selfie#3116,2018-09-15,"why doesn't this work on java10  :jvm-opts [""--add-modules"" ""java.xml.bind""]",,
3.13371E+17,Jarzka#0224,2018-09-16,Any idea when Leiningen will get official support for Java 9 / 10? I find it confusing to add those java.xml.bind checkings to every project.clj to make sure it works on Leiningen running on Java 9/10,,
1.40467E+17,Nanoic#8714,2018-09-19,Hi,,
1.40467E+17,Nanoic#8714,2018-09-19,What IDE should I use for Clojure on Windows?,,
2.2576E+17,Azzurite#2004,2018-09-19,"I can not tell you what you should be using as I have not evaluated alternatives, but I'm using IntelliJ with the Cursive plugin which I like.",,
1.89169E+17,srasu#0042,2018-09-19,"That works well, so does VSCode, emacs, and sublime text.",,
1.89169E+17,srasu#0042,2018-09-19,Eclipse and counterclockwise is decent too,,
1.55398E+17,cryptid selfie#3116,2018-09-19,"I'm also using intellij cursive, but sublime text and atom aren't bad either",,
2.72791E+17,fidel cashflow#4956,2018-09-19,+ 1 for enacts and eclipse,,
2.16295E+17,HactarCE#5314,2018-09-19,"If you're already using Atom, it has pretty decent paredit/parinfer packages (start with parinfer, for sure)",,
2.16295E+17,HactarCE#5314,2018-09-19,"Sublime has something similar, I'm sure",,
1.89169E+17,srasu#0042,2018-09-19,Emacs with ergoemacs is okay too if you already know you want to use emacs and want to ease the learning curve. But I wouldn't recommend it unless you already know you want to use emacs.,,
2.18602E+17,lsenjov#4288,2018-09-19,"If you're really new and just wanting to play around, lighttable is also nice",,
2.18602E+17,lsenjov#4288,2018-09-19,"(Not really useful for large projects, but for learning stuff quickly it's nice)",,
1.89169E+17,srasu#0042,2018-09-20,"So I've been doing a lot of work on discljord for the last few days. I've finished up the websocket connection process, and now I'm working on the messaging process. Currently figuring out just how I want to make rate limits get handled. It's pretty difficult because what I effectively want is queue semantics for each possible endpoint. The problem there is that means that lots of core.async channels and go loops will be created as the bot interacts with more and more discord channels. I'm thinking that I could probably use the tapping mechanism that core.async gives for channels, with a simple filter transducer on each channel so that it only gets the messages that are destined for its specific endpoint, but that feels wasteful. At the same time though it opens up a lot for extensibility.",,
1.89169E+17,srasu#0042,2018-09-20,"It would also mean though that you'd have to have a go-loop process for each endpoint which will take off of that channel. That seems a little annoying to me, but at the same time... I'm just not sure.",,
1.89169E+17,srasu#0042,2018-09-20,"I think I'll hack something together to get the basic user-end functionality, but once I do that how it's implemented on the back is up in the air.",,
4.87592E+17,ejstembler#6375,2018-09-21,I recently had the need to connect to AWS EMR via Hive JDBC using Clojure. I wrote an article about it in case anyone finds it useful:  https://ejstembler.com/2018/09/using-clojure-to-query-aws-emr-via-hive-jdbc/,,
2.72791E+17,fidel cashflow#4956,2018-09-22,"Is there a clojure library for registering my software as a uri scheme handler on Linux and windows with one library? I’d rather not build twice, and it’s a pain to do on sindows",,
2.72791E+17,fidel cashflow#4956,2018-09-22,Windows* lol,,
1.89169E+17,srasu#0042,2018-09-22,"I mean if there's a java library for it, then you can use it in clojure. A quick google search didn't turn up anything for clojure, but I might have been using the wrong terms.",,
1.55398E+17,cryptid selfie#3116,2018-09-23,"yep I used to think ""hey there's no clojure libraries how can I make anything in this?"" now half my code is interop and i feel enlightened",,
1.55398E+17,cryptid selfie#3116,2018-09-23,also +1 for stallmanu,,
1.89169E+17,srasu#0042,2018-09-23,I mean that's probably a bit overkill. But I get what you're saying.,,
1.89169E+17,srasu#0042,2018-09-23,"So I'm gearing up for the first actual release of discljord. It's very feature-bare (pretty similar to the way it was before) but this time it's built in a way that's extensible. I think it's in a much better spot this time around. I just did a pass for doc strings, and now I'm starting to write some actual documentation. For now it's mostly going to be low-level reference documentation, as well as some higher-level documentation about the concepts of the three processes used in discljord.
Feel free to view the progress on https://github.com/IGJoshua/discljord/tree/release",,
1.89169E+17,srasu#0042,2018-09-23,"Current features include connecting bots, automatic shard handling, all discord events getting passed on to the user, and the ability to send messages to discord. That's enough to make basic bot functionality, including things like the #repl-bot.",,
1.89169E+17,srasu#0042,2018-09-23,"I'm going to be making a bot with it as soon as I'm done with the documentation pass, just to test it out and start to see how I should design the default abstraction for the bot process and event handling. Then I'm going to work on expanding the coverage of the websocket and http connections.",,
1.89169E+17,srasu#0042,2018-09-23,"Ideally fairly soon I'll have a few bots up and running using this, and I'll also be able to finish full API coverage, and can get discljord added to the Discord API server, and become the de-facto discord bot API for Clojure.",,
4.48827E+17,donderdag#4004,2018-09-23,awesome :B,,
4.48827E+17,donderdag#4004,2018-09-23,it's looking pretty sweet,,
1.89169E+17,srasu#0042,2018-09-23,Thanks!,,
1.89169E+17,srasu#0042,2018-09-23,"Just wrapped up the documentation for now, and published to clojars. Feel free to experiment. Dependency vector is `[discljord ""0.1.1""]`",,
1.89169E+17,srasu#0042,2018-09-23,"(I'm probably going to update that so that it has a proper group name in the next release, but it slipped my mind for this one)",,👌🏼 (5)
1.89169E+17,srasu#0042,2018-09-25,"Okay, I've done a few updates, fixed some bugs, corrected a spec or two, and added a group name. Dependency vector is now `[org.suskalo/discljord ""0.1.5""]` (I'm tying my last name to the library so that I can start to have a decent presence associated with me properly, since I _do_ want to get hired for clojure eventually)",,
4.48827E+17,donderdag#4004,2018-09-25,sweet :),,
1.55398E+17,cryptid selfie#3116,2018-09-30,"@srasu , you had the recursive prime code here right? where the stack kept overflowing",,
1.55398E+17,cryptid selfie#3116,2018-09-30,interestingly that's explained in Programming Clojure,,😌 (1)
1.55398E+17,cryptid selfie#3116,2018-09-30,that (unlike haskell or others?) you can't recur functions among each other (and its better to return using defn than def to prevent it from being realised immediately),,
1.55398E+17,cryptid selfie#3116,2018-09-30,"because clojure/JVM doesn't know how to optimise this, they hold the head, and the amount  of calls needed increases exponentially",,
1.55398E+17,cryptid selfie#3116,2018-09-30,page 153: http://blog.shuo1.com/zms/clojure/Programming_Clojure.pdf,,
1.89169E+17,srasu#0042,2018-09-30,Actually it didn't have overflow errors.,,
1.89169E+17,srasu#0042,2018-09-30,It just hung.,,
1.55398E+17,cryptid selfie#3116,2018-10-04,"now that I think about it, this might be resolvable with https://clojuredocs.org/clojure.core/trampoline",,
3.11026E+17,michaelblume#1122,2018-10-05,So I'm looking at https://github.com/clojure/clojure/blob/master/src/jvm/clojure/lang/EnumerationSeq.java,,
3.11026E+17,michaelblume#1122,2018-10-05,"and trying to understand why it -- is the way it is, instead of just being

```(defn enumeration-seq [^Enumeration iter]
  (lazy-seq
    (when (.hasMoreElements iter)
      (cons (.nextElement iter) (enumeration-seq iter)))))```",,
3.11026E+17,michaelblume#1122,2018-10-05,is it just that `lazy-seq` has overhead in terms of creating and calling `IFn`s?,,
4.48827E+17,donderdag#4004,2018-10-05,"@michaelblume i'd try asking that question on the #clojure-dev channel in the Clojurians Slack, or the Clojure mailing list",,
1.89169E+17,srasu#0042,2018-10-07,"So with my Discljord project, I've gotten a bot up and running that's been online for over a week straight from a raspberry pi. So things are looking good. Haven't really run into any connection bugs or slowdown at all, the rate limit handling seems to be working flawlessly, so I'm just working on getting the full discord api supported. Once I do I'm going to be bumping a minor version instead of a patch version. Currently my bot is running off of discljord v ""0.1.6""",,
1.89169E+17,srasu#0042,2018-10-07,It's definitely ready for smaller projects too. I'm currently working on getting enough api coverage that it'll be ready for any given project.,,
1.89169E+17,srasu#0042,2018-10-07,"Then I've had somewhat of an epiphany about how I can refactor my connection process so that it isn't so messy under the hood and can fix some latant bugs that won't show up for most people, since they'll only occur in specific circumstances with shards",,👍🏼 (5)
4.51486E+17,Grant#5854,2018-10-10,Any spec gurus here?,,
2.98148E+17,lepistane#2482,2018-10-11,Share ur problem and guru might popup,,
1.89169E+17,srasu#0042,2018-10-11,^,,
4.51486E+17,Grant#5854,2018-10-11,"I resolved the issue but will leave it here if anyone comes across the same problem:
I needed a byte generator. For some reason, one is defined in `test.check` but not in `clojure.spec.gen.alpha` (only has one for byte arrays). This is what I came up with:
```clojure
(def byte-gen #(gen/fmap byte (gen/choose Byte/MIN_VALUE Byte/MAX_VALUE)))
```
If anyone knows of a better way, please let me know.",,
3.09474E+17,jshah#3301,2018-10-13,Hi everyone! Does anyone have some good tutorials for using sqlite in Clojure? I'm trying to create an API which writes to a db. Most of the tutorials I have found are quite old.,,
1.89169E+17,srasu#0042,2018-10-13,Old doesn't necessarily mean bad.,,
4.24726E+17,will#9610,2018-10-13,"Hi, did someone knows a clojure book or good article on project organization and use of spec ?",,
4.56227E+17,Deleted User#0000,2018-10-13,I think spec is too new to be in a book.,,
4.56227E+17,Deleted User#0000,2018-10-13,It's still in alpha.,,
4.56227E+17,Deleted User#0000,2018-10-13,@jshah https://github.com/ogrim/clojure-sqlite-example,,
4.56227E+17,Deleted User#0000,2018-10-13,This example uses JDBC,,
4.56227E+17,Deleted User#0000,2018-10-13,which is the standard database API for Java,,
1.89169E+17,srasu#0042,2018-10-13,"Sure, but a lot of cognitect alphas are pretty stable",,
4.56227E+17,Deleted User#0000,2018-10-13,I'm not saying spec isn't stable,,
2.18602E+17,lsenjov#4288,2018-10-13,"It's pretty stable, but it really is still too new",,
4.56227E+17,Deleted User#0000,2018-10-13,I'm just saying I don't think he'll find it in a book.,,
4.56227E+17,Deleted User#0000,2018-10-13,"Though I missed the ""or good article"" part lol",,
1.89169E+17,srasu#0042,2018-10-13,plenty of articles about it. Don't remember which ones are good though,,
3.09474E+17,jshah#3301,2018-10-13,@Deleted User Thank you! I'll take a look 😄,,
2.18602E+17,lsenjov#4288,2018-10-13,As some starts to really look in to: `fdef` and `instrument`,,
4.24726E+17,will#9610,2018-10-13,"I found this one ""Getting Clojure"" seems to have a spec part",,
2.72791E+17,fidel cashflow#4956,2018-10-14,How can I iterate over every file in a directory and it's sub directoties?,,
2.72791E+17,fidel cashflow#4956,2018-10-14,I'm looking for something of the equivelent of pyrhons os.walk,,
1.89169E+17,srasu#0042,2018-10-14,https://rosettacode.org/wiki/Walk_a_directory/Recursively#Clojure,,
2.16295E+17,HactarCE#5314,2018-10-14,Someone on another server asked if they could write a Lisp macro that allowed them to write Lisp code in Bulgarian.,,
2.16295E+17,HactarCE#5314,2018-10-14,"I don't know Bulgarian, but I have studied Latin almost six years, so I made a demo of FizzBuzz in Latin in Clojure.",,
2.16295E+17,HactarCE#5314,2018-10-14,"Here's the macro itself:
```clj
(defn translate-form [language form]
  (letfn [(recurse [f] (translate-form language f))]
    (if (coll? form)
      (if (list? form)
        (map recurse form)
        (into (empty form) (map recurse form)))
      (language form))))

(defmacro use-lang [language & forms]
  (conj (map (partial translate-form (eval language)) forms) 'do))
```",,
2.16295E+17,HactarCE#5314,2018-10-14,And the rest of the file:,https://cdn.discordapp.com/attachments/315388260987830272/501147352908824615/latin.clj,👍🏼 (2)
4.48827E+17,donderdag#4004,2018-10-14,@HactarCE check this out: https://github.com/echeran/clj-thamil/blob/master/src/clj_thamil/மொழியியல்.cljc,,
2.16295E+17,HactarCE#5314,2018-10-16,That's very cool -- I figured I wasn't the first person to come up with this.,,👌🏼 (1)
2.75646E+17,Beer#8336,2018-11-19,anyone has experience deploying datomic transactor to AWS? I have a technical question,,
2.98148E+17,lepistane#2482,2018-11-20,Sorry no but i want to have a look at datomic. How did you learn it? @Beer,,
2.98148E+17,lepistane#2482,2018-11-20,Yo,,
2.98148E+17,lepistane#2482,2018-11-20,i am doing some barebones project,,
2.98148E+17,lepistane#2482,2018-11-20,i've done compojure backend,,
2.98148E+17,lepistane#2482,2018-11-20,but for some fucking reason,,
2.98148E+17,lepistane#2482,2018-11-20,i cant get cljs to compile,,
2.98148E+17,lepistane#2482,2018-11-20,i have cljsbuild config in projects.clj,,
2.98148E+17,lepistane#2482,2018-11-20,i made it work but project.clj is the most important part of lein,,
4.56227E+17,Deleted User#0000,2018-11-21,post your project.clj,,
2.98148E+17,lepistane#2482,2018-11-21,@Deleted User,https://cdn.discordapp.com/attachments/315388260987830272/514720699395473410/project.clj,
4.56227E+17,Deleted User#0000,2018-11-21,I don't see anything obviously wrong,,
4.56227E+17,Deleted User#0000,2018-11-21,"You'd probably have better luck on Clojurians Slack, fwiw",,
3.34672E+17,cvic#9633,2018-11-22,Yeah. More activity there.,,
1.40467E+17,Nanoic#8714,2018-11-25,Hello I'm looking for help,,
1.89169E+17,srasu#0042,2018-11-25,if you explain your problem you'll likely have better luck getting help with it.,,
1.40467E+17,Nanoic#8714,2018-11-25,How do I create a weighted graph?,,
1.40467E+17,Nanoic#8714,2018-11-25,"(def graph{
:1 [:1]
:2 [:2 :3],
:3 [:4 :5],
:4 [:6],
:5 [] })",,
1.40467E+17,Nanoic#8714,2018-11-25,I created a regular graph,,
1.40467E+17,Nanoic#8714,2018-11-25,Then I tried a weighted graph,,
1.40467E+17,Nanoic#8714,2018-11-25,;(def wg (weighted-graph {:a {:b 1 :c 2} :c {:d 3} :b {:d 4 :e 1} :e {:f 5}}));,,
1.40467E+17,Nanoic#8714,2018-11-25,this broke,,
1.40467E+17,Nanoic#8714,2018-11-25,"(def graph{
:1 [:1]
:2 [:2 :3],
:3 [:4 :5],
:4 [:6],
:5 [] })
 
 ;(def wg (weighted-graph {:a {:b 1 :c 2} :c {:d 3} :b {:d 4 :e 1} :e {:f 5}}));

  (def weighted-graph{
  :1 [:b 1 :c 2],
   :2 [:d 3],
   :3 [:d 4 :e 1], 
   :4 [:f 5],
   :5 []})",,
1.89169E+17,srasu#0042,2018-11-25,"well if you're calling weighted-graph like a function, then that means that you're looking up the value for the key you pass. So you're trying to look up `{:a {:b 1 :c 2} :c {:d 3} :b {:d 4 :e 1} :e {:f 5}}` in the map `{:1 [:b 1 :c 2], :2 [:d 3], :3 [:d 4 :e 1], :4 [:f 5], :5 []}` which will just return nil.",,
1.40467E+17,Nanoic#8714,2018-11-25,I was trying to use an API in repl.it,,
1.40467E+17,Nanoic#8714,2018-11-25,without installing the API,,
1.89169E+17,srasu#0042,2018-11-25,well that explains it,,
1.40467E+17,Nanoic#8714,2018-11-25,How do I install Loom in IntelliJ?,,
1.89169E+17,srasu#0042,2018-11-25,"definitely doesn't seem like a clojure question, and my brief research hasn't found much in the way of anything related to it, besides loom winding down and not accepting new customers.",,
1.40467E+17,Nanoic#8714,2018-11-25,I was trying to produce a graph on clojure,,
1.40467E+17,Nanoic#8714,2018-11-25,I'm taking an AI class and we've been told it's not a coding course.,,
1.40467E+17,Nanoic#8714,2018-11-25,Which means we expect you to write code for the assignment but we're going to provide minimal support.,,
1.89169E+17,srasu#0042,2018-11-25,oh fun,,
1.40467E+17,Nanoic#8714,2018-11-25,There was an AI module in year 2,,
1.40467E+17,Nanoic#8714,2018-11-25,I opted for a final year AI module,,
1.40467E+17,Nanoic#8714,2018-11-25,the only pre-requisites were Java 1 and 2 OR Algorithms and Data Structures,,
1.40467E+17,Nanoic#8714,2018-11-25,I've only taken Java,,
1.40467E+17,Nanoic#8714,2018-11-25,and these were first year modules,,
1.40467E+17,Nanoic#8714,2018-11-25,My coworkers have done Advanced Java and AI programming.,,
2.18602E+17,lsenjov#4288,2018-11-25,You may be better suited jumping over to cljs if you're wanting to show a graph,,
1.40467E+17,Nanoic#8714,2018-12-01,I've written some of a program,,
1.40467E+17,Nanoic#8714,2018-12-01,but I can't run it in intellij,,
1.40467E+17,Nanoic#8714,2018-12-01,I am using the cursive and leiningen plugin,,
1.70416E+17,![Wys] Juzi#1035,2018-12-01,lein run doesnt work as well?,,
4.07148E+17,/ussr/share#8627,2018-12-02,@Nanoic It has that kind of problem all the fucking time,,
4.07148E+17,/ussr/share#8627,2018-12-02,Just run it on the lein repl,,
4.07148E+17,/ussr/share#8627,2018-12-02,IntelliJ has problems running things all the time.,,
4.07148E+17,/ussr/share#8627,2018-12-02,I use it too.,,
1.85535E+17,IamCarbonMan#1695,2018-12-10,"Is there such a thing as an... ""infinite state machine""?",,
1.85535E+17,IamCarbonMan#1695,2018-12-10,"Like, I think my program is going to end up needing to have one central queue of actions that have to be stepped through in order, but the possible states and state transitions aren't bounded",,
3.15294E+17,Odie#2665,2018-12-10,"I think when we talk about FSMs in programming, we're usually talking about building and traversing a graph as you'd draw on paper...",,
3.15294E+17,Odie#2665,2018-12-10,"technically, a computer is a FSM because there is finite amount of RAM so there is only a finite number of states it can be in...",,
3.15294E+17,Odie#2665,2018-12-10,"though that isn't a very practical way of looking at things, I don't think... since the number of states is astronomical and is not explicitly named...",,
3.15294E+17,Odie#2665,2018-12-10,just saying... just as it's impractical to look at a computer as an FSM... it probably doesn't make sense for your action queue + state to be termed FSM or infinite state machine...,,
1.89169E+17,srasu#0042,2018-12-11,I do believe you could easiliy do that kind of behavior in clojure with an immutable queue and keywords pretty easily.,,
1.89169E+17,srasu#0042,2018-12-11,"the problem will be in defining the behavior of the states, given that you will likely then have an expandable set. Either it'll be easy to do with multimethods, or you want something that might more easily be solved another way because all of the items will have some smaller set of behaviors.",,
1.40467E+17,Nanoic#8714,2018-12-14,Could a grid area be represented in code?,,
2.18602E+17,lsenjov#4288,2018-12-14,"Pretty easily, do you want a sparse grid or a dense grid?",,
1.40467E+17,Nanoic#8714,2018-12-20,"I'm not sure, what is the difference between a dense and sparse grid?",,
1.89169E+17,srasu#0042,2018-12-20,"A dense grid would be any form of storage which has memory for all spaces, regardless of if they are filled. A sparse grid does not allocate space for a grid slot which is empty. As an example, a two-dimensional array would be a dense grid, while a hash map from coordinate to data would be a form of sparse grid.",,
2.18602E+17,lsenjov#4288,2018-12-20,"Dense grid might be ```clj
[[nil 1 nil] [nil 1 nil] [1 nil 1]]```",,
2.18602E+17,lsenjov#4288,2018-12-20,"The same sparse grid might be
```clj
{{:x 1 :y 2} 1
 {:x 1 :y 1} 1
 {:x 0 :y 0} 1
 {:x 2 :y 0} 1}```",,
1.89169E+17,srasu#0042,2018-12-20,^,,
1.89169E+17,srasu#0042,2018-12-20,"A dense grid is more efficient if there's going to be something in every slot, while a sparse grid is better if you have a mostly empty grid.",,
1.89169E+17,srasu#0042,2018-12-20,"Sparse grids also almost always have higher lookup time, regardless of how full they are.",,
2.18602E+17,lsenjov#4288,2018-12-20,"I'm not sure, especially if the sparse grid is a hash map",,
2.18602E+17,lsenjov#4288,2018-12-20,"Maybe it will be slightly longer lookup, but it's still pretty constant",,
3.46868E+17,djeis#0042,2018-12-20,"Well, assuming perfect hardware the dense grid should have constant time.",,
3.46868E+17,djeis#0042,2018-12-20,"Plus the hash table has the cost of the hashing and lookup process, which can be expensive.",,
3.46868E+17,djeis#0042,2018-12-20,"But if the grid is really sparse then the effect of caching might take over, so 🤷",,
2.18602E+17,lsenjov#4288,2018-12-20,"Clj objects are already hashed, so only real issue is hash collision resolution",,
3.46868E+17,djeis#0042,2018-12-20,Are the hashes cached on the object?,,
2.18602E+17,lsenjov#4288,2018-12-20,Yes,,
3.46868E+17,djeis#0042,2018-12-20,"Huh, neat.",,
3.46868E+17,djeis#0042,2018-12-20,Makes sense.,,
3.46868E+17,djeis#0042,2018-12-20,Immutability and all.,,
2.18602E+17,lsenjov#4288,2018-12-20,Clj data structures have hashes cached at each level,,
2.18602E+17,lsenjov#4288,2018-12-20,It's a massive Merkel tree,,
3.46868E+17,djeis#0042,2018-12-20,Oh true lol,,
3.46868E+17,djeis#0042,2018-12-20,If we're talking clj in particular tho then I take it we're also assuming clj's persistent hash map?,,
3.46868E+17,djeis#0042,2018-12-20,"Which, while quite performant for what it's doing, does impose a logarithmic overhead on lookup if memory serves.",,
3.46868E+17,djeis#0042,2018-12-20,"With a good constant factor in the spread it's pretty negligible, but it's still multiple memory lookups for each entry as opposed to the constant direct lookup of a dense grid 🤷
I'd say it probably goes back and forth quite a bit, tbh.",,
3.46868E+17,djeis#0042,2018-12-20,"Profiling is key, as always.",,
1.89169E+17,srasu#0042,2018-12-21,Log base 32,,
1.89169E+17,srasu#0042,2018-12-21,So at only six levels deep you can have millions of entries.,,
1.25252E+17,sokrato#5896,2018-12-21,What is deps.edn? Is it intended to replace project.clj?,,
3.46868E+17,djeis#0042,2018-12-21,Effectively.,,
1.25252E+17,sokrato#5896,2018-12-21,Thanks God!,,
3.46868E+17,djeis#0042,2018-12-21,It's part of a new system that replaces lein and boot.,,
3.46868E+17,djeis#0042,2018-12-21,"@srasu Yup, but it's still slower than the constant time access",,
3.46868E+17,djeis#0042,2018-12-21,And I suspect in the sweet spot where caching takes over depending on the size and structure of the data.,,
1.89169E+17,srasu#0042,2018-12-21,"That's why they call it ""near constant time""",,
1.89169E+17,srasu#0042,2018-12-21,Also the Clojure cli only works on *nix for now,,
1.25252E+17,sokrato#5896,2018-12-21,Does Mac counts as *nix?,,
1.25252E+17,sokrato#5896,2018-12-21,"Oh, it does",,
1.89169E+17,srasu#0042,2018-12-21,"Yes, it does. It's Unix based",,
2.27205E+17,malaclyps#4923,2018-12-22,"I’m finding that git diffs don’t play that well with clojure — a change in a function’s form will often change the indentation of the whole thing, making it hard to see where the change really is. Is there a diff tool or smudge/clean utility that works better with Clojure or Lisp in general?",,
1.02834E+17,lnostdal#2758,2018-12-27,"@malaclyps i found this, but haven't tried it => https://fazzone.github.io/autochrome.html     ( https://github.com/ladderlife/autochrome  )",,
1.40467E+17,Nanoic#8714,2019-01-01,What is operator search?,,
1.40467E+17,Nanoic#8714,2019-01-01,I'm trying to find an algorithm for one,,
2.18602E+17,lsenjov#4288,2019-01-01,I have never heard of operator search before. What's it trying to do?,,
4.56227E+17,Deleted User#0000,2019-01-03,"Why Clojure generate  ```(into '() (map vector [1 2 3] [:a :b :c]))
=> ([3 :c] [2 :b] [1 :a]) ```  instead of   ```'(1 :a 2 :b 3 :c) ```  ?",,
2.18602E+17,lsenjov#4288,2019-01-03,I think you're looking for `apply concat` instead of `into '()`,,
2.18602E+17,lsenjov#4288,2019-01-03,Iirc into just pops items from its second argument and pushes it onto its first,,
2.18602E+17,lsenjov#4288,2019-01-03,"And since the return of map is already a list of vectors, all it's doing is reversing the list",,
2.18602E+17,lsenjov#4288,2019-01-03,"Since it first grabs `[1 :a]` which is the first item of the return from map, and pushes it into an empty list",,
2.18602E+17,lsenjov#4288,2019-01-03,@Deleted User does that explain it?,,
4.56227E+17,Deleted User#0000,2019-01-03,"@lsenjov yes, thank you very much !",,
2.18602E+17,lsenjov#4288,2019-01-03,No problems :+1:,,
2.18602E+17,lsenjov#4288,2019-01-03,"Also, at some point have a few minutes to glance through the standard library",,
2.18602E+17,lsenjov#4288,2019-01-03,There's a bunch of useful stuff there,,
2.18602E+17,lsenjov#4288,2019-01-03,https://clojuredocs.org/clojure.core,,
2.18602E+17,lsenjov#4288,2019-01-03,There's a bunch of stuff you probably won't use too,,
2.18602E+17,lsenjov#4288,2019-01-03,But it's nice to know what's in the toolbox,,
4.56227E+17,Deleted User#0000,2019-01-03,"I will, i'm trying to solve exercises of http://www.4clojure.com",,👍 (1)
1.40467E+17,Nanoic#8714,2019-01-04,"@isellandbuysoap it's for something I have to do for uni, but whenever I google operator search clojure or ai all I get is webpages written by my tutor.",,
1.89169E+17,srasu#0042,2019-01-04,I've also never heard of it.,,
3.46868E+17,djeis#0042,2019-01-04,"Well, more generically I've seen that used for problems where you know the arguments and result of some expression but not which operators are used where.",,
3.46868E+17,djeis#0042,2019-01-04,There's also this: https://github.com/cognesence/ops-search,,
3.46868E+17,djeis#0042,2019-01-04,Which looks like part of the algorithm behind a goal solver expert system.,,
3.46868E+17,djeis#0042,2019-01-04,ie. something which determines the optimal sequence of actions to get from an initial state to a given goal.,,
3.46868E+17,djeis#0042,2019-01-04,Also called a planner.,,
1.40467E+17,Nanoic#8714,2019-01-05,@djeis where did you find that github?,,
3.46868E+17,djeis#0042,2019-01-05,Google 🤷,,
1.40467E+17,Nanoic#8714,2019-01-05,It's written by my lecturer,,
1.40467E+17,Nanoic#8714,2019-01-05,anyway I found a different way of solving the problem using A*,,
3.46868E+17,djeis#0042,2019-01-05,Neat 😁,,
1.40467E+17,Nanoic#8714,2019-01-05,It sounds very much like it's his own thing,,
3.46868E+17,djeis#0042,2019-01-05,"That terminology is, sure.",,
3.46868E+17,djeis#0042,2019-01-05,"That is, calling it operator search.",,
1.40467E+17,Nanoic#8714,2019-01-05,It does look like an expert system,,
3.46868E+17,djeis#0042,2019-01-05,But STRIPS-style operators are not.,,
3.46868E+17,djeis#0042,2019-01-05,Nor are using them for expert system planners.,,
1.40467E+17,Nanoic#8714,2019-01-05,What my group did was use A* and a LGM on a 2D array.,,
3.46868E+17,djeis#0042,2019-01-05,Nice 😁,,
1.40467E+17,Nanoic#8714,2019-01-05,I'm not sure why we had to write it in clojure,,
1.40467E+17,Nanoic#8714,2019-01-05,and not another language like Java,,
1.40467E+17,Nanoic#8714,2019-01-05,We all had trouble getting clojure running in an IDE on Windows.,,
3.46868E+17,djeis#0042,2019-01-05,"Well, there's cursive.",,
1.40467E+17,Nanoic#8714,2019-01-05,That's what we used,,
3.46868E+17,djeis#0042,2019-01-05,"But yea, the clojure tooling on windows isn't great.",,
1.40467E+17,Nanoic#8714,2019-01-05,but it's an usupported plugin,,
3.46868E+17,djeis#0042,2019-01-05,"No, cursive is its own project altogether.",,
1.40467E+17,Nanoic#8714,2019-01-05,We are using IntelliJ,,
3.46868E+17,djeis#0042,2019-01-05,It's supported by its own organization.,,
1.40467E+17,Nanoic#8714,2019-01-05,with a cursive plugin,,
3.46868E+17,djeis#0042,2019-01-05,"Well sure, you ought to be able to use cursive that way.",,
1.40467E+17,Nanoic#8714,2019-01-05,and also repl,,
1.40467E+17,Nanoic#8714,2019-01-05,I just used notepad++ and gave it to a colleague to run.,,
3.46868E+17,djeis#0042,2019-01-05,But I've only ever installed cursive directly from their website.,,
3.46868E+17,djeis#0042,2019-01-05,As a standalone thing.,,
1.40467E+17,Nanoic#8714,2019-01-05,We have to setup the IDE for clojure every time we use it on the network,,
1.40467E+17,Nanoic#8714,2019-01-05,which takes around half an hour,,
3.46868E+17,djeis#0042,2019-01-05,That's... nonsense.,,
3.46868E+17,djeis#0042,2019-01-05,I believe you.,,
3.46868E+17,djeis#0042,2019-01-05,Still nonsense.,,
1.40467E+17,Nanoic#8714,2019-01-05,We are now using  VM and the uni will no longer let us install things,,
1.40467E+17,Nanoic#8714,2019-01-05,but there is a way around it,,
1.40467E+17,Nanoic#8714,2019-01-05,We don't have the JVM on by default,,
3.46868E+17,djeis#0042,2019-01-05,I really forget how difficult clojure can be on windows sometimes...,,
3.46868E+17,djeis#0042,2019-01-05,"That's unfortunate, because it's really a nice language once you've got it going.",,
1.40467E+17,Nanoic#8714,2019-01-05,What distro are you using?,,
3.46868E+17,djeis#0042,2019-01-05,...Arch,,
3.46868E+17,djeis#0042,2019-01-05,You asked 😛,,
1.40467E+17,Nanoic#8714,2019-01-05,I use Windows 10,,
1.40467E+17,Nanoic#8714,2019-01-05,but I also have Mint installed,,
3.46868E+17,djeis#0042,2019-01-05,Mint's good.,,
3.46868E+17,djeis#0042,2019-01-05,I use mint on my work machines.,,
3.46868E+17,djeis#0042,2019-01-05,"There are, for better or worse, a lot of great languages that can be difficult to set up and run with.",,
1.40467E+17,Nanoic#8714,2019-01-05,For some reason functional languages don't have the same tools.,,
1.40467E+17,Nanoic#8714,2019-01-05,OO has better support.,,
3.46868E+17,djeis#0042,2019-01-05,"Industry, basically.",,
3.46868E+17,djeis#0042,2019-01-05,C++ and Java have ruled the industry for so long.,,
1.40467E+17,Nanoic#8714,2019-01-05,Is it because OOP is easier to learn?,,
3.46868E+17,djeis#0042,2019-01-05,No.,,
3.46868E+17,djeis#0042,2019-01-05,"Primarily OOP languages have just been popular, for a wide variety of reasons, for a while now.",,
3.46868E+17,djeis#0042,2019-01-05,And that has a bit of a positive feedback loop to it.,,
1.40467E+17,Nanoic#8714,2019-01-05,My education was mostly Java focused with some C#,,
1.40467E+17,Nanoic#8714,2019-01-05,I've tried applying for junior Java developer jobs but most of them seem to be for C#.,,
3.46868E+17,djeis#0042,2019-01-05,Java and C# are both being pushed forward by large companies.,,
3.46868E+17,djeis#0042,2019-01-05,And are good choices if you want broad opportunities in industry 🤷,,
1.40467E+17,Nanoic#8714,2019-01-05,I've never been successful in my applications though.,,
1.40467E+17,Nanoic#8714,2019-01-05,I often hear back but that's as far as it goes.,,
3.46868E+17,djeis#0042,2019-01-05,There's a lot more to programming than what you'll get out of surface Java or surface C# tho.,,
3.46868E+17,djeis#0042,2019-01-05,And maybe it'll look better on applications if you seem driven and capable of learning new weird stuff 🤷,,
3.46868E+17,djeis#0042,2019-01-05,Every programming project is full of new weirdness.,,
1.40467E+17,Nanoic#8714,2019-01-05,Only stuff I've messed around with,,
1.40467E+17,Nanoic#8714,2019-01-05,"In my free time I've used an API for graphical python, RPG simulators and levelling calculators in C++, simple Unity games and a little Minecraft modding.",,
1.40467E+17,Nanoic#8714,2019-01-05,I've also learned how to program a basic server that I can upload files to in python and a keyboard controlled sprite in a Window in C#.,,
1.40467E+17,Nanoic#8714,2019-01-05,Fun projects that I no longer have time for.,,
3.46868E+17,djeis#0042,2019-01-05,Nice 😁,,
3.46868E+17,djeis#0042,2019-01-05,"And, fair enough.",,
1.40467E+17,Nanoic#8714,2019-01-05,I've heard about people publishing a website with their portfolio to try and get a job,,
1.40467E+17,Nanoic#8714,2019-01-05,Should I just publish screenshots of my programs or the source code as well?,,
3.46868E+17,djeis#0042,2019-01-05,"Putting source on Github can't hurt, but I admit that I'm probably not the best person to be asking.",,
4.91633E+17,daslu#1708,2019-01-16,"Hi!

We are discussing the possibility of an online meeting around data science in clojure:
https://clojureverse.org/t/online-meeting-clojure-data-science/3503
- would love to hear your comments.",,
2.98148E+17,lepistane#2482,2019-01-17,"@daslu  i have little bit experience in this matter. 
Always have a checklist or a 'scheduled program' of things you wanna do and say
basically be a leader of the event and guide people if they come.

second - record the event and share it where ever possible. This helps community quite a bit

third - i'd be really interested in this if you are really going to make it happen share wherever possible the start date and time. We used google hangouts for this and it was lovely",,
4.91633E+17,daslu#1708,2019-01-17,"Thanks @lepistane , this helps a lot.",,
4.91633E+17,daslu#1708,2019-01-17,"Do you know how to find that recording of the meeting you organized?   I would love to learn from it.   Also, it would be great if you could join the discussion we are having at clojureverse. Thanks again for your advice.",,
4.91633E+17,daslu#1708,2019-01-19,Further discussing the format of the meeting under another topic: https://clojureverse.org/t/online-meeting-clojure-data-science-discussing-the-format/3643 …,,
4.91633E+17,daslu#1708,2019-01-22,"Hi. Continuing the clojureverse discussions of the last few days, we wish to add some slower discussion, focused around topics.

The discussions  continue at Zulip, under the data-science stream:  https://clojurians.zulipchat.com/#narrow/stream/151924-data-science.

For background on Zulip, see this discussion: https://clojureverse.org/t/introducing-clojurians-zulip/3173.

See you!",,
4.91633E+17,daslu#1708,2019-01-23,"Hi!
We made this questionnaire to prepare for the Clojure data science online meeting.

https://bit.ly/2FJgom2

Your response here will be extremely helpful!

Thanks!",,
2.53771E+17,maplechori#8012,2019-01-23,Does anyone run Clojure on a Wildfly App Server? Has anyone had an issue where the Response Headers leak into the body of the response?,,
8.44813E+16,omegacon#2493,2019-01-27,Anyone have any examples for sending edn data to a server?,,
2.18602E+17,lsenjov#4288,2019-01-27,As in a straight curl request?,,
8.44813E+16,omegacon#2493,2019-01-27,"yea, I was trying to use clj-http, but there is no edn option like there is json for form-params",,
8.44813E+16,omegacon#2493,2019-01-27,but what I want to do is be able to have a server evaluate code on the fly by sending edn to it.,,
8.44813E+16,omegacon#2493,2019-01-27,so maybe there is a better option,,
1.89169E+17,srasu#0042,2019-01-27,I do believe clj-http will auto-encode and decode clj data if you just straight up pass it clojure data.,,
1.89169E+17,srasu#0042,2019-01-27,but also having a server evaluate code sent from a client is a terrible idea.,,
8.44813E+16,omegacon#2493,2019-01-27,"its not for any serious production idea for me, just some toy idea I had while buliding something for fun.",,
8.44813E+16,omegacon#2493,2019-01-27,"but yea I tried just sending some clojure data directly, but no luck really so far. hopefully I can find an example somewhere",,
1.89169E+17,srasu#0042,2019-01-27,You could just call pr on your data and use plaintext mode,,
8.44813E+16,omegacon#2493,2019-01-27,"yea I actually tried that but was getting some weird results, I tried (pr '(defn som-func ...)) but when it reached the server I got ""to many arguments (1) to 'some-func'. At that point thought it would be easier to learn just how to send edn",,
2.18602E+17,lsenjov#4288,2019-01-27,"If you need to do it manually, `pr-str` will convert edn to a string, and `clojure.edn/read-string` will parse it back",,
1.89169E+17,srasu#0042,2019-01-27,that's what I was talking about actually,,
8.44813E+16,omegacon#2493,2019-01-27,yea thats what I did ill paste some code with my error,,
8.44813E+16,omegacon#2493,2019-01-27,https://pastebin.com/G1R6EnUX,,
8.44813E+16,omegacon#2493,2019-01-27,not really sure how that is possible,,
8.44813E+16,omegacon#2493,2019-01-27,tried with both edn/read-string and core/read-string,,
2.18602E+17,lsenjov#4288,2019-01-27,`(read-string some-edn)` -> `(clojure.edn/read-string some-edn)`,,
2.18602E+17,lsenjov#4288,2019-01-27,"Also, IIRC every function there takes a map of request & session arguments",,
2.18602E+17,lsenjov#4288,2019-01-27,You might want to throw in a `(println (pr-str args))` to one of those routes,,
2.18602E+17,lsenjov#4288,2019-01-27,So you can see all the data it provides,,
2.18602E+17,lsenjov#4288,2019-01-27,Or just replace hello with `pr-str`,,
2.18602E+17,lsenjov#4288,2019-01-27,And it should return all the data in plain text,,
2.18602E+17,lsenjov#4288,2019-01-27,"`(POST ""/"" [some-edn] (eval (read-string some-edn)))` -> `(GET ""/"" [args] (println (pr-str args))`",,
8.44813E+16,omegacon#2493,2019-01-27,hmm cant seem to get that GET to work,,
8.44813E+16,omegacon#2493,2019-01-27,the call should mostly be the same right? with replacing client/post with client/get,,
2.18602E+17,lsenjov#4288,2019-01-27,"Let me go check a couple things, one moment",,
8.44813E+16,omegacon#2493,2019-01-27,"this is what I am getting tho when I am printing it, second one after read-string
""(defn hello [] \""hi there\"")""
(defn hello [] hi there)",,
8.44813E+16,omegacon#2493,2019-01-27,so quotes seem to be gone,,
8.44813E+16,omegacon#2493,2019-01-27,weird thing is this all works before I send it over 😦,,
2.18602E+17,lsenjov#4288,2019-01-27,"Wait, are you using compojure?",,
2.18602E+17,lsenjov#4288,2019-01-27,Because my sigs seem way different to whatever you're using,,
2.18602E+17,lsenjov#4288,2019-01-27,"Do a `(GET ""/ping"" args args)`",,
8.44813E+16,omegacon#2493,2019-01-27,yea I am,,
8.44813E+16,omegacon#2493,2019-01-27,ok,,
8.44813E+16,omegacon#2493,2019-01-27,getting a 404 when I try that syntax,,
8.44813E+16,omegacon#2493,2019-01-27,"(client/get ""http://localhost:3000/ping"")",,
8.44813E+16,omegacon#2493,2019-01-27,that pasted weird,,
8.44813E+16,omegacon#2493,2019-01-27,"ok I am not sure why its working now, but I am able to eval the ptr-str without crashing the server",,
8.44813E+16,omegacon#2493,2019-01-27,but im now not changing the state,,
8.44813E+16,omegacon#2493,2019-01-27,of hello,,
8.44813E+16,omegacon#2493,2019-01-27,"```(POST ""/"" [some-edn] (pr-str (eval (edn/read-string some-edn))))``` now returns back,  ""#'clojure.core/hello""",,
8.44813E+16,omegacon#2493,2019-01-27,huh,,
2.18602E+17,lsenjov#4288,2019-01-27,"As a side note, not sure if `[some-edn]` should just be `some-edn`",,
2.18602E+17,lsenjov#4288,2019-01-27,My own projects seem to indicate the latter,,
8.44813E+16,omegacon#2493,2019-01-27,yea I have done that in the distant past before (dont touch web that often) but does not work for me now.,,
8.44813E+16,omegacon#2493,2019-01-27,should I include the namespace in my defn? its just weird its not using the namespace where the routes are located,,
2.18602E+17,lsenjov#4288,2019-01-27,"No, your defn will automatically be namespaced depending on what your last `ns` call was",,
8.44813E+16,omegacon#2493,2019-01-27,but I want to overwrite my hello function from the 'client',,
2.18602E+17,lsenjov#4288,2019-01-27,What is this supposed to be doing anyway? Evaluating arbitrary code on the server from the client?,,
2.18602E+17,lsenjov#4288,2019-01-27,"In which case you don't want to be using `clojure.edn/read-string`, you want to be using straight `eval`",,
8.44813E+16,omegacon#2493,2019-01-27,yea,,
8.44813E+16,omegacon#2493,2019-01-27,let me try that,,
2.18602E+17,lsenjov#4288,2019-01-27,read-string specifically returns a data structure,,
2.18602E+17,lsenjov#4288,2019-01-27,eval will evaluate the string in all its unsafe glory,,
8.44813E+16,omegacon#2493,2019-01-27,"when I eval a string, I just get the string back",,
8.44813E+16,omegacon#2493,2019-01-27,but the goal specifically here is to replace the definition of the hello function with a new one,,
2.18602E+17,lsenjov#4288,2019-01-27,"Correct, because a string will evaluate to itself",,
8.44813E+16,omegacon#2493,2019-01-27,so I would still need read-string?,,
2.18602E+17,lsenjov#4288,2019-01-27,"Hold on, let me think what you're doing",,
2.18602E+17,lsenjov#4288,2019-01-27,"Actually, ignore what I just said",,
2.18602E+17,lsenjov#4288,2019-01-27,Just trying to figure out what's happening,,
8.44813E+16,omegacon#2493,2019-01-27,"yea I havnt been to specific, I have on the server ```(defn hello [] ""hey"")``` I want to evaluate code that will replace hello with ```(defn hello [] ""hi there""```",,
8.44813E+16,omegacon#2493,2019-01-27,thats why the GET is calling hello with (#'hello),,
2.18602E+17,lsenjov#4288,2019-01-27,"Ahhhh right, for _this_ case you don't want to be using edn/read-string",,
2.18602E+17,lsenjov#4288,2019-01-27,You want to be using clojure.core/read-string,,
2.18602E+17,lsenjov#4288,2019-01-27,"`(eval (read-string (pr-str '(defn hello [] ""hi there""))))` -> `#'user/hello`",,
2.18602E+17,lsenjov#4288,2019-01-27,"`(pr-str '(defn hello [] ""hi there""))` is your client side",,
8.44813E+16,omegacon#2493,2019-01-27,alright let me try that,,
2.18602E+17,lsenjov#4288,2019-01-27,`(eval (clojure.core/read-string s))` is your server side,,
2.18602E+17,lsenjov#4288,2019-01-27,"The read-string will convert the list to a data structure of symbols, then eval will evaluate it",,
8.44813E+16,omegacon#2493,2019-01-27,"interesting, ok so im wrapping that eval just to return something back with ```(pr-str ...``` and I am still getting back ""#'clojure.core/hello""",,
2.18602E+17,lsenjov#4288,2019-01-27,Huh... edn/read-string also works,,
8.44813E+16,omegacon#2493,2019-01-27,why is it defining it under clojure.core namespace?,,
8.44813E+16,omegacon#2493,2019-01-27,"and the GET still returns the ""hey""",,
2.18602E+17,lsenjov#4288,2019-01-27,"Oh right, I completely misread your issue again (sorry it's still morning)",,
2.18602E+17,lsenjov#4288,2019-01-27,"So the code is working, just in the wrong namespace",,
2.18602E+17,lsenjov#4288,2019-01-27,One moment,,
2.18602E+17,lsenjov#4288,2019-01-27,You'll probably need something like http://clojuredocs.org/clojure.core/in-ns,,
2.18602E+17,lsenjov#4288,2019-01-27,"The code is evaluating, and it's returning the defined symbol for your function. No idea why it's declaring it in clojure.core though",,
2.18602E+17,lsenjov#4288,2019-01-27,I don't have context around where the routes are defined,,
8.44813E+16,omegacon#2493,2019-01-27,yea thats really bizzare,,
8.44813E+16,omegacon#2493,2019-01-27,also full code for reference https://pastebin.com/01uTXke7,,
2.18602E+17,lsenjov#4288,2019-01-27,"Your call could instead be
```clj
'(do (in-ns 'some.namespace) (defn hello [] ""hi there""))
```",,
8.44813E+16,omegacon#2493,2019-01-27,"yea trying this now
```(pr-str
                   '(do
                      (in-ns 'live-update.handler)
                      (defn hello
                        []
                        ""hi there"")))```

but crashing with

```java.lang.IllegalStateException: Can't change/establish root binding of: *ns* with set```",,
2.18602E+17,lsenjov#4288,2019-01-27,Try `ns` instead of `in-ns`?,,
8.44813E+16,omegacon#2493,2019-01-27,bizzare... I run into a runtime error on the client simply by changing to 'in-ns' to 'ns',,
8.44813E+16,omegacon#2493,2019-01-27,"```No such namespace: client
```",,
2.18602E+17,lsenjov#4288,2019-01-27,Errr remove the `'` from live-update.handler,,
2.18602E+17,lsenjov#4288,2019-01-27,Maybe,,
8.44813E+16,omegacon#2493,2019-01-27,"yea just tried that aswell 😄 better! but I got
```clojure.lang.Compiler$CompilerException: java.lang.ClassNotFoundException: live-update.handler, compili
ng:(NO_SOURCE_PATH:0:0)                                                                                ```",,
8.44813E+16,omegacon#2493,2019-01-27,hmmm,,
8.44813E+16,omegacon#2493,2019-01-27,thats with in-ns,,
8.44813E+16,omegacon#2493,2019-01-27,ns still gets an error no matter what,,
1.89169E+17,srasu#0042,2019-01-27,"Well if you're trying to evaluate code like a repl, may I suggest looking into actually starting a repl server and using the input from the website to input into that?
I've used that technique to modify my discord bots while they are running, and using the built in repl tools are much easier to handle than dealing with other things.",,
1.89169E+17,srasu#0042,2019-01-27,like simply using eval,,
1.89169E+17,srasu#0042,2019-01-27,For this in particular you might want to look at prepl,,
8.44813E+16,omegacon#2493,2019-01-27,"yea, I am starting to think this isnt really possible her 😦",,
8.44813E+16,omegacon#2493,2019-01-27,without doing something like that,,
1.89169E+17,srasu#0042,2019-01-27,I mean prepl and the repl tools are literally designed for what you're doing,,
1.89169E+17,srasu#0042,2019-01-27,Is there some reason you were avoiding using them?,,
8.44813E+16,omegacon#2493,2019-01-27,"no not really, mostly experimentation im not really that bummed out haha",,
8.44813E+16,omegacon#2493,2019-01-27,is there a way to 'save' your code/state with a repl?,,
1.89169E+17,srasu#0042,2019-01-27,If you want it to be persistent you'd have to save the forms somewhere and run them again when you boot the thing.,,
1.89169E+17,srasu#0042,2019-01-27,At least that's the easiest way to do that.,,
1.89169E+17,srasu#0042,2019-01-27,Just have an append-only clj file which you call load on when you boot your program.,,
1.89169E+17,srasu#0042,2019-01-27,and then all your repl calls just get output to the end of the file,,
8.44813E+16,omegacon#2493,2019-01-27,"yea, I guess the long term goal is kind of a ""workflow"" experiment. I want to have a server constantly running a project and for me to develop  while its running for as long as possible without restarting",,
1.89169E+17,srasu#0042,2019-01-27,But I wouldn't call that advisable.,,
1.89169E+17,srasu#0042,2019-01-27,"Ah, well in that case you probably don't want to be using a repl inside the environment.",,
8.44813E+16,omegacon#2493,2019-01-27,yea,,
1.89169E+17,srasu#0042,2019-01-27,this might come closest to what you're looking to do: https://sekao.net/nightlight/,,
8.44813E+16,omegacon#2493,2019-01-27,"o yea thats pretty much exactly what I want, except it does not look like it will run on a server while you can edit from any client",,
8.44813E+16,omegacon#2493,2019-01-27,really really cool tho,,
8.44813E+16,omegacon#2493,2019-01-27,"night projects have been cool, but dont seem to get very far",,
1.89169E+17,srasu#0042,2019-01-27,That's exactly what it does,,
1.89169E+17,srasu#0042,2019-01-27,it spins up a webserver that you then can log into as your IDE,,
1.89169E+17,srasu#0042,2019-01-27,"And this is his main project that's been going for years, and he's still updating. Released a new update to it less than a week ago.",,
1.89169E+17,srasu#0042,2019-01-27,"right in the FAQ it says ""Can I use this to develop on a remote server? Yes""",,
8.44813E+16,omegacon#2493,2019-01-27,o,,
8.44813E+16,omegacon#2493,2019-01-27,thanks!,,
1.89169E+17,srasu#0042,2019-01-27,No problem!,,
8.44813E+16,omegacon#2493,2019-01-27,thats really cool!,,
1.89169E+17,srasu#0042,2019-01-27,There is one issue with Nightlight though.,,
1.89169E+17,srasu#0042,2019-01-27,"If your code doesn't compile in the first place, you can't get it to boot.",,
8.44813E+16,omegacon#2493,2019-01-27,haha 😄,,
1.89169E+17,srasu#0042,2019-01-27,So your code has to be in a state where it can compile before you can boot into the editor.,,
8.44813E+16,omegacon#2493,2019-01-27,yea that makes sense,,
1.89169E+17,srasu#0042,2019-01-27,"Once the editor is running, then you can make whatever changes you want. But when you boot it, it has to be able to compile.",,
8.44813E+16,omegacon#2493,2019-01-27,dont you love it when ppl have already made tools you were willing to work long on 😄,,
8.44813E+16,omegacon#2493,2019-01-27,but now I miss out on making it 😄,,
1.89169E+17,srasu#0042,2019-01-27,Lol,,
1.89169E+17,srasu#0042,2019-01-27,You can still make a tool that does that or a similar thing,,
1.89169E+17,srasu#0042,2019-01-27,Having multiple options for that kind of thing will inevitably improve all of them,,
8.44813E+16,omegacon#2493,2019-01-27,"yea but when you discover something like this, your laziness jumps 100%",,
8.44813E+16,omegacon#2493,2019-01-27,😛,,
8.44813E+16,omegacon#2493,2019-01-27,until you get fed up with something that is,,
1.89169E+17,srasu#0042,2019-01-27,"Lol, not me. I saw someone made a discord api and I just tried to learn from it as soon as I started making my own.",,
8.44813E+16,omegacon#2493,2019-01-27,😄 your a stronger man than I,,
1.89169E+17,srasu#0042,2019-01-27,Lol. I've just been doing this for long enough that I've learned not to let the fact that someone else has done it get to me.,,👌 (2)
8.44813E+16,omegacon#2493,2019-01-27,"well tbh, its a little weird such functionality is tied to your editor, so I lose all my emacs stuffs. maybe it is worth looking into",,
2.18602E+17,lsenjov#4288,2019-01-27,"Uhhhh ""lose all my emacs""",,
2.18602E+17,lsenjov#4288,2019-01-27,Mate,,
2.18602E+17,lsenjov#4288,2019-01-27,Cider (the repl library) is emacs first,,
2.18602E+17,lsenjov#4288,2019-01-27,https://github.com/clojure-emacs/cider,,
8.44813E+16,omegacon#2493,2019-01-28,I use cider I was just saying nightlite is a editor so I couldn't use it with emacs,,
1.89169E+17,srasu#0042,2019-01-28,TRUE,,
2.18602E+17,lsenjov#4288,2019-01-29,"Oh derp, my bad",,
2.53771E+17,maplechori#8012,2019-01-30,Is there any way for c3p0 not to show the username/password when connecting?,,
2.53771E+17,maplechori#8012,2019-01-30,nevermind just rewrote the log level in the properties,,
2.53771E+17,maplechori#8012,2019-01-30,and that was that,,
2.98148E+17,lepistane#2482,2019-01-31,👌,,
5.31716E+17,DatDamnZotz#7962,2019-02-18,anyone have a snippet for on enter key click button?,,
5.31716E+17,DatDamnZotz#7962,2019-02-18,or how to make a :button.form-button the default,,
2.98148E+17,lepistane#2482,2019-02-19,please give us more info,,
2.98148E+17,lepistane#2482,2019-02-19,are u using reagent?,,
2.98148E+17,lepistane#2482,2019-02-19,"https://reagent-project.github.io/

look for `managing state`",,
5.31716E+17,DatDamnZotz#7962,2019-02-19,Yes @lepistane,,
5.31716E+17,DatDamnZotz#7962,2019-02-19,"Basically I’m trying to get the form here to submit when you hit enter...
https://github.com/Orcpub/orcpub/blob/develop/src/cljs/orcpub/dnd/e5/views.cljs#L920",,
2.98148E+17,lepistane#2482,2019-02-19,"try this```:on-key-press (fn [e]
                         (println ""key press"" (.-charCode e))
                         (if (= 13 (.-charCode e))
                           (println ""ENTER"")
                           (println ""NOT ENTER"")))```",,
5.31716E+17,DatDamnZotz#7962,2019-02-19,"it looks like the other on-change event is firing and on-key-press isn't working...

I've seen:
https://stackoverflow.com/a/35707795
More specifically...
https://stackoverflow.com/a/48025659
[:input {:on-key-press (fn [e] (if (= (.-key e) ""Enter"") (.log js/console ""Enter"") (.log js/console ""Not Enter"")))}]",,
1.89169E+17,srasu#0042,2019-02-19,ORCPUB IS CLJS? Awesome!,,
5.31716E+17,DatDamnZotz#7962,2019-02-19,you use it @srasu ?,,
5.31716E+17,DatDamnZotz#7962,2019-02-19,couple of the dev guys got a docker for a local install running..,,
1.89169E+17,srasu#0042,2019-02-20,"I've used it before, but it got really inconsistent in its hosting and we migrated to using Fantasy Grounds, so my character sheet is hosted there now. And my other games aren't even in D&D anymore, so unfortunately, not anymore. I liked it though.",,
5.31716E+17,DatDamnZotz#7962,2019-02-20,"@srasu  That's the feed back that I get from a lot of people, love the site but it being up/down caused alot of people to go sour on it. I'm not sure what went down with the author and WoTC but the community has picked up the code base and published a more stable site.   We have asked the author if he would transition it over to the community, he said yes, but then went dark.  I'm not sure at this point if it is just going to die on the vine, or we need to re-launch.  Cool chuck of code though.  It's been fun tinkering with it.",,
1.89169E+17,srasu#0042,2019-02-20,I mean actually I liked it regardless of the downtime. It mostly got my DM angry with it. XD,,
5.31716E+17,DatDamnZotz#7962,2019-02-20,angry as in how? the downtime?,,
1.89169E+17,srasu#0042,2019-02-20,"yeah, he kept wanting to read my sheet, and there were a couple times where my sheet was down during a session so I had to play off memory",,
5.31716E+17,DatDamnZotz#7962,2019-02-20,Gotcha.,,
5.31716E+17,DatDamnZotz#7962,2019-02-20,"Good feed back, since I'm the host master of the new site.",,
1.89169E+17,srasu#0042,2019-02-20,"Oh, cool! Good luck with that!",,
1.89169E+17,srasu#0042,2019-02-20,"I'd probably use it again, but like I said, fantasy grounds for one night, and not D&D for the other two (so I've just made my own custom character sheet in org mode for emacs)",,
4.91633E+17,daslu#1708,2019-03-17,"Online clojure data science gathering, featuring the new tech.ml platform:
https://twitter.com/scicloj/status/1107397146578509824",,
2.24547E+17,nxtk#0755,2019-04-24,"touched core async for the first time today consider reviewing my crazy debouncer
```clojure
(defn debounce
  ([c ms] (debounce c (chan) ms))
  ([c c' ms]
   (let* [vkey (volatile! nil)
          deliver (fn [key val]
                    (go (<! (timeout ms))
                        (when (= key @vkey)
                          (>! c' val))))]
     (go-loop []
       (let [val (<! c)
             key (vreset! vkey (Object.))]
         (deliver key val))
       (recur)))
   c'))
```",,
2.24547E+17,nxtk#0755,2019-04-24,"well if you understand whats going on, because i've lost connection to reality
<http://benalman.com/code/projects/jquery-throttle-debounce/examples/debounce/>",,
1.89169E+17,srasu#0042,2019-04-24,using a volatile accross threads like that is Not Good™,,
1.89169E+17,srasu#0042,2019-04-24,also why let*?,,
1.89169E+17,srasu#0042,2019-04-24,This isn't common lisp where you need let* to allow you to reference an earlier definition in a later definition.,,
1.89169E+17,srasu#0042,2019-04-24,"the convention in clojure is that functions/macros with a star after them are like functions with % in front of them in CL. That is, they are implementation-details which you generally shouldn't touch.",,
1.89169E+17,srasu#0042,2019-04-24,"Also as an aside, this a, generates copious amounts of garbage, and b, probably doesn't work as intended, does it?",,
1.89169E+17,srasu#0042,2019-04-24,"Because right now it will only deliver onto the other chan if no value comes from the first chan in the ms time frame. If the same value is sent in that same time frame however, it won't deliver that value once, let alone twice.",,
1.89169E+17,srasu#0042,2019-04-24,"You probably should change it to use keywords so that they are interned and you won't have to deal with generating tons of garbage, and also so that you can insert an equality check on what you're trying to deliver and what you just recieved, to see if you can keep doing the deliver since the values are equal.",,
4.101E+17,winter#6414,2019-05-03,Is there anyone who uses honeysql here?,,
1.89169E+17,srasu#0042,2019-05-03,I'm not aware of anyone who does,,
2.53771E+17,maplechori#8012,2019-05-05,anything running their clojure apps on wildfly ?,,
4.56227E+17,Deleted User#0000,2019-05-05,"Not me, but I've been curious about it.",,
2.53771E+17,maplechori#8012,2019-05-05,it works fine with some caveats,,
2.53771E+17,maplechori#8012,2019-05-05,regarding memory which is what im looking to address,,
4.56227E+17,Deleted User#0000,2019-05-06,i've ran clojure apps on wildfly @maplechori,,
4.56227E+17,Deleted User#0000,2019-05-06,what kind of memory issues are you having?,,
4.56227E+17,Deleted User#0000,2019-05-06,are you having memory issues right after deployment or is it after it has been running for a long time?,,
2.53771E+17,maplechori#8012,2019-05-06,After a long time. Trying to have it shrink the max heap when memory is low on the jvm. We would like to scale out when memory consumption rises. ( we keep large objects in memory ),,
4.56227E+17,Deleted User#0000,2019-05-06,are you using immutant?,,
4.56227E+17,Deleted User#0000,2019-05-06,and you should be able to profile it to see what is going on,,
4.56227E+17,Deleted User#0000,2019-05-06,i use WF 13. are you on 10 or lower?,,
2.53771E+17,maplechori#8012,2019-05-06,10,,
2.53771E+17,maplechori#8012,2019-05-06,Not using immutant,,
4.56227E+17,Deleted User#0000,2019-05-06,it could be your jvm params. i would profile it to see what's going on. simulate load.  manually run GC to see what it does.,,
4.56227E+17,Deleted User#0000,2019-05-06,but i dont think it would be clojure specific. but the profiler would show some insight. there's also #wildfly on freenode. they might have some wf specific tips,,
2.53771E+17,maplechori#8012,2019-05-06,"Thanks, I am profiling this morning. Might have more insight later.",,
4.56227E+17,Deleted User#0000,2019-05-06,okay. if you have any more info i might be able to help more. feel free to @me or dm me. im not the best at checking channels in discord,,
4.56227E+17,Deleted User#0000,2019-05-06,also have you looked into immutant? It seems rather abandoned but I have a local version updated to WF 13 with artemis (dropped hornetq) and basically everything else updated.,,
4.56227E+17,Deleted User#0000,2019-05-06,i should probably do a PR,,
2.53771E+17,maplechori#8012,2019-05-06,Hard to move big companies from one thing to another,,
2.53771E+17,maplechori#8012,2019-05-06,I have like zero sway,,
4.56227E+17,Deleted User#0000,2019-05-06,yeah i understand that,,
2.53771E+17,maplechori#8012,2019-05-06,Problem seems to be poi,,
4.56227E+17,Deleted User#0000,2019-05-06,i dont know what poi is,,
2.53771E+17,maplechori#8012,2019-05-06,Apache Poi,,
2.53771E+17,maplechori#8012,2019-05-06,"But nope, it was us",,
2.53771E+17,maplechori#8012,2019-05-06,"Found the problem, patched, jvm cleaning properly",,
4.56227E+17,Deleted User#0000,2019-05-06,@maplechori awesome. glad to hear.,,
2.53771E+17,maplechori#8012,2019-05-06,back to converting old jquery javascript to reagent,,
4.56227E+17,Deleted User#0000,2019-05-06,nice. reagent is good stuff.,,
4.56227E+17,Deleted User#0000,2019-05-06,reagent+re-frame is an amazing combination,,💯 (1)
1.89169E+17,srasu#0042,2019-05-06,Truth,,
2.98148E+17,lepistane#2482,2019-05-07,for a bit @winter (about honeysql) why?,,
4.101E+17,winter#6414,2019-05-09,"@lepistane I was trying to implement some sql statement using honeysql, and in this case it needs to call some function which is `crypt`. And it turns out using `sql/call` does not accept a result of calling another `sql/call`, so this doesn't work: `(sql/call :crypt ""foo"" (sql/call :gen_salt ""bf""))`",,
4.101E+17,winter#6414,2019-05-09,"Then I decided to just use hugsql, but I still want to know how to do that in honeysql tho if you know the asnwer",,
4.101E+17,winter#6414,2019-05-09,"Oh if I may add another question, how do you structure a project that structured as submodules, like `reitit`. After cloning and inspecting the repo, I found out that they only use 1 big git repo, so the little submodules inside it is treated as just another source code. Is that the way to go or are there any more ""correct"" approach?",,
2.98148E+17,lepistane#2482,2019-05-09,"try to fetch result first and then use the result 
`(let [first-call (sql/call :gen_salt ""bf""] (sql/call :crypt ""foo"" first-call)` maybe it would've been easier if you shared message also but i havent come across this. I prefer hugsql for most of my projects

submodule threw me off :D
that is kinda new approach that i've seen in the past year or so

there is no right answer. clojure people don't are how u structure it as long as it's understandable. we dont like conventions that much we prefer flexibility 

there are many attempts to have subproject within the project so it's easier to develop with them. Reitit example seems fine
have a look at https://www.youtube.com/watch?v=Y3FfLq8QATY&feature=youtu.be

i usually like to separate my stuff just by namespace if that namespace or folder of feature grows so big that i need to make new project.clj for it then i would make another repo and add it as dependency.

Sometimes it's more convenient to have everything in one place - basically it's up to you",,
2.98148E+17,lepistane#2482,2019-05-09,@winter,,
1.82016E+17,WhoNeedszZz#9017,2019-05-14,"@winter Late to the conversation here, but just wanted to add my two cents so you have more than one person answering your question. I also happen to be on the other side of the fence of lepistane and firmly believe that conventions are very important as they allow for consistency across a team of developers, whom likely have different backgrounds and experience. I've never seen a dev team that says they don't care about conventions that produce quality code (not that it doesn't exist, but in my experience it doesn't happen). 

Regarding your direct question - I'm not entirely sure what you mean by submodules with the reitit examples. If you mean the combination of back-end and front-end code into the same project then I would agree in part with lepistane that there is no ""correct"" way, but I will say that I do believe that separating is the better choice as it clearly decouples the front-end from the back-end and is then much easier to reason about and thus write code for, in my experience. There is a reason that in re-frame the documentation clearly suggests separating namespaces, despite many people failing to understand the value in that and going against the grain. I would not use the fact that people do it to indicate that it is a good idea. The documentation illustrates the purpose of doing so very clearly.

Also, as you alluded to, separating out gives another advantage of informing you when you are doing something sub-optimal by your namespace growing too large. That's a clear sign of a design flaw and if everything is in one place that is much harder to notice, if at all.",,
1.89169E+17,srasu#0042,2019-05-14,So the whole polylith thing. That's very interesting. It just seems like a slight expansion on the natural way to develop software to me.,,
2.24547E+17,nxtk#0755,2019-05-14,yeah program to interfaces + a little of the clojure specific project organization,,
2.98148E+17,lepistane#2482,2019-05-15,"@WhoNeedszZz i can agree with 'conventions' and quality code.  Maybe i dislike the word or what i had represented in my career. It usually was 'we are doing this because others are doing it' it wasn't coming from the 'i understand why we need these conventions and we follow them cause they allow us to do XYZ easily now or in the future'

i am pretty sure he was asking about subprojects in reitit. They dont have project separated by namespace only but different subprojects. check this https://github.com/metosin/reitit/tree/master/modules

and in clojure community right now AS FAR AS I KNOW there is convention for projects. 
I saw succesful clojure projects that had Java Spring conventions with controllers, views etc...
I saw others where each 'component' was separate file .
retiti - components is separate project within bigger project.
and i worked in a team where new information flows would go to different namespace.",,
2.98148E+17,lepistane#2482,2019-05-15,"i honesly haven't tried polylith. Closest i've come is what reitit follows subprojects inside a monolith. mostly i like sparaption by namespace and that grows enough to create sparate project out of it.

But i like the idea and as you said it feels natural",,
1.82016E+17,WhoNeedszZz#9017,2019-05-15,"Ok, I can understand that point of view. So you basically experienced the cliche of your teams following certain standards just for the sake of it, without actually understanding why it was being done or why it was beneficial. I can relate to that and that certainly is a primary issue with dev teams. Without understanding why a standard exists it's very difficult to follow correctly and reify the benefits. That being said, how the code is structured is extremely important and directly affects how you reason about it. Whether or not you separate out the namespaces, for example, is not just a simple choice, but directly impacts the results amongst the team.",,
1.82016E+17,WhoNeedszZz#9017,2019-05-15,"Another example - just about all of the criticism I've seen of re-frame has been related to the separation of the namespaces and Mike Thompson explicitly explained why you should keep them separated and why the template exists that way. Yet these people that complain about it I've found to not follow the template, and some even outright blatantly saying it is incorrect (how do you tell the creator of a framework that their own template for it is incorrect?!...talk about arrogance), and then not reify the benefits so they think there weren't any to begin with.",,
2.98148E+17,lepistane#2482,2019-05-16,i agree with you.,,
2.53771E+17,maplechori#8012,2019-06-10,Anyone know if ajax.core in clojurescript can handle chunked encoding?,,
1.89169E+17,srasu#0042,2019-06-10,if that's a standard thing ajax implementations have then i'd assume so.,,
4.56227E+17,Deleted User#0000,2019-06-10,it's just a cljs wrapper for Xhrio or XmlHttpRequest. so it probably supports the same as those,,
4.56227E+17,Deleted User#0000,2019-06-10,if there's not support you might be able to do something similar to the progress-handler,,
4.56227E+17,Deleted User#0000,2019-06-10,i would be interested in what you find out. maybe some http/2 stuff would be a better fit? SSE or http streaming?,,
4.56227E+17,Deleted User#0000,2019-06-10,oh nevermind. i read that wrong. encoding would be different,,
2.53771E+17,maplechori#8012,2019-06-11,"Yeah, seems it is just a backend issue",,
2.53771E+17,maplechori#8012,2019-06-11,Not frontend,,
1.63628E+17,tufflax#8251,2019-06-21,"I'm trying to print a stack trace using the default uncaught exception handler, like this:
```(Thread/setDefaultUncaughtExceptionHandler
   (reify Thread$UncaughtExceptionHandler
     (uncaughtException [this thread e]
       (println ""HELLO"")
       (.printStrackTrace e *out*)
       (.printStrackTrace e *err*))))
```
""HELLO"" prints but no stack trace. Anyone know why?",,
1.63628E+17,tufflax#8251,2019-06-21,"Lol, I misspelled Stack",,
1.89169E+17,srasu#0042,2019-06-21,"wat, this means we could make the common lisp debugger using conditions and restarts. o.0",,
1.89169E+17,srasu#0042,2019-06-21,i didn't realize that was a thing,,
3.46868E+17,djeis#0042,2019-06-21,Does that run without unwinding the stack tho?,,
1.89169E+17,srasu#0042,2019-06-21,good point,,
1.89169E+17,srasu#0042,2019-06-21,I doubt it,,
4.06271E+17,blahblubliblu#4760,2019-06-22,"Hey folks! Not sure if this belongs to #beginners, but Is there a way to run this code on REPL without it closing the repl connection when closing the JFrame?
```clojure
(doto (javax.swing.JFrame.)
      (.setSize 500 500)
      (.setDefaultCloseOperation javax.swing.JFrame/EXIT_ON_CLOSE)
      (.setVisible true))
```

After closing the window and typing ENTER on repl it shows ""SocketException The transport's socket appears to have lost its connection to the nREPL server""",,
1.89169E+17,srasu#0042,2019-06-22,you'd have to use a different close operation,,
1.89169E+17,srasu#0042,2019-06-22,exit on close will do a jvm exit,,
4.06271E+17,blahblubliblu#4760,2019-06-22,"ah, ok then, thanks!",,
1.89169E+17,srasu#0042,2019-06-22,no problem!,,
1.60216E+17,person#5901,2019-06-23,"Hi I am a bit confused, why can I write the former but not the latter?",https://cdn.discordapp.com/attachments/315388260987830272/592234739482624011/unknown.png,
2.18602E+17,lsenjov#4288,2019-06-23,"`def` is a special form, not a function",,
2.18602E+17,lsenjov#4288,2019-06-23,https://clojure.org/reference/special_forms,,
2.18602E+17,lsenjov#4288,2019-06-23,"""Special forms have evaluation rules that differ from standard Clojure evaluation rules and are understood _directly by the Clojure compiler._""",,
1.60216E+17,person#5901,2019-06-23,Thanks 😃 !,,👍 (1)
2.48517E+17,flawless#3995,2019-06-26,"Hi all. I have some question about websockets in clojure.
Currently I have luminus project, where already exists some REST API. I want client can start with loading data via some GET requests to local db (re-frame), next client will subscribe (open websockets) to some channels  through with client will recieve updates.
Now I try use ring middleware to verify JWT when client want to open socket and I don't understand how to add Auth header to js/WebSocket. on client side? It seems I'm doing something wrong, I think here must be some framework for working with WS or something else. Or, if any one knows about some examples of using WS on clj it may be great starting point for me.",,
3.46868E+17,djeis#0042,2019-06-26,I saw a lib a little while ago for presenting websockets as if they were core.async channels.,,
5.93261E+17,Descyther#7572,2019-06-26,"say im returning a list from a function and the output is this

=> #'user/return-list
(2 3 4 5 6 7 8 9 10)

How can i add a string before it in the function so that it returns

=> #'user/return-list
List of Numbers = (2 3 4 5 6 7 8 9 10)

without it being a println?

This isnt the exact thing im working on but its what i need to know for a part of it",,
2.48517E+17,flawless#3995,2019-06-26,"maybe ```clj
(str ""List of Numbers = "" (return-list))```",,
5.93261E+17,Descyther#7572,2019-06-26,hmmm sounds promising ill give it a try thank you man!,,
2.48517E+17,flawless#3995,2019-06-26,np),,
3.46868E+17,djeis#0042,2019-06-26,@flawless Take a look at https://github.com/ptaoussanis/sente perhaps?,,👌 (1)
2.48517E+17,flawless#3995,2019-06-26,"@djeis hmm, looks interesting",,
2.48517E+17,flawless#3995,2019-06-26,"thanks, I'll try it",,
5.93261E+17,Descyther#7572,2019-06-26,that worked perfectly. You saved me alot of time figuring it out.  Tyvm,,
1.89169E+17,srasu#0042,2019-06-26,http-kit has sockets clojure side too,,
2.98148E+17,lepistane#2482,2019-06-26,@flawless i've used sente for similar case and had really nice results with it.,,
2.48517E+17,flawless#3995,2019-06-27,"thanks all, sente looks absolutely like what I'm looking for",,
2.31873E+17,logo4poop#0788,2019-06-27,How do i recompile in sublimeREPL?,,
4.56227E+17,Deleted User#0000,2019-06-27,i didnt know that was even a thing,,
4.56227E+17,Deleted User#0000,2019-06-27,i just looked at it and it seems to be very basic,,
4.56227E+17,Deleted User#0000,2019-06-27,i could be missing something tho,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,why are strings with single quotes different than strings with double quotes?,,
9.73601E+16,PeterMcNeter#2375,2019-06-30,the single quote is equivalent to https://clojuredocs.org/clojure.core/quote,,
9.73601E+16,PeterMcNeter#2375,2019-06-30,things surrounded by double quotes are just strings,,
3.46868E+17,djeis#0042,2019-06-30,Clojure doesn't have strings with single quotes.,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,so what does something like `myname'` mean?,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,`(def someName 'Joshua')` what happens to `someName`?,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,cause if I print it out it'll print Joshua with the single quote on the right,,
9.73601E+16,PeterMcNeter#2375,2019-06-30,"(def someName 'Joshua')
=> #'user/someName   
   (type someName)
=> clojure.lang.Symbol

you've created a symbol under someName, the apostrophe at the end is just part of it",,
9.73601E+16,PeterMcNeter#2375,2019-06-30,"https://clojure.org/reference/reader#_symbols

`Symbols begin with a non-numeric character and can contain alphanumeric characters and *, +, !, -, _, ', ?, <, > and = (other characters may be allowed eventually).`",,
1.89169E+17,srasu#0042,2019-06-30,apostrophes are a valid part of a symbol as long as they are not the first character.,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,"I see, so what is the type of `Joshua'`",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,if it's not a String?,,
1.89169E+17,srasu#0042,2019-06-30,It's a Symbol,,
1.89169E+17,srasu#0042,2019-06-30,"and normally that would look up a variable, but the single quote in front of it makes it simply a symbol literal",,
4.62578E+17,Logi#1563,2019-06-30,"can someone explain me what is meant by atomically here and why did they give Atoms the Name Atom?
""The value of an Atom will always be the result of the application of the supplied function to a current value, atomically.""",,
3.46868E+17,djeis#0042,2019-06-30,"Well, you can update what value an atom holds in a way which is consistent across threads.",,
3.46868E+17,djeis#0042,2019-06-30,The update is atomic.,,
3.46868E+17,djeis#0042,2019-06-30,"They're also singular- you have to operate on them in isolation and they only hold one value at a time, so in a sense they're indivisible.",,
4.62578E+17,Logi#1563,2019-06-30,thank you I have to think about this for a second 😄,,
3.46868E+17,djeis#0042,2019-06-30,The important thing is that `swap!` is an atomic update of the value in an atom.,,
4.62578E+17,Logi#1563,2019-06-30,ok so all changes to the value inside the update function happen or none of them,,
3.46868E+17,djeis#0042,2019-06-30,"Well, ""changes to the value"" isn't quite right.",,
3.46868E+17,djeis#0042,2019-06-30,The update function returns a new value.,,
3.46868E+17,djeis#0042,2019-06-30,The guarantee is that the current value passed into the update function is still current when the result of the update function is swapped in.,,
3.46868E+17,djeis#0042,2019-06-30,No value can be swapped in in-between and still have the update succeed.,,
3.46868E+17,djeis#0042,2019-06-30,(If the update fails the new value is read off and the update function gets called again),,
4.62578E+17,Logi#1563,2019-06-30,"ah I understand 
so this is what atomic means, atleast in this context?
I have a hard time with these words sometimes 😄",,
3.46868E+17,djeis#0042,2019-06-30,Yea.,,
3.46868E+17,djeis#0042,2019-06-30,The trick is realizing that the update isn't just about computing *a* new value.,,
3.46868E+17,djeis#0042,2019-06-30,It's about computing the *next* new value.,,
3.46868E+17,djeis#0042,2019-06-30,It depends on what the current value is.,,
3.46868E+17,djeis#0042,2019-06-30,And the update as a whole is atomic.,,
3.46868E+17,djeis#0042,2019-06-30,It either happens or it doesn't.,,
3.46868E+17,djeis#0042,2019-06-30,If the update fails the same update function is used to try another update.,,
4.62578E+17,Logi#1563,2019-06-30,"very cool thanks again
can I ask you another thing 😃",,
3.46868E+17,djeis#0042,2019-06-30,Go ahead,,
4.62578E+17,Logi#1563,2019-06-30,"""Atoms provide a way to manage shared, synchronous, independent state.""
does synchronous mean that our Update function is blocking?",,
3.46868E+17,djeis#0042,2019-06-30,No,,
3.46868E+17,djeis#0042,2019-06-30,"The trick comes down to the operation ""compare-and-swap"".",,
3.46868E+17,djeis#0042,2019-06-30,CAS is a hardware-synchronized instruction.,,
3.46868E+17,djeis#0042,2019-06-30,It takes 3 memory locations.,,
3.46868E+17,djeis#0042,2019-06-30,"And if the first's value matches the second's, the first's value is swapped with the third's.",,
3.46868E+17,djeis#0042,2019-06-30,That instruction is properly atomic- the value at the first memory location cannot change in between being compared with the second and being swapped with the third.,,
3.46868E+17,djeis#0042,2019-06-30,Even in the presence of multiple threads.,,
3.46868E+17,djeis#0042,2019-06-30,The way `swap!` works is called a CAS-loop.,,
3.46868E+17,djeis#0042,2019-06-30,"You read off the value of the first memory location into the second, use it to compute a new value and store it in the third, and then you attempt a CAS.",,
3.46868E+17,djeis#0042,2019-06-30,"If the CAS succeeds (actually swaps) you move on, otherwise you start over.",,
3.46868E+17,djeis#0042,2019-06-30,Hence the loop.,,
3.46868E+17,djeis#0042,2019-06-30,"If that second step- computing the third value- takes too long and some other thread modifies the shared (first) memory location, you have to try again.",,
3.46868E+17,djeis#0042,2019-06-30,That second step is filled in by the update function you pass into `swap!`.,,
3.46868E+17,djeis#0042,2019-06-30,"So, to answer your question, it does not block. Instead, your update function might get called more than once if a collision between threads occurs.",,
4.62578E+17,Logi#1563,2019-06-30,"thanks a lot for that really nice explanation
can you explain me why they call this synchronous
lets say 5 threads try CAS on an atom
what makes this synchronous, I am not sure of the meaning of this word?",,
3.46868E+17,djeis#0042,2019-06-30,"Well, the actual updates to the atom will happen in a particular order which all of the threads agree on.",,
3.46868E+17,djeis#0042,2019-06-30,The order of the updates is synchronized.,,
4.62578E+17,Logi#1563,2019-06-30,oh so its in order cool,,
3.46868E+17,djeis#0042,2019-06-30,"Well, it's not in any known order.",,
3.46868E+17,djeis#0042,2019-06-30,"But whatever order it ends up being, all of the threads will agree on it.",,
4.62578E+17,Logi#1563,2019-06-30,I got it thanks much 😃,,
3.46868E+17,djeis#0042,2019-06-30,👍,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,"so uh, I've noticed sometimes when I try to print out collections joined with a string using `str`, this happens: 
```
Original List: clojure.lang.LazySeq@3f11f5f                                                                          
New List after Mapping: clojure.lang.LazySeq@439ee24  ```
Is it possible to join a string with a list where the actual contents of the list is printed? This is my current code:
```lisp
(defn addFive [n] (+ n 5))
(defn gen [] (take 5 (repeatedly #(rand-int 100))))
(defn -main [& args]
    (def numbers (gen))
    (def newList (map addFive numbers))
    (println (str ""Original List: "" numbers))
    (println (str ""New List after Mapping: "" newList))
)```",,
2.18602E+17,lsenjov#4288,2019-06-30,Do a `doall` on the list before printing,,
3.46868E+17,djeis#0042,2019-06-30,Before passing to `str` even.,,
2.18602E+17,lsenjov#4288,2019-06-30,Errr that,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,so is it not possible to join a string literal with a list as output?,,
3.46868E+17,djeis#0042,2019-06-30,"Well, you need to force the list before converting it to a string.",,
2.18602E+17,lsenjov#4288,2019-06-30,You can. Just use a `doall` on it,,
3.46868E+17,djeis#0042,2019-06-30,"It's better to just make a vector out of it and print that instead, imo.",,
3.46868E+17,djeis#0042,2019-06-30,`(into [] numbers)`,,
2.18602E+17,lsenjov#4288,2019-06-30,"The list hasn't been realised yet, so for safety reasons it prints the internal identifier",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,i see,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,yeah im reading the docs right now about doall,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,"what does it mean ""has not been realized"" tho",,
2.18602E+17,lsenjov#4288,2019-06-30,"A vector can't be lazy, so will always be printed in full",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,oh so it's something to do with lazy sequences?,,
2.18602E+17,lsenjov#4288,2019-06-30,Okay,,
2.18602E+17,lsenjov#4288,2019-06-30,"So if you run `(range)`, it dies because it's trying to evaluate an infinite sequence",,
3.46868E+17,djeis#0042,2019-06-30,"Most list operations are lazy. ""realizing"" or ""forcing"" a lazy sequence is actually making it compute the values of all of its elements.",,
2.18602E+17,lsenjov#4288,2019-06-30,"But if you define it, then `str` it, it hasn't needed to actually calculate the infinite list",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,so it'll print out that hash code or w/e rightg?,,
3.46868E+17,djeis#0042,2019-06-30,Yea,,
2.18602E+17,lsenjov#4288,2019-06-30,"The internal pointer, but yes",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,i see,,
3.46868E+17,djeis#0042,2019-06-30,"Actually, looks like `str` always prints out `class@ptr` for a lazy seq, realized or not.",,❓ (1)
3.46868E+17,djeis#0042,2019-06-30,"```clojure
user=> (take 5 (range))
(0 1 2 3 4)
user=> (str (take 5 (range)))
""clojure.lang.LazySeq@1b554e1""
user=> (def foo (take 5 (range)))
#'user/foo
user=> (str foo)
""clojure.lang.LazySeq@1b554e1""
user=> (doall foo)
(0 1 2 3 4)
user=> (str foo)
""clojure.lang.LazySeq@1b554e1""
user=> (str (doall foo))
""clojure.lang.LazySeq@1b554e1""
user=> 
```",,
2.18602E+17,lsenjov#4288,2019-06-30,I haven't run across it doing that before 🤔,,
3.46868E+17,djeis#0042,2019-06-30,That's from 1.10.1 🤷,,
2.18602E+17,lsenjov#4288,2019-06-30,I'd test more but on phone,,
3.46868E+17,djeis#0042,2019-06-30,Anyway.,,
3.46868E+17,djeis#0042,2019-06-30,I'd recommend doing `(str (into [] nums))` or something like that.,,
3.46868E+17,djeis#0042,2019-06-30,"Vectors have a much nicer printed representation, and they can't be lazy.",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,are lazy sequences just infinite sequences?,,
3.46868E+17,djeis#0042,2019-06-30,They can be infinite.,,
3.46868E+17,djeis#0042,2019-06-30,Don't have to be.,,
2.18602E+17,lsenjov#4288,2019-06-30,"Does `(format ""%s"" foo)` work?",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,"so when I do something like `(take 5 (range 100))` is that known as ""realizing""?",,
2.18602E+17,lsenjov#4288,2019-06-30,I'm trying to figure out how it seems to work in my codebase,,
3.46868E+17,djeis#0042,2019-06-30,"No, that just makes a new lazy sequence which will stop after you get the first 5 elements.",,
3.46868E+17,djeis#0042,2019-06-30,"@lsenjov 
```clojure
user=> (format ""%s"" foo)
""clojure.lang.lazyseq@1b554e1""
```",,
2.18602E+17,lsenjov#4288,2019-06-30,"You can have a lazy sequence of 100+ elements, which are usually resolved in chunks of 32 at a time (I think it's 32)",,
3.46868E+17,djeis#0042,2019-06-30,"`(take 5 (range))` is just as lazy of a sequence as `(range)` is, it's just that after you go 5 elements down you'll hit the end.",,
3.46868E+17,djeis#0042,2019-06-30,But those elements aren't computed until you go looking for them.,,👆 (1)
1.87091E+17,LEXUS GANG#2494,2019-06-30,"```
Most of the sequence library functions are lazy, i.e. functions that return seqs do so incrementally, as they are consumed, and thus consume any seq arguments incrementally as well. Functions returning lazy seqs can be implemented using the lazy-seq macro. See also lazy.```",,
2.18602E+17,lsenjov#4288,2019-06-30,This is why a mapping of a fixed length collection with an infinite range terminates,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,"when they say ""consume args incrementally"" does it mean reading the arguments in some kind of sequential order?",,
3.46868E+17,djeis#0042,2019-06-30,Yea.,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,so does it work like a stream,,
2.18602E+17,lsenjov#4288,2019-06-30,It only looks through the range for as many as it needs,,
3.46868E+17,djeis#0042,2019-06-30,"They're similar to streams, but you can go through them more than once.",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,or are lazy sequences similar to how streams stream data,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,i see,,
2.18602E+17,lsenjov#4288,2019-06-30,Streams are more like channels in clj,,
3.46868E+17,djeis#0042,2019-06-30,"Think, stream that caches the values.",,
3.46868E+17,djeis#0042,2019-06-30,Sorta.,,
3.46868E+17,djeis#0042,2019-06-30,You can call `first` and `rest` on a seq to get the first element and to get the remaining elements.,,
3.46868E+17,djeis#0042,2019-06-30,"Those are the only operations, and their return values are computed on-demand and cached.",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,"so why are lazy sequences important? like I guess you can transform them in certain ways, like repeating the sequence",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,i just dont see the point of them right now or why theyre so important,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,or what is so special about them,,
3.46868E+17,djeis#0042,2019-06-30,Well... Phrasing this is tricky 🤔,,👆 (1)
3.46868E+17,djeis#0042,2019-06-30,"So like, lets say I have a seq.",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,yeah I mean i couldnt find anything useful on google either so i dont blame anyone lol,,
3.46868E+17,djeis#0042,2019-06-30,"I can map over it, and then filter the result, and make a vector out of that.",,
3.46868E+17,djeis#0042,2019-06-30,And at no point do I need to store the entire intermediate sequence going from the map to the filter.,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,right,,
3.46868E+17,djeis#0042,2019-06-30,That's really the only advantage 🤷,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,so is that like piping the data to a vector,,
3.46868E+17,djeis#0042,2019-06-30,They're streams that you can treat like lists.,,
2.18602E+17,lsenjov#4288,2019-06-30,Ease of use/quality of life improvements,,
3.46868E+17,djeis#0042,2019-06-30,"Well, keep in mind I don't need to do anything special to construct that data pipeline.",,
1.87091E+17,LEXUS GANG#2494,2019-06-30,so in some sense it saves memory or space,,
3.46868E+17,djeis#0042,2019-06-30,Correct.,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,i see,,
2.18602E+17,lsenjov#4288,2019-06-30,"Yes, which means you can scale quite spectacularly",,
3.46868E+17,djeis#0042,2019-06-30,"Being able to operate on infinite sequences is nice too, but not as important.",,
2.18602E+17,lsenjov#4288,2019-06-30,Also look into transducers,,
3.46868E+17,djeis#0042,2019-06-30,"`(take 5 (map #(+ % 2) (range)))`
vs.
`(map #(+ % 2) (take 5 (range)))`",,
3.46868E+17,djeis#0042,2019-06-30,Both take the same amount of memory.,,
3.46868E+17,djeis#0042,2019-06-30,Despite `(range)` returning an infinite sequence.,,
2.18602E+17,lsenjov#4288,2019-06-30,They're what is used to map itemwise without the intermediate collections,,
3.46868E+17,djeis#0042,2019-06-30,"Transducers let you actually avoid even the lazy sequence, but they're a *little* less comfy to work with imo.",,
2.18602E+17,lsenjov#4288,2019-06-30,"Aye, but they do a decent job at explaining rationale",,
2.18602E+17,lsenjov#4288,2019-06-30,(I understood lazy seqs better when I understood why they made transducers),,
1.87091E+17,LEXUS GANG#2494,2019-06-30,"> The recommended way to compose transducers is with the existing comp function: 
```clojure
(def xf
  (comp
    (filter odd?)
    (map inc)
    (take 5)))``` are transducers just those comp/partial functions or are they like them?",,
3.46868E+17,djeis#0042,2019-06-30,"Transducers are partial functions, but that's more an implementation detail than anything significant about their behavior.",,
3.46868E+17,djeis#0042,2019-06-30,How familiar are you with `reduce`?,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,"im about to read about that, cause it's right after map but I know how map works kind of",,
3.46868E+17,djeis#0042,2019-06-30,"Transducers really only make sense once you understand `reduce`, imo.",,
3.46868E+17,djeis#0042,2019-06-30,Feel free to ask questions about `reduce` tho.,,
3.46868E+17,djeis#0042,2019-06-30,It kinda all hinges on the fact that you can implement map/filter/take/etc. in terms of reduce.,,
1.87091E+17,LEXUS GANG#2494,2019-06-30,"```
In the case of map, just calling the function won’t force the lazy evaluation on all the elements. We can see this by calling map with a println, which takes arguments and prints to the output stream as a side effect. Note that it returns nil:``` so if I do something like ```
(def numbers '(1 2 3 4 5 6))
(map #(println %) nums)
``` is this considered forcing a side effect? cause the output would be all of the numbers and then (nil nil nil nil nil nil)",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"is it possible to dynamically destructure a vector? say I have like ```clojure
(def matrix [[2 4 5 6] [1 9 5 6]  [23 46 72 3] [4 6 2 19]])
``` and I want to take the transpose of this matrix, I know I could use ```(map vector v1 v2 v3 v4 ....)``` to map each respective element in the collection to a new vector, but that would only work if I had the vectors as their own collection and not nested in 1 vector. I know I could do something like ```clojure
(defn transpose [matrix]
(let [v1 (nth matrix 0) v2 (nth matrix 1) v3 (nth matrix 2) v4 (nth matrix 3)]
    (map vector v1 v2 v3 v4)))
``` and that would transpose a presumed 4x4 square matrix but what if I dont know the  size of the matrix in advance?",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"I'm just wondering if you can  do something like dynamic binding/destructure, if not then I would probably just use recursion or a loop to solve this",,
2.48517E+17,flawless#3995,2019-07-02,"@LEXUS GANG why not just:
```clj
(apply mapv vector matrix)
```",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,I guess that works,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"I dont really understand how apply fully works though, like Ive read that it applies the function ""f"" to the argument list? so in this case is it applying `mapv` to the results of `(vector matrix)`?",,
2.48517E+17,flawless#3995,2019-07-02,"@LEXUS GANG no, apply just apply function f (`mapv` in our case) with args listed next (`vector`) to vector (`matrix`). So in our case it result `(mapv vector` and ""destructured"" matrix vector like in your samples `v1 v2 v3 v4)`",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"> args listed next (vector) to vector (matrix)

what do you mean by that?",,
2.48517E+17,flawless#3995,2019-07-02,"sorry for my english, it may be not perfect)
You can image it like if
```clj
(def mapv-vector
  (partial mapv vector)) ;; just like regular mapv but with prepended vector arg

(apply mapv-vector matrix)```

so it will apply function to vector, but with apply you can prepend args, like in this example with `partial`
so:
```clj
(apply mapv vector [[2 4 5 6] [1 9 5 6]  [23 46 72 3] [4 6 2 19]])
```
will result
```clj
(mapv vector [2 4 5 6] [1 9 5 6]  [23 46 72 3] [4 6 2 19])```",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"I just dont understand how it works that way though, like what is first evaluated? apply? mapv? or vector? Im trying to understand the abstraction tbh. Like I understand that when you do something like ```clojure
(map vector [1 2 3][4 4 2][2 9 1])```
this will ""pull columns"" like they said in the docs, which it makes sense because map will apply `f = vector` to the respective positions of each collection, so first element of col1, col2, .... col_n, second element, etc. which builds a list of vectors of elements pulled from the same position in each collection",,
1.89169E+17,srasu#0042,2019-07-02,"also if you just wanted to destructure it, you could also do this:
```clojure
(let [[v1 v2 v3 v4] [[1 0 0 0]
                     [0 1 0 0]
                     [0 0 1 0]
                     [0 0 0 1]]]
  (mapv vector v1 v2 v3 v4))
```",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"but if I call ```
(apply map vector [[1 2 3][4 4 2][2 9 1]])``` what is happening first?",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,@srasu ik but what if you had like a 50x50 matrix or unknown size,,
2.48517E+17,flawless#3995,2019-07-02,"first it result ```clj
(map vector [1 2 3][4 4 2][2 9 1]))```",,
1.89169E+17,srasu#0042,2019-07-02,"Then yeah, that's not how to do it",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"so ```clojure
(apply map vector [[1 2 3][4 4 2][2 9 1]])``` will result ```(map vector [1 2 3][4 4 2][2 9 1])``` how though?",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"what is it that is causing those arguments to get ""unpacked"" into 3 different arguments",,
1.89169E+17,srasu#0042,2019-07-02,"so with apply, it's evaluated left to right, just like every function. First apply is resolved to clojure.core/apply and since it's a function the arguments are evaluated, then mapv is resolved to clojure.core/mapv, then vector is resolved to clojure.core/vector, then the vectors are evaluated, and vectors evaluate to themselves.
Then what apply does is it calls the function mapv with the arguments clojure.core/vector and then the matrix, but it splits the matrix to be one argument per element.",,
1.89169E+17,srasu#0042,2019-07-02,"`apply` is just a function which calls its first argument as a function with all the arguments after, unpacking the last argument into multiples using `seq`able interface.",,
2.48517E+17,flawless#3995,2019-07-02,I can't say better),,
1.87091E+17,LEXUS GANG#2494,2019-07-02,okay I can see why that would result in ```(map vector [1 2 3][4 4 2][2 9 1])``` because like you said apply unpacks the matrix so i'll be left with 3 vectors?,,
1.89169E+17,srasu#0042,2019-07-02,"also for that call, you should specifically be using mapv, and not map",,
1.89169E+17,srasu#0042,2019-07-02,You'd be left with whatever the elements are of the last argument to apply,,
1.89169E+17,srasu#0042,2019-07-02,so you'd get `'([1 4 2] [2 4 9] [3 2 1])` instead of a vector.,,
1.89169E+17,srasu#0042,2019-07-02,"also wow discord, sending those out of order, are we?",,
1.89169E+17,srasu#0042,2019-07-02,"mapv results in a vector, map results in a lazy sequence.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"sigh discord being slow, the photo won't render",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"```
(apply f args) (apply f x args) (apply f x y args) (apply f x y z args) (apply f a b c d & args)

Applies fn f to the argument list formed by prepending intervening arguments to args.
```",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"What is ""x y z a b c d"" suppose to mean? Like I get ""args"" is the argument list, so it's a collection of elements to apply ""f"" onto right?",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"In this example ```clojure
(def *strings* [""str1"" ""str2"" ""str3""])
;; #'user/*strings*

;; Oops!
(str *strings*)
;;=> ""[\""str1\"" \""str2\"" \""str3\""]""

;; Yay!
(apply str *strings*)
;;=> ""str1str2str3""

;; Note the equivalence of the following two forms
(apply str [""str1"" ""str2"" ""str3""])  ;;=> ""str1str2str3""
(str ""str1"" ""str2"" ""str3"")          ;;=> ""str1str2str3""``` I understand that f = str, and args = \*strings\* right? but in this other example ```Clojure
;; Here's an example that uses the optional second argument, args:

(apply map vector [[:a :b] [:c :d]])
;;=> ([:a :c] [:b :d])

;; In this example, 'f' = 'map', 'args' = 'vector', and argseq = '[:a :b] [:c :d]',
;; making the above code equivalent to

(map vector [:a :b] [:c :d])
;;=> ([:a :c] [:b :d]) ;Same answer as above

;; It might help to think of 'map' and 'vector' as ""slipping inside"" the argument
;; list ( '[[:a :b] [:c :d]]' ) to give '[map vector [:a :b] [:c :d]]' , which 
;; then becomes the executable form '(map vector [:a :b] [:c :d])' .``` they say args = vector and argseq = [:a :b][:c :d], how is args = vector, and where did argseq even come from? Based on the docs I thought vector would be one of those params they specified as (a b c d x y z) and args would just be the collection.",,
2.48517E+17,flawless#3995,2019-07-02,"in this case apply called with 3 params as in form `(apply f x args)`
where `f` is `map`, `x` is `vector` and `[[:a :b] [:c :d]]` is `args`",,
3.46868E+17,djeis#0042,2019-07-02,"The general idea with apply is that you give it a function, some number of args, and a collection that fills any remaining args in.",,
3.46868E+17,djeis#0042,2019-07-02,"`(apply + [1 2 3])` does the same thing as `(apply + 1 [2 3])`, as far as `+` is concerned anyway.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,so what that guy wrote in the example doesnt even make any sense in the comments,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"> ;; In this example, 'f' = 'map', 'args' = 'vector', and argseq = '[:a :b] [:c :d]',",,
3.46868E+17,djeis#0042,2019-07-02,`(apply map vector matrix)` does work.,,
3.46868E+17,djeis#0042,2019-07-02,"The first arg to `map` is `vector`, the remaining args to `map` are the elements of `matrix`",,
3.46868E+17,djeis#0042,2019-07-02,"It lets you supply each row (element) of `matrix` as a separate arg to `map`, while still filling the first arg in as `vector`.",,
3.46868E+17,djeis#0042,2019-07-02,"You can supply any number of arguments before you give the collection, so `(apply + 1 2 [3])` also works.",,
3.46868E+17,djeis#0042,2019-07-02,"In all three cases, it’s as if I did `(+ 1 2 3)`.",,
3.46868E+17,djeis#0042,2019-07-02,"As far as `+` is concerned, anyway.",,
3.46868E+17,djeis#0042,2019-07-02,"Similarly, if I do
`(apply map vector [[1 2] [3 4]])`, it’s as if I did
`(map vector [1 2] [3 4])` as far as `map` is concerned.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"I understand those simple examples, what I just did not understand was *how* `(apply map vector [[1 2 3][4 5 6][2  5 7])` resulted in `(map vector [1 4 5][6 7 2][4 5 6])`",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"> apply is just a function which calls its first argument as a function with all the arguments after, unpacking the last argument into multiples using seqable interface.

so I understand that `(apply mapv vector matrix)` would call ""mapv"" and the arguments to mapv would be vector and matrix, and since the last argument is matrix, it will unpack it into multiples",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"Is x y z a b c d specified in the docs not supposed to be just one type of parameter, but any kind of parameter?",,
1.89169E+17,srasu#0042,2019-07-02,it's any kind of parameter,,
1.89169E+17,srasu#0042,2019-07-02,those are just ways of having it dispatch on a fixed number of arguments instead of always collecting a rest list,,
1.89169E+17,srasu#0042,2019-07-02,"The how is that it's done in java code, at a lower level than clojure. I think in order to actually implement apply in clojure you'd have to use eval, right @djeis?",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"ok, so ""args"", is ""args"" really just a collection?",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"because it says ""Applies fn f to the argument list formed by prepending intervening arguments to args."" so I'm assuming the ""argument list"" is just ""args""",,
3.46868E+17,djeis#0042,2019-07-02,"More or less, yea @LEXUS GANG 
@srasu I'm... not sure? But I think there's an internal method you could use or something if you really wanted.",,
1.89169E+17,srasu#0042,2019-07-02,that feels like cheating,,
3.46868E+17,djeis#0042,2019-07-02,"Yea, IFn has a `.applyTo`",,
3.46868E+17,djeis#0042,2019-07-02,https://github.com/clojure/clojure/blob/clojure-1.9.0/src/clj/clojure/core.clj#L652,,
3.46868E+17,djeis#0042,2019-07-02,<https://github.com/clojure/clojure/blob/clojure-1.9.0/src/jvm/clojure/lang/IFn.java#L95>,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"so is that just what `apply` does then, is just ""unpacks"" elements in the collection individually?",,
3.46868E+17,djeis#0042,2019-07-02,Yup.,,
1.89169E+17,srasu#0042,2019-07-02,"yeah, that's what i was talking about when i said it was implemented in java",,
3.46868E+17,djeis#0042,2019-07-02,"If you take a look at the source, it's actually all implemented in terms of a method that just takes the collection sequence. `(apply + 1 [2 3])` => `(.applyTo + (cons 1 [2 3]))` => `(.invoke + 1 2 3)`, which is equivalent to just `(+ 1 2 3)`",,
3.46868E+17,djeis#0042,2019-07-02,"(in JVM clojure, clojurescript probably implements it differently but the API and effect are the same)",,
3.46868E+17,djeis#0042,2019-07-02,"Alternately, `(apply + 1 [2 3])` => `(apply + (cons 1 [2 3]))` => `(+ 1 2 3)`",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"I understand apply is useful for when you dont know the amount of args during compile time, so my next question is, why do you need to use apply in order to achieve something like transposing a matrix: ```
(def matrix [[1 2 3][4 5 6]])
(map vector matrix)

``` since this is 1 collection it'll just take that and apply `vector` on matrix yielding `[matrix]` or `[[[1 2 3][4 5 6]]]`.... which is obv not what we want. But the purpose of apply is to unpack a collection to individual items, so something like `(apply + [2 3 4 5 6])` turns into `(+ 2 3 4 5 6)`?",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,I mean I guess it makes sense because you can't do `(+ (list 1 2 3 4 5))`,,
3.46868E+17,djeis#0042,2019-07-02,"Right, yea.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"So apply only works with functions that can take in multiple arguments, right?",,
3.46868E+17,djeis#0042,2019-07-02,"There's not really any good reason to use it on a function that takes a fixed number of args, but you can.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,Cause i tried to do something like `(apply empty? '( [] [] [2 4] [2 4 5] [] {} '()))`,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,but it makes sense that wouldnt work since empty? only takes 1 argument,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"so instead I tried ```Clojure
(def emptyValues (map empty? (list [2 4] [] {} [4 5] {:p1 ""Jack""} [2 4] '())))
    (println emptyValues)```",,
3.46868E+17,djeis#0042,2019-07-02,You could do `(apply empty? '([]))`,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,yeah but that would onyl ever work for 1 collection,,
3.46868E+17,djeis#0042,2019-07-02,Correct.,,
3.46868E+17,djeis#0042,2019-07-02,You know the `update` function?,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,no,,
3.46868E+17,djeis#0042,2019-07-02,`(update {:x 5} :x + 1)` => `{:x 6}`,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,is that for atomic values?,,
3.46868E+17,djeis#0042,2019-07-02,It's for using a function to update a value in a map.,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,I see,,
3.46868E+17,djeis#0042,2019-07-02,"It takes the map, the key whose value you want to update, an update function, and any number of additional arguments.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,I only knew about `assoc` but that just replaces the value instead of updating it,,
3.46868E+17,djeis#0042,2019-07-02,"The first argument to the update function is the current value at that key, but any remaining arguments you pass to update get passed along to your update function as additional arguments.",,
3.46868E+17,djeis#0042,2019-07-02,`update` is able to do that generically by using `apply`.,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,I see,,
3.46868E+17,djeis#0042,2019-07-02,`(update map key func args...)` is `(assoc map key (apply func (get map key) args))`,,
3.46868E+17,djeis#0042,2019-07-02,So I can add 1 by doing `(update map :x + 1)`,,
3.46868E+17,djeis#0042,2019-07-02,That becomes `(assoc map :x (apply + (get map :x) (list 1)))`,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"```Clojure
(def p {:name ""James"" :age 26})
#'user/p

(update p :age inc)
;;=> {:name ""James"", :age 27}

;; remember, the value of p hasn't changed!
(update p :age + 10)
;;=> {:name ""James"", :age 36}

``` from this example in the docs I could do something like `(update p :age + '(10 24 50 67 89))` and in this case `+` would be the function, and our list is the args that apply would unpack?",,
3.46868E+17,djeis#0042,2019-07-02,You wouldn't pass a collection of args to `update`.,,
3.46868E+17,djeis#0042,2019-07-02,It takes any number of extra args separately.,,
3.46868E+17,djeis#0042,2019-07-02,`(update p :age + 10 24 50 67 89)`,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,and that turns into (apply + '(10 24 50 67 89))?,,
3.46868E+17,djeis#0042,2019-07-02,"It turns into `(apply + (get p :age) '(10 24 50 67 89))`, yea.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,ohhhhh I see,,
3.46868E+17,djeis#0042,2019-07-02,(And then `assoc`s that back in),,
1.87091E+17,LEXUS GANG#2494,2019-07-02,and since `get` returns the value as a literal and not in a collection,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,apply unpacks the list so that value that was retrieved from the map is just dropped with the other individual arguments,,
3.46868E+17,djeis#0042,2019-07-02,Yup 😁,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,i see now,,
3.46868E+17,djeis#0042,2019-07-02,"This way, `update` doesn't need to know how many arguments your update function takes.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,so why doesnt the docs explicitly state `apply` unpacks the args though,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,It just says `Applies fn f to the argument list formed by prepending intervening arguments to args.`,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"what does ""formed by prepending intervening"" mean?",,
3.46868E+17,djeis#0042,2019-07-02,"Probably because ""applies func to list"" is sorta part of the lore of lisps at this point, and you're just expected to know that means argument unpacking.",,
3.46868E+17,djeis#0042,2019-07-02,"Oh, like how `(apply + 1 [2 3])` is really `(apply + (cons 1 [2 3]))`",,
3.46868E+17,djeis#0042,2019-07-02,It makes a single list- `(cons 1 [2 3])`- by prepending `1` to the final args list.,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"""intervening"" means the extra args you pass in ?",,
3.46868E+17,djeis#0042,2019-07-02,And then it applies *that*,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,`(apply + 9 4 5 6 2 4 5 [3 4 6 67])`,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"so ""9 4 5 6 2 4 5 "" are intervening args?",,
3.46868E+17,djeis#0042,2019-07-02,Yup.,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,I see now,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,thank you for explaining that to me,,
3.46868E+17,djeis#0042,2019-07-02,Sure 🙂,,
3.46868E+17,djeis#0042,2019-07-02,I'm headed off for now,,
3.46868E+17,djeis#0042,2019-07-02,Glad I could help tho 😁,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,np ty again :),,
1.87091E+17,LEXUS GANG#2494,2019-07-02,and everyone else,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"does anyone know why when I use lein to run my script that contains `future`, the process kind of just hangs? like you can see its just stuck there",https://cdn.discordapp.com/attachments/315388260987830272/595709204900216864/unknown.png,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"```Clojure
(defn -main [& args]
    (def balance (ref 500)) ; Create a ref that represents the user's balance.
    (withdraw 200 balance)
    (println (str ""Your balance is now "" @balance))
    (deposit 1000 balance)
    (println (str ""Your balance after depositing 1000 is "" @balance))
    ; Run multiple threads and deposit and withdraw money.
    (future (dotimes [n 3] (withdraw 200 balance))) ; Should withdraw $200 3 times. Total output should be 700.
    (println (str ""Balance is now "" @balance))
)```",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"apparently here https://stackoverflow.com/questions/8695808/clojure-program-not-exiting-when-finishing-last-statement they said ```
pmap will spin up multiple threads from a threadpool to service your concurrent tasks.

Calling shutdown-agents is necessary to allow the JVM to exit in an orderly manner because the threads in the agent threadpools are not daemon threads.

You need to explicitly tell them to gracefully shutdown (but only when your program is done). This looks to have been answered before here.``` which I guess it also applies to future since it's running on another thread",,
1.89169E+17,srasu#0042,2019-07-02,using futures etc requires that you need to call shutdown-agents,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"yeah I just read the doc again, but i have another problem, let's say if I wanted to print the value of the ref after the thread executes the transaction,

```
(future (dotimes [n 3] (withdraw 200 balance))) ; Should withdraw $200 3 times. Total output should be 700.
(future (dotimes [n 3] (deposit 500 balance)))
(future (println (str ""Balance is now "" @balance)))```

I know threads run concurrently, idk if it works different in Clojure but since it runs on JVM and from my observation im pretty sure threads in Clojure can finish at different times right? I would like to print out the ref `balance` only after the threads are done executing ensuring that the value will *always* print to console after the threads are done. I tried printing it out without `future` at first but it was printing out the previous value before the transaction. Then I also tried to print it after calling (shutdown-agents) but it also did the same thing. It only fixed it when I ran it in a thread.",,
3.46868E+17,djeis#0042,2019-07-02,"I haven't used clojure's futures API much in particular, but it should have some way to do this more cleanly... The simplest way is to deref both futures after you've started both of them.",,
3.46868E+17,djeis#0042,2019-07-02,"```clojure
(let [a (future ...)
      b (future ...)]
  @a
  @b
  stuff here happens after both a and b are done)
```",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,Ohhhhhhhhh I see,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,Hmm,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,well in the book they did use `let`,https://cdn.discordapp.com/attachments/315388260987830272/595719230272438315/unknown.png,
1.87091E+17,LEXUS GANG#2494,2019-07-02,i just didnt think it was necessary to do that binding,,
3.46868E+17,djeis#0042,2019-07-02,"You don't have to do the binding, per-say.",,
3.46868E+17,djeis#0042,2019-07-02,"That is, it's not about the binding.",,
3.46868E+17,djeis#0042,2019-07-02,The important thing is that both futures are started before either of them gets deref'd.,,
3.46868E+17,djeis#0042,2019-07-02,And the easiest way to do that is to name the two futures.,,
3.46868E+17,djeis#0042,2019-07-02,When you deref a future your thread blocks until that future finishes computing its value.,,
3.46868E+17,djeis#0042,2019-07-02,"If you deref the first future before you start the second one, tho, you aren't actually taking advantage of that background execution.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,right,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"I see, I tried this ```Clojure
(def thread1 (future (dotimes [n 3] (withdraw 200 balance)) balance)) ; withraw 600 from 1300 = 700
    (println @thread1)
    (shutdown-agents)```",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"and then this gets printed out to console ```
Your balance is now 300
Your balance after depositing 1000 is 1300
#object[clojure.lang.Ref 0x42b02722 {:status :ready, :val 700}]```",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,ignore the top 2 but the bottom is the thread1 output after derefing,,
3.46868E+17,djeis#0042,2019-07-02,"Sure, yea.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,but why is it printing out like that though,,
3.46868E+17,djeis#0042,2019-07-02,Did you want it to return the value of the balance?,,
3.46868E+17,djeis#0042,2019-07-02,"Because you returned the ref itself, not the ref's value.",,
3.46868E+17,djeis#0042,2019-07-02,Have to deref balance too.,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,oh yeah,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,could i double deref or is that not a thing,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,nvm I tried @@thread1 and it worked,,
3.46868E+17,djeis#0042,2019-07-02,"Ah, I figured that would work but wasn't certain.",,
3.46868E+17,djeis#0042,2019-07-02,"You could also do
```
@thread1
(println @balance)
```
separately.",,
3.46868E+17,djeis#0042,2019-07-02,Or have the body of the future deref balance before returning it 🤷,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,I see now,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,are there any programs that actually provide a linter for Clojure so it'll tell you if youve messed up? or does that not exist,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,im just using VSC with Lein so whenever I run into errors I gotta figure it out by looking at what I wrote,,
3.46868E+17,djeis#0042,2019-07-02,"Well, clojure spec is supposed to help with that at a broad level, and there have been some experiments with typed clojure you could look into.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,alright I'll look into that thanks,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,so are these things with threads and STM in Clojure similar to Java threads and how you have use synchronized methods to handle threads that need to update values concurrently?,,
3.46868E+17,djeis#0042,2019-07-02,"More or less, yea.",,
3.46868E+17,djeis#0042,2019-07-02,"Well, hm.",,
3.46868E+17,djeis#0042,2019-07-02,Are synchronized methods synchronized using locks?,,
3.46868E+17,djeis#0042,2019-07-02,I'll have to go check... 🤔,,
3.46868E+17,djeis#0042,2019-07-02,Clojure threads are JVM threads tho.,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,ive no idea,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,but they also mentioned that these transactions in Clojure are similar to transactions in databases like MySQL?,,
3.46868E+17,djeis#0042,2019-07-02,"Yea, it looks like they're synchronized using some kind of mutex/lock/bottleneck.",,
3.46868E+17,djeis#0042,2019-07-02,Correct- STM is more like a database transaction.,,
3.46868E+17,djeis#0042,2019-07-02,Software Transactional Memory,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,are threads and concurrency one of the main core features/importance of functional programming?,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,cause like I guess since they care a lot about state I would assume that they want some kind of structured way to update/mutate state,,
3.46868E+17,djeis#0042,2019-07-02,"They're made easier to use in FP, in my opinion.",,
3.46868E+17,djeis#0042,2019-07-02,Correct.,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,i see,,
3.46868E+17,djeis#0042,2019-07-02,"FP is much more careful about shared state, which makes reasoning about concurrency somewhat easier.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"hmmmmmm, well I've never really worked with threads, I mean I understand the very very basics of threads and how they have states, like in Java a thread can be in READY, RUNNABLE, WAITING, etc.. but im sure after studying Clojure i should understand threads much better?",,
3.46868E+17,djeis#0042,2019-07-02,"The idea with refs, for example, is that within a given transaction block you can modify multiple refs and those changes will only be made visible to other threads once you reach the end of the transaction block. Perhaps more importantly tho, those changes become visible simultaneously.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"because it seems like many things are done using threads in Clojure, or at least I would assume so since state is such an important and big aspect of FP",,
3.46868E+17,djeis#0042,2019-07-02,"Well, many things are done with threads in clojure because threads are useful and clojure gives you the tools to work with them in a way that doesn't make you want to pull your hair out.",,
3.46868E+17,djeis#0042,2019-07-02,It's not so much that FP makes you want to use threads as it is that you already want to use threads and FP makes your life easier. Either way you see more people using threads tho.,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"is there a certain point when learning Clojure or FP that I should realize something about it that's going to make me realize why FP is so good? cause right now I only see Clojure being good for just transforming collections/modifying data however way I want without having to worry about any of the abstractions, but Im sure there are like other things too",,
3.46868E+17,djeis#0042,2019-07-02,"Well, no one part of Clojure (or FP even) is unique by any means, so it sortof depends on how far down you go learning it and what you've already been exposed to that's similar.",,
3.46868E+17,djeis#0042,2019-07-02,"Clojure does have a lot of good design baked into it tho, imo, so it's a good place to see how all of these ideas can be used together.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"well our school had us learn Scheme for like 2 weeks to do a project, and then Haskell, my class never did Haskell and I barely survived with Scheme so I wanted to learn Clojure cause it seemed like it had much better resources than Scheme",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,im not really familiar with Scheme anyways so i wouldnt know the diff between the 2,,
3.46868E+17,djeis#0042,2019-07-02,"My experience learning programming paradigms usually starts with confusion, then some sense of ""oh wow, that's pretty awesome"", and then it gets to some combination of ""there is no spoon"" and ""oh neat, I'll have to remember that for later"".",,
3.46868E+17,djeis#0042,2019-07-02,"It changes how I approach problems, but in the end I don't consider any particular programming paradigm much more interesting than any of the others 🤷",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,do you think learning one FP language would allow me to learn others easily?,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,cause isnt there like a whole family of lisps,,
3.46868E+17,djeis#0042,2019-07-02,"Well, it'll certainly help.",,
3.46868E+17,djeis#0042,2019-07-02,"Yea, lisp is a much broader term. Not all lisps are FP in the way that haskell and clojure are tho",,
3.46868E+17,djeis#0042,2019-07-02,"Lisps were, according to some, the first FP languages. But they don't all really fit how we use the term these days.",,
1.89169E+17,srasu#0042,2019-07-02,"I'm not even sure haskell and clojure are really comparable in the FP zone, since one takes a pragmatic standpoint and the other takes a pure standpoint",,
3.46868E+17,djeis#0042,2019-07-02,Haskell is more pragmatic than you'd think.,,
3.46868E+17,djeis#0042,2019-07-02,But fair.,,
1.89169E+17,srasu#0042,2019-07-02,"Oh, I'm well aware of how pragmatic haskell is. I love haskell. It's also just very much more about the type system and ensuring things fit together nicely from that standpoint, not just about building something that works.",,
3.46868E+17,djeis#0042,2019-07-02,"Sure, yea.",,
3.46868E+17,djeis#0042,2019-07-02,"Haskell does a lot more static analysis than clojure does, out of the box.",,
3.46868E+17,djeis#0042,2019-07-02,And it's opinionated in very different ways.,,
3.46868E+17,djeis#0042,2019-07-02,*Hard to shoot yourself in the foot when you can't even find gun parts that fit*,,
1.89169E+17,srasu#0042,2019-07-02,lol,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,is FP popular in the job industry though?,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,I was reading something about how this company used Clojure for their backend,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,so I looked up Luminus,,
1.89169E+17,srasu#0042,2019-07-02,"it's more popular with startups, but it's definitely fringe.",,
3.46868E+17,djeis#0042,2019-07-02,"Well, probably not in the sense you're thinking, but it's getting more popular over time.",,
3.46868E+17,djeis#0042,2019-07-02,"I would argue that a lot of well designed OOP codebases use a lot of the principles of FP too tho, and being able to actually identify those can't hurt.",,
3.46868E+17,djeis#0042,2019-07-02,"OOP and FP are much looser ideas than anyone is really comfortable with, and there are definitely ways to make use of the principles of both.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,does Functional Programming have any correlation with compilers/interpreters?,,
1.89169E+17,srasu#0042,2019-07-02,"I mean I'm using FP principles at work, despite it being a very java-ey codebase with spring boot and little use of java8 features",,
3.46868E+17,djeis#0042,2019-07-02,"Well, broadly speaking you want a compiler to be a pure function of the code you pass into it.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"cause at our school, there was a class where they introduced FP and Logic programming with Scheme and prolog, and then they also talked briefly about compiler theory and how compilers optimize code or w/e",,
1.89169E+17,srasu#0042,2019-07-02,"functional programming is often used for some newer, smaller compilers because of the great parser libs for haskell, but I don't think that there's a particularly strong correlation between programming style and compiler/interpreters",,
3.46868E+17,djeis#0042,2019-07-02,"A lot of programming language theory is does in functional languages these days, so that's where are lot of the newest serious compiler reasearch is coming from too.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"and I also remember they were talking about how the compiler generates some kind of AST, and if you looked at it it looked like code written in fp",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"like how they split up the expressions, operands, etc.",,
3.46868E+17,djeis#0042,2019-07-02,"Well, sorta.",,
3.46868E+17,djeis#0042,2019-07-02,"ASTs look more like code written in lisp than code written in some random FP language, imo.",,
3.46868E+17,djeis#0042,2019-07-02,"s-exprs/edn are just a good neutral way of representing code trees, and that's not by accident 🤷",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"hmm I see, also I have another question, ```Clojure
(defn transferMoney ""Gives p2 the amt from p1"" [ref-p1 ref-p2 amt]
    (dosync 
        (when (> (:balance @ref-p1) amt)
            (alter ref-p1 assoc :balance (- (:balance @ref-p1) amt)) ; Subtracts the amount from the P1's balance.
            (alter ref-p2 assoc :balance (+ (:balance @ref-p2) amt)) ; Add the amount to P2's balance.
        )
    )
) 
(defn -main [& args]
    (def anson (ref {:person ""Anson"" :balance 1000}))
    (def sarah (ref {:person ""Sarah"" :balance 1500}))

    (let [n 2]
        (future (dotimes [_ n] (transferMoney anson sarah 100)))
    )

    (shutdown-agents)
    (future (println @anson))
)```",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,I dont know why it keeps giving me this error,https://cdn.discordapp.com/attachments/315388260987830272/595754175120408577/unknown.png,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"in the REPL, I do the same thing and then dereference both refs and it prints out fine, but the return value of the (let [n 2] (future ... ) says ""pending"" and ""nil"" ```
#object[clojure.core$future_call$reify__8439 0x21c54089 {:status :pending, :val nil}]
user=>

user=> @sarah
{:person ""Sarah"", :balance 1900}
user=> @anson
{:person ""Anson"", :balance 600}
user=>```",,
1.89169E+17,srasu#0042,2019-07-02,"I'm not 100% on why it's giving you that error based only on what's here, but I can say there's a few style problems here that I'd recommend fixing. First, indents are usually two spaces, not four, closing parens are not given their own lines, and method names are kebab-case and not camelCase, and finally any `def` which occurs should be happening at the top level, not inside a function call.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"for the indents ive just been using tabs, but do people just use spaces or something?",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"also i didnt know defs should be at the top outside the main function, i thought they were supposed to be local to that scope",,
1.89169E+17,srasu#0042,2019-07-02,"The common thing to do in lisp dialects is to use spaces, at two-space indents.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,but i mean it would make sense to use `let` instead,,
1.89169E+17,srasu#0042,2019-07-02,"yeah, `let` is for local stuff, `def` is for globals.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,yeah for the closing parens i just put it on their own line cause its easier for me to read lol,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,im still used to Java and other language curly brace syntax,,
1.89169E+17,srasu#0042,2019-07-02,"also one other thing to look at there is that shutdown agents should be called after the final future, and that println at the end should also not be in a future. Just have a call to `(println @anson)` after a sleep so that you can reasonably be sure that the futures have completed.",,
1.89169E+17,srasu#0042,2019-07-02,"In real code you probably wouldn't want to use futures for something that you want synchronously done, or you'd at least deref the futures to ensure that they are completed synchronously.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,yeah Idk what happened but I fixed the shutdown-agents and the error went away and it compiles fine,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,but this is so weird though,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"```
(future (println @anson))
    (future (println @sarah))``` when i print both of these",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,this is my output,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"```
Anson@ANSON:~/Documents/Clojure$ lein run -m clj-test.bank
{{:person:person  SarahAnson, , :balance:balance  1700}
800}```",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"but if I print just one, it prints just fine `{:person Sarah, :balance 1700}`",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"> In real code you probably wouldn't want to use futures for something that you want synchronously done
were you referring to the ""transferMoney"" function?",,
1.89169E+17,srasu#0042,2019-07-02,"it's because the printer isn't synchronous, it's interleaving them, and is part of why I don't recommend putting the calls to println in futures.",,
1.89169E+17,srasu#0042,2019-07-02,"I was referring to the callsite for transferMoney, yes.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"oh I see, tbh i dont even know what im really doing with future and transactions, i just saw they were using it in the book so I followed along, not really the best approach imo",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,do you happen to know if there is like a page or resource that gives good examples for beginner projects that might cover each topic,,
1.89169E+17,srasu#0042,2019-07-02,"There's the stuff in 4clojure which are decent, but they don't cover things like threading",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"yeah I guess that should do for now, ty",,
1.89169E+17,srasu#0042,2019-07-02,no problem,,
1.89169E+17,srasu#0042,2019-07-02,and in practice it's not super common to use refs,,
1.89169E+17,srasu#0042,2019-07-02,most people just use a single atom for the same thing that multiple refs are used for,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"when you say practice, does that mean the real world too?",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"or just coding on your own, like non-real production code",,
1.89169E+17,srasu#0042,2019-07-02,"""in practice"" does refer mostly to real world stuff. At least that's the english idiom.",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,oh i see,,
1.89169E+17,srasu#0042,2019-07-02,"it's similar to the british-ism ""in anger""",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"so with my example with the transferMoney, i was just trying to update the values of the two refs, but those things are not done asynchronously so I shouldnt need futures for it right?",,
1.89169E+17,srasu#0042,2019-07-02,correct,,
1.89169E+17,srasu#0042,2019-07-02,those transactions don't have anything to do with transactions,,
1.89169E+17,srasu#0042,2019-07-02,the main reason the book would have done that is to display two threads doing transactions simultaneously,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"```Clojure
(def alice-height (ref 3))
(def right-hand-bites (ref 10))
(defn eat-from-right-hand []
  (dosync (when (pos? @right-hand-bites)
    (alter right-hand-bites dec)
    (alter alice-height #(+ % 24)))))
    (let [n 2]
      (future (dotimes [_ n] (eat-from-right-hand)))
      (future (dotimes [_ n] (eat-from-right-hand)))
       (future (dotimes [_ n] (eat-from-right-hand))))``` yeah this code right here",,
1.89169E+17,srasu#0042,2019-07-02,"```clojure
(def alice-height (ref 3))
(def right-hand-bites (ref 10))
(defn eat-from-right-hand []
  (dosync (when (pos? @right-hand-bites)
            (alter right-hand-bites dec)
            (alter alice-height #(+ % 24)))))
(let [n 2]
  (future (dotimes [_ n] (eat-from-right-hand)))
  (future (dotimes [_ n] (eat-from-right-hand)))
  (future (dotimes [_ n] (eat-from-right-hand))))
```",,
1.89169E+17,srasu#0042,2019-07-02,"So yeah, it's just showing it with multiple threads accessing the refs simultaneously",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,but it has nothing really do to with asynchronous functions or real transactions?,,
1.89169E+17,srasu#0042,2019-07-02,Well the dosync is transactions. So what's going on here is that it's showing that multiple threads (i.e. multiple futures) can all be referring to the same refs as long as they're all using `dosync`.,,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"I see, i think my example was bad, perhaps a better example of a process that should run in multiple threads would be something like 2 people withdrawing money from the same bank account?",,
1.87091E+17,LEXUS GANG#2494,2019-07-02,"So that way two threads can simultaneously update the ref ""balance""",,
1.89169E+17,srasu#0042,2019-07-02,"Potentially, but this one is just fine in terms of needing transactionality. You could easily have money generated from thin air if the reads and writes were interleaved if this weren't transactional.",,
1.89169E+17,srasu#0042,2019-07-02,Or have money disappear too,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"could someone tell me what Im doing wrong here? I'm using multimethods and I want to check if the input is not a number with a condition, if it is a number then I'll check if its even and if it isnt even then it'll return ""odd"". ```Clojure
(defmulti is-even-num ; Take in a number and check if it is odd or even.
  (fn [n] 
    (cond
      (= (false? (= java.lang.Long (class n))) false) (Exception. ""Not a number"")
      (= (mod n 2) 0) ""even""
      :else ""odd"")))

(defmethod is-even-num ""even"" [n] (str n "" is even"")) ; If dispatch function returns even, we print out the number and say it's even
(defmethod is-even-num ""odd"" [n] (str n "" is odd"")) ; If dispatch function returns odd, we print out the number and say it's odd
(defmethod is-even-num java.lang.Exception [n] (str n))
```  I keep getting this error though",https://cdn.discordapp.com/attachments/315388260987830272/595997057400045568/unknown.png,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"It says ""no method in multimethod is even num for dispatch value java.lang.Exception"" and then the exception msg, does the exception message have to match the defmethod too or something?",,
9.73601E+16,PeterMcNeter#2375,2019-07-03,"user=> (= (Exception. ""foo"") (Exception. ""bar""))
false",,
9.73601E+16,PeterMcNeter#2375,2019-07-03,seems that way,,
1.89169E+17,srasu#0042,2019-07-03,So I'd recommend using a keyword,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"if I have a multimethod, does every case that is returned need to be handled with a defmethod?",,
9.73601E+16,PeterMcNeter#2375,2019-07-03,iirc you can use :default,,
1.89169E+17,srasu#0042,2019-07-03,also what I might recommend is to use `(not (instance? java.lang.Number n))`,,
1.89169E+17,srasu#0042,2019-07-03,"and yeah, you can have a `:default` clause",,
9.73601E+16,PeterMcNeter#2375,2019-07-03,is there any reason to do that over just (number? n)?,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"the problem is with :default, I would still need to check if its a number and return something",,
1.89169E+17,srasu#0042,2019-07-03,"also the methods *do* pay attention to class hierarchy, so dispatching on that will allow a subtype to dispatch on a supertype.",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"```Clojure
(defmulti is-even-num ; Take in a number and check if it is odd or even.
  (fn [n] 
    (cond
      (not= java.lang.Long (class n)) (throw (Exception. ""Not a number."")) 
      (= (mod n 2) 0) ""even""
      :else ""odd"")))

(defmethod is-even-num ""even"" [n] (str n "" is even"")) ; If dispatch function returns even, we print out the number and say it's even
(defmethod is-even-num ""odd"" [n] (str n "" is odd"")) ; If dispatch function returns odd, we print out the number and say it's odd
(defmethod is-even-num :default [n] (str n))```",,
1.89169E+17,srasu#0042,2019-07-03,I wasn't suggesting throwing the exception,,
1.89169E+17,srasu#0042,2019-07-03,Throwing it will unwind the stack and prevent it from executing the methods,,
1.89169E+17,srasu#0042,2019-07-03,"But yeah, what I'm recommending is instead this:
```clojure
(defmulti is-even-num ; Take in a number and check if it is odd or even.
  (fn [n]
    (cond
      (not= java.lang.Long (class n)) :not-a-number
      (= (mod n 2) 0) :even
      :else :odd)))
```",,
1.89169E+17,srasu#0042,2019-07-03,"This will perform better because you don't have to take a snapshot of the stack, and because keywords are interned, meaning that you only have to do a pointer comparison rather than a full strcmp",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"I see, yeah I just returned some garbage value",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,so defmethods and multimethods are kind of like switch cases right?,,
1.89169E+17,srasu#0042,2019-07-03,"Somewhat, yes.",,
1.89169E+17,srasu#0042,2019-07-03,distributed switch isn't the worst way to put it,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"Alright I see, ty",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,Also is there any special reason why Clojure distinguishes between a `PersistentList$EmptyList` and `PersistentList`?,,
1.89169E+17,srasu#0042,2019-07-03,how do you mean? What code is being run that dosn't function properly because of them being different?,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"```Clojure
(defmulti add class)

(defmethod add clojure.lang.PersistentVector [input]
  (assoc input (count input) ""Last Element!""))

(defmethod add clojure.lang.PersistentList [input]
  (cons ""First"" input))
  
(defmethod add clojure.lang.PersistentList$EmptyList [input]
  (cons ""First"" input))

(defmethod add clojure.lang.PersistentArrayMap [input]
  (println (keys input)))

(defn -main [& args]
  
)```",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,If I don't have the $EmptyList defmethod,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"and try to call `(add '())`, it'll say ""No method in multimethod 'add'""",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,and if I try to compare an empty list to clojure.lang.PersistentList it'll return false,,
1.89169E+17,srasu#0042,2019-07-03,"Ah, okay. So generally you want to be working with the abstractions, and not directly with classes.",,
1.89169E+17,srasu#0042,2019-07-03,because multiple different implementations can be used for the same thing pretty interchangably,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,right,,
1.89169E+17,srasu#0042,2019-07-03,"so you'd want to distinguish based on `list?`, `map?`, and `vector?`",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,cause those 2 classes are like instances of the same thing right?,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"I see, is it possible to use those with defmethods?",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"oh, I mean I guess instead of class",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,I could just use my own dispatch function?,,
1.89169E+17,srasu#0042,2019-07-03,Yes.,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,i see,,
1.89169E+17,srasu#0042,2019-07-03,"```clojure
(defmulti add
  (fn [input]
    (cond
      (list? input) :list
      (vector? input) :vector
      (map? input) :map
      true :error)))
```",,
1.89169E+17,srasu#0042,2019-07-03,That kind of thing,,
3.46868E+17,djeis#0042,2019-07-03,"You can even define your own hierarchy, if you wanted to.",,
1.89169E+17,srasu#0042,2019-07-03,also true,,
3.46868E+17,djeis#0042,2019-07-03,"But I have yet to actually see that used effectively, if I'm being honest 😅",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,What do you mean by hierarchy?,,
1.89169E+17,srasu#0042,2019-07-03,clojure allows you to define ad-hoc hierarchies.,,
3.46868E+17,djeis#0042,2019-07-03,Similar to how class inheritance forms a hierarchy and multimethods respect that.,,
3.46868E+17,djeis#0042,2019-07-03,"If you define a multimethod that dispatches on class, methods on parent classes will be used if no method on the exact class is provided. Similarly, you can define your own hierarchy of objects to dispatch on.",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,I see,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,Are multimethods and protocls like Interfaces sort of?,,
3.46868E+17,djeis#0042,2019-07-03,protocols more than multimethods.,,
3.46868E+17,djeis#0042,2019-07-03,"protocols are more or less exactly interfaces, just with a little different syntax.",,
3.46868E+17,djeis#0042,2019-07-03,If memory serves you can even implement a protocol in java as if it were an interface... But I haven't looked at that in a while.,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,Hmmm I see,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,also uhhhhh,,
1.87091E+17,LEXUS GANG#2494,2019-07-03,"does anyone know what this error ""No single method operate of interface"" means? I'm trying to extend a protocol ```Clojure
(defprotocol Operations
  (operate [this & args]))

(extend-protocol Operations
  clojure.lang.Keyword
  (operate [this & args]
    (cond
      (= this :add) (apply + args)
      (= this :sub) (apply - args)
      (= this :div) (apply / args)
      (= this :mul) (apply * args)
      (= this :mod) (apply mod args)
    ))
)
(defn -main [& args]
  (println (operate :add 2 3))
  (println (operate :add 22 333))
)```",,
1.87091E+17,LEXUS GANG#2494,2019-07-03,But this keeps popping up when I insert more than 2 operands for the operation,https://cdn.discordapp.com/attachments/315388260987830272/596035298631221258/unknown.png,
4.62578E+17,Logi#1563,2019-07-04,"I saw this in a video
""Other languages have direct references to things that can change""
""Clojure has indirect references to things that never change""

So in Clojure we have a pointer to an immutable data structure.
Why exactly would you refer to such a reference as ""indirect""?",,
4.62578E+17,Logi#1563,2019-07-04,"Ohhh I think I know now, probably because it can refer to different things over time but I am not sure",,
4.62578E+17,Logi#1563,2019-07-04,"so I watched the video again that is what he said 
""we have a stable reference, but what it refers to that can change, therefore that reference is indirect""",,
1.89169E+17,srasu#0042,2019-07-04,"yes, so what the reference points to can change over time, but the things themseles don't change.",,
4.62578E+17,Logi#1563,2019-07-04,"I am not entirely sure now why the references in say Java are ""direct""
This is the part of the video I am watching right now
https://youtu.be/nDAfZK8m5_8?t=3441",,
1.89169E+17,srasu#0042,2019-07-04,I wouldn't get too hung up on that terminology.,,
4.62578E+17,Logi#1563,2019-07-04,"does he mean because in Java that thing can change while you look at it and in Clojure you look at a Value at a point in time
or something",,
4.62578E+17,Logi#1563,2019-07-04,the terminology gets me confused 😄,,
1.89169E+17,srasu#0042,2019-07-04,"yes, basically.",,😃 (1)
4.56227E+17,Deleted User#0000,2019-07-10,has anyone used com.brunobonacci/safely ?,,
2.98148E+17,lepistane#2482,2019-07-10,damn it looks nice,,
2.98148E+17,lepistane#2482,2019-07-10,i haven't,,
1.89169E+17,srasu#0042,2019-07-10,that looks awesome,,
4.56227E+17,Deleted User#0000,2019-07-10,yeah i thought it looked pretty nice. I havent used it yet but was strongly considering it.,,
2.48517E+17,flawless#3995,2019-07-11,"Hello. I'm confused using clojure.spec. I created some specs for :user/user map, something like that:
```clj
(s/def :user/username string?)
(s/def :user/email (s/and string? #(re-matches email-regex %)))

(s/def :user/user (s/keys  :req [:user/username :user/email]))
```
Ok, now I can validate user with this map spec, but what if sometimes I need to change some spec in this map, for example, on user registration I want check if username is unique, how I can change `:user/username` and create another map with it, to use it on registration? Or, may be I'm doing something wrong when using spec in this way?",,
2.18602E+17,lsenjov#4288,2019-07-11,What are you trying to do with it exactly?,,
2.18602E+17,lsenjov#4288,2019-07-11,I don't quite understand exactly what you're trying to do that's stopping you,,
2.48517E+17,flawless#3995,2019-07-11,"Im trying to validate data with it, but usually I want validate main specs (like I described in code block) and some times add another rules to existed fields (uniqueness of :user/username)",,
2.18602E+17,lsenjov#4288,2019-07-11,"Oh, you're trying to write a spec that validates the uniqueness of `:user/username` in a collection?",,
2.48517E+17,flawless#3995,2019-07-11,"no, in DB:
```clj
(defn unique [field value]
  #?(:clj (some? (db/find-one field value))
     :cljs true))
(s/def :user/unique-username (s/and :user/username (partial unique :user/username)))```",,
2.48517E+17,flawless#3995,2019-07-11,but if I include `:user/unique-username` in spec map so in my verified map must be `:user/unique-username` and not `:user/username`,,
2.48517E+17,flawless#3995,2019-07-11,"In struct library I can just define two different maps with same keywords and different rules, but I don't understand how I can do same with spec and is it valid usage of it",,
2.18602E+17,lsenjov#4288,2019-07-11,I don't know if you can do that with a spec easily,,
2.18602E+17,lsenjov#4288,2019-07-11,Although remember you can put arbitrary functions in there for validation,,
2.18602E+17,lsenjov#4288,2019-07-11,So what about,,
2.18602E+17,lsenjov#4288,2019-07-11,"```clj
(s/def :user/users (s/and (s/coll-of :user/user) unique-usernames-fn))
```",,
2.18602E+17,lsenjov#4288,2019-07-11,Where unique-usernames-fn validates that all usernames are unique,,
2.48517E+17,flawless#3995,2019-07-11,"Hm, it may helps if I load all data to collection, but won't solve main problem, that i can't reuse same keywords with different rules.",,
2.18602E+17,lsenjov#4288,2019-07-11,That's... kinda how it's been designed,,
2.18602E+17,lsenjov#4288,2019-07-11,IIRC Hickey made mention about this a couple of times,,
2.18602E+17,lsenjov#4288,2019-07-11,"Because if you start modifying rules on the fly, stuff gets complicated fast",,
2.48517E+17,flawless#3995,2019-07-11,"Yeah, didn't seen it, but have same feelings. Thanks for clarification.",,
1.89169E+17,srasu#0042,2019-07-11,@flawless check out spec-alpha2,,
1.89169E+17,srasu#0042,2019-07-11,it has some things set up to fix these issues,,
1.89169E+17,srasu#0042,2019-07-11,"and i might watch ""maybe not"" by Rich Hickey to see what ideas are trying to be conveyed.",,
2.48517E+17,flawless#3995,2019-07-11,thanks `s/schema` in spec-alpha2 looks like what I need,,
1.89169E+17,srasu#0042,2019-07-11,"yup, i thought it might be!",,
2.18602E+17,lsenjov#4288,2019-07-11,I didn't realise Alpha 2 was out. Neat,,
1.89169E+17,srasu#0042,2019-07-11,"yup, still being worked on too",,
1.63628E+17,tufflax#8251,2019-07-15,@LEXUS GANG https://clojuredocs.org/clojure.core/defprotocol#example-542692d2c026201cdc326f80,,
4.62578E+17,Logi#1563,2019-07-15,if I use (load & paths) it should find the file if the path is relative to any directory listed by 'lein classpath'?,,
4.62578E+17,Logi#1563,2019-07-15,"I have this (load ""/a/b.clj"") in my core.clj but it wont find the file",,
1.89169E+17,srasu#0042,2019-07-15,that i think is incorrect since it's not a relative path,,
1.89169E+17,srasu#0042,2019-07-15,"oh, i misread the docs",,
1.89169E+17,srasu#0042,2019-07-15,nvm,,
1.89169E+17,srasu#0042,2019-07-15,you're looking for load-file though,,
1.89169E+17,srasu#0042,2019-07-15,probably,,
1.89169E+17,srasu#0042,2019-07-15,if you use load you don't include the .clj,,
1.89169E+17,srasu#0042,2019-07-15,"i.e. `(load ""/a/b"")`",,
4.62578E+17,Logi#1563,2019-07-15,"hmm it still gives me this error 
""Could not locate a/b__init.class, a/b.clj or a/b.cljc on classpath.""",,
1.89169E+17,srasu#0042,2019-07-15,"well that's telling you the problem then. what's your file structure, the exact call, and the ns you're calling load from?",,
4.62578E+17,Logi#1563,2019-07-15,"ohh so I did not know it is dependent on my current namespace
I am not sure what it does exactly to resolve the ""/a/b"" to a path

basically I am calling this 
http://prntscr.com/ofgvvy
I guess the relevant class paths would be this one
C:\Users\Logi\clojure-app\src;",,
4.62578E+17,Logi#1563,2019-07-15,it works if the file that I load is in the same directory,,
4.62578E+17,Logi#1563,2019-07-15,I tried it with and without the /clojure-app/ in the image,,
1.89169E+17,srasu#0042,2019-07-15,is there a reason you're not doing this in the require clause?,,
1.89169E+17,srasu#0042,2019-07-15,like this just looks like something that should be done with require and not load,,
4.62578E+17,Logi#1563,2019-07-15,"I am watching this video here 
https://youtu.be/qhSDTgWedTY?list=PLAC43CFB134E85266&t=244
he says at the end that you can use require, I just wanted to try the load function
will try require now",,
1.89169E+17,srasu#0042,2019-07-15,cool,,
1.89169E+17,srasu#0042,2019-07-15,"load is normally used if you need to dynamically at runtime decide what to load based on plugins, config, etc.",,
4.62578E+17,Logi#1563,2019-07-15,"ahhh oke thank you
require worked 😃",,
1.89169E+17,srasu#0042,2019-07-15,great!,,
4.56227E+17,Deleted User#0000,2019-07-16,are any of you using graphql with clojure or cljs?,,
2.98148E+17,lepistane#2482,2019-07-16,no but have a look at,,
2.98148E+17,lepistane#2482,2019-07-16,https://github.com/edn-query-language/eql,,
4.56227E+17,Deleted User#0000,2019-07-16,that looks pretty neat.  graphql and clojure gets really annoying.  the lack of kebab case support is a huge bummer.you can either transform keys or just deal with it. but you end up transorming keys you will have to do it over and over if you go that route,,
4.62578E+17,Logi#1563,2019-07-17,"I get a little thrown off by these macros, it seems like the rules you learned do not apply anymore and some behind the scenes magic rewrites your code so it can be compiled.

For me it seems really difficult to feed them the right arguments and you have to remember a specific syntax for each macro or look at the documentation, for example when using 'ns'.
What really confused me was 'alt!'

I wonder if you guys have the same problem?",,
1.89169E+17,srasu#0042,2019-07-17,"i mean i assume that i have to read the docs for every function in a dynamic language anyway, so maybe that's why i've never had that problem?",,
4.62578E+17,Logi#1563,2019-07-17,"ok I was not sure if its part of the workflow, the introduction to almost every video praises the simple syntax and readability
But if you read code with macros that you do not know it could be really hard to understand is what i was thinking",,
4.62578E+17,Logi#1563,2019-07-17,also in my editor atleast nothing screams this is a macro so it looks like wrong syntax at first,,
4.62578E+17,Logi#1563,2019-07-17,but maybe its just some getting used to just starting out 😄,,
1.89169E+17,srasu#0042,2019-07-17,"that's a large part of why there's the mantra ""never use a macro where a function will do"" in lisp communities.",,
1.89169E+17,srasu#0042,2019-07-17,"you still see a lot of macros, but they're usually there to either remove code duplication, add a new control flow construct, or make an easier interface to a function.",,
1.89169E+17,srasu#0042,2019-07-17,like the `go` macro is new control flow that basically introduces goroutines.,,
1.89169E+17,srasu#0042,2019-07-17,"in rarer cases you'll see proper DSLs defined, like in compojure, which makes a DSL for defining endpoints of a webserver.",,
4.62578E+17,Logi#1563,2019-07-17,thanks much,,
1.89169E+17,srasu#0042,2019-07-17,no problem!,,
1.89169E+17,srasu#0042,2019-07-17,and you definitely get used to the macros after a while.,,
1.89169E+17,srasu#0042,2019-07-17,like my favorite macro that i've ever written was one that did regex matching and bound the capture groups to variables.,,
1.89169E+17,srasu#0042,2019-07-17,https://github.com/IGJoshua/alexis-texas-github/blob/master/src/alexis_texas/commands.clj#L69,,
1.89169E+17,srasu#0042,2019-07-17,it's like a regex `case` but with destructuring basically.,,
3.46868E+17,djeis#0042,2019-07-17,Github's formatting really doesn't like that code lol,,
1.89169E+17,srasu#0042,2019-07-17,lol,,
1.89169E+17,srasu#0042,2019-07-17,neither does emacs,,
1.89169E+17,srasu#0042,2019-07-17,"but yeah, really happy with that one. new control flow constructs are really cool imo.",,
4.62578E+17,Logi#1563,2019-07-17,oh so it resolves discord messages to functions,,
4.62578E+17,Logi#1563,2019-07-17,thats cool,,
1.89169E+17,srasu#0042,2019-07-17,"yeah, i like it",,
1.87091E+17,LEXUS GANG#2494,2019-07-21,is Luminus actually the best web framework for Clojure? and is Clojurescript worth learning? Ive pretty much got the basics down with clojure and have been playing around with some libraries from the repository but im wondering what are my options for web dev w/ Clojure,,
1.89169E+17,srasu#0042,2019-07-21,"I mean when I've written (tiny, toy) websites in clojure I just use ring and compojure and then use reagent with accountant and secretary for SPA navigation. It's pretty simple and fun to do. But using a bigger framework would probably be a better idea if you want to make something bigger.",,
1.87091E+17,LEXUS GANG#2494,2019-07-21,does Clojure have a similar framework to Java's Spring,,
1.89169E+17,srasu#0042,2019-07-21,"well the entire point of spring, which is to make a more dynamic runtime environment for java, kind of doesn't exist in clojure since it's already a dynamic language and lots of problems with spring are already solved, like data transit, the lack of need for object mapping, and advice and other stuff like that. None of that is necessary in clojure. You can do that all with just simple functions and stuff from the standard library when using Ring and compojure.",,
1.87091E+17,LEXUS GANG#2494,2019-07-21,i see,,
1.89169E+17,srasu#0042,2019-07-21,And I'm actually saying that as someone who works with spring for my day job.,,
1.89169E+17,srasu#0042,2019-07-21,Everything I've seen that spring can do seems pretty useless to me from the perspective of what you can do with Clojure.,,
1.89169E+17,srasu#0042,2019-07-21,Especially since it all happens behind a massive magic black box that makes everything way too hard to understand.,,
1.87091E+17,LEXUS GANG#2494,2019-07-21,is Spring good to learn? I played around with it but Im not sure if I should fully invest in it,,
1.87091E+17,LEXUS GANG#2494,2019-07-21,im coming from NodeJS,,
1.89169E+17,srasu#0042,2019-07-21,"If you're already in clojure land and you don't plan on going into java land, then I don't think it's worth it.",,
1.89169E+17,srasu#0042,2019-07-21,"If you think you're going to professionally work in java-land and you want to be more appealing on an interview, learning spring might not be a bad idea.",,
1.87091E+17,LEXUS GANG#2494,2019-07-21,well I want to learn both,,
1.87091E+17,LEXUS GANG#2494,2019-07-21,"Im not sure how far I could go with getting a job with CLojure, I just wanted to use it for fun",,
1.89169E+17,srasu#0042,2019-07-21,That's fair.,,
1.87091E+17,LEXUS GANG#2494,2019-07-21,so like I would like to make fun stuff w/ clojure but serious apps would be with NodeJS or Java Spring,,
1.89169E+17,srasu#0042,2019-07-21,"I mean if you're doing something for yourself or your own business or as a commission for someone else, and not professionally for someone else where they have already dictated what framework and libraries you will be using, then there is no reason to pick NodeJS or Spring over Clojure if you prefer Clojure. I think it's a bit of a mistake to think that using Spring is a good idea for making maintainable software or something just because a lot of people use it professionally and otherwise.
However, by the same token if you do learn Spring, that will probably help you out getting jobs on Java backends whether they're using Spring or not, and it would also be a good way to learn more about the benefits of Clojure because you could see some of the problems with Spring and Java which are solved by Clojure's data model and operating model.",,
1.87091E+17,LEXUS GANG#2494,2019-07-21,yeah tbh I just got bored of NodeJS so I want to learn more stacks,,
1.87091E+17,LEXUS GANG#2494,2019-07-21,for fun and then get better at it so I can use it professionally,,
1.89169E+17,srasu#0042,2019-07-21,"If you're just looking to learn more stacks, then definitely don't let me deter you and learn more stacks.",,
1.89169E+17,srasu#0042,2019-07-21,I'll just say that so far my experience has been that nothing I've ever tried using compares to Clojure in terms of a thing that is clearly built to make real software that is actually maintainable over a long period of time.,,
1.87091E+17,LEXUS GANG#2494,2019-07-21,so youre saying Clojure is actually much better and powerful?,,
1.89169E+17,srasu#0042,2019-07-21,"In my over 10 years of programming (which is far less than a lot of people, but still enough to have gotten around some), I've yet to encounter a language that is as good as making stuff that works quickly and is maintainable in the long term as Clojure is. Clojure is easily my favorite language for getting things done as a result.",,
1.89169E+17,srasu#0042,2019-07-21,And I've written software with ~30 languages and am currently proficient with ~14,,
3.46868E+17,djeis#0042,2019-07-21,*sips kool-aid quietly in corner*,,
1.89169E+17,srasu#0042,2019-07-21,Lol djeis,,
3.46868E+17,djeis#0042,2019-07-21,"Hey, if we can't be honest with ourselves about how over the top we get it'll come back to bite us eventually lol",,
3.46868E+17,djeis#0042,2019-07-21,Clojure is awesome tho 😁,,
1.89169E+17,srasu#0042,2019-07-21,True.,,
1.89169E+17,srasu#0042,2019-07-21,To both parts of that.,,
1.89169E+17,srasu#0042,2019-07-21,"I mean there are definitely plenty of reasons to use other languages, don't get me wrong.",,
4.56227E+17,Deleted User#0000,2019-07-22,yeah it normally comes down to use the best tools for the job. for me i find clojure often being the optimal tool but sometimes not the case,,
5.24334E+17,⃟⃟#8027,2019-07-31,https://clojure.org/community/success_stories <<< what do most of these companies use in terms of their stack,,
5.24334E+17,⃟⃟#8027,2019-07-31,like luminus or what,,
2.98148E+17,lepistane#2482,2019-08-01,luminus is not a framework - just template,,
2.98148E+17,lepistane#2482,2019-08-01,i suspect none of them use luminus,,
2.98148E+17,lepistane#2482,2019-08-01,they choose their own libs and combine them in a way they like,,
4.56227E+17,Deleted User#0000,2019-08-01,yeah it will vary a lot. walmart uses pedestal with lacinia.  they make it kind of clear. but if you look at links like this: https://github.com/razum2um/awesome-clojure you can see what's out there.,,
4.56227E+17,Deleted User#0000,2019-08-01,"and on the front end i know a lot of people using re-frame, rum,  and om",,
4.56227E+17,Deleted User#0000,2019-08-01,"luminus is good to help you get started. it's basically just a project template and you can specify what kind of profiles you want to use like databases, rest, graphql etc",,
4.04002E+17,Antiracist#1638,2019-08-03,"If I have a string representing a function, how can I turn that into an actual function?",,
2.18602E+17,lsenjov#4288,2019-08-03,What does your string look like atm?,,
2.18602E+17,lsenjov#4288,2019-08-03,Is it straight clojure code as a string?,,
4.04002E+17,Antiracist#1638,2019-08-03,yes,,
4.04002E+17,Antiracist#1638,2019-08-03,or cljs,,
2.18602E+17,lsenjov#4288,2019-08-03,"In clojure you have `eval`, I'm not sure how easy it is do to at runtime with cljs code",,
2.18602E+17,lsenjov#4288,2019-08-03,Also note that this is usually a really bad security hole to be `eval`ing untrusted client code at runtime,,
4.04002E+17,Antiracist#1638,2019-08-03,even if it only runs clientside?,,
2.18602E+17,lsenjov#4288,2019-08-03,Probably okay,,
2.18602E+17,lsenjov#4288,2019-08-03,Look up the cljs repl,,
4.04002E+17,Antiracist#1638,2019-08-03,why do you think it's harder at runtime?,,
2.18602E+17,lsenjov#4288,2019-08-03,It's probably what you're after,,
2.18602E+17,lsenjov#4288,2019-08-03,"Clj is running an interpreter at runtime, even if you compile everything beforehand",,
2.18602E+17,lsenjov#4288,2019-08-03,Not sure if Cljs does,,
2.18602E+17,lsenjov#4288,2019-08-03,"Specifically, cljs transforms into js code that the interpreter reads",,
2.18602E+17,lsenjov#4288,2019-08-03,It's probably not too hard to set up though \o/,,
1.89169E+17,srasu#0042,2019-08-03,"in cljs you don't have eval, so you'd have to do crazy things like bringing in the reader and then writing your own evaluator to make it handle the way you want. Not the hardest thing by a long shot, but also not easy.",,
1.89169E+17,srasu#0042,2019-08-03,In clj you can just run `eval`,,
4.04002E+17,Antiracist#1638,2019-08-03,why isn't there just eval for cljs,,
1.89169E+17,srasu#0042,2019-08-03,Because the compiler handles it differently,,
1.89169E+17,srasu#0042,2019-08-03,"In either case though, I wouldn't recommend using eval at runtime.",,
1.89169E+17,srasu#0042,2019-08-03,"especially with untrusted code, like anything you ever get over an unautheticated socket or from a user-autheticated source",,
4.04002E+17,Antiracist#1638,2019-08-03,so you're saying i should run untrusted code server side,,
1.89169E+17,srasu#0042,2019-08-03,"Oh, ho ho ho, that's worse. XD",,
1.89169E+17,srasu#0042,2019-08-03,*never* run untrusted code serverside,,
1.89169E+17,srasu#0042,2019-08-03,That's how you get hacked.,,
4.04002E+17,Antiracist#1638,2019-08-03,Can't I spin up some kind of sandbox which is hack proof?,,
4.04002E+17,Antiracist#1638,2019-08-03,"Is it possible to send a function from server side to client side, or does clj/cljs not work like that",,
1.89169E+17,srasu#0042,2019-08-03,"Generally you don't want live code flying around between things. You can send cljs code to the browser, but it will be pre-compiled into js.",,
1.18096E+17,stuckpanda#5806,2019-08-07,"hey guys, here is a way to have some fun with var names: ```user=> (def some-var ""some string"")
#'user/some-var
user=> (-> ""some-var"" symbol resolve var-get)
""some string""
```",,
3.37544E+17,soji#7148,2019-08-07,"@stuckpanda Man, I've neverd had so much fun with variables!",,
1.18096E+17,stuckpanda#5806,2019-08-07,"@soji I believe you, man, I believe you",,
4.56227E+17,Deleted User#0000,2019-08-29,anyone know of any advanced core async examples?,,
1.89169E+17,srasu#0042,2019-08-29,"I have one, but it's a mess and the cleaned up version hasn't been committed yet.",,
1.89169E+17,srasu#0042,2019-08-29,(although it really should have been),,
4.56227E+17,Deleted User#0000,2019-08-29,i see. i've used it a good amount but mostly just fairly basic pipeline processing. just looking for some interesting things to look at,,
1.89169E+17,srasu#0042,2019-08-29,https://github.com/IGJoshua/discljord/blob/master/src/discljord/connections/impl.clj,,
1.89169E+17,srasu#0042,2019-08-29,"mess that this is, it does some heavy (but simple) stuff with core.async. Doesn't use all the fancy functions, but it does a lot of stuff.",,
4.56227E+17,Deleted User#0000,2019-08-30,thanks. i will take a look,,
2.16295E+17,HactarCE#5314,2019-08-31,Is there a nice constant-time way to get the last character of a string?,,
2.16295E+17,HactarCE#5314,2019-08-31,`(last my-string)` is linear-time,,
2.16295E+17,HactarCE#5314,2019-08-31,I could use `(get my-string (dec (count my-string)))` but that's kinda ugly,,
1.89169E+17,srasu#0042,2019-08-31,That's actually the proper way to do it,,
2.16295E+17,HactarCE#5314,2019-08-31,alright,,
1.73976E+17,🐳 - 鲸鱼「🌱🌱🌱🌱」#2243,2019-09-03,"hey guys beginner’s question, what is the idiomatic way of handling blocking IO ?

can i just submit all the blocking IOs into a single global thread pool (thats distinct from the core async one)",,
1.89169E+17,srasu#0042,2019-09-03,"that depends on the characteristics you want. You could use agents or futures to handle blocking io and that would use a thread pool, or something I do sometimes is to just use the thread macro in core.async which spins up a new thread for every invocation.",,
2.95038E+17,xxxyy#0211,2019-09-03,Has anyone considered trying to actively campaign clojurians slack to move here?  Like maybe trying to get the mods on board and stuff? It's seriously kind of a travesty that the  logs on slack are destroyed forever,,
2.95038E+17,xxxyy#0211,2019-09-03,(I'm considering this myself),,
1.89169E+17,srasu#0042,2019-09-03,"I haven't seriously considered it, no, but I think it would be a neat idea.",,
4.56227E+17,Deleted User#0000,2019-09-03,Would be for sure imo,,
4.56227E+17,Deleted User#0000,2019-09-03,I agree,,
2.95038E+17,xxxyy#0211,2019-09-03,Seems like it'll be a bit tricky based on looking a few reddit threads on the subject but I might give it a shot at some point,,
2.95038E+17,xxxyy#0211,2019-09-03,"I think the problem is people have conflicting preferences on what would be better (IE some people value zulip or value FOSS highly in general). Personally I'd be happy with anything that has infinite logs, but discord has pretty good ux and feels similar enough to slack to me",,
4.56227E+17,Deleted User#0000,2019-09-03,we should just build our own community slack clone,,"👀 (1),🇧 (1),🇷 (1),🇦 (1),🇮 (1),🇩 (1)"
2.95038E+17,xxxyy#0211,2019-09-03,"actually, after saying this here, i checked the community-development channel on slack, and apparently the slack logs just got back online here: https://clojurians-log.clojureverse.org/ and a public announcement is coming soon",,
1.01789E+17,Jonnson#1670,2019-09-09,"Hey, I was just wondering why, when writing a recursive funciton, if I return the variable (a-seq) it returns the modified list, rather than it's original value. Just struggling to get my head around this because I thought that variable would be immutable",,
1.01789E+17,Jonnson#1670,2019-09-09,"(defn my-drop-while [pred? a-seq]
  (cond
    (empty? a-seq) '()
    (pred? (first a-seq)) (my-drop-while pred? (rest a-seq))
    :else a-seq))",,
1.89169E+17,srasu#0042,2019-09-09,looks like a correct implementation to me. Could you clarify what you're confused about? Also use recur to do your recursion there. It's in tail position and recur doesn't grow the stack,,
1.01789E+17,Jonnson#1670,2019-09-09,"Yeah, I'm working through some exercises where they are introducing recursion like this first, then the loop recur stuff after. When I return :else a-seq, why does that return the altered sequence, rather than the entire seq that was passed in?",,
1.01789E+17,Jonnson#1670,2019-09-09,"e.g. if I were to run (my-drop-while odd [1 2 3 4 5]) It returns (2 3 4 5) which is expected, I'm just unsure of how this works, because I thought a-seq was immutable, but it appears to be changed in place?",,
2.98148E+17,lepistane#2482,2019-09-09,it is immutable. Just because it has same name  it doesn't mean it's same collection,,
2.98148E+17,lepistane#2482,2019-09-09,u can create new sequences from immutable sequences,,
1.89169E+17,srasu#0042,2019-09-09,Actually recur can be used without loop,,
1.89169E+17,srasu#0042,2019-09-09,it'll anchor to a fn or defn declaration as well,,
1.89169E+17,srasu#0042,2019-09-09,"But as for that question, a-seq *does* return the list unmodified. What's happening is that for each call to the function, you're getting a different thing to be bound to a-seq. The first call will have [1 2 3 4 5] bound to a-seq, but then you'll recurse with (rest [1 2 3 4 5]) which is '(2 3 4 5) and so in *that* call, a-seq will be bound to '(2 3 4 5) and then that value is returned up the call stack to the original point.",,
1.01789E+17,Jonnson#1670,2019-09-10,"Ahhhh I see, that makes sense. Probably should have worked that out for myself Doh!",,
1.01789E+17,Jonnson#1670,2019-09-10,Thanks @srasu,,
1.89169E+17,srasu#0042,2019-09-10,no problem!,,
1.87091E+17,LEXUS GANG#2494,2019-09-15,"yo quick question, if i need a backend server for apis and routes and stuff, would luminus be a good framework for it?",,
2.18602E+17,lsenjov#4288,2019-09-15,It's a pretty good starting point for that kind of application,,
1.87091E+17,LEXUS GANG#2494,2019-09-15,okay,,
1.87091E+17,LEXUS GANG#2494,2019-09-15,thanks,,
1.89169E+17,srasu#0042,2019-09-15,"One thing that's different about clojure is that you don't need a framework for everything like most languages do. If you wand to just make a simple api webserver and don't intend to expand into a webapp, there's little reason to use more than Ring and Compojure or bidi",,
1.87091E+17,LEXUS GANG#2494,2019-09-15,"I see, but if i want to run the clojure app on a server",,
1.87091E+17,LEXUS GANG#2494,2019-09-15,i need a jar file right?,,
1.87091E+17,LEXUS GANG#2494,2019-09-15,like i can't just execute the .clj file individually and have it running like how a .js file or .py file would? i guess its because clj is compiled right?,,
2.18602E+17,lsenjov#4288,2019-09-15,"If you're using lein, you can `lein uberjar`",,
2.18602E+17,lsenjov#4288,2019-09-15,Which will include all the dependent libraries,,
1.87091E+17,LEXUS GANG#2494,2019-09-16,ya i guess,,
1.89169E+17,srasu#0042,2019-09-16,"Yeah, frameworks don't actually do anything for your deployment methods.",,
1.89169E+17,srasu#0042,2019-09-16,"Also you *can* just directly run the source. That's actually pretty common, and if you don't have AOT turned on, doing a `lein uberjar` will just copy the source into the jar and tell it how to start.",,
1.89169E+17,srasu#0042,2019-09-16,Pretty much all libraries are done without AOT as well.,,
1.89169E+17,srasu#0042,2019-09-16,And if you use a framework they probably would just have you run lein uberjar if you want to deploy.,,
1.87091E+17,LEXUS GANG#2494,2019-09-16,"nvm, can someone explain how do i enable cors ```Clojure
(ns server.routes.home
  (:require
    [server.layout :as layout]
    [clojure.java.io :as io]
    [server.middleware :as middleware]
    [ring.util.http-response :as response]
    [clj-http.client :as client]
    [cheshire.core :refer :all]
    [clojure.data.json :as json]
    [clojure.string :as str]
    [ring.middleware.cors :refer [wrap-cors]]))


(def api-key (get (json/read-str (slurp ""config.json"")) ""token""))
(def weather-url ""https://api.openweathermap.org/data/2.5/weather?units=imperial&q="")

(defn get-weather [city]
  (try
    (let [res (:body (client/get (str weather-url (str/join city) ""&appid="" api-key)))]
      (parse-string res))
      
    (catch Exception err (println (.getMessage err)))))

(defn weather-api [request]
  (println (:city (:params request)))
  {:body {:data (get-weather ""new york"")}})

(defn home-routes []
  [""""
   {:middleware [middleware/wrap-csrf
                 middleware/wrap-formats]}
   [""/api/weather"" {:get weather-api}]])


(def handler
  (wrap-cors home-routes :access-control-allow-origin [#""http://localhost:8100""]
                       :access-control-allow-methods [:get :put :post :delete]))```",,
1.87091E+17,LEXUS GANG#2494,2019-09-16,i followed the example the guy wrote on here https://github.com/r0man/ring-cors,,
1.87091E+17,LEXUS GANG#2494,2019-09-16,but it legit doesnt work,,
4.56227E+17,Deleted User#0000,2019-09-17,did you check headers on client for server response?,,
4.56227E+17,Deleted User#0000,2019-09-17,the code looks reasonable but i havent had a need for CORS,,
1.87091E+17,LEXUS GANG#2494,2019-09-17,well im making an http get from my ionic/angular app on localhost 8100,,
1.87091E+17,LEXUS GANG#2494,2019-09-17,to localhost 3000,,
4.56227E+17,Deleted User#0000,2019-09-17,if this is just for development you can install a browser extension for this,,
4.56227E+17,Deleted User#0000,2019-09-17,otherwise just check your requests and responses to see where it's failing,,
3.53222E+17,Auekha#4109,2019-09-17,"Hi,
I'm really quite new to JVM in general, so I have quite a big question.
In .NET I can load assemblies at runtime to compose functionality, but how do I approach this in Clojure?
That is, in the past I've loaded DLL's containing a shared interface and communicated through that, but I'm at a total loss when it comes to functional JVM...
Can anybody maybe suggest an article or tip on where to look, or a low-down?

I really want to use Clojure in my upcoming thesis, but this feels like a major roadbock for me",,
2.18602E+17,lsenjov#4288,2019-09-17,What exactly are you trying to interface with? And does it have a jvm library?,,
3.53222E+17,Auekha#4109,2019-09-18,"I'm looking to architect software which can accept different business models after compilation/deployment.
In the past I've done this on .NET with redistributable .DLL's, swapping out business logic on startup.",,
3.53222E+17,Auekha#4109,2019-09-18,"it knows a particular DLL implements a shared interface class through reflection.
I mean, even swapping out business logic through C libraries must work in JVM, but I'm looking for Clojure-to-Clojure, rather than Clojure-to-C, if that makes sense",,
1.89169E+17,srasu#0042,2019-09-18,The same thing can be done in Java and Clojure by a number of methods. The easiest one however is to simply not aot your project and change out the implementation namespaces when you want to change behavior.,,
1.89169E+17,srasu#0042,2019-09-18,You can also do the exact same thing as you do in .NET land by swapping out jars.,,
1.89169E+17,srasu#0042,2019-09-18,"You compile a jar with a particular set of classes which are used by another application, and then make the other application search for it on the classpath (something the jvm does by default) for it, and when it finds it, it'll be whichever version you swapped out.",,
1.89169E+17,srasu#0042,2019-09-18,@Auekha,,
3.53222E+17,Auekha#4109,2019-09-18,"@srasu, so is it as simple as deploying the non-standalone files from a Lein compilation, and swapping out the .class files as needed?",,
1.89169E+17,srasu#0042,2019-09-18,"Pretty much, but you might want to give some more specifics if you want more specific help",,
3.53222E+17,Auekha#4109,2019-10-05,"I've ended up making my program RESTful, so I've avoided this problem for now!",,
1.89169E+17,srasu#0042,2019-10-05,Sounds good!,,
1.07264E+17,Rikkel#2083,2019-10-08,"Hi everyone
I wanted to know if AWS Lambda + Clojure is a good combo?",,
4.56227E+17,Deleted User#0000,2019-10-08,i think it's fine as long as the startup time for clojure isnt a big problem,,
4.56227E+17,Deleted User#0000,2019-10-08,i know there was a talk at a clojure conference on it. I think clojure West when it was in portland,,
1.89169E+17,srasu#0042,2019-10-08,"If you're going to be doing that and you care about latency, then most likely you'll want to either compile directly to native code which can be executed with Graal vm, or you'll want to use clojurescript so that you can benefit from node's startup time",,
1.07264E+17,Rikkel#2083,2019-10-08,"I like to code mainly in NodeJS for simple lambda logic like http stuff, and for more complex algorithm i mostly use compiled C with nodegyp",,
1.07264E+17,Rikkel#2083,2019-10-08,But i want to rewrite my algorithm in clojure,,
1.07264E+17,Rikkel#2083,2019-10-08,"Cold start is short with node yup
The other option is use Java environment in Lambda right?",,
1.89169E+17,srasu#0042,2019-10-08,"You could do that, however the problem is that the JVM+Clojure have about a 1.4 second startup time on average (can be more or less based on your system), and you probably don't want that on your lambda. Maybe it doesn't matter for you, but if you care about latency, then using cljs to compile to node would work well, or if you're allowed to use native code then using Graal VM would be a good way to do it because you can compile clojure down to native code which has super fast startup time.",,
1.07264E+17,Rikkel#2083,2019-10-08,Graal VM can run on lambda?,,
1.89169E+17,srasu#0042,2019-10-09,"if you can run native code on lambdas, then yes. I don't know if you can run native code in lambdas",,
1.89169E+17,srasu#0042,2019-10-09,it compiles down to a native executable.,,
3.53222E+17,Auekha#4109,2019-10-18,"Is there a naming convention for funcs that return random data?
Like with `-!` for side-effects or `-?` for boolean",,
4.56227E+17,Deleted User#0000,2019-10-18,@Auekha `rand-` prefix and `!` suffix,,
4.56227E+17,Deleted User#0000,2019-10-18,(`clojure.core` doesn't do `!` sadly),,
3.53222E+17,Auekha#4109,2019-10-18,"Aye, I'd noticed, which is why I was curious",,
3.53222E+17,Auekha#4109,2019-10-18,That combo makes sense though 🙂,,
4.56227E+17,Deleted User#0000,2019-10-18,"@Auekha Yeah I theorize that Clojure's design thinks of impure functions as only ones that change references (not including the ones you don't have such as the RNG in this case), so it's not so much about side-effects",,
4.56227E+17,Deleted User#0000,2019-10-18,Just that particular kind of side-effects,,
3.53222E+17,Auekha#4109,2019-10-18,"I feel it shouldn't be conflated with side-effects, but rather just ""impurity""",,
4.56227E+17,Deleted User#0000,2019-10-18,It's the same thing in FP circles tho. Impure = has side-effects. If your function applied with the same parameters can return a different value at different times then it must have some state it mutates,,
4.56227E+17,Deleted User#0000,2019-10-18,Err side-effects*,,
4.56227E+17,Deleted User#0000,2019-10-18,"Even if you don't use some RNG you mutate e.g. use system-time as seed every time, you lose referential transparency and with that loss, you lose a lot more.",,
3.46868E+17,djeis#0042,2019-10-18,"Well, a function that returns different things when given the same args either has state (so it's doing a side-effect to update the state) or has some extra ""argument"" you're not accounting for.",,
4.56227E+17,Deleted User#0000,2019-10-18,"Yep and what I mean is that in FP circles both are considered impure. In clojure.core's naming convention it seems like the latter isn't considered impure ""enough""",,
4.56227E+17,Deleted User#0000,2019-10-18,But maybe there's a counter example that I don't know of / don't recall,,
1.89169E+17,srasu#0042,2019-10-18,So the `!` has a very specific use case actually. Specifically `!` on the end of a function means that it should not be run inside of a transaction.,,
1.89169E+17,srasu#0042,2019-10-18,"That being `dosync` which is where refs are updated or transactionally read, or in the functions passed to `swap!`",,
1.89169E+17,srasu#0042,2019-10-18,Generating random data is safe inside of a transaction since you'd just get a different random number.,,
1.89169E+17,srasu#0042,2019-10-18,"There is no convention currently for specifying if a function returns random data, so the `rand-` prefix seems appropriate. However, because Clojure does not memoize functions without the user explicitly asking it to, there's *usually* not a reason to care too much if a function returns random data, however it's always good to include that information in the docstrings.",,
3.53222E+17,Auekha#4109,2019-10-24,"Are there any pre-written functions for a kinda ""non-destructive"" `assoc` or `into`? So that:
```(def data {:a {:b 1}})
(into-special data {:a {:c 2}})
=> {:a {:b 1 :c 2}}```",,
3.53222E+17,Auekha#4109,2019-10-24,I can't think how to write it myself,,
2.18602E+17,lsenjov#4288,2019-10-24,Like a deep merge?,,
3.53222E+17,Auekha#4109,2019-10-24,"Yeah, essentially a merge",,
2.18602E+17,lsenjov#4288,2019-10-24,https://gist.github.com/danielpcox/c70a8aa2c36766200a95,,
3.53222E+17,Auekha#4109,2019-10-24,"Also, very unrelated: when writing out pseudo-code like I just did above, is it a convention to write `into'`?",,
2.18602E+17,lsenjov#4288,2019-10-24,I have no idea tbh,,
3.53222E+17,Auekha#4109,2019-10-24,"Damn, that gist is perfect, thank you! 😍 
I didn't know `merge-with` existed",,
2.18602E+17,lsenjov#4288,2019-10-24,It helps that I'd searched for something like this before 😂,,
2.18602E+17,lsenjov#4288,2019-10-24,But you're welcome,,
1.89169E+17,srasu#0042,2019-10-24,"merge-with is good, but also look into specter for high-performance operations on deeply nested structures.",,
1.89169E+17,srasu#0042,2019-10-24,https://github.com/redplanetlabs/specter,,
3.53222E+17,Auekha#4109,2019-10-24,"I did see specter when looking around for a solution, but it looked like total overkill for my tiny usecase 😄",,
1.89169E+17,srasu#0042,2019-10-24,Oh absolutely.,,
1.89169E+17,srasu#0042,2019-10-24,assoc-in may also fix what you want in this case.,,
1.89169E+17,srasu#0042,2019-10-24,I was more saying specter is great and don't be afraid of bringing it in. I use it pretty frequently in my projects because of the high performance for larger data transformations,,
3.53222E+17,Auekha#4109,2019-10-24,"assoc-in is 'destructive', which is why it wasn't suitable",,
3.53222E+17,Auekha#4109,2019-10-24,if I had any deeper keys they'd be forgotten,,
3.53222E+17,Auekha#4109,2019-10-24,"Actually, I'm struggling to find another solution now... Maybe I really should look into Specter.
Counting the number of 'leaves' in a tree of hash-maps",,
3.53222E+17,Auekha#4109,2019-10-24,"Like `{:a {:b {:c :d}}}` would be `1`, `{:a {:b {:c :d}} {:e :f}}` and `{:a {:b {:c :d} {:e :f}}}` would both be `2`, and so on",,
3.53222E+17,Auekha#4109,2019-10-24,"```(defn count-leaves
  ([tree] (count-leaves 0 tree))
  ([n tree]
    (reduce
      (fn [n [k v]]
        (if (map? v)
          (count-leaves n v)
          (inc n)))
      n tree)))```
Well... it's not the best thing in the world, but I'm only going to be using it on shallow trees, so it'll be okay for now :L",,
1.89169E+17,srasu#0042,2019-10-24,reduce-kv,,
3.53222E+17,Auekha#4109,2019-10-24,Seems like that only works at a depth of 1?,,
3.53222E+17,Auekha#4109,2019-10-24,good to know that exists though,,
1.89169E+17,srasu#0042,2019-10-24,"it wouldn't recurse, true, but it's just a replacement for doing a reduce which destructures the k and v",,
1.89169E+17,srasu#0042,2019-10-24,Also https://clojure.github.io/clojure/clojure.walk-api.html,,
1.89169E+17,srasu#0042,2019-10-24,this is a tree walker,,
1.89169E+17,srasu#0042,2019-10-24,"may do what you want, and it's in the standard library",,
1.89169E+17,srasu#0042,2019-10-24,off the top of my head you may be able to use the walk function with an inner function that replaces leaves with the number 1 and have an outer function that flattens and sums the values,,
1.89169E+17,srasu#0042,2019-10-24,It might not be any cleaner though,,
3.97541E+17,evanpeterjones#1812,2019-10-24,"hey y'all. I'm using Yesql to connect to a postgres db and wasn't having issues but started getting an error I hope someone will recognize? ```Execution error (IllegalArgumentException) at clojure.java.jdbc/query (jdbc.clj:800).
No value supplied for key: {:identifiers #function[clojure.string/lower-case], :row-fn #function[clojure.core/identity], :result-set-fn #function[clojure.core/doall]}```",,
3.97541E+17,evanpeterjones#1812,2019-10-24,"my db-spec looks like this ```(def db-spec (or (System/getenv ""DATABASE_URL"")
                  {:dbtype ""postgresql""
                  :dbname ""evanpeterjones""
                  :subprotocol ""postgresql""
                  :subname ""//localhost:5432/evanpeterjones""
                  :host ""localhost""
                  :port ""5432""
                  :user ""evanpeterjones""
                  :password •redacted•}))```",,
1.89169E+17,srasu#0042,2019-10-24,"Well that's interesting. So it's saying that a function was called such that a set of parameters was supposed to be interpreted as a map, with a list of key then value then key then value etc., however it was instead passed a map as a key and no value.",,
3.97541E+17,evanpeterjones#1812,2019-10-25,"omg, I was reading the error, saw each key-value in the map was correct and was stumped. -_- amazing.",,
1.89169E+17,srasu#0042,2019-10-25,were you able to fix it with that information?,,
1.87091E+17,LEXUS GANG#2494,2019-10-25,yo does anyone here use IntelliJ's Cursive Plugin for Clojure? I read somewhere that it is not compatible with Lein build tool,,
1.87091E+17,LEXUS GANG#2494,2019-10-25,and I noticed that the project structure is completely different,,
4.56227E+17,Deleted User#0000,2019-10-26,@LEXUS GANG I used it a lot. It's compatible with lein (also with `clj`). Not sure what you mean with project structure,,
1.87091E+17,LEXUS GANG#2494,2019-10-26,"like with lein, the name space is something like (ns-core.filename)",,
1.87091E+17,LEXUS GANG#2494,2019-10-26,```(ns clj-test.partials (:gen-class))```,,
1.87091E+17,LEXUS GANG#2494,2019-10-26,with Cursive it's just (ns test) for `test.clj`,,
4.56227E+17,Deleted User#0000,2019-10-26,Not 100% sure what you mean. Namespace names and file names match in Clojure in general.,,
4.56227E+17,Deleted User#0000,2019-10-26,If it doesn't match (with `src` being the root by default) then something's buggy,,
4.56227E+17,Deleted User#0000,2019-10-26,Which does happen sometimes,,
1.87091E+17,LEXUS GANG#2494,2019-10-26,Does Clojure have packages?,,
1.87091E+17,LEXUS GANG#2494,2019-10-26,,https://cdn.discordapp.com/attachments/315388260987830272/637562723529654283/unknown.png,
1.87091E+17,LEXUS GANG#2494,2019-10-26,"```Clojure
(ns clj-dump.core)

(defn foo
  ""I don't do a whole lot.""
  [x]
  (println x ""Hello, World!""))
```",,
1.87091E+17,LEXUS GANG#2494,2019-10-26,if it wasn't for clj_dump it'd just be (ns core) i guess,,
4.56227E+17,Deleted User#0000,2019-10-26,No packages but the filesystem structure is similar,,
4.56227E+17,Deleted User#0000,2019-10-26,`(ns core)` would be wrong for it,,
4.56227E+17,Deleted User#0000,2019-10-26,It must be `clj-dump.core` (as it is),,
4.56227E+17,Deleted User#0000,2019-10-26,"If you want it to be just `core` then you'd need to move it to ""src"" and then it'd be correct",,
1.87091E+17,LEXUS GANG#2494,2019-10-26,"do you know why when I create a Clojure project with Lein, it just generates this with no src folder",,
1.87091E+17,LEXUS GANG#2494,2019-10-26,,https://cdn.discordapp.com/attachments/315388260987830272/637565470635196416/unknown.png,
1.87091E+17,LEXUS GANG#2494,2019-10-26,"nvm I figured it out, its cause I had capital letters in the project name.",,
2.18602E+17,lsenjov#4288,2019-10-26,Oof,,
4.84878E+17,Clypto#9250,2019-10-27,it's always the little things,,
3.97541E+17,evanpeterjones#1812,2019-10-29,is there some syntax inside a macro to call a function and specify the current namespace?,,
3.97541E+17,evanpeterjones#1812,2019-10-29,"```(defmacro query [fnc & body]
  (if body
    `(~this/fnc db-spec body)
    `(~this/fnc db-spec)))
```",,
3.46868E+17,djeis#0042,2019-10-29,What do you mean by specify the current namespace?,,
3.46868E+17,djeis#0042,2019-10-29,"Like, I would expect you can `binding` `*ns*` but I'm not sure that'll do what you want.",,
3.97541E+17,evanpeterjones#1812,2019-10-29,"There must be a better way of doing what I'm trying to do, I'm using HugSQL after using YeSQL. YesQL allowed me to initialize all my SQL queries with a db-spec map so I wouldn't have to pass in the map (which doesn't change) every time I call a database procedure. This macro is supposed to fix that but is really dumb b/c I have to call (query *name-of-function*) instead of (*name-of-function* db-spec) so it doesn't really help.",,
4.48827E+17,donderdag#4004,2019-10-29,"@evanpeterjones one way is to use a dynamic var (https://clojure.org/reference/vars) and write a macro to pass it to the functions. however, this does have caveats you should be aware of and does tend to make the code more complex (https://stuartsierra.com/2013/03/29/perils-of-dynamic-scope) than plain argument-passing",,
1.87091E+17,LEXUS GANG#2494,2019-10-30,"hmmm, are partial functions in Clojure like how `.bind()` work in Javascript?",,
2.18602E+17,lsenjov#4288,2019-10-30,"With the exception of not having a `this`, the concept is the same",,
1.87091E+17,LEXUS GANG#2494,2019-10-30,I see,,
1.87091E+17,LEXUS GANG#2494,2019-10-30,that makes so much more sense on why partials are a thing,,
1.87091E+17,LEXUS GANG#2494,2019-10-30,"so are all of these features like .map, .filter, etc. from JS, or Java 8 features like Streams, all of these functions that take in high order functions just things from the Functional paradigm?",,
1.89169E+17,srasu#0042,2019-10-30,"yes, map, filter, reduce, etc are all things that come from the functional paradigm as an encoding of recursion",,
1.87091E+17,LEXUS GANG#2494,2019-10-30,"so what makes using a function like map() different than using a loop to transform the elements of a collection, because those functions use recursion?",,
1.87091E+17,LEXUS GANG#2494,2019-10-30,and how would you determine when to use FP vs other language paradigms like OOP,,
3.46868E+17,djeis#0042,2019-10-30,"Well, calling map is an expression with a clear specific return value.",,
1.89169E+17,srasu#0042,2019-10-30,composability,,
3.46868E+17,djeis#0042,2019-10-30,Whereas an imperative loop can only produce results by modifying a collection object.,,
3.46868E+17,djeis#0042,2019-10-30,Or assigning to a variable.,,
1.89169E+17,srasu#0042,2019-10-30,also OOP is not incompatible with functional programming,,
4.48827E+17,donderdag#4004,2019-10-30,"https://lispcast.com/reasoning-about-code/
https://lispcast.com/composable-parts/
https://lispcast.com/imperative-mindset/
https://lispcast.com/procedural-paradox/",,
1.89169E+17,srasu#0042,2019-10-30,"However there are a good set of videos taking maybe a bit too hard of a stance showing why OOP is not valuable in most cases.
https://youtu.be/QM1iUe6IofM",,
4.48827E+17,donderdag#4004,2019-10-30,"but the main differences between `map` and a for loop are:
- `(map add-one [1 2 3 4])` expresses the essence of the calculation you are performing. that is, take the sequence `[1 2 3 4]` and produce a new sequence by applying the function `add-one` to each item, resulting in `[2 3 4 5]`. it says what should happen (declarative), rather than how to go about it (imperative).
- say you want to produce a new sequence by applying a function to each item, and then filter only the items greater than 6 out of it. with a for loop, you have to rewrite it to add an if statement and so on. with `map`, you simply write or use a new function, such as `filter`, and then compose the two: `(filter greater-than-6 (map add-one some-sequence))`",,
4.48827E+17,donderdag#4004,2019-10-30,`map` remains unchanged,,
4.48827E+17,donderdag#4004,2019-10-30,"```python
# (map add-one [1 2 3 4])
input = [1, 2, 3, 4]
result = []

for item in input:
    result.append(add_one(item))


# (filter greater-than-6 (map add-one some-sequence))
input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
result = []

for item in input:
    if greater_than_6(item):
        result.append(add_one(item))```",,
1.89169E+17,srasu#0042,2019-10-30,"Short way of saying all that is the declarative way increases the signal to noise ratio, which is generally good.",,
3.53222E+17,Auekha#4109,2019-11-01,"It's generally always possible to write map and filter in other languages, mind. I personally appreciate the immutability and first-order functions. Threading macros too.
I like how the whole language is like you're composing pipelines of data.",,
1.89169E+17,srasu#0042,2019-11-01,"Some languages it's far more unweildy, since in an OOP language without lambdas it would require the strategy or visitor patterns, and in procedural languages which lack function objects would need to pass around function pointers which is also iffy",,
2.34343E+17,Johnny#3826,2019-11-03,Is there a built in heap type in clojure or how would you go about implementing one?,,
2.34343E+17,Johnny#3826,2019-11-03,Just like in any other language (i.e. array-based)?,,
2.18602E+17,lsenjov#4288,2019-11-03,... Isn't that basically just a list?,,
2.18602E+17,lsenjov#4288,2019-11-03,Wait no that's a stack. Herp,,
2.18602E+17,lsenjov#4288,2019-11-03,What are you needing to do with it that the default days types can't handle?,,
2.34343E+17,Johnny#3826,2019-11-03,"""Implement a stack using just a heap"" is the task",,
2.34343E+17,Johnny#3826,2019-11-03,"It's a stupid one, I know",,
2.18602E+17,lsenjov#4288,2019-11-03,... then use a vector and pop/push from the end?,,
2.18602E+17,lsenjov#4288,2019-11-03,But otherwise doing it in clj is going to miss the point of the exercise,,
1.89169E+17,srasu#0042,2019-11-03,So the purpose here is to do particular coding challenges,,
1.89169E+17,srasu#0042,2019-11-03,If I'm not mistaken,,
2.18602E+17,lsenjov#4288,2019-11-03,"I mean, if you _really_ want to could implement it on top of a map with keys as addresses",,
2.18602E+17,lsenjov#4288,2019-11-03,But it still sounds far too convoluted,,
1.89169E+17,srasu#0042,2019-11-03,"Actually a heap is just a tree, not ""the heap""",,
1.89169E+17,srasu#0042,2019-11-03,"The way that I'd recommend implementing this is with a record type which will represent a heap node. Something like the following:
```clojure
(defrecord HeapNode [value left right])
```
and then defining functions on the heap structure which will do basic heap operations.",,🤔 (1)
2.18602E+17,lsenjov#4288,2019-11-03,I thought a heap was a virtually contiguous block of randomly accessible data?,,
2.18602E+17,lsenjov#4288,2019-11-03,Going to go read. It's been a few years,,
1.89169E+17,srasu#0042,2019-11-03,"You'd then construct a heap like so:
```clojure
(def min-heap (->HeapNode
               10
               (->HeapNode
                15
                (->HeapNode 40 nil nil)
                (->HeapNode 50 nil nil))
               (->HeapNode 30 nil nil)))
```",,
1.89169E+17,srasu#0042,2019-11-03,Also terms in programming are overloaded,,
1.89169E+17,srasu#0042,2019-11-03,"There is ""the heap"" which is how memory is stored when it's allocated in places other than the stack, usually in linear virtual memory, and which maps to the heap in C, Java, Clojure, etc. But there are also heap data structures, which are binary trees with certain properties.",,
2.18602E+17,lsenjov#4288,2019-11-03,Ah I see. I was thinking of an OS heap rather than a heap data structure,,
1.89169E+17,srasu#0042,2019-11-03,"Honestly I'm not even sure I'd call that an OS-level concept, since a heap is either constructed by the standard library as a part of malloc or is non-existant in things like assembler where you can just use the whole address space",,
2.18602E+17,lsenjov#4288,2019-11-03,More referring to the lower level memory management heap than the data structure,,
2.18602E+17,lsenjov#4288,2019-11-03,Better? :p,,
1.89169E+17,srasu#0042,2019-11-03,"Yes, that's the one I was talking about. :P",,
2.18602E+17,lsenjov#4288,2019-11-03,So is this stack implementation done with key-val pairs?,,
1.89169E+17,srasu#0042,2019-11-03,"An OS usually just handles making the translation tables which convert from the virtual address space of a particular process into the physical memory or memory mapped devices which are available at a hardware level. It doesn't have any concept of a stack or heap. Those are defined entirely in user-space, but libc has a lot of stuff which is built around it.",,
1.89169E+17,srasu#0042,2019-11-03,"This ""HeapNode"" heap is just a binary tree for which some invariants hold true",,
1.89169E+17,srasu#0042,2019-11-03,And I figured that records are a good way to represent that node.,,
2.18602E+17,lsenjov#4288,2019-11-03,"Yeah, but I'm considering the sorting, given that we need to remember which order items are going to be in",,
2.18602E+17,lsenjov#4288,2019-11-03,(I'm thinking of the stack implementation in the heap),,
2.18602E+17,lsenjov#4288,2019-11-03,"Actually I'll just stop, given that this is the actual puzzle to solve",,
1.89169E+17,srasu#0042,2019-11-03,"Sure, yeah. But anyway, you can just define some relatively simple heap operations on the record I put there.",,👍 (1)
1.89169E+17,srasu#0042,2019-11-03,"It maps pretty cleanly to a java class with three fields on it, so it's good for performance, but it's also got the nice things from clojure like immutability, the ability to have metadata, and it is allowed to have additional fields assoced into it",,
1.89169E+17,srasu#0042,2019-11-03,"If you want to get extra with the performance tuning of it, you can even add type hints to the fields",,
1.89169E+17,srasu#0042,2019-11-03,"Also notable is that with java 1.9 and beyond, it's using a generational garbage collector, which means that for the most part, clojure's ephemeral garbage is effectively free.",,
1.89169E+17,srasu#0042,2019-11-03,"Also in java 1.8 you can use a commandline flag when it runs to use the G1 garbage collector anyway, which gives the same benefit.",,
2.34343E+17,Johnny#3826,2019-11-03,"`(defrecord HeapNode [value left right])`
I started with exactly that",,
2.34343E+17,Johnny#3826,2019-11-03,But I got stuck with sorting,,
2.34343E+17,Johnny#3826,2019-11-03,since after the insertion you have to sort everything,,
1.89169E+17,srasu#0042,2019-11-03,"Well, not really. The way you can do a heap is by taking a single node and adding each element one by one, and then all you need to do is have the node you're inserting ""trickle down"" the tree to the correct place.",,
1.89169E+17,srasu#0042,2019-11-03,"Then if you do that on repeat, it'll sort itself",,
1.89169E+17,srasu#0042,2019-11-03,"Oh, wait, no, brain",,
1.89169E+17,srasu#0042,2019-11-03,that's a different type of tree,,
1.89169E+17,srasu#0042,2019-11-03,"Riiiiight, I forgot how easy it is to implement heaps as vectors",,
2.34343E+17,Johnny#3826,2019-11-03,as far as I'm concerned you insert it (it gets put in the last position) and then you swap it with its parent as long as it's smaller/greater,,
1.89169E+17,srasu#0042,2019-11-03,"Yes, exactly",,
1.89169E+17,srasu#0042,2019-11-03,That's what it's supposed to be,,
1.89169E+17,srasu#0042,2019-11-03,Now that I'm remembering it correctly,,
1.89169E+17,srasu#0042,2019-11-03,So actually I'd change it and implement a heap on top of a vector,,
2.34343E+17,Johnny#3826,2019-11-03,thought so,,
2.34343E+17,Johnny#3826,2019-11-03,Actually even inserting is not that great with these nodes,,
2.34343E+17,Johnny#3826,2019-11-03,I just realised my implementation of that never worked,,
2.34343E+17,Johnny#3826,2019-11-03,"```clj
(defn push [heap value]
  (cond
    (not (:left heap)) (assoc heap :left (HeapNode. value))
    (not (:right heap)) (assoc heap :right (HeapNode. value))
    :else (recur (:left heap) value)))
```",,
2.34343E+17,Johnny#3826,2019-11-03,because it never went down the right nodes,,
1.89169E+17,srasu#0042,2019-11-03,"Yeah, so implementing it with an actual tree structure is a little difficult since you need a way to do a breadth-first traversal to even do the first part of an insert, and that's just frightening for performance. Just implementing it as a vector is much easier. I'm playing around with it in a repl and building it up at the moment, I can guide you through it in a few moments here.",,
2.34343E+17,Johnny#3826,2019-11-03,I already began with the implementation,,
2.34343E+17,Johnny#3826,2019-11-03,Just stack overflowing my way through this,,
2.34343E+17,Johnny#3826,2019-11-03,"Usually (with a heap object) there is a pop()/extract() method which returns the root value **and** ""heapifies"" the rest",,
2.34343E+17,Johnny#3826,2019-11-03,Now with an object that's easy,,
2.34343E+17,Johnny#3826,2019-11-03,But i wonder how I just go about this in fp,,
2.34343E+17,Johnny#3826,2019-11-03,Because I can't return the value and the new heap at the same time,,
2.34343E+17,Johnny#3826,2019-11-03,Should I separate it into a peek function that just returns the topmost element and a pop function that returns a heap without that element?,,
1.89169E+17,srasu#0042,2019-11-03,Actually you can return the value and the new heap at the same time. That's a pretty common pattern actually. You'd just return it as a vector of the value and the new heap,,
1.89169E+17,srasu#0042,2019-11-03,That's how I'd do it anyway,,
2.34343E+17,Johnny#3826,2019-11-03,"Alright, sounds good",,
2.34343E+17,Johnny#3826,2019-11-03,Wouldn't a map be better?,,
2.34343E+17,Johnny#3826,2019-11-03,Because there you have labelled access,,
1.89169E+17,srasu#0042,2019-11-03,"A map would be better for labeled access, but it also makes destructuring less pretty. It's a trade off and there's not really a wrong answer with just the two things being returned.",,
2.34343E+17,Johnny#3826,2019-11-03,Aight,,
2.34343E+17,Johnny#3826,2019-11-03,Is there a better way than accessing a vector like (v index)?,,
1.89169E+17,srasu#0042,2019-11-03,"There's that, and `(nth v index)`",,
1.89169E+17,srasu#0042,2019-11-03,they map to the same thing,,
2.34343E+17,Johnny#3826,2019-11-03,Yeah ok i know that,,
2.34343E+17,Johnny#3826,2019-11-03,Honestly these challenges are stupid sometimes,,
2.34343E+17,Johnny#3826,2019-11-03,This one is supposed to be easy,,
2.34343E+17,Johnny#3826,2019-11-03,"While the one yesterday (literally just measuring the distance between two words in a string) was ""hard""",,
2.34343E+17,Johnny#3826,2019-11-03,"It's getting late, Ima log off. Thanks for the help, you'll probably see more of my terrible code the next few days",,❤ (1)
1.89169E+17,srasu#0042,2019-11-03,Fair enough!,,
2.34343E+17,Johnny#3826,2019-11-04,Finally got it to work,,
2.34343E+17,Johnny#3826,2019-11-04,The implementation I was copying was erronous,,
2.34343E+17,Johnny#3826,2019-11-04,"Any thoughts on the code? 
https://github.com/JohnnyJayJay/DailyCodingProblem/blob/master/src/november19/03.clj",,
4.56227E+17,Deleted User#0000,2019-11-04,anyone know a good way to determine why an lein uberjar build hangs? it  looks like it compiles every file but  just hangs and doesnt complete.,,
4.56227E+17,Deleted User#0000,2019-11-04,i checked to make sure nothing was outside of the main function,,
1.89169E+17,srasu#0042,2019-11-04,sounds like either futures are used in the macros or there's a recursive macro which is never completing,,
1.89169E+17,srasu#0042,2019-11-04,If you're doing aot,,
2.34343E+17,Johnny#3826,2019-11-05,"How can I see if a number is ""truncatable""?",,
2.34343E+17,Johnny#3826,2019-11-05,"I.e. I'd need something that returns true for 1.0, 3.0, 231.0 etc. and false for 12.332, 67.123, 1.1 etc.",,
2.34343E+17,Johnny#3826,2019-11-05,I have several ideas but all of them are kinda ugly,,
2.67464E+17,SlashDevSlashRandom#2112,2019-11-05,"Not sure if it would cover 100% of cases, but how about comparing `x` to `(int x)`, which coerces x to an int? Was that one of the ugly ways you had in mind?",,
2.34343E+17,Johnny#3826,2019-11-05,"Figured it out already. Casting to int doesn't work, because (= double int) is always false",,
2.34343E+17,Johnny#3826,2019-11-05,"What does work though:
(= (Math/rint x) x)",,
1.89169E+17,srasu#0042,2019-11-05,nice,,
3.46868E+17,djeis#0042,2019-11-05,Am I going mad or is there some extra step I need to take for the clojure cli tools to put everything in my deps list on the classpath?,,
3.46868E+17,djeis#0042,2019-11-05,"Clearly it's sourcing my deps.edn file, the clojure version changes if I change the version listed in the file.",,
3.46868E+17,djeis#0042,2019-11-05,"And yet, none of the other deps are being added to the classpath afaict.",,
3.46868E+17,djeis#0042,2019-11-05,"Oh. Ignore me, I was being an idiot.",,
1.89169E+17,srasu#0042,2019-11-05,:+1:,,
3.97541E+17,evanpeterjones#1812,2019-11-07,"Have to learn .NET for work, really like F#, but Clojure syntax has me spoiled.",,
3.53222E+17,Auekha#4109,2019-11-08,"I get the feeling. When I wanted to get into functional programming I already had the tooling for F#, so tried it... naaaah.
How about ClojureCLR?",,
2.98148E+17,lepistane#2482,2019-11-09,it's great,,
2.34343E+17,Johnny#3826,2019-11-09,"Is there something like `doseq` but not for side-effects? I want to avoid the boilerplate of doing 
```clj
(loop [coll1 [1 2 3] coll2 [4 5 6]]
  (let [one (first coll1) two (first coll2)]
    ; something with it
    (recur (rest coll1) (rest coll2))))
```",,
2.18602E+17,lsenjov#4288,2019-11-09,...map?,,
2.18602E+17,lsenjov#4288,2019-11-09,"```clj
(map + [1 2 3] [4 5 6]) ; (5 7 9)
```",,
2.18602E+17,lsenjov#4288,2019-11-09,"Map takes any number of arguments, and will execute the length of the shortest array",,
2.18602E+17,lsenjov#4288,2019-11-09,@Johnny,,
2.34343E+17,Johnny#3826,2019-11-09,thanks,,
1.89169E+17,srasu#0042,2019-11-09,"@Auekha ClojureCLR is pretty good, however be aware that it's a little harder to get it to play nice with dependencies (or so I've heard)",,
1.89169E+17,srasu#0042,2019-11-09,"Also @Johnny map will work for that exact case, however for more general looping with sequences there is also `for`",,
2.34343E+17,Johnny#3826,2019-11-09,oh that's perfect,,
2.34343E+17,Johnny#3826,2019-11-09,how have i never heard of that,,
2.18602E+17,lsenjov#4288,2019-11-09,Because clojure's core library is pretty freaking large,,
2.18602E+17,lsenjov#4288,2019-11-09,"So many times I've gone ""Why isn't there a function that does just this?"" and turns out there is",,
2.18602E+17,lsenjov#4288,2019-11-09,"Not saying it's too big, just that the ""100 functions on 1 data structure"" is there, alive and well",,
2.34343E+17,Johnny#3826,2019-11-09,yeah,,
2.34343E+17,Johnny#3826,2019-11-09,I always have the cheatsheet open when doing something,,
2.34343E+17,Johnny#3826,2019-11-09,But I still haven't internalised the way the different data structures work,,
2.34343E+17,Johnny#3826,2019-11-09,"While we're at it
> ""Why isn't there a function that does just this?""
Is there a function in the core library that counts the occurrences of an element in a collection?",,
2.34343E+17,Johnny#3826,2019-11-09,I ended up writing it myself several times now,,
2.18602E+17,lsenjov#4288,2019-11-09,frequencies?,,
2.34343E+17,Johnny#3826,2019-11-09,oof,,
2.34343E+17,Johnny#3826,2019-11-09,of course there is one,,
2.18602E+17,lsenjov#4288,2019-11-09,😂,,
2.18602E+17,lsenjov#4288,2019-11-09,Frequencies is kinda just an extension of `group-by` too,,
2.34343E+17,Johnny#3826,2019-11-09,It would be great if someone could review my code here <https://github.com/JohnnyJayJay/DailyCodingProblem>,,
2.34343E+17,Johnny#3826,2019-11-09,"That'd be a big help, as I'm currently just working everything out on my own",,
1.89169E+17,srasu#0042,2019-11-09,"for the first one, choose looks like it could be re-written to use a filter and a call to count",,
2.34343E+17,Johnny#3826,2019-11-09,"Hmm, I don't see what you mean",,
3.53222E+17,Auekha#4109,2019-11-09,I recently got caught out not knowing `reductions` existed. It was like my code shriveled to nothing after that.,,
2.34343E+17,Johnny#3826,2019-11-09,Do you mean like `reduce`?,,
2.34343E+17,Johnny#3826,2019-11-09,"Btw, what's the difference between `apply` and `reduce`?",,
2.67464E+17,SlashDevSlashRandom#2112,2019-11-09,"in 08.clj, you may want to consider turning `chars` into a set, as it lets your ""have I seen this character before"" check becomes much more concise: `(if (chars char) char (recur...))`",,
2.34343E+17,Johnny#3826,2019-11-09,"Oh, I didn't know you could invoke sets as a function",,
2.34343E+17,Johnny#3826,2019-11-09,I'll consider that,,
4.48827E+17,donderdag#4004,2019-11-09,@Johnny there's both `reduce` **and** `reductions`. pretty great duo,,
4.48827E+17,donderdag#4004,2019-11-09,"```clj
(reductions + 0 [1 2 3])
(0 1 3 6)
```",,😲 (1)
4.48827E+17,donderdag#4004,2019-11-09,also `(apply f coll)` is the same as `(f item-of-coll1 item2 item3...)`,,
2.67464E+17,SlashDevSlashRandom#2112,2019-11-09,"regarding `apply` vs `reduce`, the way I usually think of it is that `apply` basically ""unwraps"" a collection and makes it an argument list to a function, while `reduce` is more of a step-wise ""combine the first two, then combine the result of that with the third, and so on""",,
4.48827E+17,donderdag#4004,2019-11-09,^,,
2.34343E+17,Johnny#3826,2019-11-09,"ah, i see now",,
4.48827E+17,donderdag#4004,2019-11-09,"eric normand has a great article on reduce, likening it to taking beans out of a bucket and putting them somewhere else one by one",,
4.48827E+17,donderdag#4004,2019-11-09,http://www.lispcast.com/annotated-clojure-core-reduce,,
2.67464E+17,SlashDevSlashRandom#2112,2019-11-09,"```clojure
(reduce (partial * 10) [1 2 3 4])
=> 24000

;; becomes something like (* 10 4 (* 10 3 (* 10 1 2))

(apply (partial * 10) [1 2 3 4])
=> 240

;; becomes something like (* 10 1 2 3 4)
```",,👍 (1)
2.34343E+17,Johnny#3826,2019-11-12,uhm so,,
2.34343E+17,Johnny#3826,2019-11-12,"For the past few weeks, I've used IntelliJ as an IDE for Clojure",,
2.34343E+17,Johnny#3826,2019-11-12,"But the plugin I was using, Cursive, apparently costs $99 per year?",,
2.34343E+17,Johnny#3826,2019-11-12,Does anyone have a IDE/editor recommendation? lol,,
1.89169E+17,srasu#0042,2019-11-12,cursive is free for non-commercial projects i'd thought,,
1.89169E+17,srasu#0042,2019-11-12,"Anyway I'd recommend vscode, lighttable, lightmod, emacs, or vim.",,
1.89169E+17,srasu#0042,2019-11-12,I use emacs.,,
1.89169E+17,srasu#0042,2019-11-12,"Specifically spacemacs, which is a vim-like community maintained config",,
1.89169E+17,srasu#0042,2019-11-12,@Johnny,,
2.34343E+17,Johnny#3826,2019-11-12,do these make sense on windows?,,
2.34343E+17,Johnny#3826,2019-11-12,I'm not sure about emacs and vim at least,,
4.84878E+17,Clypto#9250,2019-11-12,"it's been a while, but if you install cygwin, vim works great on windows",,
1.89169E+17,srasu#0042,2019-11-12,"Emacs has a native windows version, vscode and lighttable are both electron apps that work fine on windows, and lightmod is actually just a dependency you add to your project that starts up a webserver to an editor site that has introspection on your project because it lives inside your project, so all those options work on windows.",,
4.84878E+17,Clypto#9250,2019-11-12,"yeah, all are good.. I'm a lighttable user, but will often vim around on the command line too",,
1.89169E+17,srasu#0042,2019-11-12,"The biggest gotcha with lightmod is that since it lives in your project, if you cannot load your project due to a compile error or something, it will not be able to start either.",,
2.34343E+17,Johnny#3826,2019-11-12,That sounds scary lol,,
1.89169E+17,srasu#0042,2019-11-12,"Not too bad honestly, but it's enough that I haven't bothered to try it over emacs with CIDER. Currently cider is the most fully-featured clojure interaction tool outside of the integration between cursive and core.typed",,
2.67464E+17,SlashDevSlashRandom#2112,2019-11-12,"and just to confirm, Cursive is free for non-commercial usage - when you go to get a license, you can select non-commercial, and then ""checkout"" for $0.00 and it'll email you a license key that's good for 6 months (and repeat every 6 months as necessary)",,
2.34343E+17,Johnny#3826,2019-11-12,"Great, must have overlooked that",,
2.34343E+17,Johnny#3826,2019-11-13,Is there some shortcut for `(count (filter pred coll))`?,,
2.18602E+17,lsenjov#4288,2019-11-13,Not afaik,,
1.89169E+17,srasu#0042,2019-11-13,"Not that I'm aware of. Also might consider using filterv, which may be more performant there.",,
1.89169E+17,srasu#0042,2019-11-13,"Since it will return the count in constant time, instead of having to walk the list.",,
2.34343E+17,Johnny#3826,2019-11-13,Return types are actually still something that confuses me,,
2.34343E+17,Johnny#3826,2019-11-13,"I never really know whether a function returns a (lazy) sequence, some collection or the collection type of the argument",,
2.34343E+17,Johnny#3826,2019-11-13,"I guess it's documented in the case of filter, but it's still rather confusing",,
1.89169E+17,srasu#0042,2019-11-13,"So any function which is considered a sequence function will always return a lazy sequence. The way that you can tell a sequence function apart from a collection function, is that in a sequence function the sequences come last in the argument list. In the case of collection functions, The Collection comes as the first argument in the call.",,
3.40921E+17,gogo#4436,2019-11-14,hey folks; is there an easy way to freeze time in tests?,,
2.18602E+17,lsenjov#4288,2019-11-14,"Like, pause half way through?",,
2.18602E+17,lsenjov#4288,2019-11-14,And open up a repl?,,
3.40921E+17,gogo#4436,2019-11-14,i have a function that adds timestamps to a map and want to test that it adds the correct time,,
3.40921E+17,gogo#4436,2019-11-14,"in ruby i would do smth like 
```ruby
Timecop.freeze(Time.now) do
  # do my tests here 
  # time will be frozen
end
```",,
2.18602E+17,lsenjov#4288,2019-11-14,"Ohhh, you're wanting to mock getting time?",,
3.40921E+17,gogo#4436,2019-11-14,exactly; found an article about it that suggest in can be done but it's from 2012 :/,,
2.18602E+17,lsenjov#4288,2019-11-14,It's probably still fine. Clojure libraries don't change much,,
2.18602E+17,lsenjov#4288,2019-11-14,Send link,,
3.40921E+17,gogo#4436,2019-11-14,http://blog.jayfields.com/2012/11/clojure-freezing-time-added-to.html,,
3.40921E+17,gogo#4436,2019-11-14,also i have no idea which time library to use,,
3.40921E+17,gogo#4436,2019-11-14,it's pretty confusing for a beginner,,
2.18602E+17,lsenjov#4288,2019-11-14,"Joda time will do you fine, it's a well-used library",,
2.18602E+17,lsenjov#4288,2019-11-14,Otherwise... pick one and play with it and see if you like it?,,
2.18602E+17,lsenjov#4288,2019-11-14,"Huh... actually maybe not joda time, apparently it's fallen out",,
3.40921E+17,gogo#4436,2019-11-14,just checked it and it provides a mock clock,,
2.18602E+17,lsenjov#4288,2019-11-14,"Aye, just looking at
```
The Joda Time website says:

    Note that from Java SE 8 onwards, users are asked to migrate to java.time (JSR-310) - a core part of the JDK which replaces this project.
```",,
2.18602E+17,lsenjov#4288,2019-11-14,But it should still do you decently,,
3.40921E+17,gogo#4436,2019-11-14,"yup, that's what i'm using atm",,👍 (1)
3.40921E+17,gogo#4436,2019-11-14,wrapping my test in with `(with-clock (mock-clock 0) ... ` lock time to `1970-01-01` 🎉,,
3.40921E+17,gogo#4436,2019-11-14,thanks for the help!,,
3.40921E+17,gogo#4436,2019-11-14,next time I'll read the readme carefully 😄,,👍 (1)
2.34343E+17,Johnny#3826,2019-11-14,"What's better/more idiomatic?
`(apply + coll)` or `(reduce + coll)`?",,
2.67464E+17,SlashDevSlashRandom#2112,2019-11-14,"my opinion is apply, because `+` is variadic and apply just says says ""call this function on all the things"", where reduce says (essentially) ""keep applying this function one result at a time""",,
3.46868E+17,djeis#0042,2019-11-14,Is `+` properly tail recursive tho?,,
3.46868E+17,djeis#0042,2019-11-14,"Or at least, implemented as a loop internally.",,
3.46868E+17,djeis#0042,2019-11-14,"Oh huh, it's implemented using reduce.",,
3.46868E+17,djeis#0042,2019-11-14,Fancy that.,,
2.67464E+17,SlashDevSlashRandom#2112,2019-11-14,"in the case of `+` as a variadic function, the difference is probably negligible, but with a function like `str`, the variadic form uses a StringBuilder to build up the string and then finally create one String, whereas reduce would keep creating new StringBuilders and Strings for each ""reduction""",,
3.46868E+17,djeis#0042,2019-11-14,"Oh yea, you'd almost certainly want to apply str.",,
3.46868E+17,djeis#0042,2019-11-14,My concern was more born out of variadic `+` causing a stack overflow.,,
3.46868E+17,djeis#0042,2019-11-14,"Any time I see stuff using apply on large collections on the jvm I get a little nervous, tbh.",,
3.46868E+17,djeis#0042,2019-11-14,Easy for a slightly naive implementation to blow up.,,
3.46868E+17,djeis#0042,2019-11-14,Looks like the variadic str actually uses an inline `recur`sive anonymous function and a string builder.,,
2.67464E+17,SlashDevSlashRandom#2112,2019-11-14,yeah - I imagine that's why the author avoided implementing it in terms of reduce,,
1.89169E+17,srasu#0042,2019-11-14,I have a lot of faith in Rich having thought of that,,
3.46868E+17,djeis#0042,2019-11-14,"Sure, I'd imagine just about anything in clojure's stdlib is fair game.",,
4.48827E+17,donderdag#4004,2019-11-15,"one aspect of `reduce`'s usage is 'generalise this binary function to any number of arguments', so in cases where the function can already take any number of arguments, `apply` more precisely matches the intent, i think. also, of course, it means you get to use the function author's intended semantics for that case, as with `str`",,
2.34343E+17,Johnny#3826,2019-11-16,I just implemented reverse polish notation and it's amazing how simple that is in clojure,,
2.34343E+17,Johnny#3826,2019-11-16,No parsing required,,
2.34343E+17,Johnny#3826,2019-11-16,And just 14 lines of code,,
2.34343E+17,Johnny#3826,2019-11-16,This stuff really keeps impressing me,,
2.98148E+17,lepistane#2482,2019-11-17,hehe 😄,,
2.98148E+17,lepistane#2482,2019-11-17,u were in desert my friend,,
2.98148E+17,lepistane#2482,2019-11-17,and u drank glass of water,,
2.98148E+17,lepistane#2482,2019-11-17,imagine when u take a nice bath in oasis that is clojure 😄,,
1.89169E+17,srasu#0042,2019-11-17,I'm writing OO java at work with 15 minute build times and 10 minute deploy times. Every day I miss clojure.,,
3.46868E+17,djeis#0042,2019-11-17,oof...,,
1.89169E+17,srasu#0042,2019-11-17,"Yeah. I love the people I'm working with, but the code kills me a little bit inside every day. And this is why I'm picking up discljord again and trying to finish this re-write, because the CSP and functional style is super refreshing by comparison.",,
2.34343E+17,Johnny#3826,2019-11-17,I'll be happy to use it or even contribute once I've gotten more used to Clojure,,
2.34343E+17,Johnny#3826,2019-11-17,It's all still pretty new for me but I'm starting to get the hang of it.,,
2.34343E+17,Johnny#3826,2019-11-17,"And honestly I feel you, I'm still a student but I've always used Java since I started programming",,
2.34343E+17,Johnny#3826,2019-11-17,I read somewhere that everything in the OOP universe ever since its creation has been trying to fix it,,
2.34343E+17,Johnny#3826,2019-11-17,That pretty much hits the nail on the head,,
1.89169E+17,srasu#0042,2019-11-17,"Absolutely. I can't say that there's any particular aspect of OOP that I actually like which is unique to OOP. Even someone like Uncle Bob at this point now isn't defending the normal ideas of OOP, he just says that Polymorphism=OOP in one of his more recent posts titled `FP vs OO`",,
1.89169E+17,srasu#0042,2019-11-17,"He adds the additional restriction that for polymorphism to equal OOP there must also not be a source-code dependence from the caller to the callee, and Clojure's multimethods fit that bill, meaning that according to Robert C. Martin, Clojure's protocols are basically the simplest implementation of OOP, and Clojure's multimethods would also qualify, along with CLOS (no surprise on that one), plenty of lisp's polymorphism-based macros, Traits in Rust, typeclasses in Haskell, and so many other things.",,
2.34343E+17,Johnny#3826,2019-11-17,"The thing I realised is that I never even really tried to write ""proper"" OOP, i.e. the way Java is designed for. Functional ideas are even considered ""good practice"" in OOP by now, like immutable classes. Or all these patterns, e.g. the strategy pattern and whatnot",,
1.89169E+17,srasu#0042,2019-11-17,"Which with patterns, I found that probably about 80-90% of the usages of patterns that I've seen fall apart as soon as functions are first-class values.",,
1.89169E+17,srasu#0042,2019-11-17,In that things which clasically require hundreds of lines of boilerplate come down to a single lambda passed to something.,,
2.34343E+17,Johnny#3826,2019-11-17,Yeah,,
2.34343E+17,Johnny#3826,2019-11-17,"This stuff is always sold as being ""the simplest way"". But if you really think about it OOP is incredibly complex and I don't judge people anymore who fail at it",,
1.89169E+17,srasu#0042,2019-11-17,I think Casey Muratori has a good perspective on it that was summed up well after one of his streams here: https://www.youtube.com/watch?v=GKYCA3UsmrU,,
1.89169E+17,srasu#0042,2019-11-17,"If you think of things from ""what steps does the computer have to do"" then most things won't end up with objects in the same way. And while it's not malicous for objects to appear in your code, it should arise naturally as a solution to your problem, and not because you were trying to shoehorn your problem into the space of objects.",,
1.89169E+17,srasu#0042,2019-11-17,"Although in the context of Clojure, Haskell, and other high-level languages and it's not so much ""what steps does the computer have to do"" it's more ""what logical transformations need to happen to my data""",,
2.34343E+17,Johnny#3826,2019-11-17,Yeah right,,
2.34343E+17,Johnny#3826,2019-11-17,That's why I think procedural programming is actually the best start for newcomers,,
2.34343E+17,Johnny#3826,2019-11-17,Or rather just simple scripting,,
1.89169E+17,srasu#0042,2019-11-17,"Casey has a really good style of programming that he calls ""compression oriented programming"" where the idea is to always write the stupidest solution to the problem, and to only ever worry about abstracting something if you start having to write it again.",,
1.89169E+17,srasu#0042,2019-11-17,"Which I think may be where I finally was able to figure out a way to word my general opinion on code, and part of why I like lisps so much, that being that if I have to write something more than a couple times, then it's a deficiency of the language because I should be able to operate in the space of only specifying how things are different from the common pattern. I shouldn't have to specify the common pattern.",,
1.89169E+17,srasu#0042,2019-11-17,Or at least I shouldn't have to specify the common pattern more than once.,,
2.34343E+17,Johnny#3826,2019-11-17,"> Casey has a really good style of programming that he calls ""compression oriented programming"" where the idea is to always write the stupidest solution to the problem, and to only ever worry about abstracting something if you start having to write it again.
That's funny",,
2.34343E+17,Johnny#3826,2019-11-17,"It depends on what ""stupidest"" means but that doesn't sound like something I could be friends with",,
1.89169E+17,srasu#0042,2019-11-17,Well the idea is that you should never worry about abstracting something if you aren't using it more than once. No reason to create generic functions and code for doing something until you do it multiple times.,,
1.89169E+17,srasu#0042,2019-11-17,"So ""stupidest"" means that it doesn't concern itself with abstraction, it is readable, and it does the job to the full extent of what's required of it.",,
2.34343E+17,Johnny#3826,2019-11-17,"Hmm, there are often cases where the abstraction jumps right into my face",,
2.34343E+17,Johnny#3826,2019-11-17,And it doesn't feel right if I take the simple step of making it generic,,
2.34343E+17,Johnny#3826,2019-11-17,For example,,
2.34343E+17,Johnny#3826,2019-11-17,https://github.com/JohnnyJayJay/DailyCodingProblem/blob/master/src/november19/08.clj,,
2.34343E+17,Johnny#3826,2019-11-17,There my task was to find the first recurring element in a string,,
1.89169E+17,srasu#0042,2019-11-17,why call hash-set instead of just #{}?,,
2.34343E+17,Johnny#3826,2019-11-17,It was no effort to make it applicable for any collection,,
2.34343E+17,Johnny#3826,2019-11-17,So I did it,,
1.89169E+17,srasu#0042,2019-11-17,"Sure, because the default way of doing things in Clojure is in terms of the seq abstraction.",,
2.34343E+17,Johnny#3826,2019-11-17,"> why call hash-set instead of just #{}?
Yeah, I forgot about set literals when I made this, lol",,
1.89169E+17,srasu#0042,2019-11-17,That's not against how you would do things with compression oriented programming.,,
1.89169E+17,srasu#0042,2019-11-17,The difference is that you didn't have to spend extra time developing an abstraction you'd never use again.,,
2.34343E+17,Johnny#3826,2019-11-17,I would have done it in Java too,,
2.34343E+17,Johnny#3826,2019-11-17,Make a method that accepts any array,,
2.34343E+17,Johnny#3826,2019-11-17,It wouldn't have been any harder either so I'd just go for it,,
1.89169E+17,srasu#0042,2019-11-17,"That requires a tiny bit more effort on the part of the caller since you have to call getBytes, but other than that, it remains the same",,
1.89169E+17,srasu#0042,2019-11-17,"The difference is that for example when I was writing a rasterizer in C++, instead of simply writing some structures to represent 3x3 matrices and some to represent 4x4 matricies, I immediately saw that as an opportunity for abstraction and started writing an NxN implementation. That wasted a lot of time and wasn't necessary.",,
2.34343E+17,Johnny#3826,2019-11-17,"Or here, another small example from my Clojure journey
https://github.com/JohnnyJayJay/DailyCodingProblem/blob/master/src/november19/10.clj",,
2.34343E+17,Johnny#3826,2019-11-17,The assignment was: make it work for 32-bit binary numbers,,
2.34343E+17,Johnny#3826,2019-11-17,I made it work for any number with base n,,
2.34343E+17,Johnny#3826,2019-11-17,"I don't know how I would act in your matrix example, but I'd probably do the same",,
1.89169E+17,srasu#0042,2019-11-17,"Again, you're using examples of trivial abstraction. Abstraction which consists of basically replacing usage of a constant with usage of a parameter. That's not what compression oriented programming is saying to avoid.",,
1.89169E+17,srasu#0042,2019-11-17,"But yeah, making the NxN matrix stuff in C++ was absolutely a mistake, and if your reaction would have been to also try writing that, then I'd recommend that next time you feel the itch to do a bit of abstraction like that, stop and ask if it'll get used. The mistake of starting to do that wasted 6 hours of my time on an assignment where the rest took me all of 3 hours.",,
2.34343E+17,Johnny#3826,2019-11-17,I suppose it depends on the perspective,,
2.34343E+17,Johnny#3826,2019-11-17,"I almost always program for fun, to try things out, to learn new stuff",,
1.89169E+17,srasu#0042,2019-11-17,"Ah, well that's also fair. In that case, then it could easily be worth it.",,
1.89169E+17,srasu#0042,2019-11-17,"I also program for fun, but I almost always have a specific end goal, and I have so many projects I want to work on that I don't feel like it's beneficial for me to puts around doing random abstraction for the sake of it.",,
2.34343E+17,Johnny#3826,2019-11-17,I see that,,
1.89169E+17,srasu#0042,2019-11-17,"Especially since getting a job and having less free time *that I have the brain power to program in*. Amusingly I have way more free time now than I did for the last five years, but I just don't have the brain power to program in as much of that free time.",,
2.34343E+17,Johnny#3826,2019-11-17,Understandable,,
1.89169E+17,srasu#0042,2019-11-17,"Yet for some reason I have the brain power to learn a spoken language. But hey, at least now I'm close to bilingual, which has been a goal of mine forever.",,
2.34343E+17,Johnny#3826,2019-11-17,"If I think about it, I've definitely ""wasted"" a lot of time reasoning about general solutions, but I don't view it as a waste of time right now because it has somewhat benefited me",,
2.34343E+17,Johnny#3826,2019-11-17,"I mean, I started programming 2 years ago",,
1.89169E+17,srasu#0042,2019-11-17,"Yeah, at this point I mostly consider it a waste since I've been programming for coming up on 12 years.",,
2.34343E+17,Johnny#3826,2019-11-17,So I don't feel like I can get anything big done anyway lol,,
1.89169E+17,srasu#0042,2019-11-17,"And doing abstractions has been in my brain for over half of my life, so I'm just trying to get some things done.",,
2.34343E+17,Johnny#3826,2019-11-17,I reckon I'll get there eventually,,
1.89169E+17,srasu#0042,2019-11-17,"Abstraction is good, but good abstraction is hard to make and bad abstraction is often worse than no abstraction. That's the biggest lesson I've learned from that over the years.",,
2.34343E+17,Johnny#3826,2019-11-17,:BrillianceThumbsUp:,,
2.34343E+17,Johnny#3826,2019-11-17,What language do you learn?,,
1.89169E+17,srasu#0042,2019-11-17,Last I counted I'd programmed in over 30 languages.,,
1.89169E+17,srasu#0042,2019-11-17,I'm comfortable sitting down and writing around 14 right now.,,
2.34343E+17,Johnny#3826,2019-11-17,I mean the spoken one you mentioned,,
1.89169E+17,srasu#0042,2019-11-17,"Oh, lol",,
1.89169E+17,srasu#0042,2019-11-17,"lojban. It's the fifth language I've studied besides my native one (english), and it's the only one I've actually gotten conversational with.",,
1.89169E+17,srasu#0042,2019-11-17,"I've studied, in order, spanish, latin, hebrew, german, and lojban. Studied the first four for about 2 years each, never got anywhere with them. I've studied lojban for just over a year and I'm pretty good with it, I just need to increase my vocabulary a bit more for some of the use cases which are common in everyday life, but not common with the people I speak to in it.",,
2.34343E+17,Johnny#3826,2019-11-17,Holy cow,,
2.34343E+17,Johnny#3826,2019-11-17,I didn't even know such languages existed,,
2.34343E+17,Johnny#3826,2019-11-17,"(Lojban, not the others)",,
1.89169E+17,srasu#0042,2019-11-17,"Yeah, it's definitely pretty interesting.",,
1.89169E+17,srasu#0042,2019-11-17,I'm currently trying to write a mini novel in lojban.,,
2.34343E+17,Johnny#3826,2019-11-17,Good luck with that,,
1.89169E+17,srasu#0042,2019-11-17,Thanks! I'm about 3.5k words in out of 50k,,😮 (1)
2.34343E+17,Johnny#3826,2019-11-17,I'm just trying to further improve my English at this point,,
2.34343E+17,Johnny#3826,2019-11-17,My seven years attempt at french was a mistake,,
1.89169E+17,srasu#0042,2019-11-17,Fair enough. I always wanted to be bilingual. Languages have always facinated me.,,
2.34343E+17,Johnny#3826,2019-11-17,I rather see them as tools to communicate,,
2.34343E+17,Johnny#3826,2019-11-17,And beyond that they don't interest me too much,,
1.89169E+17,srasu#0042,2019-11-17,"I agree actually, which makes me amused when some people take linguistics further into philosophy. I really like the way that lojban makes it easier to express emotions, and can clear up some common miscommunications. That's part of why I started learning it.",,
2.34343E+17,Johnny#3826,2019-11-17,"I guess most artificial languages are ""objectively"" better to communicate",,
1.89169E+17,srasu#0042,2019-11-17,I wouldn't agree with that at all,,
2.34343E+17,Johnny#3826,2019-11-17,It's just a guess,,
2.34343E+17,Johnny#3826,2019-11-17,Or at least I'd guess so if the designers knew what they were doing and successfully identified problems of other languages,,
1.89169E+17,srasu#0042,2019-11-17,"Yeah, it's that there's a lot that goes into making a language usable. There's things like toki pona which only has 123 words, which means that to communicate you have to simplify things to an extreme that makes complex communication effectively impossible. On the other side you have ithkuil which is set up to condense information into as tight a space as possible, both in writing and in speaking, and as a result it's impossible to synthesize it at a reasonable speaking rate because it is far faster than our brains, and then there's things like esperanto which are very successful, but have problems that they're very euro-centric which is somewhat counter to the goal of being a language to bring the world together under a common tongue.",,
2.34343E+17,Johnny#3826,2019-11-17,Very interesting,,
2.34343E+17,Johnny#3826,2019-11-17,"I think everybody once had this idea of one common language, but I feel like many people don't know about these attempts",,
2.34343E+17,Johnny#3826,2019-11-17,Including me lol,,
2.34343E+17,Johnny#3826,2019-11-17,At least I've never heard about them,,
1.89169E+17,srasu#0042,2019-11-17,"Yeah, they don't get a lot of publicity even though esperanto has millions of speakers and hundreds or thousands of native speakers",,
3.53222E+17,Auekha#4109,2019-11-18,"The art is growing. I've been ""conlanging"" (constructing languages) for over 8 years, and the Reddit community alone has quadrupled in that time.",,
3.53222E+17,Auekha#4109,2019-11-18,"People have created all sorts of beautiful, wonderful, interesting conlangs, but I end up just making really regularised 'logical' ones too.",,
3.53222E+17,Auekha#4109,2019-11-18,"Sometimes when I get stuck on grammar I write my verbs as Clojure functions, sentences as forms. It's like an EDN conlang but it's not very good for speaking 😆 
Computers are good at counting and forward expectations, humans brains are really kinda flat thinking.",,
3.53222E+17,Auekha#4109,2019-11-26,"I have the dependency `[uswitch/lambada ""0.1.2""]` and its sole dependency is `[com.amazonaws/aws-lambda-java-core ""1.1.0""]` when inspecting the project with `lein deps :tree`
Can I force `lambada` to use `aws-lambda-java-core ""1.2.0""`?",,
1.89169E+17,srasu#0042,2019-11-26,you can add an exclusion for it and manually add a version.,,
1.89169E+17,srasu#0042,2019-11-26,"Or if you are using deps.edn just including the top-level dependency on it would do it too, even without exclusions.",,
3.53222E+17,Auekha#4109,2019-11-26,"That's cool, thank you :)",,
3.53222E+17,Auekha#4109,2019-11-26,"I tried :managed-dependencies too, which worked.",,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,"Hey, just a quick question about using loop/recur:  Can I have multiple recur statements with a single loop? 
i.e, ```
(loop [var x]
    (cond     
        (= x a) x
        (= x b) (recur (+ x 1))
        (= x c) (recur (+ x 2))))```",,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,Or something ilke that?,,
2.34343E+17,Johnny#3826,2019-12-02,Yes you can,,
2.34343E+17,Johnny#3826,2019-12-02,As long as they're all in tail position,,
2.34343E+17,Johnny#3826,2019-12-02,I.e. the last statement in the recur scope,,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,Ah,,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,Ok,,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,thank you!,,
1.89169E+17,srasu#0042,2019-12-02,"Yeah, as long as nothing uses the return value of recur in the scope of the loop or recursive function, you're good.",,
1.89169E+17,srasu#0042,2019-12-02,"As a general rule anyway, Johnny was more precise for sure.",,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,okie got it,,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,Thank you!,,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,Hrm,,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,Can I wrap a recur with a let?,,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,Like,,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,I have something that I need to use twice inside my recur,,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,But I don't want to compute it twice,,
3.46868E+17,djeis#0042,2019-12-02,"Yup, as long as the let is in the tail position and the recur is in the tail of the let.",,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,okie,,
2.88883E+17,"Liria ^(;,;)^#0001",2019-12-02,thank you!,,
3.53222E+17,Auekha#4109,2019-12-11,"Is there a better idiom than
`(let [{:keys [k1 k2 k3]} {(return-a-keyword) true}] ...)`
to bind potential keywords?",,
3.53222E+17,Auekha#4109,2019-12-11,"I haven't read about that one anywhere, it's just how I've approached the problem",,
3.53222E+17,Auekha#4109,2019-12-11,"And maybe ""binding"" isn't the right word,
but I'd like it so when a function returns, only one of several possible keys is truthy",,
3.53222E+17,Auekha#4109,2019-12-11,It's so then instead of `(if (= :k1 result) ...` I can do `(if k1 ...)`,,
4.48827E+17,donderdag#4004,2019-12-11,seems fishy to me,,
4.48827E+17,donderdag#4004,2019-12-11,thinking,,
4.48827E+17,donderdag#4004,2019-12-11,wait that's a condp,,
4.48827E+17,donderdag#4004,2019-12-11,"```clj
(condp = result
  :k1 (f)
  :k2 (g)
  :k3 (h))```",,
3.53222E+17,Auekha#4109,2019-12-11,"Thing is, I use it for logic all over the place",,
3.53222E+17,Auekha#4109,2019-12-11,"For example, a hypothetical function which returns :north :east :south :west
After the let I'd be testing if it's one of the four a lot, like if composing Hiccup HTML",,
3.53222E+17,Auekha#4109,2019-12-11,"It seems fishy to me too, hence I'm asking for another idiom 😆",,
4.48827E+17,donderdag#4004,2019-12-11,maybe look into a rules engine too,,
4.48827E+17,donderdag#4004,2019-12-11,http://www.clara-rules.org/,,
3.53222E+17,Auekha#4109,2019-12-11,Is there `count` with a predicate in core? Rather than `(count (filter pred coll))`?,,
3.53222E+17,Auekha#4109,2019-12-11,It'd be cool if `count` accepted a predicate,,
2.67464E+17,SlashDevSlashRandom#2112,2019-12-11,"I don't know of one, but I think that generally ""it'd be cool if X"" is sort of a contributing factor to huge core libraries :)",,
3.97541E+17,evanpeterjones#1812,2019-12-15,Wanted to use deps.edn instead of always building projects with leiningen if I only need a simple script with a few dependencies. But now I'm wondering if there's a way to consolidate the deps.edn and clj files into one so a script and its dependencies can be totally contained in one file?,,
1.89169E+17,srasu#0042,2019-12-15,Well if you include all your script dependencies in your user deps.edn then that would be one way. The other is to compile an uberjar or native image from it using cambada or similar.,,
1.63628E+17,tufflax#8251,2019-12-15,How do I use flags such as https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/util/regex/Pattern.html#DOTALL when using Clojure's regex functions?,,
1.63628E+17,tufflax#8251,2019-12-15,"Oh, I guess I can use flag expressions at the beginning of the regex",,
4.101E+17,winter#6414,2019-12-16,"Hi, are there any projects that heavily uses `funcool/cats` or any other monad library? Would like to learn from it about how they use it.",,
4.101E+17,winter#6414,2019-12-16,Particularly on how far they integrate with normal clojure code.,,
4.33655E+17,feroxide#0774,2019-12-17,"i'm doing a small hackernews-ish thing to better learn clojure. is making a protocol for query, insertion and specs and records for posts/users and stuffs good model. Also when to use maps vs records? And though it doesn't matter for a small project, do they have significant performance differences?",,
2.67464E+17,SlashDevSlashRandom#2112,2019-12-17,"performance-wise, records create fields for their explicit keys, so you're likely to get better read performance than retrieving a value from a map",,
2.67464E+17,SlashDevSlashRandom#2112,2019-12-17,"as far as the protocols go, it sounds like the things you're talking about using protocols for aren't all that different from core functions like filter and conj, so I'm not sure if they'd be warranted - it seems like query and insertion would be on collections of things rather than the things themselves",,
4.48827E+17,donderdag#4004,2019-12-18,@feroxide you probably don't need records. stick with maps until you're sure you need otherwise,,
2.00419E+17,llama lama#9629,2020-02-15,stm is really cool,,👌 (1)
2.00419E+17,llama lama#9629,2020-02-16,is this server dead?,,👎 (1)
1.89169E+17,srasu#0042,2020-02-16,Not really?,,
1.89169E+17,srasu#0042,2020-02-16,But kinda,,
1.89169E+17,srasu#0042,2020-02-16,"There's a few of us here who like to answer questions, like me, djeis, and a few others.",,"🙂 (6),👍 (6)"
1.82016E+17,WhoNeedszZz#9017,2020-02-22,And some of us looking for help on projects 🙂,,
4.56227E+17,Deleted User#0000,2020-03-06,Are efforts to make Clojure (on JVM) a viable development platform for Android abandoned?,,
1.89169E+17,srasu#0042,2020-03-07,I think for the most part people have moved on to doing cljs via ReactNative for android development. I haven't seen any recent updates to the clojure on android project.,,
1.89169E+17,srasu#0042,2020-03-07,"Although it looks like lein-droid should still work, even with the latest clojure versions. You just have to determine if the startup time that it provides is fast enough for you.",,
1.89169E+17,srasu#0042,2020-03-07,"Specifically though, if you want to do clojure development on mobile, I recommend https://expo.io/",,
1.89169E+17,srasu#0042,2020-03-07,"It's a platform which provides a way to use react-native for everything, without having to write any native code either for android or ios.",,
1.89169E+17,srasu#0042,2020-03-07,https://docs.expo.io/versions/latest/guides/using-clojurescript/,,
4.56227E+17,Deleted User#0000,2020-03-07,Ooh interesting.,,
1.82016E+17,WhoNeedszZz#9017,2020-03-09,"Expo is cool, but just understand there are trade-offs with that kind of software.",,
2.98148E+17,lepistane#2482,2020-03-09,"re-natal is great
shadow cljs is getting great too",,
2.85558E+17,Leon#1989,2020-03-14,"Hey i was just wondering if anyone could help me, i have a sequence of 
`'(1 2 3 4 5)`
And im wanting to find out the index of 5.

for example, in this case the result would be 4.

Is there anything built into clojure to solve this?",,
2.2276E+17,Artémis#7417,2020-03-14,`(.indexOf '(1 2 3 4 5) 5)`,,
2.2276E+17,Artémis#7417,2020-03-14,,https://cdn.discordapp.com/attachments/315388260987830272/688511662969454623/unknown.png,
1.89169E+17,srasu#0042,2020-03-14,"That works, but if you want a lazy sequence of the indices of all matches, you could do the following:
`(map first (filter #(= 5 (second %)) (map-indexed vector '(1 2 3 4 5))))`",,
2.85558E+17,Leon#1989,2020-03-14,🤦‍♂️ Thanks guys,,
6.88836E+17,david_node#1019,2020-03-15,"hey guys i want to add two lists as argument:
user=> (defn share [a b] (a b))
but if i call it i get:
user=> (share '
  #_=>         [1 2] '[1 2])
Execution error (IllegalArgumentException) at user/share (REPL:1).
Key must be integer",,
6.88836E+17,david_node#1019,2020-03-15,,https://cdn.discordapp.com/attachments/315388260987830272/688836707092791431/unknown.png,
6.88836E+17,david_node#1019,2020-03-15,"anyone any idea, what im doing wrong here?",,
6.88836E+17,david_node#1019,2020-03-15,can't i just pass two lists?,,
6.88836E+17,david_node#1019,2020-03-15,is there something special about passing lists in clojure?,,
4.84414E+17,david_node#3395,2020-03-15,"i think i got it i have to give  ""list"" return type",,
2.18602E+17,lsenjov#4288,2020-03-15,"What are you trying to do, exactly?",,👆 (1)
2.18602E+17,lsenjov#4288,2020-03-15,When you call `(a b)` you're calling `([1 2] [1 2])` which kinda doesn't work,,
2.18602E+17,lsenjov#4288,2020-03-15,"If you were to call `([1 2] 0)` you'd get the 0th item, since vectors can be called as functions provided their argument is an index",,
4.84414E+17,david_node#3395,2020-03-16,@lsenjov i want to write a program that takes a list of 8 elements and shares assign each two elements on a new list,,
2.18602E+17,lsenjov#4288,2020-03-16,Shares assign?,,
2.18602E+17,lsenjov#4288,2020-03-16,Can you give an example of input and output?,,
2.18602E+17,lsenjov#4288,2020-03-16,"Are you talking like, `(share [1 2 3 4 5 6 7 8]) ; [[1 2] [3 4] [5 6] [7 8]]`?",,
4.84414E+17,david_node#3395,2020-03-16,"@lsenjov exactly, it should be card game and i have shuffled, now 4 people get each two cards",,
2.18602E+17,lsenjov#4288,2020-03-16,Oh I see,,
2.18602E+17,lsenjov#4288,2020-03-16,"Right, so you've got some options",,
2.18602E+17,lsenjov#4288,2020-03-16,Gimme a tic,,
2.18602E+17,lsenjov#4288,2020-03-16,You can use `(partition 2 coll)`,,
2.18602E+17,lsenjov#4288,2020-03-16,http://clojuredocs.org/clojure.core/partition,,
4.84414E+17,david_node#3395,2020-03-16,nice thank you @lsenjov,,👍 (1)
4.84414E+17,david_node#3395,2020-03-16,"so new this functional approach, i need to adapt my thinking. does anyone know a good introduction to thinking in a functional style?",,
1.82016E+17,WhoNeedszZz#9017,2020-03-16,"There's always the classic, *Are We There Yet?* https://www.youtube.com/watch?v=E4RarTAZ2AY for the philosophical side",,
1.82016E+17,WhoNeedszZz#9017,2020-03-16,https://www.cs.kent.ac.uk/people/staff/dat/miranda/whyfp90.pdf is a solid paper for why FP,,
1.82016E+17,WhoNeedszZz#9017,2020-03-16,https://www.youtube.com/watch?v=P76Vbsk_3J0 is helpful if you know Java,,
4.84414E+17,david_node#3395,2020-03-16,"@WhoNeedszZz thanks, i love rich hickeys talks, they are addicting",,👍 (2)
1.82016E+17,WhoNeedszZz#9017,2020-03-16,Very!,,
1.82016E+17,WhoNeedszZz#9017,2020-03-16,https://www.braveclojure.com/ is a fantastic read and humorous to keep it interesting,,
1.82016E+17,WhoNeedszZz#9017,2020-03-16,It's difficult to explain how to think in it on a general level so I've found it most helpful to look at those kind of resources and then just practice using it until the coin drops,,
1.82016E+17,WhoNeedszZz#9017,2020-03-16,Make note of the aha moments,,👍🏻 (1)
1.82016E+17,WhoNeedszZz#9017,2020-03-16,Rich gives a fantastic explanation in the first talk I posted though,,
4.84414E+17,david_node#3395,2020-03-16,"already watching, thanks 🙂",,👍 (1)
1.82016E+17,WhoNeedszZz#9017,2020-03-16,Right around the 30m mark,,
1.82016E+17,WhoNeedszZz#9017,2020-03-16,https://www.youtube.com/watch?v=f84n5oFoZBc is also really helpful and I think often over-looked,,
1.82016E+17,WhoNeedszZz#9017,2020-03-16,Design phase is critical,,
4.84414E+17,david_node#3395,2020-03-16,thanks @WhoNeedszZz,,👍 (1)
4.84414E+17,david_node#3395,2020-03-17,is conj short for conjure?,,
3.46868E+17,djeis#0042,2020-03-17,"Conjoin, I think.",,👍🏻 (1)
4.84414E+17,david_node#3395,2020-03-17,"guys, i am partioning cards in a small game in clojure. is it fine to just rename the output like this",,
4.84414E+17,david_node#3395,2020-03-17,,https://cdn.discordapp.com/attachments/315388260987830272/689603535553429583/unknown.png,
4.84414E+17,david_node#3395,2020-03-17,i am basically giving first two cards to p1 and then the next cards to player 2. after i do this the first time i overwrite players with the changed data. is that perfectly fine to do?,,
4.84414E+17,david_node#3395,2020-03-17,"i hope this question does not sound strange, but functional thinking is not so familiar",,
4.84414E+17,david_node#3395,2020-03-17,"i was thinking, i can put the result directly in the function",,
4.84414E+17,david_node#3395,2020-03-17,"anyone any idea, what my error is:",https://cdn.discordapp.com/attachments/315388260987830272/689646250273931266/unknown.png,
4.84414E+17,david_node#3395,2020-03-17,i want to return {:p1 1} in that function,,
2.18602E+17,lsenjov#4288,2020-03-17,Remove the outer parens,,
2.18602E+17,lsenjov#4288,2020-03-17,"Wait, hold on",,
2.18602E+17,lsenjov#4288,2020-03-17,You're just wanting something that returns what's given to it?,,
2.18602E+17,lsenjov#4288,2020-03-17,"But in general, remember that parens have different meaning than other languages",,
2.18602E+17,lsenjov#4288,2020-03-17,Parens actually _do something_ in lisps,,
2.18602E+17,lsenjov#4288,2020-03-17,"It's trying to evaluate `{hi 1}` as a function, not just return `{hi 1}`",,
2.18602E+17,lsenjov#4288,2020-03-17,"Wait, I was right, just remove the outer parens",,
4.84414E+17,david_node#3395,2020-03-17,,https://cdn.discordapp.com/attachments/315388260987830272/689649025817116712/unknown.png,
4.84414E+17,david_node#3395,2020-03-17,"nice @lsenjov , that worked",,
4.84414E+17,david_node#3395,2020-03-17,i forgot '(' is evaluating,,
4.84414E+17,david_node#3395,2020-03-17,"some small pitfalls, i have to get used to",,
4.84414E+17,david_node#3395,2020-03-17,is there a way to 'map' a function with two arguments:,https://cdn.discordapp.com/attachments/315388260987830272/689651767826317455/unknown.png,
4.84414E+17,david_node#3395,2020-03-17,like this?,,
2.18602E+17,lsenjov#4288,2020-03-17,"Yes, but remember your expansion",,
2.18602E+17,lsenjov#4288,2020-03-17,That goes to `[(+ [1 2]) (+ [3 4])]`,,
2.18602E+17,lsenjov#4288,2020-03-17,What do you want it to look like?,,
2.18602E+17,lsenjov#4288,2020-03-17,(Also remember that `partial` and `apply` are functions),,
4.84414E+17,david_node#3395,2020-03-17,,https://cdn.discordapp.com/attachments/315388260987830272/689675659462574092/unknown.png,
4.84414E+17,david_node#3395,2020-03-17,i am getting an error if i type this,,
4.84414E+17,david_node#3395,2020-03-17,"okay, i will think about it, thanks @lsenjov",,
2.67464E+17,SlashDevSlashRandom#2112,2020-03-17,what is your desired output from your map call?,,
2.67464E+17,SlashDevSlashRandom#2112,2020-03-17,"The essence of what's happening there is that your parameter is a vector with two vectors in it, so like lsenjov said, that expansion is trying to make two calls to `+`, each with one parameter of a vector, and Clojure doesn't know how to add one vector, e.g. `(+ [1 2])` doesn't really make sense (you probably want `(+ 1 2)`). So, you could map `apply +` if you want to add the contents of each vector separately.",,
2.67464E+17,SlashDevSlashRandom#2112,2020-03-17,"to your question about multiple arguments, map has a form that takes more than one collection, and it will call the function with the first element of each collection, then the second element of each collection, then the third element, and so on, until one of the collections is empty",,
2.67464E+17,SlashDevSlashRandom#2112,2020-03-18,"for example:

the `vector` function creates a vector of its arguments
```clojure
   (vector 1 2)
=> [1 2]
```

using `map` with multiple collections call vector for each position that exists in each collection
```clojure
   (map vector [1 2 3] [""first"" ""second"" ""third""] [""1st"" ""2nd"" ""3rd"" ""4th""])
=> ([1 ""first"" ""1st""] [2 ""second"" ""2nd""] [3 ""third"" ""3rd""])
```",,
4.84414E+17,david_node#3395,2020-03-18,"yes @SlashDevSlashRandom thanks you both, i get it",,
4.84414E+17,david_node#3395,2020-03-18,,https://cdn.discordapp.com/attachments/315388260987830272/689880006478004247/unknown.png,
1.82016E+17,WhoNeedszZz#9017,2020-03-18,"@david_node Just a heads up, Discord supports code blocks with Clojure syntax highlighting (on desktop). Surround the code with two sets of 3 backticks and 'clojure' after the first set",,👍🏻 (1)
4.84414E+17,david_node#3395,2020-03-19,"i started out with rich hickeys talks and i thought, that his thoughts are so profound, that i wanted to hear everything, he has to say. some things i do not seem to grasp yet, but it's these moments, where you found someone who is thinking so different (than everybody else) and yet his arguments make sense. It's like discovering a new world, which was there the whole time, but you missed it because you simply did know it.
I have this feeling, that this is the language i learnt the fastest ever. the syntax and semantics are insanely easy. I just need to get familiar with basic functions and wrap my head around the functional way of thinking, but this is insane. where are the downsides to this? can anyone relate to this?",,👆 (1)
2.18602E+17,lsenjov#4288,2020-03-19,Downsides?,,
2.18602E+17,lsenjov#4288,2020-03-19,Okay,,
2.18602E+17,lsenjov#4288,2020-03-19,"So one, it's hard for a lot of people to learn",,👎 (1)
2.18602E+17,lsenjov#4288,2020-03-19,"Clojure is very opinionated, and breaking years of programming habits are hard",,
2.18602E+17,lsenjov#4288,2020-03-19,"Two, lisp syntax scares people",,
2.18602E+17,lsenjov#4288,2020-03-19,"Three, tooling is excellent, but takes some time to get used to",,
2.18602E+17,lsenjov#4288,2020-03-19,Repl driven development is fucking weird compared to the norm,,
2.18602E+17,lsenjov#4288,2020-03-19,"Four, it really needs spec 2 to get finished so people can start properly building tooling for it",,
2.18602E+17,lsenjov#4288,2020-03-19,"The lack of saying ""it has a stable type system"" is a hard sell for a lot of people",,
2.18602E+17,lsenjov#4288,2020-03-19,"(Yes, spec isn't a static type system, but it needs to be stable so we can say ""hey look, this is how you use the official thing and why it doesn't need to be static"")",,
2.18602E+17,lsenjov#4288,2020-03-19,"Five, it's pretty fast, but you can't really use it for anything needing blistering performance",,👎 (1)
2.18602E+17,lsenjov#4288,2020-03-19,"So it's never going to be championed by the googles of the world, where a 1% performance improvement is millions in yearly savings",,
2.18602E+17,lsenjov#4288,2020-03-19,"Six, lisp syntax scares people (seriously, this is one of the biggest factors)",,
2.18602E+17,lsenjov#4288,2020-03-19,That's off the top of my head,,
2.18602E+17,lsenjov#4288,2020-03-19,"Also, while there's very little syntax, there's a surprising number of reader macros that confuse readers",,
2.18602E+17,lsenjov#4288,2020-03-19,Especially when dealing with cljc files,,
2.18602E+17,lsenjov#4288,2020-03-19,Every time someone sees `#?@` it scares them a lot,,
4.84414E+17,david_node#3395,2020-03-19,"thanks for elaborating on this @lsenjov , i really need to dig in more and check out what #?@ means. syntax is just the simplest i have ever encountered compared to other languages, i think it is just a bit bewildering in the beginning.",,
2.18602E+17,lsenjov#4288,2020-03-19,👍,,
2.18602E+17,lsenjov#4288,2020-03-19,`#?` and `#?@` are used in .cljc files,,
2.18602E+17,lsenjov#4288,2020-03-19,.cljc files compile to both clojure and clojurescript,,
2.18602E+17,lsenjov#4288,2020-03-19,And those reader conditionals are for doing platform specific code,,
2.18602E+17,lsenjov#4288,2020-03-19,Especially interop,,
2.18602E+17,lsenjov#4288,2020-03-19,"Your `Integer/parseInt` won't work on the javascript side, for instance",,
4.84414E+17,david_node#3395,2020-03-19,"why cant you say, that it is a stable system?",,
2.18602E+17,lsenjov#4288,2020-03-19,Because `Integer/parseInt` is specifically a Java call,,
2.18602E+17,lsenjov#4288,2020-03-19,The js side is `js/parseInt`,,
2.18602E+17,lsenjov#4288,2020-03-19,But `#?` allows you to specify how to parse an int on both platforms and use it interchangeably,,
2.18602E+17,lsenjov#4288,2020-03-19,"Well, there's a little more to it, but that's why the reader conditional exists",,
4.84414E+17,david_node#3395,2020-03-19,"and that makes the system ""not stable"". i dont understand",,
2.18602E+17,lsenjov#4288,2020-03-19,Wait what?,,
2.18602E+17,lsenjov#4288,2020-03-19,"What do you mean, ""not stable""?",,
4.84414E+17,david_node#3395,2020-03-19,"you said 'The lack of saying ""it has a stable type system"" is a hard sell for a lot of people'",,
2.18602E+17,lsenjov#4288,2020-03-19,"Oh right, type system",,
2.18602E+17,lsenjov#4288,2020-03-19,Okay,,
4.84414E+17,david_node#3395,2020-03-19,type system,,
2.18602E+17,lsenjov#4288,2020-03-19,So one thing that's been hard to sell to people is the dynamic nature,,
4.84414E+17,david_node#3395,2020-03-19,oh sorry,,
2.18602E+17,lsenjov#4288,2020-03-19,And spec/spec2 are still in alpha,,
4.84414E+17,david_node#3395,2020-03-19,"yes, got it 🙂",,
4.84414E+17,david_node#3395,2020-03-19,will look into spec,,
2.18602E+17,lsenjov#4288,2020-03-19,"So while I'm using spec at the moment, I can't say it's fully ready",,
4.84414E+17,david_node#3395,2020-03-19,spec is the static type checker for clojure?,,
2.18602E+17,lsenjov#4288,2020-03-19,"No, it's not static",,
2.18602E+17,lsenjov#4288,2020-03-19,"There's core.typed which is static, but I don't know how much it's used",,
2.18602E+17,lsenjov#4288,2020-03-19,"It's more that spec is the officially condoned way of checking data, and it's not stable",,
2.18602E+17,lsenjov#4288,2020-03-19,It raises eyebrows when my requires have `clojure.spec.alpha` in them,,
4.84414E+17,david_node#3395,2020-03-19,"i see, i need to look into it",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"> So one, it's hard for a lot of people to learn
@lsenjov I don't agree with this. I would say the functional mindset is difficult for some to grasp, but the language itself is one of the easiest languages to learn",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"> Five, it's pretty fast, but you can't really use it for anything needing blistering performance
@lsenjov Don't agree with this either",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"Poor performance in Clojure is a design or implementation failure, not a failure of the language",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Android uses Java,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"In fact, I don't consider any of those things you said as downsides of the language, but downsides of the people trying to learn it",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"Regarding spec, sure it could be a bit more fleshed out tool-wise, but I haven't seen glaring issues regarding itself. Again, I think you're just highlighting the many flaws in the ways many programmers do things that are in a completely different mindset and thus seem foreign to them. To me this is obvious and logical. When you're learning a foreign language do you not have the same struggles?",,
2.18602E+17,lsenjov#4288,2020-03-19,"""blistering"" meaning things like high end game Dev, and other things where you need to squeeze out performance",,
2.18602E+17,lsenjov#4288,2020-03-19,"There's also a lot of programmers who can't unlearn previous things, which is why it's hard for them to learn",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"That's a failure of the person, not the language",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"And to your first statement, well yeah. You don't use any general purpose language for a specific task like that",,
2.18602E+17,lsenjov#4288,2020-03-19,"I know, but these _are_ drawbacks when trying to use it commercially",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,So it's not really in scope,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,that depends on your hiring practices,,
2.18602E+17,lsenjov#4288,2020-03-19,Trying to actually find/hire clojure devs is painful,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Says whom?,,
2.18602E+17,lsenjov#4288,2020-03-19,Because they don't exactly fall from trees,,
2.18602E+17,lsenjov#4288,2020-03-19,"Us, trying to find Aus based clojure devs",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Of course not. Highly skilled people of any trade are difficult to find,,
2.18602E+17,lsenjov#4288,2020-03-19,I could have a dozen bites for a Ruby or Java dev in a week,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"Yeah, and you get what you pay for too",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Highly skilled programmers aren't looking for low ball offers,,
2.18602E+17,lsenjov#4288,2020-03-19,"Look, I agree with you on all these points",,
2.18602E+17,lsenjov#4288,2020-03-19,But these are still drawbacks to adoption,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"Well to be fair, he asked what are the drawbacks of the language itself, not specifically to commercial adoption",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I understood his question to mean from a general learning pov,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,@david_node Is that accurate?,,
2.18602E+17,lsenjov#4288,2020-03-19,"These are pain points I've been hitting recently, so they're fresh in mind",,
4.84414E+17,david_node#3395,2020-03-19,@WhoNeedszZz exactly,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"Ok, thought so",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"So yeah, I totally understand your frustration, @lsenjov. That's why I can't find work here in the US and had to start my own company. All I got were low ball offers that never work out",,
4.84414E+17,david_node#3395,2020-03-19,what does 'low ball' mean?,,
2.18602E+17,lsenjov#4288,2020-03-19,Low pay,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Low salary to your skill level,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Like offering you $40k when you're worth 6 figures,,
4.84414E+17,david_node#3395,2020-03-19,but also the commercial side is an interesting point as well,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,It is,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,And it sucks,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"I can't speak to hiring practices in Australia, but I know very well how it is in the US. They want to give you low pay, give them !20%, do multiple roles, but not be too good to where you outshine your peers.",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,It's totally insane,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"But if you give them 90-100% to avoid the last bit, they complain and say they know you can do better",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Catch-22 all of the way,,
4.84414E+17,david_node#3395,2020-03-19,"sounds a bit contradicting. interesting you say language is easy to learn as well, but that functional programming part is hard.",,
4.84414E+17,david_node#3395,2020-03-19,that is exactly how i experience it,,
4.84414E+17,david_node#3395,2020-03-19,"i have started writing a program and started mutating data with ""def"" just because my mind is so used to do so",,
4.84414E+17,david_node#3395,2020-03-19,"it just a complete different way of thinking, but with exercise i think the coin will toss",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"It sounds contradicting, but it depends on your previous exposure. If you've never learned a functional language then any functional language will give you double-takes. But if you've been exposed to the functional paradigm before it is trivial to learn Clojure",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I had the luxury of being exposed to it previously in my personal and Comp Sci studies,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I also had a professor that prefers the functional paradigm and taught Java using closures,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,It made it much easier to grasp,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,And our code had very few errors in it to boot,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,And this was before Java officially supported closures,,
4.84414E+17,david_node#3395,2020-03-19,"nice, seems like your professor was on a good path",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Definitely,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,He's a Haskell guy,,
4.84414E+17,david_node#3395,2020-03-19,"oh okay, yeah, makes sense then 😄",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,You want hard language to learn? That's the one,,
2.18602E+17,lsenjov#4288,2020-03-19,"Australia's a mixed bag like most places, but there's definitely a culture of avoiding burnout in most places I hear of",,
4.84414E+17,david_node#3395,2020-03-19,😄,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,But I have to say I actually enjoyed it being written as math,,
2.18602E+17,lsenjov#4288,2020-03-19,"Mainly because good programmers are in short supply, and hiring is expensive, so they do their best to not lose people",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,The opposite in the US,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Burnout all day every day,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Massive turnover rates,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I often find a large part of it being some idiot director that knows nothing about programming calling the shots,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"And ""leads"" that haven't programmed in 20 years",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,True story,,
4.84414E+17,david_node#3395,2020-03-19,"i think it's worth trying to learn the functional paradigm. even if i will not work with clojure, i can adapt it in other languages",,👍 (2)
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"In one of my positions we had discussed at length why we shouldn't use Redux unless the task absolutely demanded it. Whole team agreed, including the lead that hadn't programmed in 20 years. Few weeks in to the project - we're using Redux now. What changed? Nothing. So why are we using it given everything we talked about? Because I said so.",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,And not a single person on the team had used it before,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Do you think the project got finished?,,
4.84414E+17,david_node#3395,2020-03-19,i guess not,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"> i think it's worth trying to learn the functional paradigm. even if i will not work with clojure, i can adapt it in other languages
@david_node You can absolutely use it in imperative languages. I would argue you write much more efficient and less error-prone code that way",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Java with closures perfect example,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,But I think if you just stick with it you'll be successful,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Most people that shit on functional languages gave up,,
4.84414E+17,david_node#3395,2020-03-19,i am thinking of python using immutable data,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,That would work. Python is a hybrid language anyway,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,You don't have to use classes at all,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,When I used Python I did exactly that,,
4.84414E+17,david_node#3395,2020-03-19,"nice, nice, but sticking to clojure first is to get some discipline",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,What did you think of the OOP fallacy presented in *Are We There Yet?*,,
4.84414E+17,david_node#3395,2020-03-19,just loved it,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I show that to anyone that praises OOP,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,And laugh,,
4.84414E+17,david_node#3395,2020-03-19,😄,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Entire class of errors gone by using functional mindset,,
4.84414E+17,david_node#3395,2020-03-19,"i just love, that we got the modeling of our world wrong",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,ikr,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I thought this did a great job of explaining the pitfalls of Microservices: https://www.youtube.com/watch?v=BThkk5zv0DE,,👍🏻 (1)
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I would love to work for Derek,,
4.84414E+17,david_node#3395,2020-03-19,"in a way, rich hickey really went back to a very abstract level in order figure where the his problems were caused by and that is sooo damn genius",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,That's how to do it,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"If your tool doesn't allow you to do what you need, use another tool",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Tool doesn't exist? Make it,,
4.84414E+17,david_node#3395,2020-03-19,😄,,
4.84414E+17,david_node#3395,2020-03-19,TRUE,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,We have too many programmers that wait for other people to make the change,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Sheep mentality,,
4.84414E+17,david_node#3395,2020-03-19,i have seen that LISP is used in quantum computer programming,,
4.84414E+17,david_node#3395,2020-03-19,clojure could as well take that spot probably,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I believe so,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I think Clojure has much more potential than what people are using it for,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I used ClojureScript + re-frame (+ reagent) and made a React site that performs **better** than a JS React site done the same way,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Yet ClojureScript turns into vanilla JS,,
4.84414E+17,david_node#3395,2020-03-19,wow that is awesome. for me clojurescript is just another nice language feature.,,
4.84414E+17,david_node#3395,2020-03-19,"since it is there, it could open many doors",,
4.84414E+17,david_node#3395,2020-03-19,"i wonder, if clojure will be the python of ten years before",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"That's the beauty of it. Clojure results in plain Java, ClojureScript results in plain JS. That's why I don't really understand the feet dragging for commercial adoption. You don't have to redo your whole codebase. You can just write new things in it and go back and migrate when you have the time",,
3.46868E+17,djeis#0042,2020-03-19,"Well, there are still some integration issues just adding clojure into an existing java codebase.",,
3.46868E+17,djeis#0042,2020-03-19,"But there are a lot of cases where you can do that, yea.",,
4.84414E+17,david_node#3395,2020-03-19,"way is practically laid out for people to go, but they won't because it seems too risky probably and you dont want to be dependent on a bunch of clojure developers. where will you get them from?",,
3.46868E+17,djeis#0042,2020-03-19,🤷‍♂️ slow and steady expansion,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,People are afraid of risk,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Even though they do risky things on a daily basis,,
3.46868E+17,djeis#0042,2020-03-19,"A few people screaming at the top of their lungs that it's awesome, a lot more being reasonable and friendly.",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Huh?,,
3.46868E+17,djeis#0042,2020-03-19,Me?,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Yes,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Not sure what you meant there,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Why is being vocal about it being great unreasonable?,,
3.46868E+17,djeis#0042,2020-03-19,Was explaining how we get the developer base to actually change the industry.,,
3.46868E+17,djeis#0042,2020-03-19,Oh.,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Developers have very little ability to influence the higher ups,,
3.46868E+17,djeis#0042,2020-03-19,I said screaming for a reason.,,
3.46868E+17,djeis#0042,2020-03-19,And I'm not saying having those people in the community is a bad thing.,,
3.46868E+17,djeis#0042,2020-03-19,They get the word out.,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Who is screaming though?,,
3.46868E+17,djeis#0042,2020-03-19,But people that are that loud have a tendancy to also be uncompromising.,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,I haven't seen these people,,
3.46868E+17,djeis#0042,2020-03-19,"I've run into a few. Heck, I've been one of them from time to time.",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Where though?,,
3.46868E+17,djeis#0042,2020-03-19,"Online, mostly.",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Certainly not here,,
3.46868E+17,djeis#0042,2020-03-19,"Oh, no, not on this discord.",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,"Maybe in the Slack, but I couldn't keep up with it to really notice",,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,And I ignore Reddit,,
3.46868E+17,djeis#0042,2020-03-19,It's not the sort of thing you'd see in an actual clojure community- no point preaching to the choir.,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,TRUE,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Except on Reddit,,
3.46868E+17,djeis#0042,2020-03-19,True lol,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,Reddit is a cesspool,,
1.82016E+17,WhoNeedszZz#9017,2020-03-19,You want to get downvoted for saying something easily verifiable? Post on Reddit,,
4.84414E+17,david_node#3395,2020-03-19,😄,,
4.84414E+17,david_node#3395,2020-03-20,"i thought filter and map were important, but now i think it reduce is really key",,
4.84414E+17,david_node#3395,2020-03-20,for composition,,
1.82016E+17,WhoNeedszZz#9017,2020-03-20,They are all useful,,👍🏻 (1)
4.84414E+17,david_node#3395,2020-03-21,i just realized that i am actually executing function after function after function.,,
4.84414E+17,david_node#3395,2020-03-21,so strange,,
2.67464E+17,SlashDevSlashRandom#2112,2020-03-21,"well, in a really abstract way, most languages can be thought of as a bunch of function calls, but in a language like Clojure, you primarily just have values and functions, so if you're going to execute something, it's gonna be a function :)",,
4.06271E+17,blahblubliblu#4760,2020-03-21,"Hi all! How would you import a library like this https://github.com/lambdaisland/trikl using leiningen? It's made with deps.edn, not on clojars...",,
2.67464E+17,SlashDevSlashRandom#2112,2020-03-21,"Not to be super-pedantic, but that's sort of not a library, in the sense that it doesn't appear to be packaged for distribution. You could clone that repo, build it, and deploy it to a local maven repo, or you could create some version of a checkout dependency (<https://github.com/technomancy/leiningen/blob/master/doc/TUTORIAL.md#checkout-dependencies>)",,
2.67464E+17,SlashDevSlashRandom#2112,2020-03-21,those are the ideas that come to mind off the top of my head,,
4.06271E+17,blahblubliblu#4760,2020-03-21,"@SlashDevSlashRandom I agree with you, looks like it doesn't want to be used xD... anyway thanks for the tips!",,
1.89169E+17,srasu#0042,2020-03-21,leiningen plugins also provide ways to use git-based dependencies,,
1.89169E+17,srasu#0042,2020-03-21,Also clj deps are designed to be used from git,,
1.89169E+17,srasu#0042,2020-03-21,I'd definitely say a readme that full wants to be used though,,
4.06271E+17,blahblubliblu#4760,2020-03-21,"> Also clj deps are designed to be used from git
@srasu oh, i didn't know that",,
1.89169E+17,srasu#0042,2020-03-21,"Yes, so for a long time the clj-new tool for the tools.deps ecosystem was done entirely out of git.",,
4.06271E+17,blahblubliblu#4760,2020-03-21,nice! I'll read about that and try it out... thanks!,,
4.84414E+17,david_node#3395,2020-03-21,@SlashDevSlashRandom yes you are right,,
4.06271E+17,blahblubliblu#4760,2020-03-21,"@srasu @SlashDevSlashRandom creating a project with a deps.edn with dependency on the git repo worked... I guess that's the way it was meant to be, then... tried some plugins for leiningen but none of them worked (because trikl it's not using leiningen, i believe).... But I found https://jitpack.io/ which seems simple to use, could be useful someday.. thank you all!",,
1.89169E+17,srasu#0042,2020-03-21,"Leiningen plugins require using leiningen, yeah, unfortunately they aren't cross-compatible with the deps.edn ecosystem. If you really need git dependencies *and* leinengen plugins, try this one: https://github.com/reifyhealth/lein-git-down",,
4.06271E+17,blahblubliblu#4760,2020-03-21,"it worked with lein-git-down too! cool! =D
```
:dependencies [[org.clojure/clojure ""1.10.0""]
               [lambdaisland/trikl ""8c27a347a96ce66762510f0a87cca66e5713bdec""]]
:plugins      [[reifyhealth/lein-git-down ""0.3.6""]]
:repositories [[""public-github"" {:url ""git://github.com""}]]
```",,
1.82016E+17,WhoNeedszZz#9017,2020-03-22,"> Not to be super-pedantic, but that's sort of not a library, in the sense that it doesn't appear to be packaged for distribution. You could clone that repo, build it, and deploy it to a local maven repo, or you could create some version of a checkout dependency (<https://github.com/technomancy/leiningen/blob/master/doc/TUTORIAL.md#checkout-dependencies>)
@SlashDevSlashRandom To be totally pedantic, a library doesn't have to be easily distributable to be a library. It simply provides code for other code to consume rather than be built as an executable. 😋",,
1.82016E+17,WhoNeedszZz#9017,2020-03-22,Libraries existed long before version control existed,,
4.06271E+17,blahblubliblu#4760,2020-03-22,"I wish dependency management was easier/clearer... it may be just me, but I always have problems trying to put stuff together, not just clojure but in general... nowadays i'm just tired and endup not doing anything 😛",,
4.06271E+17,blahblubliblu#4760,2020-03-22,but I'm glad I asked... learned something new haha,,
4.06271E+17,blahblubliblu#4760,2020-03-22,"though I understand, it's a hard problem to solve definitively... i don't know...",,
1.89169E+17,srasu#0042,2020-03-22,"Yeah, dependency management was part of what the clojure commandline tools are supposed to help resolve.",,
4.06271E+17,blahblubliblu#4760,2020-03-22,"i think it helps... but when things go wrong i get lost 😛 i'll study a bit more  about java dependencies in general, leiningen and deps.edn to see what i find",,
1.82016E+17,WhoNeedszZz#9017,2020-03-22,@blahblubliblu https://research.swtch.com/deps,,
1.82016E+17,WhoNeedszZz#9017,2020-03-22,We're up shits creek without a paddle when it comes to deps,,
1.82016E+17,WhoNeedszZz#9017,2020-03-22,That article explains the issues very clearly,,
1.82016E+17,WhoNeedszZz#9017,2020-03-22,And you always have Rich to say the same thing: https://www.youtube.com/watch?v=oytL881p-nQ,,
1.82016E+17,WhoNeedszZz#9017,2020-03-22,"Can't remember where exactly in that talk he mentions it, but he does",,
4.06271E+17,blahblubliblu#4760,2020-03-22,"I remember Rich talking about semantic versioning, not sure if it's in this talk",,
4.06271E+17,blahblubliblu#4760,2020-03-22,"i'll give the article a read, thanks!",,👍 (1)
1.82016E+17,WhoNeedszZz#9017,2020-03-22,"They both talk about the shift in responsibility. With an in-house library YOU are responsible for fixing it and have the ability to do it. With a 3rd party library it is their responsibility and the only way you can fix it would be to fork it, but you don't have that intimate understanding of the library's design and function. So you have to wait for them to fix it.",,
1.82016E+17,WhoNeedszZz#9017,2020-03-22,And if you did fork it now you have a bad situation because there is a divergence and massive overhead when it comes to it changing later on,,
4.06271E+17,blahblubliblu#4760,2020-03-22,so true,,
4.06271E+17,blahblubliblu#4760,2020-03-22,"nice article, will keep some ideas in mind for next time 🙂",,
2.67464E+17,SlashDevSlashRandom#2112,2020-03-23,"@WhoNeedszZz ... hence the ""sort of""",,
1.08397E+17,Dirty#0671,2020-03-24,anyone think they would be interested in explaining a program to me for 15$ an hour? this is a one time little gig,,
4.51486E+17,Grant#5854,2020-03-30,Does anyone here have experience setting up luminus behind an  nginx reverse proxy?,,
2.39623E+17,bbuccianti#7231,2020-03-30,they have great docs for that if I remember correctly,,
2.39623E+17,bbuccianti#7231,2020-03-30,https://luminusweb.com/docs/deployment.html#fronting_with_nginxhttps://luminusweb.com/docs/deployment.html#fronting_with_nginx,,
4.51486E+17,Grant#5854,2020-03-30,Not for my particular issue unfortunately. I am trying to set it up under a location apart from root,,
4.51486E+17,Grant#5854,2020-03-30,I am having difficulty configuring luminus/jetty to use that path to properly handle links relative to that path,,
2.39623E+17,bbuccianti#7231,2020-03-30,I think that's a nginx issue then,,
4.51486E+17,Grant#5854,2020-03-30,"I'm not so sure. For example, suppose I am trying to proxy pass everything under `mysite.com/util/` to the running luminus web app. If luminus has no knowledge of the `/util/` prefix, all absolute paths will improperly go to `mysite.com/`.",,
1.82016E+17,WhoNeedszZz#9017,2020-03-30,Docroot configuration is definitely in the Nginx config,,
1.82016E+17,WhoNeedszZz#9017,2020-03-30,Oh I see. You need to use subdomains instead of path.,,
1.82016E+17,WhoNeedszZz#9017,2020-03-30,`util.mysite.com`,,
4.51486E+17,Grant#5854,2020-03-30,"I determined a workaround by just modifying the `<project>.layout/render` function that comes with the luminus template to the following:
```
=(defn render
=  ""renders the HTML template located relative to 
=   resources/html""
=  [request template & [params]]
=  (content-type
=    (ok
=      (parser/render-file
=        template
=        (assoc params
+          :path-prefix (or (env :path-prefix) """")
+          :selmer/context (or (env :path-prefix) """")
=          :page template
=          :csrf-token *anti-forgery-token*)))
=    ""text/html; charset=utf-8""))
```
Then all templates are able to generate links properly by just referencing the `path-prefix` and script/style Selmer tags continue to work as well. Just need to set `PATH_PREFIX` as an environment variable to match the path setup in nginx.",,
3.84503E+17,iimblack#7964,2020-03-30,"Does anybody see a reason why `(map #(load-map %) data` isn't getting called here?
```clojure
(defn load-maps
  [file-name]
  (log/debug ""Loading maps from"" file-name)
  (if (.exists (io/file file-name))
    (let [xs (get
              (json/parse-stream
               (clojure.java.io/reader file-name)) ""data"")
          data (mapv #(second %) xs)]
      (log/debug ""data: "" data)
      (map #(load-map %) data))
    (log/error file-name ""does not exist""))
  (log/info ""Finished loading map data""))
```",,
2.18602E+17,lsenjov#4288,2020-03-30,"For the sake of it, wrap that map in a `doall`",,
3.84503E+17,iimblack#7964,2020-03-30,the one calling load-map?,,
2.18602E+17,lsenjov#4288,2020-03-30,`(doall (map #(load-map %) data))`,,👍 (1)
2.18602E+17,lsenjov#4288,2020-03-30,"Otherwise, what's it actually returning?",,
2.18602E+17,lsenjov#4288,2020-03-30,"If you call `(load-maps ""test.edn"")`, what's the return?",,
3.84503E+17,iimblack#7964,2020-03-30,"Here's the content of load-map. 
```clojure
(defn load-map
  [input]
  (log/debug ""load-map called on "" input)
  (let [data {:id (Integer/parseInt (get input ""MapId""))
              :name (get input ""MapName"")
              :image (get-in input [""image"" ""full""])}]
    (try
      (log/debug ""Loading map:"" (:name data))
      (db/insert-map! data)
      (catch Exception e
        (log/error ""Couldn't insert map ID: "" (:id data))
        (log/error e)))))
```",,
3.84503E+17,iimblack#7964,2020-03-30,So even that first log/debug is never running,,
3.84503E+17,iimblack#7964,2020-03-30,Trying the doall rn,,
3.84503E+17,iimblack#7964,2020-03-30,Looks like that worked,,
3.84503E+17,iimblack#7964,2020-03-30,"So since load-map is primarily side effects, it's not fully realized unless wrapped in a doall?",,
2.18602E+17,lsenjov#4288,2020-03-31,"Unless you're observing it directly, then yes it won't realise any of it",,
1.55987E+17,Shroomander#6115,2020-03-31,"hello everyone can someone help me, I have a lein project as a module of a larger maven projet (using lein pom), does anyone know I can configure building via maven?",,
1.55987E+17,Shroomander#6115,2020-03-31,for that lein project,,
1.89169E+17,srasu#0042,2020-04-01,"Anybody around with a lot of async experience? I'm getting what I consider strange behavior where after calling shutdown-agents, my program still won't exit and seems to have non-daemon threads going on. It has a lot of core.async go blocks and agent usage, but nothing too weird.",,
4.51486E+17,Grant#5854,2020-04-01,"@srasu I do not think that `shutdown-agents` has any effect on threads/threadpools that are created from clojure.core.async (`thread`/`go`). I believe that it only interacts with the Agent subsystem of clojure.core (`agent`, `send`, and `send-off`).",,👍 (1)
1.89169E+17,srasu#0042,2020-04-01,Then I'm definitely curious because I've never had issues shutting down applications with live go-loops before.,,
4.51486E+17,Grant#5854,2020-04-01,Do you have any blocking/IO actions going on in your go processes?,,
1.89169E+17,srasu#0042,2020-04-01,Just waiting on channels.,,
1.89169E+17,srasu#0042,2020-04-01,so parking,,
4.51486E+17,Grant#5854,2020-04-01,Try closing all of your channels instead. That will allow your go blocks to terminate,,
1.89169E+17,srasu#0042,2020-04-01,"That... would be a challenge. Might be possible, but we'll see.",,
1.89169E+17,srasu#0042,2020-04-01,"Wait, nevermind. That's weird.",,
1.89169E+17,srasu#0042,2020-04-01,"Actually, it looks like I exit the go block.",,
1.89169E+17,srasu#0042,2020-04-01,"Yeah, so in theory there's no go blocks running, and no agents, since I call shutdown-agents. It's just weird.",,
1.89169E+17,srasu#0042,2020-04-01,Turns out it was actually some dumb undocumented stuff about the websocket library I was using,,
3.46868E+17,djeis#0042,2020-04-01,Oof,,
1.89169E+17,srasu#0042,2020-04-01,"Yeah, because I was going down a layer and creating my own websocket client from jetty, I had to manually call .stop on them.",,
4.51486E+17,Grant#5854,2020-04-01,Ouch. Not fun. Glad you got it resolved at least,,
1.89169E+17,srasu#0042,2020-04-01,"Yeah, me too. Should help with people using my discord library",,
2.34343E+17,Johnny#3826,2020-04-11,"Is there an alternative to datomic regarding functional dbs in clojure? datomic looks cool and all, but only the starter kit is free and it's not open source. I haven't really looked that deeply into it, but I presume it's enough for smaller and personal use cases?",,
2.18602E+17,lsenjov#4288,2020-04-11,"I hear a good amount about Crux, haven't used it myself though",,
2.34343E+17,Johnny#3826,2020-04-20,"There is `alt` in core.async, but is there something like `and` that reads input from channels in whatever order it comes in?",,
2.34343E+17,Johnny#3826,2020-04-20,"For example I have channel one and two. I want to take something from both of them, but I don't care whether one or two delivers first",,
1.82016E+17,WhoNeedszZz#9017,2020-04-20,That would be async,,
2.34343E+17,Johnny#3826,2020-04-20,What do you mean?,,
1.82016E+17,WhoNeedszZz#9017,2020-04-20,Your objective is asyncronous,,
2.34343E+17,Johnny#3826,2020-04-20,I don't understand your point,,
2.34343E+17,Johnny#3826,2020-04-20,Of course it's async,,
2.34343E+17,Johnny#3826,2020-04-20,We're talking about core.async after all,,
2.34343E+17,Johnny#3826,2020-04-20,"Building the logic of `and` is possible with the existing macros/functions, but I was wondering whether something like this already exists",,
3.46868E+17,djeis#0042,2020-04-20,I actually wrote something that does that a few days ago cus I couldn't find a solution in core.async.,,
3.46868E+17,djeis#0042,2020-04-20,But I might have missed something.,,
1.82016E+17,WhoNeedszZz#9017,2020-04-20,What's the issue with using `or`?,,
2.34343E+17,Johnny#3826,2020-04-20,What `or`? Do you mean `alts!`?,,
2.34343E+17,Johnny#3826,2020-04-20,Different semantics,,
2.34343E+17,Johnny#3826,2020-04-20,It only waits for one,,
1.89169E+17,srasu#0042,2020-04-20,"I wish there were a good parking and in core.async by default, yeah. As it is, the *simplest* way to do it is like so:
```clojure
(let [chans ...]
  (a/<! (a/thread (map a/<!! chans))))
```",,
1.89169E+17,srasu#0042,2020-04-20,"This spawns a new thread that blocks on taking off each channel, and the return value of map is put onto a channel. That channel is parked on by the outer execution context.",,
3.46868E+17,djeis#0042,2020-04-20,*what if you're working in cljs*,,
3.46868E+17,djeis#0042,2020-04-20,"Wrong channel, I suppose",,
1.89169E+17,srasu#0042,2020-04-20,good question. I'm not 100% sure.,,
3.46868E+17,djeis#0042,2020-04-20,Short answer is you need some fairly arcane loop trickery.,,
3.46868E+17,djeis#0042,2020-04-20,And `alts!`,,
3.46868E+17,djeis#0042,2020-04-20,"You loop on `alts!`, each iteration removing the channel you just took from and passing the rest back in.",,
1.89169E+17,srasu#0042,2020-04-20,"Yeah, I dislike that because it's complex and requires more thread overhead. However it doesn't require an additional thread, so that can be a bonus.",,
3.46868E+17,djeis#0042,2020-04-20,"```clj
(defn async-all [chans]
  (go-loop [chanset (set chans) res {}]
    (if (seq chanset)
      (let [[val chan] (alts! chanset)]
        (recur (disj chanset chan) (assoc res chan val)))
      (into [] (map res chans)))
```
Or something like that.",,
3.46868E+17,djeis#0042,2020-04-20,"My original version was inline and collected the results slightly differently, plus I don't have it on hand rn 😅",,
2.34343E+17,Johnny#3826,2020-04-20,"> You loop on `alts!`, each iteration removing the channel you just took from and passing the rest back in.
@djeis that's what I'd do too",,
2.34343E+17,Johnny#3826,2020-04-20,It just becomes very complex especially if you add more channels,,
3.46868E+17,djeis#0042,2020-04-20,My little code snippet there should solve it for any number of channels.,,
2.34343E+17,Johnny#3826,2020-04-20,"Oh, I see",,
3.46868E+17,djeis#0042,2020-04-20,*should*,,
3.46868E+17,djeis#0042,2020-04-20,"I have not tested it, I just did something similar on another project recently.",,
3.46868E+17,djeis#0042,2020-04-20,"Does one take off each channel and returns a vector of the results, in the same order as the channels.",,
2.34343E+17,Johnny#3826,2020-04-20,I didn't know you could pass a set to alts,,
3.46868E+17,djeis#0042,2020-04-20,Ought to take any sequence.,,
3.46868E+17,djeis#0042,2020-04-20,If not I'll have to coerce to vector.,,
3.46868E+17,djeis#0042,2020-04-20,But it ought to take anything seqable.,,
2.34343E+17,Johnny#3826,2020-04-20,Nice,,
3.46868E+17,djeis#0042,2020-04-20,I know I've passed it seqs before.,,
2.34343E+17,Johnny#3826,2020-04-20,Also til go-loop is a thing,,
3.46868E+17,djeis#0042,2020-04-20,"Yea, just a bit shorter.",,
3.46868E+17,djeis#0042,2020-04-20,I am perhaps unreasonably pleased with `(map res chans)` in there.,,
2.34343E+17,Johnny#3826,2020-04-20,But the order isn't preserved is it?,,
3.46868E+17,djeis#0042,2020-04-20,`chans` is the passed in collection 😁,,
2.34343E+17,Johnny#3826,2020-04-20,Oh yeah you're right,,
2.34343E+17,Johnny#3826,2020-04-20,Thanks a bunch,,
3.46868E+17,djeis#0042,2020-04-20,Sure 🙂,,
3.46868E+17,djeis#0042,2020-04-20,Do test it 😅,,
3.46868E+17,djeis#0042,2020-04-20,I'm *pretty* sure it works but I don't have anything handy to test it on atm.,,
2.34343E+17,Johnny#3826,2020-04-20,Will do tomorrow 👍,,
1.89169E+17,srasu#0042,2020-04-20,"I'm not sure if it'll be anything seqable, since the api for vectors (nth) works on sequences, but doesn't call seq on its argument.",,
1.89169E+17,srasu#0042,2020-04-20,at least that I recall.,,
2.34343E+17,Johnny#3826,2020-04-21,"@djeis doesn't seem to work, unfortunately",,
3.46868E+17,djeis#0042,2020-04-21,"Ah, wonder why...",,
3.46868E+17,djeis#0042,2020-04-21,Can't really debug atm.,,
2.34343E+17,Johnny#3826,2020-04-21,I modified it slightly because alts! doesn't take a set,,
2.34343E+17,Johnny#3826,2020-04-21,"```clj
(defn async-all [chans]
  (go-loop [chanset (set chans) res {}]
    (if-let [chan-seq (seq chanset)]
      (let [[val chan] (alts! chan-seq)]
        (recur (disj chanset chan) (assoc res chan val)))
      (into [] (map res chans)))))
```",,
2.34343E+17,Johnny#3826,2020-04-21,But it never seems to receive the values you put on the input channels,,
3.46868E+17,djeis#0042,2020-04-21,Well that's... weird...,,
2.34343E+17,Johnny#3826,2020-04-21,"```clj
(def chans (repeatedly 5 chan))
(def result (async-all chans))
(go
  (doseq [val (range 5) 
          c chans]
    (>! c val)))
(<!! result)
```maybe you can spot a mistake",,
2.34343E+17,Johnny#3826,2020-04-21,so it basically parks in the doseq,,
3.46868E+17,djeis#0042,2020-04-21,🤔,,
3.46868E+17,djeis#0042,2020-04-21,"```clj
user=> (defn async-all [chans]
  (a/go-loop [chanset (set chans) res {}]
    (if-let [chan-seq (seq chanset)]
      (let [[val chan] (a/alts! chan-seq)]
        (recur (disj chanset chan) (assoc res chan val)))
      (into [] (map res chans)))))
user=> (def chans (into [] (repeatedly 5 a/chan)))
user=> (def res (async-all chans))
user=> (a/go (doseq [[i c] (map list (range) chans)] (a/>! c i)))
user=> (a/<!! res)
[0 1 2 3 4]
```",,
3.46868E+17,djeis#0042,2020-04-21,"All I did was add `a/` prefixes, make `chans` a vector, and make sure the `doseq` goes through the index/chans in parallel.",,
2.34343E+17,Johnny#3826,2020-04-21,OH,,
2.34343E+17,Johnny#3826,2020-04-21,"doseq in my case runs chan1 1, chan1 2, chan1 3 and so on right?",,
2.34343E+17,Johnny#3826,2020-04-21,I forgot it behaves like `for` and not like `map` in that regard,,
2.34343E+17,Johnny#3826,2020-04-21,I'm actually stupid,,
4.56227E+17,Deleted User#0000,2020-04-24,What would be the easiest way of validating a map? I want to make sure that the map I deserialised from JSON contains specific fields and nothing else.,,
4.56227E+17,Deleted User#0000,2020-04-24,wait I can just `(= (keys data) [:foo ...])`,,
6.29426E+17,Vass#8857,2020-04-24,Or maybe use spec or Prismatic schema?  Possibly overkill though.,,
4.56227E+17,Deleted User#0000,2020-04-24,"Yeah, some sort of `spec` would be the way to go normally but since it's just a one-time use I figured I should look for a simpler way to do it.",,
2.34343E+17,Johnny#3826,2020-04-24,`(every? data [:key1 :key2 ...])`,,
2.34343E+17,Johnny#3826,2020-04-24,Like this perhaps?,,
2.34343E+17,Johnny#3826,2020-04-24,That way you allow for more tham the required keys,,
2.34343E+17,Johnny#3826,2020-04-24,Like spec,,
4.56227E+17,Deleted User#0000,2020-04-24,I considered using `every?` but I want it to contain no other keys.,,
4.56227E+17,Deleted User#0000,2020-04-24,Since I'll be saving the map somewhere and I don't want potential junk data lingering there.,,
2.34343E+17,Johnny#3826,2020-04-24,Well then you might use sets,,
2.34343E+17,Johnny#3826,2020-04-24,I think (keys) returns a set,,
2.67464E+17,SlashDevSlashRandom#2112,2020-04-24,"I have no context, so apply this as it makes sense in your case, but Rich Hickey has actually talked specifically about the point of asserting that only certain keys are in a map: <https://youtu.be/oyLBGkS5ICk?t=3258>",,
3.35691E+17,chapter4#3323,2020-04-25,The following I do not understand. Can some one point me in the right direction please?,,
3.35691E+17,chapter4#3323,2020-04-25,"```cron.routes=> (keys (yaml/from-file ""test.yaml""))
(:a)
cron.routes=> (defn load-secrets2 [] (yaml/from-file ""test.yaml""))
#'cron.routes/load-secrets2
cron.routes=> (load-secrets2)
#ordered/map ([:a #ordered/map ([:level ""p7thrv6Nt7mU9fxL""] [:rubbish ""blah blah""] [:path ""scripts/""])])
cron.routes=> (keys load-secrets2)
Execution error (IllegalArgumentException) at cron.routes/eval6848 (form-init3768456561690446599.clj:1).
Don't know how to create ISeq from: cron.routes$load_secrets2```",,
3.35691E+17,chapter4#3323,2020-04-25,"I load the file direct,  i can use keys. Do it via another function, i get an error 😦",,
2.34343E+17,Johnny#3826,2020-04-25,You're passing a function to keys,,
2.34343E+17,Johnny#3826,2020-04-25,Not what that function returns,,
2.34343E+17,Johnny#3826,2020-04-25,(keys (load-secrets2)) should work,,👆 (2)
3.35691E+17,chapter4#3323,2020-04-25,"lol, it does. I do feel silly now thats it been pointed out to me 🙂 Thank you 🙂",,
2.18602E+17,lsenjov#4288,2020-04-25,"All good, I've been working with clojure a while and still make this mistake 😂",,
4.56227E+17,Deleted User#0000,2020-04-26,"@SlashDevSlashRandom What he says makes sense, especially with regards to writing your code in accordance to the map shape you have in mind and let it grow when necessary.",,
4.56227E+17,Deleted User#0000,2020-04-26,"But I'm taking external JSON input through an HTTP API, converting it to a map, then inserting it to an SQL database.",,
4.56227E+17,Deleted User#0000,2020-04-26,Otherwise I'd need to cherry pick the matching keys from the map to make a new map and discard the original data.,,
4.56227E+17,Deleted User#0000,2020-04-26,Maybe there's a cleaner way to do this.,,
2.67464E+17,SlashDevSlashRandom#2112,2020-04-26,"So, the usual caveat of take this FWIW and decide if it applies in your situation:
 `select-keys` could do the cherry-picking for you. When I think about comparing the two approaches, they feel very similar, except for allowing for extra information. If we validate the translated map, but it has an extra key, then do we reject all the data? If I want a user's first and last name, and I get a map that has first name, last name, and DOB, should I just say ""well, this isn't exactly first name and last name, so it's not useful""? Alternatively, I say ""get the first and last name from this map, and write those to my DB"", and then if the API changes tomorrow and gives me six more fields, my code doesn't change",,
4.56227E+17,Deleted User#0000,2020-04-26,That makes a lot of sense. I totally forgot about `select-keys` too.,,
4.56227E+17,Deleted User#0000,2020-04-26,Thanks!,,
2.67464E+17,SlashDevSlashRandom#2112,2020-04-26,:),,
6.29426E+17,Vass#8857,2020-04-26,"At times I've pleasantly surprised myself by leaving ""unknown keys"" present in maps as they flow through code that isn't interested in those keys.  It supports a kind of *cough* ""aspect oriented"" approach to data & code.  Of course I realise that it's hard to persist such data in schema-oriented data stores (RDBMS' and the like)...",,
6.42947E+17,ashish_prabhune#6834,2020-05-06,"Hello
I have multiple agents for example 100s of agents.

They can have three value 
Below zero 
Above Zero 
And zero.

At a particular instant of time I want to print how many agents are above zero, zero and below zero.

Can someone please guide me how to do it? I am new to the clojure code.",,
2.18602E+17,lsenjov#4288,2020-05-06,Do you have a collection of all agents?,,
2.18602E+17,lsenjov#4288,2020-05-06,@ashish_prabhune,,
1.30052E+17,gibb#5070,2020-05-06,@ashish_prabhune https://clojure.org/reference/sequences,,
1.30052E+17,gibb#5070,2020-05-06,https://clojure.org/reference/sequences#_seq_in_seq_out,,
6.42947E+17,ashish_prabhune#6834,2020-05-06,"Yes @isenjov 
I have collection of agents.
I am just modifying Rich Hickey's ant colony simulation.",,
6.42947E+17,ashish_prabhune#6834,2020-05-06,"@gibb I do have a sequence of agents.
I want to somehow update a count variable which would be shared by all the agents to  update it. 
when all the agents update the variable, i ll print the count.",,
6.42947E+17,ashish_prabhune#6834,2020-05-06,@gibb,,
6.42947E+17,ashish_prabhune#6834,2020-05-06,@lsenjov,,
2.18602E+17,lsenjov#4288,2020-05-06,Can't you just map `deref`?,,
1.89169E+17,srasu#0042,2020-05-06,"Because of the semantics of agents, if the simulation isn't stopped and you haven't called `(apply await agents)`, then you can't guarantee that it's going to be a completely correct read, however you can run code like the following: `(reduce + 0 (map #(Math/signum (float @%1)) agents))`",,
1.89169E+17,srasu#0042,2020-05-06,"What this does is dereference each agent, changes each value to be -1, 0, or 1, based on if it was negative, zero, or positive, and then sums the result.",,
1.89169E+17,srasu#0042,2020-05-06,Although I guess that's not quite what you asked for,,
3.46868E+17,djeis#0042,2020-05-06,"That's the sort of thing I'd probably end up reaching for `ref`s to do, although I'm not sure of the performance implications....",,
1.89169E+17,srasu#0042,2020-05-06,"Right, but agents here are used to ensure that each thing is run asynchronously from each other thing, and no core.async is being used afaik, so agents are the best way to do it, since this is Rich's ants demo.",,
1.89169E+17,srasu#0042,2020-05-06,You could do something like `(println (count (filter pos? (map deref agents))))`,,
1.89169E+17,srasu#0042,2020-05-06,and switch out `pos?` for `neg?` and `zero?`,,
6.42947E+17,ashish_prabhune#6834,2020-05-07,Thankyou @djeis @srasu @lsenjov for your help,,
6.42947E+17,ashish_prabhune#6834,2020-05-07,"Also now I want to send this count to a python program.
How can I do that?
Using TCP client?
How to do that?",,
2.18602E+17,lsenjov#4288,2020-05-07,To a running python program?,,
2.18602E+17,lsenjov#4288,2020-05-07,Or just to a file that gets read by a python program?,,
6.42947E+17,ashish_prabhune#6834,2020-05-07,A running python program.,,
2.18602E+17,lsenjov#4288,2020-05-07,Well.. how are you wanting the python program to receive the data?,,
2.18602E+17,lsenjov#4288,2020-05-07,If you have a tcp endpoint it's not difficult to send a request to it,,
2.18602E+17,lsenjov#4288,2020-05-07,"Hell, if it's a web endpoint `spit` will probably work",,
6.42947E+17,ashish_prabhune#6834,2020-05-07,Yeah I have to send it to a tcp endpoint,,
1.89169E+17,srasu#0042,2020-05-07,"I currently use gniazdo as my websocket connection handler, however websockets are a bit above straight tcp connections. You might end up needing to look at other libraries, or even java interop if you need to use a low-level socket connection.",,
1.38677E+17,Khepu#3307,2020-05-11,anyone doing deep learning with clojure? everyone online suggests cortex but that seems dead.,,
1.89169E+17,srasu#0042,2020-05-11,"In the clojure space, it's very common to use libraries which haven't had commits for years. Not because there's a small number of libraries, or because the libraries are no longer maintained, but because they're just high enough quality that the developers can move on because they're finished. I wouldn't avoid cortex just because it's been a couple years since it had a commit.",,
1.38677E+17,Khepu#3307,2020-05-11,@srasu that is a fair point. I guess it is worth a shot,,
1.89169E+17,srasu#0042,2020-05-11,👍,,
2.18602E+17,lsenjov#4288,2020-05-11,What suskey said. I'm currently using libraries that are 4+ years without commits,,
1.38677E+17,Khepu#3307,2020-05-12,i did go through the library and sadly it is lacking :/ on the other hand i did find mxnet so i will be setting that up. i will not judge a library by its commit dates any longer though :D,,👍 (1)
7.09138E+17,AustrianParens#0855,2020-05-14,"@Khepu If you're interested in deep learing and clojure, you should definetly check out this series of posts: https://dragan.rocks/articles/19/Deep-Learning-in-Clojure-From-Scratch-to-GPU-0-Why-Bother",,
1.38677E+17,Khepu#3307,2020-05-14,@AustrianParens hey! thanks for the reply. was one of the first things i checked. It actually inspired me and a friend to try our hand at making our own library using neanderthal,,
2.62313E+17,agumonkey#6435,2020-05-21,where will be clojure in 10 years ?,,
1.74283E+17,libertea#5784,2020-05-21,2030,,😆 (4)
3.15199E+17,Alex Miller#7644,2020-05-21,"the question is, where won't it be?",,
1.74283E+17,libertea#5784,2020-05-22,The supermassive black hole in the center of our galaxy id reckon,,😆 (1)
1.89169E+17,srasu#0042,2020-05-22,I was not expecting a random alex miller,,😂 (2)
3.05124E+17,JoeBetz#6121,2020-05-22,transit question: is there a standard dataset used for verifying and/or benchmarking? I'm writing an implementation in Haskell and would like to be able to compare it against other implementations,,
3.05124E+17,JoeBetz#6121,2020-05-22,"actually, https://github.com/cognitect/transit-format/tree/master/examples/0.8/simple looks sufficient for the verification part",,
3.05124E+17,JoeBetz#6121,2020-05-22,and then I can write benchmarks comparable to https://github.com/cognitect/transit-cljs/blob/master/bench/transit/bench.cljs,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,why is my message getting deleted automatically from here,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,I am trying to post a code and looking for validation but its gets deleted,,
2.34343E+17,Johnny#3826,2020-05-31,that is odd,,
2.34343E+17,Johnny#3826,2020-05-31,Can you try again?,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"I did, it goes to bot-log",,
2.34343E+17,Johnny#3826,2020-05-31,Weird. Post it on https://hasteb.in,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,Done,,
2.34343E+17,Johnny#3826,2020-05-31,you need to save and post the link,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,https://hasteb.in/uvulekuh.sql,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,Please give feedbacks on the implementation of Sieve_of_Eratosthenes for generating primes,,
2.34343E+17,Johnny#3826,2020-05-31,what exactly is your question?,,
2.34343E+17,Johnny#3826,2020-05-31,ah,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"Just seeking validations, if this is good enough",,
2.34343E+17,Johnny#3826,2020-05-31,First thing to improve imo would be to make the function a top level declaration,,
2.34343E+17,Johnny#3826,2020-05-31,so `(defn prime-numbers? ...)`,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,Ok,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,Anything else? @Johnny,,
2.34343E+17,Johnny#3826,2020-05-31,"yeah, I'm currently thinking about how I would implement this",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"Ok Ok sure, Sorry for the probe",,
2.34343E+17,Johnny#3826,2020-05-31,"Ok, I would do this rather differently",,
2.34343E+17,Johnny#3826,2020-05-31,Is it ok if I show you my implementation directly and explain it?,,
2.34343E+17,Johnny#3826,2020-05-31,"There are a few things about yours that are a bit problematic, for example it uses .indexOf and last on sequences, all of which are O(n)",,
2.34343E+17,Johnny#3826,2020-05-31,( @Kanishkkumar188nrt ),,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,Yes pleaze,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,Please show your implementation,,
2.34343E+17,Johnny#3826,2020-05-31,"```clj
(defn- sieve [[& [next-prime :as remaining]]]
  (remove #(zero? (rem % next-prime)) remaining))

(defn primes [to]
  (->> (range 2 to)
       (iterate sieve)
       (take-while seq)
       (map first)))
```",,
2.34343E+17,Johnny#3826,2020-05-31,"`sieve` is a helper function that takes a sequence of numbers, ignores the first element, treats the second element as the next prime and the rest as the remaining numbers. It then uses `rem` (remainder) to remove all multiples of the next prime from the remaining",,
2.34343E+17,Johnny#3826,2020-05-31,"This is nice for `iterate`. `iterate` takes the initial numbers and produces a sequence of `numbers`, `(sieve numbers)`, `(sieve (sieve numbers))` and so on",,
2.34343E+17,Johnny#3826,2020-05-31,"This results in a sequence consisting of sequences that each represent one ""step"" in the algorithm",,
2.34343E+17,Johnny#3826,2020-05-31,"The end is reached when this produces an empty sequence, hence why `(take-while seq)`",,
2.34343E+17,Johnny#3826,2020-05-31,The first element of each sequence is a prime.,,
2.34343E+17,Johnny#3826,2020-05-31,"This is reasonably more efficient too. Your initial solution took 292 ms for 9927, mine took 0.02 ms",,
2.34343E+17,Johnny#3826,2020-05-31,"If you have trouble understanding anything, feel free to ask",,
2.34343E+17,Johnny#3826,2020-05-31,Oh and also this is lazy which can be useful,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"I am new to clojure and functional programming, have been infected by OOPS from a long time. This implementation is more readable. Although I need to understand your thought pattern desingning it. Why can't I think in the same fashion. That's my major problem. I registered myself here to change my thought pattern. Please guide if you can.",,
2.34343E+17,Johnny#3826,2020-05-31,"Well, that is something that comes with enough practice. Don't worry if you think you wouldn't have figured this out yourself - I know that feeling. Coding in an imperative language is somewhat of an advantage in this regard, because most popular algorithms are often defined or explained imperatively. The sieve of Eratosthenes is a good example for this, because it *is* an inherently imperative algorithm (a set of instructions that you can repeat by hand).",,
2.34343E+17,Johnny#3826,2020-05-31,And I mean it took me about half an hour to come up with this.,,
2.34343E+17,Johnny#3826,2020-05-31,"What I did is the following: I went to wikipedia and looked at the definition of the algorithm there, which is ""tagging"" indices in a boolean array, essentially. I realised that this can also be described as a series of states. In the beginning, all numbers are untagged. After the next step, all multiples of 2 are tagged. After the next step, all multiples of 3 are tagged... and so on and so forth. This is already a functional description. Now the remaining questions are: ""what does the 'step' function look like that marks the next multiples?"" and ""how do I get the relevant prime in each state (2 in the first, 3 in the second, 5 in the third etc.)?""",,
2.34343E+17,Johnny#3826,2020-05-31,"Now the knowledge about `iterate` comes in handy, because it gives me a sequence of all states when repeatedly applying a step function. So what I did was I wrote the step function (`sieve`) in a way that does not care about what was relevant in the previous step, by skipping the first element in the sequence. That way, the first element in each state is the number I care about.",,
2.34343E+17,Johnny#3826,2020-05-31,And I think the rest of the implementation of `sieve` is pretty clear.,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,Yes it is,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"The code is so clear in itself that i doesnt need any explanation, the explanation to write such code was needed, I am reading your explanation again n again to understand better. Thanks @Johnny and Clojurians, As helping community only enables the propagation of knowledge.",,
2.34343E+17,Johnny#3826,2020-05-31,"You're welcome. Thanks for bringing it up here, it's an interesting thing to think about and I really like the result here",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,I have worked with multiple languages and never ever found anyone as welcoming and helping community as Clojure's,,
2.34343E+17,Johnny#3826,2020-05-31,"Same here, haha",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"Clojure's community is so helping and uplifting, and through out all the mediums be it reddit, discord, slack or stack overflow",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,@Johnny [& [next-prime :as remaining]] what is this doing?,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"When i printed next prime and remaining i got this 
---> remainaing (19 23 29 31 37)
-->next-prime 23",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"I understood this, but how could you do this, is there any documentation for it",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"Youre doing some very ""WHAAAAT the hell"" kinda things",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,hahah,,
2.34343E+17,Johnny#3826,2020-05-31,"This is called destructuring. It's very powerful. This would be the equivalent without it:
```clj
(defn- sieve [input]
  (let [remaining (rest input)
        next-prime (first remaining)]
    (remove #(zero? (rem % next-prime)) remaining)))
```",,
2.34343E+17,Johnny#3826,2020-05-31,https://clojure.org/guides/destructuring,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,hahahahahah,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,M blown away,,
2.34343E+17,Johnny#3826,2020-05-31,For a long time I didn't know it existed. Now I find myself using it at every corner,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"I understand destrcuture as i used in javascript but you did something really clever here, by using & you made it for consuming multiple arguments and with using :as you selected the first item from that multiple aruments",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,Correct?,,
2.34343E+17,Johnny#3826,2020-05-31,"It's all described thoroughly in the guide I just linked and I recommend reading it, but the gist of it: `[& foo]` means that `foo` will be the `rest` of the input - `[foo]` means that `foo` will be the `first` of the input - and `[foo :as bar]` means that `foo` will be the `first` of the input and `bar` will be the original input",,
2.34343E+17,Johnny#3826,2020-05-31,"And this can all be nested, as I did here",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,Sure thanks,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,I will go through it,,
2.34343E+17,Johnny#3826,2020-05-31,"oh, I just realised, I was wrong there",,
2.34343E+17,Johnny#3826,2020-05-31,The destructuring could be simplified to `[next-prime & remaining]`,,
2.34343E+17,Johnny#3826,2020-05-31,@Kanishkkumar188nrt,,
2.34343E+17,Johnny#3826,2020-05-31,I thought the `&` behaved differently,,
2.34343E+17,Johnny#3826,2020-05-31,which means that the algorithm is slightly different actually,,
2.34343E+17,Johnny#3826,2020-05-31,it's not the `next-prime` but rather the `previous-prime`,,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,"(defn- sieve [next-prime & remaining]
  (remove #(zero? (rem % next-prime)) remaining))

Changing to this doesnt return anything",,
2.34343E+17,Johnny#3826,2020-05-31,"Yes because this is not destructuring but regular arguments. 
```clj
(defn- sieve [[previous-prime & remaining]]
  (remove #(zero? (rem % previous-prime)) remaining))
```",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-05-31,Oh right,,
2.39623E+17,bbuccianti#7231,2020-06-01,@Johnny that was a wonderful implementation of the sieve,,👍 (1)
2.34343E+17,Johnny#3826,2020-06-01,"Thank you! Although I did some research and as it turns out, this is actually a different algorithm, haha.
> Primes can also be produced by iteratively sieving out the composites through divisibility testing by sequential primes, one prime at a time. It is not the sieve of Eratosthenes but is often confused with it, even though the sieve of Eratosthenes directly generates the composites instead of testing for them. Trial division has worse theoretical complexity than that of the sieve of Eratosthenes in generating ranges of primes.",,
2.34343E+17,Johnny#3826,2020-06-01,"To implement a proper sieve with the same characteristics, you probably need to write imperative code, i.e. use transients",,
2.34343E+17,Johnny#3826,2020-06-01,"There is also this definition, which seems interesting. I don't know if it is realisable in Clojure, though
```
primes = [2, 3, ...] \ [[p², p²+p, ...] for p in primes]```",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-06-01,"> Thank you! Although I did some research and as it turns out, this is actually a different algorithm, haha.
@Johnny There are more than one approach, the one which you implemented was the basic one, other one is by iteration, i did not understand the definition of it hence (cycle reading) it",,
2.34343E+17,Johnny#3826,2020-06-01,"My implementation uses testing instead of generating the composites/multiples as well as an iterative/one-at-a-time approach, so if I understand this correctly, it's not the sieve of Eratosthenes",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-06-01,"https://www.geeksforgeeks.org/sieve-of-eratosthenes/ this actually supports your initial implementation. Also i dont think its viable to produce prime numbers iteratively, someone correct me.",,
7.14346E+17,Kanishkkumar188nrt#5090,2020-06-01,Is there any mathematician in the house?,,
2.34343E+17,Johnny#3826,2020-06-01,The implementation there is different from mine in the aspects I just mentioned,,
2.34343E+17,Johnny#3826,2020-06-01,It generates the multiples directly,,
2.34343E+17,Johnny#3826,2020-06-01,It does not generate one prime at a time,,
2.34343E+17,Johnny#3826,2020-06-01,"Out of curiosity, I tried the ""classic"" sieving approach to compare",,
2.34343E+17,Johnny#3826,2020-06-01,"When I said it took 0.02ms the other day, that was probably due to me forgetting to account for the laziness",,
2.34343E+17,Johnny#3826,2020-06-01,Since it was only evaluated after the measurement,,
2.34343E+17,Johnny#3826,2020-06-01,"It's still faster than your initial approach, but not in such an extreme way anymore",,
2.34343E+17,Johnny#3826,2020-06-01,"For reference, this would be the ""standard"" implementation transferred to clojure
```clj
(defn primes [n]
  (let [tagged (transient (vec (repeat n false)))]
    (doseq [i (range 2 (Math/sqrt n))]
      (when (not (tagged i))
        (doseq [j (range (* i i) n i)]
          (assoc! tagged j true))))
    (for [i (range 2 n) :when (not (tagged i))] i)))
```",,
1.89169E+17,srasu#0042,2020-06-01,"Personally I like the mutually-recursive approach like so:
```clojure
(declare prime?)

(def primes (filter prime? (map #(+ 2 %) (range)))) ;; range 2+

(defn prime? [n]
  (or (= n 2)
      (and (> n 2)
           (not (some #(zero? (rem n %)) (take-while #(<= % (/ n 2)) primes))))))
```",,
3.46868E+17,djeis#0042,2020-06-01,You can't just `assoc!` into a transient vector and assume the update will happen in-place 😅,,
3.46868E+17,djeis#0042,2020-06-01,Transient updates are destructive but not guaranteed to be in-place mutating.,,
3.46868E+17,djeis#0042,2020-06-01,Still have to capture the return value.,,
3.46868E+17,djeis#0042,2020-06-01,"If you really want imperative update code like that, wrap the transient in a volatile and use `vswap!`.",,
2.34343E+17,Johnny#3826,2020-06-01,"Oh, didn't know that",,
2.34343E+17,Johnny#3826,2020-06-01,Had no issues with this,,
3.46868E+17,djeis#0042,2020-06-01,I suspect vectors in particular have in-place mutation semantics for transients in whatever version of clojure you're using.,,
3.46868E+17,djeis#0042,2020-06-01,But that's not guaranteed by the transient API.,,
3.46868E+17,djeis#0042,2020-06-01,@srasu Unless transient vectors have extra guarantees that I'm forgetting? ^,,
1.89169E+17,srasu#0042,2020-06-01,transients require you capture their return value.,,
1.89169E+17,srasu#0042,2020-06-01,"Reason being adding a new thing to the end of a transient vector necessarily allocs a new node which points to the old nodes and the new ones, since vectors are trees. Now it doesn't *always* do that alloc, but it can, and you don't know when it will.",,
1.89169E+17,srasu#0042,2020-06-01,"If you rely on it not, then you're relying on an implementation detail.",,
1.89169E+17,srasu#0042,2020-06-01,I believe the most likely problem is that the 33rd node will always require you to capture the return value.,,
3.46868E+17,djeis#0042,2020-06-01,"But the whole tree is still wrapped by an extra root node at the top, isn't it? So it might actually still just work... 🤔",,
3.46868E+17,djeis#0042,2020-06-01,"I always assumed the issue with transients had more to do with maps, where the type of map might have to change because you added an element.",,
1.89169E+17,srasu#0042,2020-06-01,"I don't know if it is, but I don't think so.",,
1.89169E+17,srasu#0042,2020-06-01,"also I don't believe transient maps have multiple types, although I could be wrong on that.",,
3.46868E+17,djeis#0042,2020-06-01,"Persistent maps do, IIRC.",,
1.89169E+17,srasu#0042,2020-06-01,they do,,
1.89169E+17,srasu#0042,2020-06-01,"array maps, sorted maps, and hash maps",,
1.89169E+17,srasu#0042,2020-06-01,I don't know if you call transient on a sorted map if it would remain sorted though.,,
3.46868E+17,djeis#0042,2020-06-01,Wouldn't it have to?,,
3.46868E+17,djeis#0042,2020-06-01,"Like, you can provide the sorting order, and the internal implementations are *very* different.",,
3.46868E+17,djeis#0042,2020-06-01,If making a transient changed the internal representation then it couldn't be constant time.,,
3.46868E+17,djeis#0042,2020-06-01,"Internal implementations of sorted vs hash vs array, that is.",,
3.46868E+17,djeis#0042,2020-06-01,"Like, sorted maps are binary search trees while hash maps are hash array-mapped prefix tries.",,
3.46868E+17,djeis#0042,2020-06-01,The sorting of a sorted map is integral to you being able to efficiently perform lookups.,,
3.46868E+17,djeis#0042,2020-06-01,"My point, though, is more that once you put enough elements into an array map it probably turns into a hash map.",,
3.46868E+17,djeis#0042,2020-06-01,"That's a change of type at the root level, so the root node has to change.",,
3.46868E+17,djeis#0042,2020-06-01,I could be wrong tho.,,
3.46868E+17,djeis#0042,2020-06-01,"As for vectors, I'm 90% sure that the actual internal tree nodes are made of an inner class to the actual persistent vector class.",,
3.46868E+17,djeis#0042,2020-06-01,It's been a few months since I read that code tho.,,
2.34343E+17,Johnny#3826,2020-06-01,"> Personally I like the mutually-recursive approach like so:
@srasu That looks nice, but isn't it a little inefficient? because for each check it needs to go over the collection",,
1.89169E+17,srasu#0042,2020-06-01,"It's a little inefficient, and if you check against sufficiently large numbers without ""warming the cache"" so to speak, it'll blow the stack too. It's *elegant*, but not particularly *good* unless you just need simple checks for low-value numbers. Moreover, it does cache all the primes, which means you aren't re-computing if a number is prime at any point ever, you're just running over your cache. Probably the single easiest optimization though would be to exchange the take-while from taking until it's less or equal to the number divided by two with the same thing but with the square root of the number.",,
1.89169E+17,srasu#0042,2020-06-01,"@djeis yeah, the transient would just be a wrapper around the sorted thing, but calling persistent! on it after making an addition or two and who knows what order things will be sorted in?",,
3.46868E+17,djeis#0042,2020-06-01,Should be sorted by whatever sorting order the map was created with.,,
1.89169E+17,srasu#0042,2020-06-01,"Or rather, if there is no sorted map implementation. I genuinely don't know if there are.",,
3.46868E+17,djeis#0042,2020-06-01,Insertion into a sorted map still requires you respect the sorting order.,,
1.89169E+17,srasu#0042,2020-06-01,"yeah, if you continue using it as a sorted map",,
3.46868E+17,djeis#0042,2020-06-01,If you try to `assoc!` something into a transient sorted map that can't be sorted by the sorting order of that map then it *should* error.,,
3.46868E+17,djeis#0042,2020-06-01,"Unless... If you `into` into a sorted map something that can't be sorted by that map does clojure just make a hash map out of it? That is an alternative, it just seems like... a problematic one.",,
1.89169E+17,srasu#0042,2020-06-01,"I haven't really used sorted maps, so I can't say.",,
3.46868E+17,djeis#0042,2020-06-01,"I'm right about the type change, btw:
```clj
user=> (class {:x 5})
clojure.lang.PersistentArrayMap
user=> (transient {:x 5})
#object[clojure.lang.PersistentArrayMap$TransientArrayMap 0x470a696f ""clojure.lang.PersistentArrayMap$TransientArrayMap@470a696f""]
user=> (reduce (fn [m k] (assoc! m k 5)) *1 (range 31))
#object[clojure.lang.PersistentHashMap$TransientHashMap 0x5ddabb18 ""clojure.lang.PersistentHashMap$TransientHashMap@5ddabb18""]
user=> (persistent! *1)
{0 5, 7 5, 20 5, 27 5, 1 5, 24 5, 4 5, 15 5, 21 5, 13 5, 22 5, 29 5, 6 5, 28 5, 25 5, 17 5, 3 5, 12 5, 2 5, 23 5, 19 5, 11 5, 9 5, 5 5, 14 5, :x 5, 26 5, 16 5, 30 5, 10 5, 18 5, 8 5}
```",,
1.89169E+17,srasu#0042,2020-06-01,cool,,
1.89169E+17,srasu#0042,2020-06-01,"that tells me how they implement the transients, so yeah, there's gonna be the same for all the kinds.",,
3.46868E+17,djeis#0042,2020-06-01,"But there's no similar type change I know of that happens with vectors tho, and I know there is an extra root node at the top of a vector.",,
3.46868E+17,djeis#0042,2020-06-01,"So I suspect that, as an implementation detail you *should not* rely on, it will happen to just work for vectors.",,
1.89169E+17,srasu#0042,2020-06-01,huh,,
3.46868E+17,djeis#0042,2020-06-01,"My implementation of transients in CL has a similar property- there's always an extra root node at the top, because there kinda has to be to make the transient stuff work out and to hold metadata that you really only need one reference to for the whole data structure (like the comparison function of a sorted map).",,
3.46868E+17,djeis#0042,2020-06-01,"So, as long as transient ops don't have to change the actual type/implementation, they all happen to be in-place mutations.",,
1.89169E+17,srasu#0042,2020-06-01,fair,,
2.34343E+17,Johnny#3826,2020-06-01,I realised that this also blows up the stack at a sufficiently high number. But how? https://discordapp.com/channels/313110246643990528/315388260987830272/716588820132266065,,
2.34343E+17,Johnny#3826,2020-06-01,Is it because the `remove`s all stack somehow?,,
3.46868E+17,djeis#0042,2020-06-01,"Probably, yea.",,
1.89169E+17,srasu#0042,2020-06-01,Huh. I'm surprised honestly.,,
1.89169E+17,srasu#0042,2020-06-01,"I've been fiddling around with my implementation in a repl, and even sending it to compute 10k primes at a time doesn't blow the stack",,
1.89169E+17,srasu#0042,2020-06-01,"it takes a while, sure",,
1.89169E+17,srasu#0042,2020-06-01,but it doesn't blow the stack,,
1.89169E+17,srasu#0042,2020-06-01,I wonder how much faster it'd be if I change it to sqrt,,
2.34343E+17,Johnny#3826,2020-06-01,"Mine gave me a StackOverflow for the primes up to a million, I think",,
1.89169E+17,srasu#0042,2020-06-01,"Yeah, the last prime I computed was 224743, and I'm currently computing the 40001st prime",,
1.89169E+17,srasu#0042,2020-06-01,"op, just popped out",,
1.89169E+17,srasu#0042,2020-06-01,479939,,
2.34343E+17,Johnny#3826,2020-06-01,ok yours is a lot better then,,
2.34343E+17,Johnny#3826,2020-06-01,because my stack already explodes at 50k,,
2.34343E+17,Johnny#3826,2020-06-01,I thought it wouldn't be possible honestly,,
2.34343E+17,Johnny#3826,2020-06-01,But it must be because of all the `remove` closures,,
2.34343E+17,Johnny#3826,2020-06-01,"well, that's a little disappointing lol",,
1.89169E+17,srasu#0042,2020-06-01,holy crap the sqrt optimization helped,,
1.89169E+17,srasu#0042,2020-06-01,"```clojure
(declare primes)
(defn prime? [n]
  (or (= n 2)
      (not (some #(zero? (rem n %))
                 (let [sqrt (inc (Math/sqrt n))]
                   (take-while #(<= % sqrt) primes))))))
(def primes (filter prime? (cons 2 (map (comp inc #(* 2 %) inc) (range)))))
```",,
1.89169E+17,srasu#0042,2020-06-01,Only took ~2s to compute the 100kth prime,,
1.89169E+17,srasu#0042,2020-06-01,has clojure gotten better at lazy seqs?,,
1.89169E+17,srasu#0042,2020-06-01,"because from a completely fresh `primes` list, I get this:
```clojure
(time (first (drop 1000000 primes)))
""Elapsed time: 64829.32917 msecs""
15485867
```",,
1.89169E+17,srasu#0042,2020-06-01,didn't blow the stack computing the ~1 millionth prime,,
2.34343E+17,Johnny#3826,2020-06-01,that's pretty damn good,,
1.89169E+17,srasu#0042,2020-06-01,yeah,,
1.89169E+17,srasu#0042,2020-06-01,especially for such an elegant solution imo.,,
1.89169E+17,srasu#0042,2020-06-01,"guess this solution isn't as bad as I thought, lol",,
1.89169E+17,srasu#0042,2020-06-01,"But yeah, it helps a lot with other functionality that people might want too, since it gives a full sequence of primes, not just checks if a particular number is prime",,
1.89169E+17,srasu#0042,2020-06-01,"computing it the second time was 40 ms, but that's less reliable since `time` isn't good at lower values.",,
2.34343E+17,Johnny#3826,2020-06-01,What's more accurate than `System.nanoTime()` that comes out of the box?,,
1.89169E+17,srasu#0042,2020-06-01,more accurate (similar amount of precision) is anything that criterium produces,,
1.89169E+17,srasu#0042,2020-06-01,since it does sampling,,
1.89169E+17,srasu#0042,2020-06-01,plus also the jvm and how the jit works makes profiling this sort of thing a little weird.,,
2.34343E+17,Johnny#3826,2020-06-01,that's true,,
1.89169E+17,srasu#0042,2020-06-01,"alright, well now to sit down and wait for the 10 millionth prime and see if that stack overflows.",,
2.34343E+17,Johnny#3826,2020-06-01,lmfao,,
1.89169E+17,srasu#0042,2020-06-01,"I doubt it if 1 million didn't, but still. :P",,
1.89169E+17,srasu#0042,2020-06-01,"like I already calculated the 2millionth prime, and it's 32452867",,
2.34343E+17,Johnny#3826,2020-06-01,you may run into different issues because of Math/sqrt maybe,,
1.89169E+17,srasu#0042,2020-06-01,Oh?,,
2.34343E+17,Johnny#3826,2020-06-01,Since it takes a double (i think?),,
2.34343E+17,Johnny#3826,2020-06-01,couldn't that lead to a loss of precision,,
1.89169E+17,srasu#0042,2020-06-01,"Yeah, it takes a double.",,
1.89169E+17,srasu#0042,2020-06-01,I should see if there's a clojure sqrt in numeric-tower,,
1.89169E+17,srasu#0042,2020-06-01,"Ah, exact-integer-sqrt",,
1.89169E+17,srasu#0042,2020-06-01,"But really, I just need the sqrt to be accurate to within the distance of primes between each other at the scale that it's at, so within the nearest 2 or so.",,
1.89169E+17,srasu#0042,2020-06-01,at a minimum,,
1.89169E+17,srasu#0042,2020-06-01,"Which I'll know if it's accurate as soon as it produces a result, and at this point it seems like it will",,
1.89169E+17,srasu#0042,2020-06-01,because I have the 1million and 1th prime right here,,
1.89169E+17,srasu#0042,2020-06-01,"Lol, well I knew it'd get slower as it computed larger primes, but this is getting silly",,
2.34343E+17,Johnny#3826,2020-06-01,still not done?,,
1.89169E+17,srasu#0042,2020-06-01,still not,,
1.89169E+17,srasu#0042,2020-06-01,but it also hasn't overflowed,,
1.89169E+17,srasu#0042,2020-06-01,got it!,,
1.89169E+17,srasu#0042,2020-06-01,and it got it right,,
1.89169E+17,srasu#0042,2020-06-01,179424691,,
1.89169E+17,srasu#0042,2020-06-01,What's interesting here as well is that it's faster to compute the sqrt and the divisions than it is to walk to that point in the sequence,,
1.89169E+17,srasu#0042,2020-06-01,"`(nth primes 10000001)` takes almost 200 ms, while `(prime? 179424697)` only takes 0.25 ms",,
3.46868E+17,djeis#0042,2020-06-01,Too many rams involved.,,
1.89169E+17,srasu#0042,2020-06-01,"Yeah, those cache misses hit real hard",,
1.89169E+17,srasu#0042,2020-06-01,"Also notable and amusing is that it means that to compute if a given number is prime, the cache need only be warmed with numbers up to the sqrt of its value, meaning you can check quite large primes on a relatively small list size.",,
3.46868E+17,djeis#0042,2020-06-01,Yup,,
1.89169E+17,srasu#0042,2020-06-01,I'm actually not sure if I've seen any other algorithm which scales with sqrt(n),,
3.46868E+17,djeis#0042,2020-06-01,"I think I've seen a few, but I can't remember them off hand.",,
1.89169E+17,srasu#0042,2020-06-01,"As a result, the ""cleaned up"" version of this code looks like this:
```clojure
(ns sandbox.primes
  (:require
   [clojure.math.numeric-tower :as math]))

(declare primes)

(def floored-sqrt
  ""Returns the floor of the square root of the input.""
  (comp math/floor math/sqrt))

(defn prime?
  ""Returns the passed number if it is prime, and nil otherwise.""
  [n]
  (and (when (> n 1) true)
       (not (some #(zero? (rem n %))
                  (let [sqrt (floored-sqrt n)]
                    (take-while #(<= % sqrt) primes))))))

(def primes
  ""Lazy sequence of all prime numbers.""
  (cons
   2
   ;; Filters a list of all odd numbers greater than 1 by if they are prime
   (filter prime? (map (comp inc #(* 2 %) inc) (range)))))
```",,
2.34343E+17,Johnny#3826,2020-06-01,Is clojure.math.numeric-tower an external dependency?,,
1.89169E+17,srasu#0042,2020-06-01,"Yes, but it's part of clojure contrib",,
1.89169E+17,srasu#0042,2020-06-01,https://github.com/clojure/math.numeric-tower,,
1.89169E+17,srasu#0042,2020-06-01,Which means it's published under org.clojure,,
2.34343E+17,Johnny#3826,2020-06-01,Ah alright,,
2.34343E+17,Johnny#3826,2020-06-01,Useful stuff,,
2.34343E+17,Johnny#3826,2020-06-03,"Regarding primes again and in particular your implementation @srasu :
https://phillippe.siclait.com/blog/primes-lazy-sequence",,
2.34343E+17,Johnny#3826,2020-06-03,"This is something I hadn't even thought about, and it's rather difficult to get into my head, but it's certainly interesting",,
1.89169E+17,srasu#0042,2020-06-03,"Yeah, that's more or less the same idea as I had, I just wanted an ""is prime"" predicate",,
1.89169E+17,srasu#0042,2020-06-03,Also my way of doing it *does* enable you to have a cache and then do prime tests against numbers up to the square of the largest prime you've fetched from the list without computing any additional primes,,
1.89169E+17,srasu#0042,2020-06-03,I do like the article though,,
2.34343E+17,Johnny#3826,2020-06-03,"Yeah I don't mean the specifics, just the general similarity that you also filter the sequence using the sequence itself",,
1.89169E+17,srasu#0042,2020-06-03,Yup,,
3.15199E+17,Alex Miller#7644,2020-06-04,A History of Clojure by Rich Hickey https://clojure.org/about/history,,
2.18602E+17,lsenjov#4288,2020-06-04,Oooo thanks!,,
1.89169E+17,srasu#0042,2020-06-04,Thanks alex! Super cool to see that!,,
2.34343E+17,Johnny#3826,2020-06-06,That was a nice read,,
5.39603E+17,spacey 🌌#7238,2020-06-08,https://www.tadam-framework.dev/,,
5.39603E+17,spacey 🌌#7238,2020-06-08,I like how this looks!,,
2.64626E+17,django#9749,2020-06-08,@spacey 🌌  will it support reitit in the future?,,
5.39603E+17,spacey 🌌#7238,2020-06-08,I don't know :/,,
1.89169E+17,srasu#0042,2020-06-12,"It's been a while since I mentioned this project, so there might be a decent number of people who haven't seen it yet:
I made a library for making Discord bots in Clojure. It's currently more complete than any other library, offering complete coverage of the Discord API, excluding voice gateway support, and a number of bots have been developed with it. It offers transparent support for sharding and rate limits.
https://github.com/IGJoshua/discljord",,"🥰 (1),💯 (1)"
2.34343E+17,Johnny#3826,2020-06-12,does anybody use babashka and know what's the best way to run a subprocess?,,
2.34343E+17,Johnny#3826,2020-06-12,"nvm, got it",,
2.34343E+17,Johnny#3826,2020-06-12,clojure.java.shell,,
1.89169E+17,srasu#0042,2020-06-12,Be aware that `sh` blocks until the subprocess completes,,
2.34343E+17,Johnny#3826,2020-06-12,"yup, I am",,
2.34343E+17,Johnny#3826,2020-06-12,"Is there any way to say ""use this executor for this specific go block"" in core.async?",,
1.89169E+17,srasu#0042,2020-06-12,I don't believe so,,
2.34343E+17,Johnny#3826,2020-06-12,That is really tragic,,
2.34343E+17,Johnny#3826,2020-06-12,It should really be a thing considering that many frameworks and libraries require you to use specific threads or thread pools,,
3.01795E+17,arichiardi#2361,2020-06-13,"@Johnny only for one specific go block? 

You could try some dark magic like

https://stackoverflow.com/a/38577871/1888507

But I see it very hard. Globally maybe, for *one* go block maybe not...",,
2.34343E+17,Johnny#3826,2020-06-13,"Yeah, I don't mean globally",,
2.34343E+17,Johnny#3826,2020-06-16,"Any recommendations for writing TCP servers with Clojure? I've only looked at this library so far
https://github.com/ztellman/aleph",,
1.89169E+17,srasu#0042,2020-06-16,"Gniazdo is what i'm using for websockets, but it's not quite as low level as tcp sockets",,
2.34343E+17,Johnny#3826,2020-06-16,"I specifically want to look into ""raw"" TCP, not websockets or anything else on top",,
2.075E+17,Stuuu#8950,2020-06-16,what about java.nio?,,
2.34343E+17,Johnny#3826,2020-06-16,"Oh, that might be a good call",,
2.34343E+17,Johnny#3826,2020-06-16,There seems to be an interop library for clojure as well,,
2.34343E+17,Johnny#3826,2020-06-16,`nio` uses some sort of async channels right?,,
2.34343E+17,Johnny#3826,2020-06-16,Would be incredibly useful to find something that translates them to core.async channels or sth,,
2.075E+17,Stuuu#8950,2020-06-16,yes `nio` supports async,,
1.9124E+17,Lego Tank Girl#7451,2020-06-18,anyone running cider know if its possible to recompile java source code without completely restarting cider?,,
2.98148E+17,lepistane#2482,2020-06-19,"ask on #cider on slack
bozidar (main maintainer) is always there
he knows the answer to this.
And if you do find it please share cause i was always recompiling 🙂",,👍 (1)
2.39623E+17,bbuccianti#7231,2020-06-22,"I've implemented a solution for primes number too, what do you think?",,
2.39623E+17,bbuccianti#7231,2020-06-22,"```(defn n-primes [to]
  (reduce (fn [primes n]
            (if (->> (take-while #(<= % (Math/sqrt ^long n)) primes)
                     (some #(zero? (rem ^long n ^long %))))
              primes
              (conj primes n)))
          []
          (range 2 (inc to))))
```",,
2.39623E+17,bbuccianti#7231,2020-06-23,"well, seems like with that condition for adding the number to the list of primes I was making a lot of precomputation that I don't need",,
2.39623E+17,bbuccianti#7231,2020-06-23,"measured with criterium, this is 8.6 times faster",,
2.39623E+17,bbuccianti#7231,2020-06-23,"```(defn v6-primes [to]
  (reduce (fn [primes ^long n]
            (if (reduce (fn [_ ^long x]
                          (cond
                            (zero? (rem n x))   (reduced true)
                            (> x (Math/sqrt n)) (reduced false)))
                        false
                        primes)
              primes
              (conj primes n)))
          []
          (cons 2 (range 3 (inc to) 2))))
```",,
2.85161E+17,Frosku#9303,2020-06-29,"Hey all, any Quil users here?",,
1.9124E+17,Lego Tank Girl#7451,2020-06-30,I poke around with it a bit. What's up?,,
1.07917E+17,Kamuela#1493,2020-06-30,What’s quil for the uninitiated?,,
1.9124E+17,Lego Tank Girl#7451,2020-06-30,clj[s] wrapper around processing,,
1.07917E+17,Kamuela#1493,2020-06-30,Processing? Very broad,,
1.9124E+17,Lego Tank Girl#7451,2020-06-30,It's a Java graphics lib focuses around art. Lots of generative art stuff,,
1.9124E+17,Lego Tank Girl#7451,2020-06-30,Processing is the Java version and p5 is the js version,,
2.85161E+17,Frosku#9303,2020-06-30,Just wondering how hard it would be to create layered images.,,
2.85161E+17,Frosku#9303,2020-06-30,Like if I have 4 PNGs I want to layer on top of each other,,
1.9124E+17,Lego Tank Girl#7451,2020-06-30,And you're animating them I presume?,,
2.85161E+17,Frosku#9303,2020-06-30,Not animating,,
1.9124E+17,Lego Tank Girl#7451,2020-06-30,"Should be pretty straight forward, take a look through this sketch. It's animated but shows how to draw multiple images on top of each other http://quil.info/sketches/show/example_spaceship",,
2.85161E+17,Frosku#9303,2020-06-30,ty,,
2.13852E+17,zackteo#5805,2020-07-02,"Hi guys, I tried searching everywhere but what unicode encoding in Clojure using? It doesn't seem to be UTF-8",,
3.46868E+17,djeis#0042,2020-07-02,JVM clojure?,,
3.46868E+17,djeis#0042,2020-07-02,I would imagine that's more a property of thet JVM than of clojure.,,
3.46868E+17,djeis#0042,2020-07-02,Looks like the internal representation is UTF-16: https://stackoverflow.com/questions/9699071/what-is-the-javas-internal-represention-for-string-modified-utf-8-utf-16,,
2.34343E+17,Johnny#3826,2020-07-02,the encoding is language-independent and up to you,,
2.34343E+17,Johnny#3826,2020-07-02,unless you mean strings or something,,
3.46868E+17,djeis#0042,2020-07-02,"Right, yea, if you're talking what encoding it defaults to when reading/writing the answer is usually ""depends how you're reading and writing"".",,
3.46868E+17,djeis#0042,2020-07-02,"Oh, actually, it looks like more recent JVM's use a combination of UTF-16 and Latin-1 as needed.",,
2.13852E+17,zackteo#5805,2020-07-02,Thanks all! I figured out my eyes might have been playing tricks on me ....  :x,,
2.85161E+17,Frosku#9303,2020-07-04,"In Quil, is there a way to isolate alpha and recolor all the non-transparent pixels to 1 color in a PNG?",,
1.9124E+17,Lego Tank Girl#7451,2020-07-04,Yes with `pixels` and `update-pixels` the docs have an example of how to use both together,,
1.9124E+17,Lego Tank Girl#7451,2020-07-04,http://quil.info/api/image/pixels#pixels,,
1.9124E+17,Lego Tank Girl#7451,2020-07-04,If you're having trouble finding how to do something in quil try searching for the equivalent processing method instead. Quil is a pretty thin wrapper and processing has a bigger user base so it's usually easier to find info on processing and just convert,,
2.85161E+17,Frosku#9303,2020-07-04,"Thanks, that's helpful to know.",,
2.34343E+17,Johnny#3826,2020-07-07,"When exactly do ring sessions get deleted? I have a ""log in via oauth2"" thing on a website and before redirecting to the authorisation url I store a few things in the session. But after the  login is completed and redirected to my website, the previous session is gone",,
2.34343E+17,Johnny#3826,2020-07-07,For some reason it worked for a little while until I tampered with it again,,
2.34343E+17,Johnny#3826,2020-07-07,"I tried to restore everything as before but it doesn't work anymore, the session is gone every time",,
2.18602E+17,lsenjov#4288,2020-07-07,Check if the middleware is http-only. If it is you'll need to change it,,
2.18602E+17,lsenjov#4288,2020-07-07,"If it's what I'm thinking of, the session is fine, but the browser is sending a new cookie/not sending the old so it's getting a new one",,
2.34343E+17,Johnny#3826,2020-07-08,"Sorry, I'm still rather new to webdev and ring. What are the implications of being http only or how does it affect this particular situation? @lsenjov",,
2.34343E+17,Johnny#3826,2020-07-08,":session :cookie-attrs :http-only was indeed set to true, I dissociated it but still same result",,
2.18602E+17,lsenjov#4288,2020-07-08,"My bad, wrong thing, it needs to be lax instead of strict",,
2.34343E+17,Johnny#3826,2020-07-08,:same-site?,,
2.18602E+17,lsenjov#4288,2020-07-08,"SameSite needs to be lax, or the cookie doesn't persist",,
2.34343E+17,Johnny#3826,2020-07-08,"Ah, I've reckoned something like this. Is it as I suspect: the cookie is deleted/overwritten once you leave the site?",,
2.34343E+17,Johnny#3826,2020-07-08,Because I couldn't find any docs for those config options.,,
2.34343E+17,Johnny#3826,2020-07-08,tysm. This worked. But do you have an idea where this is documented?,,
2.18602E+17,lsenjov#4288,2020-07-08,https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies,,
2.18602E+17,lsenjov#4288,2020-07-08,Check SameSite,,
2.34343E+17,Johnny#3826,2020-07-08,Thank you!,,
2.85161E+17,Frosku#9303,2020-07-10,"https://github.com/Frosku/mirrorpool
Can someone else see if they can get the uberjar to work for this?",,
2.85161E+17,Frosku#9303,2020-07-10,"Mine doesn't, but lein run works, and I'm very confused.",,
1.36668E+17,gmem#1919,2020-07-11,What errors do you get?,,
2.62313E+17,agumonkey#6435,2020-07-29,what's the reasoning for (contains? [:k] :k) => false,,
2.62313E+17,agumonkey#6435,2020-07-29,oh clojure docs explains it's a matter of index not value,,
2.34343E+17,Johnny#3826,2020-07-29,"Yeah, `contains?` only works on associative data structures",,
2.34343E+17,Johnny#3826,2020-07-29,And it uses keys,,
2.34343E+17,Johnny#3826,2020-07-29,Vectors are associations of index -> value,,
6.29426E+17,Vass#8857,2020-07-29,`contains?` has to be one of the biggest gotcha fns in the entire language...,,
6.29426E+17,Vass#8857,2020-07-29,"Every time I think it's what I need, it isn't.",,
2.62313E+17,agumonkey#6435,2020-07-30,it's surprisingly an ultra common word/term with a very not common semantic 🙂,,
2.62313E+17,agumonkey#6435,2020-07-30,let's rename it kontains?,,
2.47614E+17,"David, The Tuna King#6860",2020-07-30,we should have both contains? and kontains? to make it clearer,,
2.62313E+17,agumonkey#6435,2020-07-30,i was merely joking but I think  it deserves a different name,,
2.62313E+17,agumonkey#6435,2020-07-30,anybody ever seen an attempt at a react style gui framework for client side jvm ?,,
1.89169E+17,srasu#0042,2020-07-30,fn-fx,,
1.89169E+17,srasu#0042,2020-07-30,and cljfx,,
1.89169E+17,srasu#0042,2020-07-30,they're both wrappers around java-fx,,
2.62313E+17,agumonkey#6435,2020-07-30,"I meant standalone, not java-fx based",,
2.62313E+17,agumonkey#6435,2020-07-30,thanks nonetheless,,
1.89169E+17,srasu#0042,2020-07-30,What do you mean standalone?,,
1.89169E+17,srasu#0042,2020-07-30,Do you mean like a wrapper of java swing?,,
1.89169E+17,srasu#0042,2020-07-30,"At some point you have to interoperate with a java gui library, whether that be the builtins or java-fx.",,
1.89169E+17,srasu#0042,2020-07-30,@agumonkey,,
2.62313E+17,agumonkey#6435,2020-07-30,@srasu yeah some kind of raw rewrite of react like concepts on awt/swing,,
2.62313E+17,agumonkey#6435,2020-07-30,bypassing java usual way of things,,
2.62313E+17,agumonkey#6435,2020-07-30,a react/seesaw blend,,
1.89169E+17,srasu#0042,2020-07-30,"No, that's not currently a thing. Although I'm not sure what disqualifies using java-fx with cljfx and fn-fx.",,
1.89169E+17,srasu#0042,2020-07-30,Do you want to just straight up port a reagent app to the JVM or something?,,
1.36557E+17,Softnum#7400,2020-07-30,just do what discord does and run electrum ontop of a react app,,
2.62313E+17,agumonkey#6435,2020-07-30,@srasu I don't know much about java-fx but it seemed like a recreation of the browser way of things and not a react like system. That's why I thought maybe somebody reusing swing graphic subsystem and write a purely functional reactive layer on it,,
1.89169E+17,srasu#0042,2020-07-30,"No, nothing like that exists, and I don't think that's an accurate representation of what javafx is. Javafx is still a pretty normal native-style graphics library with some utility features around sweeping boiler plate away under xml files.",,
1.89169E+17,srasu#0042,2020-07-30,It's not a recreation of the dom idea.,,
2.62313E+17,agumonkey#6435,2020-07-30,doesn't it support css or similar dynamic styling rules ?,,
1.89169E+17,srasu#0042,2020-07-30,"Yeah, why?",,
1.89169E+17,srasu#0042,2020-07-30,So do a lot of other libraries like gtk and qt,,
2.62313E+17,agumonkey#6435,2020-07-30,that's half why I thought it was a recreation of the browser way,,
2.62313E+17,agumonkey#6435,2020-07-30,"sea of nodes, dynamic updates over a big state",,
1.89169E+17,srasu#0042,2020-07-30,"I mean that's how swing, gtk, qt, and everything else that's not immediate mode work. It's just swing and awt don't allow dynamic styling or multithreading.",,
1.89169E+17,srasu#0042,2020-07-30,The only other common way to do gui programming is immediate mode guis but those are basically 'write your own retained mode gui' for any sizable project. Otherwise it's basically not used. Although you can do it with quil.,,
1.89169E+17,srasu#0042,2020-07-30,"The way that clojure and react work is really just the way you map immutability onto that idea of retained mode. Although it's arguably easier to implement from scratch than true retained mode, since you can more easily write a simple immediate mode evaluator for immutable data than you can write an efficient retained mode gui library.",,
2.62313E+17,agumonkey#6435,2020-08-01,do you guys know of a clojure standalone db lib ?,,
2.34343E+17,Johnny#3826,2020-08-01,Wdym by standalone,,
1.36557E+17,Softnum#7400,2020-08-01,also what db type,,
2.62313E+17,agumonkey#6435,2020-08-02,@Johnny I'm planning to write a small application in a sensitive office floor on which I probably wont be able to install mysql / postgres or similar you see ?,,
2.62313E+17,agumonkey#6435,2020-08-02,so far all I have by default is java se 1.6,,
2.34343E+17,Johnny#3826,2020-08-02,So you're looking for an embeddable database,,
2.62313E+17,agumonkey#6435,2020-08-02,yeah,,
2.62313E+17,agumonkey#6435,2020-08-02,and any persistent db is alright to me I'll manage,,
2.62313E+17,agumonkey#6435,2020-08-02,I stepped on the line fetching clojure and core.logic jars,,
2.34343E+17,Johnny#3826,2020-08-02,SQLite with next.jdbc would perhaps be an option,,
2.62313E+17,agumonkey#6435,2020-08-02,(and sqlite binary too),,
2.34343E+17,Johnny#3826,2020-08-02,"Or datahike, which can be file based",,
2.62313E+17,agumonkey#6435,2020-08-02,I see next.jdbc has no external dependency which is good,,
2.62313E+17,agumonkey#6435,2020-08-02,the less jars the better I suppose,,
2.34343E+17,Johnny#3826,2020-08-02,Well you'd need the sqlite driver additionally,,
2.62313E+17,agumonkey#6435,2020-08-02,damn yeah I forgot,,
2.62313E+17,agumonkey#6435,2020-08-02,unless I develop it locally and make a single uberjar with whatever is required,,
2.62313E+17,agumonkey#6435,2020-08-02,I think I will go with datahike,,
2.62313E+17,agumonkey#6435,2020-08-02,"it's not a large thing, ~10 users, low frequency and low amounts of data",,
2.34343E+17,Johnny#3826,2020-08-02,Then it may also be sufficient to just `pr` clojure data structures directly to files,,
2.62313E+17,agumonkey#6435,2020-08-02,"as in, zero libs ?",,
2.62313E+17,agumonkey#6435,2020-08-02,I like the idea of learning datalog so datahike appeals to me,,
2.34343E+17,Johnny#3826,2020-08-02,"> as in, zero libs ?
@agumonkey yes",,
2.34343E+17,Johnny#3826,2020-08-02,on such a low scale pretty much any database is overkill,,
2.62313E+17,agumonkey#6435,2020-08-02,but I need history,,
2.62313E+17,agumonkey#6435,2020-08-02,and datahike has that built in,,
2.34343E+17,Johnny#3826,2020-08-02,but if you wanna learn datalog and it's in the range of your possibilities then go for it,,
2.62313E+17,agumonkey#6435,2020-08-02,(I didn't know that before I read the github intro),,
2.34343E+17,Johnny#3826,2020-08-02,http://www.learndatalogtoday.org/,,
2.34343E+17,Johnny#3826,2020-08-02,recommendable,,
1.89169E+17,srasu#0042,2020-08-02,java 1.6 isn't supported past clojure 1.7,,
1.89169E+17,srasu#0042,2020-08-02,"for pure clojure look at datahike, if you're willing to learn datalog",,
1.89169E+17,srasu#0042,2020-08-02,i see johnny mentioned it already,,
2.34343E+17,Johnny#3826,2020-08-02,It's kinda mindblowing to me that clojure actually used to work with java 6,,
2.34343E+17,Johnny#3826,2020-08-02,Considering `invokedynamic` didn't exist yet,,
1.89169E+17,srasu#0042,2020-08-02,yeah invokedynamic support was only added in clojure 1.8,,
2.49199E+17,Mad Strategist#9811,2020-08-04,"Hi, I made a function and I want to know does this idea have a name or even a built-in function in Clojure?
```(defn iterate-cumulative [start coll]
  (cons start
        (lazy-seq (iterate-cumulative (+ start
                                         (first coll))
                                      (rest coll)))))```

use
```misc.core> (take 7 (iterate-cumulative 10 (cycle '(0 1))))
(10 10 11 11 12 12 13)```",,
2.49199E+17,Mad Strategist#9811,2020-08-04,"I have tried to use the regular reduce function with a lazy, infinite collection, but it doesn't work",,
2.49199E+17,Mad Strategist#9811,2020-08-04,"OMG, I found it. As always when I ask a question somewhere
It is called `reductions`
```misc.core> (take 7 (reductions + 10 (cycle '(0 1))))
(10 10 11 11 12 12 13)```",,
2.18602E+17,lsenjov#4288,2020-08-04,...I didn't know that exists. Neat,,
2.34343E+17,Johnny#3826,2020-08-04,"ah yeah, great function. Have used it in the past",,
2.33351E+17,Bluzzi#2000,2020-08-10,"Hello, i have a question :

**Code :**
```clojure
(def z (reduce str (take 3 (cycle ["".""])))) 

(println z""*""z)
```

**Console :**
```
... * ...
```

How do you not have a space between the ... and the * ? Thk",,
3.46868E+17,djeis#0042,2020-08-10,"```
user=> (println ""..."" ""*"" ""..."")
... * ...
nil
user=> (println (str ""..."" ""*"" ""...""))
...*...
nil
```",,
3.46868E+17,djeis#0042,2020-08-10,"`println` takes multiple args and prints each of them separated by spaces, str takes multiple args and combines them into a single string without spaces.",,
3.46868E+17,djeis#0042,2020-08-10,"So, make a single string using `str` and have `println` print that.",,
2.33351E+17,Bluzzi#2000,2020-08-10,"Ok Thanks ! And how can I add +2 to the variable ``l`` in this loop ?

```clojure
(def n 5) ; readline
(def l 1)

(loop [i n]
    (when (> i 0)
        (println i)
        (recur (- i 1))
    )
)
```",,
2.34343E+17,Johnny#3826,2020-08-10,You shouldn't. Changing the value of a variable is not usually how you write clojure code (also `def` creates a global variable so it's even less suitable),,
2.34343E+17,Johnny#3826,2020-08-10,What are you trying to do?,,
1.89169E+17,srasu#0042,2020-08-10,println and the other print fubction insert spaces between their arguments,,
1.89169E+17,srasu#0042,2020-08-10,so just use str,,
2.33351E+17,Bluzzi#2000,2020-08-10,"We have a funny little concept where we want to write a code allowing the creation of a tree in as many languages as possible : https://github.com/Virtual-Royaume/Sapin

And so I'm trying to do it in Clojure

The final result :
```
.....*.....
....***....
...*****...
..*******..
.*********.
.....*.....
```

My actual code in Clojure :
```clojure
(def n 5) ; readline
(def l 1)

(loop [i n]
    (when (> i 0)
        (println i)
        (recur (- i 1))
    )
)
        
(def z (reduce str (repeat n ""."")))
(println (str z ""*"" z))
```",,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-10,"Are you looking for help? Based on your comment in the repo, I'm wondering if you got frustrated or if you're still working on it or something else",,
2.33351E+17,Bluzzi#2000,2020-08-10,"The comment is for troll because I rage about the language with my friends, but I'm still interested in it, otherwise I wouldn't be here",,
2.33351E+17,Bluzzi#2000,2020-08-10,"```clojure
(def n (Integer. (read-line))) ; readline

(loop [i n l 1]
    (when (> i 0)
        (def x (reduce str (repeat i ""."")))
        (println (str x (reduce str (repeat l ""*"")) x))

        (recur (- i 1) (+ l 2))
    )
)
        
(def z (reduce str (repeat n ""."")))
(println (str z ""*"" z))
```

I finally got my script right, but could I get some more information on that ? ""also def creates a global variable so it's even less suitable"" - @Johnny 

And do you have any tips on how to improve my script ?",,
2.34343E+17,Johnny#3826,2020-08-10,"Yes, there are a couple of things to note here",,
2.34343E+17,Johnny#3826,2020-08-10,"For the definition of `n`, you could use `(read)` instead. This will read any valid clojure expression, meaning it's not guaranteed to be an int, but if you want to get it as short as possible",,
2.34343E+17,Johnny#3826,2020-08-10,"otherwise, use `Integer/valueOf` instead of `Integer.`",,
2.34343E+17,Johnny#3826,2020-08-10,those are just minor things,,
2.34343E+17,Johnny#3826,2020-08-10,"The code after that is written in an imperative style. Clojure is a functional language, so instead of looping and modifying variables you should try to come up with a pure way to define the data you want to print out",,
2.34343E+17,Johnny#3826,2020-08-10,"you can write code like this in clojure, but you're limited compared to real imperative languages",,
2.34343E+17,Johnny#3826,2020-08-10,"Similarily, you can have local variables, but you do not define them with `def`",,
2.34343E+17,Johnny#3826,2020-08-10,You use `let` for that,,
2.34343E+17,Johnny#3826,2020-08-10,"when writing clojure, it's often best to start by defining functions.",,
2.34343E+17,Johnny#3826,2020-08-10,"In this case, you want to somehow make a tree given a size",,
2.34343E+17,Johnny#3826,2020-08-10,so start with a function `tree` that takes one parameter `n` and returns the tree as a string,,
2.34343E+17,Johnny#3826,2020-08-10,now you go from there,,
2.34343E+17,Johnny#3826,2020-08-10,how do I make a tree? by making its individual lines. how do I make a line? by concatenating a padding string + some amount of tree characters + the same padding string,,
2.34343E+17,Johnny#3826,2020-08-10,"now you may realise that, in order to make a line, you only need to know the overall size and the amount of tree characters",,
2.34343E+17,Johnny#3826,2020-08-10,"so perhaps make another function `tree-line` that takes `n` and `x`, the ""amount of tree"" and returns a string",,
2.34343E+17,Johnny#3826,2020-08-10,"of course in order to come up with a truly functional solution you need to be somewhat familiar with that paradigm. If you don't know anything about that, your current mindset will restrict you",,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-10,"a thing that I did was to create a vector for each line of the tree (e.g. [5 4 3 21]) using `range` and `vec`, and then `conj`'ed 5 (or the input height) on the end of it, so then I have the padding for all my lines, and then I iterated over that seq printing out the tree line",,
2.34343E+17,Johnny#3826,2020-08-10,"I used range to generate the numbers of tree characters from top to bottom, `concat`ing `1` for the stump at the end",,
2.34343E+17,Johnny#3826,2020-08-10,And then creating the lines using `(quot (- n x) 2)` as the padding size,,
2.33351E+17,Bluzzi#2000,2020-08-10,Wow,,
2.33351E+17,Bluzzi#2000,2020-08-10,Wow,,
2.33351E+17,Bluzzi#2000,2020-08-10,Thanks for your helping,,
2.33351E+17,Bluzzi#2000,2020-08-10,"I think I've improved my current code, I take all your advices into account and I will try to apply them tomorrow.

Clojure sounds very different from other languages !",,
2.33351E+17,Bluzzi#2000,2020-08-10,"```clojure
(let [n (read)]
  (loop [i n l 1]
    (when (> i 0)
        (def x (reduce str (repeat i ""."")))
        (println (str x (reduce str (repeat l ""*"")) x))

        (recur (- i 1) (+ l 2))))
  (let [z (reduce str (repeat n "".""))]
    (println (str z ""*"" z))))
```",,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-10,"a couple things:
- I'd probably use `let` instead of `def`, since let keeps the new binding (`x` in this case) scoped to its block
- you can replace `reduce str` with `apply str` to make one call to `str` with variadic arguments - it's not going to make a huge difference in this case, but this change should result in one string construction instead of a bunch of intermediate strings
- you could save a little repetition by `let`ting something like `let [str-rep #(apply str (repeat %1 %2)]`, and then you could call something like `(str-rep i ""."")`",,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-10,"... and on a larger scale, it looks like the github repo you referenced is kind of taking one solution design and just translating syntax between languages, as opposed to exploring the idioms of each language and trying to write the solution in a way that fits the general approach of that language. While that's not necessarily 'wrong', it also doesn't really allow for a meaningful comparison between language features and what a lot of code from that language looks like. I guess it's aimed at being more of a code golf type thing, but just understand that, for at least some of those languages, you wouldn't typically find a lot of production code written in the styles used",,
8.51685E+16,Ty#0540,2020-08-10,Does anyone happen to know a good contact email for Rich Hickey?,,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-10,looks like there are a couple of email addresses that are findable on Google,,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-10,"with that said, I feel like if someone did have it, they might be reluctant to provide it to what is effectively a random stranger on the internet (assuming that if someone said ""yes"", the next question was going to be ""what is it?"")",,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-10,"if it's business-y, you could probably email the general contact address at Cognitect",,
3.29023E+17,nixin72#3554,2020-08-28,"How does function composition work when I'm trying to compose a function that takes multiple arguments? I'm trying to remove the dash from a kebab-case string and capitalize it, so I need to compose the `replace` and capitalize functions. Currently I have it as just a regular function, like this, but I can't figure out how to turn that into a function composition since `replace` takes the string as it's first argument
```clojure
(defn kebab->label [string]
  (clojure.string/capitalize (replace string #""-"" "" "")))
```",,
1.89169E+17,srasu#0042,2020-08-28,"You could use `(comp str/capitalize #(replace % #""-"" "" ""))`",,
3.29023E+17,nixin72#3554,2020-08-28,"Ohh right, forgot about the lambda shorthand 😅 Not that I couldn't have just used `(lambda (x)...`, but this is much nicer",,
3.29023E+17,nixin72#3554,2020-08-28,"Oh, wait, I guess it would be `(fn (x)...` cause Clojure doesn't use `lambda`. Too used to Racket lol",,
2.34343E+17,Johnny#3826,2020-08-28,Yeah it's `fn` and the arguments are a vector,,
3.29023E+17,nixin72#3554,2020-08-28,"Right, whoops... Thanks!",,
4.56227E+17,Deleted User#0000,2020-08-28,oh hi johnny,,
2.34343E+17,Johnny#3826,2020-08-29,Hi,,
3.29023E+17,nixin72#3554,2020-09-07,"I'm trying to make a server with ring and reitit, but I can't seem to figure out how to enable CORS on the router. I have this code in my `handler.clj`
```clj
(def app
  (ring-cors/wrap-cors
   (reitit-ring/ring-handler
    (reitit-ring/router
     [[""/"" {:get {:handler index-handler}}]
      [""/login"" {:get {:handler index-handler}}]
      [""/register"" {:get {:handler index-handler}}]
      [""/api"" {:get {:handler api-handler}}]]
     (reitit-ring/routes
      (reitit-ring/create-resource-handler {:path ""/"" :root ""/public""})
      (reitit-ring/create-default-handler))
     {:middleware middleware}))
   :access-control-allow-origin #""*""
   :access-control-allow-methods [:get :put :post :patch :delete]))
```
And then in my `server.clj`, I have
```clj
(ns fullstack.server
    (:require
     [fullstack.handler :refer [app]]
     [config.core :refer [env]]
     [ring.adapter.jetty :refer [run-jetty]])
    (:gen-class))

(defn -main [& args]
  (let [port (or (env :port) 3000)]
    (run-jetty #'app {:port port :join? false})))
```
Now, this works perfectly as expected when I remove the call to `wrap-cors`, but as soon as I try making it accept CORS requests, I get this error: 
```
java.lang.IllegalArgumentException: unable to require the namespace of the handler fullstack.handler/app for :ring-handler
```
I actually only really want the `/api` route to accept CORS requests, but I couldn't figure out how to do that so figured I'd just make them all accept CORS for now.",,
3.29023E+17,nixin72#3554,2020-09-07,Does anyone know how I could get this working so that I can accept CORS requests?,,
2.47614E+17,"David, The Tuna King#6860",2020-09-08,"Look at reitit doc, every route can have  middleware option",,👆 (1)
7.52757E+17,hudsonbay#6680,2020-09-09,"Hi, guys, how are you? Can I ask some questions?",,
7.52757E+17,hudsonbay#6680,2020-09-09,My name is Manuel,,
7.52757E+17,hudsonbay#6680,2020-09-09,"I am new to Clojure (I'm still reading a book about it, I haven't worked on a project before. I come from the world of Elixir)",,
7.52757E+17,hudsonbay#6680,2020-09-09,Right now I'm on a technologies choice process for a project that I'm going to start with a friend,,
7.52757E+17,hudsonbay#6680,2020-09-09,"A project related to the area of Civil Engineering

There will be a lot of formulas, Maths, Calculus, limits, derivatives, logarithms, etc.

My friend is a Civil Engineer, so he puts the formulas and I put the programming part",,
7.52757E+17,hudsonbay#6680,2020-09-09,"Besides, it will be necessary to visualize data in the form of 2D and 3D charts",,
7.52757E+17,hudsonbay#6680,2020-09-09,"We want, at first, to develop a desktop application

I think Python does an excellent job on that field, so it's not discarded, I know Python and it would be easier for me",,
7.52757E+17,hudsonbay#6680,2020-09-09,"I also thought on doing it with Qt, which is an excellent framework for desktop applications. Besides, C++ is a mature technology and I know that any issue that I face during development will have been solved by anyone in the past",,
7.52757E+17,hudsonbay#6680,2020-09-09,The problem with C++ is that I'm not a big fan of OOP,,
7.52757E+17,hudsonbay#6680,2020-09-09,"But I want to do it with Clojure, I want to consider Clojure because I think that it would be the best way for me to learn the language well. It's just that the lack of knowledge I have about Clojure doesn't let me take a decision on using or if it will solve my problem",,
7.52757E+17,hudsonbay#6680,2020-09-09,"I would like to ask, please:",,
7.52757E+17,hudsonbay#6680,2020-09-09,1. Which framework do you recommend to create the type of desktop application that I need? I've seen a lot of options but I don't know how to decide,,
7.52757E+17,hudsonbay#6680,2020-09-09,2. Do you think Clojure have the right libraries for Data Visualization and for complex Math and Calculus topics like the ones I told you about?,,
7.52757E+17,hudsonbay#6680,2020-09-09,"3. Do those Data Visualization libraries, if they exist, can be used and integrated with the  desktop-oriented frameworks? Or it's just for web?",,
7.52757E+17,hudsonbay#6680,2020-09-09,4. What should I do to export the final project to an installable executable .exe for Windows? Does that exist on Clojure? Can we do that? I use Linux but if the project goes well our clients would be using Windows mostly,,
7.52757E+17,hudsonbay#6680,2020-09-09,"5. Is there good documentation about these libraries, in the case they exist?",,
7.52757E+17,hudsonbay#6680,2020-09-09,I'd aprecciate if you could comment me your experience. I think Clojure is very powerful but I want to take a good decision on which technology to choose because at the end I don't wanna have a technical debt,,
1.89169E+17,srasu#0042,2020-09-09,"Desktop applications aren't super common to be made in Clojure. You could use either electron with CLJS, but that'd be a bit complicated. Halgari's fn-fx is probably a good place to go if you want something really functional, but also seesaw is quite good if you want something simple but closer to java's style.",,
1.89169E+17,srasu#0042,2020-09-09,"As for library support, clojure has many libraries of its own, yes, but for nearly any topic that you can't find a good library for clojure, you can find a decent library for java which you can use from clojure easily.",,
1.89169E+17,srasu#0042,2020-09-09,"As for making an installer, java in general doesn't do that as their default manner of working with programs. Nearly any extraction-type installer will be decent for the resulting application however.",,
6.29426E+17,Vass#8857,2020-09-10,"> Desktop applications aren't super common to be made in Clojure. You could use either electron with CLJS, but that'd be a bit complicated. Halgari's fn-fx is probably a good place to go if you want something really functional, but also seesaw is quite good if you want something simple but closer to java's style.
@srasu FWIW I would probably look at `clj-fx` rather than `fn-fx` if you're looking to do a JavaFX desktop app in Clojure.  It's more modern and uses more recent design approaches.",,
1.89169E+17,srasu#0042,2020-09-10,fair enough,,
6.29426E+17,Vass#8857,2020-09-10,"(background: I was working on a desktop app a few years ago, and as part of that did a bit of work on `fn-fx` to update it, but then the project kind of fell apart so I haven't revisited since then)",,
1.36557E+17,Softnum#7400,2020-09-10,For analysis stuff pathera is a thing (https://github.com/alanmarazzi/panthera/) But given it's need for both a JVM and the python pandas libs it's nto going to be easy to package and distribute your code.,,
7.52757E+17,hudsonbay#6680,2020-09-10,"Thanks, guys. clj-fx seems good. I'll check it out but I'll be developing on Python because what it can do. And as a side project I will try to replicate it on Clojure and see how it goes. Thanks a lot",,
3.29023E+17,nixin72#3554,2020-09-12,"Recently I've been working on a fullstack app using Reagent front-end and ring backend. I'm using figwheel to hot-reload the front-end, but I wanted to know how I can get reloading on the backend too. What I've been doing is using `lein repl` and then `(compile <whatever namespace>)` then restarting the server from the REPL, but with figwheel I can't do that because it loads me into a ClojureScript repl and I can't seem to access functions in my Clojure namespaces. Is there a solution to this so I can get easy reloading on both my front-end and backend from the same repl?",,
1.89169E+17,srasu#0042,2020-09-12,"If you have a decent editor, it should Just Work™️, otherwise figwheel-main has some instructions on how to switch repls",,
3.29023E+17,nixin72#3554,2020-09-12,"I'm using Emacs 🤷‍♂️ What I've been doing is editing in Emacs with a seperate terminal that's got `lein fighwheel` running in it. But as far as I can tell, it's not restarting the server when I make changes to it",,
1.89169E+17,srasu#0042,2020-09-12,"right, but you should be able to integrate the two by having the figwheel lein plugin injected by cider and starting the repl that way.",,
3.29023E+17,nixin72#3554,2020-09-12,"Okay, so I have to get cider to talk to the nREPL sessions started by figwheel?",,
3.46868E+17,djeis#0042,2020-09-12,"@nixin72 Yea, that's one way. Another is to have cider start figwheel.",,
3.46868E+17,djeis#0042,2020-09-12,If you use `cider-jack-in-cljs` it'll ask you what cljs repl to launch and figwheel is one of the options.,,
3.46868E+17,djeis#0042,2020-09-12,That will just connect it for cljs tho- you need to connect it for clj separately.,,
3.46868E+17,djeis#0042,2020-09-12,"You can do `cider-jack-in-clj&cljs` tho. It'll launch one nrepl server, connect to it twice (two repls) and then launch figwheel in one of them.",,
3.46868E+17,djeis#0042,2020-09-12,"One for clj, one for cljs.",,
3.29023E+17,nixin72#3554,2020-09-15,"Forgot to say I got it working now, thank you! It does work now, the problem with the hot-reloading not working was because I'd commented out middleware stuff, and that was included in what I was commenting out, so I wasn't using `wrap-reload`",,"🎉 (1),🌯 (1)"
3.29023E+17,nixin72#3554,2020-09-15,"How do I send POST parameters to a handler for a route in reitit? I've got it working sending query parameters in a GET request, but I can't figure out how to get it to work for POST parameters for some reason. I have this set of routes and handler:
```clj
(defn login-handler [{{email ""email""} :params}]
  (api/respond {:response ""hello""
                :other email}))

(def routes
   [""/users""
    ["""" {:get {:handler users-handler}}]
    [""/login"" {:get {:handler login-handler}
               :post {:handler login-handler}}]])
```
And I'm making a request to `/users/login`. This is what my request looks like:
```clj
(-> (js/fetch (util/api-url endpoint) ; localhost:3449/users/login
                 {:method method ; post 
                  :content-type ""application/json""
                  :body {:email ""test""}})
       (js/Promise.resolve)
       (.then #(.json %))
       (.then callback)) ; function that just console.logs in this case 
```
I'm trying to just send a JSON payload, but the value of email in my handler is always null. If I change the request to have `?email=y` and change `:params` to `:query-params`, it works perfectly fine. But I don't want to be sending username/password over GET requests. How do I accept arbitrary post parameters in a handler for a route?",,
3.29023E+17,nixin72#3554,2020-09-15,"I've read through the docs for Reitit and Ring, but I couldn't find anything about how to access post parameters...",,
3.29023E+17,nixin72#3554,2020-09-15,"I'm missing PHP right now where I just do `$_POST[""data""]` 😦",,
3.29023E+17,nixin72#3554,2020-09-15,I'm thinking of using Compojure instead of doing it like this... It looks so much easier...,,
2.47614E+17,"David, The Tuna King#6860",2020-09-16,do you want post parameters or you have issues parsing body?,,
2.34343E+17,Johnny#3826,2020-09-16,https://github.com/ring-clojure/ring-json @nixin72,,
1.36557E+17,Softnum#7400,2020-09-16,I almost always use wrap-params.  then you get a key in the request map that's :form-params that lists key/val for the form params,,
2.34343E+17,Johnny#3826,2020-09-16,Well yeah but those only work with the form encoding,,
2.34343E+17,Johnny#3826,2020-09-16,Not with json,,
3.97541E+17,evanpeterjones#1812,2020-09-16,The company I work for uses VB.net and they have these global objects we use to queue function calls and they have an extension explicitly to write wrapper Functions to add function calls to it. And it's so obnoxious on so many levels. Nothing remotely like it could ever exist in Clojure,,
7.46569E+17,benhurr#0017,2020-09-23,@nixin72 what happends if you pass :parameters in your reitit post route Look here https://github.com/metosin/reitit/blob/master/examples/ring-swagger/src/example/server.clj#L62,,
7.46569E+17,benhurr#0017,2020-09-23,"or scratch that, this might be swagger related only. Yeah, I usually use compojure myself, haven't tried reitit yet. compojure + wrap-params middleware should do the trick.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"I got Clojure to ""run"" on Dalvik, and I'm pretty sure other people have too(and there's even a fork). I also forgot that Clojure compiles to JVM lol",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,The fact that `dx` seems to work on a random jar is actually pretty cool.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"If Clojure were just an interpreter, then I'm pretty sure it would have worked.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Okay,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Sudden realization.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"```
  :dependencies [[org.clojure-android/clojure ""1.7.0-r4""]
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,My REPL also works,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"TL;DR, I think if I `dx` *this* instead, it will work.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,,https://cdn.discordapp.com/attachments/315388260987830272/758595530212507658/Screenshot_2020-09-24-15-47-27-971_com.termux.png,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Getting closer,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Perfect. :),,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,,https://cdn.discordapp.com/attachments/315388260987830272/758608266770645002/Screenshot_2020-09-24-16-38-12-534_com.termux.png,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Any idea why it won't resolve though?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Why is `clojure.core` not part of my `require`?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,,https://cdn.discordapp.com/attachments/315388260987830272/758608667619885087/Screenshot_2020-09-24-16-39-54-355_com.termux.png,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,I have a feeling this is probably something on the fork.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"```java
    if(VM_TYPE.deref() == JAVA_VM) {
        Var.pushThreadBindings(
                RT.mapUniqueKeys(CURRENT_NS, CURRENT_NS.deref(),
                       WARN_ON_REFLECTION, WARN_ON_REFLECTION.deref()
                        ,RT.UNCHECKED_MATH, RT.UNCHECKED_MATH.deref()));
        try {
            Symbol USER = Symbol.intern(""user"");
            Symbol CLOJURE = Symbol.intern(""clojure.core"");
    
            Var in_ns = var(""clojure.core"", ""in-ns"");
            Var refer = var(""clojure.core"", ""refer"");
            in_ns.invoke(USER);
            refer.invoke(CLOJURE);
            maybeLoadResourceScript(""user.clj"");
        }
        finally {
            Var.popThreadBindings();
        }
    }

```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Found it,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,But why,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"Hm, maybe that's not it, actually.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"Eh, who knows, maybe it will work.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Oh wait,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,ding ding ding,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,`refer.invoke(CLOJURE);`,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Yay,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,I don't need to use my `proot` anymore.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Ish,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,I'm pretty sure maven and the like won't work,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"This is going to be very interesting. The way I'm understanding this is that with this patch, Clojure will work with both jar and dalvik files",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Where jars are converted to dalvik on runtime,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"```
     * Dalvik-specific method for dynamically loading a class from JVM byte
     * codes.  As there is no easy way to translate a class from the JVM to
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Oh boi,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"```
(require '[clojure.java.io :as io])

(defn stream-bytes [is]
  (let [baos (java.io.ByteArrayOutputStream.)]
    (io/copy is baos)
    (.toByteArray baos)))

(let [cp (.getContextClassLoader (Thread/currentThread))
      bytes (stream-bytes (.getResourceAsStream cp ""com/coveros/demo/helloworld/HelloWorld.class""))]
  (.defineClass cp ""com.coveros.demo.helloworld.HelloWorld"" bytes))

(com.coveros.demo.helloworld.HelloWorld/main (into-array String []))
Hello, World! The current time is 12:34:54 PM on September 24, 2020.
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,:9_Yay:,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"Loaded a jar file ""transparently""",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,You know,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"I think we can just extract this class loader, and use it globally for Termux",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,There we go.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"```
$ dalvikvm -cp classes:helloworld-1.1.jar:clojure.dex.jar clojure.main
Clojure 1.7.0
user=> (+ 1 2)
3
user=> (com.coveros.demo.helloworld.HelloWorld/main (into-array String []))
Hello, World! The current time is 2:05:42 PM on September 24, 2020.
nil
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,Transparent JVM translation. :9_Yay:,,🎉 (1)
1.36557E+17,Softnum#7400,2020-09-24,Sweet,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"```
$ dalvikvm -cp classes:helloworld-1.1.jar:clojure.dex.jar -D java.system.class.loader=clojure.lang.DalvikDynamicClassLoader com.coveros.demo.helloworld.HelloWorld
Aborted
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"Well, that one didn't seem to work though.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-24,"I should stop thinking too much about this, I don't want to use Java anyway.",,
2.62313E+17,agumonkey#6435,2020-09-26,identity of the day ``` (apply concat (seq (apply array-map '(1 2 3 4 5 6)))) ```,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Ohhhh, that's a bit interesting.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,I guess array-map is basically `[[k v] ...]`,,
2.62313E+17,agumonkey#6435,2020-09-26,kinda,,
2.62313E+17,agumonkey#6435,2020-09-26,I find the name slightly confusing since it makes me think it's a specialized map for java arrays but alas,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,:D,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Like, `map` in the `[ f(x) | x in arr ]` sense?",,
2.34343E+17,Johnny#3826,2020-09-26,haskell :5_MonkaShakeG:,,🦊 (1)
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,:D,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Though, is that valid Haskell?",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,It's been like,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,~3 years,,
2.34343E+17,Johnny#3826,2020-09-26,I think so,,
2.34343E+17,Johnny#3826,2020-09-26,no wait,,
2.34343E+17,Johnny#3826,2020-09-26,"ah, nah it uses `<-`, not `in`",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"```
Hugs> let arr = [1,2,3]; f = (1 +); in [ f(x) | x in arr ]
ERROR - Syntax error in expression (unexpected keyword ""in"")
Hugs> let arr = [1,2,3]; f = (1 +); in [ f(x) | x <- arr ]
[2,3,4]
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,Close enough tho,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,It never escaped me wtf,,
2.34343E+17,Johnny#3826,2020-09-26,apart from that you would probably omit the parens but I think they're legal,,
2.34343E+17,Johnny#3826,2020-09-26,"I'm like an absolute beginner with haskell, the language gives me chills",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"lmao, makes sense. It does for me too.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,Especially the first time.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,I had to try learning it 3 times to understand how to use it,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,And it was pretty nice while it lasted xd,,
2.34343E+17,Johnny#3826,2020-09-26,I'll be forced to learn it at uni but I guess I'm looking forward to it,,
2.34343E+17,Johnny#3826,2020-09-26,The resources for self-tuition don't seem to be the best,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Oh no worries, it's a good language for sure.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"But like, idk, I don't really need a *good* language. I want one which I can actually write.",,
2.34343E+17,Johnny#3826,2020-09-26,"yeah, true",,
2.34343E+17,Johnny#3826,2020-09-26,haskell just feels like you have to prove 3 math theorems to print hello world,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"I think it's the other way around actually. You as the user can defer to the type checker to say ""oh, these 3 theorems apply, so this hello world is actually a legal program""",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,It's a bit different as a library writer,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,Because you have to implement implement constraints.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"But that aside. My problem with Haskell is that it makes the bad things difficult, and the good things... also difficult.",,
1.89169E+17,srasu#0042,2020-09-26,Haskell is an interesting beast for sure,,
2.62313E+17,agumonkey#6435,2020-09-26,"@Johnny honestly, who gives a damn about hello world",,
2.62313E+17,agumonkey#6435,2020-09-26,I'm baffled whenever people bring this argument,,
1.89169E+17,srasu#0042,2020-09-26,anyone who wants to write cmdline utilities,,
2.34343E+17,Johnny#3826,2020-09-26,"that was hyperbolic, obviously",,
2.62313E+17,agumonkey#6435,2020-09-26,but i find that the real work is so remot e from print/io,,
2.34343E+17,Johnny#3826,2020-09-26,don't take offence if you like haskell,,
1.89169E+17,srasu#0042,2020-09-26,"controversial opinion, grep is just complicated hello world",,
2.62313E+17,agumonkey#6435,2020-09-26,"@Johnny apologies it was a bit aggressive, I didn't mean it that way",,
2.62313E+17,agumonkey#6435,2020-09-26,it was really an open discussion bit,,
2.34343E+17,Johnny#3826,2020-09-26,"no worries, just wanted to get that clear",,
2.34343E+17,Johnny#3826,2020-09-26,I can't make a real argument about Haskell because I don't have enough knowledge,,
2.62313E+17,agumonkey#6435,2020-09-26,it's really super strange to me that people focus on hw when in reality good programming is more about invariants / structures / logic,,
1.89169E+17,srasu#0042,2020-09-26,I like haskell a lot but personally I don't feel like I gain a whole lot from the static types that I don't get from spec.,,
2.62313E+17,agumonkey#6435,2020-09-26,i'd rather have a language that makes me write great graph / tree code in short than a cute printf,,
2.62313E+17,agumonkey#6435,2020-09-26,@srasu it's a tough choice I guess,,
2.62313E+17,agumonkey#6435,2020-09-26,"having a compiler enforcing infered specs , or writing your own which may be nicer , better suited",,
1.89169E+17,srasu#0042,2020-09-26,I don't feel like it's a tough choice. The only thing I ever reach for haskell for before I reach for clojure is parsers.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Anyways, if you guys want an actual example. So there's this thing called ""monad"", right? And Haskell extends that concept to ""monad transformer"", think of it as an analog to reducer : transducer.

Monad transformers allow you to generate monad stacks(once again, just like transducers lmao). So you can pile it up until you get a behavior you want. For example, an exceptional log reader system.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,And like,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Yeah, sure, you can do that.",,
2.62313E+17,agumonkey#6435,2020-09-26,I never wrote haskell to the point of Monad Transformers though but I get the gist,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"But why not just `(for [x val] (if (p x) (raise """") (print x))`",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,You don't have to bring it monadic stacks and all.,,
2.62313E+17,agumonkey#6435,2020-09-26,@srasu what are (if at all) the negative side of specs in your experience ?,,
1.89169E+17,srasu#0042,2020-09-26,"they can be time consuming, that's the only one.",,
2.62313E+17,agumonkey#6435,2020-09-26,I was genuinely worried that people would create an infinite amount of specs for each project,,
2.62313E+17,agumonkey#6435,2020-09-26,(kinda like OO class explosion in the java world),,
1.89169E+17,srasu#0042,2020-09-26,Spec 2 pretty much fixes that problem,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"I guess in a way, this falls down to ""don't make macros as the only interface to your library""",,
2.62313E+17,agumonkey#6435,2020-09-26,how so @srasu ?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"But in this case, macros -> complicated stacks",,
1.89169E+17,srasu#0042,2020-09-26,"spec2 allows you to have the calling contract for an individual function get separated out from the type of data getting passed to a function, which means you no longer have like ::address-with-state as a spec in your system, you just have an ::address, and then in a particular function you specify that it must include a ::state key.",,
1.89169E+17,srasu#0042,2020-09-26,Which means you no longer have an explosion of types.,,
1.89169E+17,srasu#0042,2020-09-26,"You only have one spec per domain object in your program, and one function spec per function in your public interface (and any internal ones you want for generative testing)",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Also, can I just say that I love `for` expressions? List comprehensions are so janky compared to `for` expressions IMO.",,
2.34343E+17,Johnny#3826,2020-09-26,well `for` is list comprehension,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,Yeah,,
2.62313E+17,agumonkey#6435,2020-09-26,you prefer syntax that much ?,,
1.89169E+17,srasu#0042,2020-09-26,for is pretty readable for people who come from a programming background rather than a math one.,,
2.62313E+17,agumonkey#6435,2020-09-26,I became quite care free about things that are so isomorphic,,
2.62313E+17,agumonkey#6435,2020-09-26,thanks @srasu btw,,
1.89169E+17,srasu#0042,2020-09-26,np,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Yeah, if anything, ""syntax""(how to express) is what makes me choose languages nowadays.",,
2.62313E+17,agumonkey#6435,2020-09-26,fair point about migrating newcomers,,
2.62313E+17,agumonkey#6435,2020-09-26,heh,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,There's obviously a few other things,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"For example, better mental models",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,Elixir hits both points on this for the server side.,,
2.62313E+17,agumonkey#6435,2020-09-26,"i used to be all about semantics and types, I despise syntax pretty much because it's hard to decompose/compose",,
2.62313E+17,agumonkey#6435,2020-09-26,"that's why fp clicked with me, (f a) is the syntax.. now roll your own solutions",,
2.62313E+17,agumonkey#6435,2020-09-26,@Lonely ᜋᜒᜌᜓ/Myrl but they/them do you like perl / raku ?,,
2.62313E+17,agumonkey#6435,2020-09-26,I find larry wall approach to syntax in general pretty interesting,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Also, for expressions allow you to easily find parallels between for loops and list comprehensions.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Also, nope. I don't use Perl at all.",,
2.62313E+17,agumonkey#6435,2020-09-26,ok,,
1.89169E+17,srasu#0042,2020-09-26,isn't perl stringly-typed?,,
2.62313E+17,agumonkey#6435,2020-09-26,I... can't answer that,,
2.62313E+17,agumonkey#6435,2020-09-26,i just like the contextual interpretation of objects,,
1.89169E+17,srasu#0042,2020-09-26,"I mean it's not 100% a bad thing if it is, it just means that it's not my cup of tea.",,
2.62313E+17,agumonkey#6435,2020-09-26,every object comes with scalar map vector bool projection IIUC,,
2.62313E+17,agumonkey#6435,2020-09-26,and the language will see the data with a different lens depending on that context,,
2.62313E+17,agumonkey#6435,2020-09-26,it's like a slightly implicit overloading,,
2.62313E+17,agumonkey#6435,2020-09-26,or a short-sighted variant of the expression problem,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Also, what I said applies to languages which make a distinction between ""expression"" and ""statement""",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"When you want to do something stateful, while collecting the results, you instead have to do

```
out = []
for x in xs
   out += f(x)
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,You technically can write `out = [f(x) for x in xs]`,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,But you'll probably get howled at.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,Or what if you have to write something complicated with local variables?,,
2.62313E+17,agumonkey#6435,2020-09-26,this is the lexical nature of lisp/fp at play,,
2.62313E+17,agumonkey#6435,2020-09-26,I always struggled with expr/statement split languages,,
2.62313E+17,agumonkey#6435,2020-09-26,i like when my world is closed over itself and coherent,,
2.62313E+17,agumonkey#6435,2020-09-26,(kinda like an algebra),,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Yeah, I was going to mention that too. Take juxtaposition as an operator, if you break a piece of code somewhere, do its constituent parts still make sense?",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Not with list comprehension, because your working variables are further.",,
2.62313E+17,agumonkey#6435,2020-09-26,that's exactly why syntax was always an issue,,
2.62313E+17,agumonkey#6435,2020-09-26,you have near zero control over what pieces and how they fit,,
2.62313E+17,agumonkey#6435,2020-09-26,it's crazy how to most people this is fine,,
2.62313E+17,agumonkey#6435,2020-09-26,"they love C, Java ...",,
2.62313E+17,agumonkey#6435,2020-09-26,to me it was just pain,,
2.62313E+17,agumonkey#6435,2020-09-26,i naturally align with lisp / forth,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"I was going to mention Forth too lmao. Because like, it wasn't always this way.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,We started with these types of languages,,
2.62313E+17,agumonkey#6435,2020-09-26,we ?,,
2.62313E+17,agumonkey#6435,2020-09-26,are you an old gray beard ?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,We in the sense of CompSci as a field.,,
2.62313E+17,agumonkey#6435,2020-09-26,oh ok,,
2.62313E+17,agumonkey#6435,2020-09-26,I saw lisp / forth as systems that gave you more freedom over the different dimension of the language while asking for less efforts,,
2.62313E+17,agumonkey#6435,2020-09-26,I think we digressed way too far from #clojure 🙂,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-26,"Yeah, fair. :)",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-27,I wish transducers were more zip-esque operations friendly.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-27,And like,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-27,I guess I understand why it's not?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-09-27,So :(,,
6.42105E+17,souenzzo#8341,2020-09-29,@Lonely ᜋᜒᜌᜓ/Myrl but they/them i think that should be possible implement a `zipper-transduce` that takes `[xform data]` and returns `data`,,
4.47679E+17,nuvolari#9542,2020-10-01,"Oh hello 🙂 I'm struggling with something that has to do with readers and quoting/unquoting.
 For example I want to write a function: `(defn foo [col pred-fn] {:pred-fn ... :result [...]})` 
and then, say I call `(foo [1 2 3] (fn [x] (= 2 x)))` 
I want it to return the shape `{:pred-fn (fn [x] (= 2 x)) ...}`. 
Is that possible or am I approaching this wrong?",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-10-01,:BellSip:,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-10-01,"I feel like you need to provide more context, I don't see why there'd be something wrong.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-10-01,Ah wait,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-10-01,Are you saying in `{:pred-fn x ...`  you want x to be a list?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-10-01,`(eval (quote x)) == x` for **all** x,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-10-01,"Alternatively, `defmacro`",,
4.47679E+17,nuvolari#9542,2020-10-01,"@Lonely ᜋᜒᜌᜓ/Myrl but they/them hmm, no, I want the value of `:pred-fn` to be the literal form, unevaluated. I basically want to show what the predicate was, downstream.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-10-01,Ah.,,
4.47679E+17,nuvolari#9542,2020-10-01,"Much like what `clojure.test` does 🤔 But I think it shows that I need to go towards a macro, as you said.",,
2.34343E+17,Johnny#3826,2020-10-01,"Just as a side note, you could perhaps attach this to the function's meta",,
2.34343E+17,Johnny#3826,2020-10-01,I think in some cases it already has a key for the source code,,
4.47679E+17,nuvolari#9542,2020-10-01,"@Johnny Ooh, that's an idea, I'll play around with that, thank you.",,
4.47679E+17,nuvolari#9542,2020-10-01,thank you also @Lonely ᜋᜒᜌᜓ/Myrl but they/them 🙂,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-10-01,No problem. :9_Yay:,,
1.89169E+17,srasu#0042,2020-10-01,for clarity you can pass the unevaluated form to a function by quoting it.,,
1.89169E+17,srasu#0042,2020-10-01,If you were to pass the function form directly then when you're calling the function the original source has long since been thrown away and the only thing that remains is the function object.,,
1.89169E+17,srasu#0042,2020-10-01,This is why macros exist however.,,
1.89169E+17,srasu#0042,2020-10-01,"you could have this:
```clojure
(defmacro foo [pred & args]
  `{:fn-source '~pred
    :ret (~pred ~@args)})

(foo (fn [x] x) 5)
; => {:fn-source (fn [x] x), :ret 5}
```",,
4.47679E+17,nuvolari#9542,2020-10-01,🙏  @srasu that makes sense and exactly what I was trying to do. I'm new to macros and all the macro characters doesn't make it exactly easy if one doesn't understand them fully yet.,,
1.89169E+17,srasu#0042,2020-10-01,macros take a while to grok for sure.,,
1.89169E+17,srasu#0042,2020-10-01,Took me about a year and a half with clojure to grok 'em,,
4.47679E+17,nuvolari#9542,2020-10-01,What I've gathered so far is to use them sparingly.,,
1.89169E+17,srasu#0042,2020-10-01,"So generally there are two reasons to use them. One is to provide a dsl, where you work in the sub-language to express things for a very specific problem space. The other reason is to make a cleaner interface to existing exposed functionality.",,
1.89169E+17,srasu#0042,2020-10-01,"There are more possible reasons, like reduced duplication, performance implications, etc, but those are the two biggest.",,
1.89169E+17,srasu#0042,2020-10-01,"Of course once you're making a DSL though, you have to be careful in how you design it, because the default in dsl land is to lose all the power of the clojure standard library and others. You have to be careful in your design to keep that power around.",,
1.89169E+17,srasu#0042,2020-10-01,"Oh also another good use for them is introducing new flow control constructs, like how core.async adds macros to add multiprocess flow control, or how in one of my discord bots I introduced a regex pattern matching flow control.",,
4.47679E+17,nuvolari#9542,2020-10-01,"Phew, I think I figured some of it out... of course your example didn't work for my case 😆  The `~args` and `~@x` got me.",,
2.62313E+17,agumonkey#6435,2020-10-01,"in this https://www.youtube.com/watch?v=o2MLHFGUkoQ the host shows that clojure unit testing does output diff between expected value and computed value, is it part of clojure core test behavior or is it from another layer ? (cider.. )",,
2.67464E+17,SlashDevSlashRandom#2112,2020-10-01,"clojure.test output from `lein test`
```
FAIL in (my-awesome-test) (awesome_test.clj:8)
expected: (= 3 (+ 2 2))
  actual: (not (= 3 4))

Ran 1 tests containing 1 assertions.
1 failures, 0 errors.
Tests failed.
```",,
2.62313E+17,agumonkey#6435,2020-10-01,oh thx,,
2.67464E+17,SlashDevSlashRandom#2112,2020-10-01,"@agumonkey I just skimmed over the video, and I'm guessing that the diff shown comes from <https://github.com/pjstadig/humane-test-output> or something similar",,🦊 (1)
1.0336E+17,seek+#9484,2020-10-07,https://github.com/arcadia-unity/ArcadiaGodot,,
1.0336E+17,seek+#9484,2020-10-07,"selfsame finished version 1.0 of ArcadiaGodot, so you can use Clojure to program games and applications in the Godot engine now. It's pretty sick",,
1.89169E+17,srasu#0042,2020-10-07,awesome,,
1.36557E+17,Softnum#7400,2020-10-07,oh cool,,
7.65284E+17,gargaml#4063,2020-10-12,Hi,,
7.65284E+17,gargaml#4063,2020-10-12,I'm using hugsql to work with postgresql but I need to handle jsonb data,,
7.65284E+17,gargaml#4063,2020-10-12,"I'm sure that I need to use clojure.java.jdbc related features to do this but I don't know how things fit together, does anyone have a pointer about this?",,
2.47614E+17,"David, The Tuna King#6860",2020-10-12,"There is honeysql postgres library that implements protocols for json serialization, you might want to look how its done there.",,
7.65284E+17,gargaml#4063,2020-10-13,"@David, The Tuna King thank you I'm gonna take a look at this",,
7.65284E+17,gargaml#4063,2020-10-13,I actually found some protocols to work with json in the meantime,,
7.65284E+17,gargaml#4063,2020-10-13,and now the main issue I have is related to the integration of jsonb specific functions with hugsql but I'm still experimenting,,
2.47614E+17,"David, The Tuna King#6860",2020-10-13,I think you need to use raw sql for that,,
7.65284E+17,gargaml#4063,2020-10-13,"yes, with hugsql/db-run I managed to set and update jsonb columns",,
7.65284E+17,gargaml#4063,2020-10-13,do you know if there is an intrinsic limitation or is it just something we could work on to improve hugsql DSL?,,
2.47614E+17,"David, The Tuna King#6860",2020-10-13,"i dont know really, i use honeysql personally, but i`ve had that problem with json/jsonb 🙂",,
2.64626E+17,django#9749,2020-10-24,"Hey guys, do y'all know a good open source project that uses fulcro?",,
7.35241E+17,Epirealer#0094,2020-10-31,"hiya! I have this pattern (which is maybe not at all ""correct"", but...) where I kick off a core.async go-loop that will periodically fetch data from somewhere and put the result on a channel that's created in the function. I want to stop the fetch job when I close the returned channel. Since there's no way of knowing if a channel is closed or not other than putting something on the channel, I need to do that to test if the channel is still open.

This gist illustrates what I'm trying to do, I hope: https://gist.github.com/andersenleo/d3b990a9241bf8ed69765cad02829e7c

Is there a more ""standard"" way in core.async to solve situations like this?",,
1.89169E+17,srasu#0042,2020-10-31,"Have a second channel which denotes when it should close, use alts to take on that and the timeout, if you take on the closing channel, stop",,
7.35241E+17,Epirealer#0094,2020-10-31,"thanks 👍  - I've used that approach as well, but I would like to avoid the user of the function to juggle multiple return channels :/
An exit-channel would make the usage look something like
`(let [[status-ch exit-ch] (status-chan the-host)] ....)`
, right?",,
1.89169E+17,srasu#0042,2020-10-31,"Ah, I see.",,
1.89169E+17,srasu#0042,2020-10-31,"I see why you dislike that, but having returns like that isn't really unidiomatic",,
7.35241E+17,Epirealer#0094,2020-10-31,"It would be ""nicer"" to just control the polling by closing the channel. But, maybe that's not standard conventions in core.async?",,
1.89169E+17,srasu#0042,2020-10-31,"I mean do whatever feels right, as long as you document it",,
7.35241E+17,Epirealer#0094,2020-10-31,"Well, there's something that doesn't feel right with my ""probe"" transducer thingy either.. so 🙂",,
7.35241E+17,Epirealer#0094,2020-10-31,I will try out the exit-channel pattern.. it will make the function actually doing the work less complex. Thanks for the feedback 👍,,
1.89169E+17,srasu#0042,2020-10-31,No problem!,,
7.35241E+17,Epirealer#0094,2020-10-31,"So, something like this instead? https://gist.github.com/andersenleo/d3b990a9241bf8ed69765cad02829e7c#file-with-exit-chan-clj",,
7.35241E+17,Epirealer#0094,2020-10-31,"(that will work when closing the exit-ch, or sending anything on it. Obviously I should close the `out`  channel as well.. )",,
1.89169E+17,srasu#0042,2020-10-31,Yup!,,
1.89169E+17,srasu#0042,2020-10-31,"Also as for needing to close the out chan, I don't know if that affects anything",,
1.89169E+17,srasu#0042,2020-10-31,Like I can't think of a particular reason to,,
1.89169E+17,srasu#0042,2020-10-31,It'll just get garbage collected eventually,,
7.35241E+17,Epirealer#0094,2020-10-31,"ah, that's true. I have this notion of a channel as something that ""lives"" and have a lifecycle that needs to be properly maintained. But it's just a normal data structure (like a BlockingQueue) and the ""magic"" happens in `>! and <!` , right?",,
1.89169E+17,srasu#0042,2020-10-31,"Anything that doesn't explicitly open a socket, file, or other system resource in that manner will be handled by the garbage collector. Channels aren't a resource you can ""leak""",,
1.89169E+17,srasu#0042,2020-10-31,The real magic happens in `go`,,
1.89169E+17,srasu#0042,2020-10-31,`>!` and `<!` are translated by `go` into a special operation,,
1.89169E+17,srasu#0042,2020-10-31,the actual `>!` and `<!` functions just throw exceptions,,
7.35241E+17,Epirealer#0094,2020-10-31,neat.. I've never really dug down into the source code of core.async. Just did.. 🙂 Interesting but scary 👍,,
1.89169E+17,srasu#0042,2020-10-31,"Yeah, it's crazy",,
1.89169E+17,srasu#0042,2020-10-31,Trying to support scheduling on the threads without messing with other jvm code is complex,,
3.80151E+17,Riley#0544,2020-11-10,How do your know when to use relational programming?,,
3.80151E+17,Riley#0544,2020-11-10,"I've been thinking when you need something bidirectional it's worth considering, like translating data shapes? But I'm having trouble with core logic+hash maps",,
2.64626E+17,django#9749,2020-11-15,What do you guys usually use for websockets in clojure?,,
1.89169E+17,srasu#0042,2020-11-15,for server so far I've used gniazdo,,
1.89169E+17,srasu#0042,2020-11-15,http-kit also has ws stuff,,
1.89169E+17,srasu#0042,2020-11-15,sente is also good,,
1.36557E+17,Softnum#7400,2020-11-15,I've alwyas used chord,,
1.36557E+17,Softnum#7400,2020-11-15,https://github.com/jarohen/chord,,
1.85203E+17,Infracano#2397,2020-11-15,"If it's cljs, sente or chord. 
For clj, aleph",,
2.64626E+17,django#9749,2020-11-16,Thanks guys,,
1.74283E+17,libertea#5784,2020-12-03,"yo total noob here, ive been trying to do this for an hour now and i feel like im hitting my head against a wall. i just want to have 1 file with some functions in it and another file that calls functions from the first file. how does one do this? i know lein exists and i know how to use it but i dont want to make a new project for a simple script",,
2.34343E+17,Johnny#3826,2020-12-03,how do you run the script?,,
2.34343E+17,Johnny#3826,2020-12-03,I think the regular clj cli tools can do that easily,,
2.34343E+17,Johnny#3826,2020-12-03,"otherwise, if you're lazy, you can also just use `load-file`",,
1.74283E+17,libertea#5784,2020-12-03,i really dont want to use load file and im using clj,,
2.67464E+17,SlashDevSlashRandom#2112,2020-12-03,"a short answer is that is each of those files would create a namespace containing the functions, and then the calling namespace would :require the called namespace",,
1.74283E+17,libertea#5784,2020-12-03,i want to use good practices but like its frustrating because this is a non-issue in python where i come from,,
1.74283E+17,libertea#5784,2020-12-03,im doing that and its not working,,
2.67464E+17,SlashDevSlashRandom#2112,2020-12-03,"""it's not working"" is typically difficult to troubleshoot - are you getting an error message?",,
1.89169E+17,srasu#0042,2020-12-03,`require`,,
1.89169E+17,srasu#0042,2020-12-03,you're looking for `require`,,
1.74283E+17,libertea#5784,2020-12-03,"ye sorry just getting the error here
```
Syntax error (FileNotFoundException) compiling at (C:\Users\lugi1\Clojure\AdventOfCode\.\Day3Problem1.clj:4:1).
file (The system cannot find the file specified)
```",,
1.74283E+17,libertea#5784,2020-12-03,"```clojure
(ns Day3Problem1
    (:require [GetFile]))

(print (GetFile/get-file ""day3""))
```",,
1.74283E+17,libertea#5784,2020-12-03,i am using require,,
1.74283E+17,libertea#5784,2020-12-03,"```clojure
(ns GetFile
    (:require [clojure.java.io :as io]))

(defn get-file [file]
    (slurp (clojure.java.io/file ""file"")))
```
ig i should post this too",,
1.89169E+17,srasu#0042,2020-12-03,"and the file structure? My first instinct says the file named ""file"" is missing",,
1.89169E+17,srasu#0042,2020-12-03,"you probably don't want quotes around ""file"" on line four of GetFile.clj",,
1.74283E+17,libertea#5784,2020-12-03,oh my goodness i didnt even notice i forgot to get rid of that,,
1.74283E+17,libertea#5784,2020-12-03,yup that was it,,
1.74283E+17,libertea#5784,2020-12-03,excuse my non sense errors thank you @srasu,,
1.89169E+17,srasu#0042,2020-12-03,no problem!,,
2.52891E+17,assburgers#6171,2020-12-03,"Hey guys still learning the basics here, I got a list I need to transform into a list of strs so I can visit them and do some cool stuff to them",,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
((https://github.com/mattiase/xr) (https://github.com/ch11ng/xelb) (https://github.com/ilohmar/wconf) (https://github.com/tlikonen/wcheck-mode))
```",,
2.52891E+17,assburgers#6171,2020-12-03,This is the list that gets printed at the end but whenever I map with the str function it returns something like this,,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
(clojure.lang.LazySeq@23a0c240 clojure.lang.LazySeq@11e37ce9 clojure.lang.LazySeq@c118d603 clojure.lang.LazySeq@5bdab2bb)

```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"```clojure
user=> (def a '((https://github.com/mattiase/xr) (https://github.com/ch11ng/xelb) (https://github.com/ilohmar/wconf) (https://github.com/tlikonen/wcheck-mode)))
#'user/a
user=> (map str a)
(""(https://github.com/mattiase/xr)"" ""(https://github.com/ch11ng/xelb)"" ""(https://github.com/ilohmar/wconf)"" ""(https://github.com/tlikonen/wcheck-mode)"")
```",,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
(print all-links ""\n"")
(print (map str all-links))
```
This is what I did in my code just now",,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
WARNING: When invoking clojure.main, use -M
((https://github.com/mattiase/xr) (https://github.com/ch11ng/xelb) (https://github.com/ilohmar/wconf) (https://github.com/tlikonen/wcheck-mode)) 
(clojure.lang.LazySeq@23a0c240 clojure.lang.LazySeq@11e37ce9 clojure.lang.LazySeq@c118d603 clojure.lang.LazySeq@5bdab2bb)
```",,
2.52891E+17,assburgers#6171,2020-12-03,This is what I get back,,
2.52891E+17,assburgers#6171,2020-12-03,fixed it,,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
(print (map #(apply str %) all-links))
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"That kinda makes sense, though, is not exactly what you want.",,
2.52891E+17,assburgers#6171,2020-12-03,why?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"That yields you a list of concatenated strings, in the case that your producer function doesn't return only a single string in a list.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"```clojure
user=> (map #(apply str %) '((https://foo https://bar)))
(""https://foohttps://bar"")
```",,
2.52891E+17,assburgers#6171,2020-12-03,I dont see the difference between what u just send and what I just send,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"Yeah, I showed you a case where it's possible that's not the output you want.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"If that's the output you want, then my bad.",,
2.52891E+17,assburgers#6171,2020-12-03,let me try,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"```clojure
user=> (lazy-seq '(a))
(a)
user=> (str (lazy-seq '(a)))
""clojure.lang.LazySeq@9e37928f""
user=> (str (seq (lazy-seq '(a))))
""(a)""
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,I guess for reference.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,This is another weird thing about the REPL oof,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"Oh, it doesn't seem like it's the REPL, but `str` not trivially recursing through any seqable.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"```clojure
user=> (str (list (lazy-seq '(a))))
""((a))""
user=> (str (lazy-seq '(a)))
""clojure.lang.LazySeq@9e37928f""
```",,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
((https://github.com/mattiase/xr) (https://github.com/ch11ng/xelb)) 
(https://github.com/mattiase/xr https://github.com/ch11ng/xelb)
```",,
2.52891E+17,assburgers#6171,2020-12-03,this is what my script outputs when given two,,
2.52891E+17,assburgers#6171,2020-12-03,is this what you meant?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"Nope, just to clarify. Why do you have a list of singletons rather than a list of the strings themselves?",,
2.52891E+17,assburgers#6171,2020-12-03,"I first map over a list pass it to another func which does filtering etc, and returns a item in a list",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"Oh okay, but the inner list will always have either 0 or 1 element?",,
2.52891E+17,assburgers#6171,2020-12-03,yes,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"You might want to instead use `mapcat` then. Personally, I'd use for-comprehension though.",,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
(print (map str (flatten all-links)))
```",,
2.52891E+17,assburgers#6171,2020-12-03,this also works,,
2.52891E+17,assburgers#6171,2020-12-03,flattening the entire list first,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,Can you show me how you calculated all-links?,,
2.52891E+17,assburgers#6171,2020-12-03,I first read from a file which is full of data such as this:,,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
(:url . https://elpa.gnu.org/packages/zones.html)
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"Oh okay, so it's a sexp file?",,
2.52891E+17,assburgers#6171,2020-12-03,no text plain,,
2.52891E+17,assburgers#6171,2020-12-03,just clj data dumped in,,
2.52891E+17,assburgers#6171,2020-12-03,this implimentation was done by someone else so cant change that part,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,Ah,,
2.52891E+17,assburgers#6171,2020-12-03,I sorta parse it and filter out the stuff I care about by doing this:,,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
(defn return-extras
  ""find the extras and return url list""
  [package-meta]
  (nth package-meta (inc (.indexOf package-meta :extras))))
```",,
2.52891E+17,assburgers#6171,2020-12-03,this func returns a list and most of the time this list is at the end of it this,,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
(defn github?
  ""find the github url if it has one""
  [extras-list]
  (->> (filter #(= :url (nth %1 0) ) extras-list )
       (flatten)
       (filter #(str-pk/starts-with? (str %) ""https://github""))))
```",,
2.52891E+17,assburgers#6171,2020-12-03,"final func which returns the final list we were looking at
here I filter out and try to get the url list and check if its a github one, thats it",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"Yep, I see now! And yeah, I see why you're returning a list of list.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,How is `github?` called?,,
2.52891E+17,assburgers#6171,2020-12-03,here sudo coded : (and then map str func (github? (return-extras (take 10 (readfile path) ) ) ) ),,
2.52891E+17,assburgers#6171,2020-12-03,Any more suggestions?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"Yeah. So if I'm understanding correctly, your `github?` will either return `'()` or `'(https://github...)`, right?",,
2.52891E+17,assburgers#6171,2020-12-03,Yeah,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"Hm, can you show me the actual function call you do for `github?`",,
2.52891E+17,assburgers#6171,2020-12-03,"```clj
(filter #(not (empty? %)) (map github?
                                    (map return-extras
                                        (take 10
                                            (read-file ""./out/meta-info"")))) )
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,Thanks.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"Try this:
```clojure
(mapcat github? (map return-extras (take 10 (read-file ""./out/meta-info""))))
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,And then from `(map str (flatten all-links))` -> `(map str all-links)` (your original),,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"Personally, I'd rewrite `github?` to return either `""https://github.com...` or `nil` and then use `(keep github? ...)` It's pretty cool, and is a weaker form of `mapcat`.",,
2.52891E+17,assburgers#6171,2020-12-03,I never heard of keep,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"```clojure
user=> (keep (fn [x] (if (= x 1) nil x)) '(0 1 2))
(0 2)
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,Example usage. ^^,,
2.52891E+17,assburgers#6171,2020-12-03,so it filters out the non-nills?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"```clojure
user=> (defn except-1 [x] (if (= x 1) nil x))
#'user/except-1
user=> (except-1 0)
0
user=> (except-1 1)
nil
user=> (except-1 2)
2
user=> (keep #'except-1 '(0 1 2))
(0 2)
```",,
2.52891E+17,assburgers#6171,2020-12-03,Awhh I see,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,The nice thing about this is that it trivially works with `if-let` and the like.,,
2.52891E+17,assburgers#6171,2020-12-03,I see,,
2.52891E+17,assburgers#6171,2020-12-03,thanks a bunch btw,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-03,"No problem. ^^ Also, I see Emacs-related links. I love Emacs.",,
2.52891E+17,assburgers#6171,2020-12-03,😉,,
3.29023E+17,nixin72#3554,2020-12-07,"So I knew that Clojure *encouraged* immutability, but I'd never had a *use case* in Clojure for mutation until yesterday doing advent of code. And so I just found out, after months of using Clojure, that you just straight up can't mutate a variable declared in a `let`, unless you make it an `atom` and `swap!` it, and I was shocked lol",,
2.67464E+17,SlashDevSlashRandom#2112,2020-12-07,"semantically, they're generally referred to as 'bindings' and not 'variables', at least in part for that reason - they can't vary :)",,
3.29023E+17,nixin72#3554,2020-12-07,That makes sense. I just can't believe I didn't know this until now after spending so much time writing code in Clojure 😂,,
1.89169E+17,srasu#0042,2020-12-07,"Actually if the mutable value doesn't escape the function it's in, and you don't use any multithreading, you can use a volatile",,
1.89169E+17,srasu#0042,2020-12-07,"volatiles are atoms but without any synchronization, so they're more efficient.",,
3.29023E+17,nixin72#3554,2020-12-07,"Oh cool, okay. Yea, I'm not doing anything multi-threaded atm, so I'll keep that in mind, thanks!",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-07,"I kinda want to add more to this. Throughout the runtime, you can actually change what a binding binds to. Now, this isn't exactly useful in Clojure, because it's uh... ""parenthetically"" scoped, but it's useful for languages such as Rust. Example:
```clojure
user=> (let [x 1] x)
1
user=> (let [x 1 x (+ 1 x)] x)
2
```
But yeah, useless, you don't really want to write a let expression like this.

Except... for a very prominent case where rebinding is useful.
`loop` and `recur`!",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2020-12-07,(Rebinding is probably better known as shadowing?),,
1.89169E+17,srasu#0042,2020-12-07,I use shadowing all the time,,
4.7822E+17,Hashi#1455,2020-12-30,What libraries would be pretty standard in creating high quality graphql apis? I'm new to Clojure and fairly confused on what libraries to use.,,
4.7822E+17,Hashi#1455,2020-12-30,It looks like I would need to combine a billion libraries into one lol,,
1.89169E+17,srasu#0042,2020-12-30,The walmart labs graphql lib looks good to me,,
1.89169E+17,srasu#0042,2020-12-30,https://github.com/walmartlabs/lacinia,,
1.89169E+17,srasu#0042,2020-12-30,@Hashi,,
4.7822E+17,Hashi#1455,2020-12-30,"But with this I also need to find an http and routing library, right?",,
2.67464E+17,SlashDevSlashRandom#2112,2020-12-30,"there's a companion library that ties lacinia into pedestal (presumably that's what walmart labs uses, so that's what they built the integration with)",,
2.67464E+17,SlashDevSlashRandom#2112,2020-12-30,"An attribute that might present a different experience in the Clojure ecosystem is a widely-referenced mantra of 'libraries over frameworks'. There's a philosphy of composing the simple things you want to compose for your use case, as opposed to (to exaggerate) having to include a huge serialization library that handles six different data formats in order to parse 10 lines of JSON",,
1.89169E+17,srasu#0042,2020-12-30,"The one downside of this is like you say, the need to piece together several libraries.",,
1.89169E+17,srasu#0042,2020-12-30,The way we can get around that is with project templates which bring together a set of libraries with a project structure.,,
1.89169E+17,srasu#0042,2020-12-30,But I don't personally use those that I remember.,,
1.53415E+17,West#7965,2020-12-30,Meta-libraries,,
4.7822E+17,Hashi#1455,2020-12-30,Ah interesting,,
4.7822E+17,Hashi#1455,2020-12-30,I'll deff try lacinia pedestal :)],,
4.96119E+17,Munchable Cracker#7501,2020-12-31,How do you reassign a variable made using the def function?,,
1.89169E+17,srasu#0042,2020-12-31,"Well in Clojure you don't want to mutate things in most cases. The main usecase for reassigning a def is changes at development time
However, if you really need to do it, look at `alter-var-root`",,
2.34343E+17,Johnny#3826,2020-12-31,"Yeah, it's not on the same level as saying `foo = 4` in Python or something",,
2.34343E+17,Johnny#3826,2020-12-31,And you shouldn't use it like that,,
1.89169E+17,srasu#0042,2020-12-31,"Although saying ""don't do that"" without providing an alternative feels pretty stack-overflow-ey to me.",,
1.89169E+17,srasu#0042,2020-12-31,The general way you do variables is with local bindings using `let` in clojure.,,
1.89169E+17,srasu#0042,2020-12-31,"If you want to change the value, you just use the same binding name with a new expression to give it a value",,
1.89169E+17,srasu#0042,2020-12-31,"```clojure
(let [a 4]
  (println a)
  (let [a (+ a 7)]
    (println a)))
```",,
1.89169E+17,srasu#0042,2020-12-31,This is valid,,
1.89169E+17,srasu#0042,2020-12-31,"Generally though, the times you'll want to rebind something will be less like this, and more like trying to rebind a value that is mutated over the course of a loop.",,
1.89169E+17,srasu#0042,2020-12-31,"In those cases, just use the loop bindings with `recur`",,
4.96119E+17,Munchable Cracker#7501,2020-12-31,okay thank you,,
9.73164E+16,Sideman#2350,2020-12-31,"```clojure
(defn question-3 [data]
  (let [all-months-values (collection-of-each-month-averages data)
        averages nil]
    (doseq [[k v] all-months-values]
      (assoc-in averages [k] 1))
    averages))
```
why doesn't this change averages?
```clojure
(question-3 met-data)
=> nil
```",,
7.16316E+17,ajoberstar#1229,2020-12-31,"@Sideman Clojure doesn't mutate bindings so nothing would ""change"" the value of averages besides a new binding that shadows it. The other issue is that doseq is meant more for side-effecting work, and will always return nil. 

```
(let [x nil
      y (assoc x :a 1)
      z (assoc y :b 2)]
  [x y z])
=> [nil {:a 1} {:a 1 :b 2}]
```
Notice that x never changed but you can accumulate new values with later expressions.",,
1.89169E+17,srasu#0042,2020-12-31,"If you want to do this with an accumulator and a loop, you would do it like so:
```clojure
(loop [averages nil
       all-month-values (each-month-averages data)]
    (if (seq all-month-values)
      (recur (assoc averages (key (first all-month-values)) 1)
             (rest all-month-values))
      averages))
```",,
1.89169E+17,srasu#0042,2020-12-31,But this sort of thing can be done more easily with `reduce` or `reduce-kv`,,
9.73164E+16,Sideman#2350,2020-12-31,"ah thanks guys, I still haven't got my head around reduce 
```clojure
(reduce (fn [[k v]] (assoc averages k 1) {} all-months-values)
```",,
9.73164E+16,Sideman#2350,2020-12-31,would it look something like this?,,
7.16316E+17,ajoberstar#1229,2020-12-31,"Close. Reduce takes a function of two arguments, first is the accumulator and second is the next value in the sequence.

```clojure
(reduce (fn [averages [k _]] (assoc averages k 1)) {} all-months-values)
```",,
7.16316E+17,ajoberstar#1229,2020-12-31,The return value of the function is the first argument the next time it's called,,
9.73164E+16,Sideman#2350,2020-12-31,https://tenor.com/view/kevin-durant-real-mvp-you-the-real-gif-4088269,,😋 (1)
3.09342E+17,zavtrak#2248,2021-01-01,Hello people . I came here post watching this wonderfully crafted video by James Trunk. https://www.youtube.com/watch?v=C-kF25fWTO8,,
2.67464E+17,SlashDevSlashRandom#2112,2021-01-01,welcome,,
1.75666E+17,JEEPUPPER#4725,2021-01-03,https://github.com/linpengcheng/PurefunctionPipelineDataflow,,
4.5114E+17,haapi#5745,2021-01-17,Thank you for an excellent succinct description of reduce.,,
1.88391E+17,raptor#8606,2021-01-23,"Can someone give me examples of cases where encapsulating functions in a complex multi-arity or variadic function would be more useful/efficient compared to defining multiple explicit functions? 
The multiple functions seem like they would be more clear and separated, so what would be the value of combining everything?",,👀 (1)
2.67464E+17,SlashDevSlashRandom#2112,2021-01-23,`reduce` might be an example,,
2.67464E+17,SlashDevSlashRandom#2112,2021-01-23,"I'd say that ""the value of combining everything"" could, in some cases, be to make the multiple cases not separated - if they're two variants of the same behavior. For a trivial example, whether we're computing the intersection of three sets or eight sets, we're still computing the intersection of a collection of sets",,👍 (1)
1.89169E+17,srasu#0042,2021-01-23,"If all of the different arities fundamentally do the same thing, and don't need separate documentation besides mentioning an extra parameter, and there's little to no code duplication because one of the arities calls the other, then there's no reason to define multiple names.",,👍 (1)
1.89169E+17,srasu#0042,2021-01-23,Names are precious. Don't waste them.,,
3.584E+17,RyanGST#3579,2021-01-26,"Hey so I'm learning Clojure and I'm wondering why we can redefine variables using def if they are immutable?  If someone kept using def throughout the code on the same name, wouldn't that go against functional philosophy?",,
2.34343E+17,Johnny#3826,2021-01-26,"Yeah, so multiple `def`s for the same var isn't something you should do, usually",,
2.34343E+17,Johnny#3826,2021-01-26,"There are *some* rare situations where you might want to change the value of a var, but you'd rather do that using `alter-var-root`",,
2.34343E+17,Johnny#3826,2021-01-26,"But if you're just looking for a way to handle ""global state"" or something (e.g. a global map that should be updated) you can take a look at `atom`, `ref` and `agent`",,👌 (1)
2.34343E+17,Johnny#3826,2021-01-26,"Rather than changing the actual value of a `def` binding or similar, you often use those reference types which are basically containers for values and you can swap the values with new values",,
2.34343E+17,Johnny#3826,2021-01-26,hope that makes sense,,
3.584E+17,RyanGST#3579,2021-01-26,"That makes sense.
So state can be changed over time in an atom, is there a way f view this history of change?",,
2.34343E+17,Johnny#3826,2021-01-26,"Don't think so, but you could do this yourself fairly easily I think",,
2.34343E+17,Johnny#3826,2021-01-26,"check out `add-watch`, you could use that to keep track of changes and store a history somewhere",,
2.67464E+17,SlashDevSlashRandom#2112,2021-01-26,"I put together a little POC using a watch that does undo and redo on an atom in like 25 lines, and naturally, that involves tracking the history",,
8.08358E+17,finchharold#5539,2021-02-08,Anyone active?,,
4.09909E+17,xorgy#1337,2021-02-08,@finchharold  here is probably as good as any.,,
4.09909E+17,xorgy#1337,2021-02-08,"the other guys are probably pretending to be affected by covid or politics or something, don't mind them.",,
8.08358E+17,finchharold#5539,2021-02-08,Okay,,
8.08358E+17,finchharold#5539,2021-02-08,Wait a min,,
8.08358E+17,finchharold#5539,2021-02-08,I’m sending the gist,,
4.09909E+17,xorgy#1337,2021-02-08,mmk cool,,
8.08358E+17,finchharold#5539,2021-02-08,query and mutation are working,,
8.08358E+17,finchharold#5539,2021-02-08,"for subscription this is the error:
Execution error - invalid arguments to com.walmartlabs.lacinia.schema/compile at (schema.clj:1797).
:chatroom-name-streamer - failed: (re-matches graphql-identifier (name %)) at: [:schema :subscriptions 0] spec: :com.walmartlabs.lacinia.schema/graphql-identifier",,
4.09909E+17,xorgy#1337,2021-02-08,alright hmm,,
4.09909E+17,xorgy#1337,2021-02-08,looks like you're passing it a value to :chatroom-name-streamer that is not recognized,,
4.09909E+17,xorgy#1337,2021-02-08,specifically passing that to the `compile` macro,,
8.08358E+17,finchharold#5539,2021-02-08,Ohkay... so....?,,
4.09909E+17,xorgy#1337,2021-02-08,"read the code at the entry point, in lacinia's schema.clj",,
4.09909E+17,xorgy#1337,2021-02-08,"looks like it even gave you a line number, 1797",,
4.09909E+17,xorgy#1337,2021-02-08,"and maybe, for your sanity, pprint a copy of what you're passing to the compile macro, so you can tell what it _is_ getting",,
4.09909E+17,xorgy#1337,2021-02-08,and not just _what you think_ it's getting,,
8.08358E+17,finchharold#5539,2021-02-08,It’s can’t be a line number coz the whole code is of 83 lines,,
4.09909E+17,xorgy#1337,2021-02-08,that's _your_ schema.clj,,
8.08358E+17,finchharold#5539,2021-02-08,Haa,,
4.09909E+17,xorgy#1337,2021-02-08,there's a schema.clj somewher else though maybe,,
4.09909E+17,xorgy#1337,2021-02-08,"maybe I'm misreading the error, but it seems like they have one too?",,
8.08358E+17,finchharold#5539,2021-02-08,No only one file,,
4.09909E+17,xorgy#1337,2021-02-08,https://github.com/walmartlabs/lacinia/blob/master/src/com/walmartlabs/lacinia/schema.clj,,
8.08358E+17,finchharold#5539,2021-02-08,I guess something wrong in the chatroom-name-streamer,,
4.09909E+17,xorgy#1337,2021-02-08,https://github.com/walmartlabs/lacinia/blob/master/src/com/walmartlabs/lacinia/schema.clj#L1797,,
8.08358E+17,finchharold#5539,2021-02-08,The thing is mutation helps us to rename the chat room and subscription should update the changes in real-time,,
4.09909E+17,xorgy#1337,2021-02-08,"this is where it's throwing, which is a bit unhelpful",,
4.09909E+17,xorgy#1337,2021-02-08,"but you at least know your config is being rejected inside schema.clj, in the function compile",,
4.09909E+17,xorgy#1337,2021-02-08,https://github.com/walmartlabs/lacinia/blob/master/src/com/walmartlabs/lacinia/schema.clj#L1754 << here is schema/compile,,
4.09909E+17,xorgy#1337,2021-02-08,this is the function where it is throwing,,
4.09909E+17,xorgy#1337,2021-02-08,it's confusing to you because _they_ also have a _schema.clj_,,
8.08358E+17,finchharold#5539,2021-02-08,Ohkay but what does the error mean? I thought the subscriptions are written the same way mutations are except for the streamer func,,
4.09909E+17,xorgy#1337,2021-02-08,"I have no idea what those things are anymore, but your arguments to the compile function fail the spec",,
4.09909E+17,xorgy#1337,2021-02-08,it is telling you exactly which key fails,,
4.09909E+17,xorgy#1337,2021-02-08,so you just need to make sure that that key is what they want,,
8.08358E+17,finchharold#5539,2021-02-08,Maybe I should add the key as an argument at the stream-map?,,
4.09909E+17,xorgy#1337,2021-02-08,I don't strictly know,,
4.09909E+17,xorgy#1337,2021-02-08,but let me know how your debugging goes with this information in hand :+ ),,
8.08358E+17,finchharold#5539,2021-02-08,Haa sure do,,
8.08358E+17,finchharold#5539,2021-02-08,Thank you,,
4.09909E+17,xorgy#1337,2021-02-08,and don't hesitate to @mention me here. I am at work but I take breaks.,,
8.08358E+17,finchharold#5539,2021-02-08,It’s working mate @xorgy 🥳,,
8.08358E+17,finchharold#5539,2021-02-08,"In chatroom-name-streamer, (get @chatrooms [id :title]) should be (get-in @chatrooms [id :title])",,
4.09909E+17,xorgy#1337,2021-02-08,nice :+ ),,
4.09909E+17,xorgy#1337,2021-02-08,kinda subtle but important,,
3.29023E+17,nixin72#3554,2021-02-12,"Okay, so I'm finally getting around to playing with GraalVM, and my first impressions aren't as bad as I was expecting. I had a friend who gave it a shot months ago and had a super bad time with it, so I had low expectations, but I wanted to see just how much better the performance was for short lived programs. So comparing Clojure GraalVM native comp to various other lisps for a program that reads a list of 100 numbers from a text file and sorts them as numbers, and outputs a native executable
```
| Compiler                         | Executable size (MB) | time (ms) | 
|----------------------------------|----------------------|-----------|
| Clojure - GraalVM native image   | 7.7                  | 2.1       |
| Clojure - JVM                    | 4.4                  | 1908      |
| SBCL                             | 37                   | 2.8       |
| Racket                           | 1.5                  | 150.2     |
```
So the Clojure AOT executable is a little bigger than Clojure JIT as a `.jar` file and bigger than a Racket executable, but still way smaller than SBCL images and faster than SBCL, which is awesome. I have 0 optimization options turned on anywhere, so SBCL would be much faster than Clojure for this, but still, Clojure AOT did pretty good! I think that it meets my expectations in both binary size and performance for small CLI utilities. Racket has always been too slow for me since it needs to startup the VM, which is only 100ms, but still, that's noticeable on a terminal, and SBCL images are way too big to consider building small CLI tools in.

I've always shied away from lisps for CLI programs because nothing was sufficiently small in binary size and fast in execution speed, but Clojure + GraalVM fits the bill for me, so I'm gonna start giving it a shot for building some small tools",,❤️ (1)
3.29023E+17,nixin72#3554,2021-02-12,"Since I've been sufficiently impressed by this, I'm gonna try out the interop with LLVM, which is the part of GraalVM that my friend spoke the worst of. If I can get Rust interop working with Clojure, that would be incredible. It would be awesome to be able to write performance critical code in Rust and call it from Clojure",,
2.34343E+17,Johnny#3826,2021-02-13,interesting,,
2.34343E+17,Johnny#3826,2021-02-13,Where is the data for the GraalVM native image though?,,
2.34343E+17,Johnny#3826,2021-02-13,"Note that for Rust interop, another option could be the JNI (although it would be understandable if you didn't want to use that)",,
3.29023E+17,nixin72#3554,2021-02-13,"> where is the data for the GraalVM native image though?

What do you mean by this? 

> Note that for Rust interop, another option could be the JNI

For sure. GraalVM is just supposed to make the interop easier, but it might come at some costs too. Maybe for a real application Clojure + JNI for Rust would actually be more performant, idk. I'd need to see a bigger benchmarking effort for long lived application than I'm willing to do myself hahah",,
2.34343E+17,Johnny#3826,2021-02-13,"> What do you mean by this? 
maybe I'm reading your message wrong, you said you wanted to compare Graal Clojure with other ways/lisps but I don't see Graal in the table",,
3.29023E+17,nixin72#3554,2021-02-13,"Oh, that was the `Clojure AOT` row and `Clojure JIT` was just a normal .jar file.",,
2.34343E+17,Johnny#3826,2021-02-13,ah,,
2.34343E+17,Johnny#3826,2021-02-13,"I thought by AOT you meant compiling it to a jar and JIT using the clojure ""interpreter"" directly",,
3.29023E+17,nixin72#3554,2021-02-13,"Oh I see, no, I guess that was a little unclear though. That's from the GraalVM native image",,
3.29023E+17,nixin72#3554,2021-02-13,"There, I updated the table to be more specific",,
3.29023E+17,nixin72#3554,2021-02-13,"Is there a way to read one character at a time from the terminal in Clojure? For example, you have a loop that prints every character you type as you type it and then exit when you press `q` or something? I found this Stack Overflow answer that looks like it should be doing exactly that, but when I run the code it doesn't work, it only prints the character back when I hit enter https://stackoverflow.com/questions/58571928/how-can-i-read-a-single-character-from-stdin-in-clojure",,
6.54227E+17,esnyder#7558,2021-02-13,@nixin72 the clojure cookbook has this exact scenario in it (although I haven't tried the code) at https://github.com/clojure-cookbook/clojure-cookbook/blob/master/04_local-io/4-02_read-unbuffered-keystroke.asciidoc,,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-13,"so, as I understand it, it's somewhat limited by the capabilities exposed by the JVM, however in the Clojure cookbook, this exact question comes up... let me go dig that book out",,
6.54227E+17,esnyder#7558,2021-02-13,@SlashDevSlashRandom  hah! 🙂,,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-13,<https://github.com/jline/jline3> is the successor to jline2,,
3.29023E+17,nixin72#3554,2021-02-13,"Yea, I saw that, and I'll use that if I can't find something else, but that version of the jline library is pretty old, and in version 3 they got rid of the ConsoleReader class and I can't find the alternative functionality for this in jline3",,
1.89169E+17,srasu#0042,2021-02-13,"terminals are kinda finicky, unless you're actually intercepting all keypresses, it tends to only submit anything to the buffer when a newline is entered.",,
3.29023E+17,nixin72#3554,2021-02-13,"Yea, they're surprisingly though to work with sometimes lol",,
1.89169E+17,srasu#0042,2021-02-13,for sure,,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-13,"<https://stackoverflow.com/a/47554285> has an example for jline3 (just found it, no promises as to efficacy)",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-13,but jline3 does talk about including jansi or jna for systems that aren't *nix,,
3.29023E+17,nixin72#3554,2021-02-13,"Yea, the Stack Overflow answer I shared above is pretty much the same as what you have there",,
3.29023E+17,nixin72#3554,2021-02-13,"Yea, same problem occurs, it won't do anything until I press enter, and then it treats it like I entered all of these separately and prints all the characters on their own line",,
3.29023E+17,nixin72#3554,2021-02-13,"Hmm, so I've been running in Emacs term, but when I run this in alacritty I get this warning: `WARNING: Unable to create a system terminal, creating a dumb terminal (enable debug logging for more information)`",,
3.29023E+17,nixin72#3554,2021-02-13,Which I wasn't getting in Emacs term,,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-13,"seems like it might be something specific to the setup - I took that code from your SO answer and played around with it a bit, and it seems to work (I also included jansi in the project)",,
3.29023E+17,nixin72#3554,2021-02-13,"Hmm, I'm not sure what it would be related to setup... I literally just created a new project, added the dependency and pasted that code in :/",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-13,"well, I think that jline uses 'native' stuff (for example, on my windoze machine, I included jansi, which has native stuff in it), so perhaps it's something about how jline uses whatever it uses to get a terminal on your system",,
3.29023E+17,nixin72#3554,2021-02-13,"Hmm, well I'll look into just calling the `stty` command using the shell library to do this, since I only really care about this working on Linux.",,
3.29023E+17,nixin72#3554,2021-02-13,Use the stty command to get the shell to enter raw mode and then see what I can do from there I guess?,,
3.29023E+17,nixin72#3554,2021-02-13,"Actually, I'll see if jCurses has anything for this first",,
3.29023E+17,nixin72#3554,2021-02-13,"Oh, looks like using the jline2 example actually works fine, so I'll just use that",,
3.29023E+17,nixin72#3554,2021-02-15,"Hi, can anyone point out why this wouldn't be working? 
```clj
(ns helloworld.handler
  (:require
   [compojure.core :refer [GET context defroutes]]
   [compojure.route :as route]
   [ring.util.response :refer [response]]
   [ring.middleware.defaults :refer [wrap-defaults api-defaults]]))

(defroutes api-routes
  (GET ""/test"" [] [{:test ""test""}]))

(defroutes app-routes
  (context ""/api"" [] api-routes)
  (GET ""/"" [] ""test"")
  (route/not-found ""Not Found""))

(def app
  (wrap-defaults app-routes api-defaults))
```
When I go to `localhost:3000/api/test` I get the error below. When I have that route not wrapped in a vector and trying to return an object instead, then my browser interprets this as trying to download an octet stream file. If this is using the `api-defaults` ring middleware, then why isn't this being sent as json in the response as one would expect?",https://cdn.discordapp.com/attachments/315388260987830272/811001450879516702/unknown.png,
2.34343E+17,Johnny#3826,2021-02-15,What leads you to expect that this would be handled/treated as json automatically?,,
2.34343E+17,Johnny#3826,2021-02-15,you probably want something like this https://github.com/ring-clojure/ring-json,,
3.29023E+17,nixin72#3554,2021-02-15,"Oh shoot, I'm so dumb, I was mixing up two things... I thought I read something saying the ring-json library was deprecated in favour of the `ring.middleware.defaults/wrap-api`, but I was confusing that with something from compojure. Sorry about that...",,
2.34343E+17,Johnny#3826,2021-02-15,"ah yeah, apparently not",,
7.88903E+17,AttentionAaron#7462,2021-02-18,"`rseq` > `reverse` for vectors.

```
(def nums (vec (range 1000000)))
(time (reverse nums))
;; ""Elapsed time: 39.5188 msecs""
(time (rseq nums)) ;; rseq reverses in constant time vectors and sorted maps.
;; ""Elapsed time: 0.0481 msecs""
```
And `peek` > `last` for vectors.
```
(time (last nums))
;; ""Elapsed time: 63.8486 msecs""
(time (peek nums))
;; ""Elapsed time: 0.052901 msecs""
```
Also, @Johnny, your pfp is amazing.",,
3.29023E+17,nixin72#3554,2021-02-18,"Is there a way with Cider to reload your `project.clj` to get any new dependencies? I usually just kill cider and restart it, but it'd be nice if I didn't have to do that",,
7.88903E+17,AttentionAaron#7462,2021-02-18,I think you can  `cider-jack-in` again w/o killing it,,
3.29023E+17,nixin72#3554,2021-02-18,"Okay, thanks!",,🙂 (1)
1.89169E+17,srasu#0042,2021-02-18,Are you taking into account realization of the full sequence?,,
7.88903E+17,AttentionAaron#7462,2021-02-18,"No, I'm not.",,
1.89169E+17,srasu#0042,2021-02-18,"Okay. I do see that rseq for vectors etc is constant time, but I am genuinely curious if the constant time fetch is the full price paid",,
7.88903E+17,AttentionAaron#7462,2021-02-18,"I'm trying to see where, like `map`, you can get some of the reversed elements w/o realizing the full thing. I'm not seeing it yet.
```
(time (take 2 (reverse blah)))
;; ""Elapsed time: 1.321599 msecs""
(time (take 2 (rseq blah)))
;; ""Elapsed time: 0.5469 msecs""
```",,
1.89169E+17,srasu#0042,2021-02-18,fair enough,,
6.54227E+17,esnyder#7558,2021-02-19,"I'm trying to figure out what, specifically, is pulling in a given dependency package. If I do ```DEBUG=true lein classpath``` I can see it tell me when it's downloading a particular jar, but what I want to know is *why* it's picking it. Any advice?",,
6.54227E+17,esnyder#7558,2021-02-19,"So, my problem was something was pulling in a [re-com/re-com ""2.8.0""] dependency, when I was trying to use my fork by explicitly adding [esnyder/re-com ""2.12.0-stuff-SNAPSHOT""] to the dependencies section. I basically did a binary search by adding ':exclude [re-com/re-com]' to all the dependency listings half at a time, running 'lein classpath' and seeing if the re-com/re-com 2.8.0 was still there, lather/rinse/repeat. I feel like I must be missing an obvious way of figuring this out?",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-19,"I believe that lein still uses pomegranate, so I don't think lein actually makes the decision (e.g. it's still bound to pomegranate's decision-making there). You might want to look at the pomegranate library docs to see if they provide a mechanism to 'trace' the dependency resolution",,
6.54227E+17,esnyder#7558,2021-02-19,@SlashDevSlashRandom thanks for the pomegranate pointer. Turns out I just had to clear my head w/ a nights sleep enough to think to google 'lein dependency tree' and immediately found https://github.com/the-kenny/lein-deps-tree which works like a charm 🙂,,
2.34343E+17,Johnny#3826,2021-02-19,I think this is a built in command now,,
2.34343E+17,Johnny#3826,2021-02-19,`lein deps :tree` if I'm not mistaken,,
2.34343E+17,Johnny#3826,2021-02-19,"> Also, @Johnny, your pfp is amazing
@AttentionAaron
Thx :blob_smile:",,
6.54227E+17,esnyder#7558,2021-02-19,"@Johnny Ahh, even better, thanks!",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-19,"is there a macro or library with a macro that's something like `some->`, but allows conveying more info - I might be overthinking this, but I want to do something like a short-circuiting monadic thing that bails on an error-ish state with error info - a probably poor idea is having the threaded things return `[:ok ...]` or `[:error ...]`, and treat `:error` kind of like `some->` treats nil",,
3.29023E+17,nixin72#3554,2021-02-19,Is there a way to bring in a github repo as a dependency in lein?,,
3.29023E+17,nixin72#3554,2021-02-19,"I see lein-vroom, but that was last updated almost 2 years ago",,
6.54227E+17,esnyder#7558,2021-02-19,"@nixin72 I just tried out reifyhealth/lein-git-down today and it's working great for me. (I'm just using public repo access, not ssh)",,
3.29023E+17,nixin72#3554,2021-02-19,"Thanks, I literally just found that and was going to say if it works for me!",,
3.29023E+17,nixin72#3554,2021-02-19,Did you have to do anything to get the repo you installed working? I'm trying to use https://github.com/LightTable/fetch but when I do `(:require [fetch.remotes :refer [defremotes])` I get a FileNotFoundException finding `fetch.remotes`,,
3.29023E+17,nixin72#3554,2021-02-19,"Actually, I'm guessing it didn't install properly... Not sure where Clojure install packages to, so idk how to check that...",,
3.29023E+17,nixin72#3554,2021-02-19,Huh...,,
3.29023E+17,nixin72#3554,2021-02-19,"So in my `~/.m2/repositories` I have a directory for fetch, but it's empty",,
3.29023E+17,nixin72#3554,2021-02-19,"Well, it technically goes `~/.m2/repositories/fetch/fetch/0.4.0/` and then that's empty, but still...",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-19,did you add the github coordinate alias thing?,,
3.29023E+17,nixin72#3554,2021-02-19,"Yea, here's the relevant parts of my `defproject`:
```clj
  :dependencies [[LightTable/fetch ""ec9ccb95665c6f267fc13af2f3083c5d452a8ce3""]]
  :plugins [[reifyhealth/lein-git-down ""0.4.0""]]
  :middleware [lein-git-down.plugin/inject-properties]
  :repositories [[""public-github"" {:url ""https://github.com""}]]
  :git-down {fetch {:coordinates LightTable/fetch}}
```",,
3.29023E+17,nixin72#3554,2021-02-19,And here's the commit: https://github.com/LightTable/fetch/commit/ec9ccb95665c6f267fc13af2f3083c5d452a8ce3,,
3.29023E+17,nixin72#3554,2021-02-19,Same SHA,,
3.29023E+17,nixin72#3554,2021-02-19,"And the error lein is giving me
```
Could not find artifact LightTable:fetch:jar:ec9ccb95665c6f267fc13af2f3083c5d452a8ce3 in central (https://repo1.maven.org/maven2/)
Could not find artifact LightTable:fetch:jar:ec9ccb95665c6f267fc13af2f3083c5d452a8ce3 in clojars (https://repo.clojars.org/)
Could not find artifact LightTable:fetch:jar:ec9ccb95665c6f267fc13af2f3083c5d452a8ce3 in public-github (https://github.com)
This could be due to a typo in :dependencies, file system permissions, or network issues.
If you are behind a proxy, try setting the 'http_proxy' environment variable.
Error encountered performing task 'do' with profile(s): 'dev'
Suppressed exit
```",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-19,then I think your dependency needs to be called 'fetch'?,,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-19,"in the example from the git down github page:
```clojure
    :dependencies [[clj-time ""66ea91e68583e7ee246d375859414b9a9b7aba57""]
                   [cheshire ""c79ebaa3f56c365a1810f80617c80a3b62999701""]
                   [org.clojure/clojure ""1.9.0""]]
    :repositories [[""public-github"" {:url ""git://github.com""}]]
    :git-down {cheshire {:coordinates dakrone/cheshire}})
```",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-19,"it seems like that uses 'cheshire' in deps, and then aliases that to the github coordinates",,
3.29023E+17,nixin72#3554,2021-02-19,"Nope, same error, just with the name change:
```
Could not find artifact fetch:fetch:jar:ec9ccb95665c6f267fc13af2f3083c5d452a8ce3 in central (https://repo1.maven.org/maven2/)
Could not find artifact fetch:fetch:jar:ec9ccb95665c6f267fc13af2f3083c5d452a8ce3 in clojars (https://repo.clojars.org/)
Could not find artifact fetch:fetch:jar:ec9ccb95665c6f267fc13af2f3083c5d452a8ce3 in public-github (https://github.com)
This could be due to a typo in :dependencies, file system permissions, or network issues.
If you are behind a proxy, try setting the 'http_proxy' environment variable.
Error encountered performing task 'do' with profile(s): 'dev'
Suppressed exit
```",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-19,I'm totally just guessing though - no idea if that's the cause,,
3.29023E+17,nixin72#3554,2021-02-19,"I'll try targeting the release tag instead of commit and see if that works - it's just an older release, so it's not ideal",,
3.29023E+17,nixin72#3554,2021-02-19,Oh that just points to a commit though,,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-19,another just guessing/observation - the example uses `git://github.com` instead of `https://` - no idea if that's relevant to how the plugin does what it does,,
3.29023E+17,nixin72#3554,2021-02-19,It says you should be able to use either SSH or HTTP - but maybe it's cause it's HTTPS?,,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-19,"and I know this isn't really your question, but on the off chance that this intrigues you, tools.deps allows for git dependencies",,
3.29023E+17,nixin72#3554,2021-02-19,"Ohhh no, I needed to have that as `{:url ""git://github.com"" :protocol :https}` instead of `{:url ""https://github.com""}`",,
3.29023E+17,nixin72#3554,2021-02-19,"Idk why it treats those two things differently, cause the later makes a lot more sense to me, but it's installed now",,
3.29023E+17,nixin72#3554,2021-02-19,I'll look into `tools.deps`,,
3.29023E+17,nixin72#3554,2021-02-19,And of course the example code in the README for this lib doesn't even work 🤦,,
5.2015E+17,bevo#3607,2021-02-20,"Hi everybody, clojure noob here
Is there a way/command to clear the environment/variables,
without disconnecting/reconnecting the REPL server?
Just seeing if there's a faster way I've missed
I'm using calva on vscode fwiw
I use `Calva: Load Current File and Dependencies` to reload the file,
but the prior variables still exist
Thanks 🙂",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-20,"One way to approach this is <https://github.com/clojure/tools.namespace> - the readme has a lot of info on rationale, how to use the library, and even a link to a blog post about the author's workflow. There are more basic (without a library) ways to do it, but they can get hairy because of cross-namespace dependencies and stuff (some of these reasons are listed on that readme page). If you know what bindings you want to remove, you can look at `ns-unmap` and/or `remove-ns`, but I definitely recommend looking at the clojuredocs examples for those functions to see the caveats associated with them.",,
8.08358E+17,finchharold#5539,2021-02-22,Anyone knows lacinia-pedestal?,,
3.29023E+17,nixin72#3554,2021-02-24,"So I'm trying to upload an Excel spreadsheet to my server and inspect it on the server, but I'm running into a weird issue. I'm using this library https://github.com/mjul/docjure for it. So I do exactly what the library says:
```clj
(with-open [stream (io/input-stream file)]
    (println stream)
    (-> (load-workbook stream)))
```
But this gives me the following error: `java.lang.ClassCastException: java.io.BufferedInputStream cannot be cast to java.lang.String`
Now, `stream` here is a `BufferedInputStream` which is a subclass of `InputStream`. Now, `load-workbook` is a multimethod which accepts either a string or an `InputStream`. So why is it trying to cast my `BufferedInputStream` to a string instead of calling the `InputStream` version of the method? Does the type need to match exactly? Do I need to cast this to an `InputStream`? Now, it's been a while since I've done Java, but I don't think that should be necessary lol",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-24,"looks like the multimethod's dispatch fn is `class`, so I would assume that it needs to match exactly, because the multimethod mechanism is just going to use equality semantics",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-24,"because multimethods are arbitrary dispatch, so I don't think they have a specialized ""if the dispatch function is `class`, then do `instance?` checks on all the implementations""",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-24,"you could get the InputStream from the buffered one you have in hand, or you could extend the multimethod for BufferedInputStream",,
3.29023E+17,nixin72#3554,2021-02-24,"Ahh okay, I've not worked with multimethods before, so didn't know how they dispatched. Thanks!",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-24,"one could probably argue that, given the 86 (made-up number) different `Stream` variants, that particular function might have been better served by a protocol, which I'm pretty sure would take all of the messy hierarchy into account (but there may well be contradicting rationale... I'm taking quite a narrow view)",,
3.29023E+17,nixin72#3554,2021-02-24,"Hmm, so I'm trying to cast it to an `InputStream`, but it's not doing anything. 
```clj
(with-open [stream (io/input-stream file)]
    (println (cast java.io.InputStream stream))
    (-> (cast java.io.InputStream stream)
        load-workbook))
```
Gives the same error and the object printed above is a `BufferedInputStream`. How do you cast in Clojure? There's very little about it on clojuredocs.org",,
3.29023E+17,nixin72#3554,2021-02-24,"Or at least, how do you up-cast to a parent class? Maybe that's different?",,
2.34343E+17,Johnny#3826,2021-02-24,"Casting is never necessary in clojure, since it only affects the type checker (which clojure doesn't have)",,
2.34343E+17,Johnny#3826,2021-02-24,I'll take a look in a minute,,
2.34343E+17,Johnny#3826,2021-02-24,"Okay, I cannot reproduce your issue.",,
2.34343E+17,Johnny#3826,2021-02-24,"It works fine for me, as it should",,
2.34343E+17,Johnny#3826,2021-02-24,which version of docjure are you using? @nixin72,,
3.29023E+17,nixin72#3554,2021-02-24,Using `1.7.0`,,
2.34343E+17,Johnny#3826,2021-02-24,latest version is 1.14.0,,
2.34343E+17,Johnny#3826,2021-02-24,might want to use that,,
3.29023E+17,nixin72#3554,2021-02-24,"Ahh yea, that's old lol...",,
2.34343E+17,Johnny#3826,2021-02-24,"also in case you didn't know, you don't need to open an input stream yourself",,
3.29023E+17,nixin72#3554,2021-02-24,What do you mean?,,
2.34343E+17,Johnny#3826,2021-02-24,I mean that `load-workbook` accepts a file name,,
2.34343E+17,Johnny#3826,2021-02-24,or `load-workbook-from-file`,,
3.29023E+17,nixin72#3554,2021-02-24,"Oh yea, I realize that the variable name `file` was poorly chosen cause I don't have a file name, I'm getting the file from multipart form data from a client",,
2.34343E+17,Johnny#3826,2021-02-24,ah,,
2.34343E+17,Johnny#3826,2021-02-24,"but yeah, just to clear that up: the values multimethods dispatch on can have a hierarchy",,
2.34343E+17,Johnny#3826,2021-02-24,"and in the case of `Class` objects, that hierarchy works already as you'd expect",,
3.29023E+17,nixin72#3554,2021-02-24,"Yea, I'm guessing the old version I was using that wasn't a multimethod",,
2.34343E+17,Johnny#3826,2021-02-24,maybe,,
3.29023E+17,nixin72#3554,2021-02-24,"Hmm, so now my front-end is claiming that the server is throwing a 500 error, but there's no exception getting thrown anywhere... Well, looks like the first problem was fixed at least! Thank you!",,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-24,"well I'll be damned - I knew you could set up a hierarchy with multimethods, but I didn't think class hierarchies were used by default",,
1.89169E+17,srasu#0042,2021-02-26,"no, multimethods work with inheritance",,
1.89169E+17,srasu#0042,2021-02-26,they use the `isa?` function to check,,
2.67464E+17,SlashDevSlashRandom#2112,2021-02-26,"yep, I think the rest of the convo shows that we came to that conclusion",,
6.54227E+17,esnyder#7558,2021-02-26,I'm having a hard time wrapping my head around all the ring middleware on my clojure backend; is there some way to easily see what the final stack of middleware that's getting applied to a given request is?,,
3.29023E+17,nixin72#3554,2021-02-26,What should I use for creating websockets on my server in Clojure?,,
2.34343E+17,Johnny#3826,2021-02-26,Sente seems good,,
2.34343E+17,Johnny#3826,2021-02-26,Although I haven't used it yet,,
3.29023E+17,nixin72#3554,2021-02-26,"Awesome, thanks! Looking to mess around with serving HTML components over websockets instead of having a heavy re-frame front-end",,
6.54227E+17,esnyder#7558,2021-02-26,"@nixin72 interesting, I'm not sure I have a clear idea what you mean. What does the front end look like for that use case?",,
3.29023E+17,nixin72#3554,2021-02-26,"I read this article https://alistapart.com/article/the-future-of-web-software-is-html-over-websockets/ and wanted to try out the concept. The TL;DR is that React or other front-end frameworks are heavy and shift a lot of work onto the client while introducing extra complexity. So if you serve your HTML over websockets instead, then you can go back to server-side rendering and make the application faster, with all the benefits of a dynamic and reactive front-end",,
6.54227E+17,esnyder#7558,2021-02-26,@nixin72 thanks for the link,,
2.82883E+17,ArnavG#4789,2021-02-27,Have you tried out Hotwire?,,
3.29023E+17,nixin72#3554,2021-02-27,"Nope, never heard of it. But I'll check it out now",,
3.29023E+17,nixin72#3554,2021-02-27,"Oh, is this a Clojure thing, or are you referring to the Ruby library?",,
3.29023E+17,nixin72#3554,2021-02-27,Or something else hahah,,
3.29023E+17,nixin72#3554,2021-02-27,"Okay, looks like the Ruby library is what I was talking about, never mind hahah",,
2.82883E+17,ArnavG#4789,2021-02-27,I haven't tried it out yet but I'm pretty sure it's backend agnostic,,
4.08463E+17,imjoshellis#9504,2021-02-27,"Hotwire is language agnostic as far as I can tell, but built by Rails guy so all the examples and demos are in rails, which can be confusing",,
3.29023E+17,nixin72#3554,2021-02-27,"Ahh okay, I'll look into it some more then, it looks like it was rails specific",,
1.89169E+17,srasu#0042,2021-02-27,serverside websockets aren't bad in clojure,,
1.89169E+17,srasu#0042,2021-02-27,but the clientside libraries for JVM clojure on websockets are abysmal in selection,,
1.89169E+17,srasu#0042,2021-02-27,"gniazdo is the only one that's clojure, and it doesn't expose everything very well.",,
1.36557E+17,Softnum#7400,2021-02-27,"This approach only seems better if you have a completely homogenious user-agent (i.e. device-and-browser) landscape, otherwise it seems terrible.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,"Personal opinion, but pushing HTML is pretty eh.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,I guess there's also a huge *it depends on what you're doing*.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,Server-side rendering is always a huge + though.,,
1.36557E+17,Softnum#7400,2021-02-28,I feel like at least one big minus is the server needing to know what it's rendering for.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,"Like, if you're building a web endpoint for a physical interface, then that seems to be a wise choice actually.",,
1.36557E+17,Softnum#7400,2021-02-28,"IDK what you mean by ""physical interface""",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,I guess a better word for it would be IoT?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,"Sensors, smart lights, etc.",,
1.36557E+17,Softnum#7400,2021-02-28,I would think you would want your control language to not be HTML.,,
1.36557E+17,Softnum#7400,2021-02-28,Like a dumb kiosk sure,,
1.36557E+17,Softnum#7400,2021-02-28,but even at that point imo those should all be precompiled and materialized anyway,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,"There's also a Phoenix LiveView talk about building a chat client with the same concept. But like, idk. It's just really one huge tradeoff kinda thing. For some programs, development is way easier, for others, the abstraction falls apart.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,_wrote some program both on ClojureScript and Phoenix LiveView._,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,"I guess the TL;DR is ""is your program a PubSub? Then yeah, it kinda works.""",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,"Also, as for [quoted]. I'm not sure how to describe this, but I've seen some IoT stuff where you have control over your house through the internet. I find it gimmicky and sometimes even dangerous, but there's a market for that kinda thing.",,
1.36557E+17,Softnum#7400,2021-02-28,"Yeah.  Kinda like I lead with, if you know that your target HTML will never change how it's rendered or interpreted then I see some advantages.   But even in the chat example, it breaks down when someone wants ot use the API to wrote like a discord or IRC bridge.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,"Basically, a web endpoint(or a mobile app) is used as an interface kinda thing.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,"Okay, I guess a better example would be a status page/admin page.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,"Still interfacing, but not necessarily physical.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-02-28,I don't even know why I mentioned physical specifically even lmao,,
1.36557E+17,Softnum#7400,2021-02-28,lol,,
5.39603E+17,spacey 🌌#7238,2021-02-28,"hey friends, having a type issue with this code",,
5.39603E+17,spacey 🌌#7238,2021-02-28,"```clojure
(ns tutorial.coding-challenge-3)

(def items {""pen"" 100 ""notebook"" 150 ""backpack"" 1000})
(defn school-transaction
  [buyer merchant item]
  ""Function to buy items given amounts of money
  (each dollar 100) for buyer and merchant""
  (def buyer (ref (int buyer)))
  (def merchant (ref (int merchant)))
  ;; buying an item
  (dosync
    (ref-set buyer (- buyer item))
    (ref-set merchant (+ merchant item)))
  buyer merchant)

(println (school-transaction 1000 0 (items ""pen"")))
```",,
5.39603E+17,spacey 🌌#7238,2021-02-28,"getting this error: ```CompilerException java.lang.ClassCastException: class java.lang.Long cannot be cast to class clojure.lang.Ref (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.Ref is in unnamed module of loader 'app'), compiling:(/home/spacey/IdeaProjects/ClojureTutorial/src/tutorial/coding_challenge_3.clj:16:1) 
```",,
5.39603E+17,spacey 🌌#7238,2021-02-28,"even when i did not cast teh values to int, i was still having this issue. i'm using dosync because i want this code to simulate a simple banking transaction :)",,
5.39603E+17,spacey 🌌#7238,2021-02-28,am i using ref-set correctly? no clue what the issue(s) here are unfortunately,,
7.3362E+17,dharrigan#7430,2021-03-01,"If I may suggest, you're going to get horribly muddled up by def'ing within a form (deemed as not good practice) and also reusing the same names. Here are two examples of doing it a bit differently:",,
7.3362E+17,dharrigan#7430,2021-03-01,"```clojure
(def buyer (ref 1000))
(def merchant (ref 0))

(defn school-transaction-2
  [item-cost]
  (dosync
   (ref-set buyer (- @buyer item-cost))
   (ref-set merchant (+ @merchant item-cost))))

(school-transaction-2 (items ""pen""))

@buyer ;; #<Ref@2fa7b2c9: 900>
@merchant ;; #<Ref@1d874c7e: 100>
```",,
7.3362E+17,dharrigan#7430,2021-03-01,"Notice that I'm defining buyer and merchant outside of the function, then notice that in order to obtain the value of either buyer or merchant I need to ""deref"" the reference in obtain the value contained inside.",,💯 (1)
7.3362E+17,dharrigan#7430,2021-03-01,"Finally at the end, I'm simply deref'ing each var to show their current value (after I eval'ed the `(school-transaction-2 ,,,,)` form.",,
7.3362E+17,dharrigan#7430,2021-03-01,"If, you want to keep buyer and merchant *local* to the function, here is another example:",,
7.3362E+17,dharrigan#7430,2021-03-01,"```clojure
(defn school-transaction-3
  [buyer-initial merchant-initial item-cost]
  (let [buyer (ref buyer-initial)
        merchant (ref merchant-initial)]
    (dosync
     (ref-set buyer (- buyer-initial item-cost))
     (ref-set merchant (+ merchant-initial item-cost)))
    [@buyer @merchant]))

(school-transaction-3 1000 0 (items ""pen"")) ;; [900 100]
```",,
7.3362E+17,dharrigan#7430,2021-03-01,"It does the same thing, but keeps buyer and merchant local to the function. Finally, Clojure can't return multiple values from a function (as in your original example), instead you need to place the values in a collection (normally) so you can return multiple values (here I've placed them in a vector to return)",,
7.3362E+17,dharrigan#7430,2021-03-01,Hope that helps!,,
7.3362E+17,dharrigan#7430,2021-03-01,.,,
5.39603E+17,spacey 🌌#7238,2021-03-01,Amazing explanation; thanks for your help! :D,,
5.39603E+17,spacey 🌌#7238,2021-03-01,@dharrigan,,
1.31473E+17,wusticality#0397,2021-03-01,"Hey folks, is there a Clojure function that will transform `[:a :b :c :d]` to `[[:a :b] [:b :c] [:c :d]]`?",,
1.31473E+17,wusticality#0397,2021-03-01,"And also handle the case where there's a single element, aka `[:a] => [[:a nil]]`",,
1.31473E+17,wusticality#0397,2021-03-01,I can do it with `(map %1 (rest %1) [:a :b :c :d])`,,
1.31473E+17,wusticality#0397,2021-03-01,Doesn't work for a single element though I guess,,
1.36557E+17,Softnum#7400,2021-03-01,There's not a way to do it cleanly without creating some exception handling,,
1.36557E+17,Softnum#7400,2021-03-01,like `(partition 2 1 [:a :b :c :d])`,,
1.31473E+17,wusticality#0397,2021-03-01,"```clojure
(defn build-map [data]
  (case (count data)
    0 {}
    1 {(first data) #{}}
    (map vector data (rest data))))
```",,
1.31473E+17,wusticality#0397,2021-03-01,I did something like that,,
1.36557E+17,Softnum#7400,2021-03-01,Oh  I guess,,
1.36557E+17,Softnum#7400,2021-03-01,`(partition 2 1 [nil] [1])`,,
1.36557E+17,Softnum#7400,2021-03-01,works,,
1.36557E+17,Softnum#7400,2021-03-01,Well kinda,,
1.36557E+17,Softnum#7400,2021-03-01,it always fills with a nil,,
1.36557E+17,Softnum#7400,2021-03-01,cause it always runs out,,
1.36557E+17,Softnum#7400,2021-03-01,"but partition is what you are lookign for, anyway",,
1.31473E+17,wusticality#0397,2021-03-01,Lovely,,
1.31473E+17,wusticality#0397,2021-03-01,I'm coming from Emacs Lisp and having fun,,
1.31473E+17,wusticality#0397,2021-03-01,"As usual, there's 400 ways to do anything",,
1.36557E+17,Softnum#7400,2021-03-01,yus,,
1.31473E+17,wusticality#0397,2021-03-01,Will take awhile to write canonical Clojure I reckon,,
1.36557E+17,Softnum#7400,2021-03-01,golf is always possible. 🙂,,😫 (1)
1.31473E+17,wusticality#0397,2021-03-01,haha,,
7.3362E+17,dharrigan#7430,2021-03-02,I asked elsewhere and got this nice answer  `(->>  [:a :b :c :d] (partition 2 1) (mapv vec)) ;; [[:a :b] [:b :c] [:c :d]]`,,
1.36557E+17,Softnum#7400,2021-03-02,Oh fair if you really want vectors and not just lists/sequences,,
1.31473E+17,wusticality#0397,2021-03-02,"So being new to Clojure, I'm curious what the canonical way to do something like this is:",,
1.31473E+17,wusticality#0397,2021-03-02,"In an imperative language, say I wanted to traverse a graph data structure of some kind. Normally I'd write some depth / breadth-first traversal, passing a lambda that is called on each edge / node, and mutate state in some way (for example, collect costs, build a path through the graph, etc.)",,
1.31473E+17,wusticality#0397,2021-03-02,"But in Clojure, even if I passed a closure to a traversal method like this, I can't mutate state through the callback near as I can tell, I'd have to do something like this I guess:",,
1.31473E+17,wusticality#0397,2021-03-02,"`defn breadth-first-traversal [graph root f context]` - when traversing inside this function, I'd have to do like `(let [context (f root context)] ... context)` or something to actually mutate whatever I'm trying to do inside the lambda",,
1.31473E+17,wusticality#0397,2021-03-02,Is that a good approach?,,
2.34343E+17,Johnny#3826,2021-03-02,"If I'm understanding you correctly, this seems like a good approach, yes",,
2.34343E+17,Johnny#3826,2021-03-02,"The ""context"" being a value and f being a function that processes the previous context and the current root node into a new context value",,
2.34343E+17,Johnny#3826,2021-03-02,That's essentially a reduction,,
2.34343E+17,Johnny#3826,2021-03-02,though in the case of breadth-first-traversal it probably won't work exactly like that,,
1.31473E+17,wusticality#0397,2021-03-02,"Ok, that's good to know",,
1.31473E+17,wusticality#0397,2021-03-02,"Here, `f` could do any number of things, like construct the longest / shortest path, update costs in another data structure, etc.",,
1.31473E+17,wusticality#0397,2021-03-02,"I guess the high order bit is you have to pass the context to `breadth-first-traversal` and pipe it through `f` to mutate things, then return the context when finished",,
1.31473E+17,wusticality#0397,2021-03-02,It's definitely a different way of thinking haha,,
2.34343E+17,Johnny#3826,2021-03-02,"The important, functional part would be that there is no actual mutation",,
1.31473E+17,wusticality#0397,2021-03-02,You mean like side effects outside of the method through `f`?,,
1.31473E+17,wusticality#0397,2021-03-02,I guess you achieve mutation by resetting context through `f`,,
1.31473E+17,wusticality#0397,2021-03-02,"I'm losing my mind a bit here, I just added https://github.com/aysylu/loom to my `lein` dependencies and ran `lein deps` to grab it (I see it in `~/.m2`)",,
1.31473E+17,wusticality#0397,2021-03-02,"I can't figure out for the life of me how to import it, I tried `(:require [aysylu.loom :as loom])` to no avail",,
1.36557E+17,Softnum#7400,2021-03-02,are you putting that in the ns form?   Also we helped someone else recently in #beginners,,
1.31473E+17,wusticality#0397,2021-03-02,"Oh, my apologies, I'll post there next time",,
1.31473E+17,wusticality#0397,2021-03-02,"Yeah, looks like this:",,
1.36557E+17,Softnum#7400,2021-03-02,"Nono, just saying if you look there, there's some explanation. 🙂",,
1.31473E+17,wusticality#0397,2021-03-02,"```clojure
(ns whatever.core
  (:require [clojure.data.json :as json]
            [aysylu.loom :as loom])
  (:gen-class))
```",,
1.36557E+17,Softnum#7400,2021-03-02,"Peoplee ask for help all over herre, that'sss fine.",,
1.36557E+17,Softnum#7400,2021-03-02,that looks correct,,
1.36557E+17,Softnum#7400,2021-03-02,what isn't happpening that you expect?,,
1.31473E+17,wusticality#0397,2021-03-02,"```
1. Caused by java.io.FileNotFoundException
   Could not locate aysylu/loom__init.class, aysylu/loom.clj or aysylu/loom.cljc
   on classpath.
```",,
1.31473E+17,wusticality#0397,2021-03-02,I've restarted nrepl in cider completely within emacs,,
1.31473E+17,wusticality#0397,2021-03-02,I also see it here:,,
1.31473E+17,wusticality#0397,2021-03-02,,https://cdn.discordapp.com/attachments/315388260987830272/816476945382113330/unknown.png,
1.31473E+17,wusticality#0397,2021-03-02,It's definitely in that `~/.m2` folder,,
1.36557E+17,Softnum#7400,2021-03-02,"I think, looking at the docs, it wants you to use like aysylu.loom.graph",,
1.31473E+17,wusticality#0397,2021-03-02,Just tried that actually,,
1.31473E+17,wusticality#0397,2021-03-02,"```
1. Caused by java.io.FileNotFoundException
   Could not locate aysylu/loom/graph__init.class, aysylu/loom/graph.clj or
   aysylu/loom/graph.cljc on classpath.

```",,
1.36557E+17,Softnum#7400,2021-03-02,Try. just loom.graph,,
1.36557E+17,Softnum#7400,2021-03-02,like `[loom.graph :as gr]`,,
1.31473E+17,wusticality#0397,2021-03-02,Oh thank you thank you 🙂,,
1.31473E+17,wusticality#0397,2021-03-02,"May 10,000 Mary Jane leaves descend upon your countenance",,
1.36557E+17,Softnum#7400,2021-03-02,lol,,
1.31473E+17,wusticality#0397,2021-03-02,How are you to translate the package name `aysylu/loom` to the `require` name?,,
1.36557E+17,Softnum#7400,2021-03-02,Honestly in this instance I looked at the. git repo and pulled the path,,
1.36557E+17,Softnum#7400,2021-03-02,https://github.com/aysylu/loom/blob/master/src/loom/graph.cljc,,
1.89169E+17,srasu#0042,2021-03-02,"the package name and the namespaces have no direct relation. The artifact name is used to pull it from maven, but you have to look at the docs for what the namespaces are in it.",,
1.31473E+17,wusticality#0397,2021-03-02,Ah okay,,
1.31473E+17,wusticality#0397,2021-03-02,"I'm a C# / go guy, I've never used Java, but I do remember classpath nightmares before",,
1.36557E+17,Softnum#7400,2021-03-02,tbh I find go WAY worse,,
1.36557E+17,Softnum#7400,2021-03-02,but yeah.   nobody does it perfectly,,
1.31473E+17,wusticality#0397,2021-03-02,"Is there no mapping from on-disk folder name to namespace name? I thought like _'s -> .'s, and folder names become separated by dots",,
1.31473E+17,wusticality#0397,2021-03-02,but I digress,,
1.36557E+17,Softnum#7400,2021-03-02,Yeah,,
1.31473E+17,wusticality#0397,2021-03-02,"I gotta say, I find the namespace variations in clojure incredibly confusing, there are 400 ways to import things",,
1.31473E+17,wusticality#0397,2021-03-02,Tried importing `loom.alg` (which is definitely in there) but I got this error:,,
1.31473E+17,wusticality#0397,2021-03-02,"```
   Alias alg already exists in namespace whatever.core, aliasing
   loom.alg-generic
```",,
1.31473E+17,wusticality#0397,2021-03-02,"The docs say to use `loom.alg` though, odd",,
1.36557E+17,Softnum#7400,2021-03-02,huh,,
1.36557E+17,Softnum#7400,2021-03-02,what's your actual NS form now?,,
1.31473E+17,wusticality#0397,2021-03-02,"```
(ns whatever.core
  (:require [clojure.data.json :as json]
            [loom.graph :as graph]
            [loom.alg :as alg])
    (:gen-class))
```",,
1.31473E+17,wusticality#0397,2021-03-02,"strangely, I can write this: `(loom.alg/topsort g)`",,
1.36557E+17,Softnum#7400,2021-03-02,you can use like algr or someting tto avoid the alias collission,,
1.31473E+17,wusticality#0397,2021-03-02,er,,
1.31473E+17,wusticality#0397,2021-03-02,oooh,,
1.31473E+17,wusticality#0397,2021-03-02,How is `alg/` making it's way into my namespace then? through `loom.graph`?,,
1.36557E+17,Softnum#7400,2021-03-02,are you using a repl?,,
1.31473E+17,wusticality#0397,2021-03-02,"yeah, cider",,
1.31473E+17,wusticality#0397,2021-03-02,"(well, nrepl within cider)",,
1.36557E+17,Softnum#7400,2021-03-02,do like (dir alg) to see what it is,,
1.31473E+17,wusticality#0397,2021-03-02,"```
whatever.core> (dir alg)
->Ancestry
ancestor?
ancestors
..
```",,
1.36557E+17,Softnum#7400,2021-03-02,huh,,
1.31473E+17,wusticality#0397,2021-03-02,looks like it shows all the methods in there,,
1.36557E+17,Softnum#7400,2021-03-02,I guess it's getting imported.,,
1.36557E+17,Softnum#7400,2021-03-02,IDK library seems to be doing sometthing weird,,
1.31473E+17,wusticality#0397,2021-03-02,I'm just thankful that I can use it at all now 🙂,,
1.31473E+17,wusticality#0397,2021-03-02,Thanks again for your help mate,,
1.36557E+17,Softnum#7400,2021-03-02,np,,
1.89169E+17,srasu#0042,2021-03-02,"If you originally has an `:as alg` in some other require, and then evaluated this one, it would say that the `alg` alias is already used.",,
1.89169E+17,srasu#0042,2021-03-02,"In this case, it previously was bound to alg-generic",,
1.31473E+17,wusticality#0397,2021-03-02,You mean that `alg` was an alias inside `alg-generic`?,,
1.31473E+17,wusticality#0397,2021-03-02,"I would have assumed that that'd be private to `alg-generic`, huh",,
1.89169E+17,srasu#0042,2021-03-03,"No, I mean you previously used the `alg` alias for `alg-generic`. Clojure doesn't handle changing which namespace an alias points to at runtime.",,
1.89169E+17,srasu#0042,2021-03-03,@wusticality,,
2.52173E+17,kuh#3896,2021-03-05,"How can I do an assoc on a key only if the key doesnt already exist? Given a map
```
(def context {:something ""yo""})
```
So if `context` contains `:something` key, do nothing, otherwise assoc `:something """"`",,
2.52173E+17,kuh#3896,2021-03-05,so really I need to set `:something` to `{}` if the key does not exist in map,,
2.52173E+17,kuh#3896,2021-03-05,"I've come up with this:

```(defn assoc-if-key-nil [map key] 
  (cond-> map
        (not (key map)) (assoc key {})))```",,
3.46868E+17,djeis#0042,2021-03-05,"Couple ways, probably the cleanest is to use `merge` imo.",,
3.46868E+17,djeis#0042,2021-03-05,"`(merge {:something """"} context)`",,
3.46868E+17,djeis#0042,2021-03-05,The rightmost map wins if a key appears in both.,,
3.46868E+17,djeis#0042,2021-03-05,So I tend to use `(merge defaults provided-map)` fairly regularly when faced with that sort of cannonicalization issue.,,
2.52173E+17,kuh#3896,2021-03-05,Ah thank you I didnt know about merge,,
2.89113E+17,vishon05#4039,2021-03-13,"So I'm making a program with cljfx, and was wondering why doing `(get context :key)` would be returning `nil` when the context was created with a non-empty `:key`? It's along the lines of ```clojure
(def *context
  (atom 
    (fx/create-context {:key ""something""})))

;later on in the program, in a function

(println (get context :key))
``` where the `println` would output nil.",,
2.89113E+17,vishon05#4039,2021-03-13,Wait doesn't matter I'm dumb.,,👍 (1)
2.89113E+17,vishon05#4039,2021-03-13,Forgot I had to do `(fx/sub-val)`,,
8.08358E+17,finchharold#5539,2021-03-16,Anyone knows redis with clojure?,,
8.08358E+17,finchharold#5539,2021-03-16,The publish and subscribe stuff?,,
1.7086E+17,Shivek Khurana#6732,2021-03-16,"I'm working with CLJFX too, what does your setup look like?",,
8.08358E+17,finchharold#5539,2021-03-16,Do we need to create channels or something to use the pub/sub feature? Let’s say there’s a function that updates some data and puts the updated data into an atom. But instead of this how to use the pub/sub from Redis so that we can publish the changes and subscribe to those.,,
2.89113E+17,vishon05#4039,2021-03-16,Setup as in build tools?,,
1.7086E+17,Shivek Khurana#6732,2021-03-16,"Build tools, db integration, event management, packaging etc.",,
2.89113E+17,vishon05#4039,2021-03-16,Well the only thing I'm using is Leiningen right now.,,
2.89113E+17,vishon05#4039,2021-03-16,Not using a db.,,
2.89113E+17,vishon05#4039,2021-03-16,"I only really started doing the Clojure part of my app a couple days ago, so there's really not much right now.",,
2.67464E+17,SlashDevSlashRandom#2112,2021-03-16,"are you using a client library? `carmine` has some examples using pub/sub in their readme, and you could put some async channels in there if you wanted",,
8.08358E+17,finchharold#5539,2021-03-16,Can we use the pub/sub from redis along with the graphql subscriptions?,,
2.67464E+17,SlashDevSlashRandom#2112,2021-03-16,"that's a pretty vague question, so I'll say... probably",,
3.29023E+17,nixin72#3554,2021-03-17,"Probably a stretch, but does anyone know of X11 bindings for Java or Clojure?",,
2.67464E+17,SlashDevSlashRandom#2112,2021-03-17,"I found a really old java project called Escher, but it seems to be inactive, so if it does currently work, it might be sort of fragile to take on as a dependency",,
3.29023E+17,nixin72#3554,2021-03-17,"Ahh yea, last updated in 2013... I wonder if there's dotnet bindings, maybe ClojureCLR would be an option",,
3.29023E+17,nixin72#3554,2021-03-18,"Hi, I'm trying to add the Firebase SDK Java library to my Clojure project. They have a gradle and maven example https://firebase.google.com/docs/admin/setup?authuser=0#add-sdk, is there a way that I can add that with leiningen though?",,
2.34343E+17,Johnny#3826,2021-03-18,"yes, it's on maven central",,
2.34343E+17,Johnny#3826,2021-03-18,"you just add `[com.google.firebase/firebase-admin ""7.1.1""]`",,
3.29023E+17,nixin72#3554,2021-03-18,"Oh, I didn't realize I could install any Maven dependency like that! I thought I'd need a lein plugin or something",,
3.29023E+17,nixin72#3554,2021-03-18,Thanks!,,
2.34343E+17,Johnny#3826,2021-03-18,"Yeah, leiningen uses the maven repository format as well",,
2.34343E+17,Johnny#3826,2021-03-18,so does gradle,,
1.36557E+17,Softnum#7400,2021-03-18,"yeah, it's pretty convenient when doing polygot JVM targeting projects.",,
3.29023E+17,nixin72#3554,2021-03-18,"Yea, that's really nice 👍",,
2.89113E+17,vishon05#4039,2021-03-18,"Ppl, what's a good web sockets library for Clojure?",,
6.16969E+17,Loading BG#7962,2021-03-18,gniazdo,,
6.16969E+17,Loading BG#7962,2021-03-18,https://github.com/stalefruits/gniazdo,,
2.89113E+17,vishon05#4039,2021-03-18,"Looks nice, thanks!",,
1.89169E+17,srasu#0042,2021-03-18,"There are better ones if you're trying to communicate between a clojurescript frontend and a clojure backend, like sente, but as for clojure websocket clients, gniazdo is the only one without interop",,
2.89113E+17,vishon05#4039,2021-03-18,"Yeah, I'm tryna communicate between a Clojure front end and a C++ backend.",,
2.89113E+17,vishon05#4039,2021-03-18,"Wait I meant just plain sockets, not web sockets 🤦‍♂️",,
2.89113E+17,vishon05#4039,2021-03-18,Web sockets is for a different project I'm doing...,,
2.34343E+17,Johnny#3826,2021-03-18,But still tcp sockets?,,
1.89169E+17,srasu#0042,2021-03-18,"Aaah, so just straight tcp sockets",,
2.89113E+17,vishon05#4039,2021-03-18,Ye,,
2.34343E+17,Johnny#3826,2021-03-18,https://github.com/clj-commons/aleph,,
2.34343E+17,Johnny#3826,2021-03-18,Maybe this,,
1.89169E+17,srasu#0042,2021-03-18,https://github.com/bguthrie/async-sockets,,
2.34343E+17,Johnny#3826,2021-03-18,"I haven't used it in a project yet, but I've played around with it and read its docs",,
2.89113E+17,vishon05#4039,2021-03-18,"Hmm OK, seems cool.",,
1.89169E+17,srasu#0042,2021-03-18,"Ooooh, aleph seems really good",,
1.89169E+17,srasu#0042,2021-03-18,I like aleph,,
2.34343E+17,Johnny#3826,2021-03-18,What I find a bit difficult about aleph is the requirement to also understand the stream library manifold,,
1.89169E+17,srasu#0042,2021-03-18,manifold is interesting. I'd never quite understood the draw until 10 minutes ago when I was reading the rationale again,,
1.89169E+17,srasu#0042,2021-03-18,You can basically avoid it entirely if you just learn the `connect` function to just plug it into a core.async channel though.,,
1.89169E+17,srasu#0042,2021-03-18,which is probably what I'd do,,
2.89113E+17,vishon05#4039,2021-03-20,"Well I've tried a bunch now and this one is the only one I could seem to get working, thanks!",,
4.00613E+17,DrNoobopolis#6558,2021-03-21,"I am getting this error ""unable to resolve symbol deftest""",,
4.00613E+17,DrNoobopolis#6558,2021-03-21,"```clj
(:use 'clojure.test)

(defn lower [[lower-bound upper-bound]]
  [lower-bound (int (Math/floor (/ (+ lower-bound upper-bound) 2)))])

(deftest test-lower
  (is (= [0 63] (lower [0 127])))
  (is (= [32 47] (lower [32 63])))
  (is (= [44 45] (lower [44 47])))
  (is (= [44 44] (lower [44 45])))
  ;
  (is (= [4 5] (lower [4 7]))))

(run-tests)
```",,
7.90473E+17,kumarshantanu#7764,2021-03-23,"If this is in a Clojure source file, you need to fix `(:use 'clojure.test)` into an `ns` block, e.g. `(ns myapp (:use 'clojure.test))` and probably replace `(run-tests)` with some external test trigger, e.g. `lein test` (using Leiningen)",,
3.7825E+17,S4G4R#6989,2021-03-23,Hey guys. Is it possible to forcefully call the default multimethod within a multimethod?,,
3.7825E+17,S4G4R#6989,2021-03-23,"Something like :
```
(defmulti testing
  (fn [a b]
    (+ a b)))


(defmethod testing 3
  [_ _]
  ""Hello!""
  ;; Call :default method here
  )


(defmethod testing :default
  [_ _]
  ""Something else"")
```",,
2.67464E+17,SlashDevSlashRandom#2112,2021-03-23,"```clojure
(defmulti do-a-thing (partial +))

(defmethod do-a-thing 3 [_ _]
  (println ""Hello"")
  (let [default-fn (:default (methods do-a-thing))]
    (default-fn 0 0)))

(defmethod do-a-thing :default [_ _]
  (println ""default""))

(do-a-thing 1 2)
Hello
default
=> nil
```",,
3.7825E+17,S4G4R#6989,2021-03-23,Thanks! I will try this out.,,
4.72768E+17,Arnie#8338,2021-03-23,"Hello. How can I define a function within a function and then use it?

I have these:

```
(defn get-names
  [param1 param2 param3]

  ( ... do things))

(defn get-prices

  [param1 param2 param3]

  ( ... do things))

(defn get-info
  [args]

   (let [param1 (args :s)
        param2 (args :t)
        param3 (args :u)]
  (define first two functions here to use them so i don't need to pass down the same params all the time but can use them from here?)))
```

So get-names and get-prices would be inside my get-info instead of outside. Is that something that's doable?",,
2.34343E+17,Johnny#3826,2021-03-23,You could create an anonymous function that captures the local variables,,
2.34343E+17,Johnny#3826,2021-03-23,`(fn [] (get-names param1 param2 param3))`,,
1.89169E+17,srasu#0042,2021-03-23,`let` and `letfn`,,
1.7086E+17,Shivek Khurana#6732,2021-03-24,"Is there a problem calling `get-names` and `get-prices`?
```clojure
(defn get-info [{:keys [s t u] :as args}]
  (let [names (get-names s t u)
        prices (get-prices s t u)]
  ;; use names and prices
))
```",,
2.34343E+17,Johnny#3826,2021-03-24,I'm assuming the functions aren't pure,,
2.34343E+17,Johnny#3826,2021-03-24,"but if they are, yeah, that's the way to go obviously",,
4.72768E+17,Arnie#8338,2021-03-24,"@Shivek Khurana I did the lazy man's way here and just removed the functions to end up with this instead:

```
(defn get_info
  [args]

  (let [number-of-products (args :number-of-products)
        category (args :category)
        up-to-page (args :up-to-page)]

    (if (> up-to-page 10)
      (println (str ""Trying to scrape too many pages. Choose less or equal to 10""))
      (doseq [line (map #(str %1 "", "" %2)
                        (take number-of-products
                              (map html/text
                                   (html/select (url-content category up-to-page) [:div.product-list-link-text])))
                        (take number-of-products
                              (map html/text
                                   (html/select (url-content category up-to-page) [:span.product-list-price-span]))))]
        (println line)))))

```",,
1.7086E+17,Shivek Khurana#6732,2021-03-24,"This will get the job done, but I've seen better ways to write Clojure.",,
4.72768E+17,Arnie#8338,2021-03-24,"I have just started 2 days ago. Pretty new to it just learning, so any tips are welcome",,
2.67464E+17,SlashDevSlashRandom#2112,2021-03-24,"you could de-duplicate the `take` block into a function that just takes one argument, which would be the CSS(?) selector vector - I'm not sure exactly what `url-content` does, but especially if that actually pulls some page from the web, you could throw that into the let as well, so you don't end up re-building the same output `2 * up-to-page` times",,
1.7086E+17,Shivek Khurana#6732,2021-03-25,"You can get rid of the `let` block - less code needs less maintenance. You can use map destructuring:
```clojure
(defn get-info [{:keys [names-of-products category up-to-page]}]
  ;; use category, up-to-pages just like you did inside `let`
)```",,
1.7086E+17,Shivek Khurana#6732,2021-03-25,"As SlashDev suggested, `take` block can be a fn of its own:

```clojure
(defn take-html-el [count category up-to-page selector]
  (take count
    (map html/text
      (html/select (url-content category up-to-page) selector)))
```",,
1.7086E+17,Shivek Khurana#6732,2021-03-25,"And then your `if` block will become:
```clojure
(if (> up-to-page 10)
   (println (str ""Trying to scrape too many pages. Choose less or equal to 10""))
   (let [prefilled-take (partial take-html-el number-of-products category up-to-page)
         lines (map #(str %1 "", "" %2) 
                    (prefilled-take [:div.product-list-link-text])
                    (prefilled-take [:span.product-list-price-span]))]
     ;; do something with lines
))
```",,
1.7086E+17,Shivek Khurana#6732,2021-03-25,That's just syntax stuff.,,
1.7086E+17,Shivek Khurana#6732,2021-03-25,"In terms of thought process, I find usage of `prn` to be odd. You should aim to make functions pure. Instead of printing, return a map with keys `{:error ""Trying to scrape too many pages"" :lines []}`, and for success case, return lines `{:error nil :lines lines}`.

Let the caller decide what needs to be done with that data.",,
1.7086E+17,Shivek Khurana#6732,2021-03-25,(I might have missed some brackets in my examples),,
4.72768E+17,Arnie#8338,2021-03-25,Thanks 😊 will rework the code tonight,,
1.7086E+17,Shivek Khurana#6732,2021-03-25,"Great, all the best.",,
1.7086E+17,Shivek Khurana#6732,2021-03-25,"Clojure projects don't have the best docs, but you can learn a lot by reading existing code.",,
1.7086E+17,Shivek Khurana#6732,2021-03-25,"Read Rich's, Stu's, David Nolen's, Alex Miller's, Sean Connerfield's code. You might find some gems in there.",,👌🏻 (1)
8.08358E+17,finchharold#5539,2021-03-25,"Hey all, I’m trying to write a graphql API along with redis pub/sub functionality with lacinia and carmine.
According to the [docs](https://github.com/ptaoussanis/carmine#listeners--pubsub), I understood how the basic listener and channel initialization works.
`(def listener
  (car/with-new-pubsub-listener (:spec server1-conn)
    {""foobar"" (fn f1 [msg] (println ""Channel match: "" msg))}
   (car/subscribe  ""foobar"")))`
This is how the channel is made and we can publish data into this channel via
`(wcar* (car/publish ""foobar"" ""Hello to foobar!""))`",,
8.08358E+17,finchharold#5539,2021-03-25,"But how can we retrieve the data out of this channel? and what’s this part? What does that swap! line do?
`(with-open-listener listener
  (car/unsubscribe) ; Unsubscribe from every channel (leave patterns alone)
  (car/psubscribe ""an-extra-channel""))
(swap! (:state listener) assoc ""*extra*"" (fn [x] (println ""EXTRA: "" x)))`",,
5.91872E+17,Doggo#6233,2021-03-29,"I just tried installing Clojure today. I installed java (its in path) then installed clojure but running `clj` just shows me some blank input, the repl doesn't show up. Need help",,
5.91872E+17,Doggo#6233,2021-03-29,I also have rlwrap installed,,
5.91872E+17,Doggo#6233,2021-03-29,,https://cdn.discordapp.com/attachments/315388260987830272/826173412886970368/unknown.png,
5.91872E+17,Doggo#6233,2021-03-29,ah after waiting for a while it just did some stuff and now  it works,,
1.89169E+17,srasu#0042,2021-03-30,it may've been downloading deps,,
2.12318E+17,Gatewaytofreedom#1289,2021-03-31,"So I'm trying to do something rather trivial but I can't figure out where I went wrong.
I'm just trying to open a csv file using a java.io reader object but it says Cannot open <(""resources/test.csv"")> as an InputStream.",,
2.12318E+17,Gatewaytofreedom#1289,2021-03-31,"```clojure
(defn -main
  [& args]
  (println args)
  (with-open [reader (io/reader args)]
    (reduce conj [] (line-seq reader)))
```",,
2.67464E+17,SlashDevSlashRandom#2112,2021-03-31,"args is a list, so I think you need `first` or whatever to get the string from the list",,
2.12318E+17,Gatewaytofreedom#1289,2021-03-31,I'll try that. It's just weird because I did have a .exists check that would return true for the file existing.,,
2.34343E+17,Johnny#3826,2021-03-31,this sounds like you're trying to access a resource,,
2.34343E+17,Johnny#3826,2021-03-31,"Resources shouldn't be accessed through the file system, since it can't be guaranteed that they're there",,
2.34343E+17,Johnny#3826,2021-03-31,That's what `io/resource` is for I believe,,
2.12318E+17,Gatewaytofreedom#1289,2021-03-31,Is the resource not automatically top level?,,
2.34343E+17,Johnny#3826,2021-03-31,"The class loader is responsible for loading resources, and they can be in the file system, packaged in a jar or even fetched over the network. When you put a file in the resources directory of your project, it will be in the jar file when you build one for example",,
2.34343E+17,Johnny#3826,2021-03-31,Meaning you won't be able to find it as a regular file anymore,,
2.12318E+17,Gatewaytofreedom#1289,2021-03-31,"Alright.
Man I'm so in over my head right now.
I'm in the interview process and reached the last part where I have a coding assignment to prove my ability.
I'm so falling on my face. Getting myself to think functionally is quite the change of pace from imperative programming.",,
2.34343E+17,Johnny#3826,2021-03-31,"I feel you, I've been there",,
2.34343E+17,Johnny#3826,2021-03-31,though fortunately not under the pressure of an upcoming interview,,
2.12318E+17,Gatewaytofreedom#1289,2021-03-31,"If I have a 2d vector and want to sort it using something other than the first element of each vector, how would you do that?",,
2.34343E+17,Johnny#3826,2021-04-01,By what do you want to sort it?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-01,Another thing.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-01,"Technically, you're not comparing the first element of each vector.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-01,"Anyways, this is what you're looking for. https://clojuredocs.org/clojure.core/sort-by",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-01,"Some more explanation:

`(< xs ys)` (in the inductive case) is roughly defined to be 

```clojure
(let [[x xs'] xs]
      [y ys'] ys]
  (cond (< x y) true
        (> x y) false
        :else (< xs' ys')))
```",,
3.7325E+17,[Little Sponge]#4385,2021-04-03,"```clojure
(ns thinglearner.core
  (:gen-class))

(import (java.net ServerSocket))
(import (java.util Scanner))

(def socket (ServerSocket. 80))

(defn -main
  ""Sets up and runs the server.""
  [& args]
  (println ""Waiting for connection..."")
  (def client (doto socket .accept))
  (println ""A client connected"")
  (def sin (Scanner. (doto client .getInputStream)))
  (println (doto sin .readLine))
)
```
when I run it, it says ""No matching field found: getInputStream for class java.net.ServerSocket"", even though `client` is supposed to be type `java.net.Socket`, not `java.net.ServerSocket`",,
2.34343E+17,Johnny#3826,2021-04-03,`doto` performs the provided actions as a side effect on the first argument and returns the first argument.,,👍 (1)
2.34343E+17,Johnny#3826,2021-04-03,What you want here instead is `.`,,
2.34343E+17,Johnny#3826,2021-04-03,`(.accept socket)`,,
2.34343E+17,Johnny#3826,2021-04-03,same with the other,,👍 (1)
3.7325E+17,[Little Sponge]#4385,2021-04-03,ty!,,
2.34343E+17,Johnny#3826,2021-04-03,"And just a side note, it is not recommended to use `def` locally. It should only be used for top level definitions. For local bindings, use `let` instead",,
3.7325E+17,[Little Sponge]#4385,2021-04-03,👍,,
3.7825E+17,S4G4R#6989,2021-04-04,"Hey guys. So I have a list of maps as such :
```
'({:x 1 :y 2 :z 3}
  {:x 1 :y 2 :z 3}
  {:x 1 :y 2 :z 3})
```
Whats  the best way to convert into this?
```
'({:1 {:y 2 :z 3}}
  {:1 {:y 2 :z 3}}
  {:1 {:y 2 :z 3}})
```",,
3.7825E+17,S4G4R#6989,2021-04-04,here `x` is basically an `id` field,,
2.34343E+17,Johnny#3826,2021-04-04,"Using `map` with a function that returns a map with the `:x` value as a key and the rest of the map as value. For the latter you may find `select-keys` to be useful, although it's often not a problem in clojure if there are redundant keys",,
2.34343E+17,Johnny#3826,2021-04-04,Unless you need to serialise in that fixed format or something,,
2.18602E+17,lsenjov#4288,2021-04-04,"My favourite way is
```clj
(->> arr
     (map (juxt :x identity))
     (into {}))
```",,
2.18602E+17,lsenjov#4288,2021-04-04,I'm assuming you didn't mean to make the value of :x a keyword,,
1.36557E+17,Softnum#7400,2021-04-04,Technically that also keeps :x in the map fwiw... usually this isn't a bad thing tho,,
2.34343E+17,Johnny#3826,2021-04-05,Yeah,,
2.34343E+17,Johnny#3826,2021-04-05,That code doesn't do what's being asked for anyway though,,
2.34343E+17,Johnny#3826,2021-04-05,"If you wanted a map as a result, that would be a nice way",,
2.34343E+17,Johnny#3826,2021-04-05,I suppose you could do `(map (partial into {}))` in the last line,,
2.18602E+17,lsenjov#4288,2021-04-05,"Oh you're right, it's what I get for answering questions at oh god o'clock in the morning",,
2.18602E+17,lsenjov#4288,2021-04-05,Let me actually redeem myself,,
2.18602E+17,lsenjov#4288,2021-04-05,"```clj
(let [k :x]
  (map (fn [m] {(keyword (get m k)) (dissoc m k)})) arr))
```",,
2.34343E+17,Johnny#3826,2021-04-05,"yeah, something like that",,
2.34343E+17,Johnny#3826,2021-04-05,for some reason I didn't think of `dissoc`,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,I didn't know `juxt` is a thing. 👀,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,That's pretty cool.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,I think Haskell arrows are around that thing?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,`f &&& g &&& h`,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,I wish there was something like `let [{:keys [] &rest} foo]`,,
2.34343E+17,Johnny#3826,2021-04-06,"`juxt` is a pretty neat function. I mostly use it with `sort-by`, but it sometimes has nice other uses too",,
3.72043E+17,ox#1485,2021-04-06,"Similar way to solve this, but using comp:
```
(->> data
     (map
      (comp
       #(apply hash-map %1)
       (juxt :x #(dissoc %1 :x)))))
```
You can either use the apply hash-map, or replace it with `#(into {} [%1])` both should work",,
1.89169E+17,srasu#0042,2021-04-06,there is. `& {:as opts}`,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,Wait what,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,Wtf,,
1.89169E+17,srasu#0042,2021-04-06,Well just `{:as opts}` gives you the map. You can use the `&` to do rest keywordargs,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,"Oh okay, I just checked, and that doesn't work, at least on my Clojure version?
```clojure
[myrl@myrl-thinkpad:~/Development/dnd-site]$ clj
Clojure 1.10.2
user=> (def x {:x 1 :y 2})
#'user/x
user=> (let [{:keys [x] & {:as opts}} x] [x opts])
Syntax error macroexpanding clojure.core/let at (REPL:1:1).
& - failed: (not= (quote &) %) at: [:bindings :form :map-destructure :map-binding 0 :local-symbol] spec: :clojure.core.specs.alpha/local-name
& - failed: vector? at: [:bindings :form :map-destructure :map-binding 0 :seq-destructure] spec: :clojure.core.specs.alpha/seq-binding-form
& - failed: map? at: [:bindings :form :map-destructure :map-binding 0 :map-destructure] spec: :clojure.core.specs.alpha/map-bindings
& - failed: map? at: [:bindings :form :map-destructure :map-binding 0 :map-destructure] spec: :clojure.core.specs.alpha/map-special-binding
& - failed: qualified-keyword? at: [:bindings :form :map-destructure :qualified-keys-or-syms 0] spec: :clojure.core.specs.alpha/ns-keys
{:as opts} - failed: vector? at: [:bindings :form :map-destructure :qualified-keys-or-syms 1] spec: :clojure.core.specs.alpha/ns-keys
& - failed: #{:as :or :syms :keys :strs} at: [:bindings :form :map-destructure :special-binding 0] spec: :clojure.core.specs.alpha/map-bindings
{:keys [x], & {:as opts}} - failed: simple-symbol? at: [:bindings :form :local-symbol] spec: :clojure.core.specs.alpha/local-name
{:keys [x], & {:as opts}} - failed: vector? at: [:bindings :form :seq-destructure] spec: :clojure.core.specs.alpha/seq-binding-form
user=> 
```",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,"I don't think Clojure has an ""atomic"" way to split a map.",,
1.89169E+17,srasu#0042,2021-04-06,"`{:keys [x] :as opts}`, and then dissoc out :x",,
1.89169E+17,srasu#0042,2021-04-06,You're right you can't split a map by the keys.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,Sadly. :( IMO it's really useful,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,"Though, I guess this also applies.",,
1.89169E+17,srasu#0042,2021-04-06,I mean you can use juxt with select-keys and dissoc,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,"Yeah, I was actually going to mention that.",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,And you can define a `split` function with that,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-06,"And write `(let [[selected rest] (split [,,,] map] ,,,)`",,
1.89169E+17,srasu#0042,2021-04-06,"```clojure
((juxt #(select-keys % [:a]) #(dissoc % :a)) {:a :hello :b :world})
```",,
1.89169E+17,srasu#0042,2021-04-06,"Yeah, makes sense.",,
1.89169E+17,srasu#0042,2021-04-06,call it split-map probably,,
4.00613E+17,DrNoobopolis#6558,2021-04-07,Any idea why I can not push to a core.async channel from inside a recursive function?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-04-07,What do you mean by that?,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,"So im working with the http-kit library and compojure and I'm in an issue im not sure how to solve.

Currently I receive a web request containing json with a single key called data. It contains a string representation of a single CSV line. 
Example `{data ""lastname,firstname,birth-date""}`

I'm getting this error : 
`java.lang.IllegalArgumentException: No implementation of method: :render of protocol: #'compojure.response/Renderable found for class: clojure.lang.PersistentVector`",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,"```clojure
(defn json-to-2d-vector
  [post-request]
  (let [json-string (get (json/read-str (slurp (post-request :body))) ""data"")]
    (clojure.string/split json-string (re-pattern (get-delimiter json-string)))
    )
  )
```",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,"I've checked the type of json-string and it's a string like I intended. When I print out json string it looks like you'd expect: `lastname,firstname,birth-date`",,
2.34343E+17,Johnny#3826,2021-04-09,"Yeah, the issue is rather that http-kit doesn't know what to do with a vector",,
2.34343E+17,Johnny#3826,2021-04-09,Where do you use this function?,,
2.34343E+17,Johnny#3826,2021-04-09,"or compojure, sorry",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,,https://cdn.discordapp.com/attachments/315388260987830272/830111694109540392/unknown.png,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I call it on the POST record.,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I'm able to pull the json data out from the request.,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,The `(clojure.string/split json-string (re-pattern (get-delimiter json-string)))` line is failing for some reason though.,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,or at least I think that's what it is,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I don't have a good understanding of how you effectively debug code in clojure,,
2.34343E+17,Johnny#3826,2021-04-09,"That's not the line that fails, compojure will try to turn that result into some form of http response and it doesn't know how",,
2.34343E+17,Johnny#3826,2021-04-09,"You want to make a rest api, right?",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,Yeah.,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I have a feeling I'm missing something obvious about how this works,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,So the line that I thought fails is actually being interpreted as a response you're saying?,,
1.89169E+17,srasu#0042,2021-04-09,you need to convert that vector into something that can be put into an http response,,
2.34343E+17,Johnny#3826,2021-04-09,...or register some sort of middleware to do that,,
1.89169E+17,srasu#0042,2021-04-09,"Or teach ring how to interpret the vector as a body, yeah",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,Okay I see. I didn't even understand that the POST used that functions returned value. I thought the value of the line I thought was failing would just be dumped to the console.,,
2.34343E+17,Johnny#3826,2021-04-09,"yeah, any reason you're using http-kit specifically and not ring?",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,The guy that's going to interview me / code review me maintains http-kit,,
2.34343E+17,Johnny#3826,2021-04-09,ah,,
1.89169E+17,srasu#0042,2021-04-09,i mean middleware works for http-kit too,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,also it was super easy for me to understand. or so I thought,,
2.34343E+17,Johnny#3826,2021-04-09,TRUE,,
2.34343E+17,Johnny#3826,2021-04-09,do you want to return a json response?,,
1.89169E+17,srasu#0042,2021-04-09,or edn or something,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I was not intending on that no. I was just having a misunderstanding of the basics of clojure,,
2.34343E+17,Johnny#3826,2021-04-09,"you'll definitely need to agree on some format to send over the wire, that's more an http thing than clojure",,
1.89169E+17,srasu#0042,2021-04-09,"ah, okay",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I mean I forgot that the json-to-2d-vector function I made would have its output used as an http response for the post request,,
2.34343E+17,Johnny#3826,2021-04-09,"oh, yeah",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,"Like when I mean basics, I really mean it lol",,
2.34343E+17,Johnny#3826,2021-04-09,"I mean it's pretty simple. I think without and extra configuration, compojure will basically only accept response maps that represent the entire response as return values",,
2.34343E+17,Johnny#3826,2021-04-09,Or maybe strings that it'll turn into response bodies,,
2.34343E+17,Johnny#3826,2021-04-09,And then you just plug in middleware that transforms whatever you return in your endpoint functions into a proper response,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I've got the response working for all my GET endpoints,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I just glossed over the fact that the POST request can also return a response,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I make all kinds of dumb mistakes like that.,,
2.34343E+17,Johnny#3826,2021-04-09,that's not really a dumb mistake if you're new to the language and the libraries,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,The thing is I'm not new to it exactly. I have about 4 months of experiance,,
2.34343E+17,Johnny#3826,2021-04-09,those things happen to everybody especially in a dynamic language,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I just have some really bad ADHD. So one minute I'll have a solid understanding of the concepts and how to piece them together. Then 30 seconds later I forgot what I wrote and what problem I was going to solve.,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,Paired coding in the workplace was always a fun experience for the person that was with me. lmao,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,"Okay so I got it working now.
Thanks for the help on that!",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,"Yo, so if I have a 2d array that I want to return as json, how would I go about that.
I don't have any key value pairs, it's just a 2d vector that was sorted.

With compojure I'm trying to set the response like so
` {:status 200
   :headers {""Content-Type"" ""application/json""}
   :body (json/write-str (sort-input @records ""last-name""))}`",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,When I try to read the response from python using the requests lib. It shows the json response as empty.,,
1.36557E+17,Softnum#7400,2021-04-09,I don't think it works like that I think you have to set the header on the ring response object like so: <https://stackoverflow.com/questions/21834045/how-to-set-content-type-header-on-ring-compojure-application>,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,"So I'm a bit more confused now. I'm not sure what I changed, but it works now as  written in my above message.",,
1.89169E+17,srasu#0042,2021-04-09,might've just forgotten to re-evaluate something,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I having a feeling I forgot to save my file after making changes earlier.,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,:blaze:,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,"Does anyone here know how you would sort a 2d vector by dates. ex [[09-21-1999][01-01-2000]]
Currently I have the dates represented in the format 1999-21-09 so when I sort I can treat it as a number.
I need to get my output in the format I show in the example, but I'm not sure if the approach I'm going to take is the best.

I'm thinking about writing a function to specifically to treat the date as a string, split it by the ""-"" and re-order it.
Is there a more ""clojure"" way to accomplish what I want to do with dates where I can represent them the same way as I want the output to be?",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I don't actually know how you should handle dates and sort them in clojure.,,
2.34343E+17,Johnny#3826,2021-04-09,Is there only one date in each vector?,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,That's correct.,,
2.34343E+17,Johnny#3826,2021-04-09,Why have nested vectors in the first place?,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,"Well, I actually store more data than just the dates in each nested vector.",,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,I just presented the dates only for my example,,
2.34343E+17,Johnny#3826,2021-04-09,Ah,,
2.34343E+17,Johnny#3826,2021-04-09,Well,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,each nested vector is a representation of a line in a csv,,
2.34343E+17,Johnny#3826,2021-04-09,"Optimally you have the dates as `java.util.Date`s or `java.time.LocalDate`s or something first, the sort them, then transform them to a string representation",,👍 (1)
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,"So there's no built in clojure functions for that, I'd need to use a java interop?",,
2.34343E+17,Johnny#3826,2021-04-09,As to how to sort: you can use `sort-by` and provide a function that gets the date from the vector,,
2.12318E+17,Gatewaytofreedom#1289,2021-04-09,Would I need a custom compare function for java date objects?,,
2.34343E+17,Johnny#3826,2021-04-09,"Not necessarily, there are clojure functions for working with it",,
2.34343E+17,Johnny#3826,2021-04-09,"Unless you sort them in a custom way, no",,
2.08523E+17,kyepskee#1409,2021-04-21,How do I end the current thread? I'm doing things inside a `(future)` and I'd like to have a function to exit the current thread,,
7.58589E+17,Arne#3086,2021-04-21,"Normally you don't really ""end"" a thread, it just runs out. when the last code in the future block finishes executing then it's done. You can interrupt a thread, which would cause a `ThreadInterruptedException` on that thread, but it's not super reliable and can have issues with not properly cleaning up resources. It's still there but it's been marked as deprecated for many years.",,💯 (1)
7.58589E+17,Arne#3086,2021-04-21,If you have some infinite loop or something that you want to break out of then the clean thing to do is manually have a flag for that.,,
7.58589E+17,Arne#3086,2021-04-21,"```
(def stop? (volatile! false))

(future
  (while (not @stop?)
    (println ""still here"")
    (Thread/sleep 1000))
  (println ""done""))

(vreset! stop? true)
```",,
2.08523E+17,kyepskee#1409,2021-04-21,The thing is in the thread I go into other functions,,
2.08523E+17,kyepskee#1409,2021-04-21,And I want to be able to quit the thread completely from anywhere in it,,
7.58589E+17,Arne#3086,2021-04-21,"yeah like I said, you can try that with interrupt, but it has some caveats. Buyer beware.",,
7.58589E+17,Arne#3086,2021-04-21,`(.interrupt (Thread/currentThread))` I believe,,
7.58589E+17,Arne#3086,2021-04-21,although if you want to interrupt the thread from itself then just throw an exception yourself,,
6.25456E+17,quoll#0155,2021-04-21,"Java talks about this already:
https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html",,
6.25456E+17,quoll#0155,2021-04-21,"Basically... what @Arne said. It's a difficult issue for managing the JVM, and it can leave things in an inconsistent state. If you want to terminate early, then you should build your own mechanism for managing this. If you're calling long-running code that you have no control over, then there aren't many solutions",,
6.25456E+17,quoll#0155,2021-04-21,"The only way I can think to force a long-running operation to die early would be to wrap it in a process and use IPC to call it and get the return value. That way, if you really needed it to stop early, you can terminate that process. It's heavy handed, but it's the only _**guaranteed**_ mechanism I'm aware of",,
2.08523E+17,kyepskee#1409,2021-04-22,Thanks,,
4.86633E+17,too much tea#7277,2021-04-23,what's the best way to create a shared nREPL over the internet ?,,
7.58589E+17,Arne#3086,2021-04-23,what's the use case?,,
4.86633E+17,too much tea#7277,2021-04-23,shared REPL so multiple people can use it,,
7.58589E+17,Arne#3086,2021-04-23,what will they be doing with it?,,
4.86633E+17,too much tea#7277,2021-04-23,coding in Clojure,,
7.58589E+17,Arne#3086,2021-04-23,are these colleagues? strangers? are you building something together? are you comfortable having people connect to your machine or do you want to have it in the cloud? etc,,
7.58589E+17,Arne#3086,2021-04-23,are you doing web dev? music?,,
4.86633E+17,too much tea#7277,2021-04-23,plain Clojure,,
7.58589E+17,Arne#3086,2021-04-23,sorry I can't answer your question if you can't give me more details,,
4.86633E+17,too much tea#7277,2021-04-23,lets say a group of friends want to code in Clojure using the same REPL,,
7.58589E+17,Arne#3086,2021-04-23,as a baseline I'd say start with SSH tunnels,,
4.86633E+17,too much tea#7277,2021-04-23,ok,,
7.58589E+17,Arne#3086,2021-04-23,but if you really want to pair actively then even better is using tmux on a shared machine,,
7.58589E+17,Arne#3086,2021-04-23,https://lambdaisland.com/blog/2019-12-12-advent-of-parens-12-pairing-cloud-tmux,,
7.58589E+17,Arne#3086,2021-04-23,"there's also an HTTP-based transport for nREPL, not sure if that would make things easier or harder but it could be useful https://github.com/nrepl/drawbridge",,
4.86633E+17,too much tea#7277,2021-04-23,I suspected it would be that complicated,,
7.58589E+17,Arne#3086,2021-04-23,"when you say ""the same repl"", do you want everyone to see the same things that anyone is typing, or do you just want everyone to be able to evaluate in a shared process?",,
7.58589E+17,Arne#3086,2021-04-23,"I'd say the tmux setup is pretty straightforward, assuming everyone is familiar with SSH and you can use some kind of terminal based editor like vim or emacs",,
4.86633E+17,too much tea#7277,2021-04-23,I mean that say one person types `(+ 1 2)` in the shared REPL then all the other connected friends will see `(+ 1 2)` followed by `=> 3`,,
4.86633E+17,too much tea#7277,2021-04-23,and if one person does `(defn our-fn [x] ...)` then another person can do `(our-fn ...)` and they'd see the evaluated result,,
7.58589E+17,Arne#3086,2021-04-23,there is actually a project that specifically aims to provide that: https://github.com/raymcdermott/reptile-body,,
7.58589E+17,Arne#3086,2021-04-23,haven't tried it yet but it's used for the Apropos podcast where they do some shared live coding on air,,
7.58589E+17,Arne#3086,2021-04-23,https://www.youtube.com/watch?v=6kKAAHFAnRs,,
4.86633E+17,too much tea#7277,2021-04-23,that looks useful!,,
7.58589E+17,Arne#3086,2021-04-23,"but I believe then you only get the shared REPL, don't know if you also want a shared editor or not?",,
4.86633E+17,too much tea#7277,2021-04-23,no everyone should use their own editor of choice,,
4.86633E+17,too much tea#7277,2021-04-23,I don't care about seeing other peoples cursors etc,,
7.58589E+17,Arne#3086,2021-04-23,ok yeah then maybe REPTile is your friend. Do let us know how it goes!,,
4.86633E+17,too much tea#7277,2021-04-23,thanks for your advice Arne,,
7.58589E+17,Arne#3086,2021-04-23,my pleasure! love your username by the way. Pretty big on tea myself 🍵 🧋,,
4.86633E+17,too much tea#7277,2021-04-23,it is the force of life,,"🍵 (2),🧋 (1)"
7.58589E+17,Arne#3086,2021-04-23,veritably,,
3.0253E+17,MielPops#8503,2021-04-23,"An alternative is to use repl.it, but it’s not a real solution",,
8.08358E+17,finchharold#5539,2021-04-25,Any jackdaw people?,,
4.00613E+17,DrNoobopolis#6558,2021-05-04,"```clj
(defn crab-move
  """"
  [input]
  (let [cups (input :cups)
        index (input :index)]
    (println cups)
    (println index)))
```",,
4.00613E+17,DrNoobopolis#6558,2021-05-04,How can I rewrite this without a let? I have forgotten how to do it,,
4.00613E+17,DrNoobopolis#6558,2021-05-04,For anybody wondering it is referred to as destructing,,
4.00613E+17,DrNoobopolis#6558,2021-05-04,In this case it is associative destructuring,,
4.00613E+17,DrNoobopolis#6558,2021-05-04,https://clojure.org/guides/destructuring,,
4.00613E+17,DrNoobopolis#6558,2021-05-04,"```clj
(defn crab-move
  [{cups :cups index :index}]
  (println cups)
  (println index))
```",,👍 (1)
2.34343E+17,Johnny#3826,2021-05-04,You can simplify this a bit more by using `:keys`,,
2.34343E+17,Johnny#3826,2021-05-04,`{:keys [index cups]}`,,
8.08358E+17,finchharold#5539,2021-05-06,Any idea on why we can’t poll for Kafka messages inside a graphql streamer? Thank you,,
7.20729E+17,Nícolas Sims Botelho#4646,2021-05-06,"You could try this destructuring:

```(defn crab-move
  [{keys [cups index]}]
  (println cups)
  (println index))```

A good reference about it https://gist.github.com/john2x/e1dca953548bfdfb9844#shortcuts.",,💯 (1)
1.89169E+17,srasu#0042,2021-05-12,"Okay, ignore that there isn't actually a release out on clojars yet, but what do you guys think of this:
https://github.com/IGJoshua/americano",,
5.1703E+17,ponzii#4046,2021-05-16,Is this the generally accepted level of error messaging in the Clojure community?,,
1.89169E+17,srasu#0042,2021-05-16,What level?,,
3.22428E+17,TheLastSock#9400,2021-05-18,"I don't understand the question. I think of error levels as contextual. E.g is c common to have debug, error and info groupings but I wouldn't call it a standard. Mostly im guessing clojure borrows from the host platform for general guidelines.",,
8.38698E+17,Moussmoutarde#0647,2021-05-28,"Hello, is there a standard function `interleave` but that will append the reminder if one of the sequence is longer ?",,
8.38698E+17,Moussmoutarde#0647,2021-05-28,I came up with this code that is 99% the same than `interleave` :,,
8.38698E+17,Moussmoutarde#0647,2021-05-28,"```clojure
(defn interleave-overflow
  [c1 c2]
  (lazy-seq
    (let [s1 (seq c1)
          s2 (seq c2)]
      (cond
        (and s1 s2)
        (cons (first s1) (cons (first s2)
                               (interleave-overflow (rest s1) (rest s2))))
        s1 s1
        s2 s2))))
```",,
8.38698E+17,Moussmoutarde#0647,2021-05-28,anything more straight forward ?,,
2.67464E+17,SlashDevSlashRandom#2112,2021-05-28,"you could also do it with `take`s and `drop`s, but I'm not sure if it'd be more straight forward, because that's sort of subjective",,
2.67464E+17,SlashDevSlashRandom#2112,2021-05-28,"I'd speculate that the reason there isn't a core function for that is because if any of the seqs are infinite, you're gonna have a bad time",,
8.38698E+17,Moussmoutarde#0647,2021-05-28,I just tried my function with `(take 102 (interleave-overflow ['x] (range)))` and I didn't have a bad time,,
8.38698E+17,Moussmoutarde#0647,2021-05-28,it stopped at 102th element,,
2.34343E+17,Johnny#3826,2021-05-28,Yeah it's perfectly possible with infinite sequences if you implement it accordingly,,
2.67464E+17,SlashDevSlashRandom#2112,2021-05-28,"fair enough, I guess since it's wrapped with lazy-seq it'll work",,
2.34343E+17,Johnny#3826,2021-05-28,"Your implementation works with infinite inputs, yeah. Then the base case will simply never be reached",,
2.34343E+17,Johnny#3826,2021-05-28,Or even if one is infinite and the other isn't,,
2.67464E+17,SlashDevSlashRandom#2112,2021-05-28,I wasn't thinking about restricting it using take,,
2.34343E+17,Johnny#3826,2021-05-28,me neither,,
2.67464E+17,SlashDevSlashRandom#2112,2021-05-28,"and of course, it can be generalized to any number of seqs:
```clj
(defn interleave-all
  ([] ())
  ([& seqs]
   (lazy-seq
     (let [ss (filter identity (map seq seqs))]
       (when (seq ss)
         (concat (map first ss) (apply interleave-all (map rest ss))))))))
```",,
2.34343E+17,Johnny#3826,2021-05-28,`(filter indentity (map f x))` can be simplified to `(keep f x)`,,
2.34343E+17,Johnny#3826,2021-05-28,But yeah,,
2.67464E+17,SlashDevSlashRandom#2112,2021-05-28,"in this case, yes, but keep always bugs me a little bit because it also returns `false`s",,
2.34343E+17,Johnny#3826,2021-05-28,"Fair enough, but `seq` will never return `false`",,
2.67464E+17,SlashDevSlashRandom#2112,2021-05-28,"right, that's why I said ""in this case"" (but not in general case of `f`)",,
8.38698E+17,Moussmoutarde#0647,2021-05-29,"Hello, when you want to release a lib as a Leiningen dependency and a deps dependency how do you proceed ? Do you manually write `project.clj` and `dep.edn` or do you use some lein plugin that can generate the deps.edn (or the other way around) ?",,
2.34343E+17,Johnny#3826,2021-05-29,wdym by release?,,
2.34343E+17,Johnny#3826,2021-05-29,You don't need both,,
2.34343E+17,Johnny#3826,2021-05-29,"E.g. if you publish your library to clojars with either deps or lein, you can use it from both deps and lein",,
2.34343E+17,Johnny#3826,2021-05-29,And anything else that understands maven repositories,,
8.38698E+17,Moussmoutarde#0647,2021-05-29,"yes but I like feature of deps where you can have github dependencies with no jar involved, and I like lein feature where you can have a checkout directory that points to the code of a library built with lein. Hence, I need both build systems depending on what build tool I'm using.",,
3.46868E+17,djeis#0042,2021-05-29,"You can have locally checked out dependencies with deps too, iirc.",,
2.34343E+17,Johnny#3826,2021-05-29,Generally everything should be possible with either,,
7.3362E+17,dharrigan#7430,2021-05-29,"Yes, deps allows you to point to a local directory as well",,
7.3362E+17,dharrigan#7430,2021-05-29,`https://clojure.org/guides/deps_and_cli#local_jar`,,
7.3362E+17,dharrigan#7430,2021-05-29,"It doesn't have to be jar as well, it can be a directory",,
8.08358E+17,finchharold#5539,2021-05-31,"Hey, if there's some data like this
```
{:settings {:columns [{:key ""seqNo"", :active true} {:key ""title"", :active true} {:key ""status"", :active true} {:key ""owner"", :active false} {:key ""dueDate"", :active false} {:key ""members"", :active false} {:key ""priority"", :active false} {:key ""age"", :active false} {:key ""parent"", :active false} {:key ""childCount"", :active false} {:key ""createdAt"", :active false} {:key ""updatedAt"", :active false} {:key ""completedAt"", :active false} {:key ""completedBy"", :active false} {:key ""creator"", :active false} {:key ""description"", :active false}]}```
Then how to get only the :key values that are having the :active as true?",,
8.08358E+17,finchharold#5539,2021-05-31,Anyone?,,
6.25456E+17,quoll#0155,2021-05-31,"Just to comment for others who may be concerned that this question was ignored… it’s also appeared in #beginners, where it is being discussed",,
6.16969E+17,Loading BG#7962,2021-05-31,"@finchharold just get the vector and filter it
```clj
; data is the data
(filter :active (:columns (:settings data)))
```
this will give you all columns with :active true",,💯 (1)
8.08358E+17,finchharold#5539,2021-06-01,Thank you @Loading BG,,
1.56049E+17,maxminoS#5593,2021-06-02,has anyone had to deal with timezone conversion?,,
1.56049E+17,maxminoS#5593,2021-06-02,"i am trying to find a good library for this, but preferably if its in the standard library",,
7.3362E+17,dharrigan#7430,2021-06-02,"Personally, thesedays, I would simply use the standard java.util.time package, it's very good - it knows how to work with timezones.",,
1.56049E+17,maxminoS#5593,2021-06-02,sorry im also a beginner..,,
8.08358E+17,finchharold#5539,2021-06-02,okay,,
1.56049E+17,maxminoS#5593,2021-06-02,thanks,,
1.89169E+17,srasu#0042,2021-06-02,https://github.com/dm3/clojure.java-time,,👌 (1)
1.89169E+17,srasu#0042,2021-06-02,@maxminoS,,🙏 (1)
1.56049E+17,maxminoS#5593,2021-06-04,"so I tried this out but found that it doesnt work for clojurescript.. I also tried using java.util.Date directly and it worked once on the REPL, but when I restarted it it stopped working for some reason, maybe there's an import method I don't know?",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-06-04,:yesmiyu:,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-06-04,That won't work for ClojureScript period.,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-06-04,What most likely happened was that you were on a Clojure shell and not a ClojureScript shell hence why it worked.,,
1.56049E+17,maxminoS#5593,2021-06-04,so I can't use a Java library for ClojureScript projects?,,
1.56049E+17,maxminoS#5593,2021-06-04,would i be better off installing a JS dependency for this CLJS?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-06-04,Most likely,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-06-04,"FWIW, #clojurescript exists, and you'll be better searching specifically for ClojureScript packages.",,👍 (1)
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-06-04,Most bi-platform package advertises that they work on both.,,
6.25456E+17,quoll#0155,2021-06-04,"Depending on what your requirements for dates are, Dates can be useful.
The old `java.util.Date` class is frustrating to work with, but can be useful for recording instants, etc. It's just a wrapper around a Long, which is a measure of ms since the epoch.
You probably already knew all of that, but I mention it because you have the same functionality from js/Date.",,🙏 (1)
6.25456E+17,quoll#0155,2021-06-05,It's very quiet here today. Is anyone at :clojureD?,,
3.7825E+17,S4G4R#6989,2021-06-06,We currently use `pedestal` for our API. We want to add swagger docs support. I came across `pedestal-api` project. Is this the best way to go or does anyone have any other suggestion?,,
4.86633E+17,too much tea#7277,2021-06-06,@quoll your writeup of Datomic-like dbs was superb,,
6.25456E+17,quoll#0155,2021-06-06,Thank you! 💖,,
2.34343E+17,Johnny#3826,2021-06-06,"ooh, link?",,
6.25456E+17,quoll#0155,2021-06-06,https://github.com/threatgrid/asami/wiki/Introduction,,🎉 (2)
2.34343E+17,Johnny#3826,2021-06-06,thanks,,
1.89169E+17,srasu#0042,2021-06-06,Oh awesome!,,
6.71431E+17,denik#9949,2021-06-09,"Just published an article about Jive, an architecture where UI code is server-rendered but still web-based. This enables native backends with the reach of web. Give it a read and share your thoughts!

https://kalavox.medium.com/jive-for-artisanal-software-2df0d675c104",,
3.29023E+17,nixin72#3554,2021-06-09,"I've seen this concept referred to as ""HTML over websockets"", I believe there's a Ruby library for it? But it's something that I've played around with myself a little bit. Definitely a very interesting concept and something I would love to work on and with at some point, but don't have the time for it now.",,
6.71431E+17,denik#9949,2021-06-09,thanks @nixin72 there are many LiveView-like libraries https://github.com/dbohdan/liveviews but most don't use a virtual dom which I find to be a nice abstraction to simply write hiccup and let the vDOM handle diffs,,
4.00613E+17,DrNoobopolis#6558,2021-06-11,"What am I doing wrong? ```Syntax error (ClassNotFoundException) compiling at (New.clj:18:3).
clojure.inspector```",,
2.67464E+17,SlashDevSlashRandom#2112,2021-06-11,what's the code that's throwing that error?,,
4.00613E+17,DrNoobopolis#6558,2021-06-12,"```clj
(ns New
  (:require (clojure.inspector inspector)))

(defn -main []
  (println ""aa""))
```",,
4.00613E+17,DrNoobopolis#6558,2021-06-12,Idk why but this syntax is wrong,,
4.00613E+17,DrNoobopolis#6558,2021-06-12,"```clj
(ns New
  (:require [clojure.inspector :as insp]))
```",,
4.00613E+17,DrNoobopolis#6558,2021-06-12,this works!,,
2.67464E+17,SlashDevSlashRandom#2112,2021-06-12,"looking at the docs for require, if the argument is a list, then it's treated as a prefix list",,
2.67464E+17,SlashDevSlashRandom#2112,2021-06-12,so the first form tries to require the `clojure.inspector.inspector` namespace,,
4.00613E+17,DrNoobopolis#6558,2021-06-12,oh,,
4.00613E+17,DrNoobopolis#6558,2021-06-12,I was trying to get the inspector function from the clojure.inspector namespace,,
4.00613E+17,DrNoobopolis#6558,2021-06-12,I think I have the hang of it now,,
6.25456E+17,quoll#0155,2021-06-13,"That’s done with the `:refer` option:
```clojure
(ns New
  (:require (clojure.inspector :refer (inspector))))
```",,
6.25456E+17,quoll#0155,2021-06-13,"I typically use the vector syntax (square brackets) after the `require` though. Lists are OK, but give me bad vibes, since they would be an error outside of the `ns` macro.

(Also, it’s not idiomatic to give a namespace a capital letter)",,
4.00613E+17,DrNoobopolis#6558,2021-06-19,how can I compare types?,,
4.00613E+17,DrNoobopolis#6558,2021-06-19,I would like to do one action if a value is one type and another if it is another type,,
4.00613E+17,DrNoobopolis#6558,2021-06-19,I found `instance?`,,
4.00613E+17,DrNoobopolis#6558,2021-06-19,This is what I was looking for,,
1.89169E+17,srasu#0042,2021-06-19,You can also use the function `type`,,
4.00613E+17,DrNoobopolis#6558,2021-06-20,How can I do a whitespce character instaparse?,,
4.00613E+17,DrNoobopolis#6558,2021-06-20,It is #'\\\\s+',,
4.00613E+17,DrNoobopolis#6558,2021-06-20,instaparse is kind of amazing 🙂,,
1.89169E+17,srasu#0042,2021-06-20,yeah it is!,,
1.89169E+17,srasu#0042,2021-06-20,I just wish it could have non-character terminals.,,
4.00613E+17,DrNoobopolis#6558,2021-06-20,What do you mean by non-character terminals?,,
1.89169E+17,srasu#0042,2021-06-20,"Like parsing sequences of data structures, not strings.",,
1.89169E+17,srasu#0042,2021-06-20,This would be helpful if you want to keep lexing (turning a string into a sequence of tokens) and parsing (turning a sequence of tokens into a parse tree) separate.,,
3.29023E+17,nixin72#3554,2021-06-20,"Woah, instaparse looks awesome",,
8.16366E+17,dorab#6204,2021-06-20,"You might also consider using a protocol to do an ""automatic"" dispatch on the type.  Especially if you expect to be  handling additional types in the future.",,
4.00613E+17,DrNoobopolis#6558,2021-06-21,How can I install a library?,,
4.00613E+17,DrNoobopolis#6558,2021-06-21,"Could not locate instaparse/core__init.class, instaparse/core.clj or instaparse/core.cljc on classpath.",,
4.00613E+17,DrNoobopolis#6558,2021-06-21,I usually use cursive and this error is resolved automatically,,
2.34343E+17,Johnny#3826,2021-06-21,Do you use leiningen or deps?,,
4.00613E+17,DrNoobopolis#6558,2021-06-21,deps.edn,,
4.00613E+17,DrNoobopolis#6558,2021-06-21,How can I discard arguments from instaparse?,,
4.00613E+17,DrNoobopolis#6558,2021-06-21,I am trying to figure out transform but it is pretty tricky,,
4.00613E+17,DrNoobopolis#6558,2021-06-21,You can discard data using <>,,
1.47664E+17,Void#5773,2021-06-21,Heyo friends! Is the `?` at the end of predicates convention for unary functions only?,,
2.34343E+17,Johnny#3826,2021-06-21,No,,
2.34343E+17,Johnny#3826,2021-06-21,e.g. `isa?` or `instance?`,,
1.47664E+17,Void#5773,2021-06-21,"Sweet, thanks. I'd only come across unary ones till now",,
8.09048E+17,lyhokia#5102,2021-06-22,"Hello, everyone! what's the difference between these two?
```clj
(def a) ; This works in REPL
(declare a)
```",,
8.09048E+17,lyhokia#5102,2021-06-22,I assume both create unbound symbols,,
2.67464E+17,SlashDevSlashRandom#2112,2021-06-22,"not a lot:
```clj
(macroexpand '(declare a))
=> (do (def a))
```",,👍 (1)
8.09048E+17,lyhokia#5102,2021-06-22,So there's actually no difference I guess,,
2.67464E+17,SlashDevSlashRandom#2112,2021-06-22,"well, in effect, no, but you could argue that 'declare' makes the intent clearer - you're declaring that you're going to give that binding a value later, whereas def is generally used to create a binding",,
2.67464E+17,SlashDevSlashRandom#2112,2021-06-22,"so, to the compiler there's no difference, but to the (human) reader there could be",,
7.53258E+17,JaymarThePG#0999,2021-06-22,how do I start a discord bot with clojure on vsc,,
7.53258E+17,JaymarThePG#0999,2021-06-22,in the terminal,,
2.67464E+17,SlashDevSlashRandom#2112,2021-06-22,"most likely `lein run` or `clojure -M class-name`, depending on what tooling you're using",,
1.89169E+17,srasu#0042,2021-06-22,How are you making a discord bot in clojure? Do you have a library you're using? Which build tool?,,
1.89169E+17,srasu#0042,2021-06-22,@JaymarThePG,,
8.09048E+17,lyhokia#5102,2021-06-23,"I got that, thanks",,
7.11823E+17,CoTonRi#7323,2021-06-25,"Hi I need some help (pretty new to clojure). I have a vector of maps (def v [{:id ""A"" :name ""foo""} {:id ""B"" :name ""bar""}...]) and an ID (def :id ""B"") --> how do I find the index of the map item in that vector by the given ID?

So to be clear: I would expect index 1 then ; ).",,
2.34343E+17,Johnny#3826,2021-06-25,"One way to do this would be the following transformation:
1. map the vector to a sequence of vectors that contain the index and the value (`(map-indexed vector v)`)
2. filter by the id of the values (`(filter (comp #{id} :id second) ...)`)
3. map to the index from before (`(map first ...)`)
4. `first`

So you end up with
```clj
(->> v ; ({:id ""A"" :name ""foo""} ...)
     (map-indexed vector) ; ([0 {:id ""A"" :name ""foo""}] ...)
     (filter (comp #{id} :id second)) ; ([1 {:id ""B"" :name ""bar""}])
     (map first) ; (1)
     first) ; 1
```",,
2.34343E+17,Johnny#3826,2021-06-25,You could also build a hash map,,
2.34343E+17,Johnny#3826,2021-06-25,`(zipmap (map :id v) v)` would be a map that uses the ids as keys,,
2.34343E+17,Johnny#3826,2021-06-25,That would be recommendable if 1) the ids are unique and 2) you need this more than once,,
7.11823E+17,CoTonRi#7323,2021-06-25,Great! Thank you!,,
3.7825E+17,S4G4R#6989,2021-06-30,"Hey guys, I am trying to convert a byte array to an EDN object.

I have this piece of code :
```
(fn deserializer [ba _]
  (some-> (String. ba)
          (cheshire/parse-string true)))
```
(Where `ba` is a byte array)

It works well and also converts the keys to keywords but it seems to be messing up my values.

Before :
```
{""schema"":{""type"":""struct"",""fields"":[{""type"":""int32"",""optional"":false,""field"":""id""}],""optional"":false,""name"":""xxx""},""payload"":{""id"":-1}}
```
After :
```
{:schema {:type struct, :fields [{:type int32, :optional false, :field id}], :optional false, :name xxx}, :payload {:id -1}}
```
I do not want my values to be converted to symbols. Any help?",,
2.67464E+17,SlashDevSlashRandom#2112,2021-06-30,remove `true` from the cheshire call,,
3.7825E+17,S4G4R#6989,2021-06-30,"Thanks but that doesn't work. Gives me this :
```
{schema {type struct, fields [{type int32, optional false, field id}], optional false, name xxx}, payload {id -1}}
```",,
2.34343E+17,Johnny#3826,2021-06-30,your values aren't being converted to symbols,,
2.34343E+17,Johnny#3826,2021-06-30,"the """" of strings simply aren't printed when you use println",,
2.34343E+17,Johnny#3826,2021-06-30,use `prn` for an accurate representation,,👍 (1)
2.34343E+17,Johnny#3826,2021-06-30,or pprint,,
3.7825E+17,S4G4R#6989,2021-06-30,Ah that's silly of me! Thank you 🙂 I can see it correctly now.,,
3.7825E+17,S4G4R#6989,2021-06-30,I was using `println` instead of `prn`,,
2.57728E+17,hxe#3643,2021-07-11,"Tip: The escaping rules for regex literals and `re-pattern` are different.
```clojure
(clojure.string/split ""foo | bar"" #"" \\| "")
; => [""foo"" ""|"" ""bar]
(clojure.string/split ""foo | bar"" (re-pattern "" \\| ""))
; => [""foo"" ""bar]
```",,
2.57728E+17,hxe#3643,2021-07-11,"Just learned about this after getting a weird ClassCastException with no stack trace and slowly print debugging it through 3 namespaces, hopefully I did that so you don't have to 😭",,
1.89169E+17,srasu#0042,2021-07-11,"Yes, because you don't have to escape that \ in the #"""" regex",,
1.89169E+17,srasu#0042,2021-07-11,You've made a regex that matches either a space followed by a backslash or a space,,
1.89169E+17,srasu#0042,2021-07-11,While in re-pattern you've made a regex that matches a space followed by a pipe followed by a space,,
1.89169E+17,srasu#0042,2021-07-11,@hxe,,
2.84843E+17,Pixtum#6222,2021-07-19,are there any good examples of basic usage of tile-soup?,,
2.84843E+17,Pixtum#6222,2021-07-19,"i.e. displaying a tilemap in a window, making use of collision, etc",,
8.69353E+17,Static Amoeba#6686,2021-07-26,"Hey all, I'm new to clojure and thought I'd try to get a quick site up using compojure for the backend. I'm not having any issues with API routing, but for some reason I can't seem to get a static directory working, any tips?",,
2.34343E+17,Johnny#3826,2021-07-26,Have you tried anything?,,
8.69353E+17,Static Amoeba#6686,2021-07-26,I tried doing some gross copying and pasting from stackoverflow which wasn't super helpful. Essentially I was trying to serve out of a directory a couple of directories up from resources/public. But rather than fight with it I just moved my dist output into the resources/public directory.,,
3.69844E+17,Kryspto#8229,2021-07-30,"hi, did someone already secured a remote repl connection ? (other than ssh tunneling)",,
2.84843E+17,Pixtum#6222,2021-07-31,why does clj-kondo complain when I define a variable inside a function?,,
1.89169E+17,srasu#0042,2021-07-31,are you using `def`?,,
1.89169E+17,srasu#0042,2021-07-31,@Pixtum,,
2.84843E+17,Pixtum#6222,2021-07-31,yes,,
1.89169E+17,srasu#0042,2021-07-31,That's used to declare global variables,,
2.84843E+17,Pixtum#6222,2021-07-31,then how do I declare local ones?,,
1.89169E+17,srasu#0042,2021-07-31,`let`,,
1.89169E+17,srasu#0042,2021-07-31,"```clojure
(let [some-var 5]
  some-var)
```",,
2.84843E+17,Pixtum#6222,2021-07-31,then I have to put everything inside the let binding?,,
2.84843E+17,Pixtum#6222,2021-07-31,"so I do? 
```
(let [name-double (* 2 (count name))])
(println (str name-double))
```",,
1.89169E+17,srasu#0042,2021-07-31,"Yes, the paren around the let is like a bare scope in other languages",,
2.84843E+17,Pixtum#6222,2021-07-31,is  there really no other way? that seems kinda annoying?,,
1.89169E+17,srasu#0042,2021-07-31,"If you know java, it'd be like this:
```java
{
  int someVar = 5;
  System.out.println(someVar.toString);
}
```",,
2.84843E+17,Pixtum#6222,2021-07-31,ya,,
2.84843E+17,Pixtum#6222,2021-07-31,I mean I get it it's just odd,,
1.89169E+17,srasu#0042,2021-07-31,"It's a bit strange compared to other languages, but yeah.",,
2.84843E+17,Pixtum#6222,2021-07-31,so can I not declare multiple variables in one let statement?,,
1.89169E+17,srasu#0042,2021-07-31,Absolutely,,
1.89169E+17,srasu#0042,2021-07-31,"```clojure
(let [a 1
      b 2]
  (+ a b))
```",,
2.84843E+17,Pixtum#6222,2021-07-31,huh,,
2.84843E+17,Pixtum#6222,2021-07-31,thanks,,
1.89169E+17,srasu#0042,2021-07-31,no problem,,
2.34343E+17,Johnny#3826,2021-07-31,You'll notice that this isn't really an issue in terms of indentation,,
2.84843E+17,Pixtum#6222,2021-07-31,is there a way to have a defn return a value?,,
2.84843E+17,Pixtum#6222,2021-07-31,like if I did `(function value)` is there a way to get it to return something so I could do `(println (function value))`,,
2.67464E+17,SlashDevSlashRandom#2112,2021-07-31,the last thing evaluated in the function body is the return value,,
2.84843E+17,Pixtum#6222,2021-07-31,what if that evaluation is a let statement?,,
2.67464E+17,SlashDevSlashRandom#2112,2021-07-31,"the last thing evaluated in the let statement is the return of the let statement, so if the let statement is the last thing evaluated in the function body, then it's also the return of the function",,
2.84843E+17,Pixtum#6222,2021-07-31,thanks,,
2.84843E+17,Pixtum#6222,2021-07-31,"ok, so now I'm having trouble joining to strings together, I have
```
(defn space-from """" [string]
    (
        let [
            return-str """"
            spaces (count string)
        ]
        
        (dotimes [i spaces]
            (clojure.string/join "" "" return-str)
        )

        (str return-str)        
    )
)
```
but that doesn't seem to give me the result I want",,
2.84843E+17,Pixtum#6222,2021-07-31,"I have to say have as ""hello"" and a ""world"" string that I can join into ""helloworld""",,
2.67464E+17,SlashDevSlashRandom#2112,2021-07-31,"It looks like you might be trying to change the value of `return-str` - bindings are immutable, so that's not going to work. Is `string` in your example a vector of strings? That is to say, are you invoking this with something like `(space-from [""hello"" ""world""])`?",,
2.84843E+17,Pixtum#6222,2021-07-31,"I got it working, but thanks",,
2.84843E+17,Pixtum#6222,2021-07-31,now I'm trying to parse a json file with cheshire but I have no clue what to do after calling `parse-stream` on the file?,,
2.84843E+17,Pixtum#6222,2021-07-31,"I can store the parsed data as a variable but I don't know how to get each value that I want, the docs don't exactly explain very well",,
2.84843E+17,Pixtum#6222,2021-07-31,"ah, I was missing the true parameter",,
2.34343E+17,Johnny#3826,2021-08-01,Also check this out: https://guide.clojure.style,,
1.31473E+17,wusticality#0397,2021-08-01,"Hey folks, I was curious what best practices are for the following use case:",,
1.31473E+17,wusticality#0397,2021-08-01,"I'm doing some gamedev work, and I have to hold onto a lot of internal handles to some native resources (Vulkan handles)",,
1.31473E+17,wusticality#0397,2021-08-01,"Would the ""correct"" way be to have a package that contains a private `atom`, say a map, holding all of these internal values, and changing said map just through opaque functions?",,
1.31473E+17,wusticality#0397,2021-08-01,"aka, `vulkan-setup`, `vulkan-teardown`, etc.",,
1.7086E+17,Shivek Khurana#6732,2021-08-02,Integrant/Mount/Component are pretty famous for handling stateful objects that depend on each other.,,
1.89169E+17,srasu#0042,2021-08-02,"When doing a library though, I'd recommend just making it part of the contract that users must call the specified functions at startup and close. You don't want to force you users to work with a particular component library.",,
1.31473E+17,wusticality#0397,2021-08-03,"Hey folks, quick question about type hints",,
1.31473E+17,wusticality#0397,2021-08-03,I'm integrating Vulkan via LWJGL in Clojure and was trying to call the following: `(VK11/vkEnumerateInstanceExtensionProperties nil count-ptr nil)`,,
1.31473E+17,wusticality#0397,2021-08-03,"I get an error about not being able to disambiguate between 4 different signatures, so I tried this instead:",,
1.31473E+17,wusticality#0397,2021-08-03,`(VK11/vkEnumerateInstanceExtensionProperties ^CharSequence nil ^IntBuffer count-ptr ^Buffer nil)`,,
1.31473E+17,wusticality#0397,2021-08-03,Can you not have type hints in function calls?,,
1.31473E+17,wusticality#0397,2021-08-03,"Unless I'm wrong, it looks like the only way to fix this is to wrap the function and specify type hints in the method signature, otherwise I get this error: `Metadata can only be applied to IMetas`",,
1.89169E+17,srasu#0042,2021-08-03,"So you can use typehints in function calls, but I don't think you can typehint nil directly.",,
1.89169E+17,srasu#0042,2021-08-03,"For these sorts of things, clojure fns that wrap the api become useful.",,
1.89169E+17,srasu#0042,2021-08-03,"Like so:
```clojure
(defn enumerate-instance-extension-properties
  [^CharSequence instance-name ^IntBuffer count-ptr ^Buffer buf]
  (VK11/vkEnumerateInstanceExtensionProperties instance-name count-ptr buf))
```",,
1.89169E+17,srasu#0042,2021-08-03,"Type hints for reference can go on the symbols that name variables, on some expressions, and special handling on the vector for a function's argument list to type hint the return.",,
1.89169E+17,srasu#0042,2021-08-03,"But strings, regexes, and nils can't take type hints because they are transparently the java objects that represent them, and those java objects don't take metadata",,
1.89169E+17,srasu#0042,2021-08-03,@wusticality,,
1.31473E+17,wusticality#0397,2021-08-03,"I did exactly what you had recommended yesterday, came to the same conclusion 🙂",,
1.31473E+17,wusticality#0397,2021-08-03,Thanks!,,
1.89169E+17,srasu#0042,2021-08-03,Awesome!,,
1.31473E+17,wusticality#0397,2021-08-04,Are you talking about this: https://github.com/stuartsierra/component,,
2.34343E+17,Johnny#3826,2021-08-04,yes,,
2.34343E+17,Johnny#3826,2021-08-04,component is the oldest of the 3 iirc.,,
1.31473E+17,wusticality#0397,2021-08-04,"At the moment I'm wrapping Vulkan and it's a pain because if anything goes wrong, you have to teardown all existing Vulkan references, and in the right order",,
2.34343E+17,Johnny#3826,2021-08-04,Mount tries to make it super accessible and easy,,
1.31473E+17,wusticality#0397,2021-08-04,as it's bound to a native API,,
2.34343E+17,Johnny#3826,2021-08-04,Integrant has a different model I think,,
1.31473E+17,wusticality#0397,2021-08-04,Any opinion on what's best?,,
2.34343E+17,Johnny#3826,2021-08-04,"I have only used mount, it may be a bit too simplistic for your use case",,
2.34343E+17,Johnny#3826,2021-08-04,I think @srasu can vouch for integrant,,
1.31473E+17,wusticality#0397,2021-08-04,"The main problem I'm running into is I have to store off these handles immediately when they are created or I can't tear them down properly is something goes wrong, and currently I'm doing that in a big global `atom` which feels gross",,
2.34343E+17,Johnny#3826,2021-08-04,"I know that people like component too, but it forces you to do a lot of non-clojure-y things iirc",,
2.34343E+17,Johnny#3826,2021-08-04,I think you can definitely solve this with one of these libraries,,
1.31473E+17,wusticality#0397,2021-08-04,I wonder what dictates stop / start with these libraries,,
1.89169E+17,srasu#0042,2021-08-04,"yeah I like integrant. No weird pseudo-oo crap, easy to reload, nice workflow.",,
1.89169E+17,srasu#0042,2021-08-04,You can make your resources with defrecord and implement Closable and use with-open to get your orders right.,,
1.89169E+17,srasu#0042,2021-08-04,They usually do a dependency order graph traversal.,,
1.31473E+17,wusticality#0397,2021-08-04,"@srasu with integrant, what do you do if one of your systems has to have mutable state?",,
1.31473E+17,wusticality#0397,2021-08-04,"For example, wrapping Vulkan or some other native library",,
1.31473E+17,wusticality#0397,2021-08-04,I guess the `init-key` for that system should return an `atom` or something,,
1.31473E+17,wusticality#0397,2021-08-04,I'm assuming the atom is created exactly once,,
1.31473E+17,wusticality#0397,2021-08-04,I suppose the other problem here is if exceptions are emitted in any `init-key`,,
1.89169E+17,srasu#0042,2021-08-04,Store an atom in the system,,
1.31473E+17,wusticality#0397,2021-08-04,Sounds good,,
1.7086E+17,Shivek Khurana#6732,2021-08-05,I can also vouch for intergrant,,
1.7086E+17,Shivek Khurana#6732,2021-08-05,Integrant has less boilerplate code that component.,,
1.7086E+17,Shivek Khurana#6732,2021-08-05,Integrant is meant exactly for this scenario.,,
1.7086E+17,Shivek Khurana#6732,2021-08-05,Stuart Sierra gave a talk about components. The same ideas apply to integrant and mount too: https://www.youtube.com/watch?v=13cmHf_kt-Q&ab_channel=ClojureTV,,
1.31473E+17,wusticality#0397,2021-08-07,"Hey folks, quick question about canonical Clojure and `def`'s",,
1.31473E+17,wusticality#0397,2021-08-07,"Is it common practice to have a `def` in a package that just defines a bunch of default values, and then those values are referenced within functions? (in this case, it's for some default settings for a native API)",,
1.31473E+17,wusticality#0397,2021-08-07,Or is it more common for folks to thread those settings through some top level function,,
1.31473E+17,wusticality#0397,2021-08-07,"In this case, the `def`'s are just settings that don't change",,
1.89169E+17,srasu#0042,2021-08-07,"It's commom to have defs for that, yes.",,
1.89169E+17,srasu#0042,2021-08-07,@wusticality,,
1.31473E+17,wusticality#0397,2021-08-07,aighty,,
1.31473E+17,wusticality#0397,2021-08-07,"I am seeing some weird behavior in Cider - I keep evaluating entire namespaces but it's still using old versions of the code, even after I restart the JVM ..",,
1.31473E+17,wusticality#0397,2021-08-07,"Hah. I had moved a file to another package, but the JVM was using the compiled bytecode from the previous one without giving me an error. Did a `lein clean` and then I got a compilation error. Has anyone else run into this before? If so, what's the solution in general?",,
1.89169E+17,srasu#0042,2021-08-07,Don't aot,,
1.89169E+17,srasu#0042,2021-08-07,Doing aot is good for final deployment of an application (but not a library!) and lein does it during development if you have aot in your project.clj,,
1.89169E+17,srasu#0042,2021-08-07,@wusticality,,
1.31473E+17,wusticality#0397,2021-08-07,I assume there’s a way to enable it for non-dev builds,,
2.34343E+17,Johnny#3826,2021-08-07,You could enable it by default and disable it in the dev profile I think,,👍 (1)
1.89169E+17,srasu#0042,2021-08-07,I think so.,,
5.24334E+17,⃟⃟#8027,2021-08-07,is there a way to do tcp with the standard library,,
5.24334E+17,⃟⃟#8027,2021-08-07,also http requests,,
2.34343E+17,Johnny#3826,2021-08-07,"Yes, through java interop",,
5.24334E+17,⃟⃟#8027,2021-08-07,does typed clojure cover the standard library,,
4.00613E+17,DrNoobopolis#6558,2021-08-08,How can I join two arrays such ``(join [1 2 3] [1 2 3]) -> [[1 1] [2 2] [3 3]]``?,,
4.00613E+17,DrNoobopolis#6558,2021-08-08,"This is the solution I came up with
```clj
(defn zip [& seq]
    (apply map vector seq))
```",,
1.89169E+17,srasu#0042,2021-08-08,yup,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-08-08,I'm not so sure about the performance characteristics of packing `seq` and splicing `seq` again with `apply` though.,,
2.34343E+17,Johnny#3826,2021-08-08,Most likely insignificant in this case,,
1.89169E+17,srasu#0042,2021-08-08,Well you could write an inline for it,,
1.31473E+17,wusticality#0397,2021-08-08,"Just gotta say, in Clojure, even wrapping the Vulkan API (through LWJGL and being careful about native memory) is such an enjoyable experience compared to imperative languages",,
1.31473E+17,wusticality#0397,2021-08-08,"Btw, I was curious, which Clojurians space is more frequented, Discord or Slack?",,
1.89169E+17,srasu#0042,2021-08-08,"Slack has over 20k members in the most active channel, and tens of thousands of messages a week.",,
1.89169E+17,srasu#0042,2021-08-08,"Well, that ballpark message number may be wrong",,
1.89169E+17,srasu#0042,2021-08-08,but that's more or less my guess.,,
1.31473E+17,wusticality#0397,2021-08-08,"I vastly prefer Discord myself, it's so much snappier",,
1.89169E+17,srasu#0042,2021-08-08,"Yeah, I agree strongly. I use discord, and I wrote a library for making discord bots in Clojure.",,
1.31473E+17,wusticality#0397,2021-08-09,hah nice,,
1.31473E+17,wusticality#0397,2021-08-09,Is Rich Hickey still active? I haven't seen him give any talks in a couple of years,,
1.56049E+17,maxminoS#5593,2021-08-09,"isnt it something like merge, or apply merge, or merge-with",,
6.09061E+17,mavbozo#8726,2021-08-09,he's still active. he gave talk last june https://www.pldi21.org/prerecorded_hopl.11.html,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-08-09,"FWIW, if you're okay with a closure: `partial map vector`",,
2.40082E+17,benjamin-asdf#3471,2021-08-10,What is the best way to get started with android development (with clojure),,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-08-10,Clojure+Android is pretty dead as of the moment. You might be able to get something with React Native + ClojureScript though?,,"👍 (2),➕ (1)"
1.89169E+17,srasu#0042,2021-08-10,yup,,
1.31473E+17,wusticality#0397,2021-08-11,"Hey folks, is there some way to declare clojure data in `lein` at compile time? I have some code that I want to totally exclude through a macro for the final build",,
2.34343E+17,Johnny#3826,2021-08-11,You can set global vars in lein and I think you can use them at compile time,,
2.34343E+17,Johnny#3826,2021-08-11,So you could use that at macro expand time I think,,
1.31473E+17,wusticality#0397,2021-08-11,Is that different from `:elide-meta`?,,
2.34343E+17,Johnny#3826,2021-08-11,Idk that option,,
2.34343E+17,Johnny#3826,2021-08-11,Probably,,
1.31473E+17,wusticality#0397,2021-08-11,"Hey @Johnny , I can't seem to find anything on global variables in `lein`, where are you seeing that?",,
2.34343E+17,Johnny#3826,2021-08-11,I think the key for it is `:global-vars`,,
2.34343E+17,Johnny#3826,2021-08-11,Hold on,,
2.34343E+17,Johnny#3826,2021-08-11,https://github.com/JohnnyJayJay/ring-discord-auth/blob/main/project.clj,,
2.34343E+17,Johnny#3826,2021-08-11,Here's an example,,
1.31473E+17,wusticality#0397,2021-08-11,thanks!,,
1.31473E+17,wusticality#0397,2021-08-14,What's a good way to perform operations in submaps?,,
1.31473E+17,wusticality#0397,2021-08-14,"aka, to modify a nested key and get back the whole outer map",,
1.31473E+17,wusticality#0397,2021-08-14,I think `update-in` might be it,,
1.89169E+17,srasu#0042,2021-08-15,"update-in, but also specter
https://github.com/redplanetlabs/specter",,
1.89169E+17,srasu#0042,2021-08-15,this library is amazing,,
1.84841E+17,Aperiodic Orbit#8099,2021-08-17,"What's the most efficient type of collection to manually index? The other day I was trying to do so with a regular list and then a vector, and they were both pretty darn slow",,
1.84841E+17,Aperiodic Orbit#8099,2021-08-17,specifically i did it using the nth function,,
2.67464E+17,SlashDevSlashRandom#2112,2021-08-17,"What do you mean by ""manually index""? What are you trying to accompish?",,
1.84841E+17,Aperiodic Orbit#8099,2021-08-17,nvm found my answer elsewhere 😅,,
1.89169E+17,srasu#0042,2021-08-17,nth is near constant time for vectors. nth on sequences is linear time.,,
1.89169E+17,srasu#0042,2021-08-17,"Neither will be quite as fast as indexing an array with aget, but it will be fast",,
8.46576E+17,cuatro#0987,2021-08-19,is there an algo for most efficient way to create lots of similar maps (that share some field/value pairs)?,,
8.46576E+17,cuatro#0987,2021-08-19,i can measure the difference between two maps with editscript diff,,
1.89169E+17,srasu#0042,2021-08-19,"You can have either a map literal which adds all the keys at once, use transients, or if you're really hurting for nanoseconds, records.",,
8.46576E+17,cuatro#0987,2021-08-19,"thanks! i need to use maps because i want to find the minimum number of merge/assoc calls to build the full set of maps. e.g. if all the maps contained a {:A :B} (as well as other kvs that are different) then i could start from {:A :B} and create the rest of the maps from assoc-ing onto that.... i need an algo for the minimum number of steps (with the aim of speeding up the creation of maps and also using less code). i don't want to read large edn of similar maps, but rather execute the minimum amount of code to accomplish the same.",,
3.12306E+17,calibayzone#6352,2021-08-19,counted? did not protect us in the latter case.,,
1.86177E+17,Boris Povolotsky#0310,2021-08-21,"Hi everyone, fairly new to Clojure. I'm interested to replace an API I have written in node. 
Could this example of Sean Corfield serve as a guide or is it considered a rather advanced approach? 
https://github.com/seancorfield/usermanager-example/blob/develop/src/usermanager/main.clj
thanks.",,
2.18602E+17,lsenjov#4288,2021-08-21,It's a decent guide for getting something very basic up,,
3.12132E+17,howard roark#9925,2021-08-22,how does one save a record in luminus (postgres) with an id? how would it increment per record?,,
2.67464E+17,SlashDevSlashRandom#2112,2021-08-22,"a typical way of getting an incrementing ID in the DB is to specify a column as ""auto increment"", and then the insert statements omit the primary key field and the DB handles assigning a value to it",,
3.12132E+17,howard roark#9925,2021-08-24,@SlashDevSlashRandom yep that’s what I’ve figured. Didn’t know you have to reload  the queries first before that works,,
3.12132E+17,howard roark#9925,2021-08-24,Anyone knows where to exactly put wrap-cors in a luminus web app? Im stuck developing because of cors issue,,
2.40082E+17,benjamin-asdf#3471,2021-08-27,"does somebody have a project setup to compile kotlin? The lein plugin lein-kotlinc seems to be outdated it uses an old kotlin stdlib package and I get ""unresolved reference ""println""""",,
2.34343E+17,Johnny#3826,2021-08-27,what do you need kotlin for in a clojure project?,,
2.40082E+17,benjamin-asdf#3471,2021-08-27,I'm playing around with making an intellij plugin but yea. I realized it doesn't really matter because I can use java if I need to,,
2.2083E+17,dj charlie#8800,2021-08-28,"peeps, how to grep clojure docs without using the webapp?",,
2.2083E+17,dj charlie#8800,2021-08-28,the clojure docs webapp,,
2.2083E+17,dj charlie#8800,2021-08-28,"i use a script where i press command and m and it shows every ocaml module that my local environment's aware of and selecting either one of pipes info to my editor, would be useful to have something similar with clojure",,
2.67464E+17,SlashDevSlashRandom#2112,2021-08-28,"Cursive does something sort of like that - it pulls down the examples from clojuredocs and displays them along with the documentation. I think what you're asking for is less a language question and more an editor/plugin-specific question. If you're using emacs and CIDER, <https://docs.cider.mx/cider/1.1/usage/working_with_documentation.html#clojuredocs> might give you what you want",,
3.12132E+17,howard roark#9925,2021-08-31,is it always the case that the payload in json requests always reside in `:body-params`? how does it do that? is it through a middleware?,,
2.34343E+17,Johnny#3826,2021-08-31,in what requests?,,
3.12132E+17,howard roark#9925,2021-08-31,"any request, into your web api",,
2.34343E+17,Johnny#3826,2021-08-31,well... what is your web api written with,,
2.34343E+17,Johnny#3826,2021-08-31,are you talking about ring?,,
3.12132E+17,howard roark#9925,2021-08-31,"ah yes sorry, luminus. i guess it comes with ring as the http server",,
2.34343E+17,Johnny#3826,2021-08-31,"Hmm, I'm not familiar with the `:body-params` key, it must be some middleware that does that",,
2.34343E+17,Johnny#3826,2021-08-31,"As per the ring spec, the payload is in `:body`",,
2.18602E+17,lsenjov#4288,2021-08-31,"Yeah, there's ring middleware that does it, might be in the default middleware",,
2.34343E+17,Johnny#3826,2021-08-31,skimmed through the params middlewares and couldn't find it,,
3.12132E+17,howard roark#9925,2021-08-31,Sorry guys had to go to bed. Just found maybe the culprit. It wasn't just purely ring but i think it's `reitit ` and `muuntaja` @Johnny  @lsenjov,,
3.12132E+17,howard roark#9925,2021-08-31,could be it?,,
2.18602E+17,lsenjov#4288,2021-08-31,I don't think it's reitit,,
2.34343E+17,Johnny#3826,2021-08-31,not familiar with either,,
2.18602E+17,lsenjov#4288,2021-08-31,"Might be muuntaja, I haven't used it much",,
2.18602E+17,lsenjov#4288,2021-08-31,https://github.com/ring-clojure/ring/blob/master/ring-core/src/ring/middleware/params.clj,,
2.18602E+17,lsenjov#4288,2021-08-31,That's the middleware that should be doing it,,
3.12132E+17,howard roark#9925,2021-08-31,ok i think it's muuntaja,https://cdn.discordapp.com/attachments/315388260987830272/882402463720800286/Content_Negotiation__metosin_reitit_0_5_15.png,
3.12132E+17,howard roark#9925,2021-08-31,thanks for the link btw @lsenjov,,
3.12132E+17,howard roark#9925,2021-08-31,is there a #luminus channel where i can ask these questions?,,
2.18602E+17,lsenjov#4288,2021-08-31,On the slack,,
2.60287E+17,Cpt. Kirk#9148,2021-09-01,Is the slack not public?,,
1.89169E+17,srasu#0042,2021-09-01,it is,,
1.89169E+17,srasu#0042,2021-09-01,clojurians.slack.com,,
5.25325E+17,Honza_Suran#6703,2021-09-01,"Would anyone know, why ""case"" doesn't work here?",https://cdn.discordapp.com/attachments/315388260987830272/882732576106741800/unknown.png,
1.89169E+17,srasu#0042,2021-09-01,Case clauses don't evaluate their keys,,
1.89169E+17,srasu#0042,2021-09-01,so the symbols don't resolve to their type,,
1.89169E+17,srasu#0042,2021-09-01,your condp might also work better with `instance?` as the pred,,
5.25325E+17,Honza_Suran#6703,2021-09-01,Yup I was just lazy... but even this does not work...,https://cdn.discordapp.com/attachments/315388260987830272/882733687576338512/unknown.png,
2.34343E+17,Johnny#3826,2021-09-01,"> Case clauses don't evaluate their keys so the symbols don't resolve to their type
still",,
2.34343E+17,Johnny#3826,2021-09-01,`tornado.types.CSSColor` evaluates to a class object,,👍 (1)
2.34343E+17,Johnny#3826,2021-09-01,the clauses are still symbols,,
5.25325E+17,Honza_Suran#6703,2021-09-01,"Hmm, ok. Thanks for explanations.",,
7.64259E+17,proZaC#2499,2021-09-11,"Goooooooood morning, is anybody available to help me step through some code? xD",,
7.64259E+17,proZaC#2499,2021-09-11,"```(defn balanced? 
  ""Parenthesis balance checker.""
  {:test #(do
            (assert (true? (balanced? ""()"")))
            (assert (true? (balanced? ""()()"")))
            (assert (true? (balanced? ""(()(()))"")))
            (assert (true? (balanced? ""(h(e)j(h(o)p)p)"")))
            (assert (false? (balanced? ""(he)j)h(opp"")))
            (assert (false? (balanced? ""())(""))))}
    [s]
    (->> s
        ;; remove non-paranthesis characters
        (filter #{\( \)})

        ;; reduce down to an empty or non-empty vector
        (reduce
            (fn [stack item]
                (cond
                    (#{ \( } item) (conj stack item)
                    (and (#{ \( } (last stack))
                         (= ({ \) \( } item) (last stack)))
                    (pop stack)

                    :else (conj stack item)))
        [])

        ;; return whether we have any unbalanced brackets
        empty?))```",,
7.64259E+17,proZaC#2499,2021-09-11,I'm wondering about the first condition ...,,
7.64259E+17,proZaC#2499,2021-09-11,"`(#{ \( } item) (conj stack item)`

Specifically what kind of check does the condition do? I've tried to test it out but I'm not getting much wiser ...

`(#{ \( } item)` <- ?",,
7.64259E+17,proZaC#2499,2021-09-11,"Yay! Have no fear, Johnny's here! 😄",,
2.34343E+17,Johnny#3826,2021-09-11,"`#{}` denotes a set. `\(` is the character literal `(`, `\)` is the character literal `)`. So `#{\( \)}` is a set containing the characters `(` and `)`. Now in Clojure, sets can be called like functions. They take one argument and will return the argument if it's contained in the set, and nil otherwise. Thus they can be used as predicates and it's an idiom to use them like that

I.e. `(filter #(or (= % \) (= % \()) coll)` is equivalent to `(filter #{\( \)} coll)`",,
2.34343E+17,Johnny#3826,2021-09-11,"yep. I was supposed to be in the library studying right now, but I overslept. lol",,
7.64259E+17,proZaC#2499,2021-09-11,"Thanks Johnny, appreciate it once again!",,
7.64259E+17,proZaC#2499,2021-09-11,😉 One must rest as well! It's important,,
2.34343E+17,Johnny#3826,2021-09-11,"well, not when you have an exam in 3 days that you have to get up at 7 for",,
7.64259E+17,proZaC#2499,2021-09-11,"Question: If that is true, then why does this code return nil?

``` (defn -main
  ""Main function""
  [& args]
  (#{ \( } ""("" ))```",,
2.34343E+17,Johnny#3826,2021-09-11,"Because `(not= \( ""("")`",,
2.34343E+17,Johnny#3826,2021-09-11,"one's a string, the other is a character",,
7.64259E+17,proZaC#2499,2021-09-11,okay but if I write  \(,,
7.64259E+17,proZaC#2499,2021-09-11,`\(` There's an error,,
2.34343E+17,Johnny#3826,2021-09-11,can't say much without seeing the code,,
7.64259E+17,proZaC#2499,2021-09-11,"```efn -main
  ""Main function""
  [& args]
  (#{ \( } ""\("" ))```

Syntax error reading source at (testing.clj:7:15).
Unsupported escape character: \(",,
7.64259E+17,proZaC#2499,2021-09-11,or even,,
7.64259E+17,proZaC#2499,2021-09-11,looooool ok,,
7.64259E+17,proZaC#2499,2021-09-11,My bad,,
7.64259E+17,proZaC#2499,2021-09-11,just \(,,
2.34343E+17,Johnny#3826,2021-09-11,you're putting this in a string,,
7.64259E+17,proZaC#2499,2021-09-11,`\(`,,
7.64259E+17,proZaC#2499,2021-09-11,Gotcha,,
7.64259E+17,proZaC#2499,2021-09-11,Thanks for clearing that out!!,,
7.64259E+17,proZaC#2499,2021-09-11,What is the subject of study today?,,
2.34343E+17,Johnny#3826,2021-09-11,"the class is called advanced mathematics, it's basically calculus 1 & 2",,
7.64259E+17,proZaC#2499,2021-09-11,Cool,,
7.64259E+17,proZaC#2499,2021-09-11,while I have you on the line,,
7.64259E+17,proZaC#2499,2021-09-11,How do I pass arguments in the REPL to the main function?,,
7.64259E+17,proZaC#2499,2021-09-11,"(-main) ""(())))"" doesn't seem to work",,
7.64259E+17,proZaC#2499,2021-09-11,xD,,
7.64259E+17,proZaC#2499,2021-09-11,And thank you kindly for your patience Johnny,,
2.34343E+17,Johnny#3826,2021-09-11,Like to any other function,,
2.34343E+17,Johnny#3826,2021-09-11,"`(-main ""(())))"")`",,
7.64259E+17,proZaC#2499,2021-09-11,Ah,,
7.64259E+17,proZaC#2499,2021-09-11,"```(ns stefan-1.core
  (:gen-class))

(defn balanced? 
  ""Parenthesis balance checker.""
  {:test #(do
            (assert (true? (balanced? ""()"")))
            (assert (true? (balanced? ""()()"")))
            (assert (true? (balanced? ""(()(()))"")))
            (assert (true? (balanced? ""(h(e)j(h(o)p)p)"")))
            (assert (false? (balanced? ""(he)j)h(opp"")))
            (assert (false? (balanced? ""())(""))))}
    [s]
    (->> s
        ;; remove non-paranthesis characters
        (filter #{\( \)})

        ;; reduce down to an empty or non-empty vector
        (reduce
            (fn [stack item]
                (cond
                    ;; checks if item is left paranthesis, if so put in stack.
                    (#{ \( } item) (conj stack item)
                    ;; if the last char in stack is \( and if the item is \) the map will return \( and check if \( is last on stack - if so it will pop - reducing a pair
                    (and (#{ \( } (last stack))
                         (= ({ \) \( } item) (last stack)))
                    (pop stack)
                    ;; if above conditions return false, then we add it to stack since it might be the beginning of a new pair.
                    :else (conj stack item)))
        [])

        ;; return whether we have any unbalanced brackets
        empty?))

(defn -main
  ""Main function""
  [& args]
  (if (empty? args) (test #'balanced?))
  (balanced? args))```",,
7.64259E+17,proZaC#2499,2021-09-11,Why does this return true all the time? 😦,,
7.64259E+17,proZaC#2499,2021-09-11,"`stefan-1.core> (-main "")"")
true`",,
2.03571E+17,p-himik#7777,2021-09-11,Print `args` within `-main` to understand.,,
2.03571E+17,p-himik#7777,2021-09-11,"Also, just in case - you don't need to preserve the actual characters to check whether the parentheses are balanced. Use a plain integer, `inc` it when it's `(`, `dec` it when it's `)`, on each step check that it's not negative.",,
7.64259E+17,proZaC#2499,2021-09-11,Thanks for the input p-himik!,,
7.64259E+17,proZaC#2499,2021-09-11,p-himik can you elaborate on how to implement the inc in this case as you suggested?,,
7.64259E+17,proZaC#2499,2021-09-11,Thanks!,,
2.03571E+17,p-himik#7777,2021-09-11,"```clojure
(defn balanced? [s]
  (let [n (reduce (fn [acc c]
                    (let [acc (case c
                                \( (inc acc)
                                \) (dec acc)
                                acc)]
                      (cond-> acc
                        (neg? acc) reduced)))
                  0 s)]
    (zero? n)))
```",,
7.64259E+17,proZaC#2499,2021-09-11,Thanks!!!,,👍 (1)
7.64259E+17,proZaC#2499,2021-09-11,cool!,,
7.64259E+17,proZaC#2499,2021-09-11,I have to read up on -> syntax,,
2.03571E+17,p-himik#7777,2021-09-11,"It's not syntax, it's a macro. And it's not `->`, it's `cond->`.",,
7.64259E+17,proZaC#2499,2021-09-11,ahaa!,,
7.64259E+17,proZaC#2499,2021-09-11,A clue! 🙂,,
2.03571E+17,p-himik#7777,2021-09-11,"If you have a decent IDE, you can just navigate to its source and read both its docstring and the implementation.",,
7.64259E+17,proZaC#2499,2021-09-11,"Will do, using emacs",,
2.34343E+17,Johnny#3826,2021-09-11,Or what's often more insightful: do a macroexpand,,
2.34343E+17,Johnny#3826,2021-09-11,C-c RET in cider,,
2.03571E+17,p-himik#7777,2021-09-11,"It might prove to be too much for a beginner though - macros are usually hard to understand from out of nowhere.
Yeah, `macroexpand` is helpful, forgot about that.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"I have a macro, there is a let in the body of the defmacro

When I call the macro, I have a let body as well, but I don't want the let being passed to the macro to have a gensym applied
```clj
(defmacro m [x y & body]
  `(let [~'result (something ~x ~y)]
      ~@body))

(m (let [ip (something result)]
    (use ip)))
```
something to that effect, but `ip` is getting a gensym applied so I can't refer to ip, its like `user$eval8357$ip__8358`
how do I avoid that problem?",,
2.03571E+17,p-himik#7777,2021-09-11,"Can you provide the actual code? Your macro above won't even run with those arguments since `y` is not provided.
Just tried it out and there weren't any problems, as expected:
```
user=> (defmacro m [& body] `(let [] ~@body))
#'user/m
user=> (macroexpand '(m (let [x 1] x)))
(let* [] (let [x 1] x))
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```clj
(defn fmt [& args]
  ""use cl-format to format strings""
  (apply clojure.pprint/cl-format args))

(defn input-for-day [y d]
  ""get the input for a specific day""
  (slurp (fmt nil ""../~A/~A.txt"" y d)))

(defmacro day [y d & body]
  `(let [~'input (input-for-day ~y ~d)]
    ~@body))


(day 2015 1
     (let [dom #(map {\( 1 \) -1 } (char-array input))]
       (list (apply + dom)
             (->> dom
                  (reductions +)
                  (keep-indexed #(if (= -1 %2) %1))
                  (first)
                  (inc)))))
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,the `dom` there is getting a gensym applied,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,and so I can't refer to it by name,,
2.03571E+17,p-himik#7777,2021-09-11,"Are you sure you're running regular Clojure and not some third-party interpreter?
Because that's not what I see at all on 1.10.3:
```clojure
(macroexpand '(day 2015 1
                   (let [dom #(map {\( 1 \) -1} (char-array input))]
                     (list (apply + dom)
                           (->> dom
                                (reductions +)
                                (keep-indexed #(if (= -1 %2) %1))
                                (first)
                                (inc))))))
=>
(let*
 [input (dev/input-for-day 2015 1)]
 (let
  [dom (fn* [] (map {\( 1, \) -1} (char-array input)))]
  (list
   (apply + dom)
   (->> dom (reductions +) (keep-indexed (fn* [p1__78064# p2__78063#] (if (= -1 p2__78063#) p1__78064#))) (first) (inc)))))
```",,
2.03571E+17,p-himik#7777,2021-09-11,"`dom` is left as is - again, as expected.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I'm using cider?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"`   Don't know how to create ISeq from: user$eval8369$dom__8370
`",,
2.03571E+17,p-himik#7777,2021-09-11,"Cider is part of your editor. Unless it actively rewrites the code you execute or send to your REPL, it shouldn't matter.

Are you sure that symbol comes from that macro?",,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-09-11,"This is ClojureScript, isn't it?",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"I'm sure that when I try to evaluate ```(day 2015 1...```
I get that error",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I'm not intending to be writing clojurescript?,,
2.03487E+17,Lonely ᜋᜒᜌᜓ/Myrl but they/them#4020,2021-09-11,"Oh, my bad. I guess Clojure and ClojureScript have the same name mangling.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,@p-himik so I'm not really sure of anything except that I get that error when I `C-c C-c` the `(day 2015 1...` expression,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,and I don't know why,,
2.03571E+17,p-himik#7777,2021-09-11,"Ah, right - remove `#` in front of `#(map ...)`.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,haha,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"oops, an artifact of when it was functional rather than a macro",,
2.03571E+17,p-himik#7777,2021-09-11,"Instead of mapping over a sequence, you created a lambda. The name of the lambda is, apparently, derived from the symbol you use to refer to it.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,yes thank you that worked,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"So I don't really have an application to build, and I'm getting bored. So what I'd thought i'd do is use some old advent of code solutions and rewrite them in clojure. I got tired pretty quick of constantly having to import the input, so I defined this `input-for-day` function, and thought a macro would do the trick...

Now that I have a macro, I'm thinking a `map` of 
```clj
{:year 2015
 :solutions {:1 {:body '(body) :results (p1-result p2-result)}
             :2 {:body '(body) :results (p1-result p2-result)}
             :3 ...}}
```
would be kind of a fun way to go about defining an automatic, data driven way to not only run but also test the solutions",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"Since I had only dabbled in clojure for a short while a few years back, does this seem like a ""clojurey"" way of doing things?",,
2.03571E+17,p-himik#7777,2021-09-11,"> does this seem like a ""clojurey"" way of doing things?

Can't say without having more details - what the actual problem is, what you hope to achieve, how that map is actually used, what the keys in there mean.
One thing I can say in advance - don't use keywords like `:1`. If things are ordered, use a vector - vectors are also associative collections (you can use `get`, `assoc`, `reduce-kv`, etc with them). If not, use regular integers instead of keywords.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,they're ordered but not guaranteed,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"like, if I haven't solved day 22 yet",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"then there is no day 22, but maybe I solved day 25 already",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"so I might have 1,2,3,5,7,12,25",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,and those correspond to the day in question,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,so I could map over the keys if they're mappable to integers and use those as inputs to the `day` macro,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,idk what you mean what the actual problem is. Advent of Code is an annual problem solving challenge,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"there are 25 days, 2 parts to each puzzle, and so the format is very consistent",,
2.03571E+17,p-himik#7777,2021-09-11,"Yes, just don't turn numbers to keywords (`:1`), use the numbers themselves instead (`1`).",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"oh I see, that makes a lot of sense",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,my cider gets really really slow sometimes,,
7.64259E+17,proZaC#2499,2021-09-11,reinstall?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,i just installed it...,,
7.64259E+17,proZaC#2499,2021-09-11,"Ah okey, weird.. are you using a VM?",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,wsl,,
7.64259E+17,proZaC#2499,2021-09-11,oof,,
7.64259E+17,proZaC#2499,2021-09-11,😄,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,its usually more when there's an error of some kind,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I `C-c C-c` and then it lags out and will eventually display the error,,
7.64259E+17,proZaC#2499,2021-09-11,hmm,,
7.64259E+17,proZaC#2499,2021-09-11,and what is the error?,,
7.64259E+17,proZaC#2499,2021-09-11,is it same lag at every error,,
7.64259E+17,proZaC#2499,2021-09-11,even minor ones?,,
7.64259E+17,proZaC#2499,2021-09-11,different codebases?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,yeah even just minor errors,,
2.67464E+17,SlashDevSlashRandom#2112,2021-09-11,"So, if I'm reading that `day` macro correctly, it creates an anaphora (defining an 'assumed' symbol). Based on my reading of Joy of Clojure, these are not strictly ""bad form"", but a lot of times they're avoided, I think primarily because they don't nest, and secondarily because they create the implicit symbol that you just have to know. For reference, it's section 8.5.1 of the second edition of JoC, or if you don't have the book handy, <https://github.com/danielmiladinov/joy-of-clojure/blob/master/src/joy-of-clojure/chapter8/macros_controlling_symbolic_resolution_time.clj> contains a subset of the anaphora section in the book.",,"👍 (2),➕ (2)"
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"That's also intentional. I don't want to constantly have to define input for each day, it would be nice if I could just have the input all the time",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```clj
(day 2015 1
     (let [dom (map {\( 1 \) -1 } (char-array input))]
       (list (apply + dom)
             (->> dom
                  (reductions +)
                  (keep-indexed #(if (= -1 %2) %1))
                  (first)
                  (inc)))))

(day 2015 2
     (let [lns (s/split-lines input)
           rep #(take 4 (cycle %))
           par #(partition 2 1 (rep %))
           dom (map #(map int (s/split % #""x"")) lns)]
       (list (apply + (map (fn [x] (->> x
                                       (par)
                                       (map #(apply * %))
                                       (#(apply + (apply min %) (map (fn [x] (* 2 x)) %)))))
                           dom))
             (apply + (map (fn [x] (->> (sort x)
                                       (take 2)
                                       (map #(* 2 %))
                                       (apply + (apply * x))))

                           dom)))))
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,Here's the solutions for the first 2 days for 2015,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,And I want some way to just have the input from the file without having to constantly define it everywhere,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"How would you do that without ""anaphoric"" style?",,
2.03571E+17,p-himik#7777,2021-09-11,"You don't have to right away _define_ input - you can go the same road as `as->` goes, for example.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,but input is different per day,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,but the same for part1 and part2 of that day,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,of course I could define a function which accepts the input,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,but that's just another level of unnecessary nesting,,
2.03571E+17,p-himik#7777,2021-09-11,"That's not what I'm suggesting.
I'm suggesting to just provide the name of the `input` variable to `day`.
So it will be `(day input 2015 1 ...)` instead of `(day 2015 1 ...)`, or in a different order if you prefer.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,oh interesting,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"but in that case, wouldn't you need to do `(day 'input 2015 1...)`?",,
2.03571E+17,p-himik#7777,2021-09-11,No.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,Or is the macro syntax smart enough to know its a symbol?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,interesting,,
2.03571E+17,p-himik#7777,2021-09-11,Macros receive unevaluated data.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,ok that makes sense,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```clj
(defmacro day [y d v & body]
  `(let [~v (input-for-day ~y ~d)]
    ~@body))

(day 2015 1 input
     (let [dom (map {\( 1 \) -1 } (char-array input))]
       (list (apply + dom)
             (->> dom
                  (reductions +)
                  (keep-indexed #(if (= -1 %2) %1))
                  (first)
                  (inc)))))

```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,so that,,
2.03571E+17,p-himik#7777,2021-09-11,Yep.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,interesting,,
2.03571E+17,p-himik#7777,2021-09-11,No there are no implicit names.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,What do you mean?,,
2.03571E+17,p-himik#7777,2021-09-11,"Before that change, `input` was an implicit name which made that macro anaphoric. Now you, a user of that macro, provides it explicitly - the user is in control.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"Oh, 
> now* there are no implicit types",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I thought you were making a correction and I did something wrong 😛,,
2.03571E+17,p-himik#7777,2021-09-11,"Right, sorry. :)",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,didn't want to do something wrong :C,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,is there a threading expression for nested bodies?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```clj
(->> ...
     (nested (body-waiting-args1)
             (body-waiting-args2))
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"I guess I want to pass an evaluation to 2 functions, which are combined",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"`F(G(x), H(x))`",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,Is there a combinator for that?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,APL fork style,,
2.03571E+17,p-himik#7777,2021-09-11,"The clever way is:
```clojure
(apply F ((juxt G H) (compute-value)))
```

The proper way is:
```clojure
(let [x (compute-value)]
  (F (G x) (H x)))
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,but not within a threaded expression,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```
       (apply + (map (fn [x] (->> (sort x)
                                  (par)
                                  (map #(apply * %))
                                  (#(apply + (first %)                                               (map dbl %)))))
                           dom))
```
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I want the first and the map dbl of `%`,,
2.03571E+17,p-himik#7777,2021-09-11,"No, and I would never write a macro that allows to do that as well.

`->`, `->>` et all have clear semantics and are ""dumb"". It's good. Much less cognitive load.

Just use `let`.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,but this expression is kinda inelegant in that `->>` expression,,
2.03571E+17,p-himik#7777,2021-09-11,"Yes, because that's not what `->>` is for.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```clj
       (list (apply + (map (fn [x] (->> (sort x)
                                       (par)
                                       (map #(apply * %))
                                       (apply + ((juxt first #(map dbl %))))))
                           dom))
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,so that `juxt` doesn't work there :/,,
2.03571E+17,p-himik#7777,2021-09-11,"A helpful article on the topic: https://stuartsierra.com/2018/07/06/threading-with-style
A follow-up: https://stuartsierra.com/2018/07/15/clojure-donts-thread-as

I somewhat disagree with the author on the account of arithmetic though (sometimes it makes sense).",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,though,,
2.67464E+17,SlashDevSlashRandom#2112,2021-09-11,"you could rewrite p-himik's thing with threading:
```clj
(let [f *
      g inc
      h dec]
  (->> 7
    ((juxt g h))
    (apply f)))
=> 48
```
but it's maybe a little ugly",,
2.03571E+17,p-himik#7777,2021-09-11,"Not gonna lie, that code is quite painful to look at.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"i mean, I don't know what I'm doing",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I'm all ears,,
2.03571E+17,p-himik#7777,2021-09-11,_Assign. Names._,,
2.03571E+17,p-himik#7777,2021-09-11,Use `let` _everywhere_.,,
2.03571E+17,p-himik#7777,2021-09-11,Use `defn` _everywhere_.,,
2.03571E+17,p-himik#7777,2021-09-11,"You don't have to have a single function that does all. You _should_, in fact, have a lot of small functions that are obvious. Ones that you could grasp in superficial reading, without having to spend half an hour figuring out where that `%` belongs.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```clj
(->> (sort x)
    (par)
    (map #(apply * %))
    (juxt first #(map dbl %))
    (apply +))
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,why diesn't it like that?,,
2.03571E+17,p-himik#7777,2021-09-11,Have you read `(doc juxt)`?,,
2.03571E+17,p-himik#7777,2021-09-11,`->>` threads the values through the forms. `(juxt ...)` is such a form. `->>` adds another argument to it - it doesn't wrap it in extra `()`.,,➕ (1)
2.03571E+17,p-himik#7777,2021-09-11,"```clojure
user=> (macroexpand '(->> 1 (juxt inc dec)))
(juxt inc dec 1)
```",,
2.03571E+17,p-himik#7777,2021-09-11,"`juxt` is useful when it is painfully obvious what it creates. For all other cases, just extract it into a function. It can be an extra `defn` at the namespace level, or it can be a `(fn ...)` within some `let` bindings block.",,
2.67464E+17,SlashDevSlashRandom#2112,2021-09-11,"functions that return functions (juxt, comp, partial) can get a little messy (for lack of a better term) in the threading macros",,
2.03571E+17,p-himik#7777,2021-09-11,I'm 85% certain that I heard from the core team that Rich himself thinks that `comp` and `partial` in particular should not be used.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I don't... understand why this doesn't work,,
2.03571E+17,p-himik#7777,2021-09-11,"Not just in threading macros, but anywhere.",,
2.03571E+17,p-himik#7777,2021-09-11,Try using `macroexpand` to see.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I am,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I'm getting an error with macroexpand,,
2.03571E+17,p-himik#7777,2021-09-11,How do you run it?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,`(macroexpand ((juxt #(* 2 %) #(map (fn [x] 3))) 3))`,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,oh,,
2.03571E+17,p-himik#7777,2021-09-11,"`macroexpand` is not a macro, it's a function - you have to quote the form you pass to it.",,
2.03571E+17,p-himik#7777,2021-09-11,`(macroexpand '(...))` - notice the `'`.,,
2.03571E+17,p-himik#7777,2021-09-11,"And in that particular example, there's nothing to expand really.

But can you explain in plain English what you're trying to do with that `juxt`?",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```clj
->> (sort x)
(par)
(map #(apply * %))
((juxt first #(map dbl %)))
(flatten)
(apply + )
```",,
2.03571E+17,p-himik#7777,2021-09-11,That's not plain English. :),,
2.03571E+17,p-himik#7777,2021-09-11,"Not the _whole_ thing - just the `juxt` part. What's expected as an input, what should be its output?",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,sorry I just got it working that worked,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I'm trying to do exactly what I said,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I want to apply some f to the results of g(x) and h(x),,
2.03571E+17,p-himik#7777,2021-09-11,"Oof, don't use `flatten` as well, unless you 100% sure you need that particular function. Especially not in this case.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```apl
avg←+/ ÷ ⍴
avg ⍳10
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,apl fork,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"well the result is of the form
`[atom (3 ele vector)]`",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,and I need to sum them,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"but I was getting some kind of error saying ""can't convert lazy collection to number""",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,`[198 (396 1276 522)]`,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,That's what it looked like,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"what, apply list?",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,no that and apply vector don't work,,
2.03571E+17,p-himik#7777,2021-09-11,"APL doesn't make it easier since I don't know it.

You mentioned `F(G(x), H(x))`.
How you can write it:
```clj
(defn something [f g h x]
  (f (g x) (h x)))
```
Now all you have to do is replace `something` with a proper name.",,
2.03571E+17,p-himik#7777,2021-09-11,Throw away `juxt` out of the equation - it only complicates things for you.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,but then I have to define that,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,which is annoying,,
2.03571E+17,p-himik#7777,2021-09-11,That's the whole point. It might be 5% annoying to write but it will be 70% easier to read.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"like, fork is just a semantic form in APL or J",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,don't think that's very easy to read,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,yuck,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```clj
(day 2015 2 input
     (let [lns (s/split-lines input)
           par #(partition 2 1 (take 4 (cycle %)))
           frk #(apply %1 (%2 %4) (%3 %4))
           dbl #(* 2 %)
           dom (map #(map int (s/split % #""x"")) lns)]
       (list (apply + (map (fn [x] (->> (sort x)
                                       (par)
                                       (map #(apply * %))
                                       (frk + first #(map dbl %))))
                           dom))
             (apply + (map (fn [x] (->> (sort x)
                                       (take 2)
                                       (map dbl)
                                       (apply + (apply * x))))

                           dom)))))

```",,
2.03571E+17,p-himik#7777,2021-09-11,"You _don't_ want to write lambda-calculus-style code unless you're actually exercising in that.

I'm _still_ trying to understand what that code with `juxt` is supposed to do. I can never be certain that I understand it correctly, given that most of the versions you say don't work. That's exactly why I asked for a plain English explanation.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I don't now what's hard to understand,,
2.03571E+17,p-himik#7777,2021-09-11,"Don't use ordinal arguments to `#(...)` either. Just use `fn`.

If you want to do things ""Clojure-style"", you want to name things. You don't want to be clever with your code.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I want do sum the first in the list with the double of the list,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,sum reduce all of it,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"I'm really not trying to be clever at all, its just a normal bit of function composition",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"I need the first item, and I need to add that to the double of the whole list",,
2.03571E+17,p-himik#7777,2021-09-11,`(apply + (first l) (map dbl l))` - that's it. That's all there is to it. Can't get simpler at all.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,except,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I'm in the threading context,,
2.03571E+17,p-himik#7777,2021-09-11,It might be normal in principle. It is anything but normal when it comes to real code.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"and I would have to name the entire threading, then have another body below that?",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,but the thread as it is expresses one transformation,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,not multiple,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,so naming it would imply multiple transformations,,
2.03571E+17,p-himik#7777,2021-09-11,"`->>` should not be used with a reducing function. `->>` is for turning a sequence into a sequence.
```clj
(let [l (->> l sort par do-whatever-else)]
  (apply + (first l) (map dbl l)))
```",,
2.03571E+17,p-himik#7777,2021-09-11,I've linked two articles above. It's a really good read on why and how.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,reduction is often the final part of a function chain,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,in js `.reduce(...)` or in APL `f/ ...`,,
2.03571E+17,p-himik#7777,2021-09-11,It doesn't mean that you have to shove it into that `->>`.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"if the previous result its the argument to the reduction, seems like a normal thing to do",,
2.03571E+17,p-himik#7777,2021-09-11,And even if you really wanna shove that `reduce` into `->>` - you can't do that directly in your case because you need the collection in not just the last place in `reduce`. That's already a red flag for using it within `->>`. The simplest answer is to just not do that.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I think its kinda odd a functional language is making it difficult to do basic composition,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,That's not a good sound,,
2.03571E+17,p-himik#7777,2021-09-11,"Cognitive load is one of the most paramount concepts in software development.
It might be easy to gain some momentum and use it to propel yourself through a plethora of cleverness and unnecessary allowances like `((juxt ...) ...)` or `#( ... %1 %2 %3)` and such.
But whoever reads that code later on, will not be happy about it. There's no more that momentum that was there when you were writing it. The farther it helps you to get, the more cognitive load you will have later on when reading the code.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"If you're concerned with cognitive load, maybe you'd enjoy APL/K/J/BQN",,
2.03571E+17,p-himik#7777,2021-09-11,Composition is easy. It doesn't mean that you should use it everywhere.,,
2.03571E+17,p-himik#7777,2021-09-11,"Perhaps. The list of ""to check out"" languages that I have is rather long, APL is there.",,
2.03571E+17,p-himik#7777,2021-09-11,"It's very similar to templates in C++.
Awesome in theory. Give fantastic gains when you use them right. Even Turing-complete.
In the end, they result in a write-only code more often than not.",,
2.03571E+17,p-himik#7777,2021-09-11,Remember the errors that boost gave? What a bloody nightmare. Look wrong at your compiler and now you have to spend two days figuring stuff out.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"APL similar to templates in C++? I think not. 

APL is far from write only code. It's just that there is a consistent notation to represent algorithms.

if `+` is a function then `+/...` is `(reduce + ...`, or sum, and `+\...` is plus expand, or `(reductions + ...`

So that means 
```
day1_helper←{¯1+ ') (' ⍳⍵}  
``` 
denotes a function where we say
```
negative one  plus where in string is the value omega
¯1            +    ') ('⍳                        ⍵
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,so if I want to know the total value at the end,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,`+/ day1_helper`,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,or if I want to know the first negative index,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```
one plus   index of negative one  in the ""reductions"" of the helper
1+           ¯1⍳                   ⍨+\ day1_helper
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,The reason I brought this up,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"> Cognitive load is one of the most paramount concepts in software development.
The only way to reduce cognitive load is to reduce the amount of novel forms of expressions one needs to ingest to understand what is being read. 

***Less code, less load.*** 

This means that primitives should be trivially composable, and not restricted to only particular kinds of composition",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```
(day 2015 1 input
     (let [dom (map {\( 1 \) -1 } (char-array input))]
       (list (apply + dom)
             (->> dom
                  (reductions +)
                  (keep-indexed #(if (= -1 %2) %1))
                  (first)
                  (inc)))))
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,this is an order of magnitude more code,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,just the names themselves are longer than the notation,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"If lisps and lisp derivatives have the benefit of being trivially extensible...

APL and array programming derivatives have the benefit of being trivially composable",,
2.03571E+17,p-himik#7777,2021-09-11,"Sorry, I wasn't clear. I'm not comparing APL to C++ templates, I'm comparing ""clever"" constructs to them.

> The only way to reduce cognitive load is to reduce the amount of novel forms of expressions one needs to ingest to understand what is being read. 
This statement is false. Machine code has very few forms of expressions.

> Less code, less load. 
Also false. You can reduce the amount of code by removing all the names and inlining every single expression/value that's used only once. The cognitive load will be increase.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,">  Machine code has very few forms of expressions.
And a higher cognitive load. 

> Also false. You can reduce the amount of code by removing all the names and inlining every single expression/value that's used only once.
This is not the intent. Expressing functions that are to be composed, and then composing them in a declarative style leads to the same reduction in code",,
2.03571E+17,p-himik#7777,2021-09-11,"> And a higher cognitive load. 
Exactly. :) That's why your statement is false. Reduction in one thing does not directly mean reduction in another thing.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"```
day1_helper ← {¯1+ ') (' ⍳⍵} ⍝ 1_1 The map ¯1 ←→ ) ⋄ 1 ←→ ( 
s01_1  ← +/ day1_helper      ⍝ Sum the map
s01_2  ← 1+¯1⍳⍨+\∘day1_helper ⍝ first index of negative     
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,These are functions,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,But reduction in novel forms of expressions I said,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,APL has ... 2 forms of expressions?,,
2.03571E+17,p-himik#7777,2021-09-11,"I'm sorry, but your APL analogies can't make me see anything.
I don't know APL. I have no clue what that means. I have no intuition for it.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,Either a value expression or a function expression,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,That's understandable,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,But my point is this...,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,^^,,
2.03571E+17,p-himik#7777,2021-09-11,I can't agree or disagree with that point.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,APL is trivially composable and that is why it reduces the cognitive load,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,Not because you can write concise expressions,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,but because I can compose primitives by default,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I don't need extra syntax or forms to perform composition,,
2.03571E+17,p-himik#7777,2021-09-11,"APL might be more powerful in some, or even all, regards than Clojure.
It doesn't mean that you should write Clojure in the way you would write APL.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"for instance, I don't need 
```clj
(defn muln [x] (lambda (y) (* x y))
(def f (muln 2))
```
I just say
`f←2∘×`",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,It isn't. I never claimed that it is. I said Clojure is trivially extensible,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,APL is not,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,APL is horribly rigid and difficult to extend,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"APL is trivially compsoable, but I'm finding lisps to be rather gawdy when it comes to composition",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,like,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,just look at the order of magnitude more necessary to express currying an argument,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,sorry,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,and it wasn't even correct,,
2.03571E+17,p-himik#7777,2021-09-11,"And currying is, in my experience of writing and reading a significant amount of code, used incredibly rarely in Clojure.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,that's the correct equivalency,,
2.03571E+17,p-himik#7777,2021-09-11,"This is how I would write it in Clojure:
```clj
(defn f [x]
  (fn [y]
    (* x y)))
```",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"In my experience of writing and reading a significant amount of code accross a panoply of languages, I see `f(g(x), h(x))` quite often",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,not written as such,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"usually
```
x = g(something)
y = h(something)
f(x,y)
```",,
2.03571E+17,p-himik#7777,2021-09-11,But it's not currying?..,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,no but I'm talking about all forms of composition,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,`f(g)` is not the only kind of composition,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,and partial application is way more common a pattern than you think if it is something you can just do,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"like who needs 
`inc`
`1∘+` when I have this?",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,what is inc except currying 1 with +?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,why does the body of a `cond` have like 3 or 4 `(null (car lst))` checks strewn about?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,when I can just do `n←0∘=⍴`,,
2.03571E+17,p-himik#7777,2021-09-11,"I'm sorry, but I legitimately think that this conversation is not productive for both of us.
I see that you have a strong opinion, and so do I. So far, I haven't seen enough value in constructs and concepts offered by other languages that I have experience with for them to be replicated in Clojure. Which is pretty much always possible thanks to macros, BTW - you can write your own composition primitives, you can create currying functions, you can make existing functions to support currying (although you'd have to reassign the names), and so on.
Maybe my opinion will change once I have hands-on experience with something where such forms are first-class citizens. Clojure is not such a language, and while you can make it so, at least to an extent, I'm 90% certain that the most experienced people will try to talk you out of it - I've seen such discussions before, mostly in passing.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"honestly, I'm just wondering aloud at things...

I wish APL had true symbolic expression...
I wish lisp and such had trivial composability...
I wish I could find a language that isn't a pain to use...",,
2.03571E+17,p-himik#7777,2021-09-11,"If you can't find one, you can always create one. :)",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,So I'm just musing really...,,
2.03571E+17,p-himik#7777,2021-09-11,"A much better place for this discussion would be at the Clojurians Slack server - simply because there are _many_ more people there, quite a few of whom have hands-on experience with APL and other languages.",,
2.03571E+17,p-himik#7777,2021-09-11,"A bit off-topic but I just found this epigram in my notes:
> Though the Chinese should adore APL, it's FORTRAN they put their money on.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"So I can not ""just implement my own""",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"APRIL (common lisp library) is not APL, and embedding one language inside another is a nightmarish hellscape from which there is no returns...

literally, much of the time you can't return values out of expressions, depending on the library, and if you do its hellish to reuse those outputs to any meaningful degree without discarding all the meta data",,
2.03571E+17,p-himik#7777,2021-09-11,Why not?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,I literally just went on a whole rant about why not,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"↑↑↑ are a list of examples of people ""just implementing their own""",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,and not being generally useful for any meaningful application due to the lack of existing ecosystems or libraries,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"If you only write scripts and read from static files, good job, you can use BQN and NGN/K  no problem",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"If you're really good at reading cryptic outdated documentation, J has sockets I guess",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,and there's a guy who's doing some really cool stuff in the terminal with J,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"but it isn't extensible, and the notation is madness",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"↑↑ coming from an APLer, BQN and K user",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"the point being that the attempt has been and is being made to ""just implement our own"" but people who have much more experience than me can't seem to pull it off, so why should I presume that I can?",,
2.03571E+17,p-himik#7777,2021-09-11,"Rich Hickey made Clojure. A single guy lied there in his hammock for a few years, and made Clojure.
Jonathan Blow is in progress of making Jai.
Andreas Rumpf made Nim.

> people who have much more experience than me can't seem to pull it off
Do they say that their attempts have failed? Or are their views of their languages simply different from yours?",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"No they don't say they failed, I didn't say they failed",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,They're quite successful at their intention,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,But are generally not useful for me outiside of toy problems,,
2.03571E+17,p-himik#7777,2021-09-11,"But if you don't know exactly what you want and how those things should be implemented, then fair point.",,
2.03571E+17,p-himik#7777,2021-09-11,"If you _do_ know what you want but it's not the same as what other ""people who have much more experience"" want, then it's not really an argument.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"I do know exactly what I want, but not the sanity to go about implementing an entire language when I want to be building meaningful applications and not tools and an entire ecosystem from scratch",,
2.03571E+17,p-himik#7777,2021-09-11,Now this point about time and not experience is a good one.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"I want trivial extensibility of primitives, and trivial composeability of primitives",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"How many programmers have successfully implemented an entire language, tooling, ecosystem from scratch to suit their particular design preference?

Vs...

How many application developers who use existing languages and tooling because it allows them to build applications in their domain of expertise?",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,That doesn't change the fact that I have my own language feature wish-list,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"Just because I'm not experienced in language design and implementation doesn't take away from the fact that I think that clojure and lisps not having adequate support for composition of primitives, and APL family languages lack of support of extensibility is annoying, and I should like a language that unifies the benefits of each",,
2.03571E+17,p-himik#7777,2021-09-11,"You made your point about time, and I acknowledged it. I'm not sure what your message is supposed to say.
And, as I mentioned, I don't think there's a solvable contention point. You were interested in how things are done in Clojure, I have provided that information (albeit, mostly specific to your task and through the prism of my own subjectivity).

If you want to talk about language design and have that discussion spend your time efficiently, this is not the place.",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"> If you want to talk about language design 
Understood... however there doesn't seem to be a place. As for what my message is meant to say, I was just looking for that discussion. 

I am trying to learn things the clojure way, coming from some limited experience accross Scheme/Lisp/Racket, so really I was trying to explain more adequately by comparing language features, not meant to disparage any.",,
2.03571E+17,p-himik#7777,2021-09-11,"> there doesn't seem to be a place
Not on this server, no. As I mentioned, Clojurians Slack would be one of such places - even if you don't want to involve Clojure.",,
2.03571E+17,p-himik#7777,2021-09-11,There are #off-topic and #other-languages channels there.,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,"> Not on this server
This is more of a personal note, but also not even in the discord I began for APL family languages 😉 (not advertising...)",,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,nobody there is keen to talk philosophy of language design... though that seems to be what the topic is??,,
2.60287E+17,Cpt. Kirk#9148,2021-09-11,lol,,
2.60287E+17,Cpt. Kirk#9148,2021-09-12,are there clojure books to the scale and drama of PAIP/SICP/On Lisp/LOL?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-12,any equivalent code samples for those texts in clojure?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-12,what are the preferred literature for proliferation of clojure?,,
2.60287E+17,Cpt. Kirk#9148,2021-09-12,"In otherwords?
Bro, Do you have some light reading so I can learn more?
Bro, Sure!",,
2.67464E+17,SlashDevSlashRandom#2112,2021-09-12,"<http://www.sicpdistilled.com/> does sort of an abridged SICP in Clojure, and <https://www.lisperati.com/clojure-spels/casting.html> walks through creating a text adventure game (probably not a sufficient scale). There's Joy of Clojure for a full book that contains some of the Clojure philosophy, especially where it diverges from other lisps.",,
2.67464E+17,SlashDevSlashRandom#2112,2021-09-12,"that said, most conceptual information surrounding lisps in general can also be applied in Clojure",,
5.25325E+17,Honza_Suran#6703,2021-09-17,"https://github.com/JanSuran03/tornado
I finally finished a Clojure library for generating CSS with Clojure and a hot-code reloading plugin for that library. My goal was to make a library similar to garden from noprompt, but much simpler, and I am really happy with that. Not everything in the library is 100% ideal, but it is brand new, so I'll try to improve it whenever I get a new idea.",,🙏 (1)
4.86633E+17,too much tea#7277,2021-09-18,"good. I don't understand why Garden isn't much more popular. Every Clojurescript app example I see uses the JS/CSS/Node toolchain which is awful! 
I use Garden for all my CSS and don't output to files at all. Instead I generate modular Reagent `[:style]` components",,
5.25325E+17,Honza_Suran#6703,2021-09-18,"My library currently works only for Clojure, but since the syntax is much simpler and I don't use protocols and similar weird things for anything, which is 2/3 of Garden's code and you cannot separate the compiling process logically (hiccup expansion, selectors compilation, params compilation, at-rules compilation), which is exactly the way Tornado does the compilation. It should be quite easy to rewrite Tornado to make it work in both.
Anyway, Tornado's code is much, much simpler, the thing you are using is very easy to add. The feature for generating :style string is contained in these 2 functions (it's a bit different in html style=""..."", but it is very easy to rewrite it):",https://cdn.discordapp.com/attachments/315388260987830272/888855195122024468/unknown.png,
4.86633E+17,too much tea#7277,2021-09-18,I used Garden to generate CSS for style elements and for style attributes,,
4.86633E+17,too much tea#7277,2021-09-18,"Garden is fine for generating and representing style elements, but it's a bit cumbersome for style attributes",,
4.86633E+17,too much tea#7277,2021-09-18,"what I really liked was Garden's units. You can use them for more than just CSS units, they're useful in general",,
4.86633E+17,too much tea#7277,2021-09-18,"anyway I stored all my CSS rules in maps in my app state and manipulated it at runtime, Reagent updates the corresponding style elements and the style changes",,
5.25325E+17,Honza_Suran#6703,2021-09-18,What do you mean by that?,,
4.86633E+17,too much tea#7277,2021-09-18,"you can make your own units, like `kW`, `v` or whatever and use them in your app for representing quantities of things",,
4.86633E+17,too much tea#7277,2021-09-18,what it doesn't support however is naming the unit (apart from the symbol name you give it),,
4.86633E+17,too much tea#7277,2021-09-18,really you want to have the name of the unit and its symbol,,
4.86633E+17,too much tea#7277,2021-09-18,sometimes you want an abbreviation too,,
5.25325E+17,Honza_Suran#6703,2021-09-18,"Do you mean something like (defunit kW ""kiloWatt"")?",,
4.86633E+17,too much tea#7277,2021-09-18,yes,,
5.25325E+17,Honza_Suran#6703,2021-09-18,That's no problem to do in Tornado 😄,,
4.86633E+17,too much tea#7277,2021-09-18,one thing I think could be improved on is how to generate CSS space-separated lists vs comma-separated,,
4.86633E+17,too much tea#7277,2021-09-18,when you use CSS grid you often have to do various nesting tricks to get Garden to generate the right CSS,,
5.25325E+17,Honza_Suran#6703,2021-09-18,This is how you define units in Tornado.,https://cdn.discordapp.com/attachments/315388260987830272/888858408554463302/unknown.png,
4.86633E+17,too much tea#7277,2021-09-18,e.g. CSS grid `:grid-areas` attribute,,
5.25325E+17,Honza_Suran#6703,2021-09-18,"I don't think whether it's the same in Garden, but I think it is: In Tornado, you can do it like that:",https://cdn.discordapp.com/attachments/315388260987830272/888858879486742568/unknown.png,
5.25325E+17,Honza_Suran#6703,2021-09-18,"I am not actually sure, how you can create grid-areas in html, because you have that style= and then 2 quotation marks in a row... I don't know if you do it like ```style=""\""... ...\"" \""... ...\""""
```",,
4.86633E+17,too much tea#7277,2021-09-18,"I wrote a little helper function to improve the readability:
```
(areas '[[a title  c]
         [d main   f]
         [g footer i]])```",,
5.25325E+17,Honza_Suran#6703,2021-09-18,"But it's not too ideal that you cannot test it in Garden... In Tornado, you have functions repl-css (css and pprint) and compile-expression (see above)",,
4.86633E+17,too much tea#7277,2021-09-18,but it could be improved more I think,,
4.86633E+17,too much tea#7277,2021-09-18,I think there's potential to give people a Clojure alternative to all that horrid bootstrap/node/css/sass crap,,
4.86633E+17,too much tea#7277,2021-09-18,an alternative to bootstrap which is css-grid based and all represented in Clojure data,,
5.25325E+17,Honza_Suran#6703,2021-09-18,"The question is, how should it be instead of how it is now... I originally thought of having a function for that, but I think that two brackets are simpler than a function...",,
4.86633E+17,too much tea#7277,2021-09-18,I don't know but it could read better I'm sure,,
5.25325E+17,Honza_Suran#6703,2021-09-18,Tornado has a function for that.,https://cdn.discordapp.com/attachments/315388260987830272/888861405179174942/unknown.png,
5.25325E+17,Honza_Suran#6703,2021-09-18,"I was working on the library for about 2-3 weeks and it already has a lot features, it should be enough for 99 % of things you could need. It doesn't have @import, @supports and a few other things, but I'll add them soon.",,
4.86633E+17,too much tea#7277,2021-09-18,sounds good!,,
5.25325E+17,Honza_Suran#6703,2021-09-18,"I also want to write good documentations for everything in the library. It takes some time, but it's worth it. I made a document in OrgPad, where I am going to add examples for everything. Much better than README, which is hundreds of lines of text, it is not clear, it is hard to modify etc. https://orgpad.com/o/DkIHRpe75KUphqFHs0WBxK?token=CLnOgq229GgrScoeI-GiMa",,
5.25325E+17,Honza_Suran#6703,2021-09-18,"I haven't put much time into the document yet, but I plan to improve it in the near future.",,
4.86633E+17,too much tea#7277,2021-09-18,and what about inline style attributes ?,,
5.25325E+17,Honza_Suran#6703,2021-09-18,"That shouldn't be hard to add. I could do it tomorrow, now it's already 9pm in my timezone.",,
4.86633E+17,too much tea#7277,2021-09-18,take your time!,,
4.86633E+17,too much tea#7277,2021-09-18,there's no hurry,,
5.25325E+17,Honza_Suran#6703,2021-09-18,"First I'll rewrite it to work in both clj and cljs, then I can do the inline style attributes.",,
2.4158E+17,nharsch#4382,2021-09-23,"random question, is there a convention for chaining together async functions that produce channels? I have this `(<! (decode-resp-data (<! (load-sound-path uri))))` where `load-sound-path` takes a URI string and returns a channel of ArrayBuffer and `decode-resp-data` takes an ArrayBuffer and returns an audio-buffer.",,
2.4158E+17,nharsch#4382,2021-09-23,"oh doi, I can thread ```(->> uri
           (load-sound-path)
           (<!)
           (decode-resp-data)
           (<!)
           ```",,
5.29447E+17,Romo#7533,2021-09-23,Hey guys I am having trouble with a small task lol. I am basically trying to display elements of a map in an unordered list.,,
5.29447E+17,Romo#7533,2021-09-23,"For example {:name ""random,  :age 23}",,
5.29447E+17,Romo#7533,2021-09-23,Can someone help thanks. Also feel free to inbox,,
2.34343E+17,Johnny#3826,2021-09-23,I'm not sure I got the task,,
5.29447E+17,Romo#7533,2021-09-23,"It goes something like this, I have a map with certain elements inside it like my example there. So I wanted to display the elements in an unordered list. Hope that makes sense",,
2.03571E+17,p-himik#7777,2021-09-23,"It still doesn't. The word ""elements"" is unclear in the context of maps - the common terminology is keys, values, and entries (pairs of a key and the corresponding value).
Also not clear what you mean by ""an unordered list"". A list is by definition an ordered collection. It might not be _sorted_, but it is intrinsically ordered.
I'm gonna go on a limb and guess that you want a list of both keys and values, and that their order doesn't matter.
In that case, you can use `(mapcat identity m)` or `(apply concat m)`. Doesn't matter which one.",,
2.03571E+17,p-himik#7777,2021-09-23,"Ah, also not clear what you mean by ""display"", which can easily be the most crucial part.",,
5.29447E+17,Romo#7533,2021-09-23,sorry about that man....I am still relatively new to the language. But thank you. Much appreciated,,
2.03571E+17,p-himik#7777,2021-09-23,That's alright. Feel free to add the necessary details if my comment above doesn't answer your question. Also note that there's #beginners as well.,,👍 (1)
5.29447E+17,Romo#7533,2021-09-23,No worries. Thanks again man,,
5.25325E+17,Honza_Suran#6703,2021-09-24,"I am rewriting my library from only-clj to work in both clj and cljs. But I have encountered a problem: I use a few macros there so I followed a guide from Thomas Heller: https://code.thheller.com/blog/shadow-cljs/2019/10/12/clojurescript-macros.html. In ClojureScript, everything works fine now. But in Clojure, if I have, let's say, tornado.compiler.clj and tornado.compiler.cljc and I require tornado.compiler in REPL, in a plugin etc., it first tries to find tornado.compiler.clj. Since there is this namespace with .clj extension, it doesn't try to find .cljc after it finds tornado.compiler.clj. But the .clj namespace only contains macros for ClojureScript, the .cljc namespace contains all the functions. So it fails, because it doesn't find the functions in tornado.compiler.clj...",https://cdn.discordapp.com/attachments/315388260987830272/890960208845742160/unknown.png,
2.03571E+17,p-himik#7777,2021-09-24,"You can either have CLJ+CLJS or CLJC - you can't have both.
There are three possible solutions:
- Move everything to a single CLJC file and use reader conditionals for the macros and for the needed self-require
- Move everything into CLJ+CLJS
- Move common functionality to a separate namespace",,
5.25325E+17,Honza_Suran#6703,2021-09-24,Is it possible to define the macros for both Clj and Cljs in a single Cljc file?,,
5.25325E+17,Honza_Suran#6703,2021-09-24,In the guide Thomas Heller says that you have to create an additional namespace for Cljs macros.,,
1.89169E+17,srasu#0042,2021-09-24,"You can have macros in a cljc and use them from the same file, yes",,
1.89169E+17,srasu#0042,2021-09-24,"There's both `macrovich`, a great library for helping with this, as well as some other solutions like just requiring the ns you're in.",,
4.00613E+17,DrNoobopolis#6558,2021-09-26,Can someone please help me understand the difference between ring and http-kit,,
4.00613E+17,DrNoobopolis#6558,2021-09-26,Should I build my reframe website to use an api sending json or edn?,,
4.00613E+17,DrNoobopolis#6558,2021-09-26,I feel like my api should send edn rather than json and make it cleaner,,
4.00613E+17,DrNoobopolis#6558,2021-09-26,I read that json has performance benefits which I why I should use that instead,,
2.03571E+17,p-himik#7777,2021-09-26,Use Transit.,,👆 (1)
4.00613E+17,DrNoobopolis#6558,2021-09-26,I was reading about transit but I don't understand it,,
2.34343E+17,Johnny#3826,2021-09-26,ring is an abstract specification for how you receive and handle http requests,,
4.00613E+17,DrNoobopolis#6558,2021-09-26,I basically just want to send edn from my backend to my frontend?,,
2.34343E+17,Johnny#3826,2021-09-26,http kit is an actual http server implementation that is compatible with the ring interface,,
4.00613E+17,DrNoobopolis#6558,2021-09-26,Cool cool,,
4.00613E+17,DrNoobopolis#6558,2021-09-26,"I get httpkit now, still not 100% on ring",,
2.03571E+17,p-himik#7777,2021-09-26,What exactly do you have trouble with understanding?,,
2.03571E+17,p-himik#7777,2021-09-26,"It's yet another data format - like JSON or EDN, but different.",,
4.00613E+17,DrNoobopolis#6558,2021-09-26,"Oh, that was not clear from what I was reading",,
4.00613E+17,DrNoobopolis#6558,2021-09-26,I will use transit,,👍 (1)
4.00613E+17,DrNoobopolis#6558,2021-09-26,Any idea how I can call a sql stored procedure in clojure,,
4.00613E+17,DrNoobopolis#6558,2021-09-26,I tried looking into it with honeysql but I think this feature does not exist,,
1.89169E+17,srasu#0042,2021-09-26,hugsql or jdbc.next would be where I'd look next,,
2.03571E+17,p-himik#7777,2021-09-26,"Stored procedures are called with `CALL`, right? Then you can use `sql/raw` with HoneySQL. And you can trivially write your own function, similar to e.g. `hh/select`, that would do that for you.",,
4.00613E+17,DrNoobopolis#6558,2021-09-26,I think ``sql/raw`` should work but it is not clear in the documentation that ``sql/call`` can call a stored procedure,,
2.03571E+17,p-himik#7777,2021-09-26,"I'm not talking about `sql/call`. `sql/call` is for calling regular functions, like `abs` and whatnot.",,
2.03571E+17,p-himik#7777,2021-09-26,"But seems like you can use it just fine inside `sql/raw`:
```clojure
(sql/format (sql/raw [""CALL "" (sql/call :my_stored_proc 1 2 3)])
            :quoting :ansi)
=> [""CALL my_stored_proc(?, ?, ?)"" 1 2 3]
```
And even if you couldn't, you could just compose the call yourself:
```clojure
(sql/format (sql/raw [""CALL "" :my_stored_proc ""("" 1 "", "" 2 "", "" 3 "")""])
            :quoting :ansi)
=> [""CALL \""my_stored_proc\""(?, ?, ?)"" 1 2 3]
```
Note that the above code uses HoneySQL v1. v2 might have a different API - I haven't used it so I don't know.",,
2.03571E+17,p-himik#7777,2021-09-26,"(hmm, a tad strange that the quoting is different in the end)",,
4.00613E+17,DrNoobopolis#6558,2021-09-26,is it not usually EXEC where you have CALL?,,
2.03571E+17,p-himik#7777,2021-09-26,"Well, what DB are you talking about?",,
4.00613E+17,DrNoobopolis#6558,2021-09-26,At work I use tsql maybe it is different for other implementations,,
2.03571E+17,p-himik#7777,2021-09-26,"Very well may be. PostgreSQL uses `CALL` if it's just an arbitrary call that's not a part of a larger expression, unless I misunderstand the documentation.

Regardless of that, you can compose _any_ SQL queries with HoneySQL - even if it doesn't have the right function specifically for the clause that you need.",,💯 (1)
4.00613E+17,DrNoobopolis#6558,2021-09-26,Thanks for all your help,,👍 (1)
4.00613E+17,DrNoobopolis#6558,2021-09-26,"I can't wait to get started, I need to go to bed now",,
4.00613E+17,DrNoobopolis#6558,2021-09-26,"```clj
(defn baby-small-app [req]
  {:status  200
   :headers {""Content-Type"" ""text/html""}
   :body    ""Pew pew!""})

(defn -main 
  ""This is our app's entry point""
  [& args]
  (let [port (Integer/parseInt (or (System/getenv ""PORT"") ""8080""))]  
    (server/run-server #'baby-small-app {:port port})
    (println (str ""Running webserver at http:/127.0.0.1:"" port ""/""))))
```",,
4.00613E+17,DrNoobopolis#6558,2021-09-26,what is the significance of ``#'`` in this line ``(server/run-server #'baby-small-app {:port port})``,,
4.00613E+17,DrNoobopolis#6558,2021-09-26,as far as I can tell it works fine without it,,
4.00613E+17,DrNoobopolis#6558,2021-09-26,"the documentation says it makes a variable, I don't see why I would need that here",,
3.29023E+17,nixin72#3554,2021-09-26,"Looks like it just tells you what namespace it's from? Like if you do
```lisp
(require '[clojure.string :refer [join]])
#'join ; #'clojure.string/join
```
I don't really get the point of this off the top of my head 🤷‍♂️ I'm no expert though, and someone clearly thought this was worth including as it's own piece of syntax",,
3.29023E+17,nixin72#3554,2021-09-26,"Or wait, could you do `(-> ""str"" symbol var)`?",,
4.31584E+17,penguin#8265,2021-09-26,"If I understand correctly, you want it because it points to the current definition of the function instead of just the one when you started the server, allowing you to change the handler without needing to re-evaluate everything, just the handler",,
3.29023E+17,nixin72#3554,2021-09-26,"No, you can’t seem to be able to do that, never mind",,
4.00613E+17,DrNoobopolis#6558,2021-09-27,https://blog.klipse.tech/clojure/2016/09/22/transit-clojure.html,,
4.00613E+17,DrNoobopolis#6558,2021-09-27,I like the way transit-js works but I don't like the transit-java as much,,
4.00613E+17,DrNoobopolis#6558,2021-09-27,because I need to creater the reader and writter using streams,,
4.00613E+17,DrNoobopolis#6558,2021-09-27,which is a bit confusing,,
2.03571E+17,p-himik#7777,2021-09-27,"If you're using Clojure, why not transit-cljs and transit-clj?

In the Java world, streams are not confusing at all - they are _everywhere_.",,
2.03571E+17,p-himik#7777,2021-09-27,"That's correct, almost. `#` in front of something is called ""reader dispatch"": https://clojure.org/reference/reader#_dispatch
And `#'` specifically is a var-quote which is equivalent to wrapping something in `(var ...)`.
Vars can be called as functions - and they will call whatever they point to as a function with the same arguments.",,
2.03571E+17,p-himik#7777,2021-09-27,"Usually you can see `#'` being used in the context of so-called REPL-Driven Development or RDD. And yes, it's specifically to prevent things from referencing old code.",,
4.00613E+17,DrNoobopolis#6558,2021-09-28,"I had a little trouble getting started with transit, but it has made my project better",,
4.00613E+17,DrNoobopolis#6558,2021-09-28,"```clj
(ns hello-edn.core
    (:require [cognitect.transit :as t]))

(def r (t/reader :json))

(-> (js/fetch ""http://localhost:8080/"")
    (.then #(.json %))
    (.then #(-> % 
                (str)
                ((partial t/read r))
                (get :a)
                ((partial apply +))
                (js/alert))))
```",,
4.00613E+17,DrNoobopolis#6558,2021-09-28,please review my code,,
4.00613E+17,DrNoobopolis#6558,2021-09-28,I was thinking I should probably try to use core.async instead of .then,,
2.03571E+17,p-himik#7777,2021-09-28,`((` is a strong code smell.,,
2.03571E+17,p-himik#7777,2021-09-28,"And no, don't use `core.async`.",,
4.00613E+17,DrNoobopolis#6558,2021-09-28,how would you do this without `((`?,,
2.03571E+17,p-himik#7777,2021-09-28,"```
(defn transit-read [s]
  (t/read r s))
```",,
2.03571E+17,p-himik#7777,2021-09-28,"And with `apply` - just extract it from under `->` and bind the previous forms with `let`:
```
(let [a (-> ... ... :a)]
  (js/alert (apply + a)))
```
(note that I also replaced `(get :a)` with `:a` because keywords are lookup functions by themselves)",,
2.03571E+17,p-himik#7777,2021-09-28,"I'd also say avoid `partial`, `comp`, and `complement`. Prefer using named functions or, if it _really_ doesn't make sense to assign a name to something, lambdas.",,
2.67464E+17,SlashDevSlashRandom#2112,2021-09-28,I think you could also just change to thread-last in this scenario,,
4.86633E+17,too much tea#7277,2021-09-28,wow what terrible advice! use them as much as you like!,,
4.00613E+17,DrNoobopolis#6558,2021-09-28,using ``->>`` really cleaned up my code,,
2.18602E+17,lsenjov#4288,2021-09-29,Also remember you can nest `->>` inside `->`,,
2.18602E+17,lsenjov#4288,2021-09-29,"So your `.then` becomes
```
#(-> % 
   (str)
   (->> (t/read r))
   (get :a)
   (->> (apply +))
   (js/alert))
```",,
2.03571E+17,p-himik#7777,2021-09-29,It's the advice from the core team itself.,,
2.03571E+17,p-himik#7777,2021-09-29,And a good read on mixing threading macros: https://stuartsierra.com/2018/07/06/threading-with-style,,
2.18602E+17,lsenjov#4288,2021-09-30,"So avoiding `partial` `comp` and `complement` comes from it making code harder to read, but also you get some weird errors because of the evaluation model",,
2.18602E+17,lsenjov#4288,2021-09-30,"The difference between
```
(def inc (partial + 1))
```
And
```
(defn inc [i] (+ 1 i))
```
both operate mostly the same, until you change `+`",,
2.18602E+17,lsenjov#4288,2021-09-30,(multi arity aside),,
2.18602E+17,lsenjov#4288,2021-09-30,"It's a trivial example, but it _will_ bite you in the arse at some point",,
2.18602E+17,lsenjov#4288,2021-09-30,When using `partial` it binds the value as it is right then,,
2.18602E+17,lsenjov#4288,2021-09-30,"It has it's uses, but should be considered a secondary tool",,
4.86633E+17,too much tea#7277,2021-09-30,`(def inc (partial #'+ 1))`,,
4.86633E+17,too much tea#7277,2021-09-30,"your example is contrived and nitpicky. In real life development such an issue never happens.
I'd be amazed if you could find a way to convince me that `comp` is bad",,
2.18602E+17,lsenjov#4288,2021-10-01,"It's a contrived example, but the different evaluation model has caused issues in the past",,
2.18602E+17,lsenjov#4288,2021-10-01,"I'm just saying why it's preferred not to use them, not that you can't",,
4.86633E+17,too much tea#7277,2021-10-01,"in any normal namespace one would partial functions after they had been defined or required. It would be very unusual to subsequently redefine the partialled function in that or any dependent namespace. The only case I can think of where your example could occur, and it has never happened to me, is during a repl session, in which case it's your own fault for not managing state correctly",,
1.89169E+17,srasu#0042,2021-10-01,"Yeah, I wouldn't use partial or comp for the sake of `def` unless it was e.g. a transducer. I use them *everywhere* as arguments to `map`, `transduce`, etc.",,
4.00613E+17,DrNoobopolis#6558,2021-10-01,That makes the most sense to me,,
5.3811E+17,Wild-Lambda#4707,2021-10-05,"Hello everyone. I'm not sure if this question is better suited for the beginners chat, but why does map return a list when you pass a vector as a coll? wouldn't it make more sense to return the same type?",,
2.34343E+17,Johnny#3826,2021-10-05,"It doesn't return a list, it returns a lazy sequence",,
2.34343E+17,Johnny#3826,2021-10-05,"`map`, `filter` etc are all sequence operations, they take something that can be turned into a sequence and return a new sequence",,
2.34343E+17,Johnny#3826,2021-10-05,"Building a new vector can be an unnecessary cost, e.g. if you continue to transform the sequence or don't actually need any of the vector structure.",,
2.34343E+17,Johnny#3826,2021-10-05,"In this particular case though, if you *do* want a vector returned, there is `mapv`",,
5.3811E+17,Wild-Lambda#4707,2021-10-05,"`(reduce + (filter even? (map #(* %1 %1) (range 10)))` will only start to ""eval"" the sequence when the reduce is called, is that it?",,
5.3811E+17,Wild-Lambda#4707,2021-10-05,"thanks for answering, btw",,
2.34343E+17,Johnny#3826,2021-10-05,"yes, without the reduce, the execution time will not change no matter the range",,
7.25942E+17,DanklyTuned#1161,2021-10-08,Any clojure book recommendations that have a lot of exercises?,,
5.3811E+17,Wild-Lambda#4707,2021-10-08,Pinned a message.,,
5.3811E+17,Wild-Lambda#4707,2021-10-08,Let me know if you find one,,
2.67464E+17,SlashDevSlashRandom#2112,2021-10-08,"""The Joy of Clojure"" and ""Programming Clojure"" both use example programs to explain concepts (e.g. determining chess moves or managing bank accounts) so that you sort of build up a program over the course of completing a chapter. ""Clojure for the Brave and True"" has ~5 explicit exercises at the end of chapters - it's also available online, so if you just want the exercises, you can get them from the website.",,
4.31584E+17,penguin#8265,2021-10-08,Where would you rank those in terms of difficultly? Like beginner / novice / intermediate / advanced,,
2.67464E+17,SlashDevSlashRandom#2112,2021-10-08,"yes - there are tens of exercises, and they range from (IMO) beginner to intermediate",,
4.31584E+17,penguin#8265,2021-10-08,"I was referring to each book you mentioned. I'm looking for something novice progressing to intermediate, personally",,
2.67464E+17,SlashDevSlashRandom#2112,2021-10-08,"oh, sorry - I thought you mean the exercises. I'd say (and of course, this is quite subjective) that CftBaT is probably the most ""starting from beginner"", and it also has sort an overarching narrative of ""adventuring through Clojure"". Programming Clojure is less narrative, and maybe goes a little bit further than CftBaT in terms of advanced-ness, and it also sort of assumes you'll figure out your choices like editors and that kind of stuff (CftBaT has a whole chapter on setting up and using emacs, but after that it's editor-agnostic). The Joy of Clojure (I feel) ends up going the farthest and the deepest (it's also ~450 pages as opposed to ~250 pages in the other two), but it also starts with some historical context and the basics - I feel like it goes through the absolute basics more quickly than the others.",,👍 (1)
8.36179E+17,djm#9235,2021-10-09,"Have you looked at Living Clojure? It needs some errata now that 4clojure is gone, but presumably the replacements work fine.",,👍 (1)
6.98608E+17,pseud#9082,2021-10-12,"I need to pass some context to my ring handler functions, but this breaks `wrap-reload` functionality. Basically `(jetty/run-jetty #'my-handler options)` work but `(jetty/run-jetty (make-my-handler db) options)` will not. Is there a way to accomplish this ?",,
2.18602E+17,lsenjov#4288,2021-10-13,Gonna need a bit more context on what `make-my-handler` actually does,,
7.4659E+17,Ag#5373,2021-10-13,"how do I run all tests at a given path with lein test?
I want something like `lein test :only ./foo/bar-tests/`",,
2.33402E+17,Valiant#3540,2021-10-13,See `lein help test` for info in selectors,,
2.33402E+17,Valiant#3540,2021-10-13,https://medium.com/helpshift-engineering/the-convoluted-magic-of-leiningen-test-selectors-2eb6c452dfcf,,
7.4659E+17,Ag#5373,2021-10-13,"Well, I was hoping there's quick and simple way. I've that article before; skimmed through it. My eyes didn't catch something similar to what I wanted. It's okay. I'll run each test by hand",,
5.3811E+17,Wild-Lambda#4707,2021-10-17,Hello! Any good beginner tutorials on TDD with clojure?,,
4.86633E+17,too much tea#7277,2021-10-30,try https://blog.klipse.tech/clojure/2020/09/11/test-check-clj.html,,
7.50923E+17,Quibono#1716,2021-11-01,"Hello, can clojure be used for iOS/android? Also, any resources on making DSLs in clojure?",,
2.67464E+17,SlashDevSlashRandom#2112,2021-11-01,"I believe the popular route for mobile dev is cljs and react-native: <https://cljsrn.org/>.
As far as Clojure DSL resources, there's <https://github.com/simongray/clojure-dsl-resources>, which has lots of examples and some articles/videos",,
7.50923E+17,Quibono#1716,2021-11-01,Thanks.,,
7.50923E+17,Quibono#1716,2021-11-01,And what’s the best answer for making a GUI in clojure?,,
2.67464E+17,SlashDevSlashRandom#2112,2021-11-01,"If you still mean mobile/GUI for many different types of devices, probably react-native. If you mean something with a client/server arch (e.g. a backend server that's serving up web pages), there are a number of frameworks to suit different styles. If you mean a ""desktop"" GUI based on the JVM stack, then I think the two big players are seesaw (which is a more idiomatic layer atop Java Swing) and cljfx (which is roughly the same thing for JavaFx).",,
7.50923E+17,Quibono#1716,2021-11-01,Okay thanks. I’ll have to learn more about react native then. 🙂,,
2.03571E+17,p-himik#7777,2021-11-01,"A small relevant article, which pretty much described the above but with a tad more depth and some links: https://vlaaad.github.io/year-of-clojure-on-the-desktop",,
8.94935E+17,crab#8733,2021-11-06,"is this server dead, oof",,
8.94935E+17,crab#8733,2021-11-06,or just quiet,,
1.90548E+17,seancorfield#3069,2021-11-06,"@crab Most Clojurians are on Slack, quite a few are on Zulip, and just a few hundred are here (with a lot of overlap). This server only seems to get a few messages a week these days.",,
8.94935E+17,crab#8733,2021-11-06,where is the slack,,
1.90548E+17,seancorfield#3069,2021-11-06,http://clojurians.net is how you can sign up,,
8.94935E+17,crab#8733,2021-11-06,thanks,,
4.31584E+17,penguin#8265,2021-11-06,@crab The mods for this server stopped maintaining it. There's also a more active discord at https://discord.gg/discljord,,
1.89169E+17,srasu#0042,2021-11-06,still not as active as the slack though,,
8.94935E+17,crab#8733,2021-11-06,The slack has over 20k people in it!!!,,
1.89169E+17,srasu#0042,2021-11-06,"yup, the slack is *super* active",,
1.89169E+17,srasu#0042,2021-11-06,"my server is pretty active, but definitely smaller, and since this is discord, there isn't a channel for half of every library under the sun",,
1.90548E+17,seancorfield#3069,2021-11-06,I didn't know about that other Discord server -- joined (since I might as well lurk in every Clojure community 🙂 ),,
8.94935E+17,crab#8733,2021-11-06,woah,,
8.94935E+17,crab#8733,2021-11-06,haha,,
1.89169E+17,srasu#0042,2021-11-06,"Fair enough. I tried to get my server linked on the subreddit like this one is since this one isn't moderated anymore, but apparently it's ""too specific to the library"" that I wrote for making discord bots in clojure. Seems like an obvious pairing though, the discord community for clojure contains support for the library to interact with the platform.",,
1.90548E+17,seancorfield#3069,2021-11-06,There's at least one other Clojure Discord server that I know of but it was just used to test features and was never advertised publicly.,,
8.94935E+17,crab#8733,2021-11-06,@seancorfield did you help create clojure or something,,
8.94935E+17,crab#8733,2021-11-06,just asking lol,,
1.90548E+17,seancorfield#3069,2021-11-06,"Oh, gosh, no! No, I didn't. But I do maintain a lot of Clojure libraries.",,
1.90548E+17,seancorfield#3069,2021-11-06,"I did contribute a very, very small patch to Clojure 1.10 tho' 🙂",,
1.90548E+17,seancorfield#3069,2021-11-06,But I've been using it in production since 2011.,,
1.89169E+17,srasu#0042,2021-11-06,definitely can't understate how much your libraries help out the community though,,
1.90548E+17,seancorfield#3069,2021-11-06,"Nearly everything I maintain is because we use it at work: clojure.java.jdbc, next.jdbc, honeysql, core.cache, core.memoize, tools.cli (the old contrib library)... clj-time still, technically speaking although it is deprecated... 🙂",,
1.90548E+17,seancorfield#3069,2021-11-06,No altruism there!,,
8.94935E+17,crab#8733,2021-11-06,wow,,
1.89169E+17,srasu#0042,2021-11-06,plus your new build tooling. :),,
1.90548E+17,seancorfield#3069,2021-11-06,"I'm an Admin on the Clojurians Slack, if you ever have problems there and need to reach out to an Admin BTW.",,
1.90548E+17,seancorfield#3069,2021-11-06,"@srasu Yeah, forgot build-clj, which we use at work too. Plus I'm contributing to Polylith, now that we're using that at work.",,
1.90548E+17,seancorfield#3069,2021-11-06,"There are only a handful of things I maintain that are outside work. Like I say, no altruism 🙂",,
1.89169E+17,srasu#0042,2021-11-06,"Yeah, I'm using polylith at work now after I suggested it for a rewrite of some internal stuff.",,
1.89169E+17,srasu#0042,2021-11-06,we're slowly moving towards a monorepo,,
7.35779E+17,AlmostEducated#3211,2021-11-07,"Is there a way to spec a function that is the value in a map?
```clojure
{::on-event (fn [x y] (+ x y))}

(s/fdef on-event :args (s/cat :x int? :y int?))
(s/def ::foo (s/keys :req [::on-event]))
```
As far as I can tell this won't work, and I can't `(s/fdef ::on-event ...)` because `s/fdef` expects a symbol, not a keyword.",,
2.67464E+17,SlashDevSlashRandom#2112,2021-11-07,"maybe with `fspec` to create the spec, and then put that spec on the map key - not sure though, haven't tried it",,
1.89169E+17,srasu#0042,2021-11-07,"yes, this is the way you'd do it",,
1.89169E+17,srasu#0042,2021-11-07,although honestly i might just spec it as an ifn,,
6.98608E+17,pseud#9082,2021-11-10,"going to scrape some websites. 

Thinking to use clj-http and possibly reaver to extract data from the HTML. 

Any better ideas ? Something I should consider",,
1.90548E+17,seancorfield#3069,2021-11-10,These days I'd use Hato (assuming you're on JDK 11 or later) since that uses the built-in `HttpClient` from the JDK and has no other dependencies.,,
1.90548E+17,seancorfield#3069,2021-11-10,"```
(! 1273)-> clojure -Sdeps '{:deps {hato/hato {:mvn/version ""RELEASE""}}}' -Stree
Downloading: hato/hato/maven-metadata.xml from clojars
org.clojure/clojure 1.10.3
  . org.clojure/spec.alpha 0.2.194
  . org.clojure/core.specs.alpha 0.2.56
hato/hato 0.8.2

Wed Nov 10 12:23:30
(sean)-(jobs:0)-(~/clojure/fresh)
(! 1274)-> clojure -Sdeps '{:deps {cheshire/cheshire {:mvn/version ""RELEASE""}}}' -Stree
Downloading: cheshire/cheshire/maven-metadata.xml from clojars
org.clojure/clojure 1.10.3
  . org.clojure/spec.alpha 0.2.194
  . org.clojure/core.specs.alpha 0.2.56
cheshire/cheshire 5.10.1
  . com.fasterxml.jackson.core/jackson-core 2.12.4
  . com.fasterxml.jackson.dataformat/jackson-dataformat-smile 2.12.4
    . com.fasterxml.jackson.core/jackson-databind 2.12.4
      . com.fasterxml.jackson.core/jackson-annotations 2.12.4
      . com.fasterxml.jackson.core/jackson-core 2.12.4
    . com.fasterxml.jackson.core/jackson-core 2.12.4
  . com.fasterxml.jackson.dataformat/jackson-dataformat-cbor 2.12.4
    . com.fasterxml.jackson.core/jackson-databind 2.12.4
    . com.fasterxml.jackson.core/jackson-core 2.12.4
  . tigris/tigris 0.1.2
``` I try to avoid Jackson as a dependency wherever possible.",,
6.98608E+17,pseud#9082,2021-11-10,Thanks. Will use hato instead 🙂,,
1.90637E+17,vonadz#8245,2021-11-13,"Anyone quite familiar with hugsql? Trying to figure out if there's a way I could get my https server to autoreload whenever I change one of the sql files, instead of having to restart the server.
EDIT: potentially found an answer: https://github.com/layerware/hugsql/issues/72",,
1.90637E+17,vonadz#8245,2021-11-14,Any recommendations for an autoformatter for Clojure in nvim? I'm too old to be formatting manually.,,
2.03571E+17,p-himik#7777,2021-11-14,"As far as I'm aware, `cljfmt` is pretty much _the_ tool for formatting Clojure code. Surely there are plugins or other ways to make it work in your editor.",,
1.90637E+17,vonadz#8245,2021-11-14,"intriguing, will explore, thanks",,
1.90637E+17,vonadz#8245,2021-11-14,"got it added, works like a charm! Thanks 🙂",,👍 (1)
5.65397E+17,moviegique (19)#6645,2021-11-14,"On a scale of ""oh my god"" to ""impossible"" how ugly would it be to get FXMLLoader to do its Controller field injection in a Clojure generated class?",,
5.65397E+17,moviegique (19)#6645,2021-11-14,"Specifically, I'm looking at ""How the FXMLLoader Object Works"" on this page https://edencoding.com/fxmlloader/",,
5.65397E+17,moviegique (19)#6645,2021-11-14,"And looking into the loader code, the field injection seems to be pretty deep.",,
5.65397E+17,moviegique (19)#6645,2021-11-14,"Clojure doesn't have the @FXML directive, of course, and its generated classes only have the state field.",,
5.65397E+17,moviegique (19)#6645,2021-11-14,I had the impression that FXMLLoader could call get_XXXXX/set_XXXXX for fields but I'm not seeing that.,,
5.65397E+17,moviegique (19)#6645,2021-11-14,"This mad genius (https://github.com/zilti/clojurefx) seems to be able to generate an actual controller class from the FXML, but the effect was apparently akin to reading the Necronomicon.",,
5.65397E+17,moviegique (19)#6645,2021-11-14,My main interest is keeping things close to the original Java code I'm working with. I know there are many ways to NOT use a controller.,,
2.24547E+17,nxtk#0755,2021-11-16,https://www.youtube.com/watch?v=hMEX6lfBeRM,,
7.4659E+17,Ag#5373,2021-11-17,"Kind of a stupid question, may I?

When passing a large map through the levels of function calls, what's better:

- To always limit things to whatever the function needs by 'dissoc'ing all unnecessary keys
- Pass the map as-is and destructure/get whatever keys required

What are the trade-offs? Is there a performance/memory impact if the whole map gets passed around (or vice-versa)?",,
1.90548E+17,seancorfield#3069,2021-11-17,Pass the map as-is. There's no performance overhead in doing so -- there would be a performance/memory overhead if you kept pruning hash maps to just what you needed.,,
1.90548E+17,seancorfield#3069,2021-11-17,"In addition, Clojure is designed to be open-for-extension so maps should be considered open and it's best practice to just ignore keys you don't care about -- otherwise, if some deeply-nested function suddenly requires a new key, you might have to change all the code in the call tree to accommodate it. Whereas if you just pass everything through, only the top-level code needs to add that new key and nothing else needs to change.",,👍 (1)
7.4659E+17,Ag#5373,2021-11-17,"Yes, that was my exact thinking, just wanted to make sure. I don't know why only now I'm bothered about this.",,
7.4659E+17,Ag#5373,2021-11-17,Thank you Sean!,,
2.34343E+17,Johnny#3826,2021-11-17,"you might be coming from a pass-by-value background like C or C++, where passing a value as is means copying it for every call",,
2.34343E+17,Johnny#3826,2021-11-17,"Clojure/the JVM is technically also pass-by-value, but objects like maps are actually just references to the real values. So there's no overhead to passing them around",,😳 (2)
5.65397E+17,moviegique (19)#6645,2021-11-18,It works much better in an immutable world.,,
7.35779E+17,AlmostEducated#3211,2021-11-21,How can I get a macro to expand into multiple sexps? The only way I can think of is to bind the sexps to a symbol and then use `~@` on it? I've struggled to find any literature on this.,,
7.35779E+17,AlmostEducated#3211,2021-11-21,`(foo '(+ -) '(2 3)) --> (+ 2 3) (- 2 3)` for example,,
2.34343E+17,Johnny#3826,2021-11-21,not possible,,
2.34343E+17,Johnny#3826,2021-11-21,that would be equivalent to being able to return multiple things from a function,,
2.34343E+17,Johnny#3826,2021-11-21,you only ever return one value. usually when you run into this there is another solution,,
7.35779E+17,AlmostEducated#3211,2021-11-21,"That's a shame. I think in my case the alternative would be `do`?
```clojure
(defmacro ns-with-alias [alias ns]
  `(do
     (clojure.core/create-ns ~ns)
     (clojure.core/alias ~alias ~ns)))
```",,
2.34343E+17,Johnny#3826,2021-11-21,looks reasonable,,
2.34343E+17,Johnny#3826,2021-11-21,"when it's a ""do multiple steps"" kind of situation, `do` is usually what you want to use, yeah",,
7.35779E+17,AlmostEducated#3211,2021-11-21,"Whilst it's ugly, inadvisable to expose to users, and doesn't work in my use case, I've worked out a way to do something similar in the context of a greater sexp:
```clojure
(defmacro repeat [x]
  `(list ~x ~x))

(let [x `(1 ~@(repeat 2))] x)
```
Whilst the macro `repeat` only returns a single list, one can call `~@` to expand it into two items.",,
2.34343E+17,Johnny#3826,2021-11-21,well... this is not the same as what you were asking about,,
2.34343E+17,Johnny#3826,2021-11-21,"sure, splice unquote exists. but it still has to be in a composite form. that's the point",,
2.34343E+17,Johnny#3826,2021-11-21,The problem emerges when you reach the root of your AST with this,,
2.34343E+17,Johnny#3826,2021-11-21,every lisp form is a tree,,
2.34343E+17,Johnny#3826,2021-11-21,"wanting to expand one form into ""multiple"" forms at the root level would mean giving the tree multiple roots, which does not make sense",,
2.34343E+17,Johnny#3826,2021-11-21,you always have to add a parent node when you do this. which you do here (it's the list),,
7.35779E+17,AlmostEducated#3211,2021-11-22,"Yeah, I didn't mean it to sound like I was contradicting you. Thanks for your help!",,
6.98608E+17,pseud#9082,2021-11-22,"wondering, I have a function which uses `clojure.java.jdbc/with-transaction` to create a tx which is passed along. Later in my code, I crash because a function generated from hugsql seems to call `clojure.java.jdbc/get-connection` on the object ( https://pastebin.com/5KAL52Uw ) ... how can I bridge this ? It cannot be that I cannot operate in the tx context.",,
1.90548E+17,seancorfield#3069,2021-11-22,@pseud I would say that's most likely a bug in your code because what's being passed to `get-connection` is **not** a valid db-spec.,,
6.98608E+17,pseud#9082,2021-11-22,"Totally correct. I'm sorry. I've been combing through the code and experimenting with clojure.java.jdbc now  a bit in the repl to finally figure it out.
It's complete an issue on my side.
Thanks 🙂",,👍 (1)
2.88365E+17,41ph4_Ph4un#7499,2021-11-23,"Bit late to the party, but read some old convos.. Actually I think what you say is really a testament to the positives of that motive for maintaining and creating libraries 🙂 like altruism is ""kinda nice"", but nothing gives incentive like the fact that you and your day job depends on the tools you're working on! 😄",,
7.34828E+17,j10_DP#9473,2021-11-26,"Hi everyone I'm new to clojure and I'm having some issues with updating maps. As I understand it, the `assoc` function is used to update values in a map, but when I try and use it the value doesnt change. My code:
```(def John {
    :first-name ""John""
    :last-name ""Smith""
    :age 29
})

(println John)
(assoc John :age 30)
(println John)```
which outputs:
```{:first-name John, :last-name Smith, :age 29}
{:first-name John, :last-name Smith, :age 29}```
when I expect the age value to be 30 in the second one. I'm running Clojure CLI version 1.10.3.1029 on Manjaro Linux",,
4.31584E+17,penguin#8265,2021-11-26,"@j10_DP Clojure objects are immutable, meaning `assoc` doesn't update a value in-place. If you do
`(def John-Updated (assoc John :age 30))`
you'll see `assoc` actually returns a new map with the updated value",,
2.34343E+17,Johnny#3826,2021-11-26,"yeah, clojure does not have mutable variables in the regular sense either.",,
7.34828E+17,j10_DP#9473,2021-11-26,ohhh thank you so much this was driving me crazy,,
7.34828E+17,j10_DP#9473,2021-11-26,sometimes I forget how bellicose FP languages are abt immutability,,
4.31584E+17,penguin#8265,2021-11-26,"It's very useful for thread safety, and thanks to persistent data structures, a lot of operations that'd be crazy in other languages are quite efficient in Clojure",,
7.34828E+17,j10_DP#9473,2021-11-26,yeah its def valuable but coming from a mostly js/ts background its a bit alien to me,,
1.89169E+17,srasu#0042,2021-11-26,"Yeah, this gets a lot of people who are just learning clojure coming from an imperative background",,
4.00613E+17,DrNoobopolis#6558,2021-11-29,"```clj
(defn arg-count 
  [f]
  (-> #'f
    (meta)
    (get :arglists)
    (nth 0) 
    (count)))
```",,
4.00613E+17,DrNoobopolis#6558,2021-11-29,I get the error no reader for tag f,,
4.00613E+17,DrNoobopolis#6558,2021-11-29,I want to read the metadata from the provided function f,,
4.00613E+17,DrNoobopolis#6558,2021-11-29,Any idea how this is possible?,,
2.34343E+17,Johnny#3826,2021-11-29,"`#'` (var quote) only works on vars, i.e. things that you know are defined via `def` somewhere. So, `#'f` will literally look for `(def f ...)` somewhere (at compile time)",,
2.34343E+17,Johnny#3826,2021-11-29,"afaik you can't get metadata from *any* function. you could, however, just remove the var quote and require callers to pass a var themselves",,👍 (1)
4.00613E+17,DrNoobopolis#6558,2021-11-29,"Awesome, this works great",,
4.00613E+17,DrNoobopolis#6558,2021-11-30,"any idea why I am getting this error? ``Could not locate intcode__init.class, intcode.clj or intcode.cljc on classpath.``",,
2.34343E+17,Johnny#3826,2021-11-30,you're requiring a namespace it can't find,,
2.34343E+17,Johnny#3826,2021-11-30,some namespace called `intcode`,,
4.00613E+17,DrNoobopolis#6558,2021-11-30,any idea why it can't be located?,,
4.00613E+17,DrNoobopolis#6558,2021-11-30,I have put it in my deps.edn,,
1.90548E+17,seancorfield#3069,2021-11-30,"@DrNoobopolis If you have `(require 'intcode)` (or `(:require intcode)` inside an `ns` form), and you have `src/intcode.clj`, it should work.",,
1.90548E+17,seancorfield#3069,2021-11-30,"So, what is your file called and where is it in relation to your `deps.edn` file, what is in your `deps.edn` file, how are you starting your REPL, and how are you trying to run the code?",,
9.1549E+17,Oliver.555#2170,2021-12-01,I'm new to clojure can anyone help me how to start with clojure,,
1.90548E+17,seancorfield#3069,2021-12-01,I answered this in #general -- I don't know what the policy here is on cross-posting questions? There's a #beginners channel that you might find helpful @Oliver.555,,👍 (1)
1.90548E+17,seancorfield#3069,2021-12-01,(I will point out that the community here is pretty small in comparison to the Clojurians Slack -- self-signup at http://clojurians.net and read/write messages at https://clojurians.slack.com ),,
1.89169E+17,srasu#0042,2021-12-01,"the policy here is that it's bad, but this server has no mods, so nothing gets enforced.",,
1.89169E+17,srasu#0042,2021-12-01,On slack it makes sense to cross post since not everyone is in every channel,,
1.89169E+17,srasu#0042,2021-12-01,but on discord everybody is in all the channels more or less so crossposting is not useful.,,
2.34343E+17,Johnny#3826,2021-12-01,Yeah it doesn't really make a difference here,,
1.90548E+17,seancorfield#3069,2021-12-01,"FYI, we strongly discourage cross-posting in the Clojurians Slack, unless you've posted in a quiet channel first, waited a _suitable_ amount of time (like a whole day) and got no answers.",,
1.90548E+17,seancorfield#3069,2021-12-01,"If someone asks a very specific question in a general channel, we often ask them to ask in the specific channel to see if someone with specific knowledge can help.",,
1.89169E+17,srasu#0042,2021-12-01,"Makes sense. That is a moderation strategy specific to the clojurians slack though. The whole style of ""anyone can make a channel for anything, and everyone can join the channels they like"" encourages cross-posting.",,
1.89169E+17,srasu#0042,2021-12-01,whether or not it's desired,,
1.63628E+17,tufflax#8251,2021-12-04,"Why does the function `any?` exist? It's a good name for a useless function, it seems. Oh, it's useful for spec.",,
1.89169E+17,srasu#0042,2021-12-04,"it's for spec, yeah",,
1.90548E+17,seancorfield#3069,2021-12-04,"@tufflax previous to `any?`, if you needed to pass in a predicate to some function that was always true, you had to say `(constantly true)` -- and stuff like that happens when you work with higher-order functions. So `any?` is definitely not a ""useless"" function. It's like `identity` -- a lot of people think that's a ""useless"" function until they've worked with higher-order functions quite a bit and then they see the value of being able to pass in a function that _doesn't_ transform its argument.",,💯 (1)
