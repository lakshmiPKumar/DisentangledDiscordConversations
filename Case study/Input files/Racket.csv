AuthorID,Author,Date,Content,Attachments,Reactions
2.66505E+17,notjack#9941,2019-09-11,hello! üëã,,racket (1)
3.96713E+17,◊ê÷≤◊ë÷¥◊ô#7053,2019-09-11,Welcome,,
3.37594E+17,casmajavi#8518,2019-09-11,Hi guys,,
4.62028E+17,StephenD#5938,2019-09-11,hi,,
4.66395E+17,oaktownsam#0815,2019-09-11,üò∏ Hi,,
4.62028E+17,StephenD#5938,2019-09-11,HI SAM,,
4.62028E+17,StephenD#5938,2019-09-11,Sorry this is a bit of a ghost town,,
4.62028E+17,StephenD#5938,2019-09-11,it is still an experiment,,
4.62028E+17,StephenD#5938,2019-09-11,wht,,
4.62028E+17,StephenD#5938,2019-09-11,what was it like when you clicked the link?,,
4.62028E+17,StephenD#5938,2019-09-11,I'm also trying to stream a Drracket session https://www.twitch.tv/spdegabrielle,,
4.62028E+17,StephenD#5938,2019-09-11,I'm guessign you are my other viewer,,
4.62028E+17,StephenD#5938,2019-09-11,Still go to work out how to do both discord and twichc,,
2.66505E+17,notjack#9941,2019-09-11,Can I just say that I love the :racket: emoji,,racket (6)
4.62028E+17,StephenD#5938,2019-09-11,ha!,,
4.62028E+17,StephenD#5938,2019-09-11,I forgot it was transparent,,
4.62028E+17,StephenD#5938,2019-09-11,I was going to bin it. but why not keep it üôÇ,,
4.62028E+17,StephenD#5938,2019-09-11,I think I have to go now.,,
4.62028E+17,StephenD#5938,2019-09-11,maybe we can get a gamejam going.,,
4.62028E+17,StephenD#5938,2019-09-11,soem live codign,,
4.62028E+17,StephenD#5938,2019-09-11,all good.,,
4.62028E+17,StephenD#5938,2019-09-11,ttfn,,
4.66395E+17,oaktownsam#0815,2019-09-11,After I clicked the link suddenly all of the channels appeared.  Sorry I missed your Livestream,,
4.62028E+17,StephenD#5938,2019-09-11,Sorry it was just a little big-bang,,
2.66505E+17,notjack#9941,2019-09-11,"Huh, maybe I should livestream some of my coding sessions and drop links here too",,
2.66505E+17,notjack#9941,2019-09-11,"@StephenD wait, am I an admin??",,
4.89956E+17,WillBAnders#5226,2019-09-12,Howdy folks,,
4.62028E+17,StephenD#5938,2019-09-12,Howdy,,
2.66505E+17,notjack#9941,2019-09-12,"Hey all, I just finished tagging some issues in Rebellion (a package that provides a bundle of utility libraries) with `good first issue`, if anyone's looking for a Racket project to contribute to. See the tagged issues here: https://github.com/jackfirth/rebellion/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22",,üëç (1)
4.89956E+17,WillBAnders#5226,2019-09-12,How suitable would Racket be for some type of P2P file system? I have to pick a language to work with and do a number of command line things as well.,,
4.62028E+17,StephenD#5938,2019-09-12,I‚Äôd say yes to both.,,
4.62028E+17,StephenD#5938,2019-09-12,It‚Äôs cross platform with gui -out of the box - so assuming p2p implies clients on different platforms,,
4.89956E+17,WillBAnders#5226,2019-09-12,Any particular langs or modules I should look into for things?,,
4.62028E+17,StephenD#5938,2019-09-12,I‚Äôd start with the network libraries section at https://docs.racket-lang.org,,
4.62028E+17,StephenD#5938,2019-09-12,I need to pin a note,,
4.62028E+17,StephenD#5938,2019-09-12,"This server is still in testing!  
The best place for racket questions is https://groups.google.com/forum/m/#!forum/racket-users or the racket slack.",,
4.62028E+17,StephenD#5938,2019-09-12,Pinned a message.,,
4.89956E+17,WillBAnders#5226,2019-09-12,"Yeah, I keep an eye on the Slack but prefer discord. Maybe it's because I'm younger.",,
4.62028E+17,StephenD#5938,2019-09-12,Haha,,
4.62028E+17,StephenD#5938,2019-09-12,Why do you prefer discord?,,
4.89956E+17,WillBAnders#5226,2019-09-12,"Voice, organized channels, better permissions, no messing around with multiple workspace settings, and probably a bunch of other things I can't think of off the top of my head.",,
4.62028E+17,StephenD#5938,2019-09-12,Thanks appreciated,,
4.62028E+17,StephenD#5938,2019-09-12,Let me know if you can think of ways to make this server better.,,
4.62028E+17,StephenD#5938,2019-09-12,Or I can give you admin access and you can try stuff out,,
4.89956E+17,WillBAnders#5226,2019-09-12,Appreciate the offer but I'm good chilling here for now; already involved in enough stuff.,,üëç (1)
2.66505E+17,notjack#9941,2019-09-12,The channel organization is something I really like about discord too,,
4.66395E+17,oaktownsam#0815,2019-09-12,Jumping between different channels in different servers seems cleaner on Discord to me.,,üëç (1)
2.66505E+17,notjack#9941,2019-09-13,"Since weird and wild programming languages might be relevant to racket folks, check out this cool thing I just found https://darklang.com/",,
4.66395E+17,oaktownsam#0815,2019-09-13,Wow they're in Duboce Triangle,,
4.66395E+17,oaktownsam#0815,2019-09-13,Guessing from the job postings built with Ocaml and Rust,,
4.62028E+17,StephenD#5938,2019-09-13,Good foundation ?,,
4.66395E+17,oaktownsam#0815,2019-09-13,"I'm not a big Ocaml fan, but Rust is pretty great.",,‚ûï (1)
4.66395E+17,oaktownsam#0815,2019-09-13,As far as static typing is concerned it's (Ocaml) up there with Haskell,,
4.62028E+17,StephenD#5938,2019-09-13,Good alternatives to c/c++ ?,,
4.66395E+17,oaktownsam#0815,2019-09-13,"Rust for sure is.  OCaml is still garbage collected, and I don't know how good the low level system-ey interfaces are.",,
2.66505E+17,notjack#9941,2019-09-13,I think the Rust language has an explicit design goal to replace as many C/C++ use cases as possible,,
4.62028E+17,StephenD#5938,2019-09-13,Nice,,
1.93202E+17,rocketnia#4517,2019-09-14,hi all :),,
2.66505E+17,notjack#9941,2019-09-14,hey there nia üëã,,
4.62028E+17,StephenD#5938,2019-09-16,Hi Nia,,
4.62028E+17,StephenD#5938,2019-09-16,@rocketnia,,
1.93202E+17,rocketnia#4517,2019-09-16,heya XD,,
4.62028E+17,StephenD#5938,2019-09-16,@rocketnia any comments and/or suggestions?,,
1.93202E+17,rocketnia#4517,2019-09-16,I don't have anything particular in mind... just lurking,,
4.62028E+17,StephenD#5938,2019-09-16,Ok - this server is sort of a trial - I'm hoping to use it for a gamejam. it might be more welcoming/familiar to some demographics. so feedback and suggestions appreciated.,,
4.62028E+17,StephenD#5938,2019-09-16,And thank you. Your lurking is noted and appreciated. üëÅ,,
2.66505E+17,notjack#9941,2019-09-16,@StephenD what setup / tools / platforms do you use when live streaming a racket coding session?,,
2.66505E+17,notjack#9941,2019-09-16,tonight's project!,https://cdn.discordapp.com/attachments/618895179343986688/623361879435247626/Screen_Shot_2019-09-16_at_8.32.53_PM.png,üòÄ (1)
4.62028E+17,StephenD#5938,2019-09-17,@notjack OBS https://obsproject.com,,üëç (2)
4.62028E+17,StephenD#5938,2019-09-17,@notjack I'd preferred to have use a Racketty solution: #lang video https://lang.video or #lang overscan https://www.overscan.tv - but I've not been successful at getting either working on my ageing mac.,,
4.66395E+17,oaktownsam#0815,2019-09-17,I briefly looked at overscan before but forgot about it.,,
4.62028E+17,StephenD#5938,2019-09-17,Gamejam: https://github.com/competitions-incubator/gamejam/blob/master/README.md,,
4.62028E+17,StephenD#5938,2019-09-17,Comments?,,
2.66505E+17,notjack#9941,2019-09-17,"@StephenD I love it. I think including links to Racket tools and frameworks for game dev would also help. I know Jay did a talk about it at racketcon 2019 office hours, but I don't know if that section of the livestream has its own video.",,üëç (1)
2.66505E+17,notjack#9941,2019-09-17,"Minor nit about one of the other repositories in that org: we should avoid the term ""hackathon"", because it tends to come across as exclusionary to women (there's some research about this but I don't remember any links offhand)",,üëç (1)
2.66505E+17,notjack#9941,2019-09-17,"In the gamejam description one possible theme listed is ""bots"". Do you mean like chatbots? Because I'd personally love to make one of those.",,
1.93202E+17,rocketnia#4517,2019-09-17,"One of the few interesting culture differences I see between Slack and Discord is that even though Slack has bots, I see a lot more bots in Discord. Could be pretty fun to see bots made with Racket, so why not?",,‚úÖ (1)
2.66505E+17,notjack#9941,2019-09-17,I've noticed that too. I wonder if discord has a more advanced bot API or something.,,
2.66505E+17,notjack#9941,2019-09-17,Or if it's just a culture thing.,,
1.93202E+17,rocketnia#4517,2019-09-17,"[edit: added ""so why not?"" to the end]",,
4.66395E+17,oaktownsam#0815,2019-09-17,"re: slack and discord bots, I think it's because Slack in most cases is a ""business"" tool and to get a bot together you have to clear it through your corporate hoopla.  Discord seems more free-wheeling like IRC.",,
2.66505E+17,notjack#9941,2019-09-17,can you add bots to a discord server without the server admin's permission?,,
4.66395E+17,oaktownsam#0815,2019-09-17,Good question,,
4.66395E+17,oaktownsam#0815,2019-09-17,Just poking around I would say you would need to be a server admin (or some delegated permission) to add a bot/app.,,
4.66395E+17,oaktownsam#0815,2019-09-17,"For a ""bots"" theme I would read that to mean your game should have bots, robots, cyborgs, Terminators, automatons, Frankenstein's monsters, etc. in someway in your game. 

Examples:
- Escape from Killer Robots (a Roguelike where you are chased in a maze by Killer Robots)
- Robot Finds Kitten (The player, a Robot, must discover items in a room that are not Kitten.  Game ends when Kitten is found.)
- Will CX-437 Ever Find Love? (a visual novel about a steam automaton in Olde Victorian Steampunk Tymes.)
- Roboblocks (a falling block puzzle where the falling blocks are robot parts and the goal is to match parts to make robots)
- ELIZA on PTO (what happens when Weizenbaum's creation goes on vacation)",,üíØ (1)
4.66395E+17,oaktownsam#0815,2019-09-17,At least one of those already exists.,,
2.66505E+17,notjack#9941,2019-09-17,"@oaktownsam That was my read too, but I remember @StephenD talking about chatbots in Racket recently",,
2.66505E+17,notjack#9941,2019-09-17,also those are great game ideas üòõ,,
4.62028E+17,StephenD#5938,2019-09-17,"Lies, all liesü§£",,
4.66395E+17,oaktownsam#0815,2019-09-17,Someone should make a Markov Bot that generates Racket programs,,"‚ûï (1),üíí (1)"
4.62028E+17,StephenD#5938,2019-09-17,Most inappropriate emoji,,
4.62028E+17,StephenD#5938,2019-09-17,You could have a bot without admin permission - you would just need to register and Authenticate as a user,,
4.62028E+17,StephenD#5938,2019-09-17,I‚Äôm probably a FSM,,‚ûï (3)
4.62028E+17,StephenD#5938,2019-09-17,Not a particularly sophisticated one either,,
4.62028E+17,StephenD#5938,2019-09-18,@notjack game resources racket wiki link added to readme https://github.com/competitions-incubator/gamejam/blob/master/README.md,,
4.62028E+17,StephenD#5938,2019-09-18,@oaktownsam thank you - I have also added you ideas to the readme.,,
4.62028E+17,StephenD#5938,2019-09-18,Can I add both @notjack  and @oaktownsam to the repo ? (Send your github name if you want to be added),,‚úÖ (2)
4.62028E+17,StephenD#5938,2019-09-18,So you can make any changes you deem necessary. If you feel it is something that requires discussion/agreement jut add a ‚úÖ as a reaction so others can respond or agree by adding their ‚úÖ,,‚úÖ (3)
4.62028E+17,StephenD#5938,2019-09-18,@rocketnia my son is on a discord with a monster catching game done with a bot. I think Racket bots is a great idea!,,
4.62028E+17,StephenD#5938,2019-09-18,"@notjack ive removed tha hackathon repo - someone suggested gamejam, retro and low-level racket competitions - I was wrong to bundle the mast too together under hackathon",,üëç (1)
4.62028E+17,StephenD#5938,2019-09-18,"I‚Äôve added the other suggestions; MUD, low-level and retro",,
4.62028E+17,StephenD#5938,2019-09-18,Pinned a message.,,
4.62028E+17,StephenD#5938,2019-09-18,Updated https://github.com/competitions-incubator/gamejam/blob/master/README.md,,
4.66395E+17,oaktownsam#0815,2019-09-18,"I also did some edits.
> - fix spelling typo
> - point to submitted version of my LGJ 2018 entry
> - add itch.io page link
> - link to robotfindskitten.org",,‚úÖ (1)
4.62028E+17,StephenD#5938,2019-09-18,@oaktownsam Thanks,,
4.62028E+17,StephenD#5938,2019-09-18,"Proposal; racket gamejam runs for october
  Judges: @oaktownsam @notjack
Prizes: win the title of 'best game' , etc for other categories (no budget for prizes)
thats it.",,
4.62028E+17,StephenD#5938,2019-09-18,submission: racket package - must run under DrRacket,,
4.62028E+17,StephenD#5938,2019-09-18,you can enter as many times as you like,,
4.62028E+17,StephenD#5938,2019-09-18,"categorys; best game, most entries, best sidescroller, best puzzle, best shooter,etc.",,
4.62028E+17,StephenD#5938,2019-09-18,"real time voting; so entrants are encouraged to promote their entries on social media; especially discord, twitch, youtube, reddit.",,
2.66505E+17,notjack#9941,2019-09-18,Any operating system requirements? I use a Mac so if a game only runs on Windows I won't be able to judge it,,
4.62028E+17,StephenD#5938,2019-09-19,Most people can‚Äôt afford two computers. We can have platform specific awards.,,üëç (1)
4.62028E+17,StephenD#5938,2019-09-19,@notjack  should we use the itch.io platform? I‚Äôm not sure what benefits it offers?,,
4.62028E+17,StephenD#5938,2019-09-19,https://github.com/jeapostrophe/gamejam-2019,,
2.66505E+17,notjack#9941,2019-09-19,@StephenD I don't know much about itch.io,,
4.62028E+17,StephenD#5938,2019-09-19,@oaktownsam ?,,
4.66395E+17,oaktownsam#0815,2019-09-19,I only know from using it.,,
1.93202E+17,rocketnia#4517,2019-09-19,"A friend of mine hosted a game jam using itch.io once. I hear it was really easy.

Seems like there are a lot of people on itch.io who'll just submit their game to every single event they can, so it's easy to get a lot of participation but also easy for it all to be off-topic. :-p Especially for a ""build it in Racket"" event, virtually all the drive-by submissions are going to be built in completely different systems that have nothing to do with the event, probably.",,
1.93202E+17,rocketnia#4517,2019-09-19,"Whatever, at least if some people are on topic, the others aren't taking that away :)",,
4.62028E+17,StephenD#5938,2019-09-20,@rocketnia im assuming you can just exclude ineligible entries?,,
1.93202E+17,rocketnia#4517,2019-09-20,I think so,,
1.93202E+17,rocketnia#4517,2019-09-20,I don't know what the interface is like,,
4.62028E+17,StephenD#5938,2019-09-20,A good question for @oaktownsam,,
4.62028E+17,StephenD#5938,2019-09-20,@rocketnia I wonder if the lack of prizes will discourage driveby submissions?,,
4.66395E+17,oaktownsam#0815,2019-09-20,Maybe.  In the Lisp Game Jam all of the submissions that I saw (as a participant) were legit.,,
4.62028E+17,StephenD#5938,2019-09-20,That‚Äôs good news.,,
4.62028E+17,StephenD#5938,2019-09-20,As for supporting more inexperienced developers....I found this gem https://github.com/jeapostrophe/gamejam-2019,,
2.66505E+17,notjack#9941,2019-09-21,I'm attempting to implement transducer composition tonight! https://github.com/jackfirth/rebellion/issues/191,,
2.66505E+17,notjack#9941,2019-09-21,update: I got it started and maybe like 10% completed,,üëç (2)
1.93202E+17,rocketnia#4517,2019-09-21,woo!,,
4.62028E+17,StephenD#5938,2019-09-23,https://github.com/nitros12/racket-cord,,üëÄ (2)
4.62028E+17,StephenD#5938,2019-09-23,Pinned a message.,,
4.62028E+17,StephenD#5938,2019-09-24,We have a few people on this discord now.  Please fee free to have a play around. If want admin access to try stuff out please just ask. There is a discord library that can be used to create commands and bots.,,
4.62028E+17,StephenD#5938,2019-09-30,https://github.com/racket/racket/wiki/Game-Development,,üëç (2)
2.66505E+17,notjack#9941,2019-09-30,@StephenD this is great! thank you for putting that page together,,
4.62028E+17,StephenD#5938,2019-09-30,@notjack  it‚Äôs not just me Jens @soegaard made the latest addition,,üíØ (1)
4.89956E+17,WillBAnders#5226,2019-10-12,"Hey folks, working on a hackathon-like project this weekend and we're doing validation on a product using facial recognition. If you could take about 3 minutes to fill out a short survey that'd be cool!

<https://forms.gle/4NF5GfvqBJsFnECu5>",,
2.66505E+17,notjack#9941,2019-10-12,@WillBAnders welcome! filled out the survey,,
2.66505E+17,notjack#9941,2019-10-12,my initial reaction is that facial recognition in hotels is a terrifying and dangerous idea,,
2.66505E+17,notjack#9941,2019-10-12,happy to chat more if you like,,
4.89956E+17,WillBAnders#5226,2019-10-12,"Honestly, same. So yeah xD",,
2.66505E+17,notjack#9941,2019-10-12,"okay, small sigh of relief there :p",,
4.89956E+17,WillBAnders#5226,2019-10-12,Yeah... there isn't even a working theory for how it would make money tbh.,,
4.89956E+17,WillBAnders#5226,2019-10-12,"There's a convenience thing, theoretically, but that's hard pressed to justify it.",,
4.89956E+17,WillBAnders#5226,2019-10-12,And what the working theory is for some of my team members is that the costs saved by disposable swipe cards will cover it.,,
4.89956E+17,WillBAnders#5226,2019-10-12,"And to that, they're disposable for a reason.",,
2.66505E+17,notjack#9941,2019-10-12,"I can only imagine the damage that could be done if, like, ICE demanded that a hotel company turn over access to all of its facial recognition systems",,
4.89956E+17,WillBAnders#5226,2019-10-12,Is there a precedent or legal case for that?,,
2.66505E+17,notjack#9941,2019-10-12,"Yes, and it wouldn't even the first time facial recognition tech specifically was involved. Palantir built the mass surveillance and facial recognition systems currently in use by ICE.",,
2.66505E+17,notjack#9941,2019-10-12,Now I have to think about that every time I walk past their blasted office on my way to one of my partner and I's favorite brunch spots.,,
4.89956E+17,WillBAnders#5226,2019-10-12,Do you happen to have an example or source for a law that allows that?,,
2.66505E+17,notjack#9941,2019-10-12,"No, but I happen to know an expert in that field and can give you their contact info",,
4.89956E+17,WillBAnders#5226,2019-10-12,I'd be down for that. I'm not too interested in this product but definitely interested in the subject.,,
2.66505E+17,notjack#9941,2019-10-12,"I'll introduce you then üôÇ What's your email address? (feel free to dm it if you prefer) Also, could you share a bit more about your team + product + company/group/org/etc.?",,
4.89956E+17,WillBAnders#5226,2019-10-12,Sure.,,
4.62028E+17,StephenD#5938,2019-10-13,I‚Äôve updated https://itch.io/jam/11714/preview,,
4.62028E+17,StephenD#5938,2019-10-13,I‚Äôve updated https://itch.io/jam/11714/preview,https://cdn.discordapp.com/attachments/618895179343986688/632966306546581514/racket-gamejam-smooth.png,
4.56227E+17,Deleted User#0000,2019-10-21,Hello everyone.,,
3.08335E+17,bthesorceror#1255,2019-10-21,üëã,,
2.66505E+17,notjack#9941,2019-10-22,welcome!,,
4.62028E+17,StephenD#5938,2019-10-22,üëç,,
2.66505E+17,notjack#9941,2019-10-22,Doin' some transducin' tonight https://twitter.com/doitwithalambda/status/1186534665269600256,,üëç (2)
4.62028E+17,StephenD#5938,2019-10-22,@notjack you should do a screencast!,,
2.66505E+17,notjack#9941,2019-10-22,"tempting, how do I do that?",,
4.62028E+17,StephenD#5938,2019-10-22,Obs lis good and free,,
4.62028E+17,StephenD#5938,2019-10-22,Alex uses,,
4.62028E+17,StephenD#5938,2019-10-22,"I use a program called ScreenToGif -- the name is misleading, as it can actually generate movies as well.  The program has some limitations, but it is good enough for simple things.

You can find it here: https://github.com/NickeManarin/ScreenToGif

Best Regards,
Alex.",,
4.62028E+17,StephenD#5938,2019-10-22,https://obsproject.com let‚Äôs you do it live,,
2.66505E+17,notjack#9941,2019-10-22,potential downside to screencasting: people have to watch me publicly suffer through drracket's macOS scroll performance üò¶,,"üò© (1),üòø (2)"
4.62028E+17,StephenD#5938,2019-10-22,I‚Äôve used QuickTime to record screencasts too,,
4.62028E+17,StephenD#5938,2019-10-22,I didn‚Äôt know that was affecting you,,
4.62028E+17,StephenD#5938,2019-10-22,Linux?,,
2.66505E+17,notjack#9941,2019-10-22,"I have a very, very low tolerance for configuring things",,
4.62028E+17,StephenD#5938,2019-10-22,So you are not on linux! I‚Äôm assuming windows or macOS . I‚Äôve not experienced the issue but I‚Äôve just been using macOS lately.,,
4.62028E+17,StephenD#5938,2019-10-22,(I‚Äôm assuming platform specific),,
2.66505E+17,notjack#9941,2019-10-22,"I'm on macOS, specifically the 2015 macbook laptop",,
2.66505E+17,notjack#9941,2019-10-22,(yup),,
2.66505E+17,notjack#9941,2019-10-22,"sometimes I have to wait multiple seconds for drracket to finish scrolling, and none of the files in my project are more than a thousand lines long",,
4.62028E+17,StephenD#5938,2019-10-22,"Weird. I‚Äôm on a 2013 mbp. I‚Äôve not seen it, but I‚Äôve not been coding much lately...",,
2.66505E+17,notjack#9941,2019-10-22,"I've got absolutely no idea what causes it and I hope it will just magically vanish one day, but it's been a problem for years now I think",,
4.62028E+17,StephenD#5938,2019-10-22,I‚Äôll try reproduce it tonight. (8am now),,
2.66505E+17,notjack#9941,2019-10-22,"there's a github issue with some more context and more reports from others affected, have you seen that?",,
4.62028E+17,StephenD#5938,2019-10-22,I‚Äôll look for it.,,
4.62028E+17,StephenD#5938,2019-10-22,My code is usually short & I tend to turn off most of the DrRacket extensions to speed startup.,,
2.66505E+17,notjack#9941,2019-10-22,"hmm, I think I have most of the extensions off too",,
2.66505E+17,notjack#9941,2019-10-22,"with drracket, everything about it is either an incredible and invaluable feature I can't live without, or a near-inexcusable usability failure",,"üò© (2),üòÇ (1)"
2.66505E+17,notjack#9941,2019-10-22,there's no inbetween,,
4.62028E+17,StephenD#5938,2019-10-22,"Things I love: snips, folding, dependency arrows, context help, signatures, Quick script, splash screen. Things that piss me off; plugins slowing startup, signatures not registering, intellisense off by default, signatures doesn‚Äôt work on object methods.",,
2.66505E+17,notjack#9941,2019-10-22,pressing f1 to open scribble is probably one of the things I do most often,,
2.66505E+17,notjack#9941,2019-10-22,"Oh, and structural navigation (hold control while using arrows to hop over, into, and out of expressions) is incredibly useful and I wish IntelliJ had it üò¶ Unless it does and I just haven't figured out how to use it",,
2.66505E+17,notjack#9941,2019-10-22,...hm.... I wonder what happens if I just turn off line numbers then,,
2.66505E+17,notjack#9941,2019-10-22,"Nope, still scrolls slow üò¶",,
2.66505E+17,notjack#9941,2019-10-22,was really hoping it would be something simple like that,,üò© (1)
2.66505E+17,notjack#9941,2019-10-22,oh? what sort?,,
2.66505E+17,notjack#9941,2019-10-22,which pr? also ugh that kind of thing is so frustrating,,
2.66505E+17,notjack#9941,2019-10-22,ah yes that one,,
2.66505E+17,notjack#9941,2019-10-22,"on the plus side, ""signature box"" is a great term",,
2.66505E+17,notjack#9941,2019-10-22,"I like that it lines up with how the term ""signature"" is used in How To Design Programs",,"‚úÖ (1),üëç (1)"
2.66505E+17,notjack#9941,2019-10-22,"Unrelated, I made another transducer",https://cdn.discordapp.com/attachments/618895179343986688/636112435023052800/Screen_Shot_2019-10-22_at_12.55.47_AM.png,
4.62028E+17,StephenD#5938,2019-10-22,Nice. This is great. That‚Äôs why I suggested a screencast/video. Get the word out. üòÄ,,
2.66505E+17,notjack#9941,2019-10-22,"Usually I tweet 'em but I'll probably attempt a screencast or two, perhaps for the game jam üòÑ",,üëç (1)
4.62028E+17,StephenD#5938,2019-10-22,Need a nice blog post like https://blog.cognitect.com/blog/2014/8/6/transducers-are-coming,,
2.66505E+17,notjack#9941,2019-10-22,I've drafted a racket-users post,,
2.66505E+17,notjack#9941,2019-10-22,waiting until I finish some features that I use in the example code of the post :p,,üëç (1)
4.62028E+17,StephenD#5938,2019-10-22,Gotta go almost at work. Thanks for letting me vent.,,
2.66505E+17,notjack#9941,2019-10-22,"welcome, glad I could help some",,"üëç (1),üòÇ (1)"
4.56227E+17,Deleted User#0000,2019-10-22,Is there a library for bimaps?,,
4.56227E+17,Deleted User#0000,2019-10-22,Or should I turn my hackish solution into a package?,,
4.62028E+17,StephenD#5938,2019-10-22,@Deleted User there is this https://docs.racket-lang.org/draw/bitmap_.html?q=Bitmap,,
4.62028E+17,StephenD#5938,2019-10-22,@Deleted User also https://docs.racket-lang.org/teachpack/2htdpimage.html?q=Bitmap#%28form._%28%28lib._2htdp%2Fimage..rkt%29._bitmap%29%29,,
4.56227E+17,Deleted User#0000,2019-10-22,"Bimap, not bitmap haha",,
4.56227E+17,Deleted User#0000,2019-10-22,As in bidirectional hashmap,,
4.62028E+17,StephenD#5938,2019-10-22,Oops sorry,,
4.56227E+17,Deleted User#0000,2019-10-22,^^;,,
4.62028E+17,StephenD#5938,2019-10-22,I‚Äôm not aware of one. It‚Äôs a great idea ! Make a package!,,
4.62028E+17,StephenD#5938,2019-10-22,Don‚Äôt forget to tell others about it on Racket-users and Racket slack.,,
4.62028E+17,StephenD#5938,2019-10-22,(I like discord but most of the community are on the mailing list or slack),,
4.56227E+17,Deleted User#0000,2019-10-22,I don't have Slack but I'm on `#racket` on Freenode as `erkin`.,,
2.66505E+17,notjack#9941,2019-10-22,"@Deleted User there isn't one but I'd love one, and I have an outstanding issue for adding bimaps to Rebellion's collection libraries https://github.com/jackfirth/rebellion/issues/182",,
4.56227E+17,Deleted User#0000,2019-10-22,Sounds good!,,
2.66505E+17,notjack#9941,2019-10-22,thing that might be useful: a `split` type,,
2.66505E+17,notjack#9941,2019-10-22,"```
(define-record-type split (point part-before part-after))

(define (split-once seq v) ...)

> (split-once ""red, blue, green"" "","")
(split #:point #\, #:part-before ""red"" #:part-after "" blue, green"")
> (split-once (list 1 2 3 4 5) 4)
(split #:point 4 #:part-before (list 1 2 3) #:part-after (list 5))
```",,
4.56227E+17,Deleted User#0000,2019-10-22,"My current project is a simple and accessible tutorial/blogpost on Scheme macro systems, aimed at intermediate Schemers/Racketeers who want to explore the broad world of macros. Focusing on `syntax-rules` and `syntax-case` but also covering `syntax-parse`, `define-macro`, `extend-syntax` and `{sc,er,ir}-macro-transformer`, as well as auxiliary stuff like syntax parameters and helper transformers.",,
4.56227E+17,Deleted User#0000,2019-10-22,Mostly inspired by Hendershott's Fear of Macros.,,
4.56227E+17,Deleted User#0000,2019-10-22,It's very much a WIP but I hope to get it finished this year.,,
4.56227E+17,Deleted User#0000,2019-10-22,Would you peeps be interested in such a thing?,,
2.66505E+17,notjack#9941,2019-10-22,Very very much!,,
2.66505E+17,notjack#9941,2019-10-22,"I know of a few other Racket macro tutorials and resources that are hard to find and less known, would you be interested in links to those as well?",,
4.56227E+17,Deleted User#0000,2019-10-22,Absolutely,,
2.66505E+17,notjack#9941,2019-10-22,"There's this cool collection of `syntax-parse` examples, with Scribble docs explaining how each example works: https://docs.racket-lang.org/syntax-parse-example/index.html",,
4.56227E+17,Deleted User#0000,2019-10-22,@notjack Here's the rough draft so far: https://clbin.com/lIJbR,,
4.56227E+17,Deleted User#0000,2019-10-22,I appreciate all sorts of feedback. ^^,,
4.56227E+17,Deleted User#0000,2019-10-22,"Currently it only covers `define-macro`, `syntax-rules` and `syntax-case`. I opted to start with `define-macro` to introduce unhygienic macros first, then move on to hygienic solutions, beginning with the most popular macro system of all Schemes.",,
2.66505E+17,notjack#9941,2019-10-22,"I think that makes sense, particularly if you want to talk about a large set of schemes rather than racket specifically",,
4.56227E+17,Deleted User#0000,2019-10-22,Racket has such a huge macro system that I don't think I could talk about all parts of it.,,
2.66505E+17,notjack#9941,2019-10-22,it's also got some pretty big differences from other schemes in what's considered idiomatic macro design,,
4.56227E+17,Deleted User#0000,2019-10-22,"Yeah, I really like that Racket is more macro-happy than other Schemes.",,
2.66505E+17,notjack#9941,2019-10-22,"like, I generally think of `syntax-rules` and `syntax-case` as functionally deprecated and _always_ use the `syntax-parse` system",,
4.56227E+17,Deleted User#0000,2019-10-22,"I've always been a fan of batteries-included principle (it's the Lispy approach ‚Äî the Massachusetts school of ""The Right Thing"" vs the New Jersey school of ""Worse Is Better,"" the Unixy approach) ‚Äî that's why I like R6RS Scheme.",,
4.56227E+17,Deleted User#0000,2019-10-22,"In addition, I think Scheme should be more proud of its most distinctive feature: hygienic macros.",,
4.56227E+17,Deleted User#0000,2019-10-22,I think you can tell why Racket is my favourite language. ^^;,,
2.66505E+17,notjack#9941,2019-10-22,definitely sounds very racketeer-y üòâ,,
4.56227E+17,Deleted User#0000,2019-10-22,"I want to see Racket's `syntax-parse` ported to other Schemes also. Chez is a good contender: Besides its new association with Racket, Kent Dybvig came up with `syntax-case` and the syntax object paradigm, not to mention it's a high-performance R6RS implementation.",,
4.56227E+17,Deleted User#0000,2019-10-22,Hehe,,
4.66395E+17,oaktownsam#0815,2019-10-22,Not many other schemes really bought into `syntax-case` and separating compile and runtime.,,
4.66395E+17,oaktownsam#0815,2019-10-22,I think the R6RS process experience is a motivator in the rhombus process.,,‚ûï (1)
4.56227E+17,Deleted User#0000,2019-10-22,How do you mean wrt Rhombus? @oaktownsam,,
4.66395E+17,oaktownsam#0815,2019-10-22,I think the R6RS process was semi-open and I think the results of that were not so great.  For Rhombus they're really trying to do it all in the open (like Rust really.),,
4.56227E+17,Deleted User#0000,2019-10-23,"Ah, I see how you mean. I was confused, thinking Rhombus is changing something about compile-time.",,
4.56227E+17,Deleted User#0000,2019-10-23,üòÖ,,
4.89956E+17,WillBAnders#5226,2019-10-23,"So being someone that has little experience with Racket but has worked with a large number of programming languages, the lisp-ness of Racket doesn't bother me much. Indentation and formatting is probably my largest complaint.",,
4.56227E+17,Deleted User#0000,2019-10-23,I think paredit helps immensely in that respect.,,
2.66505E+17,notjack#9941,2019-10-23,The thing I find helps the most is using `define` instead of `let` / `let*` / `letrec` etc.,,
4.89956E+17,WillBAnders#5226,2019-10-23,"That being said, having the most experience with Racket's macro system I tend to prefer the lisp notation as it makes things a lot easier to grasp, in my opinion. Many of the quote and quasiquote pieces are still confusing for me, but nonetheless.",,
4.56227E+17,Deleted User#0000,2019-10-23,"Coming from a Lisp background, I'm wary of the idea of dropping sexps, but I'm not entirely opposed to the idea of it if it's done well. There exist Lisps without sexps after all (eg Logo, Dylan).",,
2.66505E+17,notjack#9941,2019-10-23,"@WillBAnders If you're interested, try dropping quote/quasiquote/unquote entirely from your macros sometime üôÇ",,
4.56227E+17,Deleted User#0000,2019-10-23,"But yeah, I think revamping the macro system is a daunting task even after reading the Honu paper.",,
2.66505E+17,notjack#9941,2019-10-23,(I did that and replaced it with syntax classes and the `#:with` pattern directive and it helped things a lot IMO),,
2.66505E+17,notjack#9941,2019-10-23,@Deleted User on the bright side it's limited mostly to the reader,,
4.89956E+17,WillBAnders#5226,2019-10-23,I don't think I could write even a basic macro without having to trial and error my way through examples.,,
4.56227E+17,Deleted User#0000,2019-10-23,It's going to be an interesting experiment regardless of the result. üò∫,,
4.89956E+17,WillBAnders#5226,2019-10-23,"I get the concepts, understand the solution, but can't exactly generate it myself.",,
4.56227E+17,Deleted User#0000,2019-10-23,Isn't that how you learn things though?,,
4.56227E+17,Deleted User#0000,2019-10-23,I believe it's impossible to grok macros without examples and trial & error.,,
4.89956E+17,WillBAnders#5226,2019-10-23,"Course! I'm still learning, so not the most qualified person to provide opinions on it ;)",,
4.89956E+17,WillBAnders#5226,2019-10-23,"But I know my way around programming languages more than most, so there's that at least.",,
4.56227E+17,Deleted User#0000,2019-10-23,üò∏,,
4.56227E+17,Deleted User#0000,2019-10-23,@notjack Do you have any comments/critique/ideas for my post so far?,,
4.56227E+17,Deleted User#0000,2019-10-23,It's only 20% complete though.,,
2.66505E+17,notjack#9941,2019-10-23,"I've only gotten a chance to skim it, been a busy night",,
2.66505E+17,notjack#9941,2019-10-23,will let you know once I do read it üôÇ,,
4.56227E+17,Deleted User#0000,2019-10-23,Okie dokie!,,
4.89956E+17,WillBAnders#5226,2019-10-23,@notjack Am I able to open up an issue for range stuff later? Are there any particular structure/standards I should note when doing so?,,
2.66505E+17,notjack#9941,2019-10-23,"@WillBAnders In the Rebellion repo? Yes, go for it! I have some standards and style rules but I haven't written them down, so don't worry about them.",,
4.89956E+17,WillBAnders#5226,2019-10-23,Rightio. I'll look over existing issues to get an idea and go from there. Probably not today but perhaps tomorrow; not sure.,,
4.89956E+17,WillBAnders#5226,2019-10-24,"I probably went overboard xD
https://github.com/jackfirth/rebellion/issues/315",,‚ù§ (1)
2.66505E+17,notjack#9941,2019-10-24,I skimmed it and will read more and respond probably this weekend. I've got a busy week.,,
2.66505E+17,notjack#9941,2019-10-24,Thank you so much though :),,
2.66505E+17,notjack#9941,2019-10-24,Initial comment: ranges exist over more than just numbers. I think any range API provided by rebellion needs to work for custom data types too. Possibly by allowing the user to specify a comparator: https://docs.racket-lang.org/rebellion/Comparators.html,,
4.89956E+17,WillBAnders#5226,2019-10-24,Definitely more than just numbers. I guess that's also a design goal but didn't think to specify it because I felt it was really basic xD,,
4.89956E+17,WillBAnders#5226,2019-10-24,"So, in an more OO language I would have something like `T is Comparable` and things could handle it through that. Would it be necessary to pass in a comparator for things or is there any generic approach that would work?",,
2.66505E+17,notjack#9941,2019-10-24,"There's generic interfaces, but it might be easier to just pass in a comparator whenever a range is constructed",,
2.66505E+17,notjack#9941,2019-10-24,"Can always make it a keyword argument, then in the future if we did make a generic interfaces, the keyword argument could be made optional",,
4.89956E+17,WillBAnders#5226,2019-10-24,^^,,
4.89956E+17,WillBAnders#5226,2019-10-24,"Did some thinking, a custom comparator there makes a lot of sense.",,
2.66505E+17,notjack#9941,2019-10-25,Union and intersection operations on ranges would also be nice,,
2.66505E+17,notjack#9941,2019-10-25,Would have to make sure the comparators of the ranges are `equal?` to each other,,
2.66505E+17,notjack#9941,2019-10-25,"""Union"" wouldn't be the right name though",,
4.89956E+17,WillBAnders#5226,2019-10-25,"So, it depends on what's needed by that. If it's something like `[0, 4)` and `[8, 9)` goes to `[0, 9)`, then I can see that as being called union but I agree it doesn't seem right mathematically. If it's some type of combination of ranges, I've been calling those conjoined ranges - ranges which are made up of more than one set of endpoints.",,
2.66505E+17,notjack#9941,2019-10-25,"I was thinking of the first thing. Guava calls that the ""span"" of two ranges, which seems like a decent enough name for it",,
4.89956E+17,WillBAnders#5226,2019-10-25,"Span seems to be mathematically correct.
```For any set X of real numbers, the interval enclosure or interval span of X is the unique interval that contains X and does not properly contain any other interval that also contains X.```",,
2.66505E+17,notjack#9941,2019-10-26,voil√†!,https://cdn.discordapp.com/attachments/618895179343986688/637522354024480768/Screen_Shot_2019-10-25_at_10.24.06_PM.png,
1.93202E+17,rocketnia#4517,2019-10-26,"I wasn't sure at first if it removed consecutive duplicates (Helo world!) or all duplicates, but the example made it clear. :)",,
2.66505E+17,notjack#9941,2019-10-26,Yay examples! üôÇ,,
4.89956E+17,WillBAnders#5226,2019-10-26,That's really cool xD,,
2.66505E+17,notjack#9941,2019-10-26,why thank you :3,,
2.66505E+17,notjack#9941,2019-10-26,"once they finish rendering in a minute or two, I'll show docs for the `deduplicating-consecutive` transducer I just made",,
2.66505E+17,notjack#9941,2019-10-26,huzzah!,https://cdn.discordapp.com/attachments/618895179343986688/637529306830077972/Screen_Shot_2019-10-25_at_10.53.29_PM.png,
1.93202E+17,rocketnia#4517,2019-10-26,typo: provied,,
2.66505E+17,notjack#9941,2019-10-26,D:,,
2.66505E+17,notjack#9941,2019-10-26,"fixed, thank you üôÇ",,
1.93202E+17,rocketnia#4517,2019-10-26,"anyway, this is awesome, lol :)",,
2.66505E+17,notjack#9941,2019-10-26,yeah I'm super happy with this,,
2.66505E+17,notjack#9941,2019-10-26,I don't think I've ever come across a stream processing library that felt this pleasant and powerful,,
4.56227E+17,Deleted User#0000,2019-10-26,Impressive!,,
2.66505E+17,notjack#9941,2019-10-26,Does this code seem readable?,https://cdn.discordapp.com/attachments/618895179343986688/637789126174703616/Screen_Shot_2019-10-26_at_4.05.24_PM.png,
4.66395E+17,oaktownsam#0815,2019-10-26,It is for me üòÑ,,üëç (1)
4.56227E+17,Deleted User#0000,2019-10-28,It reminds me of CL's LINQ-like `loop` macro DSL.,,
2.66505E+17,notjack#9941,2019-10-28,"@Deleted User I know of LINQ, but haven't heard of the common lisp version. What's it like?",,
4.56227E+17,Deleted User#0000,2019-10-28,"CL's `loop` macro has its own unsexpy DSL. It seems like it's an iterative looping construct from a cursory look but it's actually a full-blown query language reminiscent of SQL. But I'm a functional person and at the end of the day, I just prefer writing my own predicate for a fold. üò∏",,
4.56227E+17,Deleted User#0000,2019-10-28,http://www.gigamonkeys.com/book/loop-for-black-belts.html http://www.unixuser.org/~euske/doc/cl/loop.html,,
4.56227E+17,Deleted User#0000,2019-10-28,"There's also `iterate`, which is sexpier and imho more powerful (and resembles `transduce` more). https://common-lisp.net/~loliveira/tmp/iterate-manual/iterate.html",,
4.56227E+17,Deleted User#0000,2019-10-28,"The `loop` instance ```Lisp
(loop with max-elt = nil
      with max-key = 0
      for elt in list-of-lists
      for key = (length elt) do
      (when (> key max-key)
        (setq max-elt elt
              max-key key))
      finally (return max-elt))```can be rewritten in `iter` as```Lisp
(iter outer (for i below (array-dimension ar 0))
            (iter (for j below (array-dimension ar 1))
                  (in outer (collect (aref ar i j)))))```or in `iterate` as```Lisp
(iterate (for elt in list-of-lists)
         (finding elt maximizing (length elt)))```",,
4.56227E+17,Deleted User#0000,2019-10-28,"(finds the longest list in a list of lists, a task `loop` isn't really suitable for)",,
2.66505E+17,notjack#9941,2019-10-28,"Huh, what's the difference between `iter` and `iterate`?",,
2.66505E+17,notjack#9941,2019-10-28,"Also if I understand your examples correctly, then I think the `transduce` equivalent is this:

```
(transduce list-of-lists #:into (into-max #:key length))
```",,
4.56227E+17,Deleted User#0000,2019-10-28,Honestly I don't exactly remember.,,
4.56227E+17,Deleted User#0000,2019-10-28,Haven't used CL in ages.,,
4.56227E+17,Deleted User#0000,2019-10-28,But I find `transduce` to be much more elegant based on what I've seen.,,
4.66395E+17,oaktownsam#0815,2019-10-29,The CL ones are pretty scary macros,,
2.66505E+17,notjack#9941,2019-10-29,`transduce` is an ordinary function :),,
4.56227E+17,Deleted User#0000,2019-10-29,"Yeah, I think writing a set of routines instead of a single macro helps make it more flexible.",,
4.56227E+17,Deleted User#0000,2019-10-29,You can make your own transducers and attach them instead of having to reverse engineer the macro.,,
4.56227E+17,Deleted User#0000,2019-10-29,Or make your own alternative `transduce` procedure and use existing transducers with it.,,
4.56227E+17,Deleted User#0000,2019-10-29,Hmm,,
4.56227E+17,Deleted User#0000,2019-10-29,I'm trying to read a file lazily but I want to skip the first line (since it's a description line that doesn't fit the format.,,
4.56227E+17,Deleted User#0000,2019-10-29,"```Racket
(define (parse-notes path)
  (call-with-input-file path
    (Œª (port)
     (for/list ((line (stream-rest (sequence->stream (in-lines port 'linefeed)))))
       (string-split line ""\t"")))))
```
I ended up with this kludgy solution but I don't quite like it.",,
2.66505E+17,notjack#9941,2019-10-29,"That won't read it lazily because you're building up a list eagerly using `for/list`, is that what you intended?",,
4.56227E+17,Deleted User#0000,2019-10-29,Ah hm you're right,,
2.66505E+17,notjack#9941,2019-10-29,how big is the file?,,
4.56227E+17,Deleted User#0000,2019-10-29,The files are only 42 MiB in total.,,
4.56227E+17,Deleted User#0000,2019-10-29,Each individual file is about 50 KiB.,,
2.66505E+17,notjack#9941,2019-10-29,"ah, I wouldn't bother with reading a single file lazily then",,
2.66505E+17,notjack#9941,2019-10-29,just avoid reading _all_ of them into memory at once,,
4.56227E+17,Deleted User#0000,2019-10-29,What do you suggest?,,
4.56227E+17,Deleted User#0000,2019-10-29,"Here's the code, for reference https://clbin.com/diUmY",,
2.66505E+17,notjack#9941,2019-10-29,I think the code you've got there seems fine. I don't know of a way to do `stream-rest` on sequences without making them streams first.,,
2.66505E+17,notjack#9941,2019-10-29,"For fun I transducerized it:

```
(require rebellion/collection/list
         rebellion/streaming/transducer)

(define (parse-notes path)
  (call-with-input-file path
    (Œª (port)
      (transduce (in-lines port 'linefeed)
                 (dropping 1)
                 (mapping (Œª (line) (string-split line ""\t"")))
                 #:into into-list))))
```",,
4.56227E+17,Deleted User#0000,2019-10-29,Haha,,
4.56227E+17,Deleted User#0000,2019-10-29,How does that perform?,,
2.66505E+17,notjack#9941,2019-10-29,"Probably not super great, but you're doing IO anyway so it probably doesn't matter.",,
4.56227E+17,Deleted User#0000,2019-10-29,Yeah,,
4.56227E+17,Deleted User#0000,2019-10-29,Trying to read 2200 files of sheet music.,,
2.66505E+17,notjack#9941,2019-10-29,Oh boy,,
2.66505E+17,notjack#9941,2019-10-29,"ah, so these are like csv files but they use tabs instead of commas as the separator?",,
4.56227E+17,Deleted User#0000,2019-10-29,"Yeah, it's a proprietary format used by a certain program.",,
4.56227E+17,Deleted User#0000,2019-10-29,Example file: https://github.com/MTG/SymbTr/blob/master/txt/acemasiran--beste--devrikebir--ber_kusa-yi--basmaci_abdi_efendi.txt,,
2.66505E+17,notjack#9941,2019-10-29,"each file is a song, and each row is a note in the song, and details about the song are stored in the filename?",,
4.56227E+17,Deleted User#0000,2019-10-29,Yup,,
4.56227E+17,Deleted User#0000,2019-10-29,I'll work on a single file for the time being. I want to convert the data to an easy-to-parse internal format.,,
4.56227E+17,Deleted User#0000,2019-10-29,Okay I identified the bottleneck: `string-split`,,
2.66505E+17,notjack#9941,2019-10-29,"huh, really? odd",,
4.56227E+17,Deleted User#0000,2019-10-29,"Yeah, it finishes under five seconds if I replace `(string-split line ""\t"")` with just `line`.",,
4.56227E+17,Deleted User#0000,2019-10-29,"Otherwise, it climbs to 1,2 GiB memory use before I kill it.",,
2.66505E+17,notjack#9941,2019-10-29,O_O,,
2.66505E+17,notjack#9941,2019-10-29,that's definitely odd,,
4.56227E+17,Deleted User#0000,2019-10-29,err,,
4.56227E+17,Deleted User#0000,2019-10-29,There we go.,,
4.56227E+17,Deleted User#0000,2019-10-29,I'm inclined to think it's because it converts strings into lists of strings and the added overhead adds up.,,
2.66505E+17,notjack#9941,2019-10-29,for one file?,,
4.56227E+17,Deleted User#0000,2019-10-29,2200 of them :-P,,
2.66505E+17,notjack#9941,2019-10-29,ah :p,,
2.66505E+17,notjack#9941,2019-10-29,here's an attempt: https://gist.github.com/jackfirth/4acefdd03c51d2a22768f24ec9caead2,,
4.56227E+17,Deleted User#0000,2019-10-29,"Ah, reads much cleaner too.",,
4.56227E+17,Deleted User#0000,2019-10-29,Let me see.,,
2.66505E+17,notjack#9941,2019-10-29,updated with a second attempt,,
2.66505E+17,notjack#9941,2019-10-29,now it parses the strings into numbers for each row which should actually save a ton of memory,,
2.66505E+17,notjack#9941,2019-10-29,(because they're `fixnum?` sized),,
4.56227E+17,Deleted User#0000,2019-10-29,Lemme try it.,,
4.56227E+17,Deleted User#0000,2019-10-29,"@notjack Why records instead of structs, by the way?",,
2.66505E+17,notjack#9941,2019-10-29,"Keyword arguments, and when printed they include the field names",,
4.56227E+17,Deleted User#0000,2019-10-29,Oh neat,,
4.56227E+17,Deleted User#0000,2019-10-29,"I was thinking ""this doesn't look like RnRS records""",,
2.66505E+17,notjack#9941,2019-10-29,Example:,https://cdn.discordapp.com/attachments/618895179343986688/638676278995583006/Screen_Shot_2019-10-29_at_2.51.18_AM.png,
4.56227E+17,Deleted User#0000,2019-10-29,It's happily chugging along under 400 MiB so far.,,üéâ (1)
4.56227E+17,Deleted User#0000,2019-10-29,uh oh,,
2.66505E+17,notjack#9941,2019-10-29,uh oh? üòÆ,,
4.56227E+17,Deleted User#0000,2019-10-29,900 MiB and climbing,,
2.66505E+17,notjack#9941,2019-10-29,got any way to tell how far along it is?,,
4.56227E+17,Deleted User#0000,2019-10-29,"In retrospect, I should've had it print the name of the file being parsed.",,
4.56227E+17,Deleted User#0000,2019-10-29,1600 MiB,,
4.56227E+17,Deleted User#0000,2019-10-29,wait what,,
4.56227E+17,Deleted User#0000,2019-10-29,`time` function returned but the program didn't end.,,
4.56227E+17,Deleted User#0000,2019-10-29,```cpu time: 272285 real time: 273928 gc time: 4578```,,
2.66505E+17,notjack#9941,2019-10-29,is it trying to print out the collection of songs or something?,,
4.56227E+17,Deleted User#0000,2019-10-29,I think so.,,
4.56227E+17,Deleted User#0000,2019-10-29,But there's nothing else on stdout.,,
2.66505E+17,notjack#9941,2019-10-29,Huh,,
2.66505E+17,notjack#9941,2019-10-29,I updated the gist to include code to print out each filename before reading it,,
4.56227E+17,Deleted User#0000,2019-10-29,"Ten minutes in: 2,5 GiB memory being used",,
2.66505E+17,notjack#9941,2019-10-29,yikes,,
2.66505E+17,notjack#9941,2019-10-29,"unrelated, I probably ought to add this to the transducer library:

```
(define (peeking peek-function)
  (mapping (Œª (element) (peek-function element) element)))
```",,
2.66505E+17,notjack#9941,2019-10-29,"super useful, lets me stick `(peeking displayln)` into the transducer chain",,
4.56227E+17,Deleted User#0000,2019-10-29,Ooh nice,,
4.56227E+17,Deleted User#0000,2019-10-29,What could be taking up so much memory here though?,,
4.56227E+17,Deleted User#0000,2019-10-29,There are exactly 886390 lines in total.,,
4.56227E+17,Deleted User#0000,2019-10-29,16 minutes in: 3 GiB,,
4.56227E+17,Deleted User#0000,2019-10-29,I shoulda run it with `raco profile`,,
2.66505E+17,notjack#9941,2019-10-29,"each line becomes a struct, and thus a GC-managed object on the heap",,
2.66505E+17,notjack#9941,2019-10-29,a million structs shouldn't take up a gigabyte though,,
2.66505E+17,notjack#9941,2019-10-29,"do you really need to have them all in memory anyway though? you could write them into a sqlite database instead, which would be way easier to query efficiently from within racket",,
4.56227E+17,Deleted User#0000,2019-10-29,That's a good idea.,,
2.66505E+17,notjack#9941,2019-10-29,The `transduce` approach would let you stream from the files into the database without building up an in-memory collection,,
2.66505E+17,notjack#9941,2019-10-29,I recommend using the `sql` package to talk to the database https://docs.racket-lang.org/sql/index.html,,
4.56227E+17,Deleted User#0000,2019-10-29,I rererewrote it in plain Racket and it finishes in 22 seconds now.,,
4.56227E+17,Deleted User#0000,2019-10-29,ü§ï,,
4.56227E+17,Deleted User#0000,2019-10-29,I have no idea why.,,
4.56227E+17,Deleted User#0000,2019-10-29,https://clbin.com/4twXH,,
4.56227E+17,Deleted User#0000,2019-10-29,"@notjack Thanks a lot for the help, by the way!",,
4.66395E+17,oaktownsam#0815,2019-10-29,re: `peeking` a SRFI for transducers was just published (https://srfi.schemers.org/srfi-171/srfi-171.html) .  They call `peeking` `tlog`,,
4.66395E+17,oaktownsam#0815,2019-10-29,There are few differences between Rebellion transducers and the SRFI ones.,,
2.66505E+17,notjack#9941,2019-10-29,"@oaktownsam I was just looking at that the other day, super neat stuff",,
2.66505E+17,notjack#9941,2019-10-29,Also what a coincidence,,
4.66395E+17,oaktownsam#0815,2019-10-29,Such a scheme thing where there isn't an iterator/sequence interface so there needs to be a separate transduce function for every container type.,,
2.66505E+17,notjack#9941,2019-10-29,I've considered adding an internal `list-transduce` function and making `transduce` call it when the sequence argument is a list,,
2.66505E+17,notjack#9941,2019-10-29,As a possible performance boost,,
4.89956E+17,WillBAnders#5226,2019-10-29,Not having effective polymorphism is probably my largest issue. It sucks.,,
2.66505E+17,notjack#9941,2019-10-29,With scheme or with Racket?,,
4.89956E+17,WillBAnders#5226,2019-10-29,By far the largest reason I will never touch Go as well.,,
4.89956E+17,WillBAnders#5226,2019-10-29,"Never worked with scheme, likely true with Racket. There might be a way to do things but if so I don't know how.",,
4.89956E+17,WillBAnders#5226,2019-10-29,"Standard library design isn't easy, but it's the baseline for a whole lot of things.",,
4.89956E+17,WillBAnders#5226,2019-10-29,The fact that everything method name has to be prefixed with things to avoid conflicts and all kinds of other nonsense is a huge issue for me.,,
2.66505E+17,notjack#9941,2019-10-29,Racket would have far less of an issue here if the unprefixed names for collection operators were reserved for the generic sequence-accepting functions,,
2.66505E+17,notjack#9941,2019-10-29,"like, `map` only works on lists and it came first so we're stuck with that name for backwards compatibility and the generic function has to be called `sequence-map` üò¶",,
4.89956E+17,WillBAnders#5226,2019-10-29,"One of the main things is that functional programming tends to think of things as transforming data. Data flows in, gets transformed, and flows out. It's a simple model, but in practice this tends to force developers into a limited number of ways to represent data - if you don't match this structure exactly, then you aren't able to use a large number of operations.",,
2.66505E+17,notjack#9941,2019-10-29,hopefully transducers help there üòâ,,
4.89956E+17,WillBAnders#5226,2019-10-29,¬Ø\_(„ÉÑ)_/¬Ø,,
4.89956E+17,WillBAnders#5226,2019-10-29,"I've been told by people for a while that once you try functional you'll never go back; but I just don't see it. The most important thing to me is understanding what something is and what it can do, and that's what's types do for me - what it represents and the operations it supports. Add in polymorphic behavior to this, and it seems like you naturally end up with something that is object-oriented - or at least trait-like as in Rust.",,
4.89956E+17,WillBAnders#5226,2019-10-29,"Even then, not a fan of Rust's approach to defining traits. Gets to be a bit of a mess.",,
2.66505E+17,notjack#9941,2019-10-29,in all honesty the Java code I usually write at work is pretty dang functional,,
2.66505E+17,notjack#9941,2019-10-29,I think the divide between FP and OOP languages got a lot smaller once all the OOP languages started supporting lambdas,,
4.89956E+17,WillBAnders#5226,2019-10-29,Indeed. I use streams all the freaking time.,,
4.89956E+17,WillBAnders#5226,2019-10-29,Java really butchered themselves on that with checked exceptions though.,,
2.66505E+17,notjack#9941,2019-10-29,"eh, none of the code I write at work uses checked exceptions so it doesn't matter to me",,
2.66505E+17,notjack#9941,2019-10-29,"(we use async frameworks to do all IO so instead of a blocking method throwing a checked exception, it returns a `Future<T>` and the future could either succeed and produce a `T` or it could fail and throw an exception sometime later)",,
4.89956E+17,WillBAnders#5226,2019-10-29,Makes sense.,,
2.66505E+17,notjack#9941,2019-10-29,"Anyway, about Racket and generics: I think there should be aliases of all of the current list-processing functions like `map`, `filter`, `foldl`, etc. that are prefixed, with names like `list-map`, `list-filter`, and `list-foldl`. Then the original names should be documented as deprecated aliases of the prefixed names.",,
4.89956E+17,WillBAnders#5226,2019-10-29,"That just seems like a backwards solution to the problem though. In an object oriented language, I could simply have `x.map(...)` for anything. It might be polymorphic, it might not - no one cares.",,
2.66505E+17,notjack#9941,2019-10-29,"Yes. I want that too. But the prefixing is a necessary step towards that, to make it easier to migrate code.",,
4.89956E+17,WillBAnders#5226,2019-10-29,"It doesn't matter where the function comes from or what the data structure is, it just does it (for lack of a better term). It's a description of the operations it supports, not the type of data as well.",,
2.66505E+17,notjack#9941,2019-10-29,"In my ideal world, `map` would accept a sequence and return a sequence. But that _can't_ happen now, because it would break a lot of existing code. We could add a module like `racket/generic-sequence-processing` that exports `map`, `filter`, etc. as sequence-accepting and sequence-returning functions. But then if you have a module that uses the current list-accepting code, you need a way to _gradually_ migrate it to use the generic functions. Otherwise it will be too much work. So you need a process that's something like this:

1. Replace all uses of `map`, `filter`, etc. in the module with `list-map`, `list-filter`, etc. This shouldn't change any behavior at all and should be 100% safe, because the current `map`, `filter`, etc. functions only work on lists.

2. Add `(require racket/generic-stream-processing)` to the module. This should also be safe **provided you finished step 1**, since there shouldn't be any uses of `map`, `filter`, etc. left in the module.

3. Gradually change uses of `list-map`, `list-filter`, etc. to their generic equivalents, making sure changes in the return type don't cause any bugs (since now you're getting sequences back out of these functions, not lists).",,
2.66505E+17,notjack#9941,2019-10-29,"Steps 1 and 2 can be fully automated by a refactoring script, and step 3 can be done gradually so you don't have to do it all at once.",,
4.56227E+17,Deleted User#0000,2019-10-30,Why not make a new `#lang` for that?,,
1.93202E+17,rocketnia#4517,2019-10-30,"If `map` operates on some particular generic type, I would expect a type of ""functor containers"" which know which functor they belong to (and hence what the `map` behavior for that functor is). This could be more general than operating on streams.",,
2.66505E+17,notjack#9941,2019-10-30,"@Deleted User Because that's a more invasive demand on clients than asking them to require a new module. Multiple modules can be required at once, multiple langs can't.",,
2.66505E+17,notjack#9941,2019-10-30,"@rocketnia Racket doesn't have a generic functor interface, and designing one would be nontrivial. Racket does have a generic sequence interface already though. Incremental progress is good.",,
1.93202E+17,rocketnia#4517,2019-10-30,"Racket's `sequence-map` isn't a drop-in replacement for `map`:

```
> (map add1 (list 1 2 3))
'(2 3 4)
> (sequence-map add1 (list 1 2 3))
#<stream>
> (map displayln (list 1 2 3))
1
2
3
'(#<void> #<void> #<void>)
> (sequence-map displayln (list 1 2 3))
#<stream>
```",,
2.66505E+17,notjack#9941,2019-10-30,Yup,,
1.93202E+17,rocketnia#4517,2019-10-30,"I don't care much about the side effects, but I care that `map` returns the same kind of container I give it.",,
2.66505E+17,notjack#9941,2019-10-30,I think that would make more sense in a language / prelude that's already bought into the functor / applicative / monad hierarchy. Also making that work correctly with subtyping is hard.,,
2.66505E+17,notjack#9941,2019-10-30,"Hmmm, I could probably do a search over Google's Java code to get stats on how often a stream pipeline starts and ends with the same type of container. My gut feeling is that it doesn't happen often.",,
1.93202E+17,rocketnia#4517,2019-10-30,"I don't see much of a point to applicative, but I respect other people who do. I think it'd be good if people who implemented monads didn't have to care about applicatives; so I don't think it'd be a hierarchy up front.",,
1.93202E+17,rocketnia#4517,2019-10-30,"Most code that uses stream pipelines might as well use a non-generic `stream-map` operation, right? So I don't know what answers you could glean from that",,
1.93202E+17,rocketnia#4517,2019-10-30,"and anyway, why should streams be a driving concern of the design of `map`?",,
4.89956E+17,WillBAnders#5226,2019-10-30,"In my case, 99% of the time I use streams it goes to a list. 90% of those it starts out as a list.",,
2.66505E+17,notjack#9941,2019-10-30,"@rocketnia because ""generic map"" does not mean ""functor map"" to most Racketeers, it means ""sequence map"". A functor approach isn't inherently better.",,
2.66505E+17,notjack#9941,2019-10-30,@WillBAnders in Java or in Racket?,,
4.89956E+17,WillBAnders#5226,2019-10-30,Java.,,
4.89956E+17,WillBAnders#5226,2019-10-30,I really don't do a lot with racket actually.,,
2.66505E+17,notjack#9941,2019-10-30,"The Google codebase uses lists, sets, and multisets, so there's probably more variety. Lists likely dominate though.",,
2.66505E+17,notjack#9941,2019-10-30,@oaktownsam you wouldn't happen to have a use for a racket http2 client would you?,,
4.66395E+17,oaktownsam#0815,2019-10-30,"No, I'm still firmly in the HTTP/1.1 world",,
2.66505E+17,notjack#9941,2019-10-30,How's it going? :P,,
4.66395E+17,oaktownsam#0815,2019-10-30,It still works.,,
4.66395E+17,oaktownsam#0815,2019-10-30,:p,,
2.66505E+17,notjack#9941,2019-10-30,Very true,,
2.66505E+17,notjack#9941,2019-10-31,peeking!,https://cdn.discordapp.com/attachments/618895179343986688/639314464440582144/Screen_Shot_2019-10-30_at_9.07.00_PM.png,üëÄ (3)
4.66395E+17,oaktownsam#0815,2019-11-02,Game Jam has started! https://itch.io/jam/racket-2019-gamejam,,
4.62028E+17,StephenD#5938,2019-11-02,"@notjack @Deleted User `Multiple modules can be required at once, multiple langs can't.` There is a tiny exception to that which I don't think addresses your needs but is awesome anyway; 
```
#lang at-exp racket/base
```
*The body of a #lang shorthand has no specific syntax, because the syntax is determined by the language name that follows #lang.* - https://docs.racket-lang.org/guide/Module_Syntax.html#%28part._hash-lang%29


If you've not seen it check out  http://www.greghendershott.com/2015/08/at-expressions.html for",,
4.89956E+17,WillBAnders#5226,2019-11-03,Honestly I'm so proud that I remembered all the syntax class stuff for macros. Someday I won't have to google it though xD,,
4.89956E+17,WillBAnders#5226,2019-11-03,@notjack for when you're next around. Will try to create the PR tomorrow for basic creation + contains.,https://cdn.discordapp.com/attachments/618895179343986688/640495042670231580/unknown.png,
4.89956E+17,WillBAnders#5226,2019-11-03,gotta love macros xD,,
4.89956E+17,WillBAnders#5226,2019-11-03,ü§î,https://cdn.discordapp.com/attachments/618895179343986688/640612108291145760/unknown.png,
4.89956E+17,WillBAnders#5226,2019-11-03,"Alrighty, there we go. https://github.com/jackfirth/rebellion/pull/333",,
2.66505E+17,notjack#9941,2019-11-05,@WillBAnders Great job üòÑ Was busy all weekend but I got a chance to review it tonight,,
4.89956E+17,WillBAnders#5226,2019-11-05,"Appreciate the overview! Comparators are definitely on my mind but forgot to include it there. The macro does include a form that specifies all bound values and inclusivity: `(range [0 #t] [10 #f])` - this can be used if the type of endpoint is unknown.

Beyond that, I'll look at the rest later - probably won't make a comment response until I can mess around with things first. Night!",,
2.66505E+17,notjack#9941,2019-11-05,night! üëã,,
2.66505E+17,notjack#9941,2019-11-06,"Going to try and work on this super neat transducer tonight. It's called `materializing`, and it shows you the behavior of some other transducer:
```racket
> (transduce (in-naturals) (materializing (taking 3)) #:into into-list)
(list
  #<start-event>
  (consume-event 0)
  (emit-event 0)
  (consume-event 1)
  (emit-event 1)
  (consume-event 2)
  #<half-close-event>
  (half-closed-emit-event 2)
  #<finish-event>)
```",,
4.89956E+17,WillBAnders#5226,2019-11-06,the frick xD,,
2.66505E+17,notjack#9941,2019-11-06,Explanation here üòâ https://github.com/jackfirth/rebellion/issues/339,,
4.66395E+17,oaktownsam#0815,2019-11-06,Nice.,,
4.56227E+17,Deleted User#0000,2019-11-07,oh god I'm cooking up some spicy spaghetti,,
4.56227E+17,Deleted User#0000,2019-11-07,"Fact: Each note contains an offset value (in seconds), as distance from the first note.
Problem: I need a tone length to create a note.",,
4.56227E+17,Deleted User#0000,2019-11-07,"Wait no, this code is further broken because it simply doesn't work: I need to subtract the next offset from the current one. ü§î",,
4.56227E+17,Deleted User#0000,2019-11-07,Back to the drawing board,,
4.56227E+17,Deleted User#0000,2019-11-07,Also I need to multiply the velocity by 0.009 instead of 0.01 because `rsound` doesn't care about piano/forte values.,,
2.66505E+17,notjack#9941,2019-11-07,@Deleted User whatcha working on?,,
4.56227E+17,Deleted User#0000,2019-11-07,The same music parser stuff.,,
4.56227E+17,Deleted User#0000,2019-11-07,I'm parsing the same tab-separated file again. One of the fields indicates an offset from zero (ie this field is always zero in the first line) instead of a duration.,,
4.56227E+17,Deleted User#0000,2019-11-07,"I need a duration though, which would be ""offset of next line - offset of this line""",,
4.56227E+17,Deleted User#0000,2019-11-07,"To generalise the problem:
```
foo	bar	baz	0.0
quux	blam	bob	3.0
splat	bang	fred	5.0
```
becomes
```
{foo, bar, baz, 3.0}
{quux, blam, bob, 2.0}
{splat, bang, fred, [some fixed value]}
```",,
2.66505E+17,notjack#9941,2019-11-07,"Ah, I see what you mean. Tricky.",,
2.66505E+17,notjack#9941,2019-11-07,Where do you get that last fixed value from?,,
4.56227E+17,Deleted User#0000,2019-11-07,Can be provided externally.,,
4.56227E+17,Deleted User#0000,2019-11-07,"The format doesn't mention any form of note length besides the time offset, so I assume the last note just lingers a bit and fades away.",,
2.66505E+17,notjack#9941,2019-11-07,it's _ambiguous_?? üò±,,
4.56227E+17,Deleted User#0000,2019-11-07,I'll reread the description paper tomorrow.,,
4.56227E+17,Deleted User#0000,2019-11-07,:meow:,,
4.66395E+17,oaktownsam#0815,2019-11-07,"Using slightly different from ""normal"" models of music are interesting for making generative art.",,
2.66505E+17,notjack#9941,2019-11-07,"Totally unrelated, but this is super cool to me:",https://cdn.discordapp.com/attachments/618895179343986688/642211896963104768/Screen_Shot_2019-11-07_at_7.58.17_PM.png,
4.66395E+17,oaktownsam#0815,2019-11-07,Great excuse to use the word reification.,,
2.66505E+17,notjack#9941,2019-11-07,maybe `transducer-reify`?,,
4.66395E+17,oaktownsam#0815,2019-11-07,`reifying`,,
4.66395E+17,oaktownsam#0815,2019-11-07,or I guess `transducer-reify` could be sugar around `(transducer ... (materializing ...) #:into into-list)`,,
4.66395E+17,oaktownsam#0815,2019-11-07,I didn't fully think the second part there through,,
2.66505E+17,notjack#9941,2019-11-07,"I dislike that it's kind of hard to just guess what the word ""reify"" means, whereas with ""materialize"" I can sort of guess even if I've never seen the word before. What do you think?",,
1.93202E+17,rocketnia#4517,2019-11-07,"my first guess for what ""reify"" means in a programming context is ""preserve across a compilation step, usually involving serializing a value or type into in the compiled result""",,
1.93202E+17,rocketnia#4517,2019-11-07,"""materialize"" means very little to me in a programming context",,
2.66505E+17,notjack#9941,2019-11-07,"I mean I can guess what they mean in an english context where I've never seen the word before at all, not just in a programmer context where I've seen the word but not seen it used in code",,
4.66395E+17,oaktownsam#0815,2019-11-07,Reify is a word that is used heavily in PL and probably is best avoided.  It's about equivalent to materialize.,,üëç (1)
2.66505E+17,notjack#9941,2019-11-07,"Maybe just `transducer-observe-events` would be better, honestly",,
2.66505E+17,notjack#9941,2019-11-07,Or `observing-transduction-events`,,
1.93202E+17,rocketnia#4517,2019-11-07,"I was thinking of saying this was about logging input dependencies, or ""bugging"" the input, or maybe using the input as a bait car, so to speak... which I guess is what unit test spies are",,
1.93202E+17,rocketnia#4517,2019-11-07,"so `bugging`, `baiting`, `spying`...",,
1.93202E+17,rocketnia#4517,2019-11-07,but I like that you picked `materializing` with reference to RxJava too,,
2.66505E+17,notjack#9941,2019-11-07,"I think if rxjava didn't set the precedent, I wouldn't have picked it. And even then I'm on the fence",,
2.66505E+17,notjack#9941,2019-11-07,"The name requires an explanation, which isn't a great quality in a name",,
1.93202E+17,rocketnia#4517,2019-11-07,there wouldn't be a really good `dematerializing` synonym if you started with `bugging` :-p,,
1.93202E+17,rocketnia#4517,2019-11-07,`debugging`,,üòâ (1)
4.66395E+17,oaktownsam#0815,2019-11-07,Not familiar with RxJava but it reminded me of traces from a Mocked class in a way.,,
2.66505E+17,notjack#9941,2019-11-07,`tracing-transduction-events`?,,
2.66505E+17,notjack#9941,2019-11-07,hmm,,
1.93202E+17,rocketnia#4517,2019-11-07,`logging-reads`?,,
2.66505E+17,notjack#9941,2019-11-07,"""logging"" I want to stay away from because it implies actual racket loggers are involved somehow",,
2.66505E+17,notjack#9941,2019-11-07,"or something logger-like, with severity levels and human-readable messages and whatnot",,
2.66505E+17,notjack#9941,2019-11-07,I like `observing-transduction-events` the most out of these,,
2.66505E+17,notjack#9941,2019-11-07,follow up question: `observing-transduction-events` or just `observing-events`?,,
1.93202E+17,rocketnia#4517,2019-11-08,"""observing"" and ""events"" make me think of the observer pattern",,
2.66505E+17,notjack#9941,2019-11-08,"yeah, it doesn't sound super related to transducers",,
1.0336E+17,seek+#9484,2019-11-08,"Hey, I'm a pretty heavy user of BiwaScheme for Scheme -> Javascript conversion. Does anyone know off-hand how RacketScript and Urlang compare feature-wise?",,
4.62028E+17,StephenD#5938,2019-11-08,I only know the package descriptions; racketscript is  Racket on JavaScript and urlang is JavaScript with scheme syntax,,
4.62028E+17,StephenD#5938,2019-11-08,I‚Äôm probably over simplifying,,
4.62028E+17,StephenD#5938,2019-11-08,https://dustycloud.org/blog/terminal-phase-prototype/,,
1.0336E+17,seek+#9484,2019-11-08,Oh I see. I guess I'll just have to try them. I think BiwaScheme is more like Urlang in that case,,
1.0336E+17,seek+#9484,2019-11-08,I just finished writing a wrapper for the PlayCanvas 3D engine last week for BiwaScheme and it's been going amazing,,
1.0336E+17,seek+#9484,2019-11-08,"I'd like to submit something to the gamejam though, so maybe I'll try writing a wrapper for Urlang or RacketScript",,üëç (2)
4.89956E+17,WillBAnders#5226,2019-11-08,What's Urlang?,,
4.66395E+17,oaktownsam#0815,2019-11-08,https://github.com/soegaard/urlang,,
4.89956E+17,WillBAnders#5226,2019-11-08,Eh. Really don't like the name there. Thought it was something related to Erlang.,,
4.66395E+17,oaktownsam#0815,2019-11-08,That was my first thought when it was first published.,,
4.66395E+17,oaktownsam#0815,2019-11-08,If you like Erlang Marc Feeley built an Erlang -> Gambit Scheme compiler,,
4.66395E+17,oaktownsam#0815,2019-11-08,https://www.researchgate.net/publication/2593118_Etos_an_Erlang_to_Scheme_compiler,,
4.89956E+17,WillBAnders#5226,2019-11-09,"@notjack Want to get your opinion on comparators. How feasible is it to handle defaults? In a lot of cases ranges are just numbers, and while we definitely want to support other times having to specify a comparator for that isn't too ideal.",,
2.66505E+17,notjack#9941,2019-11-09,"Like, defaulting to the `real<=>` comparator? That sounds fine to me",,
4.89956E+17,WillBAnders#5226,2019-11-09,Basically yeah. Theoretically in the future we might be able to get a bit more clever.,,
2.66505E+17,notjack#9941,2019-11-09,"That's what `into-max`, `into-min`, and `sorting` do too, so there's good precedent",,
4.89956E+17,WillBAnders#5226,2019-11-09,"This is something where I see OO being unparalleled with. I don't want to specify a comparator for everything. I don't want to rope myself in to all kinds of different implementations and such. I just want basic polymorphism, especially with a standard library.",,
2.66505E+17,notjack#9941,2019-11-09,Typeclasses would also solve that,,
4.89956E+17,WillBAnders#5226,2019-11-09,A fair number of things would - any polymorphism by definition. But I much prefer the OO approach.,,
4.66395E+17,oaktownsam#0815,2019-11-09,"Sending this here to get some feedback.

How about this as the next Racket Community Event:

https://gist.github.com/samdphillips/47ea14d6eb75f93e64ad20dfd1bee8dc",,üëç (1)
4.66395E+17,oaktownsam#0815,2019-11-09,‚¨Ü : @StephenD @notjack ‚¨Ü,,
2.66505E+17,notjack#9941,2019-11-09,"Ou, I like that",,
2.66505E+17,notjack#9941,2019-11-09,advent of code puzzles are usually pretty stream-y,,
2.66505E+17,notjack#9941,2019-11-09,would be a good way to get transducer use cases,,
4.66395E+17,oaktownsam#0815,2019-11-09,Yeah.  I'm thinking of how Stephen has started a chain of monthly community events and doing this seem like a no brainer.  We just need to get word out in advance so folks know.,,‚ù§ (2)
4.62028E+17,StephenD#5938,2019-11-10,@oaktownsam brilliant !,,
4.62028E+17,StephenD#5938,2019-11-10,@oaktownsam  the  Racket leaderboard for advent of code is a great idea,,
4.62028E+17,StephenD#5938,2019-11-10,There were also a bunch of suggestions for future events,,
4.66395E+17,oaktownsam#0815,2019-11-10,Yeah it seems good to have some monthly events that keep the Racket community charged.,,
4.62028E+17,StephenD#5938,2019-11-10,I also have some specifically LOP themed ideas,,
4.66395E+17,oaktownsam#0815,2019-11-10,"I see these as: 1. Get users to make a jump and try Racket, 2. Excite existing users",,"üëç (1),üíØ (1),üëå (1)"
4.62028E+17,StephenD#5938,2019-11-10,"Possible schedule
Jan: text adventure! - based on https://m-cacm.acm.org/magazines/2012/1/144809-creating-languages-in-racket/fulltext
Feb: DrRacket quickscripts scripting comp 
Mar: RPG/roguelike
Apr: simulations (conways life,big-bang/universe etc)
May: solvers with Rosette (maybe in a game context)
June: little language comp
July: music! 

Nothing set in stone - I‚Äôm not overly committed to any of these. It‚Äôs just brainstorming.",,
4.66395E+17,oaktownsam#0815,2019-11-10,This is good,,
4.66395E+17,oaktownsam#0815,2019-11-10,Planning is sometimes annoying but necessary,,
4.62028E+17,StephenD#5938,2019-11-10,Picture comp in August üêü,,
4.62028E+17,StephenD#5938,2019-11-10,Important to keep as lightweight as possible so you don‚Äôt burn out,,
4.62028E+17,StephenD#5938,2019-11-10,And not get upset if something doesn‚Äôt work - you never know how a community will react,,
4.62028E+17,StephenD#5938,2019-11-10,Just move on to the next one,,üíñ (1)
4.62028E+17,StephenD#5938,2019-11-11,@oaktownsam suggestion: announce the racket leaderboard for Advent of code in the next week I‚Äôll tweet/post on Reddit,,
4.66395E+17,oaktownsam#0815,2019-11-11,üëç,,
2.66505E+17,notjack#9941,2019-11-11,I'm still waiting on Thanksgiving vacation so I can start the game jam :p,,
4.56227E+17,Deleted User#0000,2019-11-12,Is there a higher-order function that traverses through a list but operates in pairs?,,
4.56227E+17,Deleted User#0000,2019-11-12,Like `(foo f '(a b c d e))` ‚Üí `(list (f a b) (f b c) (f c d) (f d e))`,,
2.66505E+17,notjack#9941,2019-11-12,"there isn't one built-in, but you can do it relatively easily with for comprehensions",,
2.66505E+17,notjack#9941,2019-11-12,"```
(for/list ([x (in-list lst)]
           [y (in-list (rest lst))])
  (f x y))
```",,
4.56227E+17,Deleted User#0000,2019-11-12,"Ah, I didn't think of using `for`.",,
4.56227E+17,Deleted User#0000,2019-11-12,I was going through SRFI-1 to find something close.,,
4.56227E+17,Deleted User#0000,2019-11-12,Thanks!,,
4.66395E+17,oaktownsam#0815,2019-11-12,"""work""",https://cdn.discordapp.com/attachments/618895179343986688/644006257576902667/Screen_Shot_2019-11-12_at_6.50.30_PM.png,
2.66505E+17,notjack#9941,2019-11-13,whatcha makin?,,
4.66395E+17,oaktownsam#0815,2019-11-13,HUD type monitoring thing,,
4.66395E+17,oaktownsam#0815,2019-11-13,"I actually already did this once as a console app, but it's pretty messy.  This time trying to do it ""right""",,
4.66395E+17,oaktownsam#0815,2019-11-13,"The main monitoring routine is like a stateful World program.  It get's a bunch of things.  Then updates them periodically.  Each one has a rendering routine, and there is a routine to merge all of the renders.

```
(run-hud 
    (-> (Sequence T)) 
    #:update! (-> T any) 
    #:draw (-> T pict?) 
    #:layout (-> pict? ... pict?))
```",,
4.66395E+17,oaktownsam#0815,2019-11-13,"The particular one above is just rendering plots with a random lines.  It adds a new random point every 2 seconds, and keeps 2 minutes of data.",,
4.66395E+17,oaktownsam#0815,2019-11-13,"It is not quite 200 LOC  (including a lot of scaffolding that I need to move out of the core), which is very satisfying.",,
2.66505E+17,notjack#9941,2019-11-13,That is super cool,,
2.66505E+17,notjack#9941,2019-11-13,any way to see it in action as an animated gif or something?,,
2.66505E+17,notjack#9941,2019-11-13,"Also, today I wrote some code for analyzing the scribble cross reference index and I was _very_ pleased with transducer performance. Even though I was doing expensive things like sorting, because I was aggregating, filtering, and summarizing the data the lazy and one-pass nature of the `transduce` pipelines I wrote actually made the stream processing pretty fast. Much faster than it takes to just load the index with `load-collections-xref`.",,
2.66505E+17,notjack#9941,2019-11-13,some code:,https://cdn.discordapp.com/attachments/618895179343986688/644067602678808586/unknown.png,
4.66395E+17,oaktownsam#0815,2019-11-13,I forgot I have licecap on this computer.,,
4.66395E+17,oaktownsam#0815,2019-11-13,,https://cdn.discordapp.com/attachments/618895179343986688/644069236712407040/hud2_capture.gif,
2.66505E+17,notjack#9941,2019-11-13,I love it,,
4.66395E+17,oaktownsam#0815,2019-11-13,"Initially it was going to look more modernish, but then I started set the font to a monospaced font and realized this is how it should look.",,
2.66505E+17,notjack#9941,2019-11-13,"@oaktownsam Unrelated, just had a neat transducers idea: https://github.com/jackfirth/rebellion/issues/347",,
2.66505E+17,notjack#9941,2019-11-13,whatcha think?,,
4.66395E+17,oaktownsam#0815,2019-11-13,Yes.  This is good.,,
2.66505E+17,notjack#9941,2019-11-13,Got a use case in mind?,,
4.66395E+17,oaktownsam#0815,2019-11-13,Not quite yet.,,
2.66505E+17,notjack#9941,2019-11-13,I'm putting together a list of all the list-processing functions in Racket's standard library because I want to work towards getting `rebellion/streaming` to feature parity with it,,
2.66505E+17,notjack#9941,2019-11-13,and I came up with the idea for `forking` as a way to implement stuff like `split-at` and `partition`,,
2.66505E+17,notjack#9941,2019-11-13,"Hypothetical `splitting-at` transducer:

```
(define (splitting-at position before-transducer after-transducer)
  (define (before? e) (< (enumerated-position e) position))
  (transducer-pipe enumerating
              (tagging-by-predicate #:before before? #:after (negate before?))
              (forking #:before before-transducer #:after after-transducer)
              (mapping variant-value)))
```

Example:

```
> (transduce (in-range 0 100)
             (splitting-at 50 (taking 5) (taking 3))
             #:into into-list)
(list 0 1 2 3 4 50 51 52)
```",,
2.66505E+17,notjack#9941,2019-11-13,"Huh, that is some wacky formatting and I have no idea why discord is doing that",,
4.62028E+17,StephenD#5938,2019-11-13,Hey is anyone working on gamejam,,
4.62028E+17,StephenD#5938,2019-11-13,"@notjack I asked on rustlang discord and they said 
> `ctrl+r` to reload, they seem to have (hot)fixed it",,üëç (1)
4.66395E+17,oaktownsam#0815,2019-11-13,Weird the formatting was fine for me the whole time (on Windows and Mac clients),,emoji_4 (1)
4.89956E+17,WillBAnders#5226,2019-11-16,@notjack How are you supposed to work with comparators? It seems like you have to pattern match on everything.,,
2.66505E+17,notjack#9941,2019-11-16,@WillBAnders What sort of operation are you trying to do?,,
4.89956E+17,WillBAnders#5226,2019-11-16,"less than or equal. Right now I've got two layers of conditions and am using `(not (eq? cmp lesser))`, or similar.",,
4.89956E+17,WillBAnders#5226,2019-11-16,"```racket
(let ([lower (range-lower range)])
  (cond
    [(eq? lower unbounded) #t]
    [else (define cmp (compare comparator (bound-value lower) value))
      (if (bound-incl lower)
        (not (eq? cmp greater))
        (eq? cmp lesser))]))
```",,
4.89956E+17,WillBAnders#5226,2019-11-16,"Ideally there would something like `(compare<= comparator a b)`, which would return a boolean.",,
2.66505E+17,notjack#9941,2019-11-16,"That looks about right to me, yes. (But use `equal?`, not `eq?`. You pretty much never want `eq?`.)",,
2.66505E+17,notjack#9941,2019-11-16,It's wordy. There's three ways the situation could be improved:,,
4.89956E+17,WillBAnders#5226,2019-11-16,I've been using `eq?` for identity.,,
2.66505E+17,notjack#9941,2019-11-16,"1. Add support for pattern matching with `racket/match`, so you could do `(match (compare comparator x y) [greater ...] [lesser ...])` or whatnot.

2. Add comparison functions like `compare<=`. Personally I'm not super excited at the idea, because I _constantly_ screw up the argument order of the `<` / `>` / `<=` / `>=` functions, particularly when used with two arguments where one is a constant and the other is a variable. It's a very bug-prone API.

3. Ask people to use comparators indirectly via things like `sorting`, `into-max` / `into-min`, and the range API. I think if these use cases are all addressed out of the box by Rebellion, it will be very rare to actually _need_ to use comparators directly. So I lean towards this route.",,
2.66505E+17,notjack#9941,2019-11-16,"Don't bother using `eq?` for identity. Just use `equal?` everywhere, the only time it won't do what you want is when comparing Racket's built-in mutable data structures. And I think it was a mistake to make mutable vectors / mutable lists / mutable hashes / etc. compare as `equal?` when they have the same elements but can be mutated independently.",,
2.66505E+17,notjack#9941,2019-11-16,More background on the eq? / equal? / eqv? / = situation in racket: https://github.com/racket/rhombus-brainstorming/issues/16,,
4.62028E+17,StephenD#5938,2019-11-16,=tex \int_0^{2\pi} \sin{(4\theta)} \mathrm{d}\theta,,
1.34074E+17,MathBot#7353,2019-11-16,,https://cdn.discordapp.com/attachments/618895179343986688/645317249934032899/latex.png,üóë (1)
4.62028E+17,StephenD#5938,2019-11-16,we now have mathbot if you don't know it you can type =help for instructions,,
4.66395E+17,oaktownsam#0815,2019-11-16,@WillBAnders @notjack I've considered conservatively adding some of https://srfi.schemers.org/srfi-67/srfi-67.html and https://docs.racket-lang.org/data/Orders_and_Ordered_Dictionaries.html?q=data%2Fcompare features to comparators,,
2.66505E+17,notjack#9941,2019-11-16,"Hmmm. What about something like this:
```racket
(compare-using string<=>
  [""foo"" < x <= ""bar""])
```",,
2.66505E+17,notjack#9941,2019-11-16,Just don't even try to make it a function?,,
1.93202E+17,rocketnia#4517,2019-11-16,"that's what I was saying (with fewer parens, and it could be a function, but being a function isn't the point)",,
1.93202E+17,rocketnia#4517,2019-11-16,"Can't remember where I said it. Anyway, it's my favorite option, maybe with keywords for #:<= etc.",,
2.66505E+17,notjack#9941,2019-11-16,Definitely don't make it look like a function,,
1.93202E+17,rocketnia#4517,2019-11-16,"yeah, those parens are good at visually separating the `string<=>` argument from the infix part so it doesn't look like the arguments to `<` are `compare-using string<=> ""foo""` and `x`",,
2.66505E+17,notjack#9941,2019-11-16,Also thinking about indentation,,
2.66505E+17,notjack#9941,2019-11-16,"Want to avoid this:
```
(compare-using string<=>
               ""foo""
               <=
               x)
```",,
2.66505E+17,notjack#9941,2019-11-16,"@oaktownsam Sorted sets, dicts, multisets, and multidicts would be a wonderful thing to have in Rebellion",,
4.66395E+17,oaktownsam#0815,2019-11-16,Oh I was just talking about comparison procedures/syntax,,
4.66395E+17,oaktownsam#0815,2019-11-16,I'll have to think more about `sorted*` structures,,
2.66505E+17,notjack#9941,2019-11-16,There's plenty to do üôÇ,,
1.93202E+17,rocketnia#4517,2019-11-16,"I would prefer not to use infix for things that span more than one line, but `compare-using string<=>` probably is long enough that things will often be pushed off the end",,
2.66505E+17,notjack#9941,2019-11-16,"It would be handy to search for as many usages as possible of racket's `string<?` / `>=` / `symbol<=?` / etc. procedures, to get a sense of how likely it is that a comparator-based version would line wrap",,
2.66505E+17,notjack#9941,2019-11-17,"So `compose` combines functions in right-to-left order. This is hard to read compared to left-to-right order, but there's no built-in function for that. What would a good name for left-to-right composition be?",,
2.66505E+17,notjack#9941,2019-11-17,"Things I've considered:

- `pipe`, like you're sticking them together end-to-end in a pipe
- `thrush`, like the thrush combinator from To Mock a Mockingbird. Not a fan of this one anymore, it's inscrutable.
- `fuse`, meaning the same thing as `pipe` but it reads more clearly as a verb to me",,
2.66505E+17,notjack#9941,2019-11-17,"```racket
(define foo1 (pipe abs sqrt number->string))
(define foo2 (fuse abs sqrt number->string))
```",,
2.66505E+17,notjack#9941,2019-11-17,Setup of Rebellion's scribble docs is taking eight minutes and counting üò¢,,
2.66505E+17,notjack#9941,2019-11-17,"oh for god's sake the problem was I wrote a one-off script for querying scribble's cross-reference index with `(load-collections-xref)` and I put that script in the rebellion/private folder, so when raco setup was evaluating my scribble examples it somehow ended up trying to repeatedly reload the entire scribble cross reference table into memory, several hundred times",,
2.66505E+17,notjack#9941,2019-11-17,"document build time before I removed the script: 20+ minutes
document build time after I removed the script: 2 minutes",,
1.93202E+17,rocketnia#4517,2019-11-17,hooray! sounds like it'll be a lot more pleasant to develop the docs now XD,,
1.93202E+17,rocketnia#4517,2019-11-17,the name I've been using for left-to-right composition is `chain`,,
1.93202E+17,rocketnia#4517,2019-11-17,Haskell uses `>>>` (and probably some others as well)... category theory uses a semicolon... looks like Scala uses `andThen`,,
2.66505E+17,notjack#9941,2019-11-17,`andThen` is what java and rust use too I think,,
2.66505E+17,notjack#9941,2019-11-17,but that name really only works if its infix,,
2.66505E+17,notjack#9941,2019-11-17,`(and-then foo bar baz)` just looks bizarre,,
1.93202E+17,rocketnia#4517,2019-11-17,"yeah, all of those are infix names",,
2.66505E+17,notjack#9941,2019-11-17,"oh by the way, transducer composition is merged now so you ought to be able to get a sorting transducer working :p",,
1.93202E+17,rocketnia#4517,2019-11-17,"the name `pipe` seems good to me, especially for transducers since they've got input streams and output streams (even if they're not the port style of stream)",,
1.93202E+17,rocketnia#4517,2019-11-17,that's awesome :) I'll look into it sometime in the next few days,,
2.66505E+17,notjack#9941,2019-11-17,my recommendation is to wait until the package server renders the docs for it :p,,
4.66395E+17,oaktownsam#0815,2019-11-17,`pipe` and `thrush` are the first that come to mind.  I prefer `pipe` myself,,
4.66395E+17,oaktownsam#0815,2019-11-17,The only reason I think `thrush` is because of doing FP for a while,,
4.62028E+17,StephenD#5938,2019-11-18,"# 2019 Racket Advent of Code Leaderboard

[Advent of Code](https://adventofcode.com/) is a fun contest to practice your Racket skills, show off your Racket prowess, and encourage others to explore the world of Language Oriented Programming. The contest starts December 1st and continues to Christmas (December 25.)

This year I've ""organized"" a leaderboard for Racket enthusiasts. If you would like to participate use the leaderboard key below.

- Advent of Code Leaderboard Key: 22197-a7a01707
 - Slack (invite link https://racket-slack.herokuapp.com/):
  - #advent-of-code

Cheers,
Sam",,
4.62028E+17,StephenD#5938,2019-11-18,(Copied from Racket-users),,
4.66395E+17,oaktownsam#0815,2019-11-18,Thanks @StephenD !,,
4.62028E+17,StephenD#5938,2019-11-18,Pinned a message.,,
4.66395E+17,oaktownsam#0815,2019-11-18,@StephenD can we pin a link to how to join the Discord server?  I've been unable to find it on my own.,,
4.62028E+17,StephenD#5938,2019-11-18,https://discord.gg/6Zq8sH5,,
4.62028E+17,StephenD#5938,2019-11-18,all they need is the link,,
4.66395E+17,oaktownsam#0815,2019-11-18,Yes that's the part I couldn't find,,üëç (1)
4.62028E+17,StephenD#5938,2019-11-18,https://racket-news.com/2019/11/racket-news-issue-20.html,,
4.62028E+17,StephenD#5938,2019-11-18,Pinned a message.,,
2.3784E+17,Zdo10#7702,2019-11-19,ooOoh a racket server,,
2.66505E+17,notjack#9941,2019-11-19,oOoOo,,"‚≠ï (3),üá¥ (3),üÖæÔ∏è (3),o_ (3),Omegalul (3)"
2.23427E+17,gour#0888,2019-11-19,morning,,
2.23427E+17,gour#0888,2019-11-19,"i'm starting with Racket and logged into IRC channel, but wonder how active is slack channel (although i prefer discord over slack)?",,
2.66505E+17,notjack#9941,2019-11-19,"The slack is more active than this discord. I think it's also more active than the irc, but I'm not sure.",,
4.62028E+17,StephenD#5938,2019-11-19,https://www.reddit.com/r/Racket/comments/dy9czt/whats_everyone_working_on_this_week_472019/?utm_source=share&utm_medium=ios_app&utm_name=iossmf,,
2.23427E+17,gour#0888,2019-11-19,@notjack hmm...it would be good to integrate communication...,,üëç (1)
2.66505E+17,notjack#9941,2019-11-19,"I think it's okay that they're separate. The platforms might seem redundant, but the user bases don't overlap as much as you'd think.",,üëç (1)
4.62028E+17,StephenD#5938,2019-11-19,I miss the slack/irc integration.,,
2.66505E+17,notjack#9941,2019-11-19,Me too,,
2.66505E+17,notjack#9941,2019-11-19,I haven't been in the irc at all since the bridge went away,,
2.66505E+17,notjack#9941,2019-11-19,"unrelated, transducers are making me sorely miss method-style function calls:

```
(into-transduced (taking 5) (mapping foo) #:into into-list)
taking(5).andThen(mapping(foo)).andInto(intoList)
```",,
4.62028E+17,StephenD#5938,2019-11-19,Why not have both?,,
2.66505E+17,notjack#9941,2019-11-19,maybe we will eventually!,,
2.66505E+17,notjack#9941,2019-11-19,an s-exp API and a Rhombus API,,üëç (2)
4.62028E+17,StephenD#5938,2019-11-19,I‚Äôm not religious about it. I don‚Äôt see a problem with Racket 1 (continuing ) to evolve.,,
4.62028E+17,StephenD#5938,2019-11-19,I think it will anyway.,,
2.66505E+17,notjack#9941,2019-11-19,Oh I'm certain it's gonna be more fork than replacement,,
2.66505E+17,notjack#9941,2019-11-19,"or maybe not ""fork"" so much as ""library""?",,
2.66505E+17,notjack#9941,2019-11-19,`#lang` makes things that look like community splits actually not splits at all,,
4.62028E+17,StephenD#5938,2019-11-19,It‚Äôs a great strength that there is no difference,,
4.62028E+17,StephenD#5938,2019-11-19,But a problem that most don‚Äôt seem to understand this,,"‚¨ÜÔ∏è (1),‚òëÔ∏è (1)"
2.66505E+17,notjack#9941,2019-11-19,Gonna have to teach by example I suppose,,üëç (1)
4.62028E+17,StephenD#5938,2019-11-19,I think you are right - no one will believe it until racket itself is a mix of racket and rhombus- just like it is currently a mix of typed and untyped racket,,
2.66505E+17,notjack#9941,2019-11-19,"Yup. Even when I tell people that racket is a mix of typed and untyped code, and the type system is a library... it takes a few repetitions for that to actually sink in.",,
2.66505E+17,notjack#9941,2019-11-19,what that _means_,,
2.66505E+17,notjack#9941,2019-11-19,It's one of those things that sort of breaks some very fundamental assumptions people make about how programming languages work,,
4.62028E+17,StephenD#5938,2019-11-19,To be fair - it is completely alien and doesn‚Äôt exist in any other language ecosystem,,
2.66505E+17,notjack#9941,2019-11-19,That too,,
2.66505E+17,notjack#9941,2019-11-19,"the closest thing is like those extra type checkers you can run over annotated code, but those are _tools_ and you have to like figure out how to set them up with your build system and your editor and your package manager and god knows what else",,
2.66505E+17,notjack#9941,2019-11-19,a lot of people assume typed racket is like that too,,
4.62028E+17,StephenD#5938,2019-11-19,I‚Äôm just thankful I found Racket. I‚Äôve learnt a lot.,,üíñ (3)
2.66505E+17,notjack#9941,2019-11-19,Me too üôÇ,,
2.23427E+17,gour#0888,2019-11-19,_just decided to learn/use Racket for desktop gui app...instead of Eiffel üòá_,,üëç (1)
2.23427E+17,gour#0888,2019-11-19,..but i wonder if I should wait for Rhombus üòï  üòâ,,
4.62028E+17,StephenD#5938,2019-11-19,@gour Rhombus is in an early brainstorming phase that is specifically about the design of the language - the syntax and semantics . I‚Äôm guessing it will be 2-3 years before anything called Rohmbus will be available. Certainly nothing in the near future.,,
4.62028E+17,StephenD#5938,2019-11-19,@gour it will also be fully compatible with Racket and use the Racket cross-platform gui toolkit - so there is no benefit to waiting,,
4.62028E+17,StephenD#5938,2019-11-19,@notjack https://www.reddit.com/r/Racket/comments/dybh3q/racket_news_issue_20_racket_75_is_almost_here/f81bmu1/?utm_source=share&utm_medium=ios_app&utm_name=iossmf,,
6.46114E+17,samth#3420,2019-11-19,Slack is significantly more active than IRC,,
2.23427E+17,gour#0888,2019-11-19,"@StephenD yeah, i saw the Rhombus 'roadmap'...was just joking, know when i decided to use Racket...but I did miss the info about compatibility with Racket - that's good to know!!",,
2.23427E+17,gour#0888,2019-11-19,@samth thanks. i'll leave IRC then...,,
4.66395E+17,oaktownsam#0815,2019-11-19,@notjack my $.02 I like the current transducer syntax better than a dot syntax.,,üëç (1)
2.66505E+17,notjack#9941,2019-11-19,@StephenD yup I saw that person post about those on the scheme subreddit a while ago and we got to talking,,
2.66505E+17,notjack#9941,2019-11-19,I still have no idea at all what they mean when they say their transducers are lazy and mine are eager. As far as I can tell they're both lazy.,,
4.62028E+17,StephenD#5938,2019-11-19,Haha,,
4.66395E+17,oaktownsam#0815,2019-11-19,I'm dealing with a python program I wrote a few years back this morning that essentially has a half-assed implementation of transducers in it.,,"üò± (1),üòõ (1)"
4.66395E+17,oaktownsam#0815,2019-11-19,,https://cdn.discordapp.com/attachments/618895179343986688/646435278453735424/Screen_Shot_2019-11-19_at_11.40.17_AM.png,
4.66395E+17,oaktownsam#0815,2019-11-19,I probably have an implementation that is closer to transducers where I overload the pipe operator.,,
4.66395E+17,oaktownsam#0815,2019-11-19,That is actually really explicit about passing around the data that is being munged,,
4.66395E+17,oaktownsam#0815,2019-11-19,If this script didn't have a bunch of scary additional parsing code (hidden inside `fixup_records`) this would be a good script to try to port to use transducers.,,
2.66505E+17,notjack#9941,2019-11-19,@oaktownsam is this what inspired that retrosheets repository you made recently?,,
4.66395E+17,oaktownsam#0815,2019-11-19,"No that is a bit of experiment for a hypothetical game jam entry that I probably won't finish in time, but will probably hack around the edges of for 2-5 years",,
4.62028E+17,StephenD#5938,2019-11-19,FWIW as of right now these channels claim the following numbers,,
4.62028E+17,StephenD#5938,2019-11-19,/r/racket 24,,
4.62028E+17,StephenD#5938,2019-11-19,racket discord 9,,
4.62028E+17,StephenD#5938,2019-11-19,slack 3,,
2.66505E+17,notjack#9941,2019-11-19,Slack 3???,,
4.66395E+17,oaktownsam#0815,2019-11-19,Yeah that's surprising,,
4.66395E+17,oaktownsam#0815,2019-11-19,@StephenD `#racket: Total of 137 nicks`,,üëç (1)
4.66395E+17,oaktownsam#0815,2019-11-19,that's IRC,,
1.77894E+17,Tytonidae#8645,2019-11-19,"Perhaps not a lot of people idle there, but instead check it now and then?
Discord is a lot easier to just leave open for other servers",,
2.66505E+17,notjack#9941,2019-11-19,"Maybe a better metric would be something like ""number of distinct message / post authors in the last hour""",,
4.66395E+17,oaktownsam#0815,2019-11-19,True.,,
4.66395E+17,oaktownsam#0815,2019-11-19,For IRC there were 2 people in since I last looked.,,
4.62028E+17,StephenD#5938,2019-11-19,https://racket.slack.com/stats#overview,,
4.62028E+17,StephenD#5938,2019-11-19,these stats are all a bit rubbish.,,üòõ (1)
4.66395E+17,oaktownsam#0815,2019-11-19,Too bad it doesn't look like the stats go back to when Matthew announced Racket2/Rhombus,,"üòâ (1),ü§£ (1)"
2.23427E+17,gour#0888,2019-11-20,7.5 is out...CS is still beta...,,üòÄ (1)
2.66505E+17,notjack#9941,2019-11-20,"Oh God it's finally out, now `rebellion/type` can actually work correctly with drracket's binding arrows",,"üëç (1),üéâ (1)"
4.66395E+17,oaktownsam#0815,2019-11-20,Goodbye old Rackets,https://cdn.discordapp.com/attachments/618895179343986688/646774142519083058/Screen_Shot_2019-11-20_at_10.08.54_AM.png,‚ù§Ô∏è (1)
4.66395E+17,oaktownsam#0815,2019-11-20,"Chat anecdote: my wife's friend is the Chair of the CS/Math Department at a nearby University and doesn't do Discord, Slack or any other chat because it is too easy for students to harass him.",,"üòÇ (1),üòπ (1)"
1.77894E+17,Tytonidae#8645,2019-11-20,A couple of professors at my university use Discord. Thankfully I've never heard about anything like that happening but the risk is definitely there.,,
2.66505E+17,notjack#9941,2019-11-20,"@oaktownsam (I'm assuming you meant ""harass"" as in ""pester for help on homework"" and not something like ""actively stalk"")",,
4.66395E+17,oaktownsam#0815,2019-11-20,Well....,,
4.66395E+17,oaktownsam#0815,2019-11-20,"Apparently his gaming vice of choice is World of Warcraft so I joked ""Professor J's office hours are 4-5 fighting Orcs.""",,
4.62028E+17,StephenD#5938,2019-11-20,"I'm not that familiar with discord and its protections. I know you can block people, and mark yourself as invisible. I was sort of assuming it was battle-tested due to being popular in with game communities.",,
2.66505E+17,notjack#9941,2019-11-20,There's the usual banning and kicking features as well,,
2.66505E+17,notjack#9941,2019-11-20,also muting,,
4.62028E+17,StephenD#5938,2019-11-20,More pressing matters: only 9 days left in the gamejam!,,
2.66505E+17,notjack#9941,2019-11-20,üòÆ,,
2.66505E+17,notjack#9941,2019-11-20,my vacation starts tuesday next week,,
6.43137E+17,Anything#4621,2019-11-20,Sweet!,,
4.62028E+17,StephenD#5938,2019-11-20,Have a good vacation!,,
1.77894E+17,Tytonidae#8645,2019-11-20,"My vacation starts then, too",,
1.77894E+17,Tytonidae#8645,2019-11-20,I'm hoping to start really delving into learning Racket then. Perhaps sooner if I can! I've only been able to play around thus far,,üéâ (1)
4.62028E+17,StephenD#5938,2019-11-20,If anyone who isn't going on vacation is interested there is a distinct lack of 'Frogger' style games.,,
2.66505E+17,notjack#9941,2019-11-20,Oh I was planning to start a game during my vacation :p sounds like fun,,
4.62028E+17,StephenD#5938,2019-11-20,If you are not familiar with frogger just think of a 2d crossy road with a top down perspective,,
4.62028E+17,StephenD#5938,2019-11-20,this is a python example https://github.com/Wireframe-Magazine/Wireframe-27,,
4.66395E+17,oaktownsam#0815,2019-11-20,"""If you are not familiar with frogger ..."" that makes me feel old. :p",,ü§£ (1)
4.62028E+17,StephenD#5938,2019-11-21,"Submissions due in
7
days
2
hours
9
minutes
57
seconds
Join jam
https://itch.io/jam/racket-2019-gamejam",,
4.89956E+17,WillBAnders#5226,2019-11-23,"Sigh. Getting really tired of the complexity of Racket's macro system, especially with the lack of types, documentation, and effective error messages. The less functional languages I work with the better.",,
4.89956E+17,WillBAnders#5226,2019-11-23,"@notjack Honestly I can't believe this even works.
```racket
(define r (range #:incl 1 10 #:cmp real<=> #:dom 'integers))
```
I'll clean it up an append a commit sometime in the next day or two with some info + updates.",,
4.56227E+17,Deleted User#0000,2019-11-25,I had to port my project from Racket to Hy. üòî,,
4.56227E+17,Deleted User#0000,2019-11-25,I really need Python libraries so it can't be helped.,,
4.62028E+17,StephenD#5938,2019-11-25,Which python libraries?,,
4.56227E+17,Deleted User#0000,2019-11-25,Tensorflow & Keras,,
4.89956E+17,WillBAnders#5226,2019-11-27,"@notjack Clarification on contracts please: Something like `range?` is simply `predicate/c` as it's `(-> any/c boolean?)`. If I have something that's `(-> range? boolean?)`, would I write it like that each time or should I use `predicate/c` or is there something else I should do instead?",,
2.66505E+17,notjack#9941,2019-11-27,@WillBAnders Correct. Use `predicate/c` instead of `(-> any/c boolean?)`.,,
4.89956E+17,WillBAnders#5226,2019-11-27,"Right. And then in the other case, testing shows that `predicate/c` isn't right which makes sense.",,üëç (1)
4.89956E+17,WillBAnders#5226,2019-11-27,I think I'm making a mistake.,https://cdn.discordapp.com/attachments/618895179343986688/649432674405974016/unknown.png,
4.56227E+17,Deleted User#0000,2019-11-28,Haha,,
2.66505E+17,notjack#9941,2019-12-02,doin' some Advent of Code with Rebellion!,,
2.66505E+17,notjack#9941,2019-12-02,puzzle 1 part 1 solution using transducer pipeline:,https://cdn.discordapp.com/attachments/618895179343986688/651170412041863168/SPOILER_Screen_Shot_2019-12-02_at_1.18.03_PM.png,
4.62028E+17,StephenD#5938,2019-12-02,nice,,
4.89956E+17,WillBAnders#5226,2019-12-02,I've been chilling with Elixir on things. Need to set up some type of base library to help me to get through things quickly.,,
4.62028E+17,StephenD#5938,2019-12-02,I've discovered from the programminglanguages discord server that it is possible to bridge discord server channels to irc(freenode) is this desirable? (I'm assuming slack/irc bridge gone forever),,
2.66505E+17,notjack#9941,2019-12-02,"I think it's worth trying, at the least",,
4.89956E+17,WillBAnders#5226,2019-12-02,Indeed. You're in there now too?,,
4.62028E+17,StephenD#5938,2019-12-02,I've joined the the programminglanguages discord server yes.,,
2.66505E+17,notjack#9941,2019-12-02,what server is that?,,
4.62028E+17,StephenD#5938,2019-12-02,Do you want me to dig up the invite?,,
4.62028E+17,StephenD#5938,2019-12-02,/website?,,
4.89956E+17,WillBAnders#5226,2019-12-02,https://proglangdesign.net,,
4.89956E+17,WillBAnders#5226,2019-12-02,"It's a server for discussing programming languages, generally design and implementation. Most of the people there are creating their own languages and such.",,
2.66505E+17,notjack#9941,2019-12-02,I might hop into that one later today,,
2.66505E+17,notjack#9941,2019-12-02,right now tho I'm about to head onto a plane,,üçé (1)
2.66505E+17,notjack#9941,2019-12-02,also I just finished day 1 part 2 of AoC üòÑ,,
4.62028E+17,StephenD#5938,2019-12-02,"Yes, but it seems more about compiler implementation than the HCI side of things. (my interest)",,
4.62028E+17,StephenD#5938,2019-12-02,But don't take my word for it - I've only ever looked briefly - so I havn't discarded it.,,
4.89956E+17,WillBAnders#5226,2019-12-02,There's things for both. I'd actually say it's less to do with compiler implementation and much more to do with design.,,üëç (2)
4.62028E+17,StephenD#5938,2019-12-02,@WillBAnders I'll have to spend some time there. And maybe look at the reddit too.,,
4.89956E+17,WillBAnders#5226,2019-12-02,no idea what happens with reddit,,
4.62028E+17,StephenD#5938,2019-12-02,https://www.reddit.com/r/ProgrammingLanguages/ some design stuff.,,
2.66505E+17,notjack#9941,2019-12-02,"Oh I'm in that subreddit already, nice",,
4.66395E+17,oaktownsam#0815,2019-12-02,PL people are either kooks or sober grounded engineers.,,
4.66395E+17,oaktownsam#0815,2019-12-02,This is based on twenty years of observation,,
4.66395E+17,oaktownsam#0815,2019-12-02,The scheme community has a similar problem.,,
4.66395E+17,oaktownsam#0815,2019-12-02,those are my hot takes of the day,,üå∂Ô∏è (2)
2.66505E+17,notjack#9941,2019-12-03,The day 2 advent of code problem has me wishing that rebellion included a decent persistent vector API,,
4.56227E+17,Deleted User#0000,2019-12-04,I finished day 1 part 1 of AoC.  I've just recently started to program,,üíØ (1)
4.56227E+17,Deleted User#0000,2019-12-04,Not going to attempt the others,,
4.56227E+17,Deleted User#0000,2019-12-04,Why not?,,
4.56227E+17,Deleted User#0000,2019-12-04,"They seem a bit advanced, we'll see",,
2.66505E+17,notjack#9941,2019-12-04,The day 2 one seemed like a weirdly sudden jump in complexity,,
4.66395E+17,oaktownsam#0815,2019-12-04,Yeah,,
2.66505E+17,notjack#9941,2019-12-04,Record type pattern matching idea: `(person name age)` as a synonym for `(person #:name name #:age age)`,,‚¨ÜÔ∏è (1)
2.66505E+17,notjack#9941,2019-12-04,Hmmm. Or maybe `(person p)` as a synonym for `(person #:name p.name #:age p.age)`.,,
4.66395E+17,oaktownsam#0815,2019-12-04,rebellion struct records or record records?,,
2.66505E+17,notjack#9941,2019-12-04,The former,,
2.66505E+17,notjack#9941,2019-12-04,Rebellion really needs pattern matching,,
4.66395E+17,oaktownsam#0815,2019-12-04,Yes.,,
4.66395E+17,oaktownsam#0815,2019-12-04,I cobbled together a `variant` matcher somewhere,,
2.66505E+17,notjack#9941,2019-12-04,(advent of code is harshly reminding me of this every day),,
2.66505E+17,notjack#9941,2019-12-04,Yes! I think it was in your gist of using rebellion in anger,,
2.66505E+17,notjack#9941,2019-12-04,Super good idea,,
4.66395E+17,oaktownsam#0815,2019-12-04,"From a macro ref-transparency angle I kinda hate `(person p)`, but ergonomically I love it.",,
2.66505E+17,notjack#9941,2019-12-04,Tell me more about your hate üòõ,,
4.66395E+17,oaktownsam#0815,2019-12-04,You don't totally know what names are getting bound,,
4.66395E+17,oaktownsam#0815,2019-12-04,I guess `syntax-parse` classes with attributes are about the same though,,
2.66505E+17,notjack#9941,2019-12-04,Nesting would be tricky too,,
2.66505E+17,notjack#9941,2019-12-04,How to bind `p.favorite-color.red-component`?,,
2.66505E+17,notjack#9941,2019-12-04,"At the least, I think `(type-name #:field-name field-pattern ...)` is a useful core pattern to build more complex sugar on top of",,
4.66395E+17,oaktownsam#0815,2019-12-04,Yes,,
4.66395E+17,oaktownsam#0815,2019-12-04,Record names don't bind any static information?,,
4.66395E+17,oaktownsam#0815,2019-12-04,Last I remember seeing anyway...,,
2.66505E+17,notjack#9941,2019-12-04,Not yet,,
2.66505E+17,notjack#9941,2019-12-04,my current plan is to first add a system for making it easier to bind static information,,ü§ò (1)
2.66505E+17,notjack#9941,2019-12-04,"since there are a lot of other kinds of static info I want to throw around, including basic function arity information so I can finally have a damn static arity checker",,
4.66395E+17,oaktownsam#0815,2019-12-04,expansion time transducer protocol,,
2.66505E+17,notjack#9941,2019-12-04,that too,,
2.66505E+17,notjack#9941,2019-12-04,"I've been calling the system ""syntax annotations"", and it works like this:

- An annotation is a pair of an annotation type and an identifier. That identifier must be bound with `define-syntax` to a value (the _annotation value_) and that value must satisfy a contract defined by the annotation type.

- You can add annotations to an identifier using `(make-annotation-transformer original-id annotation-type annotation-id ... ...)`, which makes a syntax transformer that's basically just a rename transformer that points to `original-id`. So `syntax-local-value` will still work and ignore annotations.

- You can get annotations by using something like `(identifier-annotation id annotation-type)` which finds the `annotation-id` for that type on the identifier and then calls `syntax-local-value` on it to extract the value.",,
2.66505E+17,notjack#9941,2019-12-04,"So basically every identifier just gets an extensible expansion-time hashmap you can stick stuff into, and the keys hold contracts that their corresponding values have to satisfy.",,
2.66505E+17,notjack#9941,2019-12-05,day 5 advent of code reactions: *gasp!* Intcode is back!,,
4.66395E+17,oaktownsam#0815,2019-12-05,By the end of this years advent of code you will have implemented MacLisp for your intcode machine.,,üòÅ (1)
2.66505E+17,notjack#9941,2019-12-05,mflatt asked me to write a proposal for transducers in Rhombus!!,,üëç (1)
4.66395E+17,oaktownsam#0815,2019-12-05,neato,,
4.66395E+17,oaktownsam#0815,2019-12-05,"I've kinda fallen off following Rhombus.  I think they have a lot of good ideas for core, but I feel like the standard lib could use improvements.",,
4.66395E+17,oaktownsam#0815,2019-12-05,Like most of the networking stuff is ... not great,,
4.66395E+17,oaktownsam#0815,2019-12-05,(of course stdlib improvements can be done without a new core language),,
2.66505E+17,notjack#9941,2019-12-05,Stdlib improvements would be wonderful,,
4.62028E+17,StephenD#5938,2019-12-05,@oaktownsam what‚Äôs missing/weak in Net ?https://docs.racket-lang.org/net/index.html,,
2.66505E+17,notjack#9941,2019-12-05,"so, _so_ many things",,
4.62028E+17,StephenD#5938,2019-12-05,Ok,,
4.62028E+17,StephenD#5938,2019-12-05,What‚Äôs the worst omission,,
4.66395E+17,oaktownsam#0815,2019-12-05,"I can only comment on what I've used.

The basic HTTP client in `net/url` is not good.  `net/http-client` is better but you have to roll your own message objects or somesuch.  Neither support cookies (not that I'm a cookie fan, but in the world we need to use cookies.)

`net/head` is not a good (IMO) representation for RFC822 headers

`net/smtp` only works for sending a message

`net/imap` good the few times I've had to use it. (except it uses `net/head`)",,
4.66395E+17,oaktownsam#0815,2019-12-05,"Not that other languages libraries are better.  Most of the builtin networking libs in Python have similar problems, but there are good replacements in the community (`requests` comes to mind.)",,
4.66395E+17,oaktownsam#0815,2019-12-05,"I have a web library based on some ideas I've had, python's `requests` library, and the HTTP library that @notjack has on the pkg server.",,
4.66395E+17,oaktownsam#0815,2019-12-05,"Other stdlib thought I think there is some nice unixy things that are either not there, obscured, or used in a OS neutral way.  Like file notifications.",,
2.66505E+17,notjack#9941,2019-12-05,just some decent data types would go a long way to improve the situation,,
4.66395E+17,oaktownsam#0815,2019-12-05,tru,,
2.66505E+17,notjack#9941,2019-12-05,Like a `header?` type that case-normalized the keys and checked that keys and values are legal bytes,,
2.66505E+17,notjack#9941,2019-12-05,Also the client-side stuff is very awkward to use. The `call/input-url` + `get-pure-port` / `get-impure-port` / `purify-port` combination is so painful and completely unnecessary,,
2.66505E+17,notjack#9941,2019-12-05,random thought: sometimes the most impressive thing a library can do is not surprise you,,"üëç (1),üôÇ (1)"
4.89956E+17,WillBAnders#5226,2019-12-05,Did some socket stuff in Java and it sucks.,,
4.89956E+17,WillBAnders#5226,2019-12-05,"if you open the input stream before the output stream, it hangs.",,
2.66505E+17,notjack#9941,2019-12-05,oh dear,,
4.56227E+17,Deleted User#0000,2019-12-05,Amazing.,,
4.56227E+17,Deleted User#0000,2019-12-05,"I put together a silly little script to try out `charterm`, only to find out it doesn't support colours, so I had to hack that in myself.",,
4.56227E+17,Deleted User#0000,2019-12-05,https://gist.github.com/erkin/f3a4edb23fb11744926faeed77ea9124,,üíñ (1)
4.56227E+17,Deleted User#0000,2019-12-05,So technically it only gets the terminal width from `charterm` and nothing else.,,
4.56227E+17,Deleted User#0000,2019-12-06,"Boo, it's pointless. I'll just replace it with a call to `stty`.",,
4.66395E+17,oaktownsam#0815,2019-12-06,I found charterm lacking,,
4.56227E+17,Deleted User#0000,2019-12-06,I appreciate the effort put into making it compatible with a lot of platforms but there isn't much to use.,,
4.62028E+17,StephenD#5938,2019-12-06,"Honu: Lisp with Algol Syntax (2012) [pdf] | Hacker News

https://news.ycombinator.com/item?id=21721163",,
4.56227E+17,Deleted User#0000,2019-12-06,The comments seem to be more or less on the negative side.,,
2.66505E+17,notjack#9941,2019-12-06,Yup,,
4.62028E+17,StephenD#5938,2019-12-06,That sounds like HN.,,
4.66395E+17,oaktownsam#0815,2019-12-06,,https://cdn.discordapp.com/attachments/618895179343986688/652604601324929052/Screen_Shot_2019-12-06_at_12.17.14_PM.png,
4.66395E+17,oaktownsam#0815,2019-12-06,"More re: stdlib stuff, I think there are things that have been released as part of the core download that should not be there/moved into separate packages.  Things like honu (which I conceptually like a lot and believe it is valuable research) are in the main distribution and probably shouldn't be.",,üëç (2)
2.66505E+17,notjack#9941,2019-12-06,"Also, the `racket/base` module itself could use a lot of splitting up",,
4.66395E+17,oaktownsam#0815,2019-12-06,I'll defer to `racket/base` experts on that one.  There lies a twisty set of requires and bootstrapping.,,
4.62028E+17,StephenD#5938,2019-12-06,there are a couple of plugins in DrRacket that should be off by default.,,üëç (1)
4.56227E+17,Deleted User#0000,2019-12-06,"Huh, I never realised Honu is in the main distribution.",,
4.56227E+17,Deleted User#0000,2019-12-06,"Ah, it's not, it seems.",,
4.56227E+17,Deleted User#0000,2019-12-06,At least not on my end.,,
1.9353E+17,sodaplayer#1456,2019-12-07,"Anyone doing AoC day five, do you know if opcodes 3 and 4 are also configurable with a mode?",,
2.66505E+17,notjack#9941,2019-12-07,"@sodaplayer I think they are, except the output parameters:
> Parameters that an instruction writes to will never be in immediate mode.",,
2.66505E+17,notjack#9941,2019-12-07,(I'm about to try day 5 myself),,
1.9353E+17,sodaplayer#1456,2019-12-07,"Ahh, I think I have a clearer idea now. I was confused for a bit. I wasn't sure if something like `3,0` meant save the input at position `0` or save the input at the value in position `0`, so `3`",,
1.9353E+17,sodaplayer#1456,2019-12-07,"So the results being`input,0` vs `3,0,,input` 

But I suppose the former matches Day 2 semantics

Ahh, this helps:
https://www.reddit.com/r/adventofcode/comments/e7adao/2019_day_5_question_about_what_counts_as_an_opcode/f9wtvxy/",,
2.66505E+17,notjack#9941,2019-12-07,feature wishlist inspired by advent of code: data types for numbers packed together as separate digits of a single number,,
2.66505E+17,notjack#9941,2019-12-07,"hypothetical example:
```
(define-packed-integer-type instruction-type
  (third-parameter-mode #:width 1 #:default 0)
  (second-parameter-mode #:width 1 #:default 0)
  (first-parameter-mode #:width 1 #:default 0)
  (opcode #:width 2))

> (decode-instruction-type 1002)
(instruction-type
  #:opcode 2
  #:first-parameter-mode 0
  #:second-parameter-mode 1
  #:third-parameter-mode 2)
```",,
4.66395E+17,oaktownsam#0815,2019-12-07,Make it so you can adjust the base.  So base10 packed binary packeted nybble packed.,,
4.66395E+17,oaktownsam#0815,2019-12-07,@Deleted User You're right I think honu got moved out a couple years ago.  I swear it was there.,,
2.66505E+17,notjack#9941,2019-12-07,Adjustable base is definitely good idea,,
2.66505E+17,notjack#9941,2019-12-07,I think I lean towards just picking a few standard bases rather than making the API base-agnostic,,
2.66505E+17,notjack#9941,2019-12-07,like `define-packed-integer-type` / `define-packed-bytestring-type` / `define-packed-bitstring-type`,,
2.66505E+17,notjack#9941,2019-12-07,(or maybe `define-packed-bytes-type`),,
2.66505E+17,notjack#9941,2019-12-07,"I made a transducer that runs an Intcode program!

```
(transduce (list 1)
           (executing-intcode-program program-text)
           #:into into-list)
```",,üëç (1)
2.66505E+17,notjack#9941,2019-12-07,you give it a sequence of inputs to the program and it produces the program's sequence of outputs,,
2.66505E+17,notjack#9941,2019-12-07,"(for the day 5 version of the intcode machine, that is)",,
1.9353E+17,sodaplayer#1456,2019-12-07,"Do you have any favorite resources for explaining what a transducer is? I vaguely remember hearing a Clojure talk mention them, but I don‚Äôt remember what they do",,
2.66505E+17,notjack#9941,2019-12-07,"There's the announcement post I made about the transducers library, that gives a quick overview: https://groups.google.com/forum/#!msg/racket-users/AxNC_9Xivlo/HGr5wq6CAQAJ",,üëç (1)
4.62028E+17,StephenD#5938,2019-12-07,@notjack you should add the quick overview from your announcement to https://docs.racket-lang.org/rebellion/Transducers.html,,
2.66505E+17,notjack#9941,2019-12-07,Yup,,üòÄ (1)
4.56227E+17,Deleted User#0000,2019-12-08,Dealing with so much Python made me appreciate the beauty of Racket once again.,,
4.56227E+17,Deleted User#0000,2019-12-08,The library support is almost worse for basic things I've grown to take for granted.,,
4.56227E+17,Deleted User#0000,2019-12-08,It just has a lot of third-party libraries because it's popular.,,
4.56227E+17,Deleted User#0000,2019-12-08,That's pretty much the only upside I've seen.,,
4.56227E+17,Deleted User#0000,2019-12-08,"Maybe it's because I spent so much time with sexps but I think Python's syntax is actually super clunky. It tries to look clean by sweeping a lot of semantic baggage under the rug with things like tuples, encourages repetitive and verbose code, constantly mixes high-level and low-level code in the same library, and will go out of its way to sabotage your attempts to work around its opinionated semantics.",,
4.56227E+17,Deleted User#0000,2019-12-08,"A lot of its ""features"" that people sing praises of are actually hackish workarounds of its limitations.",,
2.66505E+17,notjack#9941,2019-12-08,This is my (least?) favorite example of Python fully and purposefully committing to being fucking _whack_: https://stackoverflow.com/questions/29268892/python-3-exception-deletes-variable-in-enclosing-scope-for-unknown-reason,,
4.89956E+17,WillBAnders#5226,2019-12-08,"```
Exceptions are cleared because with the traceback attached to them, they form a reference cycle with the stack frame, keeping all locals in that frame alive until the next garbage collection occurs.
```
I don't have the background to understand the solution space here, but there's definitely some reason behind it. Personally I would just require unique names, but whatev. Not a fan of dynamic languages anyways.",,
2.66505E+17,notjack#9941,2019-12-08,"Yeah the thing that's whack to me is that they committed to ""no, variables in `except` clauses are tied to function scope, `except` doesn't introduce a new scope""",,
4.89956E+17,WillBAnders#5226,2019-12-08,¬Ø\_(„ÉÑ)_/¬Ø,,
4.89956E+17,WillBAnders#5226,2019-12-08,python's scope is wack,,
4.89956E+17,WillBAnders#5226,2019-12-08,C/++ does this with switch cases as well,,
4.56227E+17,Deleted User#0000,2019-12-08,"Even with Hy I couldn't get around Python's ""my way or highway"" attitude.",,
4.56227E+17,Deleted User#0000,2019-12-08,"I still need to rely on `for` over `range` and `enumerate` to loop without shooting myself in the foot, even for something as simple as `for-each`.",,
4.56227E+17,Deleted User#0000,2019-12-08,Hy's `lfor` is a neat macro on top of Python's list comprehensions and I can poke and prod it until it resembles `for/list`.,,
4.56227E+17,Deleted User#0000,2019-12-08,"```Hy
(lfor path (.iterdir (Path song-directory))
      :if (.is_file path)
      :setv song (read-song path)
      :if (not (none? song))
      song)
```",,
4.56227E+17,Deleted User#0000,2019-12-08,I realised I could just do `song` in place of `(not (none? song))` since `None` is falsy.,,
4.56227E+17,Deleted User#0000,2019-12-08,"This is the pretty part. The grotty part follows:
We have no `match`, Hy uses a verbose `(get collection index)` in place of `collection[index]`, resulting in this mess:
```Hy
(lfor (, line0 line1) (zip lines (rest lines))
       :if (and (in (get line0 1) useful-notes) ; Only take note lines
                (in (get line1 1) useful-notes))
       (make-note
         (int (get line0 4))              ; Holdrian comma
         (int (get line0 10))             ; Velocity
         (round (float (get line0 12)) 2) ; Offset
         (round (- (float (get line1 12)) ; Duration
                   (float (get line0 12))) 2)))
```",,
4.56227E+17,Deleted User#0000,2019-12-08,"Also `x, y = foo` becomes `(setv (, x y) foo)` and `x[y] = bar` becomes `(setv (get x y) bar)` which meld into noise in nested loops.
```Hy
(defn read-batch [notes uniques]
  (setv batch (int (/ (get notes.shape 0) batch-size)) ; Batch shape
        batch-count (range 0 (- batch sequence-length) sequence-length))
  (for [start batch-count] ; Batch
    (setv x (np.zeros (, batch-size sequence-length))
          y (np.zeros (, batch-size sequence-length uniques)))
    (for [index (range batch-size)]    ; Batch row
      (for [i (range sequence-length)] ; Batch column
        (setv (get x (, index i))
              (get notes (+ start i (* index batch))))
        (setv (get y (, index i (get notes (+ start i 1 (* index batch)))))
              1)))
    (yield (, x y))))
```",,
4.56227E+17,Deleted User#0000,2019-12-08,"Using Hy to get Python to look better is like the cartoon gag of stomping on a bump in the carpet to flatten it, only for another one to appear elsewhere. :-(",,
4.62028E+17,StephenD#5938,2019-12-08,Is `Hy` _Off Topic_ on this server?,,
4.56227E+17,Deleted User#0000,2019-12-08,"Oh sorry, my rant went a bit overboard.",,
2.66505E+17,notjack#9941,2019-12-09,I started working on an RFC for stream pipelines powered by transducers and reducers: https://github.com/jackfirth/rhombus-brainstorming/blob/stream-pipeline/stream_pipelines.md,,üëç (2)
1.9353E+17,sodaplayer#1456,2019-12-09,Reading up on Transducers a bit more. I'm a bit reminded of Rx stuff. Am I on the right track in understanding them? What's the difference between Rx Observables and them?,,
2.66505E+17,notjack#9941,2019-12-09,They're similar. The big difference is that transducers are not concurrent.,,
2.66505E+17,notjack#9941,2019-12-09,"So you can do stuff like sorting and filtering, but you can't make a transducer that does something like ""add a one-second delay between each element""",,
2.66505E+17,notjack#9941,2019-12-09,"If you're familiar with Rx operators, `debounce` and `throttle` are good examples of Rx features that can't be modeled with transducers (nor should they be)",,
4.66395E+17,oaktownsam#0815,2019-12-09,"This is probably completely different from what you're talking about but ...

Couldn't you make a transducer that spawns a thread and is connected to the rest of the pipeline using channels?",,
4.66395E+17,oaktownsam#0815,2019-12-09,(or even one that starts a separate place?),,
2.66505E+17,notjack#9941,2019-12-09,"You could, but please don't :p",,
2.66505E+17,notjack#9941,2019-12-09,Doing any sort of communication in the handlers given to `make-transducer` will cause problems,,
2.66505E+17,notjack#9941,2019-12-09,"(I'm not sure _what_ problems, but there will definitely be problems)",,
4.66395E+17,oaktownsam#0815,2019-12-09,"I tried to make a transducer (for ""fun"") that worked like this (but with continuations):

```
(magicking 
  (lambda (read write)
    ...))
```

Where the `read : -> value` and `write : value -> Void` are connected to the callbacks.",,
4.66395E+17,oaktownsam#0815,2019-12-09,"It's fairly trivial with channels and could be mostly synchronous with the rest of the transducer processes (I think.)

Like some things I don't have a use-case so it's not really worth pursuing",,
2.66505E+17,notjack#9941,2019-12-09,does it work like `mapping` where it just alternates between consuming and emitting?,,
4.66395E+17,oaktownsam#0815,2019-12-09,No you could call one or the other.  Actually I can see it getting into a weird wedged state.,,
4.66395E+17,oaktownsam#0815,2019-12-09,Anyway not worth doing üôÇ,,
4.66395E+17,oaktownsam#0815,2019-12-09,More of a puzzle to see if it could fit.,,
2.66505E+17,notjack#9941,2019-12-09,Ohhhhhh now I see what you're going for,,
2.66505E+17,notjack#9941,2019-12-09,So it'd work like `yield` does in Python coroutines?,,
4.66395E+17,oaktownsam#0815,2019-12-09,yes,,
4.66395E+17,oaktownsam#0815,2019-12-09,Or like a unix process connected to pipes,,
2.66505E+17,notjack#9941,2019-12-09,Yeah that'd be awesome and it should be totally doable,,
2.66505E+17,notjack#9941,2019-12-09,@oaktownsam Can you actually write that idea down in a github issue?,,
4.66395E+17,oaktownsam#0815,2019-12-09,Sure üòÑ,,"üòÅ (1),üò∏ (1)"
2.66505E+17,notjack#9941,2019-12-10,@oaktownsam I spent some time trying to figure out how a continuation-based transducer thingy would work. This gist is as far as I got: https://gist.github.com/jackfirth/027411d567385dadb3202bee75a847b4,,
4.66395E+17,oaktownsam#0815,2019-12-10,I'll have to see if I can find what I worked out.  It didn't quite work.,,
2.66505E+17,notjack#9941,2019-12-10,"this is the kind of thing I'd like to end up with:
```
(define (mapping f)
  (transducer
    (let loop ()
      (define next (consume!))
      (emit! (f next))
      (loop))))
```",,
4.66395E+17,oaktownsam#0815,2019-12-11,`consume!` and `emit!` would be local? or syntax?,,
2.66505E+17,notjack#9941,2019-12-11,Syntax parameters,,
2.66505E+17,notjack#9941,2019-12-11,Also `(define f consume!)` shouldn't work,,
2.66505E+17,notjack#9941,2019-12-11,I think,,
4.66395E+17,oaktownsam#0815,2019-12-11,Ok.  You want to ensure the coroutine/continuation bits don't escape.,,
4.66395E+17,oaktownsam#0815,2019-12-11,"Ugh, I'm writing something right now where this would be handy...",,
2.66505E+17,notjack#9941,2019-12-11,Whatcha writing?,,
1.93202E+17,rocketnia#4517,2019-12-11,"Even with syntax parameters like those, they can escape in all the same ways. Are there ways of escaping you want to prevent?",,
1.93202E+17,rocketnia#4517,2019-12-11,"oh, I missed the `(define f consume!)` thing",,
1.93202E+17,rocketnia#4517,2019-12-11,should `(for-each (lambda (item) (emit! item)) lst)` work?,,
1.93202E+17,rocketnia#4517,2019-12-11,or `(define (f x) (emit! x))`?,,
2.66505E+17,notjack#9941,2019-12-11,I don't plan on preventing those. Maybe it's not worth bothering to prevent `(define f emit!)` either then.,,
2.66505E+17,notjack#9941,2019-12-11,I was looking more for a way to avoid surprising people who are used to things like `yield` and `return` not being actual functions,,
1.93202E+17,rocketnia#4517,2019-12-11,I think I wouldn't prevent it,,
1.93202E+17,rocketnia#4517,2019-12-11,"in your example, `loop` itself is a function that captures `emit!` and `consume!` and can let them escape",,
1.93202E+17,rocketnia#4517,2019-12-11,"I think if you want to enforce that `yield` only works directly within its body, like JavaScript (maybe Python and C# too?), then that's possible by designing forms like `lambda` and `define` and `let` so that they unbind `consume!` and `emit!` (or if unbinding them isn't possible, then at least binding them to things that cause errors)",,
2.66505E+17,notjack#9941,2019-12-11,"I get that, yeah",,
1.93202E+17,rocketnia#4517,2019-12-11,"hmm, essentially the point of that restriction is to make the power of `yield` be equivalent to a local CPS translation, rather than needing a run time model of continuations",,
2.66505E+17,notjack#9941,2019-12-11,"I was vaguely imagining some distant future where there's a way for macros to communicate control flow information about their subexpressions, so you could 1) enforce that stuff doesn't escape or 2) statically optimize continuations away",,
2.66505E+17,notjack#9941,2019-12-11,like a type system but for control flow,,
1.93202E+17,rocketnia#4517,2019-12-11,"yeah, statically optimizing this would be nifty",,
2.66505E+17,notjack#9941,2019-12-11,I think there's no point trying to halfway (more like tenthway) enforce that though,,
2.66505E+17,notjack#9941,2019-12-11,"So sure, higher order `emit!` and `consume!` sounds good",,
1.93202E+17,rocketnia#4517,2019-12-11,"Hmm, I think `consume!` should return an option value, unless you don't want these to be able to emit things after they're half-closed",,üëç (1)
2.66505E+17,notjack#9941,2019-12-11,"Oh right, good idea",,
1.93202E+17,rocketnia#4517,2019-12-11,There was a generator library I wrote for Arc once... and I put in an operation for defining a generator in `yield` style using continuations,,
1.93202E+17,rocketnia#4517,2019-12-11,and the performance was just bad enough that I decided not to implement anything with that operation,,
1.93202E+17,rocketnia#4517,2019-12-11,so I do expect the same kind of disappointment here. Maybe there's a way to use local expansion with a stop list so that `consume!` and `emit!` are really turned into CPS style,,
2.66505E+17,notjack#9941,2019-12-11,Yeah I'm fully expecting the performance of this to be atrocious.,,
2.66505E+17,notjack#9941,2019-12-11,I'm not going to use it to implement any of the built in transducers,,
2.66505E+17,notjack#9941,2019-12-11,"But it will help me get quick and dirty implementations made when I'm experimenting, and I bet it will help teach people how transducers work.",,"üÜí (1),üôÇ (1)"
4.66395E+17,oaktownsam#0815,2019-12-11,"@notjack nothing fancy, consuming a sequence of rebellion/record with heterogenous fields and having it normalize the fields filling the missing with a `missing-value`.  In a direct style/coroutine transducer I could just write one loop to consume and track the field names and another loop to emit the normalized records.",,
4.66395E+17,oaktownsam#0815,2019-12-11,In the current one I have to think about how it decomposes into the state machine,,
4.66395E+17,oaktownsam#0815,2019-12-11,"which isn't hard, just a little less natural",,
2.66505E+17,notjack#9941,2019-12-11,"@oaktownsam is filling in missing values the only kind of normalizing, or are there other steps too?",,
2.66505E+17,notjack#9941,2019-12-11,also that sounds like `mapping` would work - is there state needed in order to normalize them?,,
4.66395E+17,oaktownsam#0815,2019-12-11,Yes it needs to have seen all of the fields.,,
4.66395E+17,oaktownsam#0815,2019-12-11,It actually needs to do a full pass over the data before it emits,,
2.66505E+17,notjack#9941,2019-12-11,"Huh, why is that? (Wondering if there should be a transducer helper here)",,
2.66505E+17,notjack#9941,2019-12-11,Oh right because it doesn't know what's missing until it's seen everything,,
4.66395E+17,oaktownsam#0815,2019-12-11,yeah,,
4.66395E+17,oaktownsam#0815,2019-12-11,It was either new transducer or hack a copy of `into-table`,,
4.66395E+17,oaktownsam#0815,2019-12-11,Transducer seemed easier to do.,,
2.66505E+17,notjack#9941,2019-12-11,Maybe there could be a transducer in `rebellion/collection/record` that fills in missing fields like that,,
4.66395E+17,oaktownsam#0815,2019-12-11,Oh I have that part,,
4.66395E+17,oaktownsam#0815,2019-12-11,already from something else,,
4.66395E+17,oaktownsam#0815,2019-12-11,`(ensure-fields [#:missing any] (sequence/c keyword?)) -> (record -> record)`,,
4.66395E+17,oaktownsam#0815,2019-12-11,Not a transducer but easy to call from `mapping`,,
4.66395E+17,oaktownsam#0815,2019-12-11,"The last time I did this I just had to normalize to a static set.  So I used `(mapping (ensure-fields ...))`

This time was more ... dynamic.

Here's what I worked out:
https://gist.github.com/samdphillips/e140877368c94658b102a9e4cb2a1ee7",,
2.66505E+17,notjack#9941,2019-12-11,"What I was thinking was a transducer like `adding-missing-record-fields` that consumed all the records, determined the total set of field names, then emitted the records with values replaced by `option`s to indicate whether they were originally present or not.",,
4.66395E+17,oaktownsam#0815,2019-12-11,that is a possibility.  I know personally the first step after that I would just unwrap the options and put a sentinel for the `absents`s,,
2.66505E+17,notjack#9941,2019-12-11,Related idea: a `(buffering-all [into (reducer/c any? (sequence/c any?))]) -> transducer?` function,,
2.66505E+17,notjack#9941,2019-12-11,@oaktownsam where did the data come from such that it has arbitrary fields you don't know up front?,,
2.66505E+17,notjack#9941,2019-12-11,some sort of extensible schemaless storage system or something?,,
4.66395E+17,oaktownsam#0815,2019-12-11,"Configuration files.  It's not that they're unknown, it's just for day to day work it's easier to treat them as having an unknown schema and then having the system work it out.

Also sometimes the files are in the same format but different schema.",,
2.66505E+17,notjack#9941,2019-12-11,"Ah, that makes sense. Are you the one who decides what goes in those files? Or is that up to other people?",,
4.66395E+17,oaktownsam#0815,2019-12-11,It's enterprise software so the file design is out of my hands.  I just can use whatever I want to manipulate it.,,
2.66505E+17,notjack#9941,2019-12-11,Gotcha,,
2.66505E+17,notjack#9941,2019-12-11,I put together a basic microbenchmarking system!,https://cdn.discordapp.com/attachments/618895179343986688/654533415030226954/unknown.png,
2.66505E+17,notjack#9941,2019-12-11,This version might be easier to read,https://cdn.discordapp.com/attachments/618895179343986688/654533839548317697/unknown.png,
4.63566E+17,Consistency#0001,2019-12-12,"You know, I saw a thread a couple months ago on hacker news that Racket 2.0 might not be a Lisp to get more investors. Is that still a thing?",,
4.62028E+17,StephenD#5938,2019-12-12,"I believe it is definitely on the cards. 
But it important to remember that ‚Äòlisp‚Äô Racket won‚Äôt go away, and it has had multiple major changes including splitting away from scheme, because it is a language engineering platform. You can still run  the code from The Little Schemer, HTDP 1st Ed., or SICP. 

The rhombus-brainstorming github repository is where it is being worked through https://github.com/racket/rhombus-brainstorming/blob/master/resources/goals.md",,
2.66505E+17,notjack#9941,2019-12-12,"It's less ""racket2 won't be a lisp"" and more ""there's going to be a new language you can choose to use instead of racket, just like how you can choose to use typed racket instead of normal racket""",,üëç (2)
2.66505E+17,notjack#9941,2019-12-12,and it definitely has nothing to do with investors or anything like that,,‚òùÔ∏è (1)
4.62028E+17,StephenD#5938,2019-12-12,"A new language on racket is more like changing your boots. Contrast that to almost any other language (C++, Python, Perl) where it is more like open heart surgery.",,üëç (4)
4.62028E+17,StephenD#5938,2019-12-12,Plus the core team are massive ‚ÄòLisp-heads‚Äô(M Flatt admitted to this live on stage),,
4.63566E+17,Consistency#0001,2019-12-12,"Hahaha yeah for sure. I was looking into C++ Schemes to put on top of Unreal 4, and the set up for the ones I looked at are all a real nightmare.
Well, that's all good to hear then",,
4.62028E+17,StephenD#5938,2019-12-12,(And they build languages like I collect stamps! - the main dist comes with Algol68!),,
4.63566E+17,Consistency#0001,2019-12-12,Hahaha,,
4.63566E+17,Consistency#0001,2019-12-12,"That does seem pretty unnecessary, that's hilarious",,
4.62028E+17,StephenD#5938,2019-12-12,What about Chez?,,
4.62028E+17,StephenD#5938,2019-12-12,https://groups.google.com/forum/m/#!msg/racket-dev/2BV3ElyfF8Y/4RSd3XbECAAJ,,
4.63566E+17,Consistency#0001,2019-12-12,"Chez did actually look the best, and possibly Bigloo. Guile Scheme was the one that I really didn't like the looks of. In the end I didn't need to implement one at all",,
4.62028E+17,StephenD#5938,2019-12-12,M Flatt is building a new racket backend on Chez,,
4.63566E+17,Consistency#0001,2019-12-12,"Ah, that's interesting!",,
4.62028E+17,StephenD#5938,2019-12-12,What did you end up using instead,,
4.63566E+17,Consistency#0001,2019-12-12,"I'd still kind of want to go through the process of implementing one of those at some point, but somebody implemented Python into Unreal 4 and it's crazy mature. I just threw Hy on top of it and it's been working amazingly",,üëç (2)
2.66505E+17,notjack#9941,2019-12-12,totally unrelated: today I am sad because `(transduce some-vector #:into into-list)` is about _two thousand times slower_ than `(vector->list some-vector)` üò¶,,üò≠ (2)
2.66505E+17,notjack#9941,2019-12-12,(for context see here https://github.com/jackfirth/rebellion/issues/351#issuecomment-564909375),,
4.63566E+17,Consistency#0001,2019-12-12,Hahaha that's rough,,
2.66505E+17,notjack#9941,2019-12-12,Atomichron docs available! https://docs.racket-lang.org/atomichron/index.html?q=atomichron,,
4.66395E+17,oaktownsam#0815,2019-12-12,@notjack it is frustrating because the transducer protocol is actually a nicely elegant way to generalize the streaming problem.,,üò¢ (1)
2.66505E+17,notjack#9941,2019-12-12,@oaktownsam agreed. Step 1 is write a bunch of benchmarks I guess.,,
2.66505E+17,notjack#9941,2019-12-12,@oaktownsam how do you feel about the srfi 171 transducers?,,
4.66395E+17,oaktownsam#0815,2019-12-12,I really haven't looked at them besides reading the spec.,,
2.66505E+17,notjack#9941,2019-12-12,"Me neither, except I keep running into the person implementing them. Both on Reddit and the mailing list.",,
4.66395E+17,oaktownsam#0815,2019-12-12,I've noticed üôÇ,,
4.62028E+17,StephenD#5938,2019-12-13,yes he monitors the reddit and pops up whenever I post transducers news. Said he was working on a racket port.,,
3.46063E+17,makai#7319,2019-12-13,"are there general design patterns used in lisps? in the ML family I represented state as discriminated unions and matched on that, but unsure what's best here. seems like it's pushing me to do something OO-esque",,
2.66505E+17,notjack#9941,2019-12-13,I don't think there's many named and well-studied API design patterns in lisp like there are in Java/c#/c++/etc.,,
2.66505E+17,notjack#9941,2019-12-13,That tends to result from having lots of very large-scale codebases and a community of people who do lots of refactoring of legacy code,,
2.66505E+17,notjack#9941,2019-12-13,Pattern matching on an open union (different cases = actually different types of their own) would be my preferred way of doing what you describe,,
3.46063E+17,makai#7319,2019-12-13,what's the best way to make unions in racket,,
2.66505E+17,notjack#9941,2019-12-13,"```
(struct left (value) #:transparent)
(struct right (value) #:transparent)

(define (either-case either left-handler right-handler)
  (match either
    [(left v) (left-handler v)]
    [(right v) (right-handler v)]))
```",,
2.66505E+17,notjack#9941,2019-12-13,that's how I usually do it,,
4.66395E+17,oaktownsam#0815,2019-12-13,aside: someday the design patterns that exist should probably be documented.,,‚ûï (1)
2.66505E+17,notjack#9941,2019-12-14,"as part of advent of code day 6 I made a graph API for Racket:

```
(provide
 (contract-out
  [graph? predicate/c]
  [empty-graph empty-graph?]
  [empty-graph? predicate/c]
  [nonempty-graph? predicate/c]
  [graph-vertices (-> graph? set?)]
  [graph-edges (-> graph? multidict?)]
  [graph-insert-vertex (-> graph? any/c graph?)]
  [graph-insert-vertices (-> graph? (sequence/c any/c) graph?)]
  [graph-insert-edge
   (->* (graph? any/c any/c) (#:undirected? boolean?) graph?)]
  [graph-insert-edges
   (->* (graph? (sequence/c entry?)) (#:undirected? boolean?) graph?)]
  [graph-remove-vertex (-> graph? any/c graph?)]
  [graph-remove-vertices (-> graph? (sequence/c any/c) graph?)]
  [graph-remove-edge (->* (graph? any/c any/c) (#:undirected? boolean?) graph?)]
  [into-undirected-graph reducer?]
  [into-directed-graph reducer?]
  [in-graph-topological-sort (-> graph? (sequence/c any/c))]
  [graph-terminal-vertices (-> graph? set?)]
  [graph-initial-vertices (-> graph? set?)]
  [graph-outgoing-edges (-> graph? any/c set?)]
  [graph-incoming-edges (-> graph? any/c set?)]
  [graph-inverse (-> graph? graph?)]))
```",,"üíÆ (1),ü•á (1)"
4.66395E+17,oaktownsam#0815,2019-12-14,Functional?,,
4.66395E+17,oaktownsam#0815,2019-12-14,"I just made a minimal interface to https://pkgs.racket-lang.org/package/graph

https://github.com/samdphillips/aoc-2019/blob/master/06.rkt#L19",,
4.66395E+17,oaktownsam#0815,2019-12-14,@notjack https://github.com/jackfirth/rebellion/issues/192 üòÑ,,
4.66395E+17,oaktownsam#0815,2019-12-14,The best part of making a TODO list is checking things off.,,
2.66505E+17,notjack#9941,2019-12-14,"@oaktownsam yup, they're persistent immutable graphs!",,
4.66395E+17,oaktownsam#0815,2019-12-14,Nice,,
2.66505E+17,notjack#9941,2019-12-15,So here's an idea,,
2.66505E+17,notjack#9941,2019-12-15,"Rust/C++/C/etc. can avoid a lot of work done by GC'd langs by passing around data structures on the stack rather than the heap, especially when those structures don't have complex lifetimes",,
2.66505E+17,notjack#9941,2019-12-15,"What if `rebellion/type` could ""fake"" stack allocation using Racket's multiple return values?",,
2.66505E+17,notjack#9941,2019-12-15,"So if you had a `point` type with an `x` and a `y` field, and a `distance` function accepting two points, you could call that function like this:
```
(distance [point p1] [point p2])
```
...and that would actually be short for passing the fields directly, like this:
```
(define p1.x p1.y p2.x p2.y)
```",,
2.66505E+17,notjack#9941,2019-12-15,and somehow combine that with a `point` constructor that doesn't actually construct a point but instead just returns the two fields as two separate return values,,
2.66505E+17,notjack#9941,2019-12-15,I'm gonna sleep on that thought,,
4.66395E+17,oaktownsam#0815,2019-12-15,I have a half baked http library that is built on `net/http-client` and while I was working on interfacing to an http-response type I was thinking of something like that.,,
4.66395E+17,oaktownsam#0815,2019-12-15,Like how you can avoid the allocation.,,
3.46063E+17,makai#7319,2019-12-18,is there for me to make a scoped block like in c++ or rust,,
3.46063E+17,makai#7319,2019-12-18,without making a local function and executing it,,
3.46063E+17,makai#7319,2019-12-18,"```fn fn_name() {
    { // scope a
        let a = 0;
    }

    { // scope b
        let a = 3;
    }
}```",,
3.46063E+17,makai#7319,2019-12-18,this kind of thing,,
4.89956E+17,WillBAnders#5226,2019-12-18,begin?,,
3.46063E+17,makai#7319,2019-12-18,"```(define (f)
  (begin
    (define a 0))

  (begin
    (define a 1)))```",,
3.46063E+17,makai#7319,2019-12-18,not working,,
3.46063E+17,makai#7319,2019-12-18,they're in the same scope,,
4.89956E+17,WillBAnders#5226,2019-12-18,If you just want something temporary I would go with `let`,,
4.66395E+17,oaktownsam#0815,2019-12-18,"```
(let ([a 0]) ...)
(let ([a 42] ...)
```",,
3.46063E+17,makai#7319,2019-12-18,i'm not iterating over a list and i need a lot of variables in each scope,,
3.46063E+17,makai#7319,2019-12-18,can i do something like (let () ...),,
4.89956E+17,WillBAnders#5226,2019-12-18,"You have a few options depending on what you need:
```
(let ([a 0]
      [b 1])
     ...)
```
```
(let* ([a 0]
       [b a]
      ...)
```
The second allows for earlier bindings to be used.",,
2.66505E+17,notjack#9941,2019-12-18,"You can do `(let () ...)`. However, there's also `block` from the `racket/block` module:
```
(define (f)
  (block
   (define a 0))
  (block
   (define a 1)))
```
I find `block` to be more self-descriptive than `(let () ...)`. With the latter it's not clear to people why you're using the let unless they've seen this trick before.",,üëç (1)
4.66395E+17,oaktownsam#0815,2019-12-18,Very true.,,
4.66395E+17,oaktownsam#0815,2019-12-18,I'm too old and schemey to remember `block`,,ü§£ (1)
2.66505E+17,notjack#9941,2019-12-18,In practice I never use it either,,
2.66505E+17,notjack#9941,2019-12-21,"Does this seem readable?
```
(define-microbenchmark (sequence-ref-benchmark indexed-getter maker)
  #:iterations 1000
  #:microiterations 100000

  (before-all-benchmarks
   (define size 100)
   (define data (build-immutable-vector size values))
   (define indices
     (vector->immutable-vector
      (for/vector #:length num-iterations
        ([_ (in-naturals)])
        (random size)))))

  (before-each-benchmark
   (define seq (maker data))
   (collect-garbage)
   (collect-garbage)
   (collect-garbage))

  (before-each-iteration
   (define index (vector-ref indices current-iteration)))
  
  (indexed-getter seq index))
```",,
2.66505E+17,notjack#9941,2019-12-21,"The magic bits are `before-all-benchmarks`, `before-each-benchmark`, `before-each-iteration`, `num-iterations`, and `current-iteration`. Those are all macros that cooperate with `define-microbenchmark`.",,
4.56227E+17,Deleted User#0000,2019-12-21,Seems good to me.,,
4.66395E+17,oaktownsam#0815,2019-12-21,üëç,,
4.66395E+17,oaktownsam#0815,2019-12-21,Re: `block` I'm actually using it today.  But it's not in `racket/base` or `racket` which is a bit nuts,,
4.56227E+17,Deleted User#0000,2019-12-21,Wow `block` is 80 lines.,,
4.56227E+17,Deleted User#0000,2019-12-21,I thought it'd be a simple macro.,,
4.63566E+17,Consistency#0001,2019-12-22,"Still using Hy in Unreal 4. It's still amazing. I wish I was working on it right now, but instead I've been at the airport waiting for my flight to California for 9 hours with my twin brother",,
4.56227E+17,Deleted User#0000,2019-12-22,Such is life~,,
4.63566E+17,Consistency#0001,2019-12-22,"Yeah, I don't mind the delays too much. I'm terrified of flying though",,
4.63566E+17,Consistency#0001,2019-12-22,I wanna get it over with already,,
4.56227E+17,Deleted User#0000,2019-12-22,Ohh,,
4.63566E+17,Consistency#0001,2019-12-22,"Also we're landing in LAX instead of John Wayne, so there's going to be a bunch of people protesting",,
4.63566E+17,Consistency#0001,2019-12-22,Sounds like a nightmare,,
4.56227E+17,Deleted User#0000,2019-12-22,Xmas traffic sounds horrible.,,
4.56227E+17,Deleted User#0000,2019-12-22,:meowmas:,,
4.56227E+17,Deleted User#0000,2019-12-22,I've got an idea.,,
4.56227E+17,Deleted User#0000,2019-12-22,Prompted by a thread on Mastodon: Top level pattern matching defun √† la Haskell and Erlang.,,
4.56227E+17,Deleted User#0000,2019-12-22,Like an exploded `define/match`,,
4.56227E+17,Deleted User#0000,2019-12-22,"eg
```Racket
(defun (factorial 0) 1)
(defun (factorial n) (* n (factorial (sub1 n))))
```",,
4.56227E+17,Deleted User#0000,2019-12-22,"Pseudocode algorithm I'm thinking of:
```
(if (identifier-bound? #'name)
  (let ((old-func name))
    (set! name (Œª args (match args [params body] [else (old-func params)])))
  (define name (Œª args (match args [params body])))))
```",,
4.56227E+17,Deleted User#0000,2019-12-22,Probably with `syntax-parse`,,
4.56227E+17,Deleted User#0000,2019-12-22,Has anyone done something like this before?,,
4.56227E+17,Deleted User#0000,2019-12-22,"So the original definition becomes something along the lines of
```Racket
(define factorial (Œª args (match args [(list 0) 1])))
(let ((old factorial))
  (set! factorial (Œª args (match args [(list n) (* n (factorial (sub1 n)))] [else (apply old-fac args)]))))
```",,
4.56227E+17,Deleted User#0000,2019-12-22,But no wait,,
4.56227E+17,Deleted User#0000,2019-12-22,The precedence matters... hmm,,
4.56227E+17,Deleted User#0000,2019-12-22,"If I gave it `(factorial 0)`, it'd match it to `n` first and get stuck in a loop.",,
4.56227E+17,Deleted User#0000,2019-12-22,I wonder how Haskell handles it. I know Erlang considers procedures of different arities to be entirely different entities.,,
4.56227E+17,Deleted User#0000,2019-12-22,Maybe by keeping the patterns in a table?,,
4.56227E+17,Deleted User#0000,2019-12-22,"Ah, right `define/match` is fixed arity too.",,
2.66505E+17,notjack#9941,2019-12-22,I've wanted that too,,
2.66505E+17,notjack#9941,2019-12-22,"I wonder if something based on `local-expand` would work, like how racket transforms local definitions (with `define`) into nested lets.",,
2.66505E+17,notjack#9941,2019-12-22,"```
(match-case-definitions
  (define (factorial 0) 1)
  (define (factorial n) (* n (factorial (sub1 n))))
```",,
4.66395E+17,oaktownsam#0815,2019-12-22,With a fixed number of patterns `match*` will save you a list allocation,,üëç (1)
2.66505E+17,notjack#9941,2019-12-22,"where `match-case-definitions` calls `local-expand` on its body with a stop list, looking for inidividual case definitions",,
4.56227E+17,Deleted User#0000,2019-12-22,I wonder if it's possible to make it go through an arbitrarily sorted list of patterns and match the one that fits the best.,,
4.56227E+17,Deleted User#0000,2019-12-22,eg `zero?` is more strict than `number?`,,
4.56227E+17,Deleted User#0000,2019-12-22,I'm sure it'd be much easier with Typed Racket.,,
2.66505E+17,notjack#9941,2019-12-22,`syntax-parse` patterns do that,,
2.66505E+17,notjack#9941,2019-12-22,"the pattern matcher records how much ""progress"" each pattern makes and selects the pattern that makes the most progress",,
4.56227E+17,Deleted User#0000,2019-12-22,Oooh,,
2.66505E+17,notjack#9941,2019-12-22,"if none of the patterns match, it selects the pattern that made the most progress and uses that one to show the error message",,
2.66505E+17,notjack#9941,2019-12-22,there's a really neat paper about it,,
4.56227E+17,Deleted User#0000,2019-12-22,Lovely!,,
4.56227E+17,Deleted User#0000,2019-12-22,Can you link the paper?,,
4.56227E+17,Deleted User#0000,2019-12-22,I assume it was mflatt's.,,
2.66505E+17,notjack#9941,2019-12-22,"it's ryan culpepper's (and matthias's), he designed the syntax-parse system",,
2.66505E+17,notjack#9941,2019-12-22,https://www2.ccs.neu.edu/racket/pubs/icfp10-cf.pdf,,
4.56227E+17,Deleted User#0000,2019-12-22,Oh I didn't know.,,
4.56227E+17,Deleted User#0000,2019-12-22,I know so little about `syntax-parse` now that I think of it.,,
4.56227E+17,Deleted User#0000,2019-12-22,I've used `syntax-rules` and `syntax-case` only for a long time.,,
4.56227E+17,Deleted User#0000,2019-12-22,"I really like what I've seen of `syntax-parse`, enough to hope for its eventual backport to Scheme.",,
2.66505E+17,notjack#9941,2019-12-22,"to get started with `syntax-parse` quickly, take any macro you've written with `define-syntax-rule` and change it to use `define-simple-macro` (from the `syntax/parse/define` library). You won't have to change anything about the macro, it will work exactly the same. But then you can add syntax classes if you want.",,
2.66505E+17,notjack#9941,2019-12-22,"For example, say you start with this:
```
(define-syntax-rule (mylet name expression body ...)
  (let ([name expression]) body ...))
```",,
4.56227E+17,Deleted User#0000,2019-12-22,So it's a superset?,,
2.66505E+17,notjack#9941,2019-12-22,"You can switch it to this:
```
(require syntax/parse/define)

(define-simple-macro (mylet name expression body ...)
  (let ([name expression]) body ...))
```
...and it works the same",,
2.66505E+17,notjack#9941,2019-12-22,"Pretty much, yes",,
2.66505E+17,notjack#9941,2019-12-22,"For that `mylet` macro, you could then make it handle malformed input better by doing this:
```
(require syntax/parse/define)

(define-simple-macro (mylet name:id expression:expr body:expr ...+)
  (let ([name expression]) body ...))
```",,
4.56227E+17,Deleted User#0000,2019-12-22,Ohh,,
4.56227E+17,Deleted User#0000,2019-12-22,That's the syntax system Honu's macros are built upon.,,
2.66505E+17,notjack#9941,2019-12-22,"The `:id` and `:expr` parts indicate that the thing to the left of the colon must match the _syntax class_ indicated on the right of the colon, so `name` must be a single identifier, `expression` and `body` must be expressions (which is ""anything except a `#:keyword`""), and `...+` means ""one or more times"" (in contrast to `...`, which allows it to match zero times).",,
4.66395E+17,oaktownsam#0815,2019-12-22,TIL: I am almost exactly 2 years younger than Scheme.,,
2.66505E+17,notjack#9941,2019-12-24,transducer quality-of-life improvements today!,https://cdn.discordapp.com/attachments/618895179343986688/659184967305134094/unknown.png,
2.66505E+17,notjack#9941,2019-12-26,@WillBAnders I think I'm going to work on adding ranges to rebellion. Should I try to pick up where your pull request leaves off? Alternatively I could attempt an entirely separate pull request.,,
4.89956E+17,WillBAnders#5226,2019-12-26,I haven't abandoned it; been working on other things a bit and awaiting some feedback. If you want to put something together as well a separate PR is probably best as you'll have some other ideas I'm sure.,,
2.66505E+17,notjack#9941,2019-12-26,"I'm feeling pretty motivated tonight so I think I'll give a separate PR a shot in order to explore the design space more. I'll still try to respond to your PR with more feedback, and I'll ask for your feedback on mine.",,
4.89956E+17,WillBAnders#5226,2019-12-26,sounds good,,
2.66505E+17,notjack#9941,2019-12-27,Here's what I've got so far:,https://cdn.discordapp.com/attachments/618895179343986688/660019487789285386/Screen_Shot_2019-12-26_at_11.20.57_PM.png,
2.66505E+17,notjack#9941,2019-12-27,"There's also several convenience constructors:
```
(closed-range 2 7) ; [2..7]
(open-range 2 7) ; (2..7)
(closed-open-range 2 7) ; [2..7)
(open-closed-range 2 7) ; (2..7]
(at-least 5) ; [5..)
(at-most 5) ; (..5]
(greater-than 5) ; (5..)
(less-than 5) ; (..5)
```",,
2.66505E+17,notjack#9941,2019-12-28,"@WillBAnders I've got enough range stuff implemented that I'm probably going to merge it soon, just FYI",,
2.66505E+17,notjack#9941,2019-12-28,enum types!,https://cdn.discordapp.com/attachments/618895179343986688/660589808221028372/unknown.png,
4.56227E+17,Deleted User#0000,2019-12-28,Is there a library of Racket papers somewhere?,,
4.89956E+17,WillBAnders#5226,2019-12-28,"@notjack I can take a look later tonight, been out for an event for the past day. My main consideration would be whether that meets the design goals, and in particular what those design goals are as mine are different from yours.",,
2.66505E+17,notjack#9941,2019-12-28,@WillBAnders Happy to hear more about yours,,
2.66505E+17,notjack#9941,2019-12-28,@Deleted User Good question,,
4.66395E+17,oaktownsam#0815,2019-12-28,"@notjack I haven't caught up on my github emails, have you replaced the comparator values with enum types?",,
4.66395E+17,oaktownsam#0815,2019-12-28,@Deleted User a lot here https://www2.ccs.neu.edu/racket/pubs/,,
2.66505E+17,notjack#9941,2019-12-29,"@oaktownsam not yet, I haven't used enum types to implement anything yet",,
2.66505E+17,notjack#9941,2019-12-29,"I probably will, but it should only be backwards compatible changes in implementations",,
2.66505E+17,notjack#9941,2019-12-29,Shouldn't change any APIs anywhere,,
4.89956E+17,WillBAnders#5226,2019-12-29,"@notjack Okay, so I think the main thing here is establishing the design goals and in particular what the use case is. The API you have is similar to Guava, so I'm familiar with it in that regard.

My primary design goal is to have short, clear, and consistent syntax for creating ranges. I see there being two primary use cases - one as a precursor for iteration, and the other as being a container for predicates.

One thing that consistently bothers me about many functional languages is the lack of namespacing on things. Things like `(at-most 5)` leave a bit to be desired in that regard, and it seems like Racket is lacking polymorphism (or at least, easy polymorphism) to improve the situation there. Elixir does both of these quite well.

One of the goals that both of us shared was the case of dealing with inclusivity as an input parameter. In my opinion, this problem still exists because you have to do `(if inclusive (inclusive-bound value) (exclusive-bound value)`. This is one of the reasons I decided to avoid making these singleton types, as inclusivity is naturally true/false and I see this as overengineering.

I think the core thing is to decide what this is supposed to do and get on the same page with that before anything else.",,
2.66505E+17,notjack#9941,2019-12-29,"@WillBAnders My goals mostly center around using ranges to build other APIs, like range collections and query DSLs.

I hear you about the namespacing and inclusivity-as-an-input-parameter. For the namespacing, I think the `at-most`, `at-least`, `greater-than`, and `less-than` names ought to be changed. Simplest change would be to add the `-range` suffix to them, like the `closed-range`, `open-range`, etc. constructors.

For inclusivity, what about adding a range bound constructor like `(range-bound [value any/c] [type range-bound-type?])`? So instead of this:

```
(define (build-range)
  (if (compute-should-be-inclusive?)
      (inclusive-bound v)
      (exclusive-bound v)))
```

You'd do this:

```
(define (build-range)
  (range-bound v (compute-bound-type)))

(define (compute-bound-type)
  (if (should-be-inclusive?) inclusive exclusive))
```

I don't think booleans fit well here because boolean input parameters are hard to read without context. `(range-bound v #t)` doesn't clearly communicate that it's an inclusive bound. Normally I fix that problem with keyword parameters like `(range-bound v #:inclusive? #t)`, but that's overly awkward for _required_ parameters. If the inclusivity were an optional parameter, it'd have to default one way or the other, but there isn't an obvious default so any choice would be arbitrary and make it hard to tell what `(range-bound v)` means.",,
4.89956E+17,WillBAnders#5226,2019-12-29,"I personally don't think bounds should be exposed in the API.

Something like `(range-bound v #t)` is only awkward if you're providing a literal. If it's a variable, then you end up with `(range-bound v lower-inclusive)` or whatever. If it is a literal, then use one of the other default forms.",,
2.66505E+17,notjack#9941,2019-12-29,"If it's a variable, it's still awkward because you have to remember whether true or false means inclusive or exclusive when you're _producing_ the value.",,
4.89956E+17,WillBAnders#5226,2019-12-29,True is always inclusive. There's plenty of other places to go wrong and somewhere along the line it's a boolean. Treating it as anything other than a boolean makes no sense to me.,,
2.66505E+17,notjack#9941,2019-12-29,I don't really see why true would always be inclusive. That doesn't seem obvious to me.,,
4.89956E+17,WillBAnders#5226,2019-12-29,Always form the question as isInclusive,,
2.66505E+17,notjack#9941,2019-12-29,"I don't see why that's the default decision. I could certainly _choose_ to do that, but I'd have to remember that choice and remember to always be consistent with it. The point of an enum is to use names so I don't have to remember things like that.",,
4.89956E+17,WillBAnders#5226,2019-12-29,"I'd be more comfortable with that if enums were easy to work with, but they're not. Ultimately I don't use Racket though so it's whatever.",,
4.89956E+17,WillBAnders#5226,2019-12-29,"Dynamic typing and me do not get along in the slightest, and no namespacing makes it significantly worse.",,
2.66505E+17,notjack#9941,2019-12-29,"I did just add enum types to rebellion last night so you don't have to make a singleton for each case, does that help?",,
2.66505E+17,notjack#9941,2019-12-29,"i.e. instead of this:

```
(define-singleton-type inclusive)
(define-singleton-type exclusive)

(define (range-bound-type? v) (or (inclusive? v) (exclusive? v)))
```

You can now write this:

```
(define-enum-type range-bound-type (inclusive exclusive))
```",,
4.89956E+17,WillBAnders#5226,2019-12-29,"I saw. I would end up with something like this myself:
```
(enum-case x
  [up (...)]
  [down (...)]
  [left (...)]
  [right (...)]
  #:else (...))
```",,
4.89956E+17,WillBAnders#5226,2019-12-29,"At the same time, I would personally always end up in the mindset of isItInclusive true/false.",,
4.89956E+17,WillBAnders#5226,2019-12-29,Because there's only ever two possibilities.,,
2.66505E+17,notjack#9941,2019-12-29,That's a totally reasonable mindset. I merely would like to be considerate of those (such as myself) who have trouble being so consistent with decisions like that. I've got adhd so I tend to forget which way I did something the last time I did it.,,
4.89956E+17,WillBAnders#5226,2019-12-29,"It's a valid concern, and one of the reasons I've grown fond of Elixir's atoms.",,
4.89956E+17,WillBAnders#5226,2019-12-29,"Ultimately the questions that are going to be asked are is it bounded or unbounded, followed by is the bound inclusive or exclusive. Those are definitely boolean results there. Having to span out to an enum-case can get to be a mess at that point.",,
2.66505E+17,notjack#9941,2019-12-29,"I mostly ended up with cond trees that looked like this:

```
(define bound (range-upper-bound range))
(cond
  [(unbounded? bound) ...]
  [(inclusive-bound? bound) ...]
  [else ...]))
```",,
4.89956E+17,WillBAnders#5226,2019-12-29,¬Ø\_(„ÉÑ)_/¬Ø,,
4.89956E+17,WillBAnders#5226,2019-12-29,Ultimately I feel like there's a things happening with types and other stuff that is adding unneeded complexity into things. Exposing bounds is not the way I would go with this as I don't think it's too helpful at that level.,,
2.66505E+17,notjack#9941,2019-12-29,Which level?,,
4.89956E+17,WillBAnders#5226,2019-12-29,API level.,,
4.89956E+17,WillBAnders#5226,2019-12-29,"Implementation can make some use of things, but ultimately in order to use the bound you need to know whether it's a lower bound or upper bound, which is encapsulated at the range level.",,
2.66505E+17,notjack#9941,2019-12-29,"I think the API has two levels to it: the surface level and the data model. The latter needs to be exposed so you can convert ranges to and from other things, like strings of the form ""5 < x <=8"" or database queries. I fully expect most users won't need or care about that level, but anyone who wants to build _libraries_ that incorporate ranges (like a SQL query builder) will need access to the data model. Everyone else will probably use only the smart constructors, the query functions like `range-contains?` and `range-encloses?`, and the operators like `range-span`. In that case they never need to deal with the complexity of the range bound data model at all.",,
4.89956E+17,WillBAnders#5226,2019-12-29,"Most of my use cases are dynamic, so I have more experience at that level that hardcoding things. I'll pull something.",,
4.89956E+17,WillBAnders#5226,2019-12-29,"```
Range<Integer> range = Range.range(
  matcher.group(2).equals(""*"") ? Integer.MIN_VALUE : Integer.parseInt(matcher.group(2)),
  matcher.group(1).equals(""("") ? BoundType.OPEN : BoundType.CLOSED,
  matcher.group(3).equals(""*"") ? Integer.MAX_VALUE : Integer.parseInt(matcher.group(3)),
  matcher.group(4).equals("")"") ? BoundType.OPEN : BoundType.CLOSED)
```",https://cdn.discordapp.com/attachments/618895179343986688/661006505209888789/unknown.png,
4.89956E+17,WillBAnders#5226,2019-12-29,Which uses Guava's range API. Working with that is one of the main reasons I wanted to redesign things because it's a pain.,,
2.66505E+17,notjack#9941,2019-12-29,"Hmm. What if the range API just provided some parsing utils?

```
Range<Integer> range = Range.parser(""["", "")"", ""*"").parse(str);
```",,
4.89956E+17,WillBAnders#5226,2019-12-29,It's too specific.,,
4.89956E+17,WillBAnders#5226,2019-12-29,`5 < x <= 7` couldn't be modeled in that way.,,
4.89956E+17,WillBAnders#5226,2019-12-29,"Ultimately what you have is you have a bound, which could be a value or identifier for unbounded, and some type of representation of whether that's inclusive or not.",,
2.66505E+17,notjack#9941,2019-12-29,"What about `[5, *]` v.s. `[5, *)`?",,
2.66505E+17,notjack#9941,2019-12-29,Really I think the reason that code is a pain is because you're being forced to write a parser for an ad-hoc string format. That's always tricker than dealing with data already in known formats.,,
4.89956E+17,WillBAnders#5226,2019-12-29,It's from user input. No alternative.,,
4.89956E+17,WillBAnders#5226,2019-12-29,"In that case, the system overwrites it to handle as need be. Unbounded is always exclusive.",,
2.66505E+17,notjack#9941,2019-12-29,Not an error?,,
4.89956E+17,WillBAnders#5226,2019-12-29,"No. This can have some consequences, but there's a number of ways to handle them.",,
4.89956E+17,WillBAnders#5226,2019-12-29,"Ultimately an unbounded range does not have inclusivity, which is the advantage that having a bound type has.",,
4.89956E+17,WillBAnders#5226,2019-12-29,"Alternatively, you can define inclusivity for bounded types, which is particularly interesting given that `inf.0` and `-inf.0` exist.",,
4.89956E+17,WillBAnders#5226,2019-12-29,Which gives you a concept of all real numbers.,,
2.66505E+17,notjack#9941,2019-12-29,"right, that's part of what the `Range.canonicalize(DiscreteDomain)` method does in Guava",,
2.66505E+17,notjack#9941,2019-12-29,normalize representation of unboundedness for bounded types,,
4.89956E+17,WillBAnders#5226,2019-12-29,Right.,,
4.89956E+17,WillBAnders#5226,2019-12-29,"I believe this was roughly the approach I used, however I don't recall if exclusive took unbounded things into account. I know the underlying inclusivity was kept.",,
2.66505E+17,notjack#9941,2019-12-29,fyi I just wrote this: https://github.com/jackfirth/rebellion/pull/375,,
2.66505E+17,notjack#9941,2019-12-30,pattern matching for tuple types!,https://cdn.discordapp.com/attachments/618895179343986688/661432507127955496/unknown.png,üíØ (1)
1.93202E+17,rocketnia#4517,2019-12-31,hype :),,üéâ (2)
2.66505E+17,notjack#9941,2020-01-03,üéâ üéâ üéâ https://github.com/jackfirth/rebellion/pull/379,,
4.89956E+17,WillBAnders#5226,2020-01-03,Do you have an example usage somewhere?,,
2.66505E+17,notjack#9941,2020-01-03,"In the docs. The tl;dr:

```
(define-wrapper-type fahrenheit)

(define-tuple-type point (x y))

(define-record-type color (red green blue))

(define-singleton-type null-pointer)

(define-enum-type direction (up down left right))

(define (inspect v)
  (match v
    [(fahrenheit value) 'wrapper]
    [(point x y) 'tuple] ; all fields required
    [(color #:red r #:blue b) 'record] ; not all fields required
    [(== null-pointer) 'singleton]
    [(or (== up) (== down) (== left) (== right)) 'enum]))
```",,
2.66505E+17,notjack#9941,2020-01-04,friday night lambda calculus fun,https://cdn.discordapp.com/attachments/618895179343986688/662960386110390302/Screen_Shot_2020-01-04_at_2.04.39_AM.png,"üëè (3),racket (1)"
4.56227E+17,Deleted User#0000,2020-01-04,Ooh nice,,
2.66505E+17,notjack#9941,2020-01-04,source code here: https://github.com/jackfirth/lambda-calculus,,
4.56227E+17,Deleted User#0000,2020-01-06,How would one implement conditional restarts in Racket?,,
4.56227E+17,Deleted User#0000,2020-01-06,"With continuations, I suppose.",,
1.93202E+17,rocketnia#4517,2020-01-06,"I'm not sure about the details, but for a while I've thought it would be possible to do using continuations, yeah. It could take some interesting code to simulate the Common Lisp situation where a handler's dynamic scope is mostly like that of the site being handled, except with the active handlers of the site the handler was installed at.

I don't know if the full power of continuations is necessarily needed, maybe just Racket's first-class parameterizations or even just a single ""current set of active condition handlers"" parameter. In fact, I think many basic uses of conditions might be equivalent to simply having a Racket parameter that carries a handler object inside, not unlike the way Racket already ""handles"" reading by using the current readtable or ""handles"" module name resolution using the current module name resolver.",,
2.66505E+17,notjack#9941,2020-01-06,What are conditional restarts? Something different from regular retries?,,
4.66395E+17,oaktownsam#0815,2020-01-06,I thought it was a REPL/IDE thing.  Like when the program hits an error you get prompted on what to do.,,
4.66395E+17,oaktownsam#0815,2020-01-06,"Like replace the error with a value or retry it again, etc.",,
4.66395E+17,oaktownsam#0815,2020-01-06,In Smalltalk you can replace the code and rerun it even.,,
2.66505E+17,notjack#9941,2020-01-06,"Whoa, neat",,
4.66395E+17,oaktownsam#0815,2020-01-06,"It's partially why TDD/JUnit/etc was mostly developed in Smalltalk.  You'd write a few test cases, run the tests, they'd fail, the exception window would drop you into the debugger or you could just directly write the code to make the tests work and resume running the test suite.",,
4.89956E+17,WillBAnders#5226,2020-01-06,TDD *shudder* xD,,
1.93202E+17,rocketnia#4517,2020-01-06,"I was afraid that depth of support might come up. :-p That doesn't seem so easy to achieve without a particularly reflective runtime. In Racket, modules would probably need to be compiled with that in mind, rather than doing something anywhere near as simple as putting a procedure in a parameter.",,
1.93202E+17,rocketnia#4517,2020-01-06,"On the other hand, I hear Racket has step debugging and code coverage tools which might be pretty similar in scope to that kind of project...? I don't have experience with using them.",,
2.66505E+17,notjack#9941,2020-01-06,Is that really so much better than just rerunning the test? Why the need for hot code reloading and suspension of execution?,,
1.93202E+17,rocketnia#4517,2020-01-06,"For me, the primary reason I've thought about this is that it'd be fun to say ""hey, Common Lisp can be a library for Racket, neat."" :-p",,
1.93202E+17,rocketnia#4517,2020-01-06,making Smalltalk a library for Racket would be neat in a similar way,,
1.93202E+17,rocketnia#4517,2020-01-06,"but as far as I understand it, making local modifications to a running system is pretty core to the culture of how Smalltalk programs are created and shared, so stuffing it into the `#lang` world probably wouldn't give an impression of authenticity",,
2.66505E+17,notjack#9941,2020-01-06,oh :p,,
2.66505E+17,notjack#9941,2020-01-06,it would definitely be neat,,
2.66505E+17,notjack#9941,2020-01-06,and it seems perfectly doable to me,,
2.66505E+17,notjack#9941,2020-01-06,I just don't _want_ it for the problem domains I currently work in,,
1.93202E+17,rocketnia#4517,2020-01-06,Same. I feel like it's something that should be built by someone who really wants it and knows how to tell when it's doing what it's supposed to do. XD,,üíØ (2)
2.50764E+17,4984#4984,2020-01-06,"i am having a moment of boredom, what do i make in the racket",,
2.50764E+17,4984#4984,2020-01-06,i completed my other thing,,
4.56227E+17,Deleted User#0000,2020-01-06,@notjack Here's a cool example use-case for conditional restarts: https://groups.google.com/forum/#!topic/comp.lang.dylan/gszO7d7BAok,,
4.56227E+17,Deleted User#0000,2020-01-06,"Effectively, exception handling is separated into conditions and restarts, where you can set multiple different (dynamically bound) handlers to different possible conditions, and then dynamically *restart* the evaluation. eg when you hit a divide by zero, you can tell it to return a specific value, log the error and continue (Racket's exceptions can do this too) or retry the last bit of evaluation with different values.",,
4.66395E+17,oaktownsam#0815,2020-01-06,Making a traditional Smalltalk as a `#lang` would be difficult.  A person could make a mostly ANSI compliant Smalltalk though since the standard cut out a lot of the reflective capabilities.,,
4.66395E+17,oaktownsam#0815,2020-01-06,"I've been kicking around the idea, but really it just gets you an OOP language with a different syntax.",,
4.66395E+17,oaktownsam#0815,2020-01-06,So it hasn't been too compelling.,,
4.56227E+17,Deleted User#0000,2020-01-06,"It's a shame too, I think reflection is where Smalltalk truly shines.",,
2.66505E+17,notjack#9941,2020-01-07,@Deleted User that use case you linked is fascinating,,
2.66505E+17,notjack#9941,2020-01-07,I like it,,
4.56227E+17,Deleted User#0000,2020-01-07,:-3,,
2.50764E+17,4984#4984,2020-01-08,"my code, i dont know why it works",,
2.50764E+17,4984#4984,2020-01-08,but it do work,,
4.56227E+17,Deleted User#0000,2020-01-09,mood,,
2.50764E+17,4984#4984,2020-01-09,(big 'mood),,"meow (5),cons (1)"
2.50764E+17,4984#4984,2020-01-10,hello racket folk,,
2.50764E+17,4984#4984,2020-01-10,i am working on my first bigger language on racket,,
4.89956E+17,WillBAnders#5226,2020-01-10,@4984 yo whaddup,,
2.50764E+17,4984#4984,2020-01-10,oh hi üòÑ,,
4.89956E+17,WillBAnders#5226,2020-01-10,o/,,
2.50764E+17,4984#4984,2020-01-10,i have not figured out how i want control flow,,
2.50764E+17,4984#4984,2020-01-10,it currently kinda looks like js,,
4.89956E+17,WillBAnders#5226,2020-01-10,*runs*,,
2.50764E+17,4984#4984,2020-01-10,why are you running,,
2.50764E+17,4984#4984,2020-01-10,it looks like js,,
2.50764E+17,4984#4984,2020-01-10,i cant figure out how to make an early return-like control structure,,
4.89956E+17,WillBAnders#5226,2020-01-10,"Do you mean
```
func x() {
   if (cond) {
       return 0;
   }
   //...
}
```
Or returning at the expression level?",,
2.50764E+17,4984#4984,2020-01-10,like the code example,,
4.89956E+17,WillBAnders#5226,2020-01-10,What's your reasoning for avoiding `return`?,,
2.50764E+17,4984#4984,2020-01-10,i dont really know what im doing,,
4.89956E+17,WillBAnders#5226,2020-01-10,xDD,,
2.50764E+17,4984#4984,2020-01-10,so like i dont exactly know what to implement,,
4.89956E+17,WillBAnders#5226,2020-01-10,I don't follow.,,
2.66505E+17,notjack#9941,2020-01-10,@4984 You can use continuations and syntax parameters to implement that kind of thing. Examples here: https://gist.github.com/jackfirth/027411d567385dadb3202bee75a847b4,,
4.89956E+17,WillBAnders#5226,2020-01-10,Oh is that what the question was xD,,
2.50764E+17,4984#4984,2020-01-10,yes i am bad at communicating,,
2.50764E+17,4984#4984,2020-01-10,thank you,,
4.89956E+17,WillBAnders#5226,2020-01-10,I'm still in pldi mode :p,,
2.50764E+17,4984#4984,2020-01-10,macros cause me confusion,,
2.50764E+17,4984#4984,2020-01-10,like i get them,,
2.50764E+17,4984#4984,2020-01-10,but i just,,
2.50764E+17,4984#4984,2020-01-10,confused,,
4.89956E+17,WillBAnders#5226,2020-01-10,Mate it took me a week workshop to pretend like I knew what I was doing.,,
2.66505E+17,notjack#9941,2020-01-10,I am very happy to help with any macro problems or questions,,
2.50764E+17,4984#4984,2020-01-10,thank you,,
2.50764E+17,4984#4984,2020-01-10,but there is no problem,,
2.50764E+17,4984#4984,2020-01-10,i just dont know when to use them,,
2.66505E+17,notjack#9941,2020-01-10,"As a general rule, they're best used when you want to do something that seems impossible",,üíØ (2)
2.50764E+17,4984#4984,2020-01-10,okie,,
4.66395E+17,oaktownsam#0815,2020-01-10,"A lot of macros I write are best described as ""I can write this code like A, but I would prefer to write it as B, because it is [clearer/less repetitive/etc]""",,
4.66395E+17,oaktownsam#0815,2020-01-10,So you write a macro to turn your B's into A's,,
4.89956E+17,WillBAnders#5226,2020-01-10,"CMD + C, CMD + Macro",,
2.50764E+17,4984#4984,2020-01-10,"today's ""I love racket"" moment:",,
2.50764E+17,4984#4984,2020-01-10,i was running a lil benchmark,,
2.50764E+17,4984#4984,2020-01-10,apparently racket does really well compared to the luajit,,
2.50764E+17,4984#4984,2020-01-10,and hence i have a really fast language implemetation on my hands,,üéâ (3)
5.80709E+17,bub#6265,2020-01-11,htdp anyone?,,
2.66505E+17,notjack#9941,2020-01-11,it's good,,
5.80709E+17,bub#6265,2020-01-11,im a beginner and which one do i get started with?,,
5.80709E+17,bub#6265,2020-01-11,1st edition or the second one,,
5.80709E+17,bub#6265,2020-01-11,:c,,
2.66505E+17,notjack#9941,2020-01-11,Definitely the second,,
5.80709E+17,bub#6265,2020-01-11,why,,
5.80709E+17,bub#6265,2020-01-11,the first one seems complete unlike the 2nd,,
2.66505E+17,notjack#9941,2020-01-11,"it's meant to replace the first edition, and has corrections and such",,
5.80709E+17,bub#6265,2020-01-11,and the prefaces are just too scaryy :c,,
2.66505E+17,notjack#9941,2020-01-11,"If you find it easier to learn from the 1st, that's okay",,
5.80709E+17,bub#6265,2020-01-11,oki I'll start with the second one,,
5.80709E+17,bub#6265,2020-01-11,its just the hard computational terms used in the prefaces of both the editions bothering me,,
2.66505E+17,notjack#9941,2020-01-11,feel free to ask questions about any of those terms here üôÇ,,
2.50764E+17,4984#4984,2020-01-11,it turns out its faster not to use macros for early return,,
4.89956E+17,WillBAnders#5226,2020-01-11,What in comparison to?,,
2.66505E+17,notjack#9941,2020-01-11,"it's probably the continuations that make things slower, not the macros",,
4.89956E+17,WillBAnders#5226,2020-01-11,^,,
4.89956E+17,WillBAnders#5226,2020-01-11,Macros should have zero runtime impact.,,
4.89956E+17,WillBAnders#5226,2020-01-11,"Which is like, the point of macros",,
4.66395E+17,oaktownsam#0815,2020-01-11,Early return continuations should have almost zero impact,,
2.66505E+17,notjack#9941,2020-01-11,I could see it having a big impact on recursive functions,,
4.66395E+17,oaktownsam#0815,2020-01-11,"Hmm yes, I think it might do something to the tail recursion.
```
#lang racket/base

(define (count0 x)
  (unless (zero? x) (count0 (sub1 x))))

(define (count1 x)
  (let/ec return
    (unless (zero? x) (count1 (sub1 x)))))


(collect-garbage)
(collect-garbage)
(collect-garbage)
'count0
(time (count0 1000000))

(collect-garbage)
(collect-garbage)
(collect-garbage)
'count1
(time (count1 1000000))
```

```
'count0
cpu time: 32 real time: 35 gc time: 0
'count1
cpu time: 844 real time: 848 gc time: 312
```",,
4.66395E+17,oaktownsam#0815,2020-01-11,"One thing that you could do (that is a bit complicated) is when macro-expanding functions expand the body and check if it does an early return.  If it is in a tail position the `return` should just disappear, otherwise wrap the function body with `let/ec` and carry on.  Then only early return functions have to pay the early return tax.

Maybe you don't need to expand the body, depends on what the language looks like.",,
4.66395E+17,oaktownsam#0815,2020-01-11,I wonder why the `let/ec`continuations don't collapse in a tail context like that.,,
4.66395E+17,oaktownsam#0815,2020-01-11,Maybe they do and the continuations aren't being stack allocated like I'm expecting.,,
2.66505E+17,notjack#9941,2020-01-11,"@oaktownsam Try it on the chezscheme impl of racket, I recall mflatt saying that the CS implementation of continuations is _much_ more efficient than the non-CS one",,
2.66505E+17,notjack#9941,2020-01-11,"What do y'all think of this:
```
> (range-clamp (closed-range 1 9) 4)
4

> (range-clamp (closed-range 1 9) 8000)
9

> (range-clamp (closed-range 1 9) -8000)
1
```",,
2.50764E+17,4984#4984,2020-01-12,why is the variant: cs of racket like 2.5x bigger,,
2.66505E+17,notjack#9941,2020-01-12,"it's implemented using chezscheme, which is a big, fast, and complicated pile of code",,
2.50764E+17,4984#4984,2020-01-12,chezscheme is only 18mb on my system,,
2.66505E+17,notjack#9941,2020-01-12,"when you say 2.5x bigger, what two things are you comparing?",,
2.50764E+17,4984#4984,2020-01-12,119MiB vs 316MiB,,
2.66505E+17,notjack#9941,2020-01-12,"No like, are those two installers you downloaded from the racket-lang.org website? Or are they two docker images? or something else?",,
2.50764E+17,4984#4984,2020-01-12,https://download.racket-lang.org/,,
2.66505E+17,notjack#9941,2020-01-12,are those the linux installers for non-minimal racket?,,
2.66505E+17,notjack#9941,2020-01-12,"I'm guessing it's the built packages. The racket bytecode format is different on the chezscheme vm, because chezscheme compiles expanded racket code into actual machine code and that gets stored in the bytecode files. The non-CS racket vm compiles expanded code into a machine-independent intermediate form which is then compiled at runtime with a JIT.",,
2.66505E+17,notjack#9941,2020-01-12,"The minimal racket installers for regular and CS racket are 11mb and 36mb, which sounds like it fits with the chezscheme being about 18mb",,
2.66505E+17,notjack#9941,2020-01-12,so tl;dr: it's a lot bigger because there's a lot of precompiled code,,
4.56227E+17,Deleted User#0000,2020-01-12,@bub Feel free to ask about anything you struggle with and we'll gladly help you out.,,
5.80709E+17,bub#6265,2020-01-12,"@Deleted User oki i will , thanks!",,
4.56227E+17,Deleted User#0000,2020-01-12,No problem!,,
2.50764E+17,4984#4984,2020-01-12,"`read-compiled-linklet: virtual-machine mismatch  expected: ""chez-scheme""  found: ""racket""` how do i tell it that racket is installed in ~/racket",,
2.66505E+17,notjack#9941,2020-01-12,@4984 change your `$PATH` to point to the right racket,,
2.66505E+17,notjack#9941,2020-01-12,oh wait,,
2.66505E+17,notjack#9941,2020-01-12,actually it might be that you should use the `racketcs` and `racocs` commands? I think?,,
2.66505E+17,notjack#9941,2020-01-12,not sure,,
2.50764E+17,4984#4984,2020-01-12,i installed racket into my home,,
2.50764E+17,4984#4984,2020-01-12,because i didnt want it to get rid of racket,,
2.50764E+17,4984#4984,2020-01-12,i give up on that front,,
2.50764E+17,4984#4984,2020-01-12,is there a good way to check what is making racket take so long to start,,
2.50764E+17,4984#4984,2020-01-12,im not sure what its doing,,
2.50764E+17,4984#4984,2020-01-12,like why my code is slow when no input is given and no processing is done,,
2.66505E+17,notjack#9941,2020-01-12,could be lots of things,,
1.93202E+17,rocketnia#4517,2020-01-12,was it always doing that or is it something new?,,
4.56227E+17,Deleted User#0000,2020-01-12,Have you tried the profiler?,,
2.50764E+17,4984#4984,2020-01-13,i dont know the profiler,,
4.56227E+17,Deleted User#0000,2020-01-13,It's fairly easy to use actually.,,
4.56227E+17,Deleted User#0000,2020-01-13,Instead of running your program with `% racket main.rkt` do `% raco profile main.rkt`,,
2.50764E+17,4984#4984,2020-01-13,i see,,
4.56227E+17,Deleted User#0000,2020-01-13,"`profiler` package allows for more fine-tuned hooks you can place in your code, but `raco profile` is almost always enough.",,
4.56227E+17,Deleted User#0000,2020-01-13,There's also `errortrace` but I don't know how to use that.,,
2.50764E+17,4984#4984,2020-01-13,apparently my parser is taking alot of time to start,,
2.50764E+17,4984#4984,2020-01-13,I-- I KNOW HOW TO FIX THIS!!!!,,
2.50764E+17,4984#4984,2020-01-13,wooo,,
2.50764E+17,4984#4984,2020-01-13,okay so with that out of the way soon,,
2.50764E+17,4984#4984,2020-01-13,how do i make my code into a `#lang`,,
2.50764E+17,4984#4984,2020-01-13,i read about it but it confuses me,,
4.56227E+17,Deleted User#0000,2020-01-13,"It's a hairy process, admittedly.",,
4.56227E+17,Deleted User#0000,2020-01-13,You can do it like this: https://docs.racket-lang.org/guide/syntax_module-reader.html,,
4.56227E+17,Deleted User#0000,2020-01-13,"Do your stuff in whatever you sublanguage you like, then `provide` out the identifiers.",,
4.56227E+17,Deleted User#0000,2020-01-13,"Make a file in `syntax/module-reader` to import those identifiers, and that's it.",,
4.56227E+17,Deleted User#0000,2020-01-13,"You can further adjust the parser in the latter file, but it's not necessary for small DSLs.",,
4.56227E+17,Deleted User#0000,2020-01-13,Then you can use `#lang` to call the latter file.,,
2.50764E+17,4984#4984,2020-01-13,is that only for racket like languages,,
2.50764E+17,4984#4984,2020-01-13,my language is nothing similar,,
4.89956E+17,WillBAnders#5226,2020-01-13,All. The syntax you use isn't significant there.,,
2.66505E+17,notjack#9941,2020-01-13,"I highly suggest reading Beautiful Racket, that's what I do whenever I need to make a `#lang`.",,
4.89956E+17,WillBAnders#5226,2020-01-13,^,,
4.89956E+17,WillBAnders#5226,2020-01-13,I don't *know* how to write macros. I know just enough to see what exists and how to go about doing what I need to and google takes me the rest of the way xD,,
4.56227E+17,Deleted User#0000,2020-01-13,I should get around to reading that book myself.,,
4.56227E+17,Deleted User#0000,2020-01-14,Have you peeps seen this? https://github.com/exercism/racket/issues/150,,
5.80709E+17,bub#6265,2020-01-14,square this function is not defined?,,
5.80709E+17,bub#6265,2020-01-14,help!,,
4.56227E+17,Deleted User#0000,2020-01-14,Hm?,,
5.80709E+17,bub#6265,2020-01-14,in the drracket,,
5.80709E+17,bub#6265,2020-01-14,iide,,
4.56227E+17,Deleted User#0000,2020-01-14,Can you be more specific?,,
5.80709E+17,bub#6265,2020-01-14,the intrepreter in drRacket ide shows an error,,
5.80709E+17,bub#6265,2020-01-14,square : this function is not defined,,
4.56227E+17,Deleted User#0000,2020-01-14,What are you trying to do?,,
5.80709E+17,bub#6265,2020-01-14,"(square 10 ""solid"" ""red"")",,
4.56227E+17,Deleted User#0000,2020-01-14,Is that all?,,
5.80709E+17,bub#6265,2020-01-14,yes lul,,
4.56227E+17,Deleted User#0000,2020-01-14,"If so, you need to import the image library.",,
5.80709E+17,bub#6265,2020-01-14,i did,,
5.80709E+17,bub#6265,2020-01-14,circle /rectangle do work,,
4.56227E+17,Deleted User#0000,2020-01-14,"Well, then that's not all. ;-p",,
5.80709E+17,bub#6265,2020-01-14,im starting off with the htdp,,
5.80709E+17,bub#6265,2020-01-14,the second version's better than the first right? for beginners,,
4.56227E+17,Deleted User#0000,2020-01-14,"I recommend the second version, yeah.",,
4.56227E+17,Deleted User#0000,2020-01-14,"And if you're following the second version, don't forget that the library name is `2htdp` not `htdp`.",,
5.80709E+17,bub#6265,2020-01-14,yeah,,
5.80709E+17,bub#6265,2020-01-14,but isnt it in the language<teachpacks thing?,,
4.56227E+17,Deleted User#0000,2020-01-14,"Honestly, I have no idea since I don't use DrRacket.",,
4.56227E+17,Deleted User#0000,2020-01-14,But you need `2htdp/image`.,,
5.80709E+17,bub#6265,2020-01-14,oh :c,,
4.56227E+17,Deleted User#0000,2020-01-14,Pick HtDP/2e from the menu instead of HtDP.,,
5.80709E+17,bub#6265,2020-01-14,"ive done it , ty for the help tho!",,
4.56227E+17,Deleted User#0000,2020-01-14,Does it work now?,,
5.80709E+17,bub#6265,2020-01-14,yay,,
5.80709E+17,bub#6265,2020-01-14,:p,,
4.56227E+17,Deleted User#0000,2020-01-14,üëç,,
5.80709E+17,bub#6265,2020-01-14,why does this thing take much time for giving the output :c,,
4.56227E+17,Deleted User#0000,2020-01-14,How long does it take?,,
5.80709E+17,bub#6265,2020-01-14,4-5 secs lul,,
4.56227E+17,Deleted User#0000,2020-01-14,DrRacket is a tad slow unfortunately.,,
5.80709E+17,bub#6265,2020-01-14,oh,,
4.56227E+17,Deleted User#0000,2020-01-14,That's the price to pay for extensibility.,,
5.80709E+17,bub#6265,2020-01-14,ouii,,
5.80709E+17,bub#6265,2020-01-14,any racket app,,
5.80709E+17,bub#6265,2020-01-14,for android!?,,
4.56227E+17,Deleted User#0000,2020-01-14,Racket works on Android but I don't think anyone's ported a development environment to it.,,
5.80709E+17,bub#6265,2020-01-14,oh :(,,
4.56227E+17,Deleted User#0000,2020-01-14,I would try my hand at it if I knew anything about mobile development.,,
4.56227E+17,Deleted User#0000,2020-01-14,Haha,,
4.56227E+17,Deleted User#0000,2020-01-14,"Oh, I remember now. Racket is in Termux's repos.",,
4.56227E+17,Deleted User#0000,2020-01-14,I don't know if it comes with the GUI portions though.,,
4.56227E+17,Deleted User#0000,2020-01-14,"Ah no, it doesn't.",,
4.56227E+17,Deleted User#0000,2020-01-14,Better than nothing.,https://cdn.discordapp.com/attachments/618895179343986688/666728470793158717/S00114-22402554.jpg,
2.50764E+17,4984#4984,2020-01-14,so like... racket borken again üò¶,,
4.56227E+17,Deleted User#0000,2020-01-14,What's the problem?,,
5.80709E+17,bub#6265,2020-01-15,@Deleted User does the simplified version of any website in chrome remove the website's content?,,
5.80709E+17,bub#6265,2020-01-15,simplified version,https://cdn.discordapp.com/attachments/618895179343986688/666967980386811904/Screenshot_2020-01-15-16-50-05-505.jpeg,
5.80709E+17,bub#6265,2020-01-15,original version,https://cdn.discordapp.com/attachments/618895179343986688/666968076851478572/Screenshot_2020-01-15-16-50-14-844.jpeg,
4.56227E+17,Deleted User#0000,2020-01-15,Isn't that what the simplified version meant to do?,,
5.80709E+17,bub#6265,2020-01-15,yeah but its removing the content!,,
5.80709E+17,bub#6265,2020-01-15,:(,,
4.56227E+17,Deleted User#0000,2020-01-15,Firefox's reader view does the same thing.,,
5.80709E+17,bub#6265,2020-01-15,yeah but reading that way would  probably skip some content right?  @Deleted User,,
4.56227E+17,Deleted User#0000,2020-01-15,So far I've only seen it omit the table of contents.,,
4.56227E+17,Deleted User#0000,2020-01-15,Check the page in both modes for a while and see.,,
5.80709E+17,bub#6265,2020-01-15,ouii,,
4.56227E+17,Deleted User#0000,2020-01-15,I came up with a creative way to comment out expressions.,,
4.56227E+17,Deleted User#0000,2020-01-15,"```Racket
(define-syntax comment
  (syntax-rules ()
    ((_ ...) (values))))
```",,
4.89956E+17,WillBAnders#5226,2020-01-15,`#;`?,,
4.56227E+17,Deleted User#0000,2020-01-15,That's too easy. ;-P,,
4.89956E+17,WillBAnders#5226,2020-01-15,.-.,,
4.56227E+17,Deleted User#0000,2020-01-15,I like how `values` with zero args returns nothing.,,
4.56227E+17,Deleted User#0000,2020-01-15,"Clojure's `comment` macro returns `nil` instead, which kinda defeats the purpose IMO.",,
2.66505E+17,notjack#9941,2020-01-15,There's also that `todo` macro,,
2.66505E+17,notjack#9941,2020-01-15,(see the `todo-list` package),,
2.66505E+17,notjack#9941,2020-01-16,Implemented my own contract combinator for comparators!,https://cdn.discordapp.com/attachments/618895179343986688/667251603300155392/unknown.png,
2.66505E+17,notjack#9941,2020-01-16,Reducer and transducer contracts are coming soon!,,
2.66505E+17,notjack#9941,2020-01-16,(hopefully),,
2.50764E+17,4984#4984,2020-01-16,i have no clue what that is but woo that sounds cool,,
2.27834E+17,Gix#4348,2020-01-16,can someone help me with these questions? I've been stuck for days.,,
2.27834E+17,Gix#4348,2020-01-16,"Define a constant ANGLE of value 120. Now design a function pine-tree that takes two numbers a and d as input and returns the image of a simplistic holiday tree (late-season as that may be), as follows. The tree consists of 5 upward-pointing isosceles triangles (of color green, obviously‚Äîforestgreen is nise and is a valid BSL color) stacked on top of each other. The top triangle‚Äôs equal-length sides have length a and are joined at an angle of ANGLE degrees. For the triangle below that, the equal-length side length increases to a+d, and so forth, with the bottom triangle having equal-length side length a+4d. The angle does not change. The stack of triangles sits on top of a brown rectangle of width a and height 1.5a, depicting the trunk of the tree.",,
2.27834E+17,Gix#4348,2020-01-16,"Design a simple bouncing-ball animation. The animation should take place in a 300x300 scene with white background. A small ball (a black circle of radius 5) is initially located at position (0,150). The ball should now move straight south-east until it hits the bottom edge of the scene. At this time it should bounce off the edge toward the north-east until it hits the right edge of the frame (which will happen at position (300,150)). At this point the ball should turn red and stay at position (300,150) for the rest of the animation (as far as the viewer is concerned, this ends the animation).

To achieve this, define constants for the scene and two same-size balls, one black and one red. For the animation, you need to define a single function, draw-ball, that takes the x-coordinate of the ball (a natural number) as input and draws the ball at the correct position (x,y); you do the math to figure out y. Like pine-tree, this function returns an image. Remember that, for some values of x, the ball moves south-east; for others, it moves north-east. The origin of the coordinate system is the top-left corner! The color of the ball also depends on x.

Once you have defined draw-ball, to start the animation you pass the function name to the animate function: (animate draw-ball). For this to work, your code must include the (require 2htdp/universe) directive (in addition to (require 2htdp/image)).",,
2.27834E+17,Gix#4348,2020-01-16,@everyone,,
3.39115E+17,DobbyHouseElf2#3285,2020-01-16,Did you ask your instructor for help?,,
2.66505E+17,notjack#9941,2020-01-16,"@Gix Please don't ping everyone to ask for help, and please ask for help in the #help channel (which I just created for this)",,
2.27834E+17,Gix#4348,2020-01-16,sorry my bad!,,
2.27834E+17,Gix#4348,2020-01-16,and yep I asked the TA but he didn;t know what to do,,
2.50764E+17,4984#4984,2020-01-16,im bored and tired of writing a lua compiler,,
2.50764E+17,4984#4984,2020-01-16,anyone need some help with stuff in racket that i could maybe do?,,
2.66505E+17,notjack#9941,2020-01-16,"there's many things to do in my Rebellion project, if you like",,
2.50764E+17,4984#4984,2020-01-16,ill give a look,,
2.50764E+17,4984#4984,2020-01-16,is there a link to it,,
2.66505E+17,notjack#9941,2020-01-16,https://github.com/jackfirth/rebellion,,
2.50764E+17,4984#4984,2020-01-16,"before i can help, my racket is giving a `""read-compiled-linklet: virtual-machine mismatch  expected: ""chez-scheme""` error, do i need to install something better",,
2.66505E+17,notjack#9941,2020-01-16,"Something that would be easy to get started with and also really helpful: replace all uses of `cond` with `strict-cond`, which is in the `rebellion/private/strict-cond` module.",,
2.66505E+17,notjack#9941,2020-01-16,"@4984 unsure. Are you in the Racket slack as well? Asking there would be more likely to get you an answer, or asking on the `racket-users` mailing list.",,
2.50764E+17,4984#4984,2020-01-16,i need to fix my slack installation too,,
2.50764E+17,4984#4984,2020-01-16,üò¶,,
2.66505E+17,notjack#9941,2020-01-16,:'(,,
2.50764E+17,4984#4984,2020-01-16,ill figure that one out myself,,
2.66505E+17,notjack#9941,2020-01-16,Use slack in the web browser temporarily maybe?,,
2.50764E+17,4984#4984,2020-01-16,Total download size: -0.85MiB,,
2.50764E+17,4984#4984,2020-01-16,i need to fix my entire system now,,
2.50764E+17,4984#4984,2020-01-16,i dont know how i manage to break software so easily,,
4.56227E+17,Deleted User#0000,2020-01-17,Anyone know why racket-rx code was suddenly taken down from GitHub?,,
4.56227E+17,Deleted User#0000,2020-01-17,https://github.com/samvv/racket-rx,,
4.56227E+17,Deleted User#0000,2020-01-17,There's still a raco pkg but it's broken because the repo is gone.,,
4.56227E+17,Deleted User#0000,2020-01-17,The documentation is still up.,,
4.56227E+17,Deleted User#0000,2020-01-17,They took down racket-gaming and ramunk too.,,
4.56227E+17,Deleted User#0000,2020-01-17,"Oh, he wiped his GitHub and deleted his Patreon and Twitter.",,
4.66395E+17,oaktownsam#0815,2020-01-17,That's a shame,,
4.66395E+17,oaktownsam#0815,2020-01-17,Maybe you can find them on gitlab?,,
2.50764E+17,4984#4984,2020-01-17,"darn, lazy racket is not the fast one",,
2.66505E+17,notjack#9941,2020-01-17,"makes sense, under the hood it's creating a promise for every single expression (including subexpressions)",,
2.50764E+17,4984#4984,2020-01-18,oh geez,,
2.66505E+17,notjack#9941,2020-01-18,yeah,,
2.50764E+17,4984#4984,2020-01-18,9535ms vs 164ms,,
2.66505E+17,notjack#9941,2020-01-18,_ouch_,,
2.50764E+17,4984#4984,2020-01-18,my language is slow,,
2.50764E+17,4984#4984,2020-01-18,sorry the implementation,,
2.50764E+17,4984#4984,2020-01-18,there are plenty of fast interpreters,,
2.50764E+17,4984#4984,2020-01-18,def gonna pay for beautyful racket soon if i dont see a reason not to within the next week or so,,üéâ (2)
2.66505E+17,notjack#9941,2020-01-18,what sort of language are you making?,,
2.50764E+17,4984#4984,2020-01-18,lua,,
2.50764E+17,4984#4984,2020-01-18,i could not find an implementation for racket,,
2.50764E+17,4984#4984,2020-01-18,"and i figure that any so called ""language oriented programming"" is valid without a lua implenetation",,
2.50764E+17,4984#4984,2020-01-18,like geez there are like 4 for java and one for python i think,,
2.66505E+17,notjack#9941,2020-01-18,"hell yeah, I'm all for a `#lang lua` implementation",,
2.50764E+17,4984#4984,2020-01-18,i mean,,
2.50764E+17,4984#4984,2020-01-18,i figured out how to `#lang lua`,,
2.50764E+17,4984#4984,2020-01-18,but actually getting it to work is hard,,
2.50764E+17,4984#4984,2020-01-18,because the lua library does some funky things,,
2.66505E+17,notjack#9941,2020-01-18,I bet,,
2.66505E+17,notjack#9941,2020-01-18,is your code online somewhere?,,
2.50764E+17,4984#4984,2020-01-18,soon,,
2.50764E+17,4984#4984,2020-01-18,actually,,
2.50764E+17,4984#4984,2020-01-18,within 5 minutes,,
2.50764E+17,4984#4984,2020-01-18,gimmie a sec,,
2.66505E+17,notjack#9941,2020-01-18,yay!,,
2.50764E+17,4984#4984,2020-01-18,sorry both my wifi and dog decided to stop working for a bit,,
2.50764E+17,4984#4984,2020-01-18,https://github.com/ShawSumma/lure,,
2.50764E+17,4984#4984,2020-01-18,note that it is a BIG mess,,
2.50764E+17,4984#4984,2020-01-18,it kinda takes some of the code from megaparsack,,
2.50764E+17,4984#4984,2020-01-18,but not that much,,
2.66505E+17,notjack#9941,2020-01-18,"worry not, you are allowed to make messes",,
2.66505E+17,notjack#9941,2020-01-18,learning and trying are good things to do,,
2.50764E+17,4984#4984,2020-01-18,this sounds very true,,
2.50764E+17,4984#4984,2020-01-18,wait its broken!?,,
2.66505E+17,notjack#9941,2020-01-18,broken how?,,
2.50764E+17,4984#4984,2020-01-18,i commented out a line accedently,,
2.50764E+17,4984#4984,2020-01-18,fixed,,
2.50764E+17,4984#4984,2020-01-18,üò¶,,
2.66505E+17,notjack#9941,2020-01-18,üòÆ,,
2.50764E+17,4984#4984,2020-01-18,"```lua
#lang lua

local function fib(n)
    if n < 2 then
        return n
    else
        return fib(n-2) + fib(n-1)
    end
end
print(fib(30))```",,
2.50764E+17,4984#4984,2020-01-18,luckily lua only supports 1 `#` comment,,
2.50764E+17,4984#4984,2020-01-18,but does not require a shebang,,
2.66505E+17,notjack#9941,2020-01-18,Would you be interested in putting it on the package catalog too?,,
2.50764E+17,4984#4984,2020-01-18,when it is a bit less incomplete yes,,
2.66505E+17,notjack#9941,2020-01-18,wonderful üôÇ,,
2.50764E+17,4984#4984,2020-01-18,i hope to start writing lua in lua,,
2.50764E+17,4984#4984,2020-01-18,but like the whole time being on racket,,
2.50764E+17,4984#4984,2020-01-18,thats far off,,
4.62028E+17,StephenD#5938,2020-01-18,@4984 awesome. I'm just about to download and try it out,,
2.50764E+17,4984#4984,2020-01-18,its very not ready and i am going on a flight today,,
2.50764E+17,4984#4984,2020-01-18,so if you have any fixes/loops then feel free to help,,
2.50764E+17,4984#4984,2020-01-18,"basically no loops, no comments, no repl",,
2.50764E+17,4984#4984,2020-01-18,ill add the first two now,,
2.50764E+17,4984#4984,2020-01-18,Racket development on android,,
2.50764E+17,4984#4984,2020-01-18,What could go wronh,,ü§™ (1)
2.50764E+17,4984#4984,2020-01-21,updates to `#lang lua`,,
2.50764E+17,4984#4984,2020-01-21,üòÑ,,
2.50764E+17,4984#4984,2020-01-21,fixed some bugs here there,,
2.50764E+17,4984#4984,2020-01-21,added for loops,,
2.66505E+17,notjack#9941,2020-01-21,hooray! üéâ,,
4.56227E+17,Deleted User#0000,2020-01-21,Progress!,,
2.50764E+17,4984#4984,2020-01-23,"well more progress, no bug fixes",,
2.50764E+17,4984#4984,2020-01-23,but performance has increased thanks to basic blocks,,
2.50764E+17,4984#4984,2020-01-25,why does racket feel newer than python dispite being slightly older,,
4.56227E+17,Deleted User#0000,2020-01-25,"Since it's a vessel for PLT research, Racket incorporates a lot of experimental ideas.",,
4.56227E+17,Deleted User#0000,2020-01-28,Wow https://dl.acm.org/doi/10.1145/3371071,,
2.66505E+17,notjack#9941,2020-01-28,hell yeah,,
1.93202E+17,rocketnia#4517,2020-01-28,nifty :),,
4.56227E+17,Deleted User#0000,2020-01-28,I wonder if it'll trickle down to a standard Racket language.,,
2.50764E+17,4984#4984,2020-01-28,this link does not work for me,,
2.50764E+17,4984#4984,2020-01-28,`#lang lua` has v a p o r w a v e errors,,
2.50764E+17,4984#4984,2020-01-28,unexpected: (f u n c t i o n),,üòÅ (1)
2.50764E+17,4984#4984,2020-01-28,in other news its really slow,,
2.50764E+17,4984#4984,2020-01-28,but i still have avoided optimzations,,
2.50764E+17,4984#4984,2020-01-28,until i have a full fat lua,,
2.66505E+17,notjack#9941,2020-01-29,"Experimenting with a ""collections cheat sheet"" diagram kind of thing. What do you all think?",https://cdn.discordapp.com/attachments/618895179343986688/671952203543478332/Collection_Cheat_Sheet.png,
2.66505E+17,notjack#9941,2020-01-29,Actually lemme upload a less blurry version:,https://cdn.discordapp.com/attachments/618895179343986688/671952447652233236/Collection_Cheat_Sheet1.png,
4.66395E+17,oaktownsam#0815,2020-01-29,Nice,,
4.56227E+17,Deleted User#0000,2020-01-29,Looks much more professional than my diagrams.,,
4.56227E+17,Deleted User#0000,2020-01-29,,https://cdn.discordapp.com/attachments/618895179343986688/671971412067483659/lists.png,
4.56227E+17,Deleted User#0000,2020-01-29,case in point,,
2.66505E+17,notjack#9941,2020-01-29,What did you use to make your diagram?,,
4.56227E+17,Deleted User#0000,2020-01-29,Inkscape,,
4.56227E+17,Deleted User#0000,2020-01-29,But I think I lost the SVG file.,,
2.50764E+17,4984#4984,2020-01-29,im so happy,,
2.50764E+17,4984#4984,2020-01-29,"for the first time, a package i made is somewhere",,
2.50764E+17,4984#4984,2020-01-29,https://pkgd.racket-lang.org/pkgn/package/lua look at how pretty it shines,,
2.66505E+17,notjack#9941,2020-01-29,That's wonderful!,,
2.66505E+17,notjack#9941,2020-01-29,Congrats üôÇ,,
2.50764E+17,4984#4984,2020-01-29,basic blocks simplified my code so much,,
2.50764E+17,4984#4984,2020-01-29,i love basic blocks,,
4.56227E+17,Deleted User#0000,2020-01-31,Is there a cleaner way to do `#reader` short of overloading a `#lang`?,,
4.56227E+17,Deleted User#0000,2020-01-31,Like CHICKEN's `set-read-syntax!`,,
4.66395E+17,oaktownsam#0815,2020-01-31,not really,,
4.66395E+17,oaktownsam#0815,2020-01-31,I put together a hack for making `#{/bin/ls /etc}` type syntax work this week.  It's pretty short.,,
4.56227E+17,Deleted User#0000,2020-01-31,Ooh,,
4.66395E+17,oaktownsam#0815,2020-01-31,Gimme a sec I've been meaning to put it up on github,,
4.66395E+17,oaktownsam#0815,2020-01-31,https://github.com/samdphillips/racket-rkshell,,
4.66395E+17,oaktownsam#0815,2020-01-31,Sorry no `info.rkt`.  I install it as `rkshell`  and you can use the syntax `#lang rkshell`,,
4.66395E+17,oaktownsam#0815,2020-01-31,I didn't get around to escapes so it only runs literal commands that are all identifiers,,
4.56227E+17,Deleted User#0000,2020-01-31,Neat!,,
4.66395E+17,oaktownsam#0815,2020-01-31,If you just need to mess with the readtable `syntax/module-reader` is where you want to be,,
4.56227E+17,Deleted User#0000,2020-01-31,"Unrelatedly, turns out `make-rename-transformer` is a better candidate for `define-alias` than `identifier-syntax`.",,üëç (1)
4.66395E+17,oaktownsam#0815,2020-01-31,"Ok, I spent the additional 20 minutes needed to get variables working in that syntax",,
4.56227E+17,Deleted User#0000,2020-01-31,Nice!,,
2.50764E+17,4984#4984,2020-02-03,inspired by https://apos.itch.io/binaryinput i made a way to enter text using only `a` and `d`,https://cdn.discordapp.com/attachments/618895179343986688/673802481691787274/unknown.png,üëç (1)
2.50764E+17,4984#4984,2020-02-03,https://shawsumma.com/vuhicarasi.scm,,
2.66505E+17,notjack#9941,2020-02-11,anyone here have experience with and/or feelings about Racket concurrency?,,
4.66395E+17,oaktownsam#0815,2020-02-11,I like the CML system myself.,,
4.56227E+17,Deleted User#0000,2020-02-11,I want to learn `racket/places` sometime.,,
2.66505E+17,notjack#9941,2020-02-11,I like the CML system but wish there was also something for cooperative concurrency,,
2.66505E+17,notjack#9941,2020-02-11,"non-cooperative concurrency is painful to write programs in, because you need to make sure all mutable state is thread safe",,
4.66395E+17,oaktownsam#0815,2020-02-11,That's reasonable,,
4.66395E+17,oaktownsam#0815,2020-02-11,Unfortunately I think the preemption is baked into the runtime,,
4.66395E+17,oaktownsam#0815,2020-02-11,Although you could build a lang that probably did cooperative but it would probably have interfacing trickyness,,
4.66395E+17,oaktownsam#0815,2020-02-11,At least where it interfaced with the current runtime threads,,
4.66395E+17,oaktownsam#0815,2020-02-11,Doesn't disabling breaks get you a limited sort of atomicity?,,
2.66505E+17,notjack#9941,2020-02-12,"you can build a cooperative concurrency framework on top of non-cooperative threading (and I do want both, anyway)",,
2.66505E+17,notjack#9941,2020-02-12,"there's this really, _really_ cool cooperative async programming framework at my day job called Promise Graph",,
2.66505E+17,notjack#9941,2020-02-12,"it's basically javascript Promises/A+ but with this added `PromiseRunner` thing that you use like this:

```
Future<Foo> result =
  runner.run(() -> ... some code returning a Promise<Foo> ...)
```",,
2.66505E+17,notjack#9941,2020-02-12,"the semantics are basically this:
1. everything in the lambda given to `run` makes up one _graph_
2. within a graph, all concurrency is cooperative
3. across graphs, it's noncooperative
4. there's a shared thread pool for running all graphs, and there's never any parallel execution within a graph (only single-threaded concurrent execution)",,
2.66505E+17,notjack#9941,2020-02-12,"That way, you can use the runner to decide when you want to insert a non-cooperative execution boundary, letting you express how cooperative you want different pieces of code to be. For instance, a webserver might want to wrap the code handling each request in a call to run(), so that a problem in that graph (like a CPU-hogging block of code that interferes with the cooperative concurrency system) doesn't prevent the handling of other requests. But within a single request handler, there wouldn't be much point to use run() because it's kind of an all-or-nothing deal anyway. No need to worry about fairness among the different pieces of code used to handle a single request.",,
2.66505E+17,notjack#9941,2020-02-12,I took an experimental stab at the nonsense above: https://github.com/jackfirth/fiberweb,,
4.56227E+17,Deleted User#0000,2020-02-12,Ooh!,,
2.66505E+17,notjack#9941,2020-02-12,"it doesn't even come close to working yet, but the basic shape of the API is there",,
4.56227E+17,Deleted User#0000,2020-02-12,I like the top-down approach the DSL design.,,
4.56227E+17,Deleted User#0000,2020-02-12,"ie First write the language you want, then write the actual implementation.",,
4.56227E+17,Deleted User#0000,2020-02-14,,https://cdn.discordapp.com/attachments/618895179343986688/677875493789499412/racket.png,"üòÇ (1),üíñ (4),racket (3),üòπ (2)"
4.62028E+17,StephenD#5938,2020-02-14,Blog post: https://www.greghendershott.com/2020/02/using-drracket-check-syntax-in-racket-mode.html,,
4.56227E+17,Deleted User#0000,2020-02-14,I'm so glad to see Hendershott still working on Racket.,,üëç (1)
4.62028E+17,StephenD#5938,2020-02-15,https://pkgd.racket-lang.org/pkgn/package/dracula-theme,,
2.66505E+17,notjack#9941,2020-02-15,@oaktownsam whatcha think? https://github.com/jackfirth/rebellion/issues/418,,
4.66395E+17,oaktownsam#0815,2020-02-15,An enum would be a distinct type backed by a bitstring?,,
4.66395E+17,oaktownsam#0815,2020-02-15,Oh an enum set,,
4.66395E+17,oaktownsam#0815,2020-02-15,Yes that sounds good,,
2.66505E+17,notjack#9941,2020-02-15,"yeah so like given an enum for north-east-south-west, `(enum-set north west)` would be represented by whatever fixnum corresponds to the bits `1001`",,
4.66395E+17,oaktownsam#0815,2020-02-15,Got it,,
4.66395E+17,oaktownsam#0815,2020-02-16,Hey @notjack just skimming fiberweb... what is the operation to yield control back to the scheduler?,,
2.66505E+17,notjack#9941,2020-02-16,@oaktownsam `sync-fiber` is the only way to pause execution,,
2.66505E+17,notjack#9941,2020-02-16,"the idea being that the scheduler will keep track of all `sync-fiber` fibers and simultaneously `sync` on their events, then once one of the events is ready the engine will stop `sync`-ing the other events in order to run any chained fibers that were waiting for the chosen sync fiber",,
2.66505E+17,notjack#9941,2020-02-16,once there's no more fiber transforms to run the engine goes back to `sync`-ing on external events and waiting for something to be ready,,
4.66395E+17,oaktownsam#0815,2020-02-16,"Ah, I see",,
2.66505E+17,notjack#9941,2020-02-17,thinking about fiberweb more,,
2.66505E+17,notjack#9941,2020-02-17,it needs some way to support cancellation,,
2.66505E+17,notjack#9941,2020-02-20,"@oaktownsam ended up designing an ""async task"" thing that's like a long running operation that can be sync'd on multiple times and can be cancelled https://github.com/jackfirth/rebellion/pull/423",,
2.66505E+17,notjack#9941,2020-02-20,I'm thinking fiberweb would build on top of that,,
4.66395E+17,oaktownsam#0815,2020-02-20,"So I ended up needing something like run a bunch of threads in parallel and get their results last week, this is the simple solution I rolled (which works fine for a throwaway script situation.)

https://gist.github.com/samdphillips/a45586488e0f632a9b1acc240e835830",,
2.66505E+17,notjack#9941,2020-02-20,"Interesting, it gives me Java `Executor` vibes",,
2.66505E+17,notjack#9941,2020-02-20,"Hmm, I can't think of a good way to rewrite that example in a `define`-style notation",,
2.66505E+17,notjack#9941,2020-02-20,since it uses the binders for the result after blocking,,
4.66395E+17,oaktownsam#0815,2020-02-20,The binders are mostly because I didn't want to have to write `(future-ref v)` :p,,
4.66395E+17,oaktownsam#0815,2020-02-20,Also the API is fairly naive,,
4.66395E+17,oaktownsam#0815,2020-02-20,In the actual script I pulled that out of I was pulling from multiple HTTP APIs some data and in the body doing a comparison.,,
2.66505E+17,notjack#9941,2020-02-20,Makes total sense,,
4.62028E+17,StephenD#5938,2020-02-24,Racket editor usage survey results,https://cdn.discordapp.com/attachments/618895179343986688/681537229453000720/SPOILER_Screenshot_2020-02-24_at_16.22.12.png,
4.89956E+17,WillBAnders#5226,2020-02-24,"I aspire to be as productive as that one guy using DrRacket, Emacs and Vim all at the same time.",,
3.29023E+17,nixin72#3554,2020-02-24,üòÇ,,
3.29023E+17,nixin72#3554,2020-02-24,"@WillBAnders - I guess would be appropriate for here then. I haven't played around with typed racket too much yet, what are your concerns with it?",,
4.89956E+17,WillBAnders#5226,2020-02-24,"In my case largely lack of familiarity making it difficult to get started, and then macros.",,
3.29023E+17,nixin72#3554,2020-02-24,"I mean, just at surface level, it doesn't look too different from OCaml to me?
```scheme
(: function-name (-> param-1 param-2 output))
```
Looks like it's missing ADTs, which sucks, but there's union types and recursive types, which is nice.",,
4.89956E+17,WillBAnders#5226,2020-02-24,"I mean, I *really* don't like OCaml so yeah :p",,
3.29023E+17,nixin72#3554,2020-02-24,"Lol I actually don't know OCaml at all, I just know it's popular among language people üòÇ",,
4.89956E+17,WillBAnders#5226,2020-02-24,"It's something that takes getting used to, but for me the main limitation is that it can't cover macros. And I learned how to create languages almost entirely using macros.",,
4.89956E+17,WillBAnders#5226,2020-02-24,"I mean, I'm not the typical language person. But that sounds more like a popular among theory people.",,
3.29023E+17,nixin72#3554,2020-02-24,"Isn't the input to any macro just a symbol or list though? I'm not as familiar with Racket macros as Common Lisp macros, so I don't know how Racket differs. But since macros are evaluated at compile time, there won't be any resolution of the types yet so it's all just symbols or lists of symbols, isn't it?",,
3.29023E+17,nixin72#3554,2020-02-24,"And yea, OCaml is definetely more academic. I've never really gone near it, but I'm interested in it only cause it has official bindings in LLVM and I really hate C++, which is the only other one with official bindings.",,
4.89956E+17,WillBAnders#5226,2020-02-24,"With typed macros there doesn't need to be contextual information and such. To an extent, you build the syntax. But doing things effectively is a bit of a mess to integrate in with a program. I'd like to be able to say something like `x: Expr<Boolean>` to identify something that produces a boolean when executed.",,
3.29023E+17,nixin72#3554,2020-02-24,So what are you using for language development now?,,
3.29023E+17,nixin72#3554,2020-02-24,And you're not the first person I've talked to who's mentioned a desire for typed macros - I wonder if it's something that would be worth making an issue/proposal for on the typed racket github repo? At least have a conversation with some of the devs about it?,,
4.66395E+17,oaktownsam#0815,2020-02-24,You mean macros that expand to typed code?,,
4.66395E+17,oaktownsam#0815,2020-02-24,Normally in TR at syntax time you are using `racket/base`,,
4.66395E+17,oaktownsam#0815,2020-02-24,And you can expand to any TR code.,,
4.66395E+17,oaktownsam#0815,2020-02-24,IIRC,,
2.66505E+17,notjack#9941,2020-02-24,@oaktownsam I think they mean macros where the syntax transforming function that `define-syntax` is bound to is typed.,,
2.66505E+17,notjack#9941,2020-02-24,e.g `(: my-or (Macro-> (Expression A) ... (Expression (U A #f)))`,,
4.66395E+17,oaktownsam#0815,2020-02-24,That was my second guess,,
4.66395E+17,oaktownsam#0815,2020-02-24,"You can use TR at expand time, but everything is Syntax iirc",,
2.66505E+17,notjack#9941,2020-02-24,"Would need to implement chaperones and impersonators for syntax objects first. Then contracts, then types.",,
4.66395E+17,oaktownsam#0815,2020-02-24,"Ah, I was thinking of just liberal use of `ann` and `cast`",,
4.66395E+17,oaktownsam#0815,2020-02-24,But yeah you'd need some new type and all of the interacting with untyped machinery,,
4.66395E+17,oaktownsam#0815,2020-02-24,"I kinda wish there were more ""industrial"" experiments with Turnstile.  If you don't need full blown gradual typing this seems like a good use case as an extension to one of their typed core languages.",,üíØ (1)
2.66505E+17,notjack#9941,2020-02-24,"Unrelatedly, I have a survey question for you all. How would you summarize the behaviour of the `equal?` function?",,
4.66395E+17,oaktownsam#0815,2020-02-24,Structural equivalence,,
2.66505E+17,notjack#9941,2020-02-24,but `gensym`? also structural equivalence often isn't what you want with mutable data because it ignores whether updates will be reflected by both values,,
4.62028E+17,StephenD#5938,2020-02-24,"Racket LONDON meet-up April

Proposed date: Thursday 9th April 1-2pm,
- probably at a cafe near St Pancras station. (suggestions appreciated?)

Please let me know if you are interested, even if you can‚Äôt confirm attendance. I‚Äôll take the afternoon out of my holiday leave so I can get there.

(If the numbers get too big and I need to book a meeting room I think the best I can get is an hour at kingscross.impacthub.net for ¬£5.70 pp)

It will be casual introductions and chat, though if someone wants to do a short talk or demo that would be most welcome.

Kind regards,

Stephen",,
4.62028E+17,StephenD#5938,2020-02-24,Pinned a message.,,
3.29023E+17,nixin72#3554,2020-02-24,"If anyone ends up doing any talks, would you stream it?",,
4.62028E+17,StephenD#5938,2020-02-24,@nixin72 could try with OBS?,,
4.62028E+17,StephenD#5938,2020-02-24,Are you too far away to attend?,,
3.29023E+17,nixin72#3554,2020-02-24,Hahah I'm in North America.,,
4.89956E+17,WillBAnders#5226,2020-02-24,@nixin72 Self implemented. Recursive descent parser and standard tree-walk interpreter. Will eventually get to an actual compiler but yeah.,,
4.66395E+17,oaktownsam#0815,2020-02-24,@notjack equivalence is hard.,,
1.93202E+17,rocketnia#4517,2020-02-24,"@notjack

Pessimistically, I suppose I'd say `equal?` is a procedurally defined cycle-capable and hash-capable equality decision procedure over non-impersonator, non-`eq?` values which inherit their relevant structure type property implementation from the same structure type. It's susceptible to abstraction leaks arising from ill-behaved user-defined implementations.

Optimistically, most implementations of `equal?` are well-behaved in ways that make them consistent with intuitive notions of Racket code equivalence: Racket code that's in functional style usually takes `equal?` inputs to `equal?` outputs. In order to play well with functional style, Racket's contract projections are `equal?` to the original value when possible (even going so far as to use impersonators and chaperones, which `equal?` automatically unwraps). If two values `write` or `print` to the same representation, they're usually `equal?` when possible.

The `equal?` behaviors generally traverse into the contents of mutable containers. This is a convention which meshes well with the idea that `equal?` is capable of comparing reference cycles: It means we can tell a story of data that has a short lifetime of mutability during which we wire up its cycles, followed by a lifetime of immutability-by-convention during which we make comparisons using `equal?`. More broadly, ""immutable by convention"" data has historically been pretty common in Lisp and Scheme, with cons cells being mutable and many user-designed data formats being represented as cons cells.",,
3.29023E+17,nixin72#3554,2020-02-24,"Here I am like ""`equal?` checks if two values are equal""",,
3.29023E+17,nixin72#3554,2020-02-24,https://media.tenor.com/images/b1dbbc375b3e65cf0d2a1729c894762d/tenor.gif,,
4.66395E+17,oaktownsam#0815,2020-02-24,üòõ,,
4.66395E+17,oaktownsam#0815,2020-02-24,@rocketnia that is a very good Racket-y answer.,,
4.66395E+17,oaktownsam#0815,2020-02-24,`eq?` vs. `eqv?` vs. `equal?` is always a big think.,,
4.89956E+17,WillBAnders#5226,2020-02-24,`.EQV.`,,
1.93202E+17,rocketnia#4517,2020-02-24,"There are a lot of different factors involved, and I've had to split a lot of these hairs 'cause I've pursued:

- A notion of equality for Interconfection that's more trustworthy, even at the price of not allowing quite as many different kinds of custom behavior to be defined. Essentially every custom equality behavior in this system has to be cobbled out of some known-good pieces to ensure that it's well-behaved.

- Another notion of equality for Lathe Morphisms that has a different kind of customizable operation. Namely, if a user has a certain kind of value, they can derive a contract from it that recognizes other values that are ""close enough.""",,
2.66505E+17,notjack#9941,2020-02-24,I actually don't think the behaviour of `equal?` on mutable lists and other containers is a good precedent to follow. New mutable collection types _shouldn't_ compare their contents like that.,,
2.66505E+17,notjack#9941,2020-02-24,"It makes it impossible to answer the question ""are these the same mutable collection""",,
2.66505E+17,notjack#9941,2020-02-24,"We shouldn't really just describe what `equal?` does for various standard types, we should try to describe a philosophy that helps people figure out how to design equality for new types.",,
4.66395E+17,oaktownsam#0815,2020-02-24,For mutable containers wouldn't you just use `eq?` then?,,
4.66395E+17,oaktownsam#0815,2020-02-24,Of course impersonators et al. break that ...,,
1.93202E+17,rocketnia#4517,2020-02-24,"In programs that use two mutable collections, is it really common to need to check whether two given collections are the same one? And why not check that by carrying it in a container whose `equal?` compares it by `eq?`? It's not like `equal?` actually enforces that the two values have the same behavior. (That's why I took the approach I've taken in Interconfection, to really guarantee that two values are the same.)",,
2.66505E+17,notjack#9941,2020-02-24,`eq?` doesn't work because contracts insert chaperones and impersonators,,
2.66505E+17,notjack#9941,2020-02-24,use case for testing whether two mutable collections are the same: a function that creates a copy of a mutable collection. You could write a contact that verifies it really is returning a fresh copy that doesn't reflect changes to the original.,,
4.66395E+17,oaktownsam#0815,2020-02-24,`eq-but-works-on-indirects?`,,
2.66505E+17,notjack#9941,2020-02-24,"@oaktownsam that could work, but like... why? When mutable collections are involved, in my experience structural equality stops being a useful default. If I really wanted to check for structural equality between mutable collections, I'd just do `(equal? (->my-immutable-collection xs) (->my-immutable-collection ys))`",,
2.66505E+17,notjack#9941,2020-02-24,I'm way more likely to remember that than to remember the name of `eq-but-works-on-indirects?`,,
4.66395E+17,oaktownsam#0815,2020-02-24,Honestly this sort of problem hasn't bitten me much in Racket.,,
2.66505E+17,notjack#9941,2020-02-24,I blame that on the lack of generic collection interfaces,,
1.93202E+17,rocketnia#4517,2020-02-24,"I think of ""mutable vector that's compared by present contents, which are likely to be stable by the time we compare them"" and ""mutable vector that's compared by potential future behavior, ignoring its present contents altogether"" as two types that can coexist. So although I summarized `equal?` as traversing into mutable collections to find cycles, I think that's not a really essential factor in the design, and I probably wouldn't think twice if future collections were designed to have the other kind of equality.",,
2.66505E+17,notjack#9941,2020-02-24,"agreed, I don't think it's essential either",,
4.66395E+17,oaktownsam#0815,2020-02-25,"I had some thought yesterday about ""what if there was some opaque value that you could interrogate a value for that you could use as a proxy for equivalence"" I just realized that I invented hash codes.",,üòÜ (1)
3.29023E+17,nixin72#3554,2020-02-25,"Is there a way to pretty print lists the same way as in SBCL? Like if you print a big nested tree in SBCL it'll format it properly for you, but this isn't the default behaviour in Racket. Is there a way to do this?",,
3.29023E+17,nixin72#3554,2020-02-25,"I'm trying to play around with the `pretty-print` function, but can't figure out how to get it to behave the way I want.",,
3.29023E+17,nixin72#3554,2020-02-25,It's not printing any differently than just `print`  or `println`,,
2.66505E+17,notjack#9941,2020-02-25,"@nixin72 does messing with `pretty-print-columns` do what you want? also, if some of the lists are fixed size, you could replace them with structs or record types (https://docs.racket-lang.org/rebellion/Record_Types.html) which will have more useful printed representations than lists",,
4.66395E+17,oaktownsam#0815,2020-02-25,"I'm trying to ""fix"" a python script so that it properly gracefully exits on SIGINT and all I can think about is this Mike Sperber video about CML https://www.youtube.com/watch?v=pf4VbP5q3P0",,üíØ (2)
2.66505E+17,notjack#9941,2020-02-25,Events are amazing,,
2.66505E+17,notjack#9941,2020-02-25,"They're frustratingly low-level, but that's not really their fault. Locks are frustratingly low-level too. Code usually wants to be using something built on top of events or locks or what have you.",,
2.66505E+17,notjack#9941,2020-02-25,and that stuff is way easier to build on top of events than locks,,
4.62028E+17,StephenD#5938,2020-02-26,"At 62 response, sadly the histogram doesn't show¬†how many people use two or even three editors. https://www.surveymonkey.com/results/SM-GBD6J7ST7/",,
4.56227E+17,Deleted User#0000,2020-02-26,Is the poll still open?,,
4.62028E+17,StephenD#5938,2020-02-26,Yes,,
4.56227E+17,Deleted User#0000,2020-02-26,Where can I vote?,,
4.62028E+17,StephenD#5938,2020-02-26,"Hi, 

quick racket editor survey: https://www.surveymonkey.co.uk/r/H23ZTDW",,üëç (3)
4.56227E+17,Deleted User#0000,2020-02-27,Emacs,,meow (2)
4.62028E+17,StephenD#5938,2020-02-28,"> PLT @ Northwestern is seeking out programs to help us understand the performance of Racket ""in the wild"".
> If you have any Racket applications that you use and care about how it performs, please let us know about them in the following survey:  

https://forms.gle/b2eKMZdvXjpRHKL38",,
4.56227E+17,Deleted User#0000,2020-02-28,How game make racket ü§î,,
4.62028E+17,StephenD#5938,2020-02-28,You could start with Realm of Racket,,
4.62028E+17,StephenD#5938,2020-02-28,Or https://docs.racket-lang.org/teachpack/2htdpuniverse.html,,
4.62028E+17,StephenD#5938,2020-02-28,https://github.com/racket/racket/wiki/Game-Development,,
4.62028E+17,StephenD#5938,2020-02-28,https://itch.io/jam/racket-2019-gamejam,,
4.56227E+17,Deleted User#0000,2020-02-28,Is there a naming convention guide in Racket docs?,,
4.56227E+17,Deleted User#0000,2020-02-28,"eg `foo%` is a class, `#%bar` is a low-level procedure etc",,
2.66505E+17,notjack#9941,2020-02-28,There might be some suggestions in the style guide,,
2.66505E+17,notjack#9941,2020-02-28,See also https://github.com/racket/rhombus-brainstorming/issues/49,,
4.56227E+17,Deleted User#0000,2020-02-28,That's a good one. I'll put it all in a single page for future reference.,,
4.56227E+17,Deleted User#0000,2020-02-28,It's missing `the-` and `current-`,,
4.56227E+17,Deleted User#0000,2020-02-28,nvm `current-` is there.,,
4.56227E+17,Deleted User#0000,2020-02-28,@StephenD thanks,,üòÄ (1)
5.80709E+17,bub#6265,2020-03-01,hey!,,
5.80709E+17,bub#6265,2020-03-01,"i need a help for a problem , im confused if i've done it right",https://cdn.discordapp.com/attachments/618895179343986688/683739266555183110/unknown.png,
5.80709E+17,bub#6265,2020-03-01,,https://cdn.discordapp.com/attachments/618895179343986688/683739397325193217/unknown.png,
5.80709E+17,bub#6265,2020-03-01,@oaktownsam,,
4.66395E+17,oaktownsam#0815,2020-03-01,`i` should be the position not the character,,
5.80709E+17,bub#6265,2020-03-01,üò¶,,
5.80709E+17,bub#6265,2020-03-01,but i got the result right,,
4.66395E+17,oaktownsam#0815,2020-03-01,The idea is that you could change `i` to a different number and it would change where the character would be inserted,,
5.80709E+17,bub#6265,2020-03-01,and they've not shown about positioning of strings at i,,
4.66395E+17,oaktownsam#0815,2020-03-01,"the text says ""at position i""",,
4.66395E+17,oaktownsam#0815,2020-03-01,"define `i` as 5 and replace all of the 5's in the expression with `i` (and change the inserting string to `""_""`) then it would be correct",,
5.80709E+17,bub#6265,2020-03-02,replace all of the 5's in the expression?,,
5.80709E+17,bub#6265,2020-03-02,i dont understand üò¶,,
3.13961E+17,GmaAnders#4219,2020-03-02,Is anyone willing to help me out with my hw? I‚Äôm so lost ü•∫,,
2.66505E+17,notjack#9941,2020-03-02,"@bub  @GmaAnders I can't help now and I'm not sure if anyone else will have time to, but for future reference please use the #help channel when asking for help, especially for homework problems or school projects",,
2.66505E+17,notjack#9941,2020-03-02,"@oaktownsam btw thanks again for sharing your `--binary-lib` adventures in the Racket slack, people seem to keep coming back to that thread",,
4.66395E+17,oaktownsam#0815,2020-03-02,I saw that.  I wish I had some free time to work on package server stuff.  It'd be nice to have a 1-2 revs back of binary libs.,,
2.66505E+17,notjack#9941,2020-03-02,Same and agreed,,
2.66505E+17,notjack#9941,2020-03-02,"Even just one version back would be a huge improvement, because people's CI builds that use my docker images and the built-package catalog would stop breaking during the few days to weeks between when a new version is released and when I get around to updating `jackfirth/racket:latest` to point to it",,
4.66395E+17,oaktownsam#0815,2020-03-03,https://weinholt.se/articles/drivers-loko-scheme/,,
4.66395E+17,oaktownsam#0815,2020-03-04,This is fascinating CML at the driver level in an R6RS scheme,,
4.56227E+17,Deleted User#0000,2020-03-05,Ya guys use racket at work?,,
2.66505E+17,notjack#9941,2020-03-05,Alas no,,
2.66505E+17,notjack#9941,2020-03-05,but it's useful to get some cross pollination from other ecosystems so I'm not too sad about it yet,,
4.56227E+17,Deleted User#0000,2020-03-05,Oh,,
2.66505E+17,notjack#9941,2020-03-05,Mostly I use Java at work,,
4.66395E+17,oaktownsam#0815,2020-03-05,"I do, but it's mostly to replace my day to day python/bash usage.",,
3.29023E+17,nixin72#3554,2020-03-05,"Looking through public Racket repos on GitHub, I've never found an organization using Racket except for Racket itself and a handful of orgs made to host Racket libs or frameworks - like Nanopass for example.",,
2.66505E+17,notjack#9941,2020-03-05,It's not widely used,,
2.66505E+17,notjack#9941,2020-03-05,"Relative to lisp and scheme in general it is, but not nearly as much as Clojure",,
3.29023E+17,nixin72#3554,2020-03-05,"Yea, for sure",,
3.29023E+17,nixin72#3554,2020-03-05,Is there any organizations using Scheme either for real world work?,,
3.29023E+17,nixin72#3554,2020-03-05,"I know there's a small handful using CL, never seen Scheme though I think",,
2.66505E+17,notjack#9941,2020-03-05,"There's a small bioinformatics company using racket, one of the folks there gave a talk about it at racketcon last year",,
3.29023E+17,nixin72#3554,2020-03-05,"Oh neat! Any idea if Naughty Dog still uses Racket? I know they were a few years back, can't find anything recent though",,
4.56227E+17,Deleted User#0000,2020-03-05,I use racket text processing and some scripting stuff,,
4.62028E+17,StephenD#5938,2020-03-05,I use it secretly at work. Don't tell.,,emoji_2 (2)
4.62028E+17,StephenD#5938,2020-03-05,"London Racket Meet-up 

Thursday 9th April 1-2pm

Meet at 1pm at ‚ÄòThe Last Word‚Äô (cafe)[1] and after introductions we will move to The Alan Turing Institute[2].

[1] The Last Word (cafe in front of British Library)
96 Euston Rd, London NW1 2DB 
Google maps: https://goo.gl/maps/SbUeExYddSnWPQbz6 

[2] The Alan Turing Institute https://www.turing.ac.uk/

It will be casual introductions and chat, though if someone wants to do a short talk or demo that would be most welcome.

Please register at https://forms.gle/XDvr5gtGKb6K2DXh8 (required for access to Turing Institute meeting room)

Please let me know if you are interested, even if you can‚Äôt confirm attendance. 

Many thanks to Dr James Geddes and The Alan Turing Institute for hosting this event.

Kind regards,

Stephen",,"meow (2),ü¶ñ (2),üß∂ (2)"
4.62028E+17,StephenD#5938,2020-03-05,Pinned a message.,,
4.56227E+17,Deleted User#0000,2020-03-06,,https://cdn.discordapp.com/attachments/618895179343986688/685381971286818952/Screenshot_2020-03-06-12-33-00-824_com.reddit.frontpage.jpg,
4.62028E+17,StephenD#5938,2020-03-06,https://stackoverflow.blog/2020/02/05/the-2020-developer-survey-is-now-open/,,
4.62028E+17,StephenD#5938,2020-03-06,Represent!,,
4.66395E+17,oaktownsam#0815,2020-03-07,Weird.  The link for the survey has already expired.,,
4.89956E+17,WillBAnders#5226,2020-03-07,It's from February,,
4.66395E+17,oaktownsam#0815,2020-03-07,doh,,
4.62028E+17,StephenD#5938,2020-03-08,Oops,,
2.50764E+17,4984#4984,2020-03-09,lua is causing me a headache!,,
4.56227E+17,Deleted User#0000,2020-03-09,Are there forms of `cond` with different fallthroughs?,,
4.56227E+17,Deleted User#0000,2020-03-09,"eg ""try all cases and cons the results of successful predicates"" or ""try all cases and cons the results of successful predicates until you hit the first case that fails""",,
4.62028E+17,StephenD#5938,2020-03-09,I might be missing the point but sounds like a `(filter pred lst)`?,,
4.62028E+17,StephenD#5938,2020-03-09,"There is also things like `andmap` but I suspect you want to write a macro `(conscond? ...`
üòÉ",,
4.56227E+17,Deleted User#0000,2020-03-09,"I suppose it could be procedurally implemented  like
```Racket
(define (cond* preds)
  (filter values (map (Œª (p) (and ((car p)) ((cdr p)))) preds)))

(cond*
 `((,(thunk (zero? n)) . ,(thunk ""n is zero""))
   (,(thunk (string=? foo ""fnord"")) . ,(thunk (run-process! 'foo)))
   (,(thunk #t) . ,(thunk 'fallthrough))))
```",,
4.56227E+17,Deleted User#0000,2020-03-09,Feels very Common Lispy.,,
4.89956E+17,WillBAnders#5226,2020-03-09,that seems like a lot of unnecessary thunks,,
4.56227E+17,Deleted User#0000,2020-03-09,How else would you do it without a macro?,,
4.89956E+17,WillBAnders#5226,2020-03-09,I would use a macro.,,
4.56227E+17,Deleted User#0000,2020-03-09,That's my point.,,
4.89956E+17,WillBAnders#5226,2020-03-09,Looks like `(eval '(+ 1 2))` is good.,,
4.66395E+17,oaktownsam#0815,2020-03-09,@Deleted User `conde` in Kanren is kinda like that in a way.,,
4.56227E+17,Deleted User#0000,2020-03-09,Ooh,,
4.56227E+17,Deleted User#0000,2020-03-09,"Apparently I was thinking of `cond{e,a,u}`.",,
4.66395E+17,oaktownsam#0815,2020-03-09,Of course then you are in the Kanren cinematic universe,,
4.56227E+17,Deleted User#0000,2020-03-09,oh no,,
4.66395E+17,oaktownsam#0815,2020-03-09,"Get yourself a copy of ""The Reasoned Schemer"".  It's a nice bit of Logic programming integrated into Scheme.",,
4.66395E+17,oaktownsam#0815,2020-03-09,I just found a 67 line file with about 5 macros that I never remember having written,,
4.66395E+17,oaktownsam#0815,2020-03-09,And it is terse so I'm not even sure what I was trying to do.,,
4.56227E+17,Deleted User#0000,2020-03-09,Hahah,,
4.56227E+17,Deleted User#0000,2020-03-09,I've got copies of all *The \* Schemer*s but I don't have much time to read lately.,,
2.50764E+17,4984#4984,2020-03-10,i realize i have no clue how to write a parser,,
2.50764E+17,4984#4984,2020-03-10,im tired of making languages for a bit,,
2.50764E+17,4984#4984,2020-03-10,time to learn scribble? anyone need some docs re-writen,,
4.56227E+17,Deleted User#0000,2020-03-10,Make  a docs that detaily explains Android tv api,,
4.56227E+17,Deleted User#0000,2020-03-10,I bet you can't,,
2.50764E+17,4984#4984,2020-03-10,is it because its hard or because i dont know enough,,
4.56227E+17,Deleted User#0000,2020-03-10,@4984 it's hard af,,
4.62028E+17,StephenD#5938,2020-03-10,@4984 I don‚Äôt know how many of these are still active - the page is a little old https://github.com/racket/racket/wiki/Documentation-Improvements,,üëç (1)
4.62028E+17,StephenD#5938,2020-03-10,"It‚Äôs a wiki so you can remove completed tasks, and add any new ones you identify.",,
4.62028E+17,StephenD#5938,2020-03-10,Maybe https://github.com/racket/racket/issues?q=is%3Aopen+is%3Aissue+scribble,,
2.50764E+17,4984#4984,2020-03-11,its easy to make something neat in js because nobody knows what they are doing,,
2.50764E+17,4984#4984,2020-03-11,unlike racket where yall too smart,,üòπ (1)
3.29023E+17,nixin72#3554,2020-03-11,"So a while back when I was working on my own programming language one thing that I really wanted was a type of comment that would span for only a single token. I've never seen another language that has a comment like that, where you can just dump it inline, but TIL that in Racket you can do it with `#;comment` and I think that's awesome!",,üíØ (1)
4.62028E+17,StephenD#5938,2020-03-11,`#;` is awesome - I use it _all the time_,,
3.29023E+17,nixin72#3554,2020-03-11,"Yea, plus since it reads until the end of the next s-expr you can do `#;(this is a comment) this-is-a-symbol`, to comment out specfic expressions and stuff,  which is super dope",,"ü•á (1),racket (2)"
2.50764E+17,4984#4984,2020-03-12,just like some versions of tcl!,,
2.50764E+17,4984#4984,2020-03-12,ooooh tcl + racket,,
4.66395E+17,oaktownsam#0815,2020-03-12,"I think I used to know this, but now I forget: is there a way to turn off blue boxes in DrRacket?",,
4.66395E+17,oaktownsam#0815,2020-03-12,"I think this does it, but there is still a big lag right after I type in an identifier",https://cdn.discordapp.com/attachments/618895179343986688/687834241257570324/unknown.png,
4.62028E+17,StephenD#5938,2020-03-13,"Hi All,¬†
While I haven't yet, I'm expecting it will be appropriate to cancel the meet up on 9 April.¬†
Now the good news: I'm planning an 'After Work' Racket London Picnic Tuesday 16 June in¬†Kensington Gardens

Probably start at 5pm sunset is around 9:20pm¬†
Stephen",,"üåá (3),üêú (1)"
4.56227E+17,Deleted User#0000,2020-03-15,Is there a way to change the Datalog backend to something that isn't `hasheq` without modifying the language?,,
4.56227E+17,Deleted User#0000,2020-03-15,I'm thinking about the feasibility of implementing a Datomic-esque toy DB in Racket.,,
2.66505E+17,notjack#9941,2020-03-15,It's `hasheq`??? _why_,,
2.66505E+17,notjack#9941,2020-03-15,Honestly I'd file a bug for that and just go fix it to be a regular `equal?`-based hash,,
4.66395E+17,oaktownsam#0815,2020-03-15,I think it is `equal?` based hashes already.  https://github.com/racket/datalog/blob/master/runtime.rkt#L33,,
4.66395E+17,oaktownsam#0815,2020-03-15,I think to make it work with a different kind of storage the existing runtime would need to be factored into a `theory` interface and then put together implementations for `hash` and persistent storage backends.  Classic refactoring stuff.,,
4.66395E+17,oaktownsam#0815,2020-03-15,The language side will probably need to be extended in some way to handle whatever additional configuration needed to use a different storage.,,
4.66395E+17,oaktownsam#0815,2020-03-15,"Oh! You could do a ""trick"" with ""external queries"" it looks like.",,
4.66395E+17,oaktownsam#0815,2020-03-15,That would be easier probably.,,
4.66395E+17,oaktownsam#0815,2020-03-15,External queries are probably not the right way.  It would probably be a huge hack.  Without recursion it looks tough.,,
4.89956E+17,WillBAnders#5226,2020-03-16,"Is there a name for a group operation, like `(group 3.4)`? I know it's not needed in lips but figured Racket might have something along those lines.",,
4.89956E+17,WillBAnders#5226,2020-03-16,There's `(identity x)`. Guess that's probably the closest I'd get.,,
2.50764E+17,4984#4984,2020-03-18,i thought someone was in voice,,
2.50764E+17,4984#4984,2020-03-18,"but i was fooled, tricked and even possibly bamboosled",,
4.66395E+17,oaktownsam#0815,2020-03-18,We were for a minute testing some stuff.,,
3.29023E+17,nixin72#3554,2020-03-19,"Is there a way to use the Racket reader to transform a string into a list? Like, just to read in the code as a string, but don't evaluate any of it. So you can do
```scheme
(read ""(println (if cond then (list 1 2 3)))"")
; '(println (if cond then (list 1 2 3)))
```
To get the string as a racket syntax tree?",,
4.66395E+17,oaktownsam#0815,2020-03-19,yes,,
4.66395E+17,oaktownsam#0815,2020-03-19,"```
(call-with-input-string ""(car (cons 1 2))"" read)
```",,
3.29023E+17,nixin72#3554,2020-03-20,Thank you!,,
2.10516E+17,Iyad's Step Dad#0428,2020-03-20,is anyone active i need help on a for loop,,
2.10516E+17,Iyad's Step Dad#0428,2020-03-20,nothing to complex,,
3.29023E+17,nixin72#3554,2020-03-20,What's up?,,
2.10516E+17,Iyad's Step Dad#0428,2020-03-20,basically i have this as a question,,
2.10516E+17,Iyad's Step Dad#0428,2020-03-20,"write a for loop that iterates over a list, reverses it and subtracts 2 from each element",,
2.10516E+17,Iyad's Step Dad#0428,2020-03-20,and i've never been confused,,
2.10516E+17,Iyad's Step Dad#0428,2020-03-20,i know it's basic but im really bad at coding atm,,
3.29023E+17,nixin72#3554,2020-03-20,Hmm you have to reverse it with the loop? Or can you do that separately? You're not able to loop over lists backwards in Racket as they're singly linked lists,,
2.10516E+17,Iyad's Step Dad#0428,2020-03-20,i guess separately then,,
3.29023E+17,nixin72#3554,2020-03-20,"Okay, what you could do to map the list is 
```scheme
(for/list ([n lst]) (- n 2))
```
Which would return a new list with each element subtracted by two. Then you could write a reverse function by recursively iterating over a list and appending the head to the tail",,
2.10516E+17,Iyad's Step Dad#0428,2020-03-20,"(define lst '(1 2 3 4))

(for/list ([n lst]) (- n 2))

'(-1 0 1 2)

this is what i get in return",,
2.17712E+17,gomma#4017,2020-03-20,now reverse it,,
3.29023E+17,nixin72#3554,2020-03-20,"Yea, they got it in #help",,
2.17712E+17,gomma#4017,2020-03-20,o true my bad,,
3.29023E+17,nixin72#3554,2020-03-20,No problem!,,
2.10516E+17,Iyad's Step Dad#0428,2020-03-20,thanks everyone üò¢,,
2.10516E+17,Iyad's Step Dad#0428,2020-03-20,you came through nixin and jack,,
3.29023E+17,nixin72#3554,2020-03-20,Anytime üëç,,
2.50764E+17,4984#4984,2020-03-20,welcome user!!,,
2.05054E+17,leaf#2107,2020-03-20,thanks!,,
2.50764E+17,4984#4984,2020-03-20,hello all today!,,
2.50764E+17,4984#4984,2020-03-20,i am thinking of starting a website!,,üëç (3)
2.50764E+17,4984#4984,2020-03-20,i found a really good domain name,,
4.56227E+17,Deleted User#0000,2020-03-22,I'm planning to make a DSL for knitting.,,üíØ (1)
4.56227E+17,Deleted User#0000,2020-03-22,It's a good opportunity to study Racklog.,,
4.56227E+17,Deleted User#0000,2020-03-22,Or maybe miniKanren.,,
4.62028E+17,StephenD#5938,2020-03-22,"> i am thinking of starting a website!
@4984  are you going to try Polyglot? https://sagegerard.com/racket-powered.html",,
4.56227E+17,Deleted User#0000,2020-03-22,"Since Racket doesn't implement `cond-expand`, is it possible to tell whether the Scheme implementation running a script (say, `#lang r6rs`) is Racket in a way that doesn't break the script for other implementations?",,
2.17712E+17,gomma#4017,2020-03-22,dejavu,,
4.66395E+17,oaktownsam#0815,2020-03-22,Isn't there a de-facto standard for R6RS module loading that tries to load implementation specific modules?,,
4.66395E+17,oaktownsam#0815,2020-03-22,"https://docs.racket-lang.org/r6rs/libpaths.html
> In addition, when an R6RS library path is converted, a file extension is selected at compile time based on installed files. The search order for file extensions is "".mzscheme.ss"", "".mzscheme.sls"", "".ss"", "".sls"", and "".rkt"". When resolving version constraints, these extensions are all tried when looking for matches.",,
4.66395E+17,oaktownsam#0815,2020-03-22,Make a library that just has `(define (implementation) 'racket)` (similarly for other schemes),,
4.56227E+17,Deleted User#0000,2020-03-22,I think that defeats the point of writing a portable script.,,
4.56227E+17,Deleted User#0000,2020-03-22,I'd need to assume everyone running the script on Racket has that library.,,
4.66395E+17,oaktownsam#0815,2020-03-22,"No, other R6RS have similar conventions",,
4.56227E+17,Deleted User#0000,2020-03-22,Most of them just use `cond-expand`. Chez and Racket are the only exceptions I know of.,,
4.66395E+17,oaktownsam#0815,2020-03-22,Well here's how they handle it on pffi https://github.com/ktakashi/r6rs-pffi/tree/master/src/pffi,,
4.56227E+17,Deleted User#0000,2020-03-22,Ugh,,
4.56227E+17,Deleted User#0000,2020-03-22,That's so ugly.,,
4.66395E+17,oaktownsam#0815,2020-03-22,At least it allows you to split of the platform specific ish,,
4.56227E+17,Deleted User#0000,2020-03-22,That's true.,,
5.39603E+17,spacey üåå#7238,2020-03-22,@StephenD that website is mind blowing! :D,,
5.39603E+17,spacey üåå#7238,2020-03-22,it looks like the future of web dev,,üíØ (1)
4.62028E+17,StephenD#5938,2020-03-26,Nice: https://www.luisquintanilla.me/2020/03/21/serverless-racket-azure-functions-custom-handlers/,,
4.56227E+17,Deleted User#0000,2020-03-26,Ooh!,,
5.39603E+17,spacey üåå#7238,2020-03-26,"@StephenD how does your status say ""playing DrRacket""?",,
5.39603E+17,spacey üåå#7238,2020-03-26,black magic,,
3.96713E+17,◊ê÷≤◊ë÷¥◊ô#7053,2020-03-27,"He used the custom status, it‚Äôs different to the actual playing status if you compare it with another person",,
4.62028E+17,StephenD#5938,2020-03-27,I'd love to do a basic discord integration with DrRacket as a game https://discordapp.com/developers/docs/rich-presence/how-to,,racket (3)
4.56227E+17,Deleted User#0000,2020-03-27,Emacs does it this way: https://github.com/Mstrodl/elcord,,üòÆ (1)
4.62028E+17,StephenD#5938,2020-03-27,ooh only 500 lines of elisp. Might be able to do this as a quickscript,,
4.56227E+17,Deleted User#0000,2020-03-27,It uses a fifo file and comes with a C# script to simulate it on Windows.,,
4.66395E+17,oaktownsam#0815,2020-03-27,"@StephenD maybe we should have a ""homework"" flair on Reddit",,üíØ (2)
4.56227E+17,Deleted User#0000,2020-03-27,"Which one is more legible?```Racket
(begin
  (foo)
  (bar)
  var)```or```Racket
(begin0 var
  (foo)
  (bar))```where `var` is a static value.",,
4.56227E+17,Deleted User#0000,2020-03-27,"I've seen the latter used like```Racket
(begin0 var
  [...]
  (set! var foo))```although this sounds like a good use-case for Clojure's `doto` macro:```Racket
(begin
  [...]
  (doto var (set! foo)))```",,
4.56227E+17,Deleted User#0000,2020-03-27,(`doto` is like `->` for side-effects ‚Äî it keeps passing the original object that gets mutated through the pipeline.),,
4.62028E+17,StephenD#5938,2020-03-27,"> @StephenD maybe we should have a ""homework"" flair on Reddit
@oaktownsam  DONE",,üëè (1)
4.56227E+17,Deleted User#0000,2020-03-27,"ie```Clojure
(-> foo
  (bar)
  (baz))
```expands to```Clojure
(baz (bar foo))```whereas```Clojure
(doto foo
  (bar)
  (baz))```expands to```Clojure
(do ; Clojure's `begin'
  (bar foo)
  (baz foo)
  foo)```",,
4.62028E+17,StephenD#5938,2020-03-27,"I don‚Äôt know the clojure `doto` macro.
Not a fan of `begin0` - I don‚Äôt remember ever seeing it used, and - in my opinion - I believe it is confusing/counterintuitive. 
I should be asleep but is that a Clojure `->` ?  Not sure I understand.

I sorta like the `doto` , but I‚Äôm not keen on the syntax. Should be 
```lisp
(doto! foo
 bar
 baz)
```
More *rackety*.",,
4.62028E+17,StephenD#5938,2020-03-27,"@oaktownsam I‚Äôm keen to push the homework questions (both on reddit and here) to `racket-users` -> the best place to ask hw questions is on https://groups.google.com/forum/m/#!forum/racket-users 

On reddit I‚Äôve noticed what I believe is poor advice - and many students are using the teaching languages, not Racket or Scheme.",,
4.62028E+17,StephenD#5938,2020-03-27,They are better off on racket-users.,,
4.66395E+17,oaktownsam#0815,2020-03-27,Yes.  I was brainstorming some ideas around that.,,
4.66395E+17,oaktownsam#0815,2020-03-27,Like how to ask homework questions advice,,
4.66395E+17,oaktownsam#0815,2020-03-27,"Like, ""did you ask your prof/TA first""",,üëç (1)
4.66395E+17,oaktownsam#0815,2020-03-27,Or require more before we help.  What do you have that is working so far?,,
4.66395E+17,oaktownsam#0815,2020-03-27,etc.,,
4.62028E+17,StephenD#5938,2020-03-27,"I asked samt if it was appropriate to kick or ban;
>  I would prefer to be willing to help people, but not to write their code for them, similar to the response people get on the mailing list.
> For someone who explicitly wants someone else to do the assignment,
> I'm fine with saying no to that. I wouldn't want to ban people unless it's a repeat thing.",,
4.66395E+17,oaktownsam#0815,2020-03-27,"It would be good if we got better ""quality"" questions maybe?",,üëç (1)
4.62028E+17,StephenD#5938,2020-03-27,"> Or require more before we help.  What do you have that is working so far?
@oaktownsam  my latest experiences have been the just want the answer. I was even offered payment",,
4.66395E+17,oaktownsam#0815,2020-03-27,There was a recent post about how it is depressing that pretty much all of the traffic is students asking for homework help.  And I can see how we want to be a helpful welcoming community.,,
4.62028E+17,StephenD#5938,2020-03-27,‚Äòquestion‚Äô flair for actual question,,
4.66395E+17,oaktownsam#0815,2020-03-27,I saw that.  I was going to ask you not to publicly shame a person but then they appeared to be doing it repeatedly,,
4.62028E+17,StephenD#5938,2020-03-27,‚Äò‚Äôhomework‚Äô flair for homework,,
4.62028E+17,StephenD#5938,2020-03-27,"> I saw that.  I was going to ask you not to publicly shame a person but then they appeared to be doing it repeatedly
@oaktownsam  does applying the homework flair count as shaming?",,
4.66395E+17,oaktownsam#0815,2020-03-27,"No. I meant when you called someone out on what they said in private.   My preferred stance would be to tell them privately that it is inappropriate, etc.  And not to call them out on a public forum unless it is repeated behavior.  

Without threads in Discord, I catch up on hours of convo and then try not to derail back several hours.",,
4.62028E+17,StephenD#5938,2020-03-27,Good point.,,
4.66395E+17,oaktownsam#0815,2020-03-27,Also one of my frustrations around this is that I am not a CS Teacher.,,
4.62028E+17,StephenD#5938,2020-03-27,Me neither,,
4.66395E+17,oaktownsam#0815,2020-03-27,And it's slightly not fair to our community in a way.,,
4.66395E+17,oaktownsam#0815,2020-03-27,To provide free tech support.  Not sure how Python chats handle it.,,
4.62028E+17,StephenD#5938,2020-03-27,Python has a separate reddit I believe,,
4.66395E+17,oaktownsam#0815,2020-03-27,Also somewhat hard to compare because the Python community is a lot larger,,
4.62028E+17,StephenD#5938,2020-03-27,They are very clear r/python is news and questions are for learnpython,,
4.62028E+17,StephenD#5938,2020-03-27,I think it‚Äôs a good idea,,
2.50764E+17,4984#4984,2020-03-27,it has its benifits,,
2.50764E+17,4984#4984,2020-03-27,also hello all üëã,,"üòÄ (2),üëã (3)"
4.66395E+17,oaktownsam#0815,2020-03-27,Yeah that does sound better.,,
2.05054E+17,leaf#2107,2020-03-27,üëã,,üòÄ (1)
2.66505E+17,notjack#9941,2020-03-27,"@Deleted User in general, don't use `begin0` if it doesn't let you get rid of a variable. So this usage would be fine:
```scheme
(begin0
  (get-foo)
  (println ""Got the foo!""))
```
because the alternative is this:
```scheme
(begin
  (define foo (get-foo))
  (println ""Got the foo!"")
  foo)
```",,
4.56227E+17,Deleted User#0000,2020-03-27,That's a good guideline.,,
5.39603E+17,spacey üåå#7238,2020-03-28,Hi @4984 ! :D,,
2.50764E+17,4984#4984,2020-03-28,hi!,,
2.50764E+17,4984#4984,2020-03-28,im doing programming but not racket üôà,,
5.39603E+17,spacey üåå#7238,2020-03-28,"Oh sweet, what language?",,
1.70333E+17,thisisausername#5167,2020-03-28,Racket is pretty neat.,,üëç (2)
4.62028E+17,StephenD#5938,2020-03-29,@thisisausername we all have different reasons for liking racket - why do you think it is neat?,,
1.70333E+17,thisisausername#5167,2020-03-29,"I've been learning it for my programming paradigms class, I just think it's a neat new way to program",,
1.70333E+17,thisisausername#5167,2020-03-29,Infinitely better than logic programming with prolog,,
3.29023E+17,nixin72#3554,2020-03-29,Logic programming with Prolog is really hard,,
3.29023E+17,nixin72#3554,2020-03-29,Fun and rewarding when you get on a roll or get things right,,
3.29023E+17,nixin72#3554,2020-03-29,But hard,,
4.56227E+17,Deleted User#0000,2020-03-29,You can mix both with Racklog!,,
3.29023E+17,nixin72#3554,2020-03-29,I've never tried Racklog - the only time I ever use Prolog is when I'm teaching it üòÇ Never found a practical usecase where Prolog/Racklog is better than some other tool,,
4.66395E+17,oaktownsam#0815,2020-03-29,Kanren > Prolog üòõ,,
1.70333E+17,thisisausername#5167,2020-03-29,"Yeah, in my class we start with concurrent programming w/ golang, then logic w/ prolog, now functional w/ scheme/racket/whatever it's called",,
3.29023E+17,nixin72#3554,2020-03-29,"In the one I TA for we do logic programming with Prolog, ""functional"" with Common Lisp, imperative with C, OOP with Ruby and then aspect-oriented programming with AspectJ. It's a lot for one class... I've tried getting it slimmed down, but unfortunately I have no real control over the class... It's kinda fun for some students, but mostly useless since we can't spend enough time on anything for them to really learn much.",,
1.70333E+17,thisisausername#5167,2020-03-29,"My class technically includes Java for OOP, but we've already learned that in the past so it's just one assignment worth 3% of our mark and it's not even included on exams",,
1.70333E+17,thisisausername#5167,2020-03-29,"Since we skip over that though we basically get one language/paradigm per month, which isn't great but not horrible either",,
1.70333E+17,thisisausername#5167,2020-03-29,Although Racket is being basically self-taught since COVID-19,,üòπ (1)
4.66395E+17,oaktownsam#0815,2020-03-29,https://twitter.com/whitequark/status/1239800500301836289?s=19,,"üòÇ (2),üëç (1),üòπ (1)"
2.66505E+17,notjack#9941,2020-03-29,@oaktownsam do you have any opinions on this feature? https://github.com/racket/racket/pull/3076,,
2.66505E+17,notjack#9941,2020-03-29,asking you since you've used transducers+reducers,,
4.66395E+17,oaktownsam#0815,2020-03-29,I'll take a look in a few.,,üëç (1)
4.66395E+17,oaktownsam#0815,2020-03-29,"I have a opinions about many of those things!
- Racket should be avoiding monomorphic functions (in general), especially when it's obvious you need one for lists and then vectors and then streams, etc.
- Where is the line for what should obviously go into the core and what should go in an external package?",,
2.66505E+17,notjack#9941,2020-03-29,"I honestly don't think whether it's in an external package matters much here. If it's not useful enough to be in the core, it's probably not useful enough for most racketeers to bother using at all. As a personal utility for an idiosyncratic style, a package makes sense... but most of the time people put code like this into packages fully expecting they're useful enough for everyone and that being external and separate from the core API the utility is for is in of itself a benefit. Which it's not.",,
4.66395E+17,oaktownsam#0815,2020-03-29,I think I specifically was looking for argmax over streams/sequences and just ended up rolling my own bespoke version.,,
2.66505E+17,notjack#9941,2020-03-29,yeah üò¶,,
2.66505E+17,notjack#9941,2020-03-29,"on the bright side, Rebellion has `into-max` and `into-min` and they support `argmax`-like features, as well as custom comparators",,
4.56227E+17,Deleted User#0000,2020-04-01,Hi is it possiblo to bind two .exes in one using racket?,,
4.56227E+17,Deleted User#0000,2020-04-01,Bind?,,
4.56227E+17,Deleted User#0000,2020-04-01,yep,,
5.39603E+17,spacey üåå#7238,2020-04-01,"I think erkin is asking what you mean by ""bind"" :)",,
4.56227E+17,Deleted User#0000,2020-04-02,Put two execuable files together,,
4.56227E+17,Deleted User#0000,2020-04-02,I don't think that's something you can do at all. At least not in the way I'm guessing you mean.,,
6.77498E+17,kaaaate#2410,2020-04-02,`cat 1.exe 2.exe > 1+2.exe` duh üòÖ,,meow (3)
3.29023E+17,nixin72#3554,2020-04-02,https://tenor.com/view/big-brain-markiplier-gif-14835823,,
4.62028E+17,StephenD#5938,2020-04-02,"> Put two execuable files together
@Deleted User  do you mean a linker?
(Edit)
My mistake there are tools that do that but not in Racket.",,
2.17712E+17,gomma#4017,2020-04-02,"i wanted to make a DAW proof of concept and i made minor progress in that, but i kind of want to put that on hold and make a music control DSL or soemthing",,üëç (1)
2.17712E+17,gomma#4017,2020-04-02,I want to explore some concepts in just intonation,,
2.17712E+17,gomma#4017,2020-04-02,"in the past i used a parser and created a grammar that handled divisive rhythm and interpreting the symbols however i wanted (so i made different interpretations, one being a pitch notation for equal temperemant, another being a pitch notation for just intonation, etc)",,
2.17712E+17,gomma#4017,2020-04-02,"and then i would make functions that worked with those parsed units, allowing me to combine them and operate on them, but i remember it felt clunky and wrong",,
4.62028E+17,StephenD#5938,2020-04-02,Sounds good (sorry bad pun),,
2.17712E+17,gomma#4017,2020-04-02,i'm wondering now if i could just make the language part more powerful,,
2.17712E+17,gomma#4017,2020-04-02,but i'm not sure how,,
2.17712E+17,gomma#4017,2020-04-02,"something's telling me to just have some sort of symbol naming strategy so i can abstract entire chunks of music and then use that symbol, but i feel like that's similar to what i was already doing.",,
2.17712E+17,gomma#4017,2020-04-02,i really hate that my hard drive broke and i lost all my work,,
2.17712E+17,gomma#4017,2020-04-02,and i'm an idiot i just never put the effort into learning how to use git properly,,
2.17712E+17,gomma#4017,2020-04-02,"i used git but in this weird way, where only when i was sure i liked what i had would i upload it, so the stuff i have on there is grossly outdated",,
2.17712E+17,gomma#4017,2020-04-02,but anyways that's the past. I remember the problem being that i always felt like i had to define a new function brute force in order  to handle new concepts.,,
2.17712E+17,gomma#4017,2020-04-02,"for example, appending one chunk to another was easy, but what if i wanted to stretch times exponentially or something",,
4.62028E+17,StephenD#5938,2020-04-02,Make your life easier and just start off with the GitHub desktop software and github - at least you won‚Äôt lose your work,,
2.17712E+17,gomma#4017,2020-04-02,yes i learned my mistake haha,,
2.17712E+17,gomma#4017,2020-04-02,"can i get normal programming ""amidst"" the music notation ü§î",,
4.62028E+17,StephenD#5938,2020-04-02,There are some music packages https://pkgd.racket-lang.org/pkgn/search?q=Music,,
2.17712E+17,gomma#4017,2020-04-02,unlikely they will help,,
2.17712E+17,gomma#4017,2020-04-02,unless by some chance someone else is as esoteric as me,,
2.17712E+17,gomma#4017,2020-04-02,but i will check it out,,
4.62028E+17,StephenD#5938,2020-04-02,I‚Äôve been playing a little with puredata,,
2.17712E+17,gomma#4017,2020-04-02,i used puredata for a long time,,
2.17712E+17,gomma#4017,2020-04-02,"save yourself the pain, buy Max, it's just 10$ a month",,
2.17712E+17,gomma#4017,2020-04-02,you can subscribe and unscubsribe at will,,
4.62028E+17,StephenD#5938,2020-04-02,I have an Organelle,,
4.62028E+17,StephenD#5938,2020-04-02,M,,
2.17712E+17,gomma#4017,2020-04-02,what's that now?,,
2.17712E+17,gomma#4017,2020-04-02,damn,,
2.17712E+17,gomma#4017,2020-04-02,"come to think about it, what i had in the past was essentially complete, nowadays i'd remake in racket and have the parsing more integrated",,
2.17712E+17,gomma#4017,2020-04-02,am i wrong to think that?,,
2.17712E+17,gomma#4017,2020-04-02,being able to delineate the music parsing at any given point in the code and have it work would be ideal,,
2.17712E+17,gomma#4017,2020-04-02,hmm but also ways of deconstructing those musical objects üò©,,
2.17712E+17,gomma#4017,2020-04-02,this is going to be a lot of work üòî,,
2.17712E+17,gomma#4017,2020-04-02,idk if it's worth it,,
2.17712E+17,gomma#4017,2020-04-02,"maybe i'm making it out to be more work than it really is, i think i'm gonna go for it",,
2.17712E+17,gomma#4017,2020-04-02,"so i guess my real first question, though google probably will suffice: where do i turn for Racket parsing?",,
2.17712E+17,gomma#4017,2020-04-02,"aha before i go any further, to what extent can i have analysis built in? it would be awesome if while i'm coding, i can check the values of certain things, or listen to musical chunk, is that an impossibility?",,
4.62028E+17,StephenD#5938,2020-04-02,There is the REPL,,
2.17712E+17,gomma#4017,2020-04-02,that works. is that my only option?,,
4.62028E+17,StephenD#5938,2020-04-02,https://github.com/racket/racket/wiki/Creating-Languages,,
2.17712E+17,gomma#4017,2020-04-02,thanks,,
2.17712E+17,gomma#4017,2020-04-02,"many times i can't tell if it's my own stupidity or if the tools just don't work with me,
in the past i found myself getting lost in the REPL all the time. it always felt disorganized. but i'm sure i only felt that way becuase i never learned REPL functions/commands for figuring out what variables you have stored, or whatever other functions that helps you stay grounded and organized",,
2.17712E+17,gomma#4017,2020-04-02,or is it that i should get better at quickly integrated text and REPL?,,
2.17712E+17,gomma#4017,2020-04-02,"tbh, one text file, and one REPL with the file opened would probably suffice for a single musical work or experiment",,
2.17712E+17,gomma#4017,2020-04-02,i'm so dumb,,
2.17712E+17,gomma#4017,2020-04-02,"in the past i caused my own pain, i'm done with that now",,
2.17712E+17,gomma#4017,2020-04-02,this should be easy,,
2.17712E+17,gomma#4017,2020-04-02,"I jsut need to parse something like ""[ [ a a ] a a ]"" as a tree, with 'a' just as a placeholder symbol, but there are also questions of efficiency.

So the tree ultimately represents divisions of rhythm, but in the past I would parse the entire tree, then run a function that traverses the tree and essentially counts the branches and applies rhythmic values to the symbols within the tree.

but i'm thinking it would be more efficient that as it parses out the tree itself, it keeps track of the numbers and applies them correctly",,
2.17712E+17,gomma#4017,2020-04-02,o wait that can't work,,
2.17712E+17,gomma#4017,2020-04-02,"anyway, let me not spam in here",,
4.62028E+17,StephenD#5938,2020-04-02,"> I jsut need to parse something like ""[ [ a a ] a a ]"" as a tree,

Using racket lists will do that",,
4.62028E+17,StephenD#5938,2020-04-02,No need for a parser just plain racket,,
4.62028E+17,StephenD#5938,2020-04-02,I think the pattern matching functionality will do what you need : https://docs.racket-lang.org/reference/match.html,,
4.62028E+17,StephenD#5938,2020-04-02,This is just plain racket - no need for a parser - it is part of rackets own parser,,
2.17712E+17,gomma#4017,2020-04-02,hmmm,,
2.17712E+17,gomma#4017,2020-04-02,not sure how to accomplish what i want,,
4.62028E+17,StephenD#5938,2020-04-02,Start simple,,
2.17712E+17,gomma#4017,2020-04-02,"can i count the number of open parenthesis, and count the number of symbols within a parenthesized group?",,
4.62028E+17,StephenD#5938,2020-04-02,Building blocks first,,
4.62028E+17,StephenD#5938,2020-04-02,Yes,,
4.62028E+17,StephenD#5938,2020-04-02,The data structure is called ‚Äòlist‚Äô but it is a poor name because it is a syntax for building trees,,
2.17712E+17,gomma#4017,2020-04-02,TRUE,,
2.17712E+17,gomma#4017,2020-04-02,so i just run recursive length functions,,
2.17712E+17,gomma#4017,2020-04-02,kek this will be easy,,
2.17712E+17,gomma#4017,2020-04-02,can i have my symbols unquoted inside?,,
2.17712E+17,gomma#4017,2020-04-02,agh what does quote mean again,,
2.17712E+17,gomma#4017,2020-04-02,quote is the symbol itself,,
2.17712E+17,gomma#4017,2020-04-02,not quoted is it evaluated,,
2.17712E+17,gomma#4017,2020-04-02,?,,
4.62028E+17,StephenD#5938,2020-04-02,"> can i have my symbols unquoted inside?
@gomma  yes it‚Äôs called quasiquote
`\`",,
2.17712E+17,gomma#4017,2020-04-02,quasiquote o yes,,
2.17712E+17,gomma#4017,2020-04-02,i remember reading but didnt get the usage so it didnt stick,,
2.17712E+17,gomma#4017,2020-04-02,now i understand,,
4.62028E+17,StephenD#5938,2020-04-02,Backtick is the shorthand,,
2.17712E+17,gomma#4017,2020-04-02,bruh,,
4.62028E+17,StephenD#5938,2020-04-02,Then commas to unquote,,
2.17712E+17,gomma#4017,2020-04-02,racket is awesome,,üòÅ (1)
2.17712E+17,gomma#4017,2020-04-02,or lisp,,
2.17712E+17,gomma#4017,2020-04-02,"or whatever, whoever thought of that",,
2.17712E+17,gomma#4017,2020-04-02,theyre a genius,,
4.62028E+17,StephenD#5938,2020-04-02,"Lisp can do that too, as can Scheme",,
4.62028E+17,StephenD#5938,2020-04-02,I don‚Äôt know who invented quasiquote,,
4.62028E+17,StephenD#5938,2020-04-02,"Sounds like you have a good understanding of what you want to achieve, and Racket has some helpful features.  Do you have a plan?",,
2.17712E+17,gomma#4017,2020-04-02,i think so.,,üëç (1)
2.17712E+17,gomma#4017,2020-04-02,not the details just yet,,
2.17712E+17,gomma#4017,2020-04-02,like when i get what i want out of the list it should be remembered,,
4.62028E+17,StephenD#5938,2020-04-02,Maybe start with some small things and build up?,,
2.17712E+17,gomma#4017,2020-04-02,yes,,
4.62028E+17,StephenD#5938,2020-04-02,What are the first three things you want to do?,,
2.17712E+17,gomma#4017,2020-04-02,"but i‚Äôm thinking about when all is said and done, the rhythm and notes are decoded from the list representation, do i make a datatype to store them,",,
2.17712E+17,gomma#4017,2020-04-02,i like to see big picture before i start that way i realize stupid things earlier on so i dont waste time,,
4.62028E+17,StephenD#5938,2020-04-02,How will you specify rhythm ?,,
2.17712E+17,gomma#4017,2020-04-02,the tree,,
2.17712E+17,gomma#4017,2020-04-02,the tree is the rhythm lol,,
4.62028E+17,StephenD#5938,2020-04-02,`(1/4 1/4 1/2)`?,,
2.17712E+17,gomma#4017,2020-04-02,what is that,,ü§™ (1)
2.17712E+17,gomma#4017,2020-04-02,"so for like (a a)
each a is 1/2",,
2.17712E+17,gomma#4017,2020-04-02,"(a a a), each one is 1/3",,
2.17712E+17,gomma#4017,2020-04-02,"((a a) a a)
the first two are each halves of a third or in other words 1/6th each,
then the two remaining a‚Äôs are 1/3",,üëç (1)
2.17712E+17,gomma#4017,2020-04-02,and so on and so forth,,
4.62028E+17,StephenD#5938,2020-04-02,I see,,
2.17712E+17,gomma#4017,2020-04-02,yup,,
2.17712E+17,gomma#4017,2020-04-02,there are arbitrary choices involved im pretty aware of them,,
2.17712E+17,gomma#4017,2020-04-02,"like i can store them as consecutive intervals, or i can store them as relative to the first element of the chunk,
that choice determines how other functions work to concatenate and whatnot",,
2.17712E+17,gomma#4017,2020-04-02,im worried,,
4.62028E+17,StephenD#5938,2020-04-02,(* 2 (c b a))(((a a a)(b b b)(c c c))),,
2.17712E+17,gomma#4017,2020-04-02,"im worried this isnt good enough. something about the rigidity of the divisions rubs me the wrong way,
even if i have functions to loosen it up (a function to introduce random deviations for example)",,
2.17712E+17,gomma#4017,2020-04-02,@StephenD whats that?,,
4.62028E+17,StephenD#5938,2020-04-02,Repeat ( c b a ) twice,,
4.62028E+17,StephenD#5938,2020-04-02,I‚Äôm not a musician but your description is hood,,
4.62028E+17,StephenD#5938,2020-04-02,Good,,
2.17712E+17,gomma#4017,2020-04-02,its good,,
2.17712E+17,gomma#4017,2020-04-02,but like,,
2.17712E+17,gomma#4017,2020-04-02,i also worry about parameters,,
2.17712E+17,gomma#4017,2020-04-02,at somepoint you just want knobs and sliders,,
2.17712E+17,gomma#4017,2020-04-02,or other means of gui control,,
2.17712E+17,gomma#4017,2020-04-02,but i dont want to overwhelm myself,,
2.17712E+17,gomma#4017,2020-04-02,but idk what if theres a smarter way of accomplishing what i want to accomplish,,
4.62028E+17,StephenD#5938,2020-04-02,There is a gui toolkit,,
2.17712E+17,gomma#4017,2020-04-02,yes,,
2.17712E+17,gomma#4017,2020-04-02,i got fairly good at it already üòÇ,,
2.17712E+17,gomma#4017,2020-04-02,its pretty awesome and straightforward,,
2.17712E+17,gomma#4017,2020-04-02,the docs are fantastic with how they show you the layout of the,,
2.17712E+17,gomma#4017,2020-04-02,idk what word to use,,
4.62028E+17,StephenD#5938,2020-04-02,How do you generate the sound? Supercollider ?,,
2.17712E+17,gomma#4017,2020-04-02,doesnt matter,,
2.17712E+17,gomma#4017,2020-04-02,even outputting midi could work ü§∑‚Äç‚ôÄÔ∏è,,
2.17712E+17,gomma#4017,2020-04-02,rsound seemed cool ü§∑‚Äç‚ôÄÔ∏è,,
2.17712E+17,gomma#4017,2020-04-02,actually outputting midi couldnt really work üòî,,
4.62028E+17,StephenD#5938,2020-04-02,"> even outputting midi could work ü§∑‚Äç‚ôÄÔ∏è
@gomma  OSC better",,
2.17712E+17,gomma#4017,2020-04-02,OSC is a lot better but barely anything accepts it,,
2.17712E+17,gomma#4017,2020-04-02,at that point i should just generate the sound myself,,
2.17712E+17,gomma#4017,2020-04-02,"rsound, supercollider, csound, anything like that",,üëç (1)
4.62028E+17,StephenD#5938,2020-04-02,I think there already bindings,,
2.17712E+17,gomma#4017,2020-04-02,"and since i want to work with just intonation thats looking like what i‚Äôll have to do, but no worries",,
2.17712E+17,gomma#4017,2020-04-02,ye that doesnt scare me,,
2.17712E+17,gomma#4017,2020-04-02,i do basic modal synthesis instruments everytime üòÇ,,
2.17712E+17,gomma#4017,2020-04-02,i need to learn how to make sophisticated resonators ü§î,,
4.62028E+17,StephenD#5938,2020-04-02,(I‚Äôm out if my depth here(,,
2.17712E+17,gomma#4017,2020-04-02,idk if i should just fuck with delays until i intuitively figure it out,,
2.17712E+17,gomma#4017,2020-04-02,ye lol ur good,,
2.17712E+17,gomma#4017,2020-04-02,so whats my plan,,
2.17712E+17,gomma#4017,2020-04-02,i gotta go soon,,
4.62028E+17,StephenD#5938,2020-04-02,Good luck,,
4.62028E+17,StephenD#5938,2020-04-02,& welcome to racket discord come back any time,,
4.62028E+17,StephenD#5938,2020-04-02,üòÅ,,
2.17712E+17,gomma#4017,2020-04-02,"plan:
1. make functions to figure out the rhythm from the list
2. figure out a pitch representation for the kind of just intonation work i want to do
3. make a shitton of helper functions for working with the pitch and rhythm
4. think about the big picture again",,üëç (1)
2.17712E+17,gomma#4017,2020-04-02,"something tells me i should start with 4 and just keep thinking. rigidity hurts. 
but like there is no continuum with programming right?",,
2.17712E+17,gomma#4017,2020-04-02,approximating a continuum ü§∑‚Äç‚ôÄÔ∏è,,
2.17712E+17,gomma#4017,2020-04-02,i think i really just want to make the DAW üòÇüòÇüòÇ,,
4.62028E+17,StephenD#5938,2020-04-02,‚ô´,,
2.17712E+17,gomma#4017,2020-04-02,i could never make it more than a proof of concept though üòî,,
2.17712E+17,gomma#4017,2020-04-02,"not by myself. i would need a team, or help otherwise",,
4.62028E+17,StephenD#5938,2020-04-02,Everything started as a prototype,,
4.62028E+17,StephenD#5938,2020-04-02,With a working prototype you might be able to attract a team,,
4.62028E+17,StephenD#5938,2020-04-02,OSS,,
2.17712E+17,gomma#4017,2020-04-02,"that was my original plan üòÇ
i‚Äôd love to have a visual approximation of continuum, and then have a lot of freedom, power, and control with overlaying grids.",,
4.62028E+17,StephenD#5938,2020-04-02,"But racketeers like to help - here(discord), Racket users mailing list/google group & the racket slack",,
2.17712E+17,gomma#4017,2020-04-02,"but since i want to rxperiment with just intonation *now*, i wanted to take an easy route out, but the mathematician and programmer within me wanta me to keep generalizing and actually get the tool that i want",,
2.17712E+17,gomma#4017,2020-04-02,which requires more work,,
2.17712E+17,gomma#4017,2020-04-02,i guess i‚Äôll keep wrestling with what i want to work on first ü§∑‚Äç‚ôÄÔ∏è,,
2.17712E+17,gomma#4017,2020-04-02,thansk so much and goodbye,,
4.62028E+17,StephenD#5938,2020-04-02,Have you seen the new sonic pi yet?,,
2.17712E+17,gomma#4017,2020-04-02,no whats that,,
4.62028E+17,StephenD#5938,2020-04-02,‚ô´bye,,
4.62028E+17,StephenD#5938,2020-04-02,Programmatic DAW for education /live coding,,
2.17712E+17,gomma#4017,2020-04-02,OMG,,
2.17712E+17,gomma#4017,2020-04-02,OMGGG,,
4.62028E+17,StephenD#5938,2020-04-02,Good fun! I recommend,,
2.17712E+17,gomma#4017,2020-04-02,dude that looks amazing,,
2.17712E+17,gomma#4017,2020-04-02,it just came out,,
2.17712E+17,gomma#4017,2020-04-02,wow,,
4.62028E+17,StephenD#5938,2020-04-02,Have a good evening,,
2.17712E+17,gomma#4017,2020-04-02,same,,
4.62028E+17,StephenD#5938,2020-04-02,Come back soonüòÅ,,
4.56227E+17,Deleted User#0000,2020-04-02,"Wow, `define-values` is surprisingly difficult to implement.",,
4.56227E+17,Deleted User#0000,2020-04-02,It keeps accidentally capturing the forms...,,
4.56227E+17,Deleted User#0000,2020-04-02,At times like this I appreciate the simplicity of `define-macro`...,,
4.56227E+17,Deleted User#0000,2020-04-02,Honestly never actually had to use `generate-temporaries` before.,,
4.56227E+17,Deleted User#0000,2020-04-02,oh my god I misspelt `expr` as `exp` and it thought I was trying to get the exponential function the whole time,,ü§£ (1)
4.56227E+17,Deleted User#0000,2020-04-02,ü§¶,,
4.56227E+17,Deleted User#0000,2020-04-03,"```Scheme
  (define-syntax define-values
    (syntax-rules ()
      ((_ () body)
       (call-with-values (thunk body) void))
      ((_ (var . vars) body)
       (begin
         (define var (call-with-values (thunk body) list))
         (define-values vars (apply values (cdr var)))
         (set! var (car var))))
      ((_ var body)
       (define var (call-with-values (thunk body) list)))))
``` in the end",,
4.66395E+17,oaktownsam#0815,2020-04-03,ewww,,
4.66395E+17,oaktownsam#0815,2020-04-03,iirc `define-values` is a core/kernel form in racket,,
2.17712E+17,gomma#4017,2020-04-03,what is going on there lol,,
4.56227E+17,Deleted User#0000,2020-04-03,Bad news: The expansion violates the 'definitions before expression' rule some implementations obsess with.,,
2.17712E+17,gomma#4017,2020-04-03,are there text editors where you can click and drag numbers or something to change them,,
2.17712E+17,gomma#4017,2020-04-03,"@StephenD sonic pi is not what i thought it was, doesn't really interest me, but i respect live coders",,
4.62028E+17,StephenD#5938,2020-04-03,‚ÄòLight table‚Äô I think. Based on Bret victor presentation,,
4.62028E+17,StephenD#5938,2020-04-03,"> are there text editors where you can click and drag numbers or something to change them
@gomma  üëÜ",,
2.66505E+17,notjack#9941,2020-04-03,"@Deleted User do those implementations have something like `splicing-let`? if not, I don't see how it's possible to implement `define-values` with only `syntax-rules`",,
2.17712E+17,gomma#4017,2020-04-03,@StephenD thanks,,
2.17712E+17,gomma#4017,2020-04-03,"where could i look to get some ideas of the ways of handling zooming?
i have a window that i'll need control over both dimensions together and individually, but i always hate the implementations i tend to see of that sort of thing",,
4.62028E+17,StephenD#5938,2020-04-03,I believe there are a bunch of HCI/CHI papers on zoomable user interfaces- maybe check the acm digital library while it‚Äôs free,,
4.62028E+17,StephenD#5938,2020-04-03,"‚Ä™ Good PL design papers for Racket language designers ? 
While the acm digital library is free, what papers (& dissertations) in Programming Language Design are worth a look  for the aspiring language (or EDSL or DSL) designer ?
See https://dl.acm.org",,
4.56227E+17,Deleted User#0000,2020-04-04,"@notjack R6RS doesn't have `splicing-let`, although I can always use `syntax-case` with `generate-temporaries`. However, R7RS has a (really long) implementation of it in pure `syntax-rules`.",,
4.56227E+17,Deleted User#0000,2020-04-04,I'm on phone rn but IIRC it's on page 70 of the standard.,,
2.87288E+17,hgluka#1023,2020-04-04,@StephenD I remeber seeing a PL reading group on the ProgrammingLanguages subreddit,,üëç (1)
2.87288E+17,hgluka#1023,2020-04-04,"I think this is the last of those threads:
https://old.reddit.com/r/ProgrammingLanguages/comments/dae9tz/pl_reading_group_week_13_bohms_theorem/",,
4.62028E+17,StephenD#5938,2020-04-04,Thanks,,
2.87288E+17,hgluka#1023,2020-04-04,I didn't know that acm made their library free,,
2.87288E+17,hgluka#1023,2020-04-04,that's so cool,,
4.56227E+17,Deleted User#0000,2020-04-04,Hmm... I'm having trouble writing stateful macros.,,
4.56227E+17,Deleted User#0000,2020-04-04,It's supposed to be a simple enum macro but it's giving me trouble.,,
4.56227E+17,Deleted User#0000,2020-04-04,"```Scheme
(define-enum a b c)
```
should expand to
```Scheme
(begin
  (define a 0)
  (define b 1)
  (define c 2))
```",,
4.56227E+17,Deleted User#0000,2020-04-04,I suppose I can keep a variable outside `syntax-case` within the lambda and mutate it with each iteration?,,
4.56227E+17,Deleted User#0000,2020-04-04,I can do it if I pass an initial `0` value and iterate through that.,,
4.56227E+17,Deleted User#0000,2020-04-04,Maybe I'll do exactly that and make it into an aux macro.,,
4.56227E+17,Deleted User#0000,2020-04-04,"```Scheme
(define-syntax define-enum-aux
  (lambda (stx)
    (define (increment-syntax stx-n)
      (datum->syntax stx-n (add1 (syntax->datum stx-n))))
    (syntax-case stx ()
      ((_ val) #'(values))
      ((_ val (id new-val) rest ...)
       #'(define-enum-aux new-val id rest ...))
      ((_ val id rest ...)
       (with-syntax ((inc (increment-syntax #'val)))
         #'(begin
             (define id val)
             (define-enum-aux inc rest ...)))))))

(define-syntax-rule (define-enum vals ...)
  (define-enum-aux 0 vals ...))
```
Ehh, this works I guess.",,
4.56227E+17,Deleted User#0000,2020-04-04,Oh my god I wish R6RS had Racket's convenience procedures like `syntax-e` and `format-id`.,,
4.56227E+17,Deleted User#0000,2020-04-04,"```Scheme
(define-syntax define-c-enum-aux
  (lambda (stx)
    (syntax-case stx ()
      ((_ enum val) #'(values))
      ((_ enum val (id new-val) rest ...)
       #'(define-c-enum-aux enum new-val id rest ...))
      ((_ enum val id rest ...)
       (with-syntax ((inc (datum->syntax #'val (add1 (syntax->datum #'val))))
                     (name (datum->syntax #'id (string->symbol
                                                (string-append
                                                 (symbol->string (syntax->datum #'enum)) "":""
                                                 (symbol->string (syntax->datum #'id)))))))
                    #'(begin
                        (define name val)
                        (define-c-enum-aux enum inc rest ...)))))))

(define-syntax-rule (define-c-enum enum vals ...)
  (define-c-enum-aux enum 0 vals ...))
```",,
4.56227E+17,Deleted User#0000,2020-04-04,That `with-syntax` is ugly as hell.,,
4.56227E+17,Deleted User#0000,2020-04-04,"Ah, it's a bad idea to preemptively evaluate the enum value (`inc` here). There's always a chance that the given value isn't actually `number?`.",,
4.66395E+17,oaktownsam#0815,2020-04-04,That's too bad `syntax-e` is a primitive in `syntax-case` iirc,,
3.7138E+17,witty username#7504,2020-04-04,"can scribble handle non-racket languages (e.g shell, json, python)? I'd like to write my literate dotfiles in racket instead of org-mode",,
2.66505E+17,notjack#9941,2020-04-04,"In theory, yes. But it's not easy. I suggest asking the racket-users mailing list, you'll get much more thorough advice.",,
2.66505E+17,notjack#9941,2020-04-06,@oaktownsam what do you think of a `taking-max` transducer that lets you take the top N-ranked values of a stream? where ties are counted as a single rank. So `(transduce (list 7 8 8 6 7 4 5) (taking-max #:ranks 2) #:into into-list)` would return `(list 7 8 8 7)` (since 7 and 8 are the top two values and it tries to preserve encounter order),,
2.66505E+17,notjack#9941,2020-04-06,I've been trying to think of how I would do a similar operation with racket's `for` loops and it seems really tricky,,
4.66395E+17,oaktownsam#0815,2020-04-06,That seems good.,,
2.66505E+17,notjack#9941,2020-04-06,context: https://www.reddit.com/r/Racket/comments/fw6zux/max_sums_of_cdr_values_in_pairs/,,
4.62028E+17,StephenD#5938,2020-04-13,"samth/object-backtrace: find out what keeps an object alive

https://github.com/samth/object-backtrace",,üòÆ (3)
4.66395E+17,oaktownsam#0815,2020-04-14,`vm-eval` looks exciting,,
1.30231E+17,sarna#3904,2020-04-14,what is it?,,
4.66395E+17,oaktownsam#0815,2020-04-14,"In the object-backtrace it uses an undocumented `ffi/unsafe/vm` module which I'm guessing reaches into the guts of Chez Scheme.  So I'm guessing `vm-eval` let's you run code directly in Chez from Racket.

So exciting, unsafe, and dangerous.",,
1.30231E+17,sarna#3904,2020-04-14,oh my,,
4.56227E+17,Deleted User#0000,2020-04-14,*tugs at shirt's collar and fans face*,,üòÇ (1)
1.30231E+17,sarna#3904,2020-04-14,it stops being fun when they change the internals :GWsetmyxPeepoSad:,,
1.30231E+17,sarna#3904,2020-04-15,what do y'all use for editing racket code?,,
1.30231E+17,sarna#3904,2020-04-15,I was using emacs but the racket layer in spacemacs is pretty buggy,,
4.62028E+17,StephenD#5938,2020-04-15,"Hi @sarna 
Racket mode is very popular

https://racket-mode.com",,
4.62028E+17,StephenD#5938,2020-04-15,(I use DrRacket),,
4.62028E+17,StephenD#5938,2020-04-15,Most people use Racket mode or DrRacket - I did a survey and it is split pretty evenly,,
1.30231E+17,sarna#3904,2020-04-15,"@StephenD yep, the racket layer uses racket mode. it doesn't map the right commands, however..",,
1.30231E+17,sarna#3904,2020-04-15,eg the documentation is mapped in a wrong way,,
4.62028E+17,StephenD#5938,2020-04-15,I suggest asking on the record users mailing list ‚Äì there are more Emacs users there. Or the racket slack,,
1.30231E+17,sarna#3904,2020-04-15,and I can't use xrepl commands in the repl,,
1.30231E+17,sarna#3904,2020-04-15,I think I'll try vscode,,
4.62028E+17,StephenD#5938,2020-04-15,There is a VS code plug-in but it doesn‚Äôt do all the stuff that Dr Racket  and Racket mode do,,
4.62028E+17,StephenD#5938,2020-04-15,I‚Äôd suggest plain Emacs it DrRacket(my preference),,
1.30231E+17,sarna#3904,2020-04-15,are people really using DrRacket? to me it feels like a silly program aimed at beginners,,
1.30231E+17,sarna#3904,2020-04-15,maybe it's the icons/layout,,
4.62028E+17,StephenD#5938,2020-04-15,DrRacket is really powerful.,,
4.62028E+17,StephenD#5938,2020-04-15,It just looks like a educational tool,,
1.30231E+17,sarna#3904,2020-04-15,does it have a vim mode? :GWcmeisterPeepoHug:,,
4.62028E+17,StephenD#5938,2020-04-15,It also supports Emacs key bindings,,
4.62028E+17,StephenD#5938,2020-04-15,"> does it have a vim mode? 
@sarna  not that I‚Äôm aware of",,
1.30231E+17,sarna#3904,2020-04-15,"https://github.com/takikawa/drracket-vim-tool I've found this, but it doesn't look complete",,
4.62028E+17,StephenD#5938,2020-04-15,Some people use vim with racket,,
4.62028E+17,StephenD#5938,2020-04-15,Sorry it‚Äôs not something I have any experience with,,
1.30231E+17,sarna#3904,2020-04-15,no worries,,
1.30231E+17,sarna#3904,2020-04-15,thanks for helping me out anyway :GWcmeisterPeepoLove:,,
4.66395E+17,oaktownsam#0815,2020-04-15,"The DrRacket vim mode is a valiant attempt, but there were problems last I tried using it (some of the programmed into my brain key combos didn't work right.)  I don't think Asumu or Leif are actively maintaining it",,
4.66395E+17,oaktownsam#0815,2020-04-15,"I use VSCode most of the time with the Magic Racket extension and Vim extensions.  My workflow is pretty similar to a vim workflow of bouncing between editor and terminal to run `racket` or `raco test -p $what-im-working-on` or `raco setup -Dmv --pkgs $what-im-working-on`

Magic Racket can open a file in racket and `,enter` the module for you which is convenient.

I also have some build and test tasks for individual projects in VSCode which does the nice jump to problem error matching bit, but I don't know how to package that up to be used in an extension.",,
4.66395E+17,oaktownsam#0815,2020-04-15,I also keep a DrRacket open on pretty much every computer here to try something out.,,
1.30231E+17,sarna#3904,2020-04-15,thanks for the info :GWcmeisterPeepoLove:,,
1.30231E+17,sarna#3904,2020-04-15,vscode keeps segfaulting on me for some reason,,
4.66395E+17,oaktownsam#0815,2020-04-15,"If you are stumped making passwords for your Zoom meetings:
```
(define (zoom-password N)
  (for/fold ([s (~a (add1 (random 9)))]) 
            ([_x (sub1 N)])
    (~a s (random 10))))
```",,
5.39603E+17,spacey üåå#7238,2020-04-15,DOOM Emacs + Racket is a good workflow for me even though I don't know that much about Emacs,,üëç (1)
1.30231E+17,sarna#3904,2020-04-16,"I was using doom some time before, hmm.. let me check out their racket thingy",,
5.39603E+17,spacey üåå#7238,2020-04-16,@oaktownsam what's the _x in the snippet you made for the Zoom passwords?,,
5.39603E+17,spacey üåå#7238,2020-04-16,On the third line,,
4.66395E+17,oaktownsam#0815,2020-04-16,"It's a python-ism, just a dummy variable unused otherwise",,
1.30231E+17,sarna#3904,2020-04-16,I just use _ for those,,
5.39603E+17,spacey üåå#7238,2020-04-16,"Ah I see, like a counter?",,
1.30231E+17,sarna#3904,2020-04-16,a variable you won‚Äôt use,,
1.30231E+17,sarna#3904,2020-04-16,"_x isn‚Äôt used anywhere in the code, it‚Äôs just being bound to",,
1.30231E+17,sarna#3904,2020-04-16,"but in this specific case it is also a counter, yes",,
4.66395E+17,oaktownsam#0815,2020-04-16,`_` in some contexts is bound to a syntax parameter and will throw an error,,
4.66395E+17,oaktownsam#0815,2020-04-16,At least I think it is ... seems to be working at a plain REPL,,
4.66395E+17,oaktownsam#0815,2020-04-16,"Oh I remember, if you're binding more than one you need unique names otherwise you get a duplicate binding error.",,
1.30231E+17,sarna#3904,2020-04-16,"oh, interesting",,
1.30231E+17,sarna#3904,2020-04-16,I‚Äôve only ever bound one,,
1.95258E+17,Crown#8016,2020-04-16,"```racket
(let ((x 5) (y (+ 1 x)))
  ...
)```",,
1.95258E+17,Crown#8016,2020-04-16,Is there a way to get something like this to work?,,
2.67464E+17,SlashDevSlashRandom#2112,2020-04-16,"I'm hoping others that are more experienced will weigh in, but from some experiments I was playing with yesterday, it seems like you'd have to use that variable in the scope",,
2.67464E+17,SlashDevSlashRandom#2112,2020-04-16,"e.g.
```lisp
> (let ((x 1))
    (let ((y (+ 1 x)))
      y))
2
```",,
2.67464E+17,SlashDevSlashRandom#2112,2020-04-16,"I take that back - I think `let*` is what you want:
```lisp
> (let ((x 1) (y (+ 1 x)))
      y)
x: undefined;
 cannot reference an identifier before its definition
> (let* ((x 1) (y (+ 1 x)))
      y)
2
```",,
3.29023E+17,nixin72#3554,2020-04-16,"Yes, `let*` allows you to access previous bindings",,
3.29023E+17,nixin72#3554,2020-04-16,"And you can use `letrec` to access bindings recursively - this is the example from the Racket documentation:
```scheme
(letrec ([is-even? (lambda (n)
                       (or (zero? n)
                           (is-odd? (sub1 n))))]
           [is-odd? (lambda (n)
                      (and (not (zero? n))
                           (is-even? (sub1 n))))])
    (is-odd? 11))
```",,
3.29023E+17,nixin72#3554,2020-04-16,"Personally never used `letrec`, but `let*` is very helpful",,
2.66505E+17,notjack#9941,2020-04-16,use `define`,,
2.67464E+17,SlashDevSlashRandom#2112,2020-04-16,does define have a form for binding multiple symbols in one statement?,,
4.56227E+17,Deleted User#0000,2020-04-16,`define-values`,,
2.66505E+17,notjack#9941,2020-04-16,also `match-define`,,
4.56227E+17,Deleted User#0000,2020-04-16,"eg
```Scheme
(define-values (a b c d e f) (apply values (range 6)))```",,
2.66505E+17,notjack#9941,2020-04-16,"or
```
(match-define (list a b c d e f) (range 6))
```",,
4.56227E+17,Deleted User#0000,2020-04-16,Yeah!,,
4.56227E+17,Deleted User#0000,2020-04-16,`match-define` is much more versatile for assigning dynamically computed values.,,
4.56227E+17,Deleted User#0000,2020-04-16,Underused imo,,üíØ (1)
2.66505E+17,notjack#9941,2020-04-16,"And it works with transparent structs automatically
```scheme
(struct point (x y) #:transparent)

(match-define (point a b) (point 5 7))
; a = 5, b = 7
```",,
2.67464E+17,SlashDevSlashRandom#2112,2020-04-16,"and is there a way to use that like `let*`, where each binding is done before the next, e.g. something like `(match-define (list x y) (1 (+ 1 x)))`?",,
2.66505E+17,notjack#9941,2020-04-16,No. Just put each define on it's own line. It's more readable that way anyway.,,
2.66505E+17,notjack#9941,2020-04-16,"```
(define x 1)
(define y (+ x 1))
```",,
4.56227E+17,Deleted User#0000,2020-04-16,"It can get pretty verbose when your entire file is 700 lines of `define`s (eg painstakingly handwriting API endpoints). You can write a macro to mimic behaviour of CL's `setq` then.
```Scheme
(define-syntax defines
  ((_ id val)
    (define id val))
  ((_ id val id* val* rest ...)
    (begin
      (define id val)
      (defines id* val* rest ...)))))
```",,
4.56227E+17,Deleted User#0000,2020-04-16,"Not that I had to deal with this exact same problem before, no sirree",,
2.66505E+17,notjack#9941,2020-04-16,I don't think it helps. Each definition still ends up taking a line.,,
4.56227E+17,Deleted User#0000,2020-04-16,I find it easier to read without an endless column of bright green `define` distracting me. :-P,,
2.66505E+17,notjack#9941,2020-04-16,I find it easier to read _with_ the `define` column. The alternative has more haphazard indentation. My personal coding style is a lot less indentation-happy than most lispy code.,,
4.56227E+17,Deleted User#0000,2020-04-16,Huh. Interesting.,,
4.56227E+17,Deleted User#0000,2020-04-16,"I'm spoilt by paredit, I suppose.",,
2.66505E+17,notjack#9941,2020-04-16,Examples: https://github.com/jackfirth/rebellion/blob/master/private/atomic-fixnum.rkt,,
2.66505E+17,notjack#9941,2020-04-16,Part of it is that I also avoid long functions,,
4.56227E+17,Deleted User#0000,2020-04-16,That's fairly readable indeed.,,
4.56227E+17,Deleted User#0000,2020-04-16,Your style is a fine example of Racket style IMO.,,
2.66505E+17,notjack#9941,2020-04-16,"It's heavily influenced by Google-style Java, interestingly",,
4.56227E+17,Deleted User#0000,2020-04-16,"My style is covered in old Scheme style though. `let` over `define`, no square brackets, `if` over `cond`",,
2.66505E+17,notjack#9941,2020-04-16,"Specifically, the Rectangle Rule https://github.com/google/google-java-format/wiki/The-Rectangle-Rule",,
2.66505E+17,notjack#9941,2020-04-16,Yeah portable scheme has a totally different flavor,,
4.56227E+17,Deleted User#0000,2020-04-16,"But some good Racketisms stuck with me. For instance, I went back to replace one-armed `if`s with `when` in my old Scheme code after I got used to Racket.",,
2.66505E+17,notjack#9941,2020-04-16,"Yeah, differentiating between conditional expressions and conditional statements is so useful",,
4.56227E+17,Deleted User#0000,2020-04-16,Mhm,,
2.66505E+17,notjack#9941,2020-04-16,"Oh, back to the point about multiple definitions in one statement: I completely forgot to mention `local`",,
2.66505E+17,notjack#9941,2020-04-16,"```scheme
(local [(define x 1)
        (define y (+ x 1))]
  (+ x y))
```",,
2.66505E+17,notjack#9941,2020-04-16,"When I really need definitions scoped to a particular expression (usually because I need `splicing-` of some kind) I prefer `local` over `let` so that the syntax is consistent. It's useful to be about to cut and paste definitions between local scopes, function scopes, module scopes, and the REPL",,
2.66505E+17,notjack#9941,2020-04-16,plus it's easier to teach,,
1.70558E+17,Zireael#5759,2020-04-20,how does Racket compare to Common Lisp/Python/Lua re: speed? are various #lang languages somehow affected (e.g. slower)?,,
2.66505E+17,notjack#9941,2020-04-20,"It's much, much faster than python. I know less about how it compares to the other two.",,
1.70558E+17,Zireael#5759,2020-04-20,good to know. and are the #languages slower? eg. pyret or stacker?,,
4.56227E+17,Deleted User#0000,2020-04-20,I think Racket is faster than vanilla Lua but not LuaJIT.,,
2.66505E+17,notjack#9941,2020-04-20,"No, each `#lang` expands to base Racket code. The runtime performance of the `#lang` is entirely determined by what it expands to. So how fast a custom language runs depends on how well you optimized the expanded code it produces.",,
1.70558E+17,Zireael#5759,2020-04-20,"wow, that's awesome! any limitations on the syntax? (e.g. can I get rid of the ( ) and use whitespace for instance, or am I limited to Racket-y/Lisp-y syntax)",,
2.66505E+17,notjack#9941,2020-04-20,"The only limitation is that the first part of the file must be `#lang yourlanguagename`, and language names have to fit a pretty restricted grammar (no whitespace and only ascii a-z, A-Z, and numbers, I think)",,
2.66505E+17,notjack#9941,2020-04-20,But the rest of the file can be anything you want. Your language has full control over reading each character in the file and parsing it however it wants. It just has to _output_ regular racket code.,,
1.70558E+17,Zireael#5759,2020-04-20,"are there any tutorials other than the docs on the official page? I admit I spent ages looking for, you know, that ""perfect"" programming language and the idea of writing one appeals a lot... even if it's just a toy DSL of the ""create Component A and affix it to Entity X"" kind üòõ",,
2.66505E+17,notjack#9941,2020-04-20,"for DSL creation, especially `#lang` creation, Beautiful Racket is by far the best resource I know of",,
1.70558E+17,Zireael#5759,2020-04-20,thanks! ‚ù§Ô∏è,,
2.66505E+17,notjack#9941,2020-04-20,welcome! link here: https://beautifulracket.com/,,
1.70558E+17,Zireael#5759,2020-04-20,"final q for the day, how does one distribute Racket programs? I know Common Lisp can compile to C, but e.g. Python distribution is a huge pita...",,
2.66505E+17,notjack#9941,2020-04-20,"There's a `raco distribute` command that bundles up a racket program into something you can ship to other computers and run. It's not a single binary though, it's a binary plus a folder that contains whatever foreign libraries or static files the binary needs.",,
2.66505E+17,notjack#9941,2020-04-20,"There's also some Docker images, if you know how to use Docker. Those are good for shipping racket code to servers and server-like environments.",,
2.66505E+17,notjack#9941,2020-04-20,the docker images are on Docker Hub under the name `jackfirth/racket` (I made them),,
1.30231E+17,sarna#3904,2020-04-21,"@Zireael racket is slower than common lisp, for now
the racket backend will be chez scheme now, which is comparable to CL in speed - so there‚Äôs potential of being as fast as CL",,
1.30231E+17,sarna#3904,2020-04-21,"but you know, first make it correct, then make it fast",,
1.30231E+17,sarna#3904,2020-04-21,"racket uses contracts liberally though, so it probably won‚Äôt be as fast :GWseremePeepoThink:",,
4.56227E+17,Deleted User#0000,2020-04-21,I assume you're talking about SBCL in particular.,,
4.56227E+17,Deleted User#0000,2020-04-21,:meow:,,
1.30231E+17,sarna#3904,2020-04-21,"sbcl, ccl",,
1.30231E+17,sarna#3904,2020-04-21,maybe the llvm one,,
1.30231E+17,sarna#3904,2020-04-21,in CL you can also do stuff like this http://pvk.ca/Blog/2014/03/15/sbcl-the-ultimate-assembly-code-breadboard/,,
1.30231E+17,sarna#3904,2020-04-21,I doubt it‚Äôs possible in racket,,
1.70558E+17,Zireael#5759,2020-04-21,"@sarna that's interesting, because benchmarks I found show racket as faster: https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/racket.html",,
1.30231E+17,sarna#3904,2020-04-21,"@Zireael it's faster only on one benchmark, what do you mean?",,
1.30231E+17,sarna#3904,2020-04-21,"also, benchmarks game doesn't really reflect how fast the language is in real life anymore",,
1.30231E+17,sarna#3904,2020-04-21,it's always good to look at the source,,
1.30231E+17,sarna#3904,2020-04-21,"for example, the benchmark in which racket is faster",,
1.30231E+17,sarna#3904,2020-04-21,"https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/pidigits-sbcl-3.html
the sbcl program is pretty normal lisp",,
1.30231E+17,sarna#3904,2020-04-21,"https://benchmarksgame-team.pages.debian.net/benchmarksgame/program/pidigits-racket-2.html
the racket one is super optimized with pointers and stuff",,
1.70558E+17,Zireael#5759,2020-04-21,"I'm not super married to Racket üòõ it drew my eye because of #lang, is something like it doable with CommonLisp?",,
1.30231E+17,sarna#3904,2020-04-21,"though, seems like racket just binds to gmp with ffi.. whereas CL has bindings already",,
1.30231E+17,sarna#3904,2020-04-21,"if speed is that important to you, I'd recommend rust",,
1.30231E+17,sarna#3904,2020-04-21,"and everything is ""doable"" in every language (turing completeness), the question is - would it be easy or not",,
1.30231E+17,sarna#3904,2020-04-21,racket is *the* programming language programming language,,
1.30231E+17,sarna#3904,2020-04-21,"you can achieve similar results in CL, but it will be more difficult to do and you won't be able to use languages from racket other people have made",,
1.70558E+17,Zireael#5759,2020-04-21,"I tried Rust and I'm currently doing Dlang, but I think I would be much more productive in a scripting language, and all Lisps have the superpowered REPL compared to Python/Lua",,
1.30231E+17,sarna#3904,2020-04-21,the most overpowered repl is the CL one,,
1.30231E+17,sarna#3904,2020-04-21,you get conditions and restarts,,
1.30231E+17,sarna#3904,2020-04-21,"in racket the repl is unimpressive, as far as lisps go",,
1.30231E+17,sarna#3904,2020-04-21,that's what CL gets you,,
1.30231E+17,sarna#3904,2020-04-21,https://www.youtube.com/watch?v=6pMyhrDcMzw,,üëå (1)
1.30231E+17,sarna#3904,2020-04-21,"unlimited power, eh",,
1.70558E+17,Zireael#5759,2020-04-21,"wow, cool. where do I find real benchmarks between lisp and racket, then? I'm curious what the performance difference really is, whether the ease of making languages is worth being slower...",,
1.30231E+17,sarna#3904,2020-04-21,"what do you mean ""real benchmarks""?",,
1.70558E+17,Zireael#5759,2020-04-21,"where the programs are roughly equally optimized, not like the ones on benchmark game",,
1.30231E+17,sarna#3904,2020-04-21,you can try writing the same program in both,,
1.30231E+17,sarna#3904,2020-04-21,and benchmark that,,
1.70558E+17,Zireael#5759,2020-04-21,"I don't know enough of either to do that... and reading on CL, is the unlimited power you showed only with whatever the Emacs support is named, or can I get the same awesome in other IDE?",,
1.30231E+17,sarna#3904,2020-04-21,"I know about a plug-in for atom, it‚Äôs called SLIMA",,
1.30231E+17,sarna#3904,2020-04-21,didn‚Äôt use it though,,
1.70558E+17,Zireael#5759,2020-04-21,"(just remembered I'll probably be using bindings to a C dll/so library, so, does using those introduce any problems with REPL and recompiling?",,
1.30231E+17,sarna#3904,2020-04-21,you won't recompile these though? I don't know what the problem would be,,
1.30231E+17,sarna#3904,2020-04-21,you just bind to them and that's it,,
5.39603E+17,spacey üåå#7238,2020-04-21,"My goal is to understand Racket, then get to know the almost unbeatable LISP repl :)",,
1.30231E+17,sarna#3904,2020-04-21,"> almost
what's first then? forth?",,
1.30231E+17,sarna#3904,2020-04-21,lol,,
5.39603E+17,spacey üåå#7238,2020-04-21,Maybe Smalltalk,,
5.39603E+17,spacey üåå#7238,2020-04-21,I know almost nothing about smalltalk though TBH,,
4.62028E+17,StephenD#5938,2020-04-21,Self - the small talk that influenced JavaScript and java,,
5.39603E+17,spacey üåå#7238,2020-04-21,"And Python, apparently :p",,
4.62028E+17,StephenD#5938,2020-04-21,And livelykernel / morphic,,
1.30231E+17,sarna#3904,2020-04-21,smalltalk doesn't have a repl,,
1.30231E+17,sarna#3904,2020-04-21,"but people code in the debugger, which is a similar experience",,
4.62028E+17,StephenD#5938,2020-04-21,"> smalltalk doesn't have a repl
@sarna  I‚Äôd argue that smalltalk doesn‚Äôt need a repl!",,
1.30231E+17,sarna#3904,2020-04-21,well true,,
1.30231E+17,sarna#3904,2020-04-21,it has higher level features,,
4.56227E+17,Deleted User#0000,2020-04-21,"> I doubt it‚Äôs possible in racket
@sarna I don't see why not.",,
4.56227E+17,Deleted User#0000,2020-04-21,You can embed assembly into Racket code.,,
1.30231E+17,sarna#3904,2020-04-21,"yeah, but there are a lot of sbcl-specific features used there",,
1.30231E+17,sarna#3904,2020-04-21,they hook everything up to sbcl's virtual machine,,
1.30231E+17,sarna#3904,2020-04-21,maybe chez has something similar - but I'm sure it won't be documented,,
4.56227E+17,Deleted User#0000,2020-04-21,"Yeah, you can reach into the guts of Chez but they don't want you to do that unless you know what you're doing.",,
1.30231E+17,sarna#3904,2020-04-21,that's understandable - that's why these features are undocumented,,
1.30231E+17,sarna#3904,2020-04-21,does racket have anything like the `disassemble` function?,,
4.56227E+17,Deleted User#0000,2020-04-21,"Oh wow, it's not documented *at all*.",,
1.30231E+17,sarna#3904,2020-04-21,https://www.reddit.com/r/scheme/comments/4j2gyr/how_to_inspect_generated_machine_code_in_chez/,,
1.30231E+17,sarna#3904,2020-04-21,"9 points, no answers",,
1.30231E+17,sarna#3904,2020-04-21,yes that's what I meant by undocumented,,
4.56227E+17,Deleted User#0000,2020-04-21,`ffi/unsafe` is fairly well documented but `ffi/unsafe/vm` isn't mentioned once.,,
4.56227E+17,Deleted User#0000,2020-04-21,I thought they'd at least list it there.,,
1.30231E+17,sarna#3904,2020-04-21,:^),,
1.30231E+17,sarna#3904,2020-04-21,"https://github.com/samth/disassemble/blob/master/README.md there's this, but I don't think it works on the chez backend",,
1.30231E+17,sarna#3904,2020-04-21,"> for JITed functions
afaik chez isn't jited",,
4.56227E+17,Deleted User#0000,2020-04-21,https://github.com/samth/disassemble/blob/2bf2d8c5dc07ec535ba008c7585c6d5cb12d10e6/disassemble/vm.rkt#L12,,
1.30231E+17,sarna#3904,2020-04-21,uwu,,
1.30231E+17,sarna#3904,2020-04-21,that's neat,,
1.30231E+17,sarna#3904,2020-04-21,now we only need a mutable repl and a condition system,,
4.56227E+17,Deleted User#0000,2020-04-21,The former is easy.,,
1.30231E+17,sarna#3904,2020-04-21,"I mean don't get me wrong, I think racket is a better language than CL",,
1.30231E+17,sarna#3904,2020-04-21,"but if you're after THE ABSOLUTE POWER, common lisp is the way",,
4.56227E+17,Deleted User#0000,2020-04-21,It's frowned upon in Racket but `(compile-enforce-module-constants #f)`,,
1.30231E+17,sarna#3904,2020-04-21,"yeah I tried that, still couldn't modify the gui on the fly like in CL :(",,
4.56227E+17,Deleted User#0000,2020-04-21,Hmm,,
4.56227E+17,Deleted User#0000,2020-04-21,Do you remember what went wrong?,,
1.30231E+17,sarna#3904,2020-04-21,I think the closures are compiled and not replaced,,
4.56227E+17,Deleted User#0000,2020-04-21,Ah,,
1.30231E+17,sarna#3904,2020-04-21,not sure though,,
1.30231E+17,sarna#3904,2020-04-21,I'm still a racket noob and idk how to debug this,,
4.56227E+17,Deleted User#0000,2020-04-21,"On Racket-BC, right?",,
1.30231E+17,sarna#3904,2020-04-21,yeah,,
1.30231E+17,sarna#3904,2020-04-21,I mean I was only able to send messages to the gui in the repl,,
1.30231E+17,sarna#3904,2020-04-21,"but I couldn't, for example, replace the callback that's run after a button is pressed",,
1.30231E+17,sarna#3904,2020-04-21,"I think when I recompiled the button, it referred to another brand new button :( not to the first one",,
1.30231E+17,sarna#3904,2020-04-21,"it's probably better default behavior, but yeah",,
4.56227E+17,Deleted User#0000,2020-04-21,Also I think you can implement conditions in Racket with few lines of code using continuations but it'd be really expensive probably.,,
1.30231E+17,sarna#3904,2020-04-21,yeah I thought about doing that when I finally grok continuations,,
1.30231E+17,sarna#3904,2020-04-21,on chez continuations are pretty cheap,,
4.56227E+17,Deleted User#0000,2020-04-21,They're practically free on CHICKEN so I'm surprised nobody implemented them there.,,
4.56227E+17,Deleted User#0000,2020-04-21,Especially considering how CL-like CHICKEN is.,,
1.30231E+17,sarna#3904,2020-04-21,MIT scheme has conditions but they're really buggy,,
1.30231E+17,sarna#3904,2020-04-21,"after aborting, 25% of my CPU continues being eaten",,
4.56227E+17,Deleted User#0000,2020-04-21,"And nobody uses them, according to devs.",,
1.30231E+17,sarna#3904,2020-04-21,oh well,,
1.30231E+17,sarna#3904,2020-04-21,"btw, in which aspect is chicken cl-like?",,
1.30231E+17,sarna#3904,2020-04-21,I didn't find it more cl-ish than other schemes I tried,,
4.56227E+17,Deleted User#0000,2020-04-21,It has very strong CL influences in the way it does things.,,
4.56227E+17,Deleted User#0000,2020-04-21,"For instance, it's got read macros and compiler macros.",,
4.56227E+17,Deleted User#0000,2020-04-21,It has a version of `defsystem`.,,
4.56227E+17,Deleted User#0000,2020-04-21,It likes unhygienic macros and encourages the use of auto`gensym` (implicit renaming) in macros.,,
4.56227E+17,Deleted User#0000,2020-04-21,It has quite a few built-in read macros like `#+` (expands to `cond-expand`).,,
4.56227E+17,Deleted User#0000,2020-04-21,The internal code style is also reminiscent.,,
1.30231E+17,sarna#3904,2020-04-21,"oh, didn't know it had unhygienic macros",,
4.56227E+17,Deleted User#0000,2020-04-21,Check out explicit renaming macros. It's like a step up from `defmacro`.,,
1.30231E+17,sarna#3904,2020-04-21,üëÄ,,
4.56227E+17,Deleted User#0000,2020-04-21,It doesn't attempt to be very functional. It does things imperatively and mutatively.,,
1.30231E+17,sarna#3904,2020-04-21,"chicken is pretty slow though, no?",,
4.56227E+17,Deleted User#0000,2020-04-21,"Well, comparatively.",,
1.30231E+17,sarna#3904,2020-04-21,to other schemes at least,,
4.56227E+17,Deleted User#0000,2020-04-21,It's still pretty fast for most tasks.,,
1.30231E+17,sarna#3904,2020-04-21,faster than python :GWcmeisterPeepoEZ:,,
4.56227E+17,Deleted User#0000,2020-04-21,Its greatest performance advantage is that continuations are practically free thanks to Cheney on the MTA.,,
1.30231E+17,sarna#3904,2020-04-21,"otoh, I heard that if you use continuations liberally, you'll run into weird problems",,
1.30231E+17,sarna#3904,2020-04-21,"eh, so many schemes, so little time",,
4.56227E+17,Deleted User#0000,2020-04-21,CHICKEN was my first Scheme!,,
4.56227E+17,Deleted User#0000,2020-04-21,I eventually switched to Racket because I'm a functional programmer at heart.,,
1.30231E+17,sarna#3904,2020-04-21,"even if I pick a scheme, I can't stick to one because they don't have the libs for most of the useful stuff :GWsetmyxPeepoCry:  so now I'm making a thing in reasonml",,
4.56227E+17,Deleted User#0000,2020-04-21,"CHICKEN has some really strong points, such as the capability of trivially inlining C. You can even import C headers willy nilly.",,
4.56227E+17,Deleted User#0000,2020-04-21,"Yeah, I profess to be a Clojure programmer professionally.",,
1.30231E+17,sarna#3904,2020-04-21,"how's functional programming in dynamic langs? I've mostly programmed in statically typed ones, and my racket experience is writing like three programs lol",,
1.30231E+17,sarna#3904,2020-04-21,ew clojure,,
1.30231E+17,sarna#3904,2020-04-21,"typo in a hashmap, 300-line stack trace, day ruined",,
4.56227E+17,Deleted User#0000,2020-04-21,Oh and CHICKEN does first-class keywords.,,
4.56227E+17,Deleted User#0000,2020-04-21,Instead of using quoted symbols for everything.,,
1.30231E+17,sarna#3904,2020-04-21,doesn't racket have first-class keywords?,,
4.56227E+17,Deleted User#0000,2020-04-21,And it lets you use plists and symbol tables.,,
4.56227E+17,Deleted User#0000,2020-04-21,Nope.,,
4.56227E+17,Deleted User#0000,2020-04-21,You can't use keywords as values.,,
1.30231E+17,sarna#3904,2020-04-21,what are those then? #:something,,
1.30231E+17,sarna#3904,2020-04-21,ah,,
1.30231E+17,sarna#3904,2020-04-21,right,,
4.56227E+17,Deleted User#0000,2020-04-21,They're only for kwargs in funcalls.,,
1.30231E+17,sarna#3904,2020-04-21,confused about the definition of first-class ü§¶‚Äç‚ôÇÔ∏è,,
4.56227E+17,Deleted User#0000,2020-04-21,No worries haha,,
4.56227E+17,Deleted User#0000,2020-04-21,"WRT FP in dynlangs, honestly there are only two schools of thought here.",,
4.56227E+17,Deleted User#0000,2020-04-21,Lisp and Erlang,,
4.56227E+17,Deleted User#0000,2020-04-21,"I do Clojure and Scheme, and I'm learning Elixir.",,
1.30231E+17,sarna#3904,2020-04-21,"elixir is pretty lispy, isn't it
though it's good at hiding it",,
4.56227E+17,Deleted User#0000,2020-04-21,I find this approach of FP to be very flexible and expressive.,,
4.56227E+17,Deleted User#0000,2020-04-21,Yeah haha. I like how it's got atoms.,,
4.56227E+17,Deleted User#0000,2020-04-21,Err,,
4.56227E+17,Deleted User#0000,2020-04-21,"I should clarify that in Erlang, atoms are symbols (interned immutable strings).",,
4.56227E+17,Deleted User#0000,2020-04-21,What other languages call symbols or keywords.,,
4.56227E+17,Deleted User#0000,2020-04-21,"Confusingly enough, Clojure uses atoms to mean boxes.",,
4.56227E+17,Deleted User#0000,2020-04-21,Instead of the traditional Lisp meaning of non-pair.,,
1.30231E+17,sarna#3904,2020-04-21,"to me dynamic typing kinda feels like something which only creates problems, giving you practically nothing",,
1.30231E+17,sarna#3904,2020-04-21,"yeah, atoms in clojure are mutable refs, right?",,
1.30231E+17,sarna#3904,2020-04-21,iirc,,
4.56227E+17,Deleted User#0000,2020-04-21,Yeah,,
1.30231E+17,sarna#3904,2020-04-21,"dynamic typing - worse editor support, worse docs (usually), easily avoided runtime errors
benefits - ?????",,
1.30231E+17,sarna#3904,2020-04-21,"that's how it looks for me
and idk how to get out of that mindset lol",,
4.56227E+17,Deleted User#0000,2020-04-21,"I think the benefits of static typing are way overblown. I don't deny that they're useful, not only for modelling the language but also for static analysis.",,
4.56227E+17,Deleted User#0000,2020-04-21,But that's it. You need to use other things for those things as well. It's not a golden hammer but people sure love treating it as one.,,
1.30231E+17,sarna#3904,2020-04-21,"now it's very fashionable to bash dynamically typed langs, that doesn't help either",,
4.56227E+17,Deleted User#0000,2020-04-21,It also gets in your way of expressiveness and you often need to work around the restrictions. I found that a good portion of programming in Haskell was just working around the language getting in your way.,,
1.30231E+17,sarna#3904,2020-04-21,maybe I should stop reading HN :GWseremePeepoThink:  would be a good choice for my overall mental health,,
4.56227E+17,Deleted User#0000,2020-04-21,(I like OCaml better.),,
1.30231E+17,sarna#3904,2020-04-21,"yep, ocaml is pretty sweet",,
4.56227E+17,Deleted User#0000,2020-04-21,"> now it's very fashionable to bash dynamically typed langs, that doesn't help either
I think that's reminiscent of how people used to love to hate on garbage collected languages because the only ones they used were garbage.",,
4.56227E+17,Deleted User#0000,2020-04-21,(couldn't help it sorry),,
4.56227E+17,Deleted User#0000,2020-04-21,"And yes, Orange Website bad.",,
4.56227E+17,Deleted User#0000,2020-04-21,My quality of life improved ever since I stopped reading that wobsite and started reading n-gate instead.,,
1.30231E+17,sarna#3904,2020-04-21,what's n-gate?,,
4.56227E+17,Deleted User#0000,2020-04-21,Weekly summary of top Hacker News posts.,,
4.56227E+17,Deleted User#0000,2020-04-21,http://n-gate.com,,
1.30231E+17,sarna#3904,2020-04-21,lol,,
1.30231E+17,sarna#3904,2020-04-21,neat,,
1.30231E+17,sarna#3904,2020-04-21,"btw thanks for talking to me, I was having a pretty shitty day and now I‚Äôm a bit better üôá‚Äç‚ôÇÔ∏è",,
4.56227E+17,Deleted User#0000,2020-04-21,Aww happy to hear that.,,
1.30231E+17,sarna#3904,2020-04-21,it‚Äôs quarantine and I don‚Äôt have frickin have running water,,
4.56227E+17,Deleted User#0000,2020-04-21,Ouch,,
4.56227E+17,Deleted User#0000,2020-04-21,That sucks.,,
1.30231E+17,sarna#3904,2020-04-21,"yeah, idk who thought maintenance works at this point in time would be a good idea",,
1.30231E+17,sarna#3904,2020-04-21,so the only things I ate today are toast and some takeout :GWvertiPeepoSadMan:,,
4.56227E+17,Deleted User#0000,2020-04-21,üòî,,
1.30231E+17,sarna#3904,2020-04-21,"btw, is there any scheme that can compile to JS nicely?",,
1.30231E+17,sarna#3904,2020-04-21,except clojurescript,,
4.56227E+17,Deleted User#0000,2020-04-21,That's no Scheme!,,
4.56227E+17,Deleted User#0000,2020-04-21,There are a few but none of them are popular.,,
1.30231E+17,sarna#3904,2020-04-21,racket->JS would be ideal tbh,,
1.30231E+17,sarna#3904,2020-04-21,ah üòî,,
4.56227E+17,Deleted User#0000,2020-04-21,Schemers don't seem to like JS.,,
1.30231E+17,sarna#3904,2020-04-21,idk what people even use lisp for,,
1.30231E+17,sarna#3904,2020-04-21,"nobody does web dev, nobody does GUIs, nobody does mobile dev",,
4.56227E+17,Deleted User#0000,2020-04-21,Have you tried RacketScript?,,
1.30231E+17,sarna#3904,2020-04-21,what are they doing?,,
1.30231E+17,sarna#3904,2020-04-21,"I think it‚Äôs still in alpha, no?",,
4.56227E+17,Deleted User#0000,2020-04-21,BRB,,
1.30231E+17,sarna#3904,2020-04-21,o7,,
1.30231E+17,sarna#3904,2020-04-21,"> RacketScript doesn't support Racket features which are expensive, for example proper tail calls and continuations.
:GWvertiPeepoSadMan:",,
1.30231E+17,sarna#3904,2020-04-21,how to do loops in scheme without tail calls lol,,
4.56227E+17,Deleted User#0000,2020-04-21,Back,,
4.56227E+17,Deleted User#0000,2020-04-21,I think it converts `for` to JS directly.,,
1.93202E+17,rocketnia#4517,2020-04-21,"Whalesong was a more comprehensive implementation of Racket->JS but was much slower, from what I hear",,
4.56227E+17,Deleted User#0000,2020-04-21,"> nobody does web dev, nobody does GUIs, nobody does mobile dev
People do all of those but Lisps remain unpopular, meaning most libraries don't get developed to fruition.",,
1.93202E+17,rocketnia#4517,2020-04-21,Doesn't Racket have first-class keywords? `'#:keyword`,,
4.56227E+17,Deleted User#0000,2020-04-21,It doesn't help that they're seldom corporate funded.,,
4.56227E+17,Deleted User#0000,2020-04-21,You can make everything first-class with quoting. ;-p,,meow (1)
1.30231E+17,sarna#3904,2020-04-21,yeah but when I talk to ocaml devs I often get ‚Äúnot many people do web dev in ocaml‚Äù as a justification of not having good  web libraries,,
1.30231E+17,sarna#3904,2020-04-21,there‚Äôs a lot of compiler nerds in the ocaml community,,
1.30231E+17,sarna#3904,2020-04-21,"there aren‚Äôt many compiler jobs out there though, sadly",,
4.56227E+17,Deleted User#0000,2020-04-21,It's often used in stock trading companies.,,
4.56227E+17,Deleted User#0000,2020-04-21,Cljs is a solid choice for JS btw,,
1.30231E+17,sarna#3904,2020-04-21,in one :^),,
4.56227E+17,Deleted User#0000,2020-04-21,"Well, I met someone who used OCaml in one such company that wasn't Jane Street.",,
4.56227E+17,Deleted User#0000,2020-04-21,So that makes it two.,,
1.30231E+17,sarna#3904,2020-04-21,oh,,
1.30231E+17,sarna#3904,2020-04-21,that‚Äôs not one!,,
4.56227E+17,Deleted User#0000,2020-04-21,Sample bias tho,,
4.56227E+17,Deleted User#0000,2020-04-21,"Either way, I found mobile dev in Scheme to be very easy with LambdaNative.",,
4.56227E+17,Deleted User#0000,2020-04-21,But it quickly gets complicated when you want to do more than simple stuff.,,
1.30231E+17,sarna#3904,2020-04-21,"there‚Äôs a guy on #ocaml who moved to ocaml from clojure bc at his clojure work he was getting gored by regressions 
it‚Äôs still at the back of my head somehow :GWsetmyxPeepoSad:",,
1.30231E+17,sarna#3904,2020-04-21,"yeah, on gambit, right?",,
4.56227E+17,Deleted User#0000,2020-04-21,Yeah,,
1.30231E+17,sarna#3904,2020-04-21,"there‚Äôs a very nice scheme on top of gambit, called gerbil",,
1.30231E+17,sarna#3904,2020-04-21,but they don‚Äôt support lambda native yet,,
4.56227E+17,Deleted User#0000,2020-04-21,I made this in less than an hour with zero prior mobile dev experience.,https://cdn.discordapp.com/attachments/618895179343986688/702154311769129010/S00309-03360230.mp4,
1.30231E+17,sarna#3904,2020-04-21,it was built by a guy who liked racket‚Äôs module system but didn‚Äôt like there were no escape hatches for performance at the time,,
4.56227E+17,Deleted User#0000,2020-04-21,Most of that time went to installing Android NDK though.,,
1.30231E+17,sarna#3904,2020-04-21,YEET,,
1.30231E+17,sarna#3904,2020-04-21,lol,,
4.56227E+17,Deleted User#0000,2020-04-21,"I thought Lisps sucked because everything felt incomplete, then I realised all software sucks because everything ever is incomplete.",,racket (2)
1.30231E+17,sarna#3904,2020-04-21,TRUE,,
1.30231E+17,sarna#3904,2020-04-21,I thought emacs sucked but then I tried the alternatives,,
4.56227E+17,Deleted User#0000,2020-04-21,same,,
1.30231E+17,sarna#3904,2020-04-21,"which lisp would you use instead of python? I mostly make scripts at work now, I need something low friction",,
1.30231E+17,sarna#3904,2020-04-21,racket sounds good for this tbh,,
1.30231E+17,sarna#3904,2020-04-21,good docs,,
4.56227E+17,Deleted User#0000,2020-04-21,Racket.,,
4.56227E+17,Deleted User#0000,2020-04-21,:meow:,,üòÇ (1)
1.30231E+17,sarna#3904,2020-04-21,:meowmas:,,üòÇ (1)
4.56227E+17,Deleted User#0000,2020-04-21,It's a great sysprog language.,,
1.30231E+17,sarna#3904,2020-04-21,omw to make a dsl for every little task,,üòÇ (1)
4.56227E+17,Deleted User#0000,2020-04-21,hell yeah,,
4.56227E+17,Deleted User#0000,2020-04-21,But isn't that with Unix does too though?,,
4.56227E+17,Deleted User#0000,2020-04-21,Write DSLs for everything in C,,
1.30231E+17,sarna#3904,2020-04-21,also most frameworks are DSLs but awkward,,
4.56227E+17,Deleted User#0000,2020-04-21,Why not make them Less Awkward while at it?,,
1.30231E+17,sarna#3904,2020-04-21,right?,,
4.56227E+17,Deleted User#0000,2020-04-21,Honestly I love Racket to bits. Easily my favourite language despite the bumps and nicks here and there.,,
4.56227E+17,Deleted User#0000,2020-04-21,I gained a new appreciation for it after having to write lots of Python.,,
4.56227E+17,Deleted User#0000,2020-04-21,"Even if you avoid LOP, it's great for everyday tasks with its included batteries.",,
1.30231E+17,sarna#3904,2020-04-21,"tho
a heavy framework: *uses some obscure syntax features*
my superior: ohh there you go. sweet, beautiful
a DSL: *is simple and expressive af*
my superior: you fucking donkey, who will learn that syntax? we have work to do",,
4.56227E+17,Deleted User#0000,2020-04-21,The secret is showing to your workmates that you can trivially achieve something with that DSL instead of having to churn out lower level code for every little task.,,
4.56227E+17,Deleted User#0000,2020-04-21,Unless you get paid by line or something. :meow:,,
4.56227E+17,Deleted User#0000,2020-04-21,I do hear tales of people getting fired for reducing the size of code in projects.,,
1.30231E+17,sarna#3904,2020-04-21,:meow: thank god I don‚Äôt,,
1.30231E+17,sarna#3904,2020-04-21,we have open space office though,,
1.30231E+17,sarna#3904,2020-04-21,gotta have one bad thing,,
1.30231E+17,sarna#3904,2020-04-21,we don‚Äôt have managers though? that‚Äôs pretty nice,,
4.56227E+17,Deleted User#0000,2020-04-21,Nice,,
4.56227E+17,Deleted User#0000,2020-04-21,Autonomy ftw,,
1.30231E+17,sarna#3904,2020-04-21,"only team leaders
but they‚Äôre coders too and don‚Äôt watch you from behind your back",,
4.56227E+17,Deleted User#0000,2020-04-21,relevant btw,https://cdn.discordapp.com/attachments/618895179343986688/702157482692182147/S00420-21135066.jpg,meow (2)
4.56227E+17,Deleted User#0000,2020-04-21,"I once deployed a small, statically linked CHICKEN program for something but I don't remember what exactly. It wasn't in prod though, just an in-house utility that works behind the scenes.",,
1.30231E+17,sarna#3904,2020-04-21,"actually, a thing i‚Äôve never seen in other companies: we work 8 hour workdays, right? but our ‚Äúavailability‚Äù (can‚Äôt find a better word) is 6 hours
you get two hours for meetings, having lunch, administrative stuff
I think that‚Äôs pretty sweet",,
4.56227E+17,Deleted User#0000,2020-04-21,I now realise they never asked me anything about that so chances are that it's still running with no one having noticed it.,,
1.30231E+17,sarna#3904,2020-04-21,you can go out to have lunch for an hour and nobody bats an eye,,
4.56227E+17,Deleted User#0000,2020-04-21,Oh that's nice.,,
1.30231E+17,sarna#3904,2020-04-21,lol,,
1.30231E+17,sarna#3904,2020-04-21,I wanted to push reasonml once to have a simpler stack for front end,,
1.30231E+17,sarna#3904,2020-04-21,i‚Äôm just a junior so my team leader called for a meeting with a senior front end dev,,
1.30231E+17,sarna#3904,2020-04-21,he said no don‚Äôt use reason it‚Äôs too complicated,,
1.30231E+17,sarna#3904,2020-04-21,"but he insisted I needed to use redux, sagas, immutable.js and all that zoo",,
4.56227E+17,Deleted User#0000,2020-04-21,rip [x2],,
1.30231E+17,sarna#3904,2020-04-21,"it was a simple thing so I spent two weeks just learning these, then working for a week, then the client bailed lol",,
1.30231E+17,sarna#3904,2020-04-21,in reason I‚Äôd be done already üòî,,
1.30231E+17,sarna#3904,2020-04-21,"fuck sagas tbh, XHR is where it‚Äôs at",,
4.56227E+17,Deleted User#0000,2020-04-21,üòî,,
4.56227E+17,Deleted User#0000,2020-04-21,"I have absolutely zero experience with frontend dev, I should warn you.",,
1.30231E+17,sarna#3904,2020-04-21,the water is back but it‚Äôs orange :GWvertiPeepoSadMan:,,
1.30231E+17,sarna#3904,2020-04-21,oh,,
4.56227E+17,Deleted User#0000,2020-04-21,My website is handwritten HTML and CSS.,,
1.30231E+17,sarna#3904,2020-04-21,well the gist is he pushed a stack you should use only if your app is so large you cant manage with the simple tools,,
1.30231E+17,sarna#3904,2020-04-21,"like, I wanna chop a carrot, what should I use?
a flaming chainsaw",,
4.56227E+17,Deleted User#0000,2020-04-21,,https://cdn.discordapp.com/attachments/618895179343986688/702159915611062364/20091116-so-large.gif,ü§£ (1)
1.30231E+17,sarna#3904,2020-04-21,lol,,
1.30231E+17,sarna#3904,2020-04-21,how did you get this theme @Deleted User?,,
1.30231E+17,sarna#3904,2020-04-21,is this a custom browser or a stylus thing or,,
1.30231E+17,sarna#3904,2020-04-21,oh it‚Äôs a prepared image :meow:,,
4.56227E+17,Deleted User#0000,2020-04-21,It's the old style of SO.,,
1.30231E+17,sarna#3904,2020-04-21,really? I‚Äôm too young,,
1.30231E+17,sarna#3904,2020-04-22,does racket work on ARM?,,
4.62028E+17,StephenD#5938,2020-04-22,Yes,,
1.30231E+17,sarna#3904,2020-04-22,"oh nice, there's even a package in raspbian repos",,üòÅ (2)
1.30231E+17,sarna#3904,2020-04-22,sweet,,
4.56227E+17,Deleted User#0000,2020-04-22,"It's also in Termux's unstable repo, which is super nifty.",,
1.30231E+17,sarna#3904,2020-04-22,too bad there‚Äôs no termux for ios :GWvertiPeepoSadMan:,,
1.30231E+17,sarna#3904,2020-04-22,there‚Äôs a racket library for discord api :GWcmeisterPeepoEZ:,,üëå (1)
1.30231E+17,sarna#3904,2020-04-22,it doesn‚Äôt have any tests :GWsetmyxPeepoSad:,,
5.39603E+17,spacey üåå#7238,2020-04-22,:/,,
4.62028E+17,StephenD#5938,2020-04-22,someone was working on that recently - or a fork,,
4.62028E+17,StephenD#5938,2020-04-22,https://github.com/FabAlchemy/racket-cord/commits/master,,
1.30231E+17,sarna#3904,2020-04-22,https://github.com/nitros12/racket-cord,,
1.30231E+17,sarna#3904,2020-04-22,oh,,
1.30231E+17,sarna#3904,2020-04-22,well yeah there‚Äôs a PR,,
1.30231E+17,sarna#3904,2020-04-22,for fixing failing contracts,,
1.30231E+17,sarna#3904,2020-04-22,but that‚Äôs it :GWvertiPeepoSadMan:,,
4.62028E+17,StephenD#5938,2020-04-22,its on my todo list but not at the top üò¶,,
1.30231E+17,sarna#3904,2020-04-22,I could contribute to it but I‚Äôd like to focus on making a bot now :GWvertiPeepoSadMan:,,
4.62028E+17,StephenD#5938,2020-04-22,make the bot first üôÇ,,
4.66395E+17,oaktownsam#0815,2020-04-22,Whenever I see `racket-cord` I think it's a light weight implementation of ropes.,,
4.62028E+17,StephenD#5938,2020-04-22,There is a rope package https://planet.racket-lang.org/package-source/dyoo/rope.plt/3/0/doc.txt,,üëçüèº (1)
1.30231E+17,sarna#3904,2020-04-22,how‚Äôs planet different from the regular package index?,,
1.30231E+17,sarna#3904,2020-04-22,https://pkgd.racket-lang.org/pkgn/search?q=rope,,
1.30231E+17,sarna#3904,2020-04-22,can‚Äôt find the rope package here :(,,
4.66395E+17,oaktownsam#0815,2020-04-22,planet is the old package system,,
4.66395E+17,oaktownsam#0815,2020-04-22,Not all of the old planet packages got repackaged.,,
4.66395E+17,oaktownsam#0815,2020-04-22,https://planet.racket-lang.org/,,
4.62028E+17,StephenD#5938,2020-04-22,and no licence on that one,,
1.30231E+17,sarna#3904,2020-04-22,"ah, I see",,
3.87037E+17,NTBBloodbath#9368,2020-04-23,"> too bad there‚Äôs no termux for ios :GWvertiPeepoSadMan:

There's an alternative for iOS, but it uses APK (Alpine Package Manager) instead of APT and Idk if you can use Racket here cuz I can't test it

https://ish.app/",,
4.56227E+17,Deleted User#0000,2020-04-23,Not sure if Racket builds with musl.,,
1.30231E+17,sarna#3904,2020-04-23,"I didn‚Äôt know about this one, thanks @NTBBloodbath :GWcmeisterPeepoLove:",,‚ù§Ô∏è (1)
1.30231E+17,sarna#3904,2020-04-23,lol,https://cdn.discordapp.com/attachments/618895179343986688/702865452304695346/image0.png,"üòÇ (1),üòπ (1)"
1.93202E+17,rocketnia#4517,2020-04-23,test case fails for sufficiently large values of 3,,
4.56227E+17,Deleted User#0000,2020-04-24,It just occurred me to implement `(if-not pred yes no)` as `(if pred no yes)` instead of `(if (not pred) yes no)`.,,
1.30231E+17,sarna#3904,2020-04-24,I find the last one the easiest to parse,,
4.56227E+17,Deleted User#0000,2020-04-24,It's under the macro's hood though.,,
4.56227E+17,Deleted User#0000,2020-04-24,I doubt `not` adds any notable performance overhead anyway.,,
1.30231E+17,sarna#3904,2020-04-24,"the last one is literally if-not, maybe that's why I find it the easiest :GWseremePeepoThink:",,
2.5949E+17,Afromullet#9736,2020-04-24,My boss asked for a list of software we need while working from home. I low key slipped Dr. Racket into the list. XD,,"üíÆ (3),racket (7)"
1.30231E+17,sarna#3904,2020-04-24,"boss: what are these?
you: python scripts
script.py:
```

#!/usr/bin/env py1hon
#lang python
...
```",,üòÇ (4)
4.62028E+17,StephenD#5938,2020-04-25,I think there is a `#lang python`,,
1.30231E+17,sarna#3904,2020-04-25,"I thought so too, but couldn't find anything like it",,
4.62028E+17,StephenD#5938,2020-04-25,It might have evolved into `#lang pyret`,,
3.5323E+17,Alex Knauth#4895,2020-04-25,Are you thinking of `#lang dssl2` the python-like language for teaching data structures?,,
4.62028E+17,StephenD#5938,2020-04-25,Maybe that was it. I‚Äôm sure it was about 10 years ago. Pretty sure SK was involved,,
4.62028E+17,StephenD#5938,2020-04-28,DrRacket,https://cdn.discordapp.com/attachments/618895179343986688/704669746418942003/Screenshot_2020-04-28_at_13.25.00.png,
1.30231E+17,sarna#3904,2020-04-28,"oh my, where did you get that üëÄ",,
4.62028E+17,StephenD#5938,2020-04-28,DrRacket plugins!,,
4.62028E+17,StephenD#5938,2020-04-28,files-viewer and DrRacket theme (so I could set the background image),https://cdn.discordapp.com/attachments/618895179343986688/704671069339910165/Screenshot_2020-04-28_at_13.30.17.png,
4.62028E+17,StephenD#5938,2020-04-28,https://pkgs.racket-lang.org/package/DrRacketTheme,,
4.62028E+17,StephenD#5938,2020-04-28,https://pkgs.racket-lang.org/package/files-viewer,,
4.62028E+17,StephenD#5938,2020-04-28,"https://pkgs.racket-lang.org/package/DrRacketTheme
https://pkgs.racket-lang.org/package/files-viewer",https://cdn.discordapp.com/attachments/618895179343986688/704671751744782347/DrRacket.png,
1.30231E+17,sarna#3904,2020-04-28,"many thanks, I'll get them :GWcmeisterPeepoLove:",,ü•∞ (1)
4.62028E+17,StephenD#5938,2020-04-28,background image from https://users.cs.northwestern.edu/~robby/logos/,,
4.62028E+17,StephenD#5938,2020-04-28,I'm also trialing I‚Äôm trying out https://github.com/yjqww6/drcomplete,,
1.30231E+17,sarna#3904,2020-04-28,"the first logo was pretty metal, lol",,ü§£ (1)
1.30231E+17,sarna#3904,2020-04-28,I actually like all of the previous ones more than the current one :^(,,
1.30231E+17,sarna#3904,2020-04-28,"drcomplete sounds very cool, let us know if it works",,
4.56227E+17,Deleted User#0000,2020-04-28,I'm not allowed to view messages in #rules.,,
4.62028E+17,StephenD#5938,2020-04-28,@Deleted User sorry I‚Äôve made a mistake . Give me a moment,,
4.62028E+17,StephenD#5938,2020-04-28,@Deleted User can you try now?,,
4.56227E+17,Deleted User#0000,2020-04-28,"Yes, all clear.",,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"Hi there!

As I use Termux (because I have not had a PC for 2 years) and I use an x11 system inside my mobile which doesn't have many apps, I was thinking of making some using Racket (with `racket/gui` lib). So, a question came up to me and I want to know if it is possible to make a deb package with Racket (using some library or something to export)",,
4.62028E+17,StephenD#5938,2020-04-28,HI @NTBBloodbath are your running racket in your phone?,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"Yeah, I'm using it on Termux",,
3.87037E+17,NTBBloodbath#9368,2020-04-28,,https://cdn.discordapp.com/attachments/618895179343986688/704799093725200404/Screenshot_20200428-165846_Termux2.png,
4.62028E+17,StephenD#5938,2020-04-28,nice,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,(Set alias for racket ... It is a little more comfortable to run using `rkt` instead of `racket`),,
3.87037E+17,NTBBloodbath#9368,2020-04-28,It works very well,,
4.62028E+17,StephenD#5938,2020-04-28,racket gui expects gnome I think to run gui apps,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"And since Termux has x11 support, I got to experimenting a bit with GUI lol",,
3.87037E+17,NTBBloodbath#9368,2020-04-28,Rlly? It works with Xfce4 on mobile ü§î,,
4.62028E+17,StephenD#5938,2020-04-28,will racket run with just x111?,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,Yeah,,
4.62028E+17,StephenD#5938,2020-04-28,gracket that is,,
4.62028E+17,StephenD#5938,2020-04-28,wow,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"Gimme a moment, I'll show it to you",,
4.62028E+17,StephenD#5938,2020-04-28,(If you screenshare from your phone to discord my head will explode),,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"Hahaha, I think that is not possible at the moment",,
4.62028E+17,StephenD#5938,2020-04-28,I was just lookign at the termux website,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,,https://cdn.discordapp.com/attachments/618895179343986688/704801213618847894/Screenshot_20200428-170526_VNC_Viewer2.png,
4.62028E+17,StephenD#5938,2020-04-28,that is really cool.,,
4.62028E+17,StephenD#5938,2020-04-28,do you have a hdmi adaptor and a keyborad,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,Yes this opens up a lot of possibilities,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"No, the x11 system runs directly inside the mobile and I connect to VNC. And yeah, I have a external keyboard",,
4.62028E+17,StephenD#5938,2020-04-28,that looks like its bigger than a phone screen,,
4.62028E+17,StephenD#5938,2020-04-28,so drracket? or is that pushing things too far?,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,It is a little more comfortable than the Android keyboard ... Sometimes I have very long codes and with the mobile keyboard it is a bit uncomfortable haha,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"Ahh yes, the x11 screen size can be configured",,
4.62028E+17,StephenD#5938,2020-04-28,I notice you are on 7.4?  I'm guessing that is because 7.6 is too big?,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,I think DrRacket isn't available for Termux at the moment... So I'm using Vim with some plugins,,
4.62028E+17,StephenD#5938,2020-04-28,i'm amazed.,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"Is there a newer version? Nice

I may have to wait for the Termux team to compile it for Android and my architecture to update",,
4.62028E+17,StephenD#5938,2020-04-28,have you tried `raco distribute`,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"No, I know very little about Racket yet, I'm learning üôÇ 

Anyway, what it does?",,
4.62028E+17,StephenD#5938,2020-04-28,7.7 due to be released soon. probably early may.,,
4.62028E+17,StephenD#5938,2020-04-28,raco distribute produces stand-alone executables,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"> 7.7 due to be released soon. probably early may.

Wow, and what's new?",,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"> raco distribute produces stand-alone executables
Oh, I'll see it, thanks!",,
4.62028E+17,StephenD#5938,2020-04-28,I've not been following the release testing.,,
4.62028E+17,StephenD#5938,2020-04-28,I expect racket(cs) will just keep getting better (faster).,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,That's nice :o,,
4.62028E+17,StephenD#5938,2020-04-28,> I want to know if it is possible to make a deb package with Racket,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"At first with Racket I was a bit confused by the syntax (I come from other languages ‚Äã‚Äãlike Ruby and JavaScript), however I adapted quickly and am comfortable using the parentheses üôÇ",,üôÇ (1)
4.62028E+17,StephenD#5938,2020-04-28,is `raco distribute` and `raco exe` what you were lookign for? I know it doesn't answer the deb package but maybe a start?,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"```
Unrecognized command: distribute
```

I got that, maybe I need to execute `raco setup` first?",,
4.62028E+17,StephenD#5938,2020-04-28,"wow! you have the three big syntax traditons!
smalltalk->ruby
c->javascript
lisp->racket",,
4.62028E+17,StephenD#5938,2020-04-28,"> The raco distribute command combines a stand-alone executable created by raco exe with all of the shared libraries that are needed to run it, along with any run-time files declared via define-runtime-path. The resulting package can be moved to other machines that run the same operating system.",,
4.62028E+17,StephenD#5938,2020-04-28,"> the command
> 
>   `raco exe --gui hello.rkt`
> 
> produces either ""hello.exe"" (Windows), ""hello.app"" (Mac OS), or ""hello"" (Unix), which runs the same as running the ""hello.rkt"" module in gracket.",,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"Wow, I had not noticed that until now",,
4.62028E+17,StephenD#5938,2020-04-28,"```
% raco distribute
raco distribute: expects <dest-dir> [<executable>] ... on the command line, given 0 arguments
% raco -h
Usage: raco <command> <option> ... <arg> ...
```",,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"Ruby's syntax seemed very nice ... However, the racket syntax does not stay behind. Despite not being what I'm used to, it's very interesting",,
3.87037E+17,NTBBloodbath#9368,2020-04-28,Hmmm there are bad news for me... I can't use `distribute` or `exe`,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,I got `Unrecognized command`... So I think I'll create executables by myself,,
3.29023E+17,nixin72#3554,2020-04-28,Have you tried using raco setup first?,,üëÜ (1)
4.62028E+17,StephenD#5938,2020-04-28,I've still not learnt ruby - I'm learning a little smalltalk because I'm thinking about making a small smalltalk `#lang` based on self,,
3.29023E+17,nixin72#3554,2020-04-28,Ruby is pretty dope imo,,üëç (1)
3.87037E+17,NTBBloodbath#9368,2020-04-28,"> Have you tried using raco setup first?

I'm doing it rn, thx",,üëç (1)
3.87037E+17,NTBBloodbath#9368,2020-04-28,"> I've still not learnt ruby - I'm learning a little smalltalk because I'm thinking about making a small smalltalk `#lang` based on self

Oh, it's a good idea!
Ruby is very easy to learn... It's like python syntax lol",,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"```
raco setup: --- summary of errors ---                              [18:06:45]
raco setup: error: during making for <pkgs>/scribble-lib/scribble
raco setup:   instantiate: unknown module
raco setup:     module name: #<resolved-module-path:""/data/data/com.termux/files/usr/share/racket/collects/setup/main-doc.rkt"">
raco setup:     compiling: <pkgs>/scribble-lib/scribble/run.rkt
```",,
4.62028E+17,StephenD#5938,2020-04-28,Missing stuff?,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,Hmm I don't know much about that,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"I think scribble-lib is missing, idk lol

I'll install it manually and after run `raco setup` again",,
4.62028E+17,StephenD#5938,2020-04-28,Good luck,,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"I ran again, and there are no more errors :GWomoGabSmile:",,
3.87037E+17,NTBBloodbath#9368,2020-04-28,"However, I can't use `distribute` or `exe` üòî",,
4.66395E+17,oaktownsam#0815,2020-04-28,@StephenD I'm putting together a simplistic lexer and parser for building Smalltalk langs,,üëç (3)
4.66395E+17,oaktownsam#0815,2020-04-28,I want to see if it could be a wrapper around `racket/class` but there needs to be some shims for keyword messages.,,
4.62028E+17,StephenD#5938,2020-04-28,FYI https://leastfixedpoint.com/tonyg/kcbbs/projects/thing.html (some racket),,
4.66395E+17,oaktownsam#0815,2020-04-28,I seem to recall that project way back.,,
4.66395E+17,oaktownsam#0815,2020-04-28,I've been reading Tony's Thesis the past few weeks.  Good stuff.,,
4.66395E+17,oaktownsam#0815,2020-04-28,..whispers..  tail-call consing onto a list accumulator and reverse is bad ... pass it on,,üíØ (1)
2.05054E+17,leaf#2107,2020-04-28,why?,,
3.5323E+17,Alex Knauth#4895,2020-04-28,"It definitely needs to be documented or expressed in a comment, and if it isn't explicitly stated that's bad. But why is it bad when it is explicit?",,
2.66505E+17,notjack#9941,2020-04-28,"there's no benefit to doing it instead of non-tail recursion, it just obscures the code",,
2.05054E+17,leaf#2107,2020-04-28,doesn't it avoid stack overflows?,,
2.66505E+17,notjack#9941,2020-04-28,"no, there are no stack overflows in racket/scheme",,
2.66505E+17,notjack#9941,2020-04-29,stack memory and heap memory are the same thing. a stack overflow is just another way to get an out of memory error.,,
2.66505E+17,notjack#9941,2020-04-29,"if you create a huge non-tail-recursive call stack, the runtime just moves stack frames to the heap for you automatically",,
2.66505E+17,notjack#9941,2020-04-29,"this is why there's no difference between building a list with tail recursion and without tail recursion. when you do it tail recursively, you're just redoing the exact same work of building a list of arguments that the runtime would do anyway in order to keep track of what's on the stack",,
2.66505E+17,notjack#9941,2020-04-29,"(this is only the case if you're _building a list_ tail recursively. if you're doing something _else_ tail recursively, like computing a sum, then the tail recursive approach is much better because you're not _moving_ where a list of values gets built up, because you're not building up a list of values at all)",,‚è´ (2)
2.66505E+17,notjack#9941,2020-04-29,"in general: ""aggregation"" operations (sum, max, min, average, count, etc.) should be done tail recursively. ""collection"" operations (make a list, make a hash table, make a tree, etc.) shouldn't.",,
4.66395E+17,oaktownsam#0815,2020-04-29,Also in the list case you end up building the list up in reverse and so `reverse` gets applied to get it in the correct order.  Which generally will double the real time the function takes to run.,,
4.66395E+17,oaktownsam#0815,2020-04-29,I was checking out answers to a list building kata on codewars and ~90% did a tail recursive cons with a reverse.,,
1.30231E+17,sarna#3904,2020-04-29,"I‚Äôve always done it this way, what would the alternative look like?",,
4.66395E+17,oaktownsam#0815,2020-04-29,"Roughly
```
(define (naive x)
  (if (zero? x) null (cons x (naive (sub1 x)))))
```",,
1.30231E+17,sarna#3904,2020-04-29,hmm :GWseremePeepoThink:,,
4.66395E+17,oaktownsam#0815,2020-04-29,Also tail call + reverse uses twice the memory,,
1.30231E+17,sarna#3904,2020-04-29,and this would build it in the correct order?,,
4.66395E+17,oaktownsam#0815,2020-04-29,"""order"" is this case is from the value you give the function to 1",,
1.30231E+17,sarna#3904,2020-04-29,yes,,
4.66395E+17,oaktownsam#0815,2020-04-29,"Over a list, in order.
```
(define (my-filter pred? ls)
  (cond
    [(null? ls) null]
    [(pred? (car ls)) (cons (car ls) (my-filter pred? (cdr ls)))]
    [else (my-filter pred? (cdr ls))]))
```",,
4.66395E+17,oaktownsam#0815,2020-04-29,I guess I could've done one-arg'd map...,,
1.30231E+17,sarna#3904,2020-04-29,oh right :GWseremePeepoThink: now I see it,,
1.30231E+17,sarna#3904,2020-04-29,thanks :GWcmeisterPeepoLove:,,
1.30231E+17,sarna#3904,2020-04-29,so in general I shouldn‚Äôt worry about making stuff tail recursive in racket?,,
4.66395E+17,oaktownsam#0815,2020-04-29,"> notjack: in general: ""aggregation"" operations (sum, max, min, average, count, etc.) should be done tail recursively. ""collection"" operations (make a list, make a hash table, make a tree, etc.) shouldn't.",,
1.30231E+17,sarna#3904,2020-04-29,üôèüôá‚Äç‚ôÇÔ∏è,,
4.66395E+17,oaktownsam#0815,2020-04-29,"A lot of times I have an ""instinct"" when I look at a problem on how to handle it.  
But if I'm feeling my way through a problem I try to use one of the `for` forms first.",,
1.30231E+17,sarna#3904,2020-04-29,actually that made me think - is foldl tail recursive + reverse or body recursive in racket?,,
1.30231E+17,sarna#3904,2020-04-29,foldl/reduce/whatyanameit,,
1.30231E+17,sarna#3904,2020-04-29,yeah fors are awesome,,
5.39603E+17,spacey üåå#7238,2020-04-29,I wish I understood what was going on in this chat but I haven't had much time to goof around with Racket this past week :(,,
4.62028E+17,StephenD#5938,2020-04-29,They are helping someone understand recursion and tail calls.,,
2.66505E+17,notjack#9941,2020-04-29,@spacey üåå that's okay üôÇ,,
2.66505E+17,notjack#9941,2020-04-29,I haven't been goofing around with Racket much lately either,,
2.66505E+17,notjack#9941,2020-04-29,been too hard to focus,,
4.66395E+17,oaktownsam#0815,2020-04-29,"I've been able to find some time, but today I had to do some unix sysadmin tech support, facilitating zoom calls, and now order replacement parts for a laptop my 7yo is hellbent on destroying",,
4.66395E+17,oaktownsam#0815,2020-04-29,(only one of those things I get paid to do),,
4.62028E+17,StephenD#5938,2020-04-29,üò≠,,
4.66395E+17,oaktownsam#0815,2020-04-29,The laptop still works enough that I'm running discord on it üôÇ,,
4.66395E+17,oaktownsam#0815,2020-04-29,Something up with the lcd.  Nice that the hdmi port actually works.,,üëç (1)
3.29023E+17,nixin72#3554,2020-04-29,"So I'm thinking of writing a paper in Pollen, but I need to be able to include FSMs in the paper. Does anyone know of a Racket library/language that I can use for building FSMs like in graphviz that would work with Pollen?",,
3.29023E+17,nixin72#3554,2020-04-29,As soon as I finished typing that I realized I should really just search the page for `graphviz` and found this: https://docs.racket-lang.org/graphviz/index.html,,
3.29023E+17,nixin72#3554,2020-04-29,So I'm gonna try that out and see if it works how I want,,
3.29023E+17,nixin72#3554,2020-04-29,"Hmm, doesn't look like there would be an easy way to do that all in one file, the image would need to be included in the Pollen page as an external asset. Was hoping I could just do something like 
```scheme
#lang pollen
‚óä(require graphviz)

this is some text 
; Or something like this I guess
‚óä(img->svg (make-diagraph `(some code for the graphviz library)))
some more text after a picture of my FSM
```",,
3.29023E+17,nixin72#3554,2020-04-30,"It would be a dream though to be able to embed a graphviz diagram right inside markdown like this so easily... Of course you can do stuff like this in latex, but latex is way more complicated than anything I need for 99% of use cases.",,
3.29023E+17,nixin72#3554,2020-04-30,Maybe after classes are done I'll try making something like it...,,
4.62028E+17,StephenD#5938,2020-04-30,"Hi @nixin72 the author of pollen is not on discord ‚òπÔ∏è.
The pollen manual https://docs.racket-lang.org/pollen/Getting_more_help.html#%28part._.Questions___discussion%29 recommends that questions should be posted on github https://github.com/mbutterick/pollen-users/issues",,
7.05427E+17,Geoff Knauth#5539,2020-04-30,"Just joined Discord and saw this, very useful to me as I was just using graphviz & tikz two days ago, will be doing more.",,üëç (1)
1.30231E+17,sarna#3904,2020-04-30,hello new person üëã,,üëç (1)
3.29023E+17,nixin72#3554,2020-04-30,"Ohh excellent, thank you @StephenD! I'll post my question there then",,
4.62028E+17,StephenD#5938,2020-04-30,I‚Äôve only done a little pollen so I‚Äôm out of my depth üò±,,
3.29023E+17,nixin72#3554,2020-04-30,I've not done any! I just really want something to replace my markdown workflow cause markdown doesn't do enough,,
4.62028E+17,StephenD#5938,2020-04-30,https://groups.google.com/d/msg/pollenpub/AAvs798fLpI/l8lNBPcCAgAJ,,
3.29023E+17,nixin72#3554,2020-04-30,"You can make custom tags for the Pollen markup, so I think it should be pretty easy to do this actually",,üôå (1)
4.62028E+17,StephenD#5938,2020-04-30,Btw thank you @Alex Knauth for contributing to files-viewer,,
3.5323E+17,Alex Knauth#4895,2020-04-30,"I must have written a macro at some point in the past in Typed Racket to translate
```
(define-data Shape
  (Circle [radius : NonnegativeReal])
  (Square [width : NonnegativeReal])
  (Rectangle [width : NonnegativeReal] [height : NonnegativeReal]))
```
into
```
(struct Circle ([radius : Nonnegative-Real]))
(struct Square ([width : Nonnegative-Real]))
(struct Rectangle ([width : Nonnegative-Real] [height : Nonnegative-Real]))
(define-type Shape (U Circle Square Rectangle))
```
But I don't think I ever shared it. Would this be a useful thing to put in a package?",,ü§î (1)
2.66505E+17,notjack#9941,2020-04-30,"Is there a better name than `define-data`? It's nice for haskellers, but terrible for everyone else.",,
3.5323E+17,Alex Knauth#4895,2020-04-30,Is `define-datatype` better?,,
2.66505E+17,notjack#9941,2020-04-30,"yes, but still vague. There's lots of kinds of data types.",,
2.66505E+17,notjack#9941,2020-04-30,Maybe `define-algebraic-type`?,,
3.5323E+17,Alex Knauth#4895,2020-04-30,"I would rather include the word ""data"" than not, so I would make that `define-algebraic-datatype`. It's a little long, I would prefer just `define-data`, but it is more descriptive",,
2.66505E+17,notjack#9941,2020-04-30,That makes sense,,
2.66505E+17,notjack#9941,2020-04-30,have you seen the type definition libraries I made in `rebellion/type`? like `define-tuple-type` / `define-record-type` / `define-enum-type` / etc.,,
4.66395E+17,oaktownsam#0815,2020-04-30,"re: typed langs conversation on #deleted-channel, making turnstile a well supported lang for making typed langs would be nice.",,üíØ (2)
2.66505E+17,notjack#9941,2020-04-30,"folks, this is why we don't use lists to represent other kinds of collections https://github.com/racket/racket/issues/3104",,
2.66505E+17,notjack#9941,2020-04-30,"(`random-sample` _should_ have returned a `set?`, to make the ordering properties clear)",,
4.66395E+17,oaktownsam#0815,2020-04-30,"I put together an example of building a REPL using the framework library for anyone interested.  The example REPL shows guitar fingerings for chords based on the @Alex Knauth 's music package.
https://github.com/samdphillips/racket-gui-repl-example",,üëç (3)
4.66395E+17,oaktownsam#0815,2020-04-30,@notjack my interpretation is that `random-sample` should have returned a `multiset?` since duplicates would be allowed?,,
2.66505E+17,notjack#9941,2020-04-30,"@oaktownsam Yup, good catch!",,
3.5323E+17,Alex Knauth#4895,2020-04-30,I just realized my package doesn't do the normal G minor shape that I like doing,,
3.5323E+17,Alex Knauth#4895,2020-04-30,The G minor I normally do is an E minor shape moved up 3 frets,,
3.29023E+17,nixin72#3554,2020-04-30,When using Racket in Emacs I get syntax highlighting at the REPL - how can I get syntax highlighting at a REPL when using my normal terminal emulator?,,
4.66395E+17,oaktownsam#0815,2020-04-30,I don't think that is supported.,,
4.56227E+17,Deleted User#0000,2020-05-01,That could be interesting.,,
4.56227E+17,Deleted User#0000,2020-05-01,Some languages' repls support that.,,
1.30231E+17,sarna#3904,2020-05-01,"ocaml has colorful repls with frames, autocompletion and stuff",,
1.30231E+17,sarna#3904,2020-05-01,"eh, I really hate how opaque the object system is",,
1.30231E+17,sarna#3904,2020-05-01,,https://cdn.discordapp.com/attachments/618895179343986688/705766763798855711/unknown.png,
1.30231E+17,sarna#3904,2020-05-01,and in color there's,,
1.30231E+17,sarna#3904,2020-05-01,,https://cdn.discordapp.com/attachments/618895179343986688/705766832182788136/unknown.png,
1.30231E+17,sarna#3904,2020-05-01,why can't I get the whole thing? why is everything so opaque?,,
2.67464E+17,SlashDevSlashRandom#2112,2020-05-01,"just my opinion, but I feel like that's sort of what object systems often tend toward - while not a prefect comparison, I think of how that class would get written in a language that leans more heavily toward OO, and I could see creating the red, green, blue, and alpha members and then generating getters",,
1.30231E+17,sarna#3904,2020-05-01,"yeah I get it, encapsulation, but it's so horribly annoying when I can't see what's inside and it just prints `(object:foo% ...)`",,
2.67464E+17,SlashDevSlashRandom#2112,2020-05-01,"I agree - I apologize if I gave the impression I was advocating for it, and also that I don't know enough to say if there's a good way to get around it - I imagine you could subclass color% and add a method that would give you what you want, but that feels quite cumbersome - probably easier to just write a function that takes a color% instance and makes a list from the values",,
1.30231E+17,sarna#3904,2020-05-01,no worries,,
1.30231E+17,sarna#3904,2020-05-01,I‚Äôm just expressing my frustration :D,,
1.30231E+17,sarna#3904,2020-05-01,"yeah I can make a helper, but I‚Äôm used to being able to just print the thing and see what‚Äôs inside",,
1.30231E+17,sarna#3904,2020-05-01,but the languages I‚Äôm used to don‚Äôt have classes - so yeah,,
2.67464E+17,SlashDevSlashRandom#2112,2020-05-01,"Can you give me a couple? I grew up in class world, and I'm always on the lookout for new languages that are foreign to me",,
4.56227E+17,Deleted User#0000,2020-05-01,You can write printers for your objects.,,üëå (1)
1.30231E+17,sarna#3904,2020-05-01,"oh, maybe I could‚Äôve just called display on it :meow:",,
1.30231E+17,sarna#3904,2020-05-01,"@SlashDevSlashRandom rust has only structs, for example",,
1.30231E+17,sarna#3904,2020-05-01,erlang/elixir,,
1.30231E+17,sarna#3904,2020-05-01,ocaml has objects but people don‚Äôt really use them,,
1.30231E+17,sarna#3904,2020-05-01,haskell,,
2.67464E+17,SlashDevSlashRandom#2112,2020-05-01,thx,,
1.30231E+17,sarna#3904,2020-05-01,in most of these you‚Äôd just `derive show` or whatever and they‚Äôd be printable,,
1.30231E+17,sarna#3904,2020-05-01,"racket has transparent structs, but this object business is giving me the heebie-jeebies",,
4.56227E+17,Deleted User#0000,2020-05-01,There's O'Haskell,,
1.30231E+17,sarna#3904,2020-05-01,https://www.ohaskell.guide/,,
1.30231E+17,sarna#3904,2020-05-01,lol it‚Äôs russian,,
1.30231E+17,sarna#3904,2020-05-01,or is this a book or something?,,
1.30231E+17,sarna#3904,2020-05-01,"https://wiki.haskell.org/O'Haskell
okay no, it‚Äôs this one",,
4.66395E+17,oaktownsam#0815,2020-05-01,"Classes need to implement `printable<%>` or `writable<%>`.
https://docs.racket-lang.org/reference/objectprinting.html",,
4.66395E+17,oaktownsam#0815,2020-05-01,"Just like `structs` have to implement the appropriate generic methods, struct property, or declared `#:transparent`",,
4.62028E+17,StephenD#5938,2020-05-01,Is the opacity of objects is a __feature__ to stop you referencing and using state in unexpected ways,,üëç (1)
4.62028E+17,StephenD#5938,2020-05-01,__unsafe__ ways?,,
1.30231E+17,sarna#3904,2020-05-01,how is printing it unsafe?,,
1.30231E+17,sarna#3904,2020-05-01,in a way that's human-readable,,
1.30231E+17,sarna#3904,2020-05-01,ha ha very funny mr racket,https://cdn.discordapp.com/attachments/618895179343986688/705841299982516264/unknown.png,üòÇ (1)
4.66395E+17,oaktownsam#0815,2020-05-01,The perspective Racket takes is not out of the ordinary.  To get a useful print string out of most OO languages requires implementing some conversion interface.,,
1.30231E+17,sarna#3904,2020-05-01,"not saying it's uncommon for OO langs, just saying I think it's annoying",,
1.30231E+17,sarna#3904,2020-05-01,"trying to debug this with the dr racket debugger, the entire dr racket froze.. heck",,
2.66505E+17,notjack#9941,2020-05-01,colors probably shouldn't have been objects,,
2.66505E+17,notjack#9941,2020-05-01,they're just bags of data,,
2.66505E+17,notjack#9941,2020-05-01,(this does not mean objects are bad in general),,
1.30231E+17,sarna#3904,2020-05-01,"I mean yeah, and if they are - why don‚Äôt they have a method for displaying the entire color somehow?",,
1.30231E+17,sarna#3904,2020-05-01,"oh my, I played myself - I was trying to display a style delta, not a color",,
1.30231E+17,sarna#3904,2020-05-01,gonna try this with a color now :meow:,,
1.30231E+17,sarna#3904,2020-05-01,`#(struct:object:color% ...)` :meow:,,
4.66395E+17,oaktownsam#0815,2020-05-01,But what if you're underlying color model is not RGB ...,,
4.62028E+17,StephenD#5938,2020-05-01,"> colors probably shouldn't have been objects
@notjack  I though this the multiple representations of colours: rgb, colour name",,
1.30231E+17,sarna#3904,2020-05-01,"it‚Äôs rgba, you can get red green blue and alpha from it @oaktownsam",,
4.66395E+17,oaktownsam#0815,2020-05-01,Yeah but you could have an HSV or CMYK underlying model and a response for `red` should make sense.,,
2.66505E+17,notjack#9941,2020-05-01,I think trying to abstract over that is more complicated than picking a standard format and making it easy to convert between other well known models,,
4.62028E+17,StephenD#5938,2020-05-01,"And extensibility is possible? r,g,b,ra,ga,ba",,
1.30231E+17,sarna#3904,2020-05-01,but why not have a function to get everything? as a struct or a list even,,
1.30231E+17,sarna#3904,2020-05-01,or just print it for humans..,,
1.30231E+17,sarna#3904,2020-05-01,I don‚Äôt want to `read` it back,,
2.66505E+17,notjack#9941,2020-05-01,Yeah there could have been a `color` struct and a `color-convertible<%>` interface,,
1.30231E+17,sarna#3904,2020-05-01,I want to *read* it,,
1.30231E+17,sarna#3904,2020-05-01,it‚Äôs really funny how the global list of styles has a `number` method so you don‚Äôt have to call `length` on the list,,
1.30231E+17,sarna#3904,2020-05-01,but you have to call four methods on a color to get a RGBA representation,,
1.30231E+17,sarna#3904,2020-05-01,:meow:,,
4.62028E+17,StephenD#5938,2020-05-01,designed in the 90‚Äôs - java hit and everything was about objects,,
4.66395E+17,oaktownsam#0815,2020-05-01,"Just a guess, I think technically all of racket/draw is objects because it wraps cairo.",,üëÜ (1)
1.30231E+17,sarna#3904,2020-05-01,wasn‚Äôt the GUI system redesigned?,,
1.30231E+17,sarna#3904,2020-05-01,I thought it was redesigned a couple years ago,,
1.30231E+17,sarna#3904,2020-05-01,the racket one,,
4.66395E+17,oaktownsam#0815,2020-05-01,<record scratch> actually it may have been from wxwidgets and then,,
4.66395E+17,oaktownsam#0815,2020-05-01,when ported to cairo maintained,,
1.30231E+17,sarna#3904,2020-05-01,is there a way to get more info in the debugger by the way?,,
4.62028E+17,StephenD#5938,2020-05-01,"I don‚Äôt want to be an apologist for other people‚Äôs code, but I don‚Äôt want to implement a cross-platform gui toolkit. 
I use `racket/gui` too. I feel your pain.",,
1.30231E+17,sarna#3904,2020-05-01,,https://cdn.discordapp.com/attachments/618895179343986688/705852357984125049/image0.jpg,
1.30231E+17,sarna#3904,2020-05-01,everything‚Äôs opaque (again),,
1.30231E+17,sarna#3904,2020-05-01,@StephenD yeah cross-platform GUI is hard,,
4.56227E+17,Deleted User#0000,2020-05-01,(understatement),,
1.30231E+17,sarna#3904,2020-05-01,very hard*,,
4.56227E+17,Deleted User#0000,2020-05-02,@nixin72 Chez Scheme seems to be capable of syntax highlighting in the repl.,,
4.56227E+17,Deleted User#0000,2020-05-02,But I have no idea how to get it to work.,,
4.56227E+17,Deleted User#0000,2020-05-02,"Ah never mind, it's just Geiser.",,
1.30231E+17,sarna#3904,2020-05-03,"hehe, I changed where I keep the state (it‚Äôs in a top-level struct now) and actually tried out the `debug` package",,
1.30231E+17,sarna#3904,2020-05-03,now stuff is much smoother,,
1.30231E+17,sarna#3904,2020-05-03,"thanks @Alex Knauth, awesome package :GWcmeisterPeepoLove:",,
3.29023E+17,nixin72#3554,2020-05-03,"Okay, so I've messed around with Pollen and now have this working! 
```scheme
#lang pollen

Hello world!

‚óä(graphviz->xexpr ""
v0 
v1 
v2 
v0 -> v0 
v0 -> v1 
v1 -> v2 
v2 -> v0
"")
```
That Pollen code renders to",https://cdn.discordapp.com/attachments/618895179343986688/706671420872196116/unknown.png,
3.29023E+17,nixin72#3554,2020-05-03,"Not that this is remotely impressive, but I think I have peaked.",,
5.39603E+17,spacey üåå#7238,2020-05-04,that's pretty cool! :),,
1.30231E+17,sarna#3904,2020-05-04,that‚Äôs very nice üëÄ,,
1.30231E+17,sarna#3904,2020-05-04,I didn‚Äôt know you could make graphs so easily,,
2.23427E+17,gour#0888,2020-05-04,morning,,
2.23427E+17,gour#0888,2020-05-04,do you consider that Racket's GUI is sufficiently-rich for writing (multi-platform) desktop apps similar to using gtk/qt bindings via some other language?,,
1.30231E+17,sarna#3904,2020-05-04,"it‚Äôs pretty capable, Dr Racket uses it",,
1.30231E+17,sarna#3904,2020-05-04,"I think it has some limitations regarding fine-tuning the style/theme - not sure though, I‚Äôm fine with the defaults",,
2.23427E+17,gour#0888,2020-05-04,"@sarna well, i'm thinking about more complex type of apps....e.g. i've found the following list: https://news.ycombinator.com/item?id=18047967",,
1.30231E+17,sarna#3904,2020-05-04,there‚Äôs a pretty good summary of the current limitations in the comment,,
1.30231E+17,sarna#3904,2020-05-04,"idk how current though, it‚Äôs from 2018",,
1.30231E+17,sarna#3904,2020-05-04,:GWseremePeepoThink:,,
1.30231E+17,sarna#3904,2020-05-04,sorry I‚Äôm just starting out basically,,
2.23427E+17,gour#0888,2020-05-04,"ok, fair-enough üòâ",,
1.30231E+17,sarna#3904,2020-05-04,drag-and-drop seems to still be an issue https://github.com/racket/gui/issues/63,,
3.87037E+17,NTBBloodbath#9368,2020-05-04,Hi there!,,üëã (1)
4.66395E+17,oaktownsam#0815,2020-05-04,"This is an interesting change for Scheme
https://srfi.schemers.org/srfi-195/srfi-195.html",,ü§î (1)
2.66505E+17,notjack#9941,2020-05-04,hmm,,
2.66505E+17,notjack#9941,2020-05-04,not sure what problem these are trying to solve,,
1.93202E+17,rocketnia#4517,2020-05-04,same,,
1.93202E+17,rocketnia#4517,2020-05-04,and it looks like `unbox` might be the only operation they describe that would even make use of multiple-value return,,
2.66505E+17,notjack#9941,2020-05-04,also I'm skeptical that there's performance to be gained here,,
1.93202E+17,rocketnia#4517,2020-05-04,I don't think they mention performance as a motivation,,
2.66505E+17,notjack#9941,2020-05-04,"not directly, but that's the main motivation I see brought up when discussing why to bother using multiple values at all",,
2.66505E+17,notjack#9941,2020-05-04,"so if it's _not_ more performant, then.... why not just use a regular mutable list?",,
1.93202E+17,rocketnia#4517,2020-05-04,their stated goal is to make the language more consistent by using this feature in more places where it makes sense to do so,,
1.93202E+17,rocketnia#4517,2020-05-04,"in that spirit, I'd be more optimistic about the vision I described in https://github.com/racket/rhombus-brainstorming/issues/78#issuecomment-514025353",,
1.93202E+17,rocketnia#4517,2020-05-04,but I have trouble taking that vision seriously even if I do think it makes things more consistent,,
2.66505E+17,notjack#9941,2020-05-04,Yeah I'd much rather see standard libraries consistently _not_ use multiple values than consistently use them.,,
1.93202E+17,rocketnia#4517,2020-05-04,^ this,,
2.66505E+17,notjack#9941,2020-05-04,"Jay summed it up pretty well:
> My personal taste is that multiple values are theoretically beautiful and elegantly expose the ability of an advanced compiler to use a custom calling convention, but are extremely annoying to actually use in almost all circumstances in Scheme & Racket",,
1.93202E+17,rocketnia#4517,2020-05-04,"I think that's exactly the annoyance that leads to proposals like this one, trying to smooth out the experience a little better",,
1.93202E+17,rocketnia#4517,2020-05-04,"there's a big bump in the middle of the rug, and some of the crowd is conscientiously moving it to one side while some of the crowd is moving it to the other... and as long as it's there, people are tripping on it",,
2.66505E+17,notjack#9941,2020-05-04,"Yeah, definitely",,
2.66505E+17,notjack#9941,2020-05-04,It's one of those language features that doesn't cooperate well with half measures,,
2.66505E+17,notjack#9941,2020-05-04,"You gotta go all in on them and plan APIs around it from the ground up, or not support them at all. The uncanny valley in between is unpleasant for everyone.",,
1.93202E+17,rocketnia#4517,2020-05-04,someday I think it'd be nifty to see a typed Scheme where the types compile down to `values` bundles,,
2.66505E+17,notjack#9941,2020-05-04,yes that could be super neat,,
4.66395E+17,oaktownsam#0815,2020-05-04,I figured there would be some opinions here about that SRFI üôÇ,,üòâ (1)
4.66395E+17,oaktownsam#0815,2020-05-04,From that srfi mailing list it almost reads like an implementation of vectors with a different name.,,üíØ (1)
2.66505E+17,notjack#9941,2020-05-05,_finally_ got caught up on the last three months of Racket Users posts...,,üò≠ (1)
2.66505E+17,notjack#9941,2020-05-05,"who knows, maybe this week I'll get caught up on actual pull requests too",,üíÆ (1)
4.62028E+17,StephenD#5938,2020-05-06,Any other Catalina users seeing this ?,https://cdn.discordapp.com/attachments/618895179343986688/707687182088929371/unknown.png,ü§î (1)
4.62028E+17,StephenD#5938,2020-05-06,(two title bars),,
5.44776E+17,khaferkamp#6755,2020-05-07,"no, normal and cs drracket app seem to have normal menu bars",,
5.44776E+17,khaferkamp#6755,2020-05-07,for 7.7,,
4.62028E+17,StephenD#5938,2020-05-07,is my - I triggered a macos issue that has affected a lot of other projects,,
4.62028E+17,StephenD#5938,2020-05-07,"is there a way to capture the mouse position when a racket/gui window doesn‚Äôt have focus?
```scheme
(class canvas%
    (inherit refresh)
    (define x 0)
    (define/override (on-event a-mouse-event)
      (set! x (/ (send a-mouse-event get-x) 1))
      (refresh))```",,
4.62028E+17,StephenD#5938,2020-05-07,I suspect is it possible because I can get a negative mouse x-position by moving the moving the mouse quickly.,,
2.67464E+17,SlashDevSlashRandom#2112,2020-05-07,"@StephenD I'm not sure if this is exactly what you're looking for, but I did a little experiment and set up a timer repeatedly calling `get-current-mouse-state` from racket/gui, and that gave me the (absolute) mouse position, even when DrRacket was minimized and what-not",,üëç (1)
2.67464E+17,SlashDevSlashRandom#2112,2020-05-07,apologies for the ping if that's not quite what you were going for,,
4.62028E+17,StephenD#5938,2020-05-08,its awesome thank you!,,
2.17712E+17,gomma#4017,2020-05-08,any good packages for plotting graphs of functions and whatnot?,,
3.5323E+17,Alex Knauth#4895,2020-05-08,The `plot` library is included in the main distribution,,
2.17712E+17,gomma#4017,2020-05-08,"thanks, somehow i overlooked it üòî",,
2.66505E+17,notjack#9941,2020-05-08,"don't worry about it, the main distribution is huge üôÇ it's easy to overlook stuff in it",,
2.66505E+17,notjack#9941,2020-05-09,"tonight I worked on a neat AI library and got to the point where it can solve this problem:
- I have 100 copper
- I can transmute 10 copper into 1 silver
- I can transmute 10 silver into 1 gold
- I want 1 gold",,"üëç (1),üç¥ (1)"
2.66505E+17,notjack#9941,2020-05-09,"the code looks like this:
```scheme
(define transmute-silver
  (multiset-action
   #:requirements (hash copper (at-least-range 10))
   #:deletions (multiset-of-copies copper 10)
   #:additions (multiset silver)))

(define transmute-gold
  (multiset-action
   #:requirements (hash silver (at-least-range 10))
   #:deletions (multiset-of-copies silver 10)
   #:additions (multiset gold)))

(define problem
  (multiset-planning-problem
   #:state (multiset-of-copies copper 100)
   #:actions (set transmute-silver transmute-gold)
   #:goal (multiset-goal (hash gold (singleton-range 1)))))

(multiset-planning-problem-solve problem)
```",,
4.62028E+17,StephenD#5938,2020-05-09,"https://github.com/racket/gui/issues/184 
See also https://racket.slack.com/archives/C06V96CKX/p1589015478233100",,
2.17712E+17,gomma#4017,2020-05-09,"yo plot makes a %snip üòç
plot, draw, gui, are all so nicely fit together",,
4.66395E+17,oaktownsam#0815,2020-05-09,Monitoring systems (over ssh) plotting the data using plot and refreshing as new data arrives.,https://cdn.discordapp.com/attachments/618895179343986688/708787035737030736/Screen_Shot_2019-11-12_at_6.50.30_PM.png,ü•∞ (2)
4.66395E+17,oaktownsam#0815,2020-05-09,"Unfortunately I haven't used it in a while,  there was a problem with getting the plot frames to stay static.",,
2.17712E+17,gomma#4017,2020-05-09,sweet,,
2.17712E+17,gomma#4017,2020-05-09,i want to make zoomable user interfaces,,üëç (1)
2.17712E+17,gomma#4017,2020-05-09,i have a plan but i'm still pretty new.,,
2.17712E+17,gomma#4017,2020-05-09,"if i don't make any progress by a week from now, then punish me",,
4.62028E+17,StephenD#5938,2020-05-09,FYI there is a great animated plot lib in planet that I've been meaning to port to the package repository.,,
4.62028E+17,StephenD#5938,2020-05-09,https://github.com/spdegabrielle/animated-canvas my copy,,
4.62028E+17,StephenD#5938,2020-05-10,https://blog.racket-lang.org/2020/05/racket-is-25.html,,"üéÇ (3),üéâ (4),racket (3)"
2.17712E+17,gomma#4017,2020-05-10,today!?,,
2.17712E+17,gomma#4017,2020-05-10,"happy bd racket, ily",,
4.62028E+17,StephenD#5938,2020-05-10,"Quickscript-extra is a bunch of useful scripts for DrRacket scripts (menu) functionality;
‚Äî
Major update:
- put-function is much faster, by triggering check-syntax as early as possible and avoiding its re-computation.
- More warnings and error reporting (in particular regarding mutated variables).
- Added more information at the top of the script file, in particular some caveats.

Please report bugs here:
https://github.com/Metaxal/quickscript-extra/issues

If you have already installed this: 

`raco pkg update quickscript-extra`

and if DrRacket is open, click on ""Scripts | Manage scripts | Unload persistent scripts"" to restart the script.",,
4.62028E+17,StephenD#5938,2020-05-11,"Continuations in Racket's Web Server
https://defn.io/2020/05/11/racket-web-server-internals/",,üëè (1)
5.39603E+17,spacey üåå#7238,2020-05-12,what's a continutation? i hear about it a fair bit in dicussions related to scheme,,
2.66505E+17,notjack#9941,2020-05-12,"It's a way of representing ""the rest of the program""",,
2.66505E+17,notjack#9941,2020-05-12,"If you pause any running program, you can chop up its code into three distinct pieces:

- The code that's already been run
- The next step
- The code to run after the next step",,
2.66505E+17,notjack#9941,2020-05-12,"For example, say this code is running and the program has reached the part indicated by the ^ symbol:

```java
var x = readNumber();
var y = readNumber();
var result = (x + y);
//           ^
print(result);
```
Then the code that's already been run is the first two lines, the next step is to compute `x + y`, and the code to run afterwards is this:
```
var result = _;
print(result);
```
...where the underscore represents a hole for the result we're going to compute in the next step.",,
2.66505E+17,notjack#9941,2020-05-12,"The ""code to run next"" is called the program's current continuation.",,
2.66505E+17,notjack#9941,2020-05-12,"Some languages let you _capture_ continuations, meaning you can insert code that says ""take the rest of the program and save it in a function I can call."" This lets you call that function _multiple_ times or decide not to call it at all, giving you the ability to restart chunks of code or skip them.",,
2.66505E+17,notjack#9941,2020-05-12,"In normal code there's not much point to this, it's just a complicated `goto`. But you can combine it with macros to implement your own control systems like for loops, exception systems, threads, etc.",,
2.66505E+17,notjack#9941,2020-05-12,I have a gist with several examples of how to do that here: https://gist.github.com/jackfirth/027411d567385dadb3202bee75a847b4,,
2.66505E+17,notjack#9941,2020-05-12,"See also this wonderful stackoverflow answer about ""continuation prompts"", as it explains the difference between _full_ continuations and _delimited_ continuations: https://stackoverflow.com/questions/29838344/what-exactly-is-a-continuation-prompt

Summary: delimited continuations are the ones you should use. Full continuations are full of complex nonsensical behavior that's not useful in real programs.",,
2.66505E+17,notjack#9941,2020-05-13,"unrelated to continuations, I'm making a thing! https://twitter.com/doitwithalambda/status/1260419874381156352",,üëç (2)
4.56227E+17,Deleted User#0000,2020-05-13,Ooh,,
4.56227E+17,Deleted User#0000,2020-05-13,Neat!,,‚ù§Ô∏è (1)
4.62028E+17,StephenD#5938,2020-05-13,https://pkgs.racket-lang.org/package/rs,,
4.62028E+17,StephenD#5938,2020-05-13,https://github.com/mcdejonge/rs,,
2.17712E+17,gomma#4017,2020-05-13,> Racket is not built for real time computing and I am not a systems programmer so the timing of rs is a bit ... wobbly.,,
2.17712E+17,gomma#4017,2020-05-13,"ouch, i was worried about this",,
4.62028E+17,StephenD#5938,2020-05-13,That‚Äôs why I asked what sound engine you would use?,,
4.62028E+17,StephenD#5938,2020-05-13,I think his package is great!,,
2.17712E+17,gomma#4017,2020-05-13,rsound is the only one right,,
2.17712E+17,gomma#4017,2020-05-13,idk how its timing is,,
2.17712E+17,gomma#4017,2020-05-13,ive experienced this issue with other languages,,
2.17712E+17,gomma#4017,2020-05-13,i don‚Äôt want to use C or C++ but for real audio work it often seems like thats the only choice,,
2.17712E+17,gomma#4017,2020-05-13,"but idk about bindings, maybe theyre safe and provide the same kinds of performance ü§∑‚Äç‚ôÄÔ∏è",,
4.62028E+17,StephenD#5938,2020-05-13,How about a supercollider client,,
4.62028E+17,StephenD#5938,2020-05-13,https://github.com/quakehead/racket-sc?files=1,,
4.62028E+17,StephenD#5938,2020-05-13,https://github.com/quakehead/rsc3,,
2.17712E+17,gomma#4017,2020-05-13,"ye supercollider is fast, it would do the trick",,
2.17712E+17,gomma#4017,2020-05-13,or csound,,
2.17712E+17,gomma#4017,2020-05-13,or anything like that,,
2.17712E+17,gomma#4017,2020-05-13,"well i guess those are the only two stable, fast ones",,
2.17712E+17,gomma#4017,2020-05-13,that i can think of at least,,
2.17712E+17,gomma#4017,2020-05-13,o i forgot supercollider works as a server that communicates through OSC,,
2.17712E+17,gomma#4017,2020-05-13,literally the best way they could have done that,,
2.17712E+17,gomma#4017,2020-05-13,that will definitely be my go to,,
2.66505E+17,notjack#9941,2020-05-13,@gomma try Rust instead of C/C++ if you're making something real-time and Racket is too wobbly,,
2.66505E+17,notjack#9941,2020-05-13,"Rust is basically ""what if c/c++ but actually done well""",,üòÜ (2)
2.17712E+17,gomma#4017,2020-05-13,i did,,
2.17712E+17,gomma#4017,2020-05-13,i didn‚Äôt enjoy it,,
2.66505E+17,notjack#9941,2020-05-13,"oh, don't mind me then",,
2.17712E+17,gomma#4017,2020-05-13,"nah its a great recommendation; i should try it again in the future, but i‚Äôd also love to make racket work as much as i can. racket makes me happy",,üíñ (3)
2.17712E+17,gomma#4017,2020-05-13,"i think supercollider can get me far enough, but any way i‚Äôm just focused on plotting data for now. audio stuff is way down the line",,
5.39603E+17,spacey üåå#7238,2020-05-15,can we have a #resouces channel?,,
5.39603E+17,spacey üåå#7238,2020-05-15,i'd like to add this to it: https://www.cs.uni.edu/~wallingf/teaching/cs3540/,,
4.62028E+17,StephenD#5938,2020-05-15,Added to https://github.com/racket/racket/wiki/Courses-using-Racket,,üëç (1)
4.62028E+17,StephenD#5938,2020-05-15,Please check out https://github.com/racket/racket/wiki,,
4.62028E+17,StephenD#5938,2020-05-15,Can add channel if you still want to?,,
2.14881E+17,Moinate#6061,2020-05-15,Yes. Make it easy to discover.,,
1.93202E+17,rocketnia#4517,2020-05-15,"seems like it'd be nice to have a closed ""resources"" or ""links"" channel right next to #rules just for general orientation",,
5.39603E+17,spacey üåå#7238,2020-05-15,"yea, that's what i was asking about",,
1.93202E+17,rocketnia#4517,2020-05-15,"like pinned messages, but across the whole server",,
5.39603E+17,spacey üåå#7238,2020-05-15,like can we have a #resources channel in this server like there's a #general channel?,,
4.62028E+17,StephenD#5938,2020-05-15,I just made #resources,,ü•∞ (1)
4.62028E+17,StephenD#5938,2020-05-15,Please try it out as I just did it on my phone,,
1.93202E+17,rocketnia#4517,2020-05-15,I don't see it,,
1.93202E+17,rocketnia#4517,2020-05-15,I see it now :),,üòÅ (1)
4.62028E+17,StephenD#5938,2020-05-15,Forgot to sync,,
4.62028E+17,StephenD#5938,2020-05-15,üò≠,,
4.66395E+17,oaktownsam#0815,2020-05-16,"Four lines to make your computer talk (on Windows):
```
#lang racket/base

(require ffi/com)

(define voice
  (com-create-instance ""SAPI.SPVoice""))

(com-invoke voice ""Speak"" ""hello world"")
```",,üëç (1)
4.62028E+17,StephenD#5938,2020-05-16,I wonder what the MacOS and Linux equivalents are,,
4.66395E+17,oaktownsam#0815,2020-05-16,I've done a little research on it.  There is a python tts package that could be cribbed from.  https://github.com/nateshmbhat/pyttsx3/tree/master/pyttsx3/drivers,,üëç (1)
4.66395E+17,oaktownsam#0815,2020-05-16,"Also on Linux is Flite (festival lite) api, which I got about five minutes into ffi and then something came up.",,
4.66395E+17,oaktownsam#0815,2020-05-16,That windows code is from about ten minutes of work.  Mostly Googleing the correct Racket and Windows apis,,
4.62028E+17,StephenD#5938,2020-05-16,nice. The macos looks like it will be NSSpeechSynthesizer,,
4.62028E+17,StephenD#5938,2020-05-16,post https://discordapp.com/channels/571040468092321801/618895179343986688/711268335739863091 on slack/reddit/twitter,,
4.66395E+17,oaktownsam#0815,2020-05-16,posting now,,
4.66395E+17,oaktownsam#0815,2020-05-16,reddit at least üôÇ,,
4.62028E+17,StephenD#5938,2020-05-16,is it wrong to use `(begin ...)` just to indent?,,
4.62028E+17,StephenD#5938,2020-05-16,racket-users too. Can I convince you to post it as a challenge for linux and osx racketeers to do the same in as few lines as possible?,,
4.66395E+17,oaktownsam#0815,2020-05-16,"> is it wrong to use (begin ...) just to indent?
Probably not it has not much other use, and it should not be performance impacting",,üëç (1)
4.66395E+17,oaktownsam#0815,2020-05-19,There are three bit(string|vector) implementations for Racket.,,
2.66505E+17,notjack#9941,2020-05-19,"I know of the bitvector package and the rebellion bitstring one, what's the third?",,
4.66395E+17,oaktownsam#0815,2020-05-20,bitsyntax,,
2.66505E+17,notjack#9941,2020-05-20,"ah, that's tonyg's pattern matching one right?",,
4.66395E+17,oaktownsam#0815,2020-05-20,Yeah,,
4.66395E+17,oaktownsam#0815,2020-05-20,Today I found there is a Racket process that has been running for a very long time on this laptop that is using 100% cpu,,
4.66395E+17,oaktownsam#0815,2020-05-20,üò¶,,
4.62028E+17,StephenD#5938,2020-05-20,I always start a gui processes and forget them behind all the other windows,,
4.66395E+17,oaktownsam#0815,2020-05-20,This was something running `raco setup` (I think) and it got stuck somehow,,
4.38875E+17,default.kramer#3008,2020-05-20,"Is there a Racket package (maybe even a #lang) for editing video clips, like choosing video segments, arranging them, looping them, etc?",,
1.93202E+17,rocketnia#4517,2020-05-20,sounds like you're describing `#lang video`: https://lang.video/,,
4.38875E+17,default.kramer#3008,2020-05-20,"@rocketnia Thanks! That is exactly what I was looking for. For some reason it doesn't come up when searching the main Racket docs site, even though the docs are hosted there.",,
1.93202E+17,rocketnia#4517,2020-05-20,"Yeah, I wonder why that's the case... I looked at the project's info.rkt and I don't see it doing anything on purpose to make it not show up like that. Is this a bug? Is there another configuration somewhere?",,
1.93202E+17,rocketnia#4517,2020-05-20,"there are a few modules I might like to document except that I'm afraid they'll distract people from other things that have the same name, so I might like to use this configuration for myself if it exists üòÑ",,
1.93202E+17,rocketnia#4517,2020-05-20,"(ideally people would still be able to search those docs, perhaps using the ""set context"" feature in the docs search interface)",,
2.66505E+17,notjack#9941,2020-05-21,this file has made me hate quasiquotation with a burning passion https://github.com/racket/scribble/blob/master/scribble-lib/scribble/html-render.rkt,,üòø (1)
1.93202E+17,rocketnia#4517,2020-05-21,(Deleted what I wrote 1.5h ago because I think I let my emotions get the best of me.),,üòÅ (1)
4.62028E+17,StephenD#5938,2020-05-21,I know the feeling.,,üôÇ (1)
1.93202E+17,rocketnia#4517,2020-05-21,"Having collected my thoughts better: I've been hoping to understand that perspective on quasiquotation. I've been keeping an eye out for an example file that would show quasiquotation's strengths, and this file is pretty close to what I would have picked. Jack, if this file makes you feel that way, I'm feeling some despair about finding that common ground anytime soon.

(In my original message, I mentioned something else about the file that I found frustrating. I waa hoping it would demonstrate that I understood the feeling, but I think it would've just been distracting.)",,
4.62028E+17,StephenD#5938,2020-05-21,"I came across this link on quasiquote recently but I haven‚Äôt read it yet 

https://weinholt.se/articles/quasiquote-literal-magic/",,
4.62028E+17,StephenD#5938,2020-05-21,I don't know if it is any good,,
1.93202E+17,rocketnia#4517,2020-05-21,that is a pretty funny spec wording issue,,
4.62028E+17,StephenD#5938,2020-05-21,now I have to read it,,
4.62028E+17,StephenD#5938,2020-05-21,oh it is scheme. lists created with quasiquote are immutable. OK.,,
3.5323E+17,Alex Knauth#4895,2020-05-21,"I'm working on a version of `dict/c` with chaperones, but I'm running into a surprising problem that only comes up because of the `failure-result` optional-argument to `dict-ref`.

When the `failure-result` is used, I don't want the ""value"" contract to apply to that result. But when the failure-result isn't used, and the ""value"" result happens to be exactly equal to the failure-result, I do want the ""value"" contract to apply to it. How do I distinguish those though?

I tried to take inspiration from Carl Eastlund's `dict/c` implemented in `mischief/contract`, but it doesn't use chaperones so it is free to both add an escape continuation, and change the `failure-result` input to always be a new synthesized procedure. That way the new synthesized failure-result procedure can call the escape continuation. If I'm constrained to chaperones, I don't know how to do either of those things.

How can I detect whether the `failure-result` is used-or-not by the dict's implementation of `dict-ref`, while keeping the `failure-result` a chaperone of the original failure-result?

I have also asked on the Racket Users list: https://groups.google.com/d/msg/racket-users/kHQmJh63-mU/8SXYlmZzAAAJ",,
2.66505E+17,notjack#9941,2020-05-21,"@rocketnia I'm not bothered by _all_ quasiquotation in that file. Just stuff like this:
```
`(,@xs ,@ys ,@zs)
```
That's just `(append xs ys zs)` with extra steps.",,
2.66505E+17,notjack#9941,2020-05-21,"I've even found a few cases of this:
```
`(,x)
```
...because apparently `(list x)` wasn't arcane enough.",,
2.66505E+17,notjack#9941,2020-05-21,"I can see the usefulness of stuff like
```
`(script
  ([type ""text/javascript""]
   [src ,script-src]))`
```",,
4.56227E+17,Deleted User#0000,2020-05-21,"``,x`",,ü§¶ (2)
4.66395E+17,oaktownsam#0815,2020-05-21,Some of those I only expect to see in test suites for quasiquotation,,
4.66395E+17,oaktownsam#0815,2020-05-21,The only time I heavily have used quasiquote is in implementing macros in pretty barebones scheme systems.,,
2.66505E+17,notjack#9941,2020-05-21,"I'd mind it less if the template variables were always just variables, not nested expressions. I'd much rather read this:
```scheme
(define script-src
  (... some complex expression ...))
`(script
  ([type ""text/javascript""]
   [src ,script-src]))`
 ```
Than this:
```scheme
`(script
  ([type ""text/javascript""]
   [src ,(... some complex expression ...)]))`
```",,
4.66395E+17,oaktownsam#0815,2020-05-21,I have a similar problem with large nested expressions,,
2.66505E+17,notjack#9941,2020-05-21,"That file also contained instances of this:
```scheme
(cond
  [(let ([x ...]) (and something? x))
   => (lambda (x) body ...)])
```
which should just be:
```scheme
(define x ...)
(cond [something? body ...])
```",,
4.66395E+17,oaktownsam#0815,2020-05-21,!!,,
2.66505E+17,notjack#9941,2020-05-21,I don't think the `=>` form of `cond` clauses is a good idea,,
1.93202E+17,rocketnia#4517,2020-05-21,"There are places I've seen quasiquotation be overused in Racket, but when I looked through that file, I didn't find any overuse.

In particular, you mention things like `` `(,@xs ,@ys ,@zs)`` and `` `(,x)``, but all six occurrences of `` `(,`` in that file are generating code in an s-expression DSL.

It conveys the intent better for refactoring purposes. If someday the s-expression DSL becomes a syntax object DSL for the sake of tracking source locations, then all those places that generate code with `` ` `` can be refactored to use ``#` `` but any places that generate code with `list` or `append` will be harder to track down.

It allows the quoted code to be edited with the same syntax it would have had if it were in a file by itself. If an expression looks like `` `(,@xs ,@ys ,@zs)`` today, that's mostly a coincidence. Yesterday it might have looked like `` `(,@xs #:with (foo) (begin ,@ys) ,@zs)`` and tomorrow it might look like something else. Spotting patterns in the s-expressions and replacing them with `append`, `cons`, or `list*` can be a clever way to abbreviate, but it doesn't last.

In general, manipulating s-expression code as though it's made of cons cells is a subtle type error. When those cons cells become syntax objects, or when the code's lists have little quirky notations in the middle of them, the type error springs out. It's better to build up the code using verbatim parentheses under a quasiquotation than to build it up using cons cell operations.",,üëç (1)
3.5323E+17,Alex Knauth#4895,2020-05-21,"Is it wrong in a procedure chaperone, to call the function I'm supposed to be chaperoning during the chaperone's wrapper-proc? It feels kinda evil to me, but I'm not sure why",,
1.93202E+17,rocketnia#4517,2020-05-21,"That does seem pretty weird, especially if the function gets wrapped multiple times that way (calling it 2^n times) or if the function has side effects that get duplicated.",,
1.93202E+17,rocketnia#4517,2020-05-21,"meanwhile, @notjack, I wrote up an example of something I like about compound unquoted expressions: <https://gist.github.com/rocketnia/ea4eb48897239f9c80bbcc13dd5b2f61> (edited to remove a pretty boring preview)",,
2.66505E+17,notjack#9941,2020-05-22,"@rocketnia I think my hangup here is that I don't want to use quasiquotation _or_ list manipulation functions. I want actual data structures. If I make a typo, I want to find out fast.",,
1.93202E+17,rocketnia#4517,2020-05-22,"In that case, suppose you define individual operations for making various HTML elements so that when you misspell one of their names, you can catch it right away.

That's practically what Scribble is already. This is the backend of that layer, and the dream of being able to use this kind of thing in its own implementation poses a bootstrapping issue.",,
2.66505E+17,notjack#9941,2020-05-22,"It would help if syntax highlighting colored the quoted parts different, like string literals",,
1.93202E+17,rocketnia#4517,2020-05-22,Agreed!,,
1.93202E+17,rocketnia#4517,2020-05-23,,https://cdn.discordapp.com/attachments/618895179343986688/713609190630883348/20200522-quasiquote-indent.png,üëç (2)
1.93202E+17,rocketnia#4517,2020-05-23,"I've been thinking lately that a second dimension of indentation could help with this stuff, so there's a mockup.",,
4.38875E+17,default.kramer#3008,2020-05-23,"I haven't used quasiquote that much, but I would love something similar for quasisyntax. I was wondering if it would be generalizable -- could code in each phase level get highlighted differently? But I don't think this is possible, because I've written macros that expand a single piece of code into two separate phase levels.",,
5.39603E+17,spacey üåå#7238,2020-05-24,we should all have a voice chat sometime! :),,
2.3228E+17,NeroLXIV#2326,2020-05-24,"Hi, anyone here can clarify to me what the executable for the ""regular"" variant of racket is? (see: https://download.racket-lang.org/license.html)",,
4.62028E+17,StephenD#5938,2020-05-24,there is a #voice channel,,
4.62028E+17,StephenD#5938,2020-05-24,`racket`,,
4.62028E+17,StephenD#5938,2020-05-24,specifically `bin/racket`,,
4.62028E+17,StephenD#5938,2020-05-24,or `gracket` if you need gui stuff,,
2.3228E+17,NeroLXIV#2326,2020-05-24,"ok but regarding this sentence: ""Any program written in Racket that does not distribute the ""Regular"" variant racket binary itself is not affected by the license of that binary."" If I build an application and bundle the runtime with raco exe ... is that the binary itself ?",,
2.3228E+17,NeroLXIV#2326,2020-05-24,is my code then lgpl licensed ? this is really confusing sorry,,
4.62028E+17,StephenD#5938,2020-05-24,no racket moved to mit/apache,,
4.62028E+17,StephenD#5938,2020-05-24,and it confuses everyone,,
2.3228E+17,NeroLXIV#2326,2020-05-24,yea but this clause made me insecure here,,
4.62028E+17,StephenD#5938,2020-05-24,but the thing to remember is your code is **your code**,,
4.62028E+17,StephenD#5938,2020-05-24,Where is that sentence? I'll see if it can be removed,,
2.3228E+17,NeroLXIV#2326,2020-05-24,"https://download.racket-lang.org/license.html the sentence is: ""Any program written in Racket that does not distribute the ""Regular"" variant racket binary itself is not affected by the license of that binary."" in  conjunction with ""regular"" version of racket. my guess is this is needed but i did not understand it really",,
5.39603E+17,spacey üåå#7238,2020-05-24,Hey @StephenD ! Sorry about the house,,
5.39603E+17,spacey üåå#7238,2020-05-24,noise*,,
4.62028E+17,StephenD#5938,2020-05-24,what noise?,,
5.39603E+17,spacey üåå#7238,2020-05-24,I muted but I'm hosting a small group at my house,,ü•≥ (1)
5.39603E+17,spacey üåå#7238,2020-05-24,What are you working on?,,
4.62028E+17,StephenD#5938,2020-05-24,can you see my screen?,,
5.39603E+17,spacey üåå#7238,2020-05-24,Nope,,
4.62028E+17,StephenD#5938,2020-05-24,I was wonderign if that was working,,
5.39603E+17,spacey üåå#7238,2020-05-24,I just see two streams of your face,,
4.62028E+17,StephenD#5938,2020-05-24,rofl!,,
5.39603E+17,spacey üåå#7238,2020-05-24,Try showing your entire screen and not just one app :),,
4.62028E+17,StephenD#5938,2020-05-24,sorry about that - my face once is enough. Twice is too much,,
5.39603E+17,spacey üåå#7238,2020-05-24,Hehe no worries,,
5.39603E+17,spacey üåå#7238,2020-05-24,I'll check out what's going on elsewhere,,
4.62028E+17,StephenD#5938,2020-05-24,@NeroLXIV https://docs.racket-lang.org/license/index.html,,
4.62028E+17,StephenD#5938,2020-05-24,@NeroLXIV use CS variant if you are uncomfortable with LGPL,,
4.62028E+17,StephenD#5938,2020-05-24,,https://cdn.discordapp.com/attachments/618895179343986688/714168121354747924/unknown.png,
4.62028E+17,StephenD#5938,2020-05-24,racket has two variants,,
4.62028E+17,StephenD#5938,2020-05-24,"The traditional Racket runtime system includes code distributed under the GNU Lesser General Public License, version 3.

The Racket on Chez Scheme runtime system embeds Chez Scheme, which is distributed under the Apache version 2.0 license.",,
4.62028E+17,StephenD#5938,2020-05-24,the Chez Scheme (CS) variant is newer and faster and has has a cool nanopass compiler,,
6.46114E+17,samth#3420,2020-05-24,"@StephenD @NeroLXIV the ""regular"" racket binary is included in programs created by `raco exe` and `raco distribute` if you use the ""Regular"" variant (as listed on the download page).",,
2.3228E+17,NeroLXIV#2326,2020-05-24,"@StephenD @samth Thanks, good thing I asked. I am still far away from distribution but I will give the chez variant a shot anyways. Heard a lot of good things about it. Thanks for the help! Licensing is complicated üôÇ",,
2.3228E+17,NeroLXIV#2326,2020-05-24,Hm does this new runtime (with chez) have problems with racket gui? Seems like every racket program with gui spams errors to my terminal but does not start (e.g. drracket or a simple gui example i wrote). See: https://pastebin.com/N57znEYc etc... it never stops.,,
4.62028E+17,StephenD#5938,2020-05-24,"> Hm does this new runtime (with chez) have problems with racket gui? Seems like every racket program with gui spams errors to my terminal but does not start (e.g. drracket or a simple gui example i wrote). See: https://pastebin.com/N57znEYc etc... it never stops.
@NeroLXIV  that does not look good",,
4.62028E+17,StephenD#5938,2020-05-24,"What version Racket ?
What OS? Architecture?",,
2.3228E+17,NeroLXIV#2326,2020-05-24,7.7 ubuntu 20.04 64bit,,
4.62028E+17,StephenD#5938,2020-05-24,Do you have a sample program that triggers those errors ?,,
2.3228E+17,NeroLXIV#2326,2020-05-24,just starting drracket triggers it. i also have a small program but i am currently on another machine,,
4.62028E+17,StephenD#5938,2020-05-24,Ok can you log those details on https://github.com/racket/drracket/issues/new and @StephenD so I get a notification:  I‚Äôm on MacOS but I‚Äôll try DrRacket from the command line to see if I can reproduce the issue,,
2.3228E+17,NeroLXIV#2326,2020-05-24,Ok I will create an issue then probably tomorrow.,,
6.46114E+17,samth#3420,2020-05-24,@NeroLXIV I do not see those errors,,
2.3228E+17,NeroLXIV#2326,2020-05-24,Same system/arch?,,
2.3228E+17,NeroLXIV#2326,2020-05-25,I just tried this on a ubuntu 18.04 vm at work and the same result. this is btw not a drracket issue but a gracket one. every start of gracket ends up like this,,
4.62028E+17,StephenD#5938,2020-05-25,Thanks that helps narrow things a little.,,
4.62028E+17,StephenD#5938,2020-05-25,Can I just check you are using 7.7 CS variant from https://download.racket-lang.org ?,,
4.62028E+17,StephenD#5938,2020-05-25,If you have time can you check using a nightly snapshot? https://snapshot.racket-lang.org,,
2.3228E+17,NeroLXIV#2326,2020-05-25,Yes I used the download. link. I will try the snapshot in a few mins.,,
2.3228E+17,NeroLXIV#2326,2020-05-25,Seems like I don't have permission to download the file from the snapshot server: https://www.cs.utah.edu/plt/snapshots/current/installers/racket-7.7.0.6-x86_64-linux-cs-xenial.sh is 403 forbidden for me,,
4.62028E+17,StephenD#5938,2020-05-25,https://www.cs.utah.edu/plt/snapshots/current/installers/racket-7.7.0.6-x86_64-linux-cs-xenial.sh,https://cdn.discordapp.com/attachments/618895179343986688/714436451156099102/unknown.png,
2.3228E+17,NeroLXIV#2326,2020-05-25,maybe it's because of my company vpn.. will try again without it in a sec,,
2.3228E+17,NeroLXIV#2326,2020-05-25,same result with the snapshot,,
2.3228E+17,NeroLXIV#2326,2020-05-25,i will also try this this evening with a new ubuntu 16.04 vm since it seems like racket(cs) was built on this system,,
2.3228E+17,NeroLXIV#2326,2020-05-25,"OK  @StephenD , 1) I installed an ubuntu 16.04 VM and there it works, so seems to be a problem with ""newer"" ubuntu versions (x64). 2) Thanks for updating that license text. It's way more informative now. I just wonder if you use `raco exe` on linux does it not also statically link the runtime?",,
4.62028E+17,StephenD#5938,2020-05-25,https://docs.racket-lang.org/raco/exe.html,,
4.62028E+17,StephenD#5938,2020-05-25,I don‚Äôt use raco exe so I don‚Äôt know.,,
4.62028E+17,StephenD#5938,2020-05-25,It would be good to work out what is causing the errors for newer versions of Ubuntu,,
2.3228E+17,NeroLXIV#2326,2020-05-25,If I can help with something feel free to ask,,
4.62028E+17,StephenD#5938,2020-05-25,The racket slack is much larger - someone there might know. Did you log the issue?,,
2.3228E+17,NeroLXIV#2326,2020-05-25,not yet . in which repo should I report it? I guess drracket was the wrong repo,,
2.3228E+17,NeroLXIV#2326,2020-05-25,oh slack also exists.. i was in the irc channel first üôÇ,,
4.62028E+17,StephenD#5938,2020-05-25,"> not yet . in which repo should I report it? I guess drracket was the wrong repo
@NeroLXIV  good point - probably log against https://github.com/racket/racket/issues/new",,
2.3228E+17,NeroLXIV#2326,2020-05-25,Ok I will file the issue today. I also joined the slack.,,
3.29023E+17,nixin72#3554,2020-05-28,"Man, I've been using Common Lisp a bit lately cause I wanted more performance and I've really been enjoying the interactive development and debugging via Slime... Does Racket have anything similar? It's been a great experience so far",,
2.66505E+17,notjack#9941,2020-05-28,There's `racket-mode` for emacs users.,,
3.29023E+17,nixin72#3554,2020-05-28,"Yea, I use Racket-mode",,
5.39603E+17,spacey üåå#7238,2020-05-28,Racket seems to be closer to Python than Lisp in it's approach to REPLs,,
4.62028E+17,StephenD#5938,2020-05-28,How so?,,
2.66505E+17,notjack#9941,2020-05-28,the way the repl isn't mutable / live,,
3.29023E+17,nixin72#3554,2020-05-28,"Well, consider what happens when you get an error in a racket vs Lisp REPL. When you hit an error, Racket just gives you the error and aborts back to the top level - which is exactly what Python does. Common Lisp lets you substitute values, change the function definition and rewind to before the error, lets you provide an expression to evaluate instead, all sorts of potential options depending on what the error is. Racket also doesn't let you compile individual functions and have them auto-loaded back into the REPL, like Python. Common Lisp I can treat individual functions as compilation units and recompile individual function on the fly.",,
4.62028E+17,StephenD#5938,2020-05-28,is that better or worse?,,
4.62028E+17,StephenD#5938,2020-05-28,(sorry I know that is a loaded question),,
2.66505E+17,notjack#9941,2020-05-28,"It's great for building things that are expensive to restart, like games and websites",,
3.29023E+17,nixin72#3554,2020-05-28,"I mean, I wouldn't say it's either. I'd say Racket just has more of a traditional development cycle, more like Python or JavaScript than Common Lisp",,
2.66505E+17,notjack#9941,2020-05-28,but if starting a fresh repl doesn't take very long than there isn't much benefit relative to the very huge cost of needing to keep track of the repl state,,
4.62028E+17,StephenD#5938,2020-05-28,I'm assuming it takes discipline to get right,,
3.29023E+17,nixin72#3554,2020-05-28,"Yea, keeping track of repl state seems like a pain - what I'm doing is mostly stateless, so the REPL just means a much quicker feedback loop for me",,üëå (1)
2.66505E+17,notjack#9941,2020-05-28,"Yes, and even if you do it has other tradeoffs. Whole module optimization becomes impossible and macros become way less useful (can't reload a macro expanded definition easily)",,
2.66505E+17,notjack#9941,2020-05-28,"(correctly reload, I mean)",,
4.62028E+17,StephenD#5938,2020-05-28,And there are other ways to deal with things that are expensive to restart.,,
4.62028E+17,StephenD#5938,2020-05-28,(though I admit I don't know how quickscript works),,
3.29023E+17,nixin72#3554,2020-05-28,"That's true, but Common lisp (well, SBCL) is really fast anyways, so I'm pretty satisfied with the level of optimization I can do",,
3.29023E+17,nixin72#3554,2020-05-28,"But I know you can also tell SBCL where focus it's optimizations, so you can tell it to trade memory efficiency for speed",,
4.62028E+17,StephenD#5938,2020-05-28,thats nice.,,
4.62028E+17,StephenD#5938,2020-05-28,can always buy more ram.,,
4.62028E+17,StephenD#5938,2020-05-28,(or the customer can :)),,ü§™ (1)
3.29023E+17,nixin72#3554,2020-05-28,"Yea, it seems pretty nice. As a programming language, I much prefer Racket personally, but using CL more the past few weeks I can definitely see the appeal over Racket",,
4.62028E+17,StephenD#5938,2020-05-28,lucky!,,
4.62028E+17,StephenD#5938,2020-05-28,to have choices,,
3.29023E+17,nixin72#3554,2020-05-28,Lots of Racket stuff I've been really missing though... I've got a whole directory filled with small functions I've needed that are part of Racket but I don't want to bring in a whole library for in CL,,
4.62028E+17,StephenD#5938,2020-05-28,I'm looking forward to the speed increases the chez nanopass compiler should bring to racket.,,üíØ (1)
3.29023E+17,nixin72#3554,2020-05-28,Same,,
4.62028E+17,StephenD#5938,2020-05-28,"I seem to remember you could trade compile time for speed, but I might be mis-remembering.",,
3.29023E+17,nixin72#3554,2020-05-28,"Oh nice, you can do that in Rust too. It'll give you a quick compile with fewer optimizations, but you can add a flag to tell it to run a production build",,
4.62028E+17,StephenD#5938,2020-05-28,(I just spent 53 minutes compiling racket),,
3.29023E+17,nixin72#3554,2020-05-28,*oof*,,
3.29023E+17,nixin72#3554,2020-05-28,What are you working on?,,
4.62028E+17,StephenD#5938,2020-05-28,adding an error message overlay to drracket,,
4.62028E+17,StephenD#5938,2020-05-28,if I can get that going I'll move on to making urls in the comments work as links,,‚ù§Ô∏è (1)
3.29023E+17,nixin72#3554,2020-05-28,Ohh nice!,,
4.62028E+17,StephenD#5938,2020-05-28,ü§û wish me luck,,üçÄ (1)
2.66505E+17,notjack#9941,2020-05-28,that would be amazing,,
3.29023E+17,nixin72#3554,2020-05-28,Good luck!,,üòÑ (1)
4.56227E+17,Deleted User#0000,2020-05-29,"> Racket seems to be closer to Python than Lisp in it's approach to REPLs
I believe this is by design. It discourages REPL-based debugging and incremental development in favour of a compile-and-run approach within DrRacket.",,üëç (2)
4.56227E+17,Deleted User#0000,2020-05-29,I remember reading something about it on the Racket Blog but I can't find it now,,üò± (1)
4.56227E+17,Deleted User#0000,2020-05-29,I think it's this one: https://blog.racket-lang.org/2009/03/the-drscheme-repl-isnt-the-one-in-emacs.html,,üëç (5)
3.29023E+17,nixin72#3554,2020-05-29,"Hmm, I feel like it would be useful to have an easy way to check the state of the REPL, like a function that allows you to see all variables currently in the REPL, and then inspect their values",,üëç (2)
3.29023E+17,nixin72#3554,2020-05-29,Cause I can 100% see REPL state getting out of hand in a larger application that make it a little hard to manage,,
4.62028E+17,StephenD#5938,2020-05-29,Might be a nice script or plugin,,
2.66505E+17,notjack#9941,2020-05-29,"there's `debug-repl`, which isn't that but it's a similar idea https://docs.racket-lang.org/debug/index.html?q=debug-repl#%28form._%28%28lib._debug%2Frepl..rkt%29._debug-repl%29%29",,
2.66505E+17,notjack#9941,2020-05-29,"maybe a ""look at state of the repl"" API could use a similar implementation?",,
4.62028E+17,StephenD#5938,2020-05-29,And the stepper,,
2.67464E+17,SlashDevSlashRandom#2112,2020-05-29,"xrepl's 'apropos' might be something vaguely in that neighborhood: <https://docs.racket-lang.org/xrepl/index.html#%28xrepl._apropos%29> I played with it a little bit, but didn't get too deep into exactly what it makes available",,
3.29023E+17,nixin72#3554,2020-06-01,Do anyone happen to have any insights as to why the benchmarks game results show Racket 7.7 as being generally faster than Racket 7.7 CS? https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/racket-racketcs.html,,
4.62028E+17,StephenD#5938,2020-06-01,You could probably look at the last racket cs update on the Racket blog and try work out the corresponding benchmarks.,,
2.66505E+17,notjack#9941,2020-06-01,It might be because they're not compiling the benchmarks first,,
4.66395E+17,oaktownsam#0815,2020-06-01,And now there is another bitvector library :(,,
2.66505E+17,notjack#9941,2020-06-01,@oaktownsam link?,,
4.66395E+17,oaktownsam#0815,2020-06-01,It was in Racket News.  One tick,,
4.66395E+17,oaktownsam#0815,2020-06-01,https://linki.tools/2020/05/announcing-racket-bitvectors-bv.html,,
2.66505E+17,notjack#9941,2020-06-01,"ah, that makes sense",,
2.66505E+17,notjack#9941,2020-06-01,time for a feature matrix comparison with Rebellion bitstrings?,,
2.66505E+17,notjack#9941,2020-06-01,"although if I'm reading these docs right, there's five bitvector libraries: there's one in Rosette",,
4.66395E+17,oaktownsam#0815,2020-06-01,"I'm weighing how much effort I would put into rolling all of the ""features"" of the others into Rebellion.",,
4.66395E+17,oaktownsam#0815,2020-06-01,Yeah probably,,
2.66505E+17,notjack#9941,2020-06-01,lexicographic comparator for bitstrings could be worth adding,,
2.66505E+17,notjack#9941,2020-06-01,wish the `extract` function in that package was named `subbitvector`,,
4.66395E+17,oaktownsam#0815,2020-06-01,"I was doing a Genetic Algorithm so being able to parse the bitstring was valuable, so I chose the TGJ package.",,
2.66505E+17,notjack#9941,2020-06-01,with the pattern matching?,,
4.66395E+17,oaktownsam#0815,2020-06-01,Yeah,,
4.66395E+17,oaktownsam#0815,2020-06-01,It also implemented them as ropes which I liked,,
2.66505E+17,notjack#9941,2020-06-01,for concatenation reasons?,,
4.66395E+17,oaktownsam#0815,2020-06-01,No real reason.  I just think Ropes are cool datastructures.,,
2.66505E+17,notjack#9941,2020-06-01,lol gotcha :p,,
2.66505E+17,notjack#9941,2020-06-01,I've been thinking about what to do with Rebellion's collections,,
2.66505E+17,notjack#9941,2020-06-01,considering using more generics,,plusone (1)
2.66505E+17,notjack#9941,2020-06-01,also possibly mutable versions,,plusone (1)
2.66505E+17,notjack#9941,2020-06-01,get this: I'm considering using generics _for performance reasons_,,
4.66395E+17,oaktownsam#0815,2020-06-01,Ugh.  That reminds me that I need to send a PR to someone about a pretty bad performance effecting contract that I've been sitting on for 18 months üò¶,,üò≠ (2)
4.66395E+17,oaktownsam#0815,2020-06-01,"(I'm saying it ""out loud"" to put more public pressure on myself)",,
2.66505E+17,notjack#9941,2020-06-01,üòÆ details?,,
4.66395E+17,oaktownsam#0815,2020-06-01,It's a contract in CLDR that some values are `json?`.  It effects writing and reading date time values in gregor.,,
4.66395E+17,oaktownsam#0815,2020-06-01,`json?` is not a recursive function and really not a contract check.,,
4.66395E+17,oaktownsam#0815,2020-06-01,"Here are some samples of generating 200,000 random time stamps with a variety of format strings (note non of these format strings actually write out the times.)
```
$ racket generate.rkt 200000 """" ""xx"" ""-"" "":"" ""::""
executing with """"
cpu time: 4380 real time: 4467 gc time: 16

executing with ""xx""
cpu time: 7690 real time: 7801 gc time: 16

executing with ""-""
cpu time: 5838 real time: 6659 gc time: 10

executing with "":""
cpu time: 21636 real time: 22739 gc time: 17

executing with ""::""
cpu time: 39928 real time: 43023 gc time: 22
```",,
4.66395E+17,oaktownsam#0815,2020-06-01,bbiam,,
2.66505E+17,notjack#9941,2020-06-01,oh dear,,
4.66395E+17,oaktownsam#0815,2020-06-01,"Oops actually not true ""xx"" writes the timezone offset",,
4.66395E+17,oaktownsam#0815,2020-06-02,"FYI here is after I've made some improvements:
```
$ racket format-perf.rkt 200000 """" ""xx"" ""-"" "":"" ""::"" 
executing with """"
cpu time: 2148 real time: 2147 gc time: 9

executing with ""xx""
cpu time: 3847 real time: 3846 gc time: 9

executing with ""-""
cpu time: 2417 real time: 2416 gc time: 8

executing with "":""
cpu time: 2210 real time: 2209 gc time: 7

executing with ""::""
cpu time: 2260 real time: 2259 gc time: 7
```",,
1.32971E+17,thornAvery#3077,2020-06-03,"is there a way I can grab the code for any module Im requiring such that I could ""statically link"" my program and compile it from scratch without an internet connection?",,
2.66505E+17,notjack#9941,2020-06-03,"@thornAvery that should be how it works already, you don't need an internet connection for `require` to work (unless you're doing something strange)",,
1.32971E+17,thornAvery#3077,2020-06-03,"I mean like, if I do `(require some-package-not-in-base)` is there a way I can download it to have a local copy rather than requiring `raco pkg install some-package-not-in-base` on a new machine I wanna compile my thing on",,
1.32971E+17,thornAvery#3077,2020-06-03,say as proofing just in case he raco repos are down but I need to compile from scratch,,
2.66505E+17,notjack#9941,2020-06-03,I'm not sure I follow. Are you installing your program on lots of different machines?,,
1.32971E+17,thornAvery#3077,2020-06-03,I have times where I dont have internet connection for a long time so Im trying to proof myself to not rely on the internet to build something,,
2.66505E+17,notjack#9941,2020-06-03,"you need to install each package you use, but only once. After you run `raco pkg install` you have a local copy on your machine. Or do you want a local copy of _every_ package, so you're not screwed if by the time you realize you need package X you're on a plane or something and don't have internet?",,
1.32971E+17,thornAvery#3077,2020-06-03,"Yeah I basically wanna be able to 'raco pkg install' from a local directory, and be able to pre download a package so I have it in a local directory to be able to raco pkg install from",,
9.69528E+16,Majestyxrd#5754,2020-06-03,you can git clone it very likely and then you can install from the local directory,,
2.66505E+17,notjack#9941,2020-06-03,"@Majestyxrd that works for one package, but doing that for the whole catalog one package at a time would probably suck",,
9.69528E+16,Majestyxrd#5754,2020-06-03,then setup?,,
2.66505E+17,notjack#9941,2020-06-03,I think there's a way to do it by stringing together some of the catalog-related commands like `raco pkg catalog-copy` or something,,
9.69528E+16,Majestyxrd#5754,2020-06-04,anybody using arch and racket cs? 5 days ago the racket package in [community] got upgraded to 7.7 but there's no package (neither in aur),,
1.32971E+17,thornAvery#3077,2020-06-04,"I know that things `define`d inside a macro will not be defined at the call site, but are things at the call site able to be `set!` inside a macro?

say I have `(define X 0)` and a macro that turns into `(set! X 5)` or something",,
2.66505E+17,notjack#9941,2020-06-04,"@thornAvery yes, provided you pass the `X` identifier to the macro as an an argument",,
2.66505E+17,notjack#9941,2020-06-04,"(also, in regards to your question about the local package stuff, `raco pkg catalog-archive` does what you want)",,
1.32971E+17,thornAvery#3077,2020-06-04,oooh thank you,,
4.83487E+17,jest#6646,2020-06-04,"@Majestyxrd im using arch and racket yes. i dont think they know about racket cs yet lol, going to have to wait until it gets fully integrated into racket or install racket cs on your own",,
9.69528E+16,Majestyxrd#5754,2020-06-04,yeah there's no cs package in the main repos nor in aur,,
9.69528E+16,Majestyxrd#5754,2020-06-04,so I thought I'd roll my own package but I don't know how just yet,,
4.66395E+17,oaktownsam#0815,2020-06-05,Building Racket from source is not too bad.  Also the Racket binary package for linux installs pretty easily.,,üëå (1)
5.9757E+17,Light Of Heaven#6652,2020-06-08,hey,,
5.9757E+17,Light Of Heaven#6652,2020-06-08,so datum is just a container for code and that datum can be later transformed into syntax and used? D;,,
4.62028E+17,StephenD#5938,2020-06-08,sorry there are not many of us on here at this time. Try slack or racket-user there are more racketeers in both those spaces.,,
4.1228E+17,xgqt#8370,2020-06-08,hello all!,,
4.62028E+17,StephenD#5938,2020-06-08,Welcome to the Racket Discord server!,,
4.62028E+17,StephenD#5938,2020-06-09,WIP by Bogdan Popa: https://docs.racket-lang.org/http-easy/index.html,,
4.62028E+17,StephenD#5938,2020-06-09,and an unrelated thing,,
4.56227E+17,Deleted User#0000,2020-06-09,I'll try to attend.,,
4.62028E+17,StephenD#5938,2020-06-12,"Rack-a-thon? Is there any interest in an online hackathon-like thing in a similar form to the Zurihack ? ( https://zfoh.ch/zurihac2020/  screenshot in thread) ( I‚Äôd like to find a better term as hackathon has a bad reputation as being exclusionary to women and minority groups)  üëç for yes üëé for no,",,"üëç (4),üëé (1)"
4.62028E+17,StephenD#5938,2020-06-12,[ICYMI]RacketCon announcement on racket-users: https://groups.google.com/d/msg/racket-users/jS6UCqvEd7A/CAYe5iZfAgAJ,,
4.56227E+17,Deleted User#0000,2020-06-12,I'm writing a patch for `file(1)` to add Scheme file types and I have a question,,
4.56227E+17,Deleted User#0000,2020-06-12,"If a file begins with `#lang `, should it be treated as `application/x-racket`, `text/x-racket` or `text/x-script.racket`?",,
4.56227E+17,Deleted User#0000,2020-06-12,"I can, of course, add additional constraints like `#lang typed` and `#lang racket`.",,
4.56227E+17,Deleted User#0000,2020-06-12,"How does this look?
```
# Racket #lang directive
0	string	#lang\ 	Racket source code
!:mime	text/x-racket
>6	string	scheme		MzScheme program text
!:mime	text/x-scheme
>6	string	racket		Racket program text
!:mime	text/x-racket
!:ext	rkt
>6	string	typed		Typed Racket program text
!:mime	text/x-racket
!:ext	rkt
>6	string	scribble	Scribble document
!:ext	scrbl
```",,
4.62028E+17,StephenD#5938,2020-06-12,Hi @Deleted User I've posted on racket slack - I don't know the impact but my instinct is `application/x.racket`  if it is unregistered - can you hold off most of the core team are in the us?,,
4.62028E+17,StephenD#5938,2020-06-12,https://tools.ietf.org/html/rfc6838#section-3.3,,
4.56227E+17,Deleted User#0000,2020-06-12,"Sure, I'll be surveying and asking around for a few days before sending the patch.",,
4.62028E+17,StephenD#5938,2020-06-12,np. fwiw the `x-` prefix seems to be deprecated,,
4.56227E+17,Deleted User#0000,2020-06-12,Ah,,
4.56227E+17,Deleted User#0000,2020-06-12,The mimetype is totally optional btw,,
4.56227E+17,Deleted User#0000,2020-06-12,Right now I'm trying to understand the bytecode signature.,,
4.62028E+17,StephenD#5938,2020-06-12,What is a 'bytecode signature'?,,
4.56227E+17,Deleted User#0000,2020-06-12,The magic number of the bytecode files (`.zo`).,,
4.56227E+17,Deleted User#0000,2020-06-12,"I deduced that it begins with `#~` https://docs.racket-lang.org/reference/printing.html?q=reader#%28part._print-compiled%29
Then is followed by a version length byte and the version string (`37.7` on my end).
Then a VM length byte and the VM string (`6racket` on my end).",,
4.56227E+17,Deleted User#0000,2020-06-12,I'm trying to generalise it now.,,
4.62028E+17,StephenD#5938,2020-06-12,should just ask mflatt he developed that  - and I'm pretty sure .zo goes away for racket cs.   he is on slack not reddit though,,
4.56227E+17,Deleted User#0000,2020-06-12,"Hmm yeah, I was also wondering how it'd work for Racket CS.",,
4.56227E+17,Deleted User#0000,2020-06-12,Presumably not like `#~37.711chez-scheme`?,,
4.62028E+17,StephenD#5938,2020-06-12,maybe - might depend on if changes in the racket-cs fork of  Chez get merged back into the main Chez.,,
4.62028E+17,StephenD#5938,2020-06-12,if you cant get onto slack I'm happy to ask on your behalf?,,
4.62028E+17,StephenD#5938,2020-06-12,or you could just log it as a query on https://github.com/racket/racket/issues/new,,
4.56227E+17,Deleted User#0000,2020-06-12,Ah I'll try to get on the Slack.,,
2.50764E+17,4984#4984,2020-06-14,"I have little time for racket anymore üò¢  but thats okay, its only 7 more weeks and then ill be back at it",,
4.56227E+17,Deleted User#0000,2020-06-14,Good luck!,,
4.62028E+17,StephenD#5938,2020-06-17,"[crosspost form racket-users]
It was very nice to see Prof¬†Diomidis Spinellis¬†talk about how his students had good experiences working on open source projects for their coursework.¬†

It made me wonder how the Racket community is performing, and if there are any gaps we* can fill?¬†
Onboarding?
Mentoring?
Pull request Workflows?
Code check bots?
Use of [WIP] tag to allow incremental review of work in progress?
Anything else?
* by ‚Äòwe‚Äô I mean the community of racketeers, not the core team who already do so much.
https://twitter.com/CoolSWEng/status/1273010363198570496?s=20

https://groups.google.com/g/racket-users/c/R-ZhF5jexKc/m/_Vefqh0EBgAJ",,
5.39603E+17,spacey üåå#7238,2020-06-23,,https://cdn.discordapp.com/attachments/618895179343986688/725020688020144219/Screenshot_20200623-112304_Reddit.jpg,
5.39603E+17,spacey üåå#7238,2020-06-23,ü•∞,,
5.39603E+17,spacey üåå#7238,2020-06-23,Linux best boi :),,
5.39603E+17,spacey üåå#7238,2020-06-23,"I'd love to use BSD, but it doesn't have a lot of the packages/software I need. Also battery and gaming wouldn't be good",,
4.62028E+17,StephenD#5938,2020-06-23,üòÄ,,
3.29023E+17,nixin72#3554,2020-06-23,Added my Linux vote üëå I use Linux for everything except games lol,,üëç (3)
4.62028E+17,StephenD#5938,2020-06-23,https://blog.racket-lang.org/2020/06/racket-survey-2020.html,,"üëç (3),meow (3),plusone (2)"
4.62028E+17,StephenD#5938,2020-06-23,official survey!,,
4.62028E+17,StephenD#5938,2020-06-23,The orange site https://news.ycombinator.com/item?id=23620314,,
5.39603E+17,spacey üåå#7238,2020-06-23,hehe orange site,,
9.69528E+16,Majestyxrd#5754,2020-06-24,go vrrrrr,,
2.14881E+17,Moinate#6061,2020-06-24,"[Typed Racket] Is there a way to write unit tests that assert types are correct? E.g., I would like a test that shows that (min 5) does not typecheck but (min 5 7) does. I did see that turnstile has this capability. I also see there is an assert-typecheck-fail which is basically what I wanted, so maybe that's a reasonable way to do it... makes me nervous to touch a big codebase without knowing how to write decent checks.",,
4.66395E+17,oaktownsam#0815,2020-06-24,"That may be a good Slack/mail list/irc question.  I thought SamTH was here, but maybe that was short lived.  He's the primary dev of TR and I know he is in those places.",,
4.66395E+17,oaktownsam#0815,2020-06-24,A difficulty I see is that those checks would probably have to run in some sort of meta-type checking phase.,,
4.66395E+17,oaktownsam#0815,2020-06-24,Or rather they would need to be interleaved at type checking.,,
4.66395E+17,oaktownsam#0815,2020-06-24,A trick that could be done is providing the function under test and require it in an untyped module and then at runtime the contract system would throw an exception.,,
4.66395E+17,oaktownsam#0815,2020-06-24,Not sure 100% sure why you want to test this.  If a typecheck fails the module will fail to compile.,,
2.14881E+17,Moinate#6061,2020-06-24,"Thanks, will try there. Want to check on the principle that you shouldn't change stuff without a test. (The item that needs testing is a change in the TR base-env. Small but being careless isn't a good way to start.)",,
4.66395E+17,oaktownsam#0815,2020-06-24,Ohhhhh,,
4.66395E+17,oaktownsam#0815,2020-06-24,I thought you were testing user level types not base types.  Yeah ask SamTH he will know.,,
2.66505E+17,notjack#9941,2020-06-24,"> Not sure 100% sure why you want to test this.  If a typecheck fails the module will fail to compile.
@oaktownsam For user level types it's handy to test that the API you're designing catches the mistakes that you expect it to at compile time",,
2.66505E+17,notjack#9941,2020-06-24,but I would only bother with that for exceptional cases,,
3.5323E+17,Alex Knauth#4895,2020-06-24,"Like for example if I'm designing a library to typecheck units of measure, I want to make sure that adding two quantities in meters typechecks fine, but adding meters and seconds should fail to typecheck",,
4.66395E+17,oaktownsam#0815,2020-06-24,"True, but I don't think any mainstream types languages can do that.",,
2.66505E+17,notjack#9941,2020-06-24,like if I were designing a units librar- yeah what @Alex Knauth,,
2.66505E+17,notjack#9941,2020-06-24,"@oaktownsam I don't recall seeing it within languages either, but I've seen it lots of times as an extralinguistic thing",,
2.66505E+17,notjack#9941,2020-06-24,like using the build system to check that some code compiles,,
2.66505E+17,notjack#9941,2020-06-24,(or doesn't compile),,
4.66395E+17,oaktownsam#0815,2020-06-24,"Sure, that's kind of what I was thinking of",,
3.5323E+17,Alex Knauth#4895,2020-06-24,"`assert-typecheck-fail`
https://docs.racket-lang.org/ts-reference/Utilities.html#(form._((lib._typed-racket%2Fbase-env%2Fprims..rkt)._assert-typecheck-fail))",,"üéâ (1),plusone (1)"
1.93202E+17,rocketnia#4517,2020-06-25,"That was mentioned already: ""I also see there is an assert-typecheck-fail which is basically what I wanted, so maybe that's a reasonable way to do it...""",,plusone (1)
4.56227E+17,Deleted User#0000,2020-06-25,"You might be interested in how Kawa does it, which has units out of the box.",,
4.56227E+17,Deleted User#0000,2020-06-25,https://www.gnu.org/software/kawa/Quantities.html,,
4.62028E+17,StephenD#5938,2020-06-25,F# too I think,,
4.62028E+17,StephenD#5938,2020-06-25,isn't adding 'units of measure' something you can do with a language that has a dependent type system?,,
4.62028E+17,StephenD#5938,2020-06-25,or is that a refinement type system? I really need to find an 'Introduction to typesystems' mooc course I can do.,,
4.66395E+17,oaktownsam#0815,2020-06-25,You can add unit of measure to any language. What each typing flavor does is change how ergonomic they are to use and how efficient they are at runtime (and probably another thing that I cannot remember right now.),,
4.62028E+17,StephenD#5938,2020-06-25,I‚Äôm now wondering if there are any languages that can do measures to high school physics level. E.g. distance vector (m) / time(S) to give velocity,,
6.46114E+17,samth#3420,2020-06-25,@StephenD see Frink,,
1.93202E+17,rocketnia#4517,2020-06-25,that Kawa documentation suggests it supports the syntax 10m/s,,
4.62028E+17,StephenD#5938,2020-06-25,Thank you @samth Frink looks amazing!,,
4.62028E+17,StephenD#5938,2020-06-26,Merge #deleted-channel and #off-topic ?  üëç üëé,,"üëç (9),üëé (1)"
4.62028E+17,StephenD#5938,2020-06-26,Merge #help and #deleted-channel ?  üëç üëé,,"üëç (9),üëé (1)"
2.14881E+17,Moinate#6061,2020-06-26,"Any tips on where I can find TR doing inferencing about the results? I'm curious about the difference between these two outputs:
```
> (= 0 0)
- : Boolean [more precisely: True]
#t
> (= 1 1)
- : Boolean
#t
```
I know that in `base-env-numeric.rkt` there are inferences about the inputs based on the output of a predicate, but I didn't see figuring out the (sub)type of the result in there. I was expecting to see `(-> Zero Zero True)` or something like that. Any clues?",,
4.62028E+17,StephenD#5938,2020-06-26,Sounds like something to ask the developer @samth - he is mostly on racket slack,,
9.69528E+16,Majestyxrd#5754,2020-06-26,racket slack?,,
2.14881E+17,Moinate#6061,2020-06-27,"yes, I think there's an invite link around here - or google for it",,
4.62028E+17,StephenD#5938,2020-06-27,It‚Äôs on the racket home page racket-Lang.org,,
1.32971E+17,thornAvery#3077,2020-06-28,"digging my toes into typed racket, is there somothing like andmap for generalised functions? wanting to do `(foldr and #t '(some-list-of-bools))`",,
2.14881E+17,Moinate#6061,2020-06-28,@thornAvery  Something like this?  `(andmap (inst identity Boolean) '(#t #t #t))`,,
4.83487E+17,jest#6646,2020-06-28,i didnt know you could run racket on android o-o,,
4.83487E+17,jest#6646,2020-06-28,is there an apk or something?,,
9.69528E+16,Majestyxrd#5754,2020-06-28,waht?,,
9.69528E+16,Majestyxrd#5754,2020-06-28,where did you find out?,,
2.66505E+17,notjack#9941,2020-06-28,@thornAvery how did you end up with a list of bools?,,
1.32971E+17,thornAvery#3077,2020-06-28,`(map (some-predicate?) list-of-things)` or something like that,,
2.66505E+17,notjack#9941,2020-06-28,"instead of doing `(andmap identity (map p xs))`, you can do `(andmap p xs)`",,
2.66505E+17,notjack#9941,2020-06-28,"so instead of turning a list of things into a list of booleans and then figuring out if all the booleans are true, you can skip the intermediate list of booleans",,
6.89495E+17,AZIZ#5433,2020-06-30,hello i need help for exercice on scheme,,
6.89495E+17,AZIZ#5433,2020-06-30,please,,
4.62028E+17,StephenD#5938,2020-06-30,"I‚Äôll try to help
Which scheme are you using ?
A racket teaching language ?",,
6.89495E+17,AZIZ#5433,2020-06-30,yes,,
4.62028E+17,StephenD#5938,2020-06-30,Which teaching language?,,
6.89495E+17,AZIZ#5433,2020-06-30,"An association organized a stage race for its members. It is a question of establishing this
final classification of the race.
The result of a participant in the race is represented by a list of 2 elements, the first of which is a chain
of characters corresponding to the name of the participant, and the second a list of times achieved, expressed in seconds, at the different stages of the race that he has completed. In the rest of this exercise, we call this type of data
result.
Define a result function? which takes any type parameter and returns true if and only
this parameter is of the result type, that is to say that it is indeed a list of 2 elements of which the first is a
string and the second a list of strictly positive integers.",,
6.89495E+17,AZIZ#5433,2020-06-30,"(define (reÃÅsultat? ch L)
(if (string? ch)
    (if (number? L) #t)
#f))

(reÃÅsultat? ""Pierre"" 200)",,
6.89495E+17,AZIZ#5433,2020-06-30,I have make this but i dont know in list,,
6.89495E+17,AZIZ#5433,2020-06-30,make list,,
4.62028E+17,StephenD#5938,2020-06-30,"so a 'result is something like this; `((""Stephen"" (2.34 2.20 2.22) (""AZIZ"" (1.99 1.92 1.90) ...)`",,
4.62028E+17,StephenD#5938,2020-06-30,and you need to define `result?`,,
4.62028E+17,StephenD#5938,2020-06-30,`(define (result? a-result) (if ??? #t #f))` ?,,
4.62028E+17,StephenD#5938,2020-06-30,"Maybe work backwards? 
can you define a predicate for a single positive integer? (or is there one inbuilt?)",,
4.62028E+17,StephenD#5938,2020-06-30,(A function that checks something is called a predicate and traditionally ends with a ‚Äò?‚Äô),,
4.62028E+17,StephenD#5938,2020-06-30,Can you use that to define a function that will check if you have a list of positive integers ?,,
6.89495E+17,AZIZ#5433,2020-06-30,its okay he works now,,üëç (2)
6.89495E+17,AZIZ#5433,2020-06-30,üôÇ,,
4.62028E+17,StephenD#5938,2020-06-30,I‚Äôd say good luck but I don‚Äôt think you need it. Well done !,,
6.89495E+17,AZIZ#5433,2020-06-30,"Define a name function that takes a result as a parameter and returns the name of the participant concerned by this
result. For example, (name '(""Gaspard"" (72 142 27))) returns ""Gaspard"".",,
6.89495E+17,AZIZ#5433,2020-06-30,i have another problem sorry,,
4.62028E+17,StephenD#5938,2020-06-30,‚Äòcar‚Äô or ‚Äòfirst‚Äô ? Inbuilt functions,,
6.89495E+17,AZIZ#5433,2020-06-30,with car,,
6.89495E+17,AZIZ#5433,2020-06-30,non first,,
6.89495E+17,AZIZ#5433,2020-06-30,no first i try since one hours,,
4.62028E+17,StephenD#5938,2020-06-30,https://docs.racket-lang.org/htdp-langs/beginner.html#%28def._htdp-beginner._%28%28lib._lang%2Fhtdp-beginner..rkt%29._first%29%29,,
4.62028E+17,StephenD#5938,2020-06-30,"```scheme
(first x) ‚Üí any/c
  x : cons?
```
Selects the first item of a non-empty list.
>x
(list 2 ""hello"" #true)
>(first x)
2",,
6.89495E+17,AZIZ#5433,2020-06-30,"(define (nom resul)
     (if (null? R) '()
           (car R)))
(nom '(""Gaspard"" (72 142 27)))",,
6.89495E+17,AZIZ#5433,2020-06-30,R is resulat,,
6.89495E+17,AZIZ#5433,2020-06-30,result,,
6.89495E+17,AZIZ#5433,2020-06-30,nom = name,,
4.62028E+17,StephenD#5938,2020-06-30,"```scheme
define (nom resul)
     (if (null? resul) '()
           (first resul)))
(nom '(""Gaspard"" (72 142 27)))
>""Gaspard""
```",,
4.62028E+17,StephenD#5938,2020-06-30,,https://cdn.discordapp.com/attachments/618895179343986688/727525876237074533/unknown.png,
4.62028E+17,StephenD#5938,2020-06-30,(how to format scheme in discord),,
6.89495E+17,AZIZ#5433,2020-06-30,"(define (nom resul)
     (if (null? resul) '()
           (car resul)))
(nom '(""Gaspard"" (72 142 27)))",,
6.89495E+17,AZIZ#5433,2020-06-30,yes he works,,
6.89495E+17,AZIZ#5433,2020-06-30,i try to make another exercices,,
6.89495E+17,AZIZ#5433,2020-06-30,thanks,,
4.62028E+17,StephenD#5938,2020-06-30,"(nom ""Stephen"") also works. Do you need to check (second resul) = list of integers?",,
6.89495E+17,AZIZ#5433,2020-06-30,no,,
6.89495E+17,AZIZ#5433,2020-06-30,"One result is less than another if fewer steps have been completed or if as many steps have been completed
but in a larger cumulative time. It is equivalent if so many steps have been completed at the same time
accumulated. It is superior otherwise.
Define the result <?, result =? and result>? each taking parameters 2
results and returning true if and only if the first result is respectively less, equivalent or greater than
second.",,
6.89495E+17,AZIZ#5433,2020-06-30,I have found this exercicse yesterday but i dont undertand how i start,,
4.62028E+17,StephenD#5938,2020-06-30,"`(result<? '(""Gaspard"" (72 142 27)) '(""Gaspard"" (80 152 27)))`
is it total steps (+ 72 142 27)?",,
6.89495E+17,AZIZ#5433,2020-06-30,oui,,
6.89495E+17,AZIZ#5433,2020-06-30,yes,,
6.89495E+17,AZIZ#5433,2020-06-30,i need three functions,,
6.89495E+17,AZIZ#5433,2020-06-30,"(define (longueur l)
(if (null? l) 0
(+ 1 (longueur (cdr l)))))",,
6.89495E+17,AZIZ#5433,2020-06-30,i have juste this,,
6.89495E+17,AZIZ#5433,2020-06-30,";Question 3.5
(define (longueur l)
; renvoie le nombre d‚Äô√©l√©ments de l
; liste -> entier >= 0
(if (null? l) 0
(+ 1 (longueur (cdr l)))))


(define (resultat=? A B)
(and ((= (longueur A) (longueur B)) (= (tempsCumule A) (tempsCumule B)))))
;Exemple :
(resultat=? '(""Gaspard"" (72 142 27)) '(""Gaspard"" (80 152 27)))

(define (resultat<? A B)
(and ((< (longueur A) (longueur B)) (< (tempsCumule A) (tempsCumule B)))))
;Exemple :
(resultat<? '(""Gaspard"" (72 142 27)) '(""Gaspard"" (80 152 27)))

;Exemple : 
(define (resultat>? A B)
(and ((> (longueur A) (longueur B)) (> (tempsCumule A) (tempsCumule B)))))
(resultat>? '(""Gaspard"" (72 142 27)) '(""Gaspard"" (80 152 27)))",,
6.89495E+17,AZIZ#5433,2020-06-30,?,,
3.29023E+17,nixin72#3554,2020-06-30,"Si tu veu envoyer ton code @AZIZ, peu tu le formatter avec les propre tag sur Discord? Tu peu regarder l'image que @StephenD a envoyer pour voir comment le faire. Mais c'est beacoup plus difficile a lire le code vous avez aulieu de la code en propre format code il a envoyer. 

Il faut simplement mettre des \` autour de votre code, code il a demonstre. 

(pardonez mon Francais, je ne parle pas assez et jamais au sujet de programmation)",,
9.69528E+16,Majestyxrd#5754,2020-07-01,"so i forgot, was racketcon 2020 canceled?",,
4.62028E+17,StephenD#5938,2020-07-01,its going to be virtual,,
4.62028E+17,StephenD#5938,2020-07-01,wait here,,
4.62028E+17,StephenD#5938,2020-07-01,https://groups.google.com/g/racket-users/c/jS6UCqvEd7A/m/CAYe5iZfAgAJ,,
4.62028E+17,StephenD#5938,2020-07-01,that is a notice on racket-users,,
4.62028E+17,StephenD#5938,2020-07-01,"> In October 2020, we'll be holding a virtual RacketCon, rather than an 
> in-person meeting as usual. We hope to get back to normal in 2021. We 
> have not worked out the exact dates and details, but have a few 
> parameters. 
> 
> We're thinking about following PLDI, where the general model is to 
> have pre-recorded talks, which I would help presenters prepare, 
> followed by live Q&A with an MC relaying questions from Slack. We'd 
> hope to have the usual State of Racket presentation from Matthew, 
> which would lead into a town hall Q&A/comment session with members of 
> the Racket team. 
> 
> The main details we need to work out now are exactly which and how 
> many days to run it and in what time slots and in what time zones. I 
> would greatly appreciate any comments you have in response to this 
> form: 
> 
> https://forms.gle/cYNNY9XhmEoUBBe19 
> 
> Thank you! 
> 
> Jay 
> 
> -- 
> Jay McCarthy 
> Associate Professor @ CS @ UMass Lowell 
> http://jeapostrophe.github.io 
> Vincit qui se vincit.",,
4.62028E+17,StephenD#5938,2020-07-01,@Majestyxrd,,racket (2)
4.62028E+17,StephenD#5938,2020-07-01,"**Quickscript¬†Competition:**

**Quickscript¬†is the scripting functionality behind the DrRacket¬†Scripts¬†menu:** https://docs.racket-lang.org/quickscript

For the month of July we will be running a Quickscript¬†competition: Write your own script and win prizes! There will be weekly winners in categories to be determined by the judges and overall awards at the end of the month.¬†

We follow Racket‚Äôs and the ACM‚Äôs¬†Code of Conduct. https://racket-lang.org/friendly.html

**There will be amazing prizes!**

An exclusive badge for your github profile recognising your efforts and¬†contribution to the community.

* Socks/Mugs/Hats/Stickers with the Racket logo - to be announced on Racket Users mailing list/google group.
* Scripts licensed appropriately will be included in a package for installation and universal fame.

**End date: 31-July**

**Getting started**

Getting started for the impatient: https://docs.racket-lang.org/quickscript/#%28part._.Make_your_own_script__.First_simple_example%29

See quickscript-extra for a bunch of useful and example scripts:
[readme] https://github.com/Metaxal/quickscript-extra/blob/master/README.md
 [scripts] https://github.com/Metaxal/quickscript-extra/tree/master/scripts

Help and discussion will be available through the¬†#quickscript-competition¬†slack channel.

Once your script is ready,¬†submit your entry! https://github.com/Quickscript-Competiton/July2020entries/issues/new/choose

Need some¬†ideas to get started? 
https://github.com/Quickscript-Competiton/July2020entries/blob/master/IDEAS.md

https://groups.google.com/g/racket-users/c/FLy7hoLO-Bg/m/-CftPSg9AAAJ",,racket (1)
4.62028E+17,StephenD#5938,2020-07-01,Pinned a message.,,
2.75501E+17,Plane#0324,2020-07-01,"i thought i saw a question on stack overflow about making an alternating case function (""hello"" => ""HeLlO""), but i can't find it now.  i ended up writing several versions for myself, which was kind of fun",,
2.75501E+17,Plane#0324,2020-07-01,my first version was quite long and hard to read.  my current version looks like this:,,
2.75501E+17,Plane#0324,2020-07-01,"```Scheme
#lang racket
(require racket/generator)
(require srfi/13) ; string-map
(require srfi/26) ; cut

(define (string-alternating-caps s)
  (define char-altcase
    (infinite-generator (yield char-upcase)
                        (yield char-downcase)))
  (string-map (cut (char-altcase) <>) s))

(string-alternating-caps ""hello there"")   ; => ""HeLlO ThErE""
(string-alternating-caps ""HELLO THERE"")   ; => ""HeLlO ThErE""
```",,
2.75501E+17,Plane#0324,2020-07-01,so that's me learning to use generators and trying out `cut`.  yay!,,
2.75501E+17,Plane#0324,2020-07-01,it seemed to me like `(cut (char-altcase) <>)` was a little easier to read than `(Œª (c) ((char-altcase) c))`,,
4.56227E+17,Deleted User#0000,2020-07-01,You can use `curry`.,,
2.75501E+17,Plane#0324,2020-07-01,"i tried `(string-map (curry (char-altcase)) s)` but i ended up with `""HELLO THERE""` as output",,
2.66505E+17,notjack#9941,2020-07-01,@Plane personally I like `fancy-app`,,
2.66505E+17,notjack#9941,2020-07-01,"with it, `(string-append _ ""foo"")` is the same as `(lambda (x) (string-append x ""foo""))`",,
2.75501E+17,Plane#0324,2020-07-01,ooh that does sound fancy :D,,
3.5323E+17,Alex Knauth#4895,2020-07-01,"So with `fancy-app`, `((char-altcase) _)` is another way of writing `(cut (char-altcase) <>)`",,
2.75501E+17,Plane#0324,2020-07-01,"i like it, thanks a lot (:",,
2.75501E+17,Plane#0324,2020-07-01,"that was actually my motivation for posting this, i thought someone might suggest something i didn't know about (:",,
4.66395E+17,oaktownsam#0815,2020-07-03,"I think `cut` acts as a delimiter which is usefull in other cases.
```
(cut (+ 3 (* 4 <>))) --> (lambda (x) (+ 3 (* 4 x)))

; fancy-app only does one ""level""
(+ 3 (* 4 _))        --> (+ 3 (lambda (x) (* 4 x)))
```",,
3.5323E+17,Alex Knauth#4895,2020-07-03,"Well, maybe another version of `cut` could be better, but currently `cut` is just as ""one-level"" as fancy-app:
```
> (procedure-arity (cut + 3 (* 4 <>)))
0
> ((cut + 3 (* 4 <>)))
; <>: undefined
```",,
4.66395E+17,oaktownsam#0815,2020-07-03,I guess I remembered incorrectly,,
4.66395E+17,oaktownsam#0815,2020-07-03,darn,,
4.66395E+17,oaktownsam#0815,2020-07-03,`cut` apparently also has `<...>` for a rest var,,
2.75501E+17,Plane#0324,2020-07-03,with `cut` you can do this:,,
2.75501E+17,Plane#0324,2020-07-03,"```scheme
> ((cut <> <>) - 3)
-3
```",,
2.75501E+17,Plane#0324,2020-07-03,but i think fancy-app can't have `_` at the beginning,,
2.75501E+17,Plane#0324,2020-07-03,"```scheme
> ((_ _) - 3)
. _: wildcard not allowed as an expression in: (_ _)
```",,
2.66505E+17,notjack#9941,2020-07-03,I'd call that an unfortunately difficult to fix bug in fancy-app,,
2.66505E+17,notjack#9941,2020-07-03,I don't think I've ever needed rest args with `fancy-app`,,
4.66395E+17,oaktownsam#0815,2020-07-03,I haven't either.  I have needed deeper nesting on occasion,,
2.66505E+17,notjack#9941,2020-07-03,I think with deeper nesting it's worth it to just make a lambda and name the parameter,,
2.66505E+17,notjack#9941,2020-07-03,"especially with the Unicode lambda, it's not like it's all that much longer",,
4.66395E+17,oaktownsam#0815,2020-07-03,"Sry, ASCII for LIFE",,üòÜ (1)
4.66395E+17,oaktownsam#0815,2020-07-03,üòõ,,
4.66395E+17,oaktownsam#0815,2020-07-03,I do tend to agree.  Pointfree style can be tough to read several months later.,,
2.66505E+17,notjack#9941,2020-07-03,I think eta reduction and `fancy-app` is the most point-freedom I can read,,
2.66505E+17,notjack#9941,2020-07-03,"(and composition, provided it's not backwards)",,
4.66395E+17,oaktownsam#0815,2020-07-03,"This is why I can't have nice things.
```
==> test-results-20200703_1616.txt <==
241 success(es) 42 failure(s) 0 error(s) 283 test(s) run
42
42/283 test failures

==> test-results-20200703_1647.txt <==
188 success(es) 95 failure(s) 0 error(s) 283 test(s) run
95
95/283 test failures

==> test-results-20200703_1649.txt <==
186 success(es) 97 failure(s) 0 error(s) 283 test(s) run
97
97/283 test failures

==> test-results-20200703_1653.txt <==
241 success(es) 42 failure(s) 0 error(s) 283 test(s) run
42
42/283 test failures
```",,
4.62028E+17,StephenD#5938,2020-07-06,"Calling package authors and language designers! 
Have you considered a quickscript for your language or package? Quickscript can access any package - there are scripts that post to twitter with `net` or display an interactive graph with `plot` - what could you do with your package?",,
4.62028E+17,StephenD#5938,2020-07-07,https://github.com/Quickscript-Competiton/July2020entries,,
2.14881E+17,Moinate#6061,2020-07-13,I've been looking for a way to contribute to Racket. Sometimes I wonder if there's a time you sit down and actually make decisions? Issue 3104 https://github.com/racket/racket/issues/3104 got me wondering since it seemed like some good research and discussion when in and then ... the resolution as posted online is very hazy.,,
2.66505E+17,notjack#9941,2020-07-13,"@Moinate I think API design decisions have historically not been made with wide participation in racket, so there isn't much of a process for pushing them along",,
2.66505E+17,notjack#9941,2020-07-13,that's something we want to change,,plusone (3)
2.66505E+17,notjack#9941,2020-07-15,"working on enum types! specifically, this: https://github.com/jackfirth/rebellion/issues/431",,üëç (1)
2.66505E+17,notjack#9941,2020-07-15,"progress! this works:
```scheme
;; The enum-id syntax class extracts compile-time info about the
;; enum.
(define-simple-macro (enum-constants enum:enum-id)
  (set enum.constant ...))

(define-enum-type compass-direction (north south east west))

> (enum-constants compass-direction)
(set north south east west)
```",,
2.66505E+17,notjack#9941,2020-07-15,`enum-out` works üòÅ,https://cdn.discordapp.com/attachments/618895179343986688/732916001951187004/unknown.png,
2.66505E+17,notjack#9941,2020-07-15,"and now, bed",,üò¥ (2)
4.56227E+17,Deleted User#0000,2020-07-15,Good night!,,
4.62028E+17,StephenD#5938,2020-07-15,oh no 4am - he's worse than me.,,üòπ (1)
2.66505E+17,notjack#9941,2020-07-15,I just got into things okay üòÖ,,
4.62028E+17,StephenD#5938,2020-07-15,üòÇ,,
4.56227E+17,Deleted User#0000,2020-07-15,I made a silly thing https://erkin.party/blog/200715/evolution/,,plusone (3)
4.62028E+17,StephenD#5938,2020-07-15,Nice!,,
2.66505E+17,notjack#9941,2020-07-15,I love it,,
4.56227E+17,Deleted User#0000,2020-07-15,Feedback and additions welcome btw :meow:,,
2.75501E+17,Plane#0324,2020-07-16,"@Deleted User neat, i saw that on lobsters (:",,
2.75501E+17,Plane#0324,2020-07-16,i like that your rainbow parens are literal rainbows,,
4.56227E+17,Deleted User#0000,2020-07-16,Thanks!,,
4.56227E+17,Deleted User#0000,2020-07-16,It's a simple trick: https://erkin.party/syntax/,,
4.62028E+17,StephenD#5938,2020-07-16,I've just cargo-cult'ed a couple of PR's to add racket to the languages for the icfp2020 competition - I have no idea if they are right so if anyone knows anything about docker I'd appreciate it if they took a look at my PR's!  https://github.com/icfpcontest2020/dockerfiles/issues/63,,
2.66505E+17,notjack#9941,2020-07-16,"Working on a library for converters (objects containing a pair of functions like `string->number` and `number->string`). Anyone else made/used something similar? Example:
```scheme
(define string<->number
  (make-converter string->number number>string))

(convert-forward string<->number ""42"") ;; returns 42
(convert-backward string<->number 5) ;; returns ""5""
```",,
3.94554E+17,daniels#6703,2020-07-18,which book would be a good read after HTDP?,,
3.94554E+17,daniels#6703,2020-07-18,assuming I'm trying to learn functional programming,,
2.5949E+17,Afromullet#9736,2020-07-18,"I'm glad I learned racket. In some roundabout way, it helped me understand convolution. Just started learning DSP, and convolution seemed really confusing until I thought about how I'd model the problem in racket",,
2.5949E+17,Afromullet#9736,2020-07-18,"Or I guess a better way to phrase it, the thinking in terms of functions helped me the most",,
2.66505E+17,notjack#9941,2020-07-18,what's convolution and DSP?,,
4.66395E+17,oaktownsam#0815,2020-07-18,digital signal processing,,
2.66505E+17,notjack#9941,2020-07-18,oh fascinating,,
4.56227E+17,Deleted User#0000,2020-07-19,@daniels SICP maybe?,,
4.62028E+17,StephenD#5938,2020-07-19,PLAI ?,,
4.62028E+17,StephenD#5938,2020-07-19,https://cs.brown.edu/~sk/Publications/Books/ProgLangs/2007-04-26/,,
4.62028E+17,StephenD#5938,2020-07-19,Followed by https://redex.racket-lang.org,,
4.62028E+17,StephenD#5938,2020-07-20,"New week...new racket!
What have you been up to?

I‚Äôve been seeing some great entries in the Quickscript competition and I‚Äôm looking forward to the Standard-fish competition. 

What about you? 
Answer here or discuss on 
 - https://racket.slack.com/ (Sign up at https://racket-slack.herokuapp.com/ ) 
 - `#racket` IRC on freenode.net https://botbot.me/freenode/racket/ 

If you are on Twitter - follow @racketlang 

Don‚Äôt forget to sign up for, and contribute Racket News to Racket News at https://racket-news.com/ AND submit your links to Racket Stories https://racket-stories.com/ 

Kind regards 

Stephen",,
3.5323E+17,Alex Knauth#4895,2020-07-20,"Is there a good way to write a conditional, where the condition is an ""and"" of multiple things including a definition, and I would like the then-body of the conditional to have access to that definition?
This is an instance of the idea in a simple example:
```
(lambda (a)
  (if (and (pair? a) (define c (car a)) (number? c))
      (add1 c)
      #f))
```
A template for a class of examples:
```
(lambda (a)
  (if (and <condition b using a>
           (define c <computation c using a, relying on b being true>)
           <condition d using a and c, relying on b being true>)
      <computation e using a and c, relying on b and d being true>
      <computation f using a, relying on b or d being false>))
```",,
3.5323E+17,Alex Knauth#4895,2020-07-20,"I can think of 6 ways of handling this:
 - Duplicate the code of computation c (condition and then-branch)
 - Duplicate the code of computation f (b-false and d-false)
 - Put computation c into a function, duplicating execution without duplicating code
 - Put computation f into a function, doesn't duplicate execution or code
 - Preserve the value of `c` using mutation
 - Preserve the value of `c` using return results",,
3.5323E+17,Alex Knauth#4895,2020-07-20,"There is another relevant factor, Typed Racket's inference and occurrence typing around this. Typed Racket would not be able to infer the correct types for the functions introduced in the 3rd and 4th strategies without annotations. And I don't know whether Typed Racket's occurrence typing would play well with the 5th strategy... occurrence typing and mutation don't mix very well.",,
2.66505E+17,notjack#9941,2020-07-20,I'd just nest two `cond` expressions,,
2.66505E+17,notjack#9941,2020-07-20,I do think this is something that needs a better solution but that's the best I think can be done without building new features into internal definition contexts,,
3.5323E+17,Alex Knauth#4895,2020-07-20,"The first 2 have the problems associated with duplicating code. The next 3 have problems with Typed Racket. That leaves the 6th and last one, which I suppose I should elaborate on:
```
(lambda (a)
  (let ([c? (and <condition b using a>
                 (define c <computation c using a, relying on b being true>)
                 <condition d using a and c, relying on b being true>
                 (list c))])
    (if c?
        (let ([c (car c?)])
          <computation e using a and c, relying on b and d being true>)
        <computation f using a, relying on b or d being false>)))
```",,
3.5323E+17,Alex Knauth#4895,2020-07-20,"I'm not sure what you mean by ""nest two `cond` expressions"". I have 2 conditionals, an `and` and an `if`. In the initial example the `and` is nested in the condition-position of the outer `if`.
In the 2nd and 4th strategies the `and` is split to make a 2nd `if` in the then-position of the outer `if`. Is that what you meant?",,
3.5323E+17,Alex Knauth#4895,2020-07-20,"I suppose another way to do this would involve continuations, but adding `let/cc` or `let/ec` anywhere would trigger the same type-inference problems as the 3rd and 4th strategies",,
3.5323E+17,Alex Knauth#4895,2020-07-20,"The 5th strategy would be the most natural in an imperative language, something like
```
(lambda (a)
  (declare-uninitialized c)
  (if (and <condition b using a>
           (initialize! c <computation c using a, relying on b being true>)
           <condition d using a and c, relying on b being true>)
      <computation e using a and c, relying on b and d being true>
      <computation f using a, relying on b or d being false>))
```",,
3.5323E+17,Alex Knauth#4895,2020-07-20,"Although for occurrence-typing purposes I would want `c` to be immutable after it's been initialized, like a blank `final` in Java",,
1.93202E+17,rocketnia#4517,2020-07-21,"This is a pretty vexing situation. I usually go with strategy 4, but it always feels like it should be possible without contorting the code so much.",,
2.66505E+17,notjack#9941,2020-07-21,"now that I'm not on mobile and can actually read closely, I see what you mean",,
2.66505E+17,notjack#9941,2020-07-21,"I'd just go with 4, or I'd extract a helper function somehow",,
2.66505E+17,notjack#9941,2020-07-21,if the computation of c isn't effectful I'd probably not worry about duplicating it and extract a helper,,
2.66505E+17,notjack#9941,2020-07-21,"```scheme
(lambda (a)
  (if (pair-with-number? a)
      (add1 (car a))
      #f))

(define (pair-with-number? a)
  (and (pair? a) (number? (car a))))
```",,
2.66505E+17,notjack#9941,2020-07-21,"you could contort patterns like this:
```scheme
(if query-computing-something-reusable
    computation-reusing-that-thing
    other-computation)
```
to instead use an option value, so that `query-computing-something-reusable` returns either `(present reusable-thing)` or `absent` instead of just true or false",,
2.66505E+17,notjack#9941,2020-07-21,"...but I wouldn't do that unless there was a good reason I needed to avoid recomputing the thing, like because it's an expensive thing or an effectful thing",,
2.66505E+17,notjack#9941,2020-07-21,(oh and since it's typed racket you'd need to make your own `present` and `absent` types),,
3.5323E+17,Alex Knauth#4895,2020-07-21,"I think strategy 4 is closer to what macros like `match` and `syntax-parse` do... something like:
```
(lambda (a)
  (define (compute-bcde)
    (if <condition b using a>
        (block
          (define c <computation c using a, relying on b being true>)
          (if <condition d using a and c, relying on b being true>
              <computation e using a and c, relying on b and d being true>
              (compute-f)))
        (compute-f)))
  (define (compute-f)
    <computation f using a, relying on b or d being false>)
  (compute-bcde))
```
This works fine for dynamic typing in normal Racket, but Typed Racket's occurrence typing misses the information of `b` or `d` being false within computation `f`. Typed Racket should be able to see that with strategies 1, 2, or 6, I think (5 only partially).

However, since strategy 4 seems good for normal Racket, is it possible to change 4 to be more friendly with Typed Racket?",,
3.5323E+17,Alex Knauth#4895,2020-07-21,"(re: `present` and `absent`, my strategy 6 used 1-element-list and false)",,
4.38875E+17,default.kramer#3008,2020-07-21,"If `(car a)` cannot be `#f` I would probably write your original example like
```
(lambda (a)
  (define c (and (pair? a) (car a)))
  (if (number? c)
    (add1 c)
    #f)))
```",,
4.38875E+17,default.kramer#3008,2020-07-21,Or use multiple values like,,
4.38875E+17,default.kramer#3008,2020-07-21,"```
(lambda (a)
  (define-values (matched? number)
    (if (pair? a)
        (values (number? (car a)) (car a))
        (values #f #f)))
  ...)
```",,
3.5323E+17,Alex Knauth#4895,2020-07-21,"Oh, thank you. You said it only works if the `(car a)` cannot be false, and that isn't always true... however, the real constraint is the `(number? c)` position can be a `<condition d using a and c, relying on b being true>`. Based on that I think I can adjust your example slightly to account for this better:
```
(lambda (a)
  (define b (pair? a))
  (define c (and b (car a)))
  (if (and b (number? c))
    (add1 c)
    #f)))
```
Or with the template:
```
(lambda (a)
  (define b <condition b using a>)
  (define c (and b <computation c using a, relying on b being true>))
  (if (and b <condition d using a and c, relying on b being true>)
      <computation e using a and c, relying on b and d being true>
      <computation f using a, relying on b or d being false>))
```
This looks much more promising",,
4.38875E+17,default.kramer#3008,2020-07-21,"Yeah, that seems to generalize the best and IMO is more readable. Now I wonder if I ever had a real need to use that multiple-values pattern...",,
3.5323E+17,Alex Knauth#4895,2020-07-21,Although getting Typed Racket to infer the right types might still be hard,,
3.5323E+17,Alex Knauth#4895,2020-07-21,"The type of the variable `c` will be the union of `#f` with the type of the computation c, and I don't know how to get Typed Racket to recognize that within an `(and b _)` or `(if b _ ...)` the type shouldn't have the `#f` added anymore",,
3.5323E+17,Alex Knauth#4895,2020-07-21,I guess the type of `c` would have to be dependent on the value of `b`,,
3.5323E+17,Alex Knauth#4895,2020-07-21,Is it possible to get a condition on `b` to refine the type of `c` to no longer include the extra `U False`?,,
3.5323E+17,Alex Knauth#4895,2020-07-21,"Maybe? This use of `(ann #false (Refine [_ : False] (: b False)))` gives me some hope:
```
(: f (‚àÄ (A B C D E F)
        (-> (-> (U A B D) Boolean : (U B D))
            (-> (U B D) C)
            (-> (U B D) C Boolean : #:+ D #:- (! D))
            (-> D C E)
            (-> (U A B) F)
            (-> (U A B D) (U E F)))))
(define (f condition-b computation-c condition-d computation-e computation-f)
  (lambda (a)
    (define b (condition-b a))
    (define c (if b (computation-c a) (ann #false (Refine [_ : False] (: b False)))))
    (if (and b (condition-d a c))
        (computation-e a c)
        (computation-f a))))
```",,
3.5323E+17,Alex Knauth#4895,2020-07-21,"I have incorporated this pattern into a macro for pattern matching that's meant to use occurrence typing and `typecheck-fail` to do exhaustiveness checking... and while it's working for the simplest cases, typechecking is taking a lot longer on slightly more complex cases. Is there anything in this pattern that's an obvious time-sink for Typed Racket?",,
4.38875E+17,default.kramer#3008,2020-07-22,"Wow, those types are pretty intense! I admit I can't read most of that type signature, so I hesitate to even suggest this, but... would `cast` work? I know it's ideologically impure, but if the runtime cost is minimal, it might be OK?",,
4.38875E+17,default.kramer#3008,2020-07-22,"I guess I was assuming that Refine was the time sink, which was a weird assumption to make.",,
3.5323E+17,Alex Knauth#4895,2020-07-22,"I doubt that ""attaching"" the `Refine` type to `#false` is taking much time for the typechecker, but maybe dealing with the uses of `c` later on, while `c` has a type like `(U C (Refine [_ : False] (: b False)))` which must be reduced to just `C` in contexts where `b` is known to be true? Using the refinement there seems harder than checking the refinement at the initial `ann`.",,
2.66505E+17,notjack#9941,2020-07-22,just did a good thing üéµ  I don't regret this thing at all üéµ,https://cdn.discordapp.com/attachments/618895179343986688/735663541213986876/Screen_Recording_2020-07-22_at_5.56.24_PM.mov,"üî• (2),meow (2)"
4.56227E+17,Deleted User#0000,2020-07-22,omg,,
4.56227E+17,Deleted User#0000,2020-07-22,Source pls,,
2.66505E+17,notjack#9941,2020-07-22,"```scheme
(require pict
         planning/private/animation)

(define tau (* pi 2))

(animation
 #:frame-rate 20
 (for/list ([offset (sequence-append (in-range 0 1/32 1/256)
                                     (in-range 1/32 0 -1/256))])
   (standard-cat
    64 64
    #:happy? #t
    #:left-ear-angle (* tau (+ 5/16 offset))
    #:right-ear-angle (* tau (- 1/16 offset)))))
```",,
2.66505E+17,notjack#9941,2020-07-22,no promises of stability,,
4.56227E+17,Deleted User#0000,2020-07-23,Haha tau,,üòâ (1)
2.66505E+17,notjack#9941,2020-07-23,tau gang represent,,
4.62028E+17,StephenD#5938,2020-07-23,so nice!,,
4.62028E+17,StephenD#5938,2020-07-23,"If you could have a wish granted, what would you like to see next in Racket? https://www.reddit.com/r/Racket/comments/hwe49b/if_you_could_have_a_wish_granted_what_would_you/?utm_source=share&utm_medium=web2x (originally copied from twitter)",,
1.32971E+17,thornAvery#3077,2020-07-24,made a thing using macros! I know its small but its a step haha,,"üéâ (2),plusone (1)"
1.32971E+17,thornAvery#3077,2020-07-24,https://git.lain.church/tA/fizzbuzz,,
4.62028E+17,StephenD#5938,2020-07-24,Hey @Deleted User do you have a licence for your rainbow parens code? https://github.com/Quickscript-Competiton/July2020entries/issues/14,,
4.56227E+17,Deleted User#0000,2020-07-24,I don't have one but I can add a CC-0 indicator on the webpage.,,
4.56227E+17,Deleted User#0000,2020-07-24,Done! Added a comment there also.,,
4.62028E+17,StephenD#5938,2020-07-24,TYVM !,,
4.62028E+17,StephenD#5938,2020-07-24,Mr Robin thanks you,https://cdn.discordapp.com/attachments/618895179343986688/736311299478126662/image0.jpg,
4.56227E+17,Deleted User#0000,2020-07-24,üò∫,,
4.56227E+17,Deleted User#0000,2020-07-24,"No problem, Mr Robin!",,
4.62028E+17,StephenD#5938,2020-07-24,I‚Äôve been thinking of a mascot - rust has crabs,,
4.62028E+17,StephenD#5938,2020-07-24,Maybe a robin or a racoon,,
4.62028E+17,StephenD#5938,2020-07-24,Unofficial,,
4.62028E+17,StephenD#5938,2020-07-24,,"https://cdn.discordapp.com/attachments/618895179343986688/736323326573543545/image0.jpg,https://cdn.discordapp.com/attachments/618895179343986688/736323328570032299/video1.mov",
4.66395E+17,oaktownsam#0815,2020-07-24,+1 racoons,,plusone (1)
4.56227E+17,Deleted User#0000,2020-07-25,Sup bro's,,
4.56227E+17,Deleted User#0000,2020-07-25,Dang this inactive to??? qq,,
4.56227E+17,Deleted User#0000,2020-07-25,It's a small server. Activity comes and goes.,,plusone (2)
2.75501E+17,Plane#0324,2020-07-25,I‚Äôve been enjoying lurking here (:  The people are nice and I‚Äôve learned some stuff,,"üòÇ (1),‚ù§Ô∏è (2)"
2.14881E+17,Moinate#6061,2020-07-25,Ummmm... some of this to #off-topic  ?,,
3.96713E+17,◊ê÷≤◊ë÷¥◊ô#7053,2020-07-25,Relates somewhat to racket so I wouldn‚Äôt say it is for off topic,,
4.62028E+17,StephenD#5938,2020-07-25,Sorry @Moinate I‚Äôll use off topic in future,,
2.66505E+17,notjack#9941,2020-07-25,"I agree #off-topic would have been a better match. But I'd like to say that because it's a small server with low traffic I'm not interested in enforcing channel content very strictly, and channel policing can be used as a tool to silence discussion.",,üëÜ (4)
2.66505E+17,notjack#9941,2020-07-25,(also I myself am an extremely disorganized person who wanders from topic to topic with reckless abandon),,ü§£ (3)
4.89956E+17,WillBAnders#5226,2020-07-25,#relatable,,
4.89956E+17,WillBAnders#5226,2020-07-25,Or perhaps #off-topic now ^^,,
2.14881E+17,Moinate#6061,2020-07-25,"i'm not trying to police, hope nobody feels bad... if i don't see code or engineering i don't read much - maybe i should have, i'll leave it at that.",,
4.62028E+17,StephenD#5938,2020-07-25,Don‚Äôt worry it‚Äôs all good.: üòÜ,,
4.56227E+17,Deleted User#0000,2020-07-26,Emacs users are autobanned!!!!!!!!!!!!!!!!!!!!!!,,üòè (1)
4.56227E+17,Deleted User#0000,2020-07-26,Oops wrong one,,
2.66505E+17,notjack#9941,2020-07-26,"@Moinate It's alright, you were nowhere near policing üôÇ It just seemed like a good time to get my policy written down since it's never come up before in the server. Politely asking if another channel would be better, like you did, is totally fine. I'm worried more about like, members repeatedly harassing others over channel usage or moderators deleting off-channel messages without warning. (I've seen things like that happen in other communities and it created a very unwelcoming environment.)",,
4.62028E+17,StephenD#5938,2020-07-27,https://standard-fish.github.io/racket-summer-picture-competition-2020.github.io/,,
4.62028E+17,StephenD#5938,2020-07-27,"Quickscript¬†Competition Update
We are now in our final days - submit your scripts sooner rather than later! prizes still available.
End date: 31-July",,
4.62028E+17,StephenD#5938,2020-07-27,IntelliJ plugin for Racket: https://plugins.jetbrains.com/plugin/14752-racket - added to the list at https://github.com/racket/racket/wiki/IDE's-and-text-editors,,
4.62028E+17,StephenD#5938,2020-07-28,Have I missed any tools that should be listed for the standard-fish competiton https://github.com/standard-fish/racket-summer-picture-competition-2020/blob/master/TOOLS.md,,
1.32971E+17,thornAvery#3077,2020-07-29,is there a racket library for connecting to xmpp?,,
4.62028E+17,StephenD#5938,2020-07-29,I‚Äôm not aware of one,,
4.62028E+17,StephenD#5938,2020-07-29,https://github.com/tonyg/racket-xmpp,,
4.62028E+17,StephenD#5938,2020-07-29,https://github.com/poi519/nan-xmpp,,
4.62028E+17,StephenD#5938,2020-07-29,Just found,,
4.62028E+17,StephenD#5938,2020-07-29,Never used,,
4.62028E+17,StephenD#5938,2020-07-29,Tonyg does good code,,
1.32971E+17,thornAvery#3077,2020-07-29,oh sweet thanks,,
4.62028E+17,StephenD#5938,2020-07-29,There is also https://gitlab.com/spritely/spritely but I don‚Äôt know if it is relevant,,
1.32971E+17,thornAvery#3077,2020-07-29,"hmm, the tonyg one wont accept an account from my server ;0;",,
4.62028E+17,StephenD#5938,2020-07-29,Can you run it from the command prompt to see any errors?,,
1.32971E+17,thornAvery#3077,2020-07-29,"yeah its saying ""DNS Query: Error from server: Name Error""",,
4.62028E+17,StephenD#5938,2020-07-29,Can you use ip ?,,
1.32971E+17,thornAvery#3077,2020-07-29,same deal,,
4.56227E+17,Deleted User#0000,2020-07-29,It probably needs some maintenance and polish.,,
1.86236E+17,bitmapper#7863,2020-07-30,why is drracket now showing a strange man,,
1.86236E+17,bitmapper#7863,2020-07-30,,https://cdn.discordapp.com/attachments/618895179343986688/738554261486567474/unknown.png,
1.86236E+17,bitmapper#7863,2020-07-30,easter egg,,
4.56227E+17,Deleted User#0000,2020-07-30,That's Eli Barzilay!,,
4.56227E+17,Deleted User#0000,2020-07-30,https://github.com/racket/drracket/blob/master/drracket/drracket/private/eb.rkt,,
4.56227E+17,Deleted User#0000,2020-07-30,https://github.com/racket/gui/blob/master/gui-lib/framework/private/bday.rkt,,
4.56227E+17,Deleted User#0000,2020-07-30,"Decoded:```Scheme
(provide mrf-bday? mf-bday? sk-bday? eb-bday?)

(define ((bday m d))
  (let ([date (seconds->date 
               (let ([ssec (getenv ""PLTDREASTERSECONDS"")])
                 (if ssec
                     (string->number ssec)
                     (current-seconds))))])
    (and (= (date-month date) m) (= (date-day date) d))))

(define eb-bday?  (bday  7 30))
(define mf-bday?  (bday 10 29))
(define mrf-bday? (bday 11  1))
(define sk-bday?  (bday  4  8))```",,
4.62028E+17,StephenD#5938,2020-07-31,"""QuickScript is amazing, btw ‚Äî chapeau !"" - comment from participant in the DrRacket @racketlang Quickscript Competition (unofficial)",,
4.66395E+17,oaktownsam#0815,2020-07-31,Notable contributions from Eli Barzilay: FFI and tinyclos port Swindle,,
2.23427E+17,gour#0888,2020-08-02,morning,,
2.23427E+17,gour#0888,2020-08-02,"i'm considering Racket along with some other statically-compiled languages (e.g. Nim) for writing (multi-platform (desktop) app. Racket's ""built-in"" GUI is great plus, but wonder if the widget set is good-enough for writing ""general"" desktop apps or it is more suited just for DrRacket?",,
2.66505E+17,notjack#9941,2020-08-02,it's generally good. there are complex desktop apps written with it.,,
2.66505E+17,notjack#9941,2020-08-02,ActivityLog is the most well known of them https://github.com/alex-hhh/ActivityLog2,,
2.66505E+17,notjack#9941,2020-08-02,the author also has a blog where he often explains how to do various things with the racket GUI framework https://alex-hhh.github.io/,,
2.23427E+17,gour#0888,2020-08-02,"@notjackI know about that app and commented/asked something on his blog, but never got any reply...",,
2.23427E+17,gour#0888,2020-08-02,any other app besides AL2 which can be inspected?,,
2.66505E+17,notjack#9941,2020-08-02,"he tends to hang out in the Racket Slack, you might have an easier time getting in touch with him there",,
2.23427E+17,gour#0888,2020-08-02,i know only about that one and DrR,,
2.23427E+17,gour#0888,2020-08-02,ok,,
2.66505E+17,notjack#9941,2020-08-02,I don't know of others offhand. The mailing list would be a good place to ask for others.,,
2.23427E+17,gour#0888,2020-08-02,Slack channel is more active?,,
2.66505E+17,notjack#9941,2020-08-02,"Yes, but mainly it just has a different crowd",,
2.66505E+17,notjack#9941,2020-08-02,"more of the Racket core dev team is there, for example",,
2.14881E+17,Moinate#6061,2020-08-02,"The more specific you can be about your app, the more likely u will get a useful response. Eg, you could figure out what GUI library you‚Äôre going to use if not racket‚Äôs so you have a point of comparison. The field of ‚Äúhow do I write a cross platform GUI app‚Äù is huge. And do you even need one? Too many parameters. @gour",,
2.23427E+17,gour#0888,2020-08-02,@Moinate i want something like this: http://saravali.de/screenshots.html,,
2.23427E+17,gour#0888,2020-08-02,"have a need for sqlite3 bindings, then ffi to bind/use 3rd party C-lib, the rest should be libs written in host langauge based on that 3rd party C lib and front-end for gui",,
4.56227E+17,Deleted User#0000,2020-08-02,"What would be the most concise way to write something like
```Scheme
(if foo
  (string-append bar baz foo quux)
  (string-append bar baz))```",,
3.29023E+17,nixin72#3554,2020-08-02,"```scheme
(~a bar baz (if foo (~a foo quux) """"))
```
?",,üòÆ (1)
4.56227E+17,Deleted User#0000,2020-08-02,Oh that works!,,
4.56227E+17,Deleted User#0000,2020-08-02,Thanks,,
4.56227E+17,Deleted User#0000,2020-08-02,Is there a way to easily convert a `hasheq?` to a prefab or am I on a wrong path?,,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-02,what do you mean by prefab?,,
4.56227E+17,Deleted User#0000,2020-08-02,`struct` made with `#:prefab`,,
4.56227E+17,Deleted User#0000,2020-08-02,https://docs.racket-lang.org/guide/define-struct.html#%28part._prefab-struct%29,,
2.14881E+17,Moinate#6061,2020-08-02,"@gour Those controls look fine to use racket/GUI. I don‚Äôt think you‚Äôll find any bad surprises. If you‚Äôre generating those circles yourself ask around about the correct Racket graphics library (pict, maybe?; I always use 2htdp/image but don‚Äôt write GUI apps). Good luck!",,
2.14881E+17,Moinate#6061,2020-08-02,"If you want mobile friendly this probably isn‚Äôt the route, though.",,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-02,"erkin how do you want the ""easy conversion"" to work? is your hash from symbol to value and those symbols are assumed to match up with the struct members?",,
4.56227E+17,Deleted User#0000,2020-08-02,Yup,,
1.47232E+17,poga#5914,2020-08-03,Hi all! is there a way to make racket REPL colorize its output like in DrRacket?,,
2.23427E+17,gour#0888,2020-08-03,"> @gour Those controls look fine to use racket/GUI. I don‚Äôt think you‚Äôll find any bad surprises. If you‚Äôre generating those circles yourself ask around about the correct Racket graphics library (pict, maybe?; I always use 2htdp/image but don‚Äôt write GUI apps). Good luck!
@Moinate Thank you! I don't need circles - only rectangles...üôÇ Will do some evaluation (e.g. ffi) to see how it goes",,
2.23427E+17,gour#0888,2020-08-03,"> If you want mobile friendly this probably isn‚Äôt the route, though.
@Moinate Is there any plan to have Racket on e.g. Android in the future?",,
4.66395E+17,oaktownsam#0815,2020-08-03,"@gour I think you can run Racket(BC) on Android, but it's not easy",,
4.56227E+17,Deleted User#0000,2020-08-03,It's very easy to setup Racket on Termux but you probably want more than that.,,
5.39603E+17,spacey üåå#7238,2020-08-03,"> ```scheme
> (~a bar baz (if foo (~a foo quux) """"))
> ```
> ?
@nixin72 

Mind blown tbh",,
5.39603E+17,spacey üåå#7238,2020-08-03,Didn't expect to be able to do that,,
3.29023E+17,nixin72#3554,2020-08-03,"Lol, I mean it'd be the same thing in just about any language @spacey üåå 
```js
bar + baz + (foo ? (foo + quux) """")
```",,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-04,"another way that's a couple extra characters (because `~a` is such a short name):
```lisp
(apply ~a bar baz (if foo '(foo quux) '()))
```",,
1.93202E+17,rocketnia#4517,2020-08-04,that quotes foo and quux,,
3.5323E+17,Alex Knauth#4895,2020-08-04,"I wish people would stop teaching ""quote"" as a way for making lists",,üíØ (1)
5.39603E+17,spacey üåå#7238,2020-08-04,I never got that far into Racket. How else do you make a list?,,
3.80118E+17,cardiou#5458,2020-08-04,(list 1 2 3),,
5.39603E+17,spacey üåå#7238,2020-08-04,Ah of course,,
3.80118E+17,cardiou#5458,2020-08-04,you could also cons it together for extra points,,
4.62028E+17,StephenD#5938,2020-08-04,I think the difference is quote can be anything- where list has the type list - though I don‚Äôt fully understand when a quoted list becomes a list,,
3.5323E+17,Alex Knauth#4895,2020-08-04,"When people think of ""quote"" as a way of making lists, they often miss that you can't put expressions inside",,üíØ (1)
2.66505E+17,notjack#9941,2020-08-04,"and then you get people wondering why `'(1 2 (+ x 5))` doesn't work, and _then_ they sometimes get the idea that `eval` is the way to fix that",,
2.66505E+17,notjack#9941,2020-08-04,it's a big shiny yellow brick road to hell,,"üò≠ (3),üçâ (1)"
2.66505E+17,notjack#9941,2020-08-04,"also, @Alex Knauth I made traversals!",,
2.66505E+17,notjack#9941,2020-08-04,https://github.com/jackfirth/glass,,üçâ (3)
2.66505E+17,notjack#9941,2020-08-04,üçâ is a good emoji,,üçâ (2)
4.62028E+17,StephenD#5938,2020-08-04,Yes üçâ,,
4.56227E+17,Deleted User#0000,2020-08-04,üçâ :meow:,,üçâ (2)
4.66395E+17,oaktownsam#0815,2020-08-04,Oh no I'm allergic to üçâ though,,
4.66395E+17,oaktownsam#0815,2020-08-04,Also honeydew and cantaloupe,,
4.62028E+17,StephenD#5938,2020-08-04,üçá,,
4.62028E+17,StephenD#5938,2020-08-04,Grapes are good too,,
4.66395E+17,oaktownsam#0815,2020-08-04,üòÑ,,
4.62028E+17,StephenD#5938,2020-08-04,Racket version 7.8 is available. https://blog.racket-lang.org/2020/08/racket-v7-8.html,,üëå (1)
4.62028E+17,StephenD#5938,2020-08-04,Pinned a message.,,
4.56227E+17,Deleted User#0000,2020-08-05,Hmm,,
4.56227E+17,Deleted User#0000,2020-08-05,`(define)` is an error but `(define-values () (values))` is not.,,
4.56227E+17,Deleted User#0000,2020-08-05,"I guess `define` is strictly 1 definition whereas `define-values` is any number of definitions, including zero.",,üëç (1)
2.66505E+17,notjack#9941,2020-08-08,0 days since the last time I got a confusing error message because numbers are sequences,,üòÜ (2)
2.66505E+17,notjack#9941,2020-08-08,traversal composition! üéâ,https://cdn.discordapp.com/attachments/618895179343986688/741608529722343474/O25Q53Q1.png,üôå (1)
2.66505E+17,notjack#9941,2020-08-08,subtraversals!,https://cdn.discordapp.com/attachments/618895179343986688/741619044179771392/unknown.png,
6.59783E+17,Markus#2886,2020-08-08,"I have a general question, is there some sort of resource to learn how to implement functional data structures?",,
6.59783E+17,Markus#2886,2020-08-08,"for instance, I'm working on building a linked list but I can only manage to do it by mutating state",,
6.59783E+17,Markus#2886,2020-08-08,"```scheme
(define (my-cons val)
  (let ([new-node (Node val head)])
    ""Updates the head node to the new node""
    (set! head new-node)
    new-node))
```",,
4.90866E+17,JOST GRANT#1516,2020-08-08,It physically pains me that Racket's OpenGL bindings are in camelCase. I think Common-Lisp's (gl:whatever-syntax) is so much nicer.,,plusone (2)
6.59783E+17,Markus#2886,2020-08-08,most of the library is in shishkabob case isn't it?,,
6.59783E+17,Markus#2886,2020-08-08,I mean the racket library,,
4.90866E+17,JOST GRANT#1516,2020-08-08,"Was looking into again after the 7.8 announcement; Namely ""Racket CS supports an ‚Äúincremental‚Äù garbage-collection mode that can eliminate long GC pauses for some applications, such as animations and interactive games.""",,
4.90866E+17,JOST GRANT#1516,2020-08-08,@Markus Unless I'm looking at the wrong lib; Not that I can tell? https://docs.racket-lang.org/opengl/index.html,,
6.59783E+17,Markus#2886,2020-08-08,oh that's shocking,,
6.59783E+17,Markus#2886,2020-08-08,I wonder why they did it like that,,
6.59783E+17,Markus#2886,2020-08-08,it says it was auto-generated that might have something to do with it,,
4.90866E+17,JOST GRANT#1516,2020-08-08,"Hm, okay, yeah that probably has a LOT to do with it then . Hopefully it's just no-one has just bothered to make it more idiomatic, rather than an explicit design-choice. lol

I wonder what the most high-profile projects even using it are? I remember Pict3D was a thing -- assume that must of been. Maybe some of the old plt-games stuff?",,
4.90866E+17,JOST GRANT#1516,2020-08-08,_is still trying* to dig around for more information on that incremental garbage-collection mode that 7.8 announcement mention. I'd love to try and use Racket  to learn graphics-programming._,,üëç (1)
6.59783E+17,Markus#2886,2020-08-08,I'm trying to use it to learn data structures and algorithms better,,
4.90866E+17,JOST GRANT#1516,2020-08-08,^ Dog knows I need to in-general.,,
6.59783E+17,Markus#2886,2020-08-08,anyone here work through SICP before?,,
2.66505E+17,notjack#9941,2020-08-08,@Markus Purely Functional Data Structures is a very good book on functional data structures,,üëç (1)
4.56227E+17,Deleted User#0000,2020-08-08,"Header translations almost always use the syntactic conventions of the original language. Ideally, those identifiers shouldn't appear in a common program or library, but should be interfaced through a high-level wrapper. @JOST GRANT @Markus",,
4.90866E+17,JOST GRANT#1516,2020-08-08,"About to go to bed; But I mean, that's fair -- but there's no high-level wrappers yet I asusme?",,
4.66395E+17,oaktownsam#0815,2020-08-08,"There are several OpenGL libs.  IIRC the most complete (and maybe most Rackety, I can't remember) is the undocumented one packaged with pict3d.",,
4.66395E+17,oaktownsam#0815,2020-08-08,"There was also a recent mailing list thread that I didn't read, about OpenGL.",,
4.66395E+17,oaktownsam#0815,2020-08-08,https://groups.google.com/forum/#!topic/racket-users/Km4E-g9Aeww,,
4.66395E+17,oaktownsam#0815,2020-08-08,"There is also a mechanized Vulkan binding, but it doesn't do graphics last I checked and I had to do a bit of hackery to get it to run a simple diagnostic on my system",,
4.90866E+17,JOST GRANT#1516,2020-08-09,"_should still be sleeping ... woke up from the CRAZY thunder/lightning outside. lol

Pretty interesting; ; Had no idea that pict3D had their own implementation -- but it makes sense within the scope of the project and the amount I assume one would have to call OpenGL  ... to quickly start to notice how un-idiomatic glDoWhatever is & start to roll your own kebabs. But yeah, I'll ceratinly dig around a bit more. Was planning to look into Fluxus a bit, but have no idea of the implementation details (like how-much it is directly calling GL compared to the engine they are mapping to) nor if it's really relevant to contemporary Racket in-general. :^P_",,
6.59783E+17,Markus#2886,2020-08-09,"Hey everyone, I'm having some problems here with overriding a method for a class in racketgui",,
6.59783E+17,Markus#2886,2020-08-09,"```scheme
(define my-text%
  (class text%
    (super-new)
    (define (after-insert)
      (...))
    (augment after-insert)))
``` I'm probably just not doing it right, but this is giving me an error where it's saying I'm passing two args into after-insert",,
6.59783E+17,Markus#2886,2020-08-09,"basically, I just want to augment the method so I can do other stuff after text is inserted",,
6.59783E+17,Markus#2886,2020-08-09,"Nevermind, there was arguments I wasn't handling üôÇ",,
4.66395E+17,oaktownsam#0815,2020-08-09,You may also like the combined `define` for classes.  So you can do `(define/augment (method args ...) etc)`,,üëç (1)
6.59783E+17,Markus#2886,2020-08-09,yeah I just learned that when I finally got it to work,,
3.29023E+17,nixin72#3554,2020-08-11,"So I'm a TA for a programming languages and paradigms class at my uni and have convinced the prof to let me teach some Racket in addition to the Common Lisp that's in the course, and replace some Prolog with Datalog",,"üéâ (5),üëç (5)"
2.14881E+17,Moinate#6061,2020-08-11,Instead of CL would be an improvement. In addition to CL might be a nightmare.,,
2.14881E+17,Moinate#6061,2020-08-11,Have you thought about what you going to do in Racket?,,
4.62028E+17,StephenD#5938,2020-08-11,Upvotes appreciated https://repl.it/language-requests/p/racket,,
3.29023E+17,nixin72#3554,2020-08-11,"@Moinate - mostly going to use Racket as a stepping stone into datalog to show the class what you can do with macros. I don't plan on teaching them how to actually use them much though. The class covers prolog already, and datalog is the same thing. But I don't plan on using Racket for anything serious, just showing 2 key things:
- lisp is more than just common lisp
- the parenthesis are important because you can rewrite code at compile time and it's dope and they should get excited about it 

It's also a programming languages and paradigms class, so it would be neat to pique the students interest too by getting to mention language oriented programming, which just as a name sounds neat.",,
3.29023E+17,nixin72#3554,2020-08-11,I don't intend on actually digging into Racket too much though so that I can keep it simple,,
2.14881E+17,Moinate#6061,2020-08-11,Nice. You don‚Äôt do macros in CL I take it?,,
3.29023E+17,nixin72#3554,2020-08-11,"Nope, macros aren't explored at all üòî Students aren't even made aware that there's a difference between a form like `cond` and a function like `format` honestly. Most students figure it out, but they never learn that you can define forms like that yourself, most just think they're built into the compiler and that's it",,
5.39603E+17,spacey üåå#7238,2020-08-12,@nixin72 how'd you convince them? give us the deets! :),,
3.29023E+17,nixin72#3554,2020-08-12,"@spacey üåå persistence and wearing him down üòÇ no, but for real it was mostly because they teach common lisp and Prolog, but most students hate them because no job is in Lisp or Prolog, and they feel it's a waste of time. No macros are ever taught in the class, so Lisp is basically just Python but with silly syntax as far as most of them are concerned. But since we're using Prolog and Datalog is the same thing, I'm gonna use Datalog to work through Prolog a bit more, while also using it to basic macros and how you can do language driven development in a language with macros.",,
2.17712E+17,gomma#4017,2020-08-13,hi,,
4.62028E+17,StephenD#5938,2020-08-13,Hi,,
2.17712E+17,gomma#4017,2020-08-13,i think im gonna be coming back to racket,,üéâ (5)
4.62028E+17,StephenD#5938,2020-08-13,Nice to hear! What brings you back?,,
2.17712E+17,gomma#4017,2020-08-13,@StephenD pirated the software Mathematica and was frustrated for weeks having problems only to have someone copy my code verbatim and it worked fine for them. My pirated version was outdated enough for some things to be broken i guess.,,
2.17712E+17,gomma#4017,2020-08-13,@StephenD do you think ill be able to use Gui sliders to affect a Plot in Racket?,,
2.17712E+17,gomma#4017,2020-08-13,thats all i‚Äôd really need,,
2.17712E+17,gomma#4017,2020-08-13,"looking through the Plot docs, i don‚Äôt think i‚Äôll have any problems",,
4.62028E+17,StephenD#5938,2020-08-13,"I‚Äôll admit I‚Äôm not sure - I think it is possible - the package maintainer Alex Hars√°nyi is on slack (but is Australian so is probably asleep rn)

Signup first: https://racket-slack.herokuapp.com/
https://racket.slack.com/ 

He is also on the mailing list if that works better for you https://groups.google.com/forum/#!forum/racket-users/",,
2.17712E+17,gomma#4017,2020-08-13,thank you,,
4.56227E+17,Deleted User#0000,2020-08-13,I know you can do it with `racket/draw` but I haven't used the plot package.,,
2.17712E+17,gomma#4017,2020-08-13,someone on slack said they did in the past without issue,,
2.17712E+17,gomma#4017,2020-08-13,the docs for Plot has sections on gui integration,,
2.17712E+17,gomma#4017,2020-08-13,i should be fine,,
4.62028E+17,StephenD#5938,2020-08-13,üëç,,
4.83487E+17,jest#6646,2020-08-14,how do i convert the char `#\2` to the number 2?,,
4.83487E+17,jest#6646,2020-08-14,`(char->integer #\2)` gives me 50,,
4.66395E+17,oaktownsam#0815,2020-08-14,`char->integer` returns the codepoints for the characters.  The easiest way to take a digit character and get it's numeric value is to subtract the `0` character value,,
4.66395E+17,oaktownsam#0815,2020-08-14,`(- (char->integer #\2) (char->integer #\0)) ==> 2`,,
4.83487E+17,jest#6646,2020-08-14,ahh thanks,,
4.83487E+17,jest#6646,2020-08-14,2htdpimage scene preservers transparency right?,,
4.83487E+17,jest#6646,2020-08-14,is there a version of (empty-scene) in 2htdp image that doesn't create a black outline? i cant seem to find the parameters to disable it,,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-15,"according to the docs, both versions have black outlines",,
4.83487E+17,jest#6646,2020-08-15,"yeah no way to turn it off, found some work arounds",,
4.83487E+17,jest#6646,2020-08-15,do most of you guys use drracket? i find it painfully slow to scroll and work in...,,
2.67464E+17,SlashDevSlashRandom#2112,2020-08-15,"I do currently use DrRacket - there are customizable keyboard shortcuts that can be used for navigation and such, but afaik there's no scroll speed setting",,
2.75501E+17,Plane#0324,2020-08-15,oh hey i never noticed that scroll wheel thing before.  i guess i don't use the scroll wheel,,
3.29023E+17,nixin72#3554,2020-08-16,"Has anyone used the Koyo webserver? I'm looking at it now and it seems very complete, but I wanted to know if anyone's actually used this thing",,
3.29023E+17,nixin72#3554,2020-08-16,I tried starting a server with it using the example application and it throws exceptions right off the bat... That's no good,,üò¨ (1)
3.29023E+17,nixin72#3554,2020-08-16,"Oh wait, there's a bunch of setup stuff I have to do before starting the server - didn't read enough lol",,üëç (1)
4.83487E+17,jest#6646,2020-08-16,do the lot of you guys use typed racket? or just vanilla racket?,,
2.66505E+17,notjack#9941,2020-08-16,I use vanilla but I really miss types,,
4.83487E+17,jest#6646,2020-08-16,does typed racket add to much friction when you're trying to get something done?,,
3.29023E+17,nixin72#3554,2020-08-16,"I tried typed racket a bit but wasn't a fan honestly. I found it more annoying than helpful. But that's generally how I feel about type systems anyways lol. 

Except Rust, for some reason Rust feels much nicer to use than most other statically typed langs.",,
4.66395E+17,oaktownsam#0815,2020-08-16,I use Typed Racket occasionally.  I usually use it as an evolution converting an untyped program to a typed program.,,
3.29023E+17,nixin72#3554,2020-08-16,"God koyo has so much setup to do... You need to have multiple Postgres databases running, need to have it running behind an nginx server even for local development, need to have node and nvm, way more than most web frameworks require for setting a basic application...",,
4.62028E+17,StephenD#5938,2020-08-16,The developer comes from a professional web app dev background an uses it in production - I‚Äôm assuming it is best practice ?,,
2.66505E+17,notjack#9941,2020-08-16,dockerizing the setup or making parts of it use in-memory fakes for local dev might be good improvements,,üëç (2)
3.29023E+17,nixin72#3554,2020-08-16,"Definitely not a ""best practices"" thing, my background is in full stack web development and I've never seen a framework that requires that much setup for its basic pre-generated application. Not even .NET does that and it's got the biggest pre-generated app I've ever seen. Closest is maybe Laravel. For sure dockerizing it would make it much nicer, maybe I'll set that up. Give me a good reason to actually learn docker...",,
1.71965E+17,Prexxla#3553,2020-08-17,"Hey guys I am taking an online cs course, and got this problem",,
1.71965E+17,Prexxla#3553,2020-08-17,"```
; Exercise 4 - Define location
(define (location small big)
  (cond
    ((empty? big) #f)
    ((equal? small (first big)) 1)
    (else (+ 1 (location small (bf big))))
))
```",,
1.71965E+17,Prexxla#3553,2020-08-17,"```
Write a procedure called location that takes two arguments, a word and a sentence. It should return a number indicating where in the sentence that word can be found. If the word isn't in the sentence, return #f. If the word appears more than once, return the location of the first appearance.

-> (location 'me '(you never give me your money))
4
-> (location 'i '(you never give me your money))
#f
-> (location 'the '(the fork and the spoon))
1
```",,
1.71965E+17,Prexxla#3553,2020-08-17,the issue I am facing is that the false case,,
1.71965E+17,Prexxla#3553,2020-08-17,does not work due to the recursion being,,
1.71965E+17,Prexxla#3553,2020-08-17,(+ 1 (+ 1 (+ 1  #f))),,
1.71965E+17,Prexxla#3553,2020-08-17,how can break out of the recursion and return false?,,
1.93202E+17,rocketnia#4517,2020-08-17,How about checking whether the recursive call's result is `#f` or a number before adding 1 to it?,,
1.71965E+17,Prexxla#3553,2020-08-17,so what I do is check work by word,,
1.71965E+17,Prexxla#3553,2020-08-17,sorry I didn't get it,,
2.66505E+17,notjack#9941,2020-08-17,"the part where you have `(+ 1 (location small (bf big)))` - the `(location small (bf big))` expression could be a number or false, so you should only add 1 to it if it's not false",,
4.62028E+17,StephenD#5938,2020-08-17,@nixin72 The developer of Koyo -Bogdan- is on the racket slack - ask him (he is a really nice guy I met him briefly in Berlin).,,
2.14881E+17,Moinate#6061,2020-08-17,"@Prexxla In this case you should be writing simple tests, make sure you have seen your code work when big is empty, big is length 1 and has the word you are looking for, big is length 1 and does not have the word you are looking for, then start on some length 2 cases (find the word in position 1,2,3).",,
2.14881E+17,Moinate#6061,2020-08-17,Actually I am not a fan of this exercise. It doesn't use 0 - could easily use that to indicate word not found.,,
2.14881E+17,Moinate#6061,2020-08-17,@Prexxla The point of the tests is so you think of (+ 1 #f) as the problem instead of thinking about a recursion that goes on and on... usually easier to figure out what to do.,,
2.66505E+17,notjack#9941,2020-08-17,I don't think using 0 to indicate not found is a good idea,,üçâ (3)
2.14881E+17,Moinate#6061,2020-08-17,I hope this isn't one of the earlier recursion exercises.,,
2.14881E+17,Moinate#6061,2020-08-17,"I can understand not wanting to overload a chapter with types of problems, I guess it's fair to ask people to discover it on their own. https://people.eecs.berkeley.edu/~bh/ssch14/recur-patterns.html",,
4.83487E+17,jest#6646,2020-08-18,@Prexxla what cs course are you taking that uses racket?,,
4.83487E+17,jest#6646,2020-08-18,trying to make a racket cli stand alone exe,,
4.83487E+17,jest#6646,2020-08-18,how do i run it in the drracket?,,
4.83487E+17,jest#6646,2020-08-18,how do i pass command line arguments while in drracket?,,
4.83487E+17,jest#6646,2020-08-18,atm just recompiling the exe everytime,,
4.83487E+17,jest#6646,2020-08-18,"holy moly my stand alone executable with --embed-dlls is 34MB. how can I cut this down? I'm pulling in 2htdp/image as a dependency so I assume that is the main reason. either way, how do i cut this down? I don't want other people needing to install racket to use this small cli app (edited). I don't even need the rendering parts of 2htdp/image, just the cropping image and writing to a file",,
2.66505E+17,notjack#9941,2020-08-18,there's a drracket setting somewhere for command line args,,
2.66505E+17,notjack#9941,2020-08-18,I think,,
2.66505E+17,notjack#9941,2020-08-18,"ah yes, it's in Language > Choose Language... > Show Details",,
4.83487E+17,jest#6646,2020-08-18,thanks,,
4.83487E+17,jest#6646,2020-08-18,"strangely it doesnt save... 
Command-line arguments as a vector of strings, in read syntax:
```
#(""test"")
```",,
1.71965E+17,Prexxla#3553,2020-08-18,@jest cs61a berkely,,
1.71965E+17,Prexxla#3553,2020-08-18,https://berkeley-cs61as.github.io/textbook.html,,
4.62028E+17,StephenD#5938,2020-08-19,Thanks @Prexxla I've put the https://berkeley-cs61as.github.io/textbook.html link in #resources,,
4.62028E+17,StephenD#5938,2020-08-19,"I‚Äôve started a small collection!

https://github.com/racket-templates

These are GitHub templates so you use them by clicking ‚Äòuse this template‚Äò on the repo

I‚Äôm looking for more ideas/contributions;
From the top of my head;
- ‚Äòworker service‚Äô (dotnet new has this)
- DrRacket plugin
- Keybinding package
- Teachpack
- raco command
- scribble (multiple)
- pollen (multiple)
- slideshow
- racket embedded in c app

Can you suggest(or submit) any others?

<<Some are obvious and simple if you are already a racketeer but one of the reasons is to give new users another way ins>>",,üëç (2)
4.38875E+17,default.kramer#3008,2020-08-19,"Oh, racket-templates is a good idea! One thing I think would be useful is examples of the various different ways you can structure repositories, collections, and packages. Especially if it could help clarify ""this is how it will appear on pkgs.racket-lang.org and this is how **raco pkg install** will behave."" (I still don't think I totally understand all the nuances.) I've gotten really busy lately but maybe I will take this on in a few weeks.",,
2.75501E+17,Plane#0324,2020-08-19,"i don't know if it's a good idea for a template, but one thing you can do in racket is write code using the ffi, if it makes sense that could be another one for the list",,
2.66505E+17,notjack#9941,2020-08-19,I have a template I use for making packages,,
2.66505E+17,notjack#9941,2020-08-19,https://github.com/jackfirth/racket-package-template,,
3.29023E+17,nixin72#3554,2020-08-20,"@StephenD I made a little raco tool to copy your templates locally for people to try them out. It's literally just a tiny wrapper aroung git that's attached to raco, but it's  in the spirit of having something like `create-react-app`, but for all sorts of Racket templates once you've got more stuff in that org 
https://github.com/nixin72/from-template

Some ideas of other templates that could be included:
- simple webapp
- new #lang
- new language (parsack, nanopass)? 
- database access to set up as template to go in existing projects? 
- package template (what @notjack shared)",,
4.62028E+17,StephenD#5938,2020-08-20,"@nixin72 this is awesome!
It serves two purposes
1. It‚Äôs a raco tool for installing templates - exactly what is needed
2. It is a template for a raco tool!

Can I encourage you to add to the Racket packages repository ?
Thank you so much",,
4.62028E+17,StephenD#5938,2020-08-20,@notjack looks good - I‚Äôve added it!,,
4.62028E+17,StephenD#5938,2020-08-20,@nixin72 @notjack  I‚Äôve added you you both to the organisation,,üëç (2)
3.29023E+17,nixin72#3554,2020-08-20,"@StephenD hahah that's so true, I hadn't even intended for it to be a template itself!",,
4.62028E+17,StephenD#5938,2020-08-20,"@nixin72 
- simple webapp - DONE - racket-stories
- new #lang - added to todo list
- new language (parsack, nanopass)? - added to todo list
- database access to set up as template to go in existing projects?   - added to  todo list
- package template (what @notjack shared) - DONE",,
3.29023E+17,nixin72#3554,2020-08-20,"@StephenD and I've uploaded the `from-template` package to the package repository. 
https://pkgd.racket-lang.org/pkgn/package/from-template",,üëè (1)
4.62028E+17,StephenD#5938,2020-08-20,@nixin72 remember to update the readme.md to link back to https://pkgs.racket-lang.org/package/from-template,,
2.66505E+17,notjack#9941,2020-08-22,"been working on making `rebellion/type` provide static info to macros, and now I can define basic type conversion macros!",https://cdn.discordapp.com/attachments/618895179343986688/746841722822328345/unknown.png,
4.56227E+17,Deleted User#0000,2020-08-22,Nice,,
2.75501E+17,Plane#0324,2020-08-23,@StephenD for a mascot why not a lamb?  for lambda (:,,"üëç (1),üòÜ (1)"
4.56227E+17,Deleted User#0000,2020-08-23,"Wow, that's a good idea.",,
1.30231E+17,sarna#3904,2020-08-23,"hello, I‚Äôm back :)",,üëç (1)
4.62028E+17,StephenD#5938,2020-08-23,"> @StephenD for a mascot why not a lamb?  for lambda (:
@Plane  that is the cutest suggestion so far!",,
1.30231E+17,sarna#3904,2020-08-23,I‚Äôd say it‚Äôs a tie with a raccoon,https://cdn.discordapp.com/attachments/618895179343986688/747154880111706152/image0.jpg,
4.62028E+17,StephenD#5938,2020-08-23,ü•∫,,
4.62028E+17,StephenD#5938,2020-08-23,Very cute raccoon!,,
4.62028E+17,StephenD#5938,2020-08-23,Can anyone draw better? (Paper or pict or metapict or 2htdp/image),https://cdn.discordapp.com/attachments/618895179343986688/747160552559738935/image0.jpg,üòÜ (2)
4.62028E+17,StephenD#5938,2020-08-23,Can anyone draw a Lamb(da)?,,
2.17712E+17,gomma#4017,2020-08-23,Racket Raccon Lamb-da,,
4.66395E+17,oaktownsam#0815,2020-08-23,Lamb(da),https://cdn.discordapp.com/attachments/618895179343986688/747165088238010448/IMG_20200823_114636.jpg,üçâ (2)
3.96713E+17,◊ê÷≤◊ë÷¥◊ô#7053,2020-08-23,ok this is my fav so far,,
1.30231E+17,sarna#3904,2020-08-23,for gerbil they put it in animal‚Äôs eyes,,
1.30231E+17,sarna#3904,2020-08-23,,https://cdn.discordapp.com/attachments/618895179343986688/747180920402084020/image0.png,
4.62028E+17,StephenD#5938,2020-08-23,That looks creepy.,,
1.30231E+17,sarna#3904,2020-08-23,:meow:,,
4.62028E+17,StephenD#5938,2020-08-23,Like goat eyes,,
1.30231E+17,sarna#3904,2020-08-23,sheep have these eyes too,https://cdn.discordapp.com/attachments/618895179343986688/747181727629180989/image0.jpg,
1.30231E+17,sarna#3904,2020-08-23,"I‚Äôd be a hardcore lobbyist for raccoon, but Raku programmers use ‚Äúraccoon‚Äù to describe themselves already üòî",,
4.62028E+17,StephenD#5938,2020-08-23,https://en.wikipedia.org/wiki/Raku_(programming_language)#/media/File:Camelia.svg,,
4.62028E+17,StephenD#5938,2020-08-23,Racket programmers are 'Racketeers',,
4.62028E+17,StephenD#5938,2020-08-23,Sheep and goat eyes <<shudder>>,,
4.62028E+17,StephenD#5938,2020-08-23,Raku(aka perl 6) 'Spokes bug': Butterfly called Camelia: call themselves raccoons.,https://cdn.discordapp.com/attachments/618895179343986688/747203524701454416/unknown.png,
4.62028E+17,StephenD#5938,2020-08-23,also raccoons are known as washbears!,,
4.62028E+17,StephenD#5938,2020-08-23,lambs are cute though,,
4.56227E+17,Deleted User#0000,2020-08-23,Raccoon is also the Minix mascot.,,
4.62028E+17,StephenD#5938,2020-08-23,Yeah but no one uses it,,
4.62028E+17,StephenD#5938,2020-08-23,Apart from Intel,,
4.62028E+17,StephenD#5938,2020-08-23,And intel don‚Äôt seem like they are big on mascots,,
4.56227E+17,Deleted User#0000,2020-08-23,Hahah,,
1.30231E+17,sarna#3904,2020-08-24,"@StephenD yeah, their mascot is a butterfly, but I heard about this racoon thingy on their IRC ü§î searched their subreddit, no results - so maybe it's free after all üëÄ",,
1.30231E+17,sarna#3904,2020-08-24,oh okay it's spelled differently,,
1.30231E+17,sarna#3904,2020-08-24,https://rakudoweekly.blog/2020/06/08/2020-23-500-rakoons/,,
4.62028E+17,StephenD#5938,2020-08-24,We could share.,,
4.62028E+17,StephenD#5938,2020-08-24,And spell it correctly,,
4.62028E+17,StephenD#5938,2020-08-24,None of this is serious,,
4.62028E+17,StephenD#5938,2020-08-24,It‚Äôs all just fun,,
1.30231E+17,sarna#3904,2020-08-24,true :),,
9.69528E+16,Majestyxrd#5754,2020-08-26,what do you mean it's not serious,,
4.62028E+17,StephenD#5938,2020-08-26,An unofficial mascot is not a serious question - it was just a bit of weekend fun.,,
4.56227E+17,Deleted User#0000,2020-08-26,I'm devastated that `racket/gui` doesn't expose all available X.org cursors: https://tronche.com/gui/x/xlib/appendix/b/,,ü•∫ (1)
4.62028E+17,StephenD#5938,2020-08-26,Wow,,
4.62028E+17,StephenD#5938,2020-08-26,That‚Äôs a lot of cursors,,
4.62028E+17,StephenD#5938,2020-08-26,"I want to know what the XC_umbrella cursor is for? Ditto for boat, sailboat & spraycan?",,
4.56227E+17,Deleted User#0000,2020-08-26,I know xteddy uses the heart one.,,
4.62028E+17,StephenD#5938,2020-08-26,Now I have to look up xteddy,,
4.56227E+17,Deleted User#0000,2020-08-26,https://weber.itn.liu.se/~stegu/xteddy/,,
4.56227E+17,Deleted User#0000,2020-08-26,I use it all the time.,,
4.56227E+17,Deleted User#0000,2020-08-26,It keeps me company.,,ü•∞ (1)
6.43137E+17,Anything#4621,2020-08-27,"Good evening.  If I'd like to disable TLS 1.0, TLS 1.1 and SSL 3.0 in the Racket Web Server, is that possible?  (Cross-posting to slack.racket.general.)",,
2.36947E+17,jeapostrophe#4261,2020-08-27,"@Anything There's no option right now, but you'd need to change line 74 of `web-server/web-server.rkt` and pass a different `#:protocol` option as documented in the docs for `ssl-make-server-context`. We could adjust everything back from there (like `serve/servlet` to take a custom server context) and then it would be easier to do stuff like this.",,
6.43137E+17,Anything#4621,2020-08-27,"Thanks, @jeapostrophe.  That gives me enough information to know what to do now.  By the way, in the [documentation](https://docs.racket-lang.org/openssl/index.html#%28def._%28%28lib._openssl%2Fmain..rkt%29._ports-~3essl-ports%29%29), although we can see `protocol` available, it's missing in the procedure's signature.",,
2.36947E+17,jeapostrophe#4261,2020-08-27,"It just has a different name, `#:encrypt`. I don't know why üò¶",,
2.36947E+17,jeapostrophe#4261,2020-08-27,"If you submit a PR to add the web-server, btw, I'll approve it",,
6.43137E+17,Anything#4621,2020-08-27,"Oh, I missed ""encrypt"" too. üôÇ  Alright.  I'll do that. Should help me to learn a minimum about the Racket's source code.  By PR I understand ""pull request"".",,
2.36947E+17,jeapostrophe#4261,2020-08-27,Yup üôÇ,,üëç (1)
4.62028E+17,StephenD#5938,2020-08-28,Welcome @jeapostrophe ! Lovely to have you here!,,
2.36947E+17,jeapostrophe#4261,2020-08-28,"I've been here for a loooooong time, but I never open it :/",,
4.62028E+17,StephenD#5938,2020-08-28,Welcome anyway üòÜ,,
4.62028E+17,StephenD#5938,2020-08-31,"Is anyone able to help fix my bad svg? https://github.com/simple-icons/simple-icons/pull/3483

It is to allow a racket logo badge on GitHub readme files with https://shields.io badges.  (I can't do SVG right now - old laptop no disk space)",,
3.2388E+17,kesava#6957,2020-08-31,"I am trying to port  a scheme macro to racket macros for `define-record`. I have the intended usage, and both the scheme and racket versions posted here on the gist page: https://gist.github.com/kesava/3d4f1cdee2184b7a858eda5e275a6947  I see an error on line 33 of the racket version - `format-id: unbound identifier in: format-id`. How do I fix the error? What am I getting wrong?",,
2.66505E+17,notjack#9941,2020-08-31,(answered in #help),,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,Hello.,,
2.66505E+17,notjack#9941,2020-09-01,welcome!,,
2.75501E+17,Plane#0324,2020-09-01,Welcome (:,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,How many programming languages would you consider yourselves fluent/proficient in?,,
2.66505E+17,notjack#9941,2020-09-01,a dozen or two maybe? hard to say,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,jeez,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,I'm trying to settle on 3 - 5 and I can't decide. But I do know that less would be better.,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,I'll be trying to evaluate Racket under that pretense.,,
2.66505E+17,notjack#9941,2020-09-01,"I think after you learn a few it becomes much easier to learn new ones, they have a lot of overlap",,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,"True, they do.",,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,I'm really looking for a language to handle my text processing and/or rapid prototyping that can scale up,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,I already know JavaScript and Rust might be the next thing I have to learn because people stan it super hard,,
2.66505E+17,notjack#9941,2020-09-01,rust is pretty great,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,That's what I hear,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,But the syntax makes me sad,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,"The examples always make sense but the more complex you get, the more my brain refuses to read it",,
1.93202E+17,rocketnia#4517,2020-09-01,"I love the Kisaragi Gentarou avatar. Oh my gosh, it animates too. XD",,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,:tksSell:,,
1.93202E+17,rocketnia#4517,2020-09-01,"hmm, I wonder if there's a good stepping stone on the way to Rust",,
1.93202E+17,rocketnia#4517,2020-09-01,I would think Rust would be one of the best to learn these days in terms of community and being pretty cutting-edge,,
2.66505E+17,notjack#9941,2020-09-01,rust has a lovely community,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,"So, Racket. What do y'all use it for?",,
2.66505E+17,notjack#9941,2020-09-01,I mostly use it for fun,,
2.66505E+17,notjack#9941,2020-09-01,since for work I write java,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,Ah.,,
4.62028E+17,StephenD#5938,2020-09-01,It‚Äôs a free education for me üòÄ,,
2.66505E+17,notjack#9941,2020-09-01,I used it for some neat AI stuff earlier this year,,
2.66505E+17,notjack#9941,2020-09-01,http://docs.racket-lang.org/planning,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,"Oh, neat.",,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,"See, this is the weird part about Lisps and Scheme. Everyone has these crazy cool projects and applications implemented in their flavor of choice but I can't seem to find a definitive example of a throwaway script or something that parses a CSV to make a report.",,
2.66505E+17,notjack#9941,2020-09-01,"ah yes, the Lisp Curse",,
4.66395E+17,oaktownsam#0815,2020-09-01,I use it for that boring stuff.  Like process a bunch of data over some HTTP API.  SSH to a bunch of hosts and do a thing.,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,"Oh, cool. Any nuances or caveats? Why Racket over X?",,
2.66505E+17,notjack#9941,2020-09-01,"(and as a result, @oaktownsam has been an excellent use case tester for me üòõ)",,
4.66395E+17,oaktownsam#0815,2020-09-01,Lately I've chosen Racket over Python because the thread and event abstraction is much better.,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,Nice.,,
4.66395E+17,oaktownsam#0815,2020-09-01,"Although python has newer async stuff which I guess is supposed to be like Rust and JS, but it seems very clunky.",,
2.66505E+17,notjack#9941,2020-09-01,this would explain your interest in that fiberweb project idea I had,,
4.66395E+17,oaktownsam#0815,2020-09-01,I think Reppy came up with a good way of dealing with concurrency and I wish everyone would just implement it üôÇ,,üëç (1)
7.38552E+16,RaycatWhoDat#0001,2020-09-01,How's the FFI for Racket?,,
4.62028E+17,StephenD#5938,2020-09-01,Reppy?,,
2.66505E+17,notjack#9941,2020-09-01,I also don't know what reppy is and would like to,,
4.66395E+17,oaktownsam#0815,2020-09-01,John Reppy,,
4.66395E+17,oaktownsam#0815,2020-09-01,https://people.cs.uchicago.edu/~jhr/,,
4.66395E+17,oaktownsam#0815,2020-09-01,FFI for Racket is good.,,
2.66505E+17,notjack#9941,2020-09-01,he worked on manticore _and_ CML??,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,"oh, hey, UChicago",,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,Have y'all played around with TXR?,,
1.93202E+17,rocketnia#4517,2020-09-01,first time I've heard of it!,,
7.38552E+16,RaycatWhoDat#0001,2020-09-01,There are a lot of interesting concepts in there,,
1.30231E+17,sarna#3904,2020-09-02,"@oaktownsam ocaml got multicore now, I wonder how similar it is to CML now üëÄ",,
4.66395E+17,oaktownsam#0815,2020-09-02,"Apparently Ocaml has had CML for year, no one uses it though? https://discuss.ocaml.org/t/concurrency-in-ocaml-it-seems-like-the-cml-style-never-took-off-for-anybody/3819",,
2.75501E+17,Plane#0324,2020-09-02,"I do just honestly find programming in Racket to be pretty fun, so I end up doing lots of little things for myself in it",,üëç (2)
2.75501E+17,Plane#0324,2020-09-02,Lately part of the fun for me has been writing things in either Racket or Haskell and then translating to the other,,üëç (2)
4.66395E+17,oaktownsam#0815,2020-09-03,"ü¶úüòº ü¶úüòº ü¶úüòº ü¶úüòº ü¶úüòº ü¶ú 
  üéâ https://con.racket-lang.org/ üéâ
ü¶úüòº ü¶úüòº ü¶úüòº ü¶úüòº ü¶úüòº ü¶ú",,üôå (5)
2.66505E+17,notjack#9941,2020-09-03,oh wow I totally forgot to attempt to submit a talk for this year!,,
2.17712E+17,gomma#4017,2020-09-03,ooh exciting. hope i dont forget to join,,
1.71965E+17,Prexxla#3553,2020-09-05,"Hey guys, is there a darkmode option for drRacket?",,
4.56227E+17,Deleted User#0000,2020-09-05,"Yeah, there are colour scheme options in settings.",,
4.56227E+17,Deleted User#0000,2020-09-05,You can make your own colour scheme as well.,,
2.66505E+17,notjack#9941,2020-09-05,it also goes off the OS,,
2.66505E+17,notjack#9941,2020-09-05,"if you set your OS to dark mode, drracket will pick that up and change accordingly",,
3.80947E+17,parlortricks#7425,2020-09-05,"pretty pleased with myself. just learning racket, finished advent of code 2019 day 1, yay",,üíØ (3)
1.30231E+17,sarna#3904,2020-09-05,neato! two stars?,,
3.80947E+17,parlortricks#7425,2020-09-05,"1 star, jumped the gun there. day 1 part 1 done, part 2 up next. still a win",,üëç (2)
1.30231E+17,sarna#3904,2020-09-05,"yeah, good luck with part two :)",,
3.29023E+17,nixin72#3554,2020-09-05,"Let's say I have a set of facts in Prolog pertaining to students and teaches for courses. In the repl for Prolog I can do something like 
```prolog
teaches(professor, Course), studies(Student, Course).
```
And it'll return every student being taught by `professor` in all their courses. I'm playing around with Datalog in Racket, and I can't seem to be able to do this at the repl. I can define a rules
```prolog
teaches_student(A, B) :- teaches(A, Course), studies(B, Course).
```
And then call that rule, but I can't just run a query that has multiple terms to it. Does anyone know how I can do this in Racket's datalog?",,
3.29023E+17,nixin72#3554,2020-09-05,Currently I get this:,https://cdn.discordapp.com/attachments/618895179343986688/751912900347691179/unknown.png,
3.29023E+17,nixin72#3554,2020-09-05,"Also, to specify and OR in Datalog, do I need to create a seperate rule for it, since there's no equivalent to `;` in Prolog?",,
3.29023E+17,nixin72#3554,2020-09-05,"Looking at the syntax for Datalog there are the following rules: 
```
‚Äπquery‚Ä∫ ::= ‚Äπliteral‚Ä∫ ""?""
‚Äπliteral‚Ä∫ ::= ‚Äπpredicate-sym‚Ä∫ ""("" "")""
           |  ‚Äπpredicate-sym‚Ä∫ ""("" ‚Äπterms‚Ä∫ "")""
           |  ‚Äπpredicate-sym‚Ä∫
           |  ‚Äπterm‚Ä∫ ""="" ‚Äπterm‚Ä∫
           |  ‚Äπterm‚Ä∫ ""!="" ‚Äπterm‚Ä∫
           |  ‚ÄπVARIABLE‚Ä∫ "":-"" ‚Äπexternal-sym‚Ä∫ ""("" ‚Äπterms‚Ä∫ "")""
```
So a query can only contain a literal. But I'm confused about that last rule in there, the `<external-sym>`. That rule isn't anywhere in the definition for the rest of the syntax, does anyone know what that means?",,
3.29023E+17,nixin72#3554,2020-09-05,"Oh wait, never mind, it's for calling Racket functions",,
4.56227E+17,Deleted User#0000,2020-09-05,"Does someone know how to quickly made flowchart for racket? there are plenty of them for c++ or python too, but looks like there is not a single one for Scheme/Racket.",,
2.66505E+17,notjack#9941,2020-09-05,"like, make a flowchart _using_ racket? or something else",,
4.56227E+17,Deleted User#0000,2020-09-05,yea,,
4.56227E+17,Deleted User#0000,2020-09-05,that,,
4.56227E+17,Deleted User#0000,2020-09-05,just a flowchart,,
2.66505E+17,notjack#9941,2020-09-06,alas I do not know of a racket library for making flowcharts,,
2.66505E+17,notjack#9941,2020-09-06,sounds like a fun project though,,
4.56227E+17,Deleted User#0000,2020-09-06,"well not, like making flowcharts with racket, but for it",,
4.56227E+17,Deleted User#0000,2020-09-06,"like,  grab the code and  generate a flowchart",,
2.66505E+17,notjack#9941,2020-09-06,_oh_,,
2.66505E+17,notjack#9941,2020-09-06,there is something like that for visualizing dependencies between modules,,
2.66505E+17,notjack#9941,2020-09-06,https://docs.racket-lang.org/pkg-dep-draw/index.html,,
3.80947E+17,parlortricks#7425,2020-09-06,"> yeah, good luck with part two :)
@sarna 2 stars in now, part 2 completed üëç",,
1.30231E+17,sarna#3904,2020-09-06,"@parlortricks ha, great job!",,
4.62028E+17,StephenD#5938,2020-09-06,@Deleted User there was a recent `#lang` made using racket to make mind maps announced in Racket News,,
2.75501E+17,Plane#0324,2020-09-06,i remember that!  it was pretty cool.  i opened it up to see how they were doing the python-style syntactically significant whitespace,,
4.62028E+17,StephenD#5938,2020-09-07,Yes. I was going to look up the link but got caught up in other stuff.,,
4.62028E+17,StephenD#5938,2020-09-07,@Deleted User let me know if you want the link,,
4.56227E+17,Deleted User#0000,2020-09-07,sure,,
4.56227E+17,Deleted User#0000,2020-09-07,Lemme check it out,,
4.56227E+17,Deleted User#0000,2020-09-07,:racket:,,
4.62028E+17,StephenD#5938,2020-09-07,Ok it will take me a few minutes to find it,,
4.62028E+17,StephenD#5938,2020-09-07,https://github.com/zyrolasting/mind-map,,
4.62028E+17,StephenD#5938,2020-09-07,I started a Racket FAQ: https://github.com/racket/racket/wiki/Frequently-Asked-Questions,,"üëè (2),üëç (1)"
4.56227E+17,Deleted User#0000,2020-09-07,"Hey, thats pretty cool",,
2.66505E+17,notjack#9941,2020-09-07,"@StephenD ""can I run it on android"" is another very common question",,
4.62028E+17,StephenD#5938,2020-09-08,@notjack thank you - very good tip,,
4.62028E+17,StephenD#5938,2020-09-08,@notjack done https://github.com/racket/racket/wiki/Frequently-Asked-Questions,,üëç (1)
3.80947E+17,parlortricks#7425,2020-09-09,hazza! AOC day2 done. got 4stars now üòÜ,,üëè (2)
3.80947E+17,parlortricks#7425,2020-09-09,day 2 part 2 pushed my limits a bit. tried to do recursion but ended up with for loops instead,,
4.56227E+17,Deleted User#0000,2020-09-09,Recursion is a pain in the ass,,
3.29023E+17,nixin72#3554,2020-09-10,Looping is a pain in the ass,,
3.29023E+17,nixin72#3554,2020-09-10,"Different problems are better solved different ways. Looping has its place, recursion has its place. But both are important, and it's good to know when to use which",,
2.66505E+17,notjack#9941,2020-09-10,"use neither, write stream pipelines",,üëç (1)
4.56227E+17,Deleted User#0000,2020-09-10,wtf is that,,
1.30231E+17,sarna#3904,2020-09-10,filter map reduce,,
3.80947E+17,parlortricks#7425,2020-09-10,is there a good resource to explain map reduce filter in racket or general? i am a greenhorn when it comes to this,,
1.30231E+17,sarna#3904,2020-09-10,@parlortricks in my opinion it‚Äôs best to experiment with them,,
1.30231E+17,sarna#3904,2020-09-10,"map is when you want to do something with the data, but want to preserve its shape - for example multiplying all elements of a list by two (individual elements change, but you got a list and you returned a list)",,
1.30231E+17,sarna#3904,2020-09-10,reduce is for changing shape (like taking a list and returning a sum of the elements),,
1.30231E+17,sarna#3904,2020-09-10,and filter is just throwing stuff out based on some predicate,,
1.30231E+17,sarna#3904,2020-09-10,"with map the number of elements doesn‚Äôt change, with filter it can change",,
4.56227E+17,Deleted User#0000,2020-09-10,And they're all implemented with recursion under the hood. :meow:,,
1.30231E+17,sarna#3904,2020-09-10,yess,,
2.74549E+17,kronos#1309,2020-09-10,"I originally posted in help although after some debugging I'm not entirely convinced its on me but it could be. I'm following the embed racket in a binary tutorial but I've fudged the code to get all of the imports dynamically by loading libracket3m instead of linking it all into my binary. Originally I had a crash which I traced to not calling ""scheme_register_tls_space"". But I now get a crash in the depths of libracket3m when it tries to write data to a read only address. Given that this address is nowhere near my binary it looks like a heap allocation so I'm all out of ideas. I checked Github but is there anywhere I can read the source for libracket?",,
4.62028E+17,StephenD#5938,2020-09-10,">  is there a good resource to explain map reduce filter in racket or general? i am a greenhorn when it comes to this
@parlortricks  I think foldl and foldr May be of interest https://docs.racket-lang.org/reference/pairs.html?q=Fold#%28def._%28%28lib._racket%2Fprivate%2Flist..rkt%29._foldl%29%29",,
4.62028E+17,StephenD#5938,2020-09-10,And maybe https://htdp.org/2003-09-26/Book/curriculum-Z-H-27.html#node_idx_1502,,
4.56227E+17,Deleted User#0000,2020-09-10,I recommend reading the reference implementation of SRFI-1. It's easy to read and gives you a sense of idiomatic use of recursion over lists.,,
3.80947E+17,parlortricks#7425,2020-09-10,"thanks everyone, ill read up on the suggestions",,
2.98638E+17,Thomas#3888,2020-09-10,"> Different problems are better solved different ways. Looping has its place, recursion has its place. But both are important, and it's good to know when to use which
@nixin72 Could you please expand on this? My only substantial programming experience so far is with _How to Design Programs_, which I am very close to finishing. The book introduces for loops in an intermezzo but otherwise sticks to recursion; and in looking ahead to the contents of the _How to Design Classes_ draft, I saw that it contains a section called ""Why Loops are Bad"" ... but that was never even started. While I have had no problem with recursion in working through _HtDP_, when I was trying to implement 3SUM based on an algorithms textbook, I did think using nested for loops looked easier. Why does there appear to be hostility to for loops in functional contexts?",,
3.29023E+17,nixin72#3554,2020-09-10,"With for loops your goal is often to perform something like a map, filter or reduce, which are obviously better implemeted as higher-order functions rather than loops. But some algorithms are just more nicely represented as a loop rather than recursion, like bubble sort. Not that you can't implement bubble sort recursively, but I at least happen to find it's iterative definition a little nicer. Something like quicksort though on the other hand, much nicer to do recursively seeing as it's a divide and conquer strategy. Not sure how you'd try to express that iteratively. But sometimes you just want to avoid recursion in general, like if you're using Java since the platform itself doesn't do tail call optimization, so you're going to get a performance hit from using recursion instead of loops.",,
2.98638E+17,Thomas#3888,2020-09-10,Thank you!,,
3.29023E+17,nixin72#3554,2020-09-10,No problem!,,
4.66395E+17,oaktownsam#0815,2020-09-10,@kronos you may want to make a small example and ask on the mailing list.  The libracket source is mostly in here iirc https://github.com/racket/racket/tree/master/racket/src/bc/src,,
2.74549E+17,kronos#1309,2020-09-10,@oaktownsam Thank you! Will do üôÇ,,
4.56227E+17,Deleted User#0000,2020-09-11,Is racket better than python?,,
6.59783E+17,Markus#2886,2020-09-11,That's a loaded question,,
2.75501E+17,Plane#0324,2020-09-11,"i think that question implies you can reduce the goodness of a language to a scalar value which can be ordered, but i don't think that is the case",,
2.75501E+17,Plane#0324,2020-09-11,so you probably need to ask a more nuanced question to get a meaningful answer,,
2.75501E+17,Plane#0324,2020-09-11,i find python to be a nice language for a lot of things (:,,
2.75501E+17,Plane#0324,2020-09-11,but i would probably use python and racket for different things,,
2.75501E+17,Plane#0324,2020-09-11,my personal opinion . . . racket is more fun (:,,
4.56227E+17,Deleted User#0000,2020-09-11,"I mean, im not saying Python is better at all, If a language is better or not completely depends on personal preference and what It will be used on.",,
2.75501E+17,Plane#0324,2020-09-11,i've always been a fan of trying to make use of whatever tools seem to fit the problem at hand,,
2.75501E+17,Plane#0324,2020-09-11,"and ""the problem at hand"" can include factors like, ""what languages are the other people i'm working with familiar with?"" or ""how will i communicate this with other people""",,
2.66505E+17,notjack#9941,2020-09-11,I like racket much more than python,,
2.66505E+17,notjack#9941,2020-09-11,"that's about as close to ""is x language better than y"" as you can get",,
2.75501E+17,Plane#0324,2020-09-11,"i think for me the thing about python is that it's complicated, both in terms of syntax and semantics, but it's also kind of limited at the same time",,
2.75501E+17,Plane#0324,2020-09-11,"and python works just fine for some things but sometimes i just want to do something and i can't, or i can but the natural way to express it is kind of weird",,
2.75501E+17,Plane#0324,2020-09-11,i think every language should have tail call elimination and proper lambdas,,
2.75501E+17,Plane#0324,2020-09-11,"well, every general-purpose language",,
2.75501E+17,Plane#0324,2020-09-11,"i was happy js was getting proper tail calls, but that basically didn't happen because browser vendors didn't want it . . . and then i was optimistic about the wasm tail call proposal, but i'm not sure that one's going to work out either",,
2.75501E+17,Plane#0324,2020-09-11,frown,,
2.66505E+17,notjack#9941,2020-09-11,"the thing that gets me about python is how much it lacks ""typo safety"" - it is far, far too hard to catch silly mistakes caused by typos",,
2.66505E+17,notjack#9941,2020-09-11,"for example because calling a function that doesn't exist is a runtime error, not a compile time one",,
2.66505E+17,notjack#9941,2020-09-11,I don't have this problem in racket,,
2.75501E+17,Plane#0324,2020-09-11,that is a really good point,,
2.66505E+17,notjack#9941,2020-09-11,it makes racket feel much less dynamic than other dynamic languages,,
2.66505E+17,notjack#9941,2020-09-11,and I'm very happy with that,,
2.17712E+17,gomma#4017,2020-09-12,racket is so nice to me and i barely use it,,
2.17712E+17,gomma#4017,2020-09-12,thats as much as i can say,,
2.17712E+17,gomma#4017,2020-09-12,"i enjoy it more than haskell, c, c++, python, julia (julias pretty nice tho), thats about all ive used",,
4.62028E+17,StephenD#5938,2020-09-12,"> Is racket better than python?
@Deleted User Thanks for the question.You made me think.

At first I asked myself if I should treat this like trolling - on consideration I think you are asking a real question that a lot of people ask.

As the others have mentioned here that real question can probably be better phrased as 'Is Racket better than Python ...for me?'

But that is not an easy question because what makes a language good for a person, has many different dimensions because it is as much about people as it is about languages.


That said there are some interesting responses to the 'which is better?' question. One that comes to mind is the Self programming language was implemented with a classless object system (like js), and the implementors proceeded to implement smalltalks class system in self.

You may also like the racketcon talk 'Like a blind squirrel in a ferrari' a few years ago or the 'Why Racket' addendum in 'Beautiful Racket' (by Matthew Butterick.)",,
4.62028E+17,StephenD#5938,2020-09-12,"As a human using a language I think aspects to be considered are:
* Will learning this help me get a job?
* What is the documentation like?
* What are the learning resources like?  
* What is the community like?: Will I be welcomed? is it OK to ask questions? (even ones that I'm afraid might make me feel dumb, uneducated, or in some way less of a person)
* Can I learn(develop with it) on the computers I have available? school/college/university/work computer?  chromebook? android phone or tablet? Window10 for ARM?
* Can I write programs on it that will work in the places I need them to? (server side web applications; Client side web applications; Windows, Linux, Mac gui apps; command line apps; terminal apps; iphone or android apps)",,
4.62028E+17,StephenD#5938,2020-09-12,"I think the racket faq needs a couple more questions;
* 'Is Racket better than x?(for you)'
I also want to add 
* 'Is Racket the same as scheme?' - and point back to the reasons for the name change from PLT-Scheme to Racket.",,
2.66505E+17,notjack#9941,2020-09-12,"for me, ""what is possible with this language?"" is a very important question and it's a big part of why I like racket",,
4.62028E+17,StephenD#5938,2020-09-12,Agreed - a big part of programming is making. So there is always an audience you are making *for*- though sometimes that audience is *me* - and thats ok too.,,
4.62028E+17,StephenD#5938,2020-09-12,"I also think a programming language is also for learning (obviously),",,
4.62028E+17,StephenD#5938,2020-09-12,but also for *dreaming*...,,
1.30231E+17,sarna#3904,2020-09-12,"‚Äúwhat is possible with this language?‚Äù is a trap question for me, I always end up with rust this way
and like :GWseremePeepoThink: I feel like I‚Äôm supposed to enjoy rust, but I don‚Äôt? it‚Äôs a great language with an awesome ecosystem, but I just don‚Äôt vibe with it
and racket just feels good :GWcmeisterPeepoShrug:",,
1.30231E+17,sarna#3904,2020-09-12,"when I was asking this question having racket in mind, I ended up hating it because it was less dynamic than CL",,
1.30231E+17,sarna#3904,2020-09-12,"also, stuff like hygiene was a threat - ‚Äúit limits what I can do, it has to be bad!‚Äù",,
2.66505E+17,notjack#9941,2020-09-12,hygiene _doesn't_ limit what you can do,,
1.30231E+17,sarna#3904,2020-09-12,"I still don‚Äôt fully understand the concept, I‚Äôve just seen some people ranting how it‚Äôs annoying and limiting",,
1.30231E+17,sarna#3904,2020-09-12,"don‚Äôt listen to people on internet forums, folks",,
1.30231E+17,sarna#3904,2020-09-12,"but still - when I‚Äôm in that mindset, I tend to find a couple of perceived ‚Äúflaws‚Äù and hyperfocus on them, instead of just making cool stuff",,
1.30231E+17,sarna#3904,2020-09-12,could be just me though :^),,
2.66505E+17,notjack#9941,2020-09-12,I would say it's safe to ignore the complaints about hygiene,,
2.66505E+17,notjack#9941,2020-09-12,lack of hygiene is a debilitating flaw in a modern macro system,,
4.62028E+17,StephenD#5938,2020-09-12,https://dl.acm.org/doi/epdf/10.1145/3386330,,ü§Ø (3)
4.62028E+17,StephenD#5938,2020-09-12,Complaining about hygiene seems a lot like complaining about gc,,
1.30231E+17,sarna#3904,2020-09-12,"yeah, and complaining about GC is everywhere nowadays",,
1.30231E+17,sarna#3904,2020-09-12,GC and dynamic types are typical scapegoats these days,,
2.66505E+17,notjack#9941,2020-09-12,"wow, that paper is _thorough_",,
2.66505E+17,notjack#9941,2020-09-12,it has multiple pages on an obscure macro issue I've run into a few times and never thought of a good reconciliation for,,
1.30231E+17,sarna#3904,2020-09-12,:GWseremePeepoGGERS:,,
2.66505E+17,notjack#9941,2020-09-12,"(specifically, ""are field names identifiers or symbols?"")",,
1.30231E+17,sarna#3904,2020-09-12,what are they?,,
2.66505E+17,notjack#9941,2020-09-12,"scheme standards say they're supposed to be identifiers but in practice that doesn't really work, they need to be handled symbolically",,
1.30231E+17,sarna#3904,2020-09-12,:meow:,,
2.66505E+17,notjack#9941,2020-09-12,(it's about fields in record types),,
1.30231E+17,sarna#3904,2020-09-12,yeah got it,,
4.62028E+17,StephenD#5938,2020-09-12,"> wow, that paper is _thorough_
@notjack  did you notice the ‚Äòshepherd‚Äô?",,
2.66505E+17,notjack#9941,2020-09-12,"I did not, wow",,
1.93202E+17,rocketnia#4517,2020-09-12,"wow, incredibly detailed report on hygiene there :)",,
4.62028E+17,StephenD#5938,2020-09-12,I believe this will be a featured paper in Racket News. To see more like this I would recommend subscribing at https://racket-news.com and checking out the back issues.,,
3.80947E+17,parlortricks#7425,2020-09-12,I have created a repository on gitlab to host my Advent of Code and to try and explain how i worked things out https://gitlab.com/ParlorTricks/advent-of-code. Still fleshing out how to deliver it.,,"plusone (1),‚ù§Ô∏è (1)"
4.66395E+17,oaktownsam#0815,2020-09-12,https://giphy.com/gifs/things-theater-struggles-iDJuQR0UmiqOI,https://cdn.discordapp.com/attachments/618895179343986688/754422951327039498/unknown.png,üòÜ (2)
2.66505E+17,notjack#9941,2020-09-12,I read that paper's description of the set of scopes model and it was amazingly clear,,
2.66505E+17,notjack#9941,2020-09-12,I need to read the rest of that paper soon,,
4.66395E+17,oaktownsam#0815,2020-09-12,Set of scopes is nice++,,plusone (1)
4.66395E+17,oaktownsam#0815,2020-09-12,I also found these section titles amusing,https://cdn.discordapp.com/attachments/618895179343986688/754487407834955907/unknown.png,
4.66395E+17,oaktownsam#0815,2020-09-12,I'm only a quarter of the way through the paper though.  I'm a slow reader.,,
4.56227E+17,Deleted User#0000,2020-09-12,I remember reading Oleg's original paper on that.,,
4.56227E+17,Deleted User#0000,2020-09-12,"I thought ""wow, how the heck would someone come up with that""",,
2.66505E+17,notjack#9941,2020-09-12,"""Kiselyov Defilement"" is an amazing section title",,
4.56227E+17,Deleted User#0000,2020-09-12,"But abusing the literal list is an obvious idea in retrospect, I suppose.",,
3.80947E+17,parlortricks#7425,2020-09-13,"I wrote this page to assist me with map/filter/reduce https://gitlab.com/ParlorTricks/advent-of-code/-/blob/master/racket-tips.md , has some diagrams created with mermaid to visualise them as well.",,‚ù§Ô∏è (3)
2.66505E+17,notjack#9941,2020-09-13,@parlortricks wow I really like those diagrams,,
2.66505E+17,notjack#9941,2020-09-13,is this the mermaid thing you used? https://mermaid-js.github.io/mermaid/,,
3.80947E+17,parlortricks#7425,2020-09-13,"> is this the mermaid thing you used? https://mermaid-js.github.io/mermaid/
@notjack yes that is what i used. gitlab has it included as a markdown option",,
3.80947E+17,parlortricks#7425,2020-09-13,"i was going to draw them in Visio but having something in text is much better, i can source control it then",,üíØ (2)
2.66505E+17,notjack#9941,2020-09-13,idle thought of the night: I wish `#lang`-based languages had `language-server` submodules that started servers which spoke the language sever protocol,,
4.62028E+17,StephenD#5938,2020-09-13,That is such a good idea!,,‚ù§Ô∏è (1)
2.66505E+17,notjack#9941,2020-09-13,"that way there could be a single racket langserver program that just looks at the file's lang, starts up a server using the lang's submodule, then acts as a proxy between the client and the lang-specific servers",,"üëç (2),plusone (1)"
2.66505E+17,notjack#9941,2020-09-13,and then `#lang` authors could ship great editor support directly through the racket package system,,
4.62028E+17,StephenD#5938,2020-09-13,How much of this work is already done by the `#lang` support in DrRacket? how much has GregH already done to made this functionality available to RacketMode?,,
2.66505E+17,notjack#9941,2020-09-13,"some, there's stuff like the color lexer thing",,
2.66505E+17,notjack#9941,2020-09-13,languages can include stuff in... I think the reader? where it supports a way to ask the lang how to syntax highlight stuff,,
2.66505E+17,notjack#9941,2020-09-13,"and all of the functionality that's derived from the macro expander, like binding arrows and identifier renaming, is already language agnostic anyway",,
4.62028E+17,StephenD#5938,2020-09-13,Sounds like a worthy project!,,
2.66505E+17,notjack#9941,2020-09-13,"this would be mainly useful for things like autocompletion and language-specific forms of navigation such as ""jump to type definition""",,
2.66505E+17,notjack#9941,2020-09-13,"there isn't really a way to do that stuff for an arbitrary `#lang`, ya gotta ask the language what those operations mean",,
4.62028E+17,StephenD#5938,2020-09-13,Sounds like a big project.,,
4.62028E+17,StephenD#5938,2020-09-13,It would be worth defining a MVP and seeing if you could attract collaborators. There are a significant number of VSC users (unsurprisingly).,,
4.62028E+17,StephenD#5938,2020-09-13,Apart from VSC - what other ides can use LSP?,,
1.30231E+17,sarna#3904,2020-09-13,isn't racket-mode lsp-based?,,
1.30231E+17,sarna#3904,2020-09-13,"I have lsp in emacs, just not sure if for racket",,
1.30231E+17,sarna#3904,2020-09-13,"lsp was supposed to be ide-agnostic, that's why it's popular",,
4.62028E+17,StephenD#5938,2020-09-13,"> isn't racket-mode lsp-based?
@sarna  I don‚Äôt know!",,
1.30231E+17,sarna#3904,2020-09-13,"> Racket Mode uses a ‚Äúback end server‚Äù written in Racket, which is responsible for running files and implementing commands that cannot be implemented in Emacs Lisp.",,
1.30231E+17,sarna#3904,2020-09-13,seems like it.. isn't?,,
4.66395E+17,oaktownsam#0815,2020-09-13,There is an LSP bit for vim but I haven't messed with it yet.,,
4.62028E+17,StephenD#5938,2020-09-13,https://github.com/jeapostrophe/racket-langserver do they use this?,,
2.66505E+17,notjack#9941,2020-09-13,"racket-mode doesn't use lsp, lsp didn't exist at the time it was made",,
2.66505E+17,notjack#9941,2020-09-13,lsp is awesome but I can't believe it uses UTF-16 for everything ü§¶,,
4.62028E+17,StephenD#5938,2020-09-13,Does https://github.com/jeapostrophe/racket-langserver use UTF-16 ? I thought json - and by extension LSProtocol as a json api - mandated Utf-8?,,
4.66395E+17,oaktownsam#0815,2020-09-13,No the vim addon doodad is a generic LSP client you are supposed to be able to plug it into the language end,,
2.66505E+17,notjack#9941,2020-09-13,"the wire protocol sends all the json text as utf-8 - the problem is that the _column positions_ that occur in messages like ""hey what's the type of the variable at line 86 column 33"" don't mean 33 codepoints, they mean 33 bytes assuming the file is encoded as utf-16",,üò± (1)
2.66505E+17,notjack#9941,2020-09-13,so the language sever has to read the file into memory and reencode it as utf-16 and remember to do that every time or else things will go wrong as soon as a source file contains non-ascii characters,,
4.62028E+17,StephenD#5938,2020-09-13,That‚Äôs in the LSProtocol specification? Seems insane? Is there a good reason?,,
4.66395E+17,oaktownsam#0815,2020-09-13,Because Windows,,üíØ (1)
2.66505E+17,notjack#9941,2020-09-13,"the spec was mostly driven by Microsoft for use with Typescript, so, utf-16 seemed reasonable to them",,
2.66505E+17,notjack#9941,2020-09-13,there isn't even a way for clients and servers to negotiate the encoding,,
2.66505E+17,notjack#9941,2020-09-13,"yet, at least",,
4.66395E+17,oaktownsam#0815,2020-09-13,unicode makes some things better and other things more complicated (for ASCII users),,
4.62028E+17,StephenD#5938,2020-09-13,Sounds about right for the first gen of any protocol. Can‚Äôt blame engineers for doing the best they could at the time .,,
2.66505E+17,notjack#9941,2020-09-13,"that's true but for fuck's sake, even _java_ has gotten around to moving away from utf-16 for string encoding",,
2.66505E+17,notjack#9941,2020-09-13,"(sometime ago the String class changed from ""utf-16 bytes"" to ""bytes plus a field saying what encoding it's in"")",,
4.62028E+17,StephenD#5938,2020-09-13,"> the wire protocol sends all the json text as utf-8 - the problem is that the _column positions_ that occur in messages like ""hey what's the type of the variable at line 86 column 33"" don't mean 33 codepoints, they mean 33 bytes assuming the file is encoded as utf-16
@notjack  

Im assuming this means the typescript lsp server is or was written is a windows Lang where UTF16  is convenient?",,
2.66505E+17,notjack#9941,2020-09-13,yup,,
4.62028E+17,StephenD#5938,2020-09-13,Weird. I wonder- but will prob never know- why they  didn‚Äôt use typescript?,,
2.66505E+17,notjack#9941,2020-09-13,no idea ü§∑,,
4.66395E+17,oaktownsam#0815,2020-09-13,My hypothesis is that the original language *client* was plain old VisualStudio (not vscode) and all of the innards are UTF-16 and it all flows from there.,,üíØ (1)
4.66395E+17,oaktownsam#0815,2020-09-13,oh obvs doesn't totally explain the typescript implementation side.,,
4.62028E+17,StephenD#5938,2020-09-13,I‚Äôm assuming there is a LSPv2 currently being worked on somewhere,,
2.66505E+17,notjack#9941,2020-09-13,the current spec is v3,,ü•∫ (3)
4.66395E+17,oaktownsam#0815,2020-09-13,:sad-trombone:,,
3.80947E+17,parlortricks#7425,2020-09-13,"> i was going to draw them in Visio but having something in text is much better, i can source control it then
@parlortricks i just found that http://draw.io can import mermaid source and draw the diagram, i think that is pretty cool, allows you to play with it after",,
1.02519E+17,atl#0010,2020-09-14,is there a built in way to connect over ssh tunnel in `db`,,
4.62028E+17,StephenD#5938,2020-09-14,I‚Äôve only used Stunnel and that wasn‚Äôt for Racket/ db.  You could try a search of the docs https://docs.racket-lang.org/search/index.html?q=Ssh or maybe the mailing list.,,
4.66395E+17,oaktownsam#0815,2020-09-14,"I don't think there is a builtin way.  You could start ssh outside of Racket and then connect using the forwarded ports on localhost.  Otherwise you can start ssh inside Racket with `process` or `process*`
https://docs.racket-lang.org/reference/subprocess.html?q=system*#%28def._%28%28lib._racket%2Fsystem..rkt%29._process%29%29",,
1.02519E+17,atl#0010,2020-09-15,@oaktownsam process to start the ssh tunnel may just be the most effective,,
1.02519E+17,atl#0010,2020-09-15,thanks,,
1.30231E+17,sarna#3904,2020-09-15,"why do all thread functions start with ‚Äúthread‚Äù, but not ‚Äúkill-thread‚Äù and ‚Äúbreak-thread‚Äù? legacy?",,
2.66505E+17,notjack#9941,2020-09-15,probably,,
2.66505E+17,notjack#9941,2020-09-15,naming conventions for racket APIs have evolved over time and people don't always know about them,,
3.80947E+17,parlortricks#7425,2020-09-16,"ive just staryed toying with math/array, and in the doco it creates a 6x6 array and pretty prints it. However when i do this in the repl, it prints the whole array on one line... can you pretty print arrays?",,
3.80947E+17,parlortricks#7425,2020-09-16,"i know i can write my own thing to pretty print it, but is something already in built",,
2.66505E+17,notjack#9941,2020-09-16,"@parlortricks are you using the drracket repl, and if so are you using the horizontal or the vertical layout of the definitions and interactions panes?",,
3.80947E+17,parlortricks#7425,2020-09-16,"@notjack yeah im using drracket repl, un horizontal layout. source at top, repl below",,
2.83265E+17,Zac Bir [he/him]#8964,2020-09-16,"'lo, all",,
4.56227E+17,Deleted User#0000,2020-09-16,Ahoj,,
1.30231E+17,sarna#3904,2020-09-16,:meowloween:,,meowloween (4)
4.62028E+17,StephenD#5938,2020-09-16,Hello @Zac Bir [he/him],,
4.62028E+17,StephenD#5938,2020-09-16,"[ANN]Call for beta-testers: racket templates
We have a small collection of templates at https://github.com/racket-templates and a command that helps you use them.
**I‚Äôll do a formal release in the next Racket News, but in the meantime it would be great if you have a few free moments to try the tool and a template (or two) let me know if you see any problems.**
You can download a template straight to your computer with the command `raco from-template <template repo name> <destination folder>`
 e.g. the following command creates a new folder in the current directory and populates it with the contents of the guiapp template.
`raco from-template guiapp mygui`
Thanks to @nixin72  we have an extension to raco that adds the from-template command.
Thanks also go to Andre Garzia for getting it working for windows.
It should go something like this;

```
% echo $PATH
/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/Applications/Racket v7.8/bin:/opt/X11/bin:/Library/Apple/usr/bin
% raco pkg install from-template
Resolving ""from-template"" via https://download.racket-lang.org/releases/7.8/catalog/
Resolving ""from-template"" via https://pkgs.racket-lang.org
Downloading repository https://github.com/nixin72/from-template.git
[‚Ä¶]raco setup: --- installing collections ---             [17:55:59]
raco setup: --- post-installing collections ---          [17:55:59]
% mkdir templatetests
% cd templatetests 
% raco from-template guiapp mygui
guiapp
/Users/spdegabrielle/Dev/templatetests/
Cloning into 'mygui'...
remote: Enumerating objects: 25, done.
remote: Counting objects: 100% (25/25), done.
remote: Compressing objects: 100% (19/19), done.
remote: Total 25 (delta 8), reused 13 (delta 3), pack-reused 0
Unpacking objects: 100% (25/25), done.
#t
% ls
mygui
% cd mygui
```
Please try it out and let me know if you identify any problems.
Suggestions appreciated!",,
4.56227E+17,Deleted User#0000,2020-09-16,`from-template` is a tad unwieldy.,,
4.56227E+17,Deleted User#0000,2020-09-16,Why not `create` or `init`?,,plusone (1)
3.29023E+17,nixin72#3554,2020-09-16,Cause I'm dumb and gave it a verbose name lol,,
4.56227E+17,Deleted User#0000,2020-09-16,Haha,,
3.29023E+17,nixin72#3554,2020-09-16,I was thinking of changing it to `raco new` -- `raco new guiapp` is much nicer tbh üëå,,plusone (2)
3.29023E+17,nixin72#3554,2020-09-16,"Also, `new` somehow isn't taken among raco commands as far as I can tell",,
4.62028E+17,StephenD#5938,2020-09-16,I think we have a winner!,,
4.56227E+17,Deleted User#0000,2020-09-16,Sounds good to me.,,
4.62028E+17,StephenD#5938,2020-09-16,the idea for the collection of templates came from `dotnet new`,,
4.62028E+17,StephenD#5938,2020-09-16,so why not `raco new`,,
3.29023E+17,nixin72#3554,2020-09-16,"Lol, sounds good to me! I'll go change that, give me a sec",,
4.62028E+17,StephenD#5938,2020-09-16,@nixin72 can you keep the old command? just while we are beta testing?,,
4.62028E+17,StephenD#5938,2020-09-16,or have both,,
4.62028E+17,StephenD#5938,2020-09-16,"```racket
(define raco-commands
  '((""from-template"" ""main.rkt"" ""Install a repo from a template at racket-templates"" 50)
(""new"" ""main.rkt"" ""Install a repo from a template at racket-templates"" 50)
))
```",,
3.29023E+17,nixin72#3554,2020-09-16,"Yup, I can definitely do that",,
4.62028E+17,StephenD#5938,2020-09-16,"cool, I can announce it tomorrow on the slack once it builds on pkgs again",,
4.62028E+17,StephenD#5938,2020-09-16,we have added a `#lang` template thanks to @samth,,
3.29023E+17,nixin72#3554,2020-09-16,Ohh nice!,,
3.29023E+17,nixin72#3554,2020-09-16,I've added `new` as an alternative to `from-template` now @Deleted User üëç Thanks for the suggestion,,
4.56227E+17,Deleted User#0000,2020-09-16,Excellent :meow:,,
4.62028E+17,StephenD#5938,2020-09-16,"check out `racket-scaffold`
It might be a useful way of customising code generation from templates.
to install;
```
% raco pkg install racket-scaffold
```
to create a package: 
```
raco scaffold package -d ""Some new package"" -V ""1.0"" -l MIT -r markdown -L ""racket/base"" -u ""me"" -e ""me@example.com"" my-name
```
I'm a bit worried it might overcomplicate things and break the github functionality.",,
4.62028E+17,StephenD#5938,2020-09-17,"**[Announcement/update] racket-templates**
Thank you to those who provided feedback and contributed code yesterday but we still need users to try out the tool on different platforms; linux, windows & macos. Just reply with a note saying platform, and if it worked.
You can install with `raco pkg install from-template`
Update with `raco pkg update from-template`

**changes**:  
- you can now use the command new as in `raco new lang mylang`
- there is now a `#lang` template `lang` ( from `samth/xlang` courtesy of the author @samth )

Please try it out and let us know if the thread if you succeed or fail

Kind regards,
Stephen",,
3.29023E+17,nixin72#3554,2020-09-17,I'll give the `#lang` template a shot later üëç,,üëç (1)
4.62028E+17,StephenD#5938,2020-09-17,I've renamed the `xlang` template as `lang`,,üëç (1)
1.32971E+17,thornAvery#3077,2020-09-17,does `#lang datalog` have support for lists? or will I need to homeroll them?,,
1.32971E+17,thornAvery#3077,2020-09-18,"I know racklog has a larger syntax, but it doesnt have support for retractions which is somethig I needed",,
2.66505E+17,notjack#9941,2020-09-18,I don't think datalog has any built-in list support,,
3.29023E+17,nixin72#3554,2020-09-18,"It doesn't, I was messing around with it a couple weeks ago",,
4.56227E+17,Deleted User#0000,2020-09-18,"It's very easy to import Racket stuff into Datalog, fortunately.",,
4.56227E+17,Deleted User#0000,2020-09-18,"This should work (from the top of my head):
```Prolog
#lang datalog
(racket/base).
list(0, 1, 2).
```",,
2.66505E+17,notjack#9941,2020-09-18,"wait, really? I thought it was only racklog that supported that kind of embedding",,
2.66505E+17,notjack#9941,2020-09-18,whoa you're totally right,,
2.66505E+17,notjack#9941,2020-09-18,"> A requirement is a `(`, then an identifier, then `)`, then `.`, and it imports functions that can be called as external queries.
> 
> An *external query* is a variable, then `:-`, then an identifier, then a parenthesized list of comma separated terms. Beware that an external query can break Datalog‚Äôs termination guarantee.",,
2.66505E+17,notjack#9941,2020-09-18,https://docs.racket-lang.org/datalog/datalog.html,,
4.56227E+17,Deleted User#0000,2020-09-18,üò∏,,
1.30231E+17,sarna#3904,2020-09-18,"@notjack what‚Äôs the use-case for rebellion? it kinda looks like CL‚Äôs alexandria, to be honest",,
1.30231E+17,sarna#3904,2020-09-18,"I mean is it more for when you‚Äôre using a custom #lang and need some goodies, or stdlib++ (like alexandria)?",,
2.66505E+17,notjack#9941,2020-09-18,it's more stdlib++,,üëç (3)
4.66395E+17,oaktownsam#0815,2020-09-18,https://tenor.com/view/why-not-both-gif-11478682,,üëç (1)
4.89956E+17,WillBAnders#5226,2020-09-18,"Quick question, how is `if` implemented? Is it a primitive or a macro that is lowered to a thunk or something?",,
2.66505E+17,notjack#9941,2020-09-18,it's a primitive,,
2.66505E+17,notjack#9941,2020-09-18,you can check by looking at the grammar for fully expanded programs https://docs.racket-lang.org/reference/syntax-model.html#%28part._fully-expanded%29,,
4.89956E+17,WillBAnders#5226,2020-09-18,"Coolio, thanks!",,
1.02519E+17,atl#0010,2020-09-21,https://docs.racket-lang.org/bestfit/index.html,,
1.02519E+17,atl#0010,2020-09-21,i wonder why this needs to be non negative,,
2.66505E+17,notjack#9941,2020-09-24,"cool thing I want to make inspired by an earlier convo in #help : sliding window transducer

```
 > (transduce (list 1 2 3 4 5)
              (windowing 3)
              #:into into-list)
 (list (list 1 2 3) (list 2 3 4) (list 3 4 5))
```",,plusone (1)
2.66505E+17,notjack#9941,2020-09-24,"optionally with a way to collect the windows into things other than lists

```
 > (transduce (list 1 2 3 4 5)
              (windowing 3 #:into into-vector)
              #:into into-list)
 (list (vector 1 2 3) (vector 2 3 4) (vector 3 4 5))
```",,
2.66505E+17,notjack#9941,2020-09-24,"mentioned this in the racket slack as well, but I got `windowing` working!",,
4.66395E+17,oaktownsam#0815,2020-09-25,@notjack I really thought you had already made a windowing type transducer,,
2.66505E+17,notjack#9941,2020-09-25,me too!,,
4.66395E+17,oaktownsam#0815,2020-09-25,Now I have to check to see if I made one that I never contributed üò¶,,
2.66505E+17,notjack#9941,2020-09-25,"I think I made one in my _other_ transducers library, buried in my personal labs repo",,
2.66505E+17,notjack#9941,2020-09-25,when I was still experimenting with the whole idea,,
2.66505E+17,notjack#9941,2020-09-25,"(of transducers, I mean)",,
4.56227E+17,Deleted User#0000,2020-09-25,@notjack ah this was the one,,
4.56227E+17,Deleted User#0000,2020-09-25,I wanted help with,,
4.56227E+17,Deleted User#0000,2020-09-25,"at the end I gave up, because I'm pretty sure racket/lsip languages aren't meant for this sorta data-processing",,
2.66505E+17,notjack#9941,2020-09-25,it is now! https://docs.racket-lang.org/rebellion/Transducers.html#%28def._%28%28lib._rebellion%2Fstreaming%2Ftransducer..rkt%29._windowing%29%29,,
2.66505E+17,notjack#9941,2020-09-25,less flippantly: I think this is more a question of libraries than languages,,
1.30231E+17,sarna#3904,2020-09-25,"yeah, lisps are really good for data processing",,
1.30231E+17,sarna#3904,2020-09-25,"isn‚Äôt it one of their biggest pros, even?",,
4.62028E+17,StephenD#5938,2020-09-25,Lisp enthusiasts will tell you Lisp is good for everything,,
4.62028E+17,StephenD#5938,2020-09-25,(That includes scheme enthusiasts ),,
1.30231E+17,sarna#3904,2020-09-25,"I'd say lisp (and ML family) languages are good for anything but ""embedded realtime very few resources"" type of thing",,
1.30231E+17,sarna#3904,2020-09-25,you might not even have a heap in this scenario,,
4.62028E+17,StephenD#5938,2020-09-25,I dare you to ask about ‚Äòembedded real-time lisp‚Äô on r/lisp ü§£ (I‚Äôm joking - don‚Äôt do it - it‚Äôs just trolling and unkind.),,meow (2)
4.62028E+17,StephenD#5938,2020-09-25,https://tenor.com/view/old-man-yells-at-cloud-yelling-old-man-news-the-simpsons-gif-17741451,,
1.30231E+17,sarna#3904,2020-09-25,but also the truth is most of us won't have to ever deal with such a system,,
1.30231E+17,sarna#3904,2020-09-25,so :^),,
1.30231E+17,sarna#3904,2020-09-25,"well maybe not ""deal"" as we all have cellphones - ""write software for""*",,
4.62028E+17,StephenD#5938,2020-09-25,I don‚Äôt know? There are so many single board computers the size of a credit card and dirt  cheap - DrRacket runs fine on the raspberry pi.  I think what counts as embedded is changing. i‚Äôm thinking about getting a macro pad kit that runs Linux! To drive 16 keys. I think it runs python.,,
1.30231E+17,sarna#3904,2020-09-25,"yeah, I was thinking something more constrained",,
1.30231E+17,sarna#3904,2020-09-25,like that chip in your phone that processes data from cell towers,,
4.62028E+17,StephenD#5938,2020-09-25,Yeah.,,
1.30231E+17,sarna#3904,2020-09-25,"I had a good article about this somewhere, I can't find it now :(",,
4.62028E+17,StephenD#5938,2020-09-25,The curse of the information age,,
1.30231E+17,sarna#3904,2020-09-25,too many good articles with poor SEO,,
4.62028E+17,StephenD#5938,2020-09-25,You now have me wondering what the smallest device where I can run Racket.,,
4.62028E+17,StephenD#5938,2020-09-25,(I may buy that macro pad just so I can replace python with racket to do my keyboard macros),,
4.62028E+17,StephenD#5938,2020-09-25,ü§™,,
1.30231E+17,sarna#3904,2020-09-25,raspberry pi zero?,,
1.30231E+17,sarna#3904,2020-09-25,"well it won't run on arduino, but you could compile to their C-like language, lol",,
4.62028E+17,StephenD#5938,2020-09-25,Pi-zero yes.,,
4.62028E+17,StephenD#5938,2020-09-25,"> well it won't run on arduino, but you could compile to their C-like language, lol
@sarna  I love that ASI-64 project where the guy wrote a 6502 assembler in Racket to make c64 games.",,
1.30231E+17,sarna#3904,2020-09-25,link please üëÄ,,
4.62028E+17,StephenD#5938,2020-09-25,https://pezi-pink.itch.io/c64-robotfindskitten,,
1.30231E+17,sarna#3904,2020-09-25,thanks üëÄ,,
1.30231E+17,sarna#3904,2020-09-25,I remember someone optimizing their assembly code with a racket lang,,
1.30231E+17,sarna#3904,2020-09-25,rosette probably?,,
4.62028E+17,StephenD#5938,2020-09-25,Maybe @sorawee on slack? He‚Äôs the only one that I know who uses Rosette,,
4.62028E+17,StephenD#5938,2020-09-25,I like the idea of compiling Racket to another language but to do it well I‚Äôd need to know the other language well. (And I don‚Äôt know any language well enough to do that),,
1.30231E+17,sarna#3904,2020-09-25,found it - it was whitequark,,
1.30231E+17,sarna#3904,2020-09-25,https://lab.whitequark.org/notes/2020-04-06/synthesizing-optimal-8051-code/,,üòÄ (1)
4.62028E+17,StephenD#5938,2020-09-25,Thanks for that,,
1.30231E+17,sarna#3904,2020-09-25,"on one hand, I'm missing emotes other than :meow:  here",,
1.30231E+17,sarna#3904,2020-09-25,"on the other hand, it's kinda fun when :meow:  is the only feeling you experience",,
4.62028E+17,StephenD#5938,2020-09-25,I though you could add new ones,,
1.30231E+17,sarna#3904,2020-09-25,oh I can!,,
1.30231E+17,sarna#3904,2020-09-25,"hm, that's a lot of power to give your members",,
4.62028E+17,StephenD#5938,2020-09-25,(I feel like I have made a grave mistake),,
4.62028E+17,StephenD#5938,2020-09-25,ü§£,,
4.56227E+17,Deleted User#0000,2020-09-25,I once wrote a clone of that game in CHICKEN Scheme.,,
4.56227E+17,Deleted User#0000,2020-09-25,:meow:,,
4.62028E+17,StephenD#5938,2020-09-25,What game?,,
4.56227E+17,Deleted User#0000,2020-09-25,robotfindskitten,,
4.62028E+17,StephenD#5938,2020-09-25,Link please,,
4.56227E+17,Deleted User#0000,2020-09-25,https://github.com/erkin/robotfindschicken,,
4.56227E+17,Deleted User#0000,2020-09-25,The code is ugly because I was using it to learn Scheme.,,
1.30231E+17,sarna#3904,2020-09-25,"lol, the description",,
1.30231E+17,sarna#3904,2020-09-25,"by the way, I noticed a pattern in my behavior
whenever I code in a language focused on correctness (like OCaml, Haskell or Rust) I‚Äôm very reluctant to use any hacks and tend to think hard about modeling my problem ‚Äújust right‚Äù
with ‚Äúlooser‚Äù languages (like Racket or Python) I tend to just ‚Äúwell whatever‚Äù through the problem
while the first approach tends to produce more quality code, it takes a lot more time and I most often abandon the project because I can‚Äôt model something nicely :meow:",,
1.30231E+17,sarna#3904,2020-09-25,anyone else experienced that? :meow:,,
4.56227E+17,Deleted User#0000,2020-09-25,"I forgot to add the Makefile back to the repo, it seems...",,
4.56227E+17,Deleted User#0000,2020-09-25,"Anyway, the experience is practically the same as robotfindskitten.",,
4.56227E+17,Deleted User#0000,2020-09-25,Here's the interesting part: https://github.com/erkin/robotfindschicken/blob/master/src/const.scm#L36,,"üòÅ (1),meow (1)"
1.93202E+17,rocketnia#4517,2020-09-25,"I spend a lot of time in Racket trying to model my problem ""just right"" :D",,
1.93202E+17,rocketnia#4517,2020-09-25,"I use expressive contracts, and then it's slow, lol, and I'm currently thinking about how to work around that ""just right""",,
1.30231E+17,sarna#3904,2020-09-25,:meow:,,
1.30231E+17,sarna#3904,2020-09-25,it can't be as bad as trying to model the whole application with OCaml's functors and first-class modules,,
1.30231E+17,sarna#3904,2020-09-25,they also have objects..,,
1.93202E+17,rocketnia#4517,2020-09-25,"speaking of that emote, what does it mean to you? I'm never sure if it's a smile or a ""welp"" or a ""come at me""",,
1.30231E+17,sarna#3904,2020-09-25,each decision comes with a tradeoff :meow:,,
4.56227E+17,Deleted User#0000,2020-09-25,It's a very generic emote for me.,,
1.30231E+17,sarna#3904,2020-09-25,"either ""I just ate lemon"" or ""smiling through pain""",,
1.93202E+17,rocketnia#4517,2020-09-25,"lol, that makes sense",,
4.56227E+17,Deleted User#0000,2020-09-25,I use it when I want to express a feeling but don't feel like articulating it.,,
4.56227E+17,Deleted User#0000,2020-09-25,Or simply can't.,,
4.62028E+17,StephenD#5938,2020-09-25,thats the cat from that meme isnt it ?,,
4.56227E+17,Deleted User#0000,2020-09-25,"Also takes the place of several interjections like hmm, bruh, wow, ugh, huh?, ehh, ouch etc",,
4.56227E+17,Deleted User#0000,2020-09-25,Essentially a linguistic filler.,,
4.62028E+17,StephenD#5938,2020-09-25,there is an angry woman? three panels I think?,,
4.56227E+17,Deleted User#0000,2020-09-25,"Oh no, this is a different one.",,
1.93202E+17,rocketnia#4517,2020-09-25,"thank you, this clarifies it greatly for me, lol",,
1.93202E+17,rocketnia#4517,2020-09-25,I was wondering if it was that one with the angry woman,,
4.56227E+17,Deleted User#0000,2020-09-25,,https://cdn.discordapp.com/attachments/618895179343986688/759045699689250876/a1b393a0-7adb-4126-a34e-26c1b0fde1c4-1.png,meow (2)
4.56227E+17,Deleted User#0000,2020-09-25,Just a very expressive cat whose expression is so vague as to carry any potential meaning.,,plusone (1)
1.93202E+17,rocketnia#4517,2020-09-25,lol,,
1.30231E+17,sarna#3904,2020-09-25,mentally I'm them,,racket (2)
1.93202E+17,rocketnia#4517,2020-09-25,"""don't make that face at me"" ""what face :meow: """,,
1.30231E+17,sarna#3904,2020-09-25,ü§£,,
4.56227E+17,Deleted User#0000,2020-09-25,:meowblush:,,
1.30231E+17,sarna#3904,2020-09-25,:meowblush:,,
1.30231E+17,sarna#3904,2020-09-25,I love this,,
4.62028E+17,StephenD#5938,2020-09-25,In my defence it could be the same cat,,
4.62028E+17,StephenD#5938,2020-09-25,https://knowyourmeme.com/memes/woman-yelling-at-a-cat,,
4.56227E+17,Deleted User#0000,2020-09-25,"Could be, yeah. I researched a bit and couldn't find anything about the history of the :meow: cat.",,
1.30231E+17,sarna#3904,2020-09-25,all-round talented,,
4.62028E+17,StephenD#5938,2020-09-25,tis a good cat,,
1.30231E+17,sarna#3904,2020-09-25,who wants to help me writing bindings for this https://github.com/zserge/jsmn,,
1.30231E+17,sarna#3904,2020-09-25,so we can be faster than python,,
1.30231E+17,sarna#3904,2020-09-25,:meow:,,
1.30231E+17,sarna#3904,2020-09-25,jokes I'll just read the docs on FFI and ask here,,
4.62028E+17,StephenD#5938,2020-09-25,ok - not sure I'll be much help as callign my 'c' knowledge minimal woudl be overstatign things,,
4.56227E+17,Deleted User#0000,2020-09-25,Have you tried SWIG?,,
4.56227E+17,Deleted User#0000,2020-09-25,"It's unmaintained and old, so it mightn't support the most recent C FFI.",,
4.56227E+17,Deleted User#0000,2020-09-25,But could be worth a try.,,
1.30231E+17,sarna#3904,2020-09-25,"it calls racket ""mzscheme"" :meow:",,
4.56227E+17,Deleted User#0000,2020-09-25,Yes,,
1.30231E+17,sarna#3904,2020-09-25,"I'll try it, thanks",,
4.56227E+17,Deleted User#0000,2020-09-25,CHICKEN Scheme has it easy; you can literally `include` C headers natively.,,
1.30231E+17,sarna#3904,2020-09-25,please don't tempt me,,
1.30231E+17,sarna#3904,2020-09-25,:meowblush:,,
4.56227E+17,Deleted User#0000,2020-09-25,"Oh wait, SWIG is still maintained.",,
4.56227E+17,Deleted User#0000,2020-09-25,Interesting.,,
1.30231E+17,sarna#3904,2020-09-25,didn't racket on chez change something wrt FFI?,,
4.56227E+17,Deleted User#0000,2020-09-25,Yeah I think it's entirely different.,,
1.30231E+17,sarna#3904,2020-09-25,"I heard good things about chez FFI though, could be fun",,
4.56227E+17,Deleted User#0000,2020-09-25,No idea if SWIG intends to support it. Wouldn't surprise me if they do though; there's Guile and CHICKEN support as well.,,
4.56227E+17,Deleted User#0000,2020-09-25,Might be worth e-mailing them to ask about it.,,
4.62028E+17,StephenD#5938,2020-09-25,I'm interested in learnng the racket(cs) ffi,,
1.30231E+17,sarna#3904,2020-09-25,"don't look at me - I embarrassed myself on gambit's mailing list already, never again :meowblush:",,
4.62028E+17,StephenD#5938,2020-09-25,I nearly started a fight on the snap! forum this week.:meow:,,
1.30231E+17,sarna#3904,2020-09-25,:meow:,,
4.56227E+17,Deleted User#0000,2020-09-25,:meow:,,
4.62028E+17,StephenD#5938,2020-09-25,did the ffi change for CS? I'm just lookign at the overview and there is no mention/\,,
1.30231E+17,sarna#3904,2020-09-25,@Deleted User it generated.. something :meow:,https://cdn.discordapp.com/attachments/618895179343986688/759052273098817566/unknown.png,
1.30231E+17,sarna#3904,2020-09-25,I don't think generating 2300 lines of wrappers for 200 lines of C is optimal,,meow (2)
1.30231E+17,sarna#3904,2020-09-25,I'll do it by hand :meow:,,
4.62028E+17,StephenD#5938,2020-09-25,You cant stop me using `:meow:` now.,,
1.30231E+17,sarna#3904,2020-09-25,we‚Äôre all :meow: now,,
4.56227E+17,Deleted User#0000,2020-09-25,It's probably mostly boilerplate overhead. :meow:,,
1.30231E+17,sarna#3904,2020-09-25,@StephenD here are the differences https://docs.racket-lang.org/inside/index.html,,meow (2)
1.30231E+17,sarna#3904,2020-09-25,I think FFI is the same though :meow:,,
4.62028E+17,StephenD#5938,2020-09-25,Thanks,,
1.30231E+17,sarna#3904,2020-09-25,"I skimmed through the FFI page, sounds awesome",,
1.30231E+17,sarna#3904,2020-09-25,I‚Äôll try to bind to this lib,,
1.30231E+17,sarna#3904,2020-09-25,:meow:,,
4.66395E+17,oaktownsam#0815,2020-09-25,I don't think that library handles unicode in strings at all.  It isn't decoding any \U escapes,,
4.66395E+17,oaktownsam#0815,2020-09-25,Ahh it's a feature.,,
4.66395E+17,oaktownsam#0815,2020-09-25,"> jsmn is designed to be robust (it should work fine even with erroneous data),",,
1.30231E+17,sarna#3904,2020-09-25,"if I had invalid unicode in the file, my racket code would bail, right? I‚Äôd be fine with that",,
4.66395E+17,oaktownsam#0815,2020-09-25,Yeah the Racket parser will bail out,,
5.20369E+17,Tictac#5779,2020-09-25,Do you guys know if you can do code highlighting for racket on discord?,,
5.20369E+17,Tictac#5779,2020-09-25,"Like:

```
(define (add-x-and-a x a)
  (+ x a))
```
making it appear like:",,
5.20369E+17,Tictac#5779,2020-09-25,,https://cdn.discordapp.com/attachments/618895179343986688/759211086523924480/unknown.png,
5.20369E+17,Tictac#5779,2020-09-25,on discord,,
2.66505E+17,notjack#9941,2020-09-25,"Yeah, you have to add the word ""scheme"" right after the first three backticks",,
5.20369E+17,Tictac#5779,2020-09-25,ooo,,
5.20369E+17,Tictac#5779,2020-09-25,let me try,,
2.66505E+17,notjack#9941,2020-09-25,the highlighting doesn't show up on android however,,üíØ (1)
5.20369E+17,Tictac#5779,2020-09-25,"```scheme
(define (add-x-and-a x a)
  (+ x a))
```",,
5.20369E+17,Tictac#5779,2020-09-25,Nice!,,
5.20369E+17,Tictac#5779,2020-09-25,Thanks so much,,
2.66505E+17,notjack#9941,2020-09-25,"```scheme
(define (double x)
  (* x 2))
```",,
2.66505E+17,notjack#9941,2020-09-25,welcome!,,
5.20369E+17,Tictac#5779,2020-09-25,I kept typing in racket or drracket and it discord didn't recognize it lol,,
5.20369E+17,Tictac#5779,2020-09-25,do you know if you can do it for single line code as well?,,
2.66505E+17,notjack#9941,2020-09-25,I don't know of any way to do it for inline code,,
4.62028E+17,StephenD#5938,2020-09-25,https://support.discord.com/hc/en-us/articles/210298617-Markdown-Text-101-Chat-Formatting-Bold-Italic-Underline-,,
4.62028E+17,StephenD#5938,2020-09-25,There isn‚Äôt,,
2.66505E+17,notjack#9941,2020-09-26,on a transducer kick again!,,
2.66505E+17,notjack#9941,2020-09-26,"I made one for finding _all_ of the greatest elements in a sequence, rather than just one",https://cdn.discordapp.com/attachments/618895179343986688/759266097152524308/unknown.png,
4.66395E+17,oaktownsam#0815,2020-09-26,sorting + taking?,,
2.66505E+17,notjack#9941,2020-09-26,"not quite. sort+take would be like ""take the top N things"", this is ""take the biggest thing. if multiple things are tied for biggest, take all of them.""",,plusone (1)
1.30231E+17,sarna#3904,2020-09-26,"update regarding my FFI adventure: I couldn't even install these C parsers, gave up :meow:",,
4.56227E+17,Deleted User#0000,2020-09-26,:meow:,,
2.17712E+17,gomma#4017,2020-09-26,:meow:,,
2.2083E+17,dj charlie#8800,2020-09-26,Racketeers who use racket in a distributed sense with containers,,
2.2083E+17,dj charlie#8800,2020-09-26,How do you attack your logging? Any products you use?,,
2.2083E+17,dj charlie#8800,2020-09-26,Curious,,
2.66505E+17,notjack#9941,2020-09-26,I'd also like to hear from anyone with experience in that,,
2.17712E+17,gomma#4017,2020-09-26,:meowloween:,,
2.2083E+17,dj charlie#8800,2020-09-26,this is a good litmus test as to whether a language ecosystem has prod users who aren't in the research space lol,,
2.2083E+17,dj charlie#8800,2020-09-26,but i am actually curiouys,,
2.66505E+17,notjack#9941,2020-09-26,"there is definitely logging infrastructure available within the language, the log receiver functionality is enough to implement configurable logging to stderr and syslog",,
2.2083E+17,dj charlie#8800,2020-09-26,oh yeah for sure,,
2.66505E+17,notjack#9941,2020-09-26,I think I've heard of people hooking it up to log storage services before,,
2.2083E+17,dj charlie#8800,2020-09-26,but clients for commercial log products,,
2.2083E+17,dj charlie#8800,2020-09-26,the ones that let you track and do ci to measure occurances etc,,
2.66505E+17,notjack#9941,2020-09-26,ya,,
2.66505E+17,notjack#9941,2020-09-26,maybe check the package catalog for packages that implement clients to cloud logging services?,,
2.66505E+17,notjack#9941,2020-09-26,"presumably if there any then their authors had a use for them, and you could ask them how it went",,
2.2083E+17,dj charlie#8800,2020-09-26,TRUE,,
2.2083E+17,dj charlie#8800,2020-09-26,or google racketeers who've published their tech stack,,
2.2083E+17,dj charlie#8800,2020-09-26,i'm digging around atm,,üëç (1)
2.66505E+17,notjack#9941,2020-09-26,"let me know if you find anyone, I'm curious",,
2.2083E+17,dj charlie#8800,2020-09-26,üôÇ,,
2.2083E+17,dj charlie#8800,2020-09-26,oh baby https://pkgs.racket-lang.org/package/racket-dogstatsd,,
4.66395E+17,oaktownsam#0815,2020-09-27,I have sent data into Splunk HEC but it's generally ad-hoc and bespoke,,
7.43864E+17,beru#4280,2020-09-27,"Hi! I'm thinking of trying racket, are there any fun projects you'd recommend to get familiar with racket?",,
2.66505E+17,notjack#9941,2020-09-27,"Messing around with `pict`, `pict3d`, and animations can be really fun",,
2.66505E+17,notjack#9941,2020-09-27,There's something visceral about building graphical stuff in a REPL,,
7.43864E+17,beru#4280,2020-09-27,What are contracts in racket?,,
2.66505E+17,notjack#9941,2020-09-27,"They're like types, but checked at runtime  and they can do more than types usually do.",,
7.43864E+17,beru#4280,2020-09-27,Are they like enums in ocaml/c?,,
2.66505E+17,notjack#9941,2020-09-27,"No. They're more like checks in your code like this:

```java
void deleteIndex(List list, int index) {
  if (index < 0) {
    throw new IllegalArgumentException(""index cannot be negative"");
  }
  if (index >= list.size()) {
    throw new IllegalArgumentException(""index must be smaller than the list size"");
  }
  ...
}
```",,
2.66505E+17,notjack#9941,2020-09-27,"Racket contacts are an alternative to those sorts of explicit checks:

```scheme
(define/contract (delete-index list index)
  (->i ([list list?]
        [index (list) (integer-in 0 (- (list-size list) 1))])
       [_ void?])
  ...)
```",,
7.43864E+17,beru#4280,2020-09-27,"That made sense, thanks!",,
2.17712E+17,gomma#4017,2020-09-28,contracts are dope,,
2.17712E+17,gomma#4017,2020-09-28,i got used to types too. i never tried typed racket ü§î,,
1.30231E+17,sarna#3904,2020-09-28,I wish we could get some contract-based static analysis,,
4.56227E+17,Deleted User#0000,2020-09-28,So... static typing?,,
3.29023E+17,nixin72#3554,2020-09-28,Isn't that dependent types at that point?,,
4.56227E+17,Deleted User#0000,2020-09-28,Typed Racket has experimental refinement types.,,
4.56227E+17,Deleted User#0000,2020-09-28,https://docs.racket-lang.org/ts-reference/Experimental_Features.html,,
1.30231E+17,sarna#3904,2020-09-28,"well, I didn‚Äôt mean turning all contracts to [dependent] types",,
1.30231E+17,sarna#3904,2020-09-28,"I‚Äôd like a complete (will never reject a correct program), unsound (will accept some incorrect programs) type system
as an aid, basically",,
1.30231E+17,sarna#3904,2020-09-28,"like ‚Äúthis will 100% not work, you‚Äôre trying to pass a struct to `+`!‚Äù",,
1.30231E+17,sarna#3904,2020-09-28,"so I get notified about these obvious silly mistakes earlier than at runtime, when a contract fails",,
1.30231E+17,sarna#3904,2020-09-28,there are tools like this for python,,
1.30231E+17,sarna#3904,2020-09-28,"but they either have to infer the types, or you have to specify them
thing I‚Äôm talking about would infer them either from  the contracts (if available) or the code",,
1.30231E+17,sarna#3904,2020-09-28,CS people don‚Äôt seem to like unsound type systems though :/,,
2.17712E+17,gomma#4017,2020-09-28,id love an unsound type system üò±,,
2.17712E+17,gomma#4017,2020-09-28,i mean thats kind of what contracts feel like,,
2.17712E+17,gomma#4017,2020-09-28,"tbh i think contracts are better because they‚Äôre written where they matter, when you‚Äôre exporting",,
2.17712E+17,gomma#4017,2020-09-28,am I right?,,
2.17712E+17,gomma#4017,2020-09-28,allowing u to be unsafe if you want to,,
2.17712E+17,gomma#4017,2020-09-28,uf but contracts are runtime right?,,
1.30231E+17,sarna#3904,2020-09-28,"oh, yeah, I think contracts are complete and unsound too",,
1.30231E+17,sarna#3904,2020-09-28,TR is sound and incomplete,,
1.30231E+17,sarna#3904,2020-09-28,"and yeah, contracts are runtime checks - but some you could use at compile-time too",,
1.30231E+17,sarna#3904,2020-09-28,"like this example:
```scheme
(define/contract (deposit amount)
  (-> number? any)
  ; implementation goes here
  ....)
```",,
1.30231E+17,sarna#3904,2020-09-28,"if you pass a string literal to this function, something could warn you before you run the program :meow:",,
1.30231E+17,sarna#3904,2020-09-28,raku has these two mechanisms in their compiler (contracts + some static analysis) and it‚Äôs kinda confusing because you don‚Äôt know what gets checked when,,
1.30231E+17,sarna#3904,2020-09-28,if it was a separate tool it‚Äôd be neato,,
2.17712E+17,gomma#4017,2020-09-28,TRUE,,
2.66505E+17,notjack#9941,2020-09-28,"complete and unsound static checkers have a huge problem: if you improve them to catch more errors, you break existing code that used to compile fine",,
2.66505E+17,notjack#9941,2020-09-28,this is usually why type systems start from the other direction of rejecting too many programs rather than too few,,
2.66505E+17,notjack#9941,2020-09-28,it's much easier to change a static check to admit more programs than to admit fewer,,
1.30231E+17,sarna#3904,2020-09-29,doesn‚Äôt ‚Äúcomplete‚Äù mean it never rejects a correct program?,,
2.66505E+17,notjack#9941,2020-09-29,"""complete"" means ""never rejects a program that would run without error"" which is not always what people mean when they say ""correct""",,
1.30231E+17,sarna#3904,2020-09-29,"well, having mypy spew an error doesn‚Äôt prevent me from running my code and getting an exception in my face :meow:",,
2.66505E+17,notjack#9941,2020-09-29,"correct, but mypy doesn't show you type errors for code that you know _won't_ throw an exception",,
2.66505E+17,notjack#9941,2020-09-29,"example:
```
String foo() {
  boolean returnEarly = true;
  if (returnEarly) {
    return ""foo"";
  }
  return 42;
}
```
This function will never throw an exception. Most type systems, however, would reject it.",,
2.66505E+17,notjack#9941,2020-09-29,"A ""complete"" type system cannot reject it, because it can't prove it will throw an exception (because it doesn't)",,
2.66505E+17,notjack#9941,2020-09-29,"(by ""throw an exception"" I mean ""fuck up and return results of the wrong type, which I'm assuming will cause something somewhere to throw an exception"")",,
1.30231E+17,sarna#3904,2020-09-29,"well yes, that‚Äôs exactly what I meant ü§î",,
1.30231E+17,sarna#3904,2020-09-29,"could you maybe rephrase ‚Äúcorrect, but mypy doesn't show you type errors for code that you know _won't_ throw an exception‚Äù? it‚Äôs early in the morning and I don‚Äôt think I got it :meow:",,
2.66505E+17,notjack#9941,2020-09-29,"That function `foo` _does not cause any runtime type errors_, ever. It is a valid program. However it won't compile in languages like Java, C#, rust, haskell, or even C. So those languages have type systems that prevent you from running some valid programs.",,
1.30231E+17,sarna#3904,2020-09-29,"yes, their type systems are incomplete, right?",,
2.66505E+17,notjack#9941,2020-09-29,Right,,
1.30231E+17,sarna#3904,2020-09-29,and all are sound (not sure about C),,
1.30231E+17,sarna#3904,2020-09-29,then I got it ü§î,,
2.66505E+17,notjack#9941,2020-09-29,They're mostly sound. Proving soundness of type systems for real world programming languages is complex and hard,,
2.66505E+17,notjack#9941,2020-09-29,They at least try to be sound most of the time,,
2.66505E+17,notjack#9941,2020-09-29,(C is extremely not sound however),,
1.30231E+17,sarna#3904,2020-09-29,I think java had a soundness hole that was fixed? iirc,,
1.30231E+17,sarna#3904,2020-09-29,"well, all compilers have bugs, even if they claim to be sound and stuff",,
2.66505E+17,notjack#9941,2020-09-29,And they all allow FFI stuff so ü§∑,,
1.30231E+17,sarna#3904,2020-09-29,:meow:,,
2.66505E+17,notjack#9941,2020-09-29,soundness can have some practical obstacles,,
1.30231E+17,sarna#3904,2020-09-29,hope I don‚Äôt turn into Rich Hickey because of stuff like that :meow:,,
2.66505E+17,notjack#9941,2020-09-29,"yeah, I would say that the practical obstacles of soundness pale in comparison to the obstacles of unsoundness",,
1.30231E+17,sarna#3904,2020-09-29,can a dynamically typed system be sound?,,
1.30231E+17,sarna#3904,2020-09-29,or is it only for static types,,
2.66505E+17,notjack#9941,2020-09-29,I think the term only makes sense in the context of static checkers,,
1.30231E+17,sarna#3904,2020-09-29,"hm, okay",,
2.66505E+17,notjack#9941,2020-09-29,(I'm also far from an expert on type systems),,
1.30231E+17,sarna#3904,2020-09-29,"yeah, I‚Äôm an armchair computer scientist :meow:",,
4.56227E+17,Deleted User#0000,2020-09-29,me 2,,
1.30231E+17,sarna#3904,2020-09-29,I just wrote python in racket,,ü§™ (1)
1.30231E+17,sarna#3904,2020-09-29,was way easier than I thought :meow:,,
4.62028E+17,StephenD#5938,2020-09-29,What do you mean?,,
1.30231E+17,sarna#3904,2020-09-29,"it's for work, but this should give you the idea",https://cdn.discordapp.com/attachments/618895179343986688/760483885430865950/unknown.png,meow (1)
1.30231E+17,sarna#3904,2020-09-29,I also used a box to keep track of state :meow:,,
4.62028E+17,StephenD#5938,2020-09-29,Mmmm. Nested `for` loops.,,
4.62028E+17,StephenD#5938,2020-09-29,But at least you are writing racket for work!,,
1.30231E+17,sarna#3904,2020-09-29,hope my manager doesn't ask me to upload this script anywhere :meow:,,
4.62028E+17,StephenD#5938,2020-09-29,Just compile it.,,
4.56227E+17,Deleted User#0000,2020-09-29,Haha,,
1.30231E+17,sarna#3904,2020-09-29,lol,,
1.30231E+17,sarna#3904,2020-09-29,compile it and tell him I wrote in go,,
1.30231E+17,sarna#3904,2020-09-29,always works :meow:,,
4.62028E+17,StephenD#5938,2020-09-29,:meow:,,
4.56227E+17,Deleted User#0000,2020-09-29,:meow:,,
1.30231E+17,sarna#3904,2020-09-29,it works! :meow:,,
1.30231E+17,sarna#3904,2020-09-29,"I mean the script, not the golang coverup",,meow (1)
1.30231E+17,sarna#3904,2020-09-29,the only thing I miss from python is `getpass`,,
1.30231E+17,sarna#3904,2020-09-29,for now I'm just using an `.env` file,,
4.62028E+17,StephenD#5938,2020-09-29,What does get pass do?,,
1.30231E+17,sarna#3904,2020-09-29,gets a password from the terminal,,
1.30231E+17,sarna#3904,2020-09-29,(without showing what user types),,
4.56227E+17,Deleted User#0000,2020-09-29,um https://docs.racket-lang.org/get-pass/index.html,,üëç (1)
1.30231E+17,sarna#3904,2020-09-29,_facepalms_,,
1.30231E+17,sarna#3904,2020-09-29,"I searched for pass, password, getpass",,
1.30231E+17,sarna#3904,2020-09-29,thanks erkin :),,
4.56227E+17,Deleted User#0000,2020-09-29,No problem! :meowblush:,,
4.56227E+17,Deleted User#0000,2020-09-29,The implementation is surprisingly simple too.,,
4.56227E+17,Deleted User#0000,2020-09-29,It's a little bit of termios FFI.,,
1.30231E+17,sarna#3904,2020-09-29,"~50 lines, nice",,
1.30231E+17,sarna#3904,2020-09-29,hmm I have a problem with breaking,,
1.30231E+17,sarna#3904,2020-09-29,how do you do something and break in a for loop?,,
1.30231E+17,sarna#3904,2020-09-29,"I tried different combinations of #:break and #:final, nothing really worked",,
4.56227E+17,Deleted User#0000,2020-09-29,Maybe a recursive procedure would work better then?,,
4.56227E+17,Deleted User#0000,2020-09-29,How did you use `#:break`?,,
1.30231E+17,sarna#3904,2020-09-29,"oh hold on, it was the nestedness",,
4.56227E+17,Deleted User#0000,2020-09-29,Haha,,
1.30231E+17,sarna#3904,2020-09-29,also - (box #f) is truthy :meow:,,
1.30231E+17,sarna#3904,2020-09-29,lol it was literally these two,,
1.30231E+17,sarna#3904,2020-09-29,now it works perfectly :meowblush:,,
4.56227E+17,Deleted User#0000,2020-09-29,:racket:,,racket (5)
4.56227E+17,Deleted User#0000,2020-09-29,"Never forget: If it ain't `eq? #f`, it's truthy.",,
1.30231E+17,sarna#3904,2020-09-29,"yeah, I forgot to unbox it :meowblush:",,
4.66395E+17,oaktownsam#0815,2020-09-29,"@sarna wip, not getpass (but I should add a plugin) https://github.com/samdphillips/racket-keyring",,
4.66395E+17,oaktownsam#0815,2020-09-29,"Re: json slowness, I think it's related to general slowness of io ports",,
1.30231E+17,sarna#3904,2020-09-29,"@oaktownsam oh neat, thanks! I should learn how to use keyrings, lol",,
1.30231E+17,sarna#3904,2020-09-29,can I somehow make io ports faster? üëÄ,,
1.30231E+17,sarna#3904,2020-09-29,"like, set some flag or whatever",,
4.66395E+17,oaktownsam#0815,2020-09-29,PLT_MAKE_PORTS=faster (kidding),,
1.30231E+17,sarna#3904,2020-09-29,:meow:,,
1.30231E+17,sarna#3904,2020-09-29,in CL I‚Äôd simply (declaim (speed 3) (safety 0)),,
1.30231E+17,sarna#3904,2020-09-29,"it would segfault immediately, but it‚Äôd be fast",,meow (1)
4.66395E+17,oaktownsam#0815,2020-09-29,"I don't know what the plans are to make ports faster, but I know there is an issue open for it.",,
1.30231E+17,sarna#3904,2020-09-29,"o, I‚Äôll look for that",,
4.66395E+17,oaktownsam#0815,2020-09-29,"It's a bit stale last I checked, but maybe worth a ""me too"" type post",,
1.30231E+17,sarna#3904,2020-09-29,"https://github.com/racket/racket/issues/1388
4 years and no comments :meow:",,
4.66395E+17,oaktownsam#0815,2020-09-29,as for json an interesting experiment would be to try to port the lib to use an in memory bytes and parse from that and see if it would be faster.,,
1.30231E+17,sarna#3904,2020-09-29,wouldn‚Äôt I have to load the file into memory using a port anyway?,,
4.66395E+17,oaktownsam#0815,2020-09-29,One big read is more efficient that the smaller reads,,
1.30231E+17,sarna#3904,2020-09-29,"oh true, I thought I was doing just that. I‚Äôll dig deeper üëÄ",,
4.66395E+17,oaktownsam#0815,2020-09-29,get-pass doesn't seem to work on my system,,
4.66395E+17,oaktownsam#0815,2020-09-29,Linux w/ RacketCS,,
4.66395E+17,oaktownsam#0815,2020-09-29,Oh it might not work running under xrepl I think,,
4.66395E+17,oaktownsam#0815,2020-09-29,Yeah doesn't like if the `current-input-port` is not a terminal.,,
4.56227E+17,Deleted User#0000,2020-09-29,You can give it a different port with `#:in`,,
4.66395E+17,oaktownsam#0815,2020-09-29,"Yes but if you give anything not a terminal you get an opaque error
```
Welcome to Racket v7.8 [cs].
> ,r get-pass
> (get-pass)
; apply: bad value for conversion
;   ctype: _int32
;   value: #f
; [,bt for context]
```",,
4.66395E+17,oaktownsam#0815,2020-09-29,"Actually anything not a unix fd because it works if you pipe in a value, but `(with-input-from-string ""secrets"" (lambda () (get-pass))` fails.",,
4.56227E+17,Deleted User#0000,2020-09-29,Hmm,,
4.56227E+17,Deleted User#0000,2020-09-29,Maybe you could add a check to see if it's talking to a tty.,,
4.66395E+17,oaktownsam#0815,2020-09-29,https://github.com/smitchell556/get-pass/issues/1,,
4.66395E+17,oaktownsam#0815,2020-09-29,It probably also has problems running in DrRacket,,
1.30231E+17,sarna#3904,2020-09-30,match-string makes my emacs freeze :meow:,,
2.75501E+17,Plane#0324,2020-09-30,frown,,
1.30231E+17,sarna#3904,2020-09-30,"@ json slow - I tried another niche language, a compiled one this time - crystal
with a release build, it takes 1s to parse this file :meow:",,
1.30231E+17,sarna#3904,2020-09-30,seems like we really can‚Äôt compete with python,,
1.30231E+17,sarna#3904,2020-09-30,"(racket 2.5s, python 0.5s)",,
4.62028E+17,StephenD#5938,2020-09-30,How much json do you need to parse and how often?,,
4.56227E+17,Deleted User#0000,2020-09-30,Racket's jsexprs are too high level and readable in comparison to Python's performance-oriented low level implementation.,,
4.56227E+17,Deleted User#0000,2020-09-30,There's an old parser implementation that uses streaming: https://www.neilvandyke.org/racket/json-parsing/,,
4.56227E+17,Deleted User#0000,2020-09-30,I wonder how it performs.,,
1.30231E+17,sarna#3904,2020-09-30,"@StephenD to be honest 2.5s is totally bearable - it‚Äôs a ~25MB file, and I needed to run the program only once",,
1.30231E+17,sarna#3904,2020-09-30,but still annoying :meow:,,
1.30231E+17,sarna#3904,2020-09-30,I have to learn to live with annoyances tho :meowblush: or I‚Äôll go insane,,
4.62028E+17,StephenD#5938,2020-09-30,if you only have to do it once then just use python.,,
4.62028E+17,StephenD#5938,2020-09-30,I love racket but there is no point punishing yourself.,,
1.30231E+17,sarna#3904,2020-09-30,"@Deleted User yeah, jsexprs are awesome! I haven‚Äôt seen anything better for json in a lispy language",,
1.30231E+17,sarna#3904,2020-09-30,it was more fun in racket!,,
4.62028E+17,StephenD#5938,2020-09-30,:meow:,,
1.30231E+17,sarna#3904,2020-09-30,just a bit slower :meowblush:,,
4.56227E+17,Deleted User#0000,2020-09-30,"Racket generally considers performance secondary to readable, high-level code.",,
4.56227E+17,Deleted User#0000,2020-09-30,"(not always, mind you)",,
4.56227E+17,Deleted User#0000,2020-09-30,I like it but it's probably because I don't use Racket in production.,,
1.30231E+17,sarna#3904,2020-09-30,I don‚Äôt like that you can‚Äôt turn off contracts,,
1.30231E+17,sarna#3904,2020-09-30,"like, at all - not even with a scoped, (call-without-checking ...)-style thing",,
4.62028E+17,StephenD#5938,2020-09-30,it is an interesting idea.,,
1.30231E+17,sarna#3904,2020-09-30,"(btw - what are you using in production? I don‚Äôt really need the speed, so mostly python)",,
4.56227E+17,Deleted User#0000,2020-09-30,What I run in production is up to the product manager's whims. :meow:,,meow (1)
4.62028E+17,StephenD#5938,2020-09-30,I use cache objectscript on Intersystems cache 'Health Connect' - I'm a health systems integrator in a hospital,,
4.56227E+17,Deleted User#0000,2020-09-30,"Hey, isn't that the proprietary object-oriented Mumps dialect?",,
4.62028E+17,StephenD#5938,2020-09-30,yes. But is it a OO language built a level above the core mumps code.,,
4.56227E+17,Deleted User#0000,2020-09-30,Neat,,
4.62028E+17,StephenD#5938,2020-09-30,(hospital IT security is so tight I cant even run racket scripts),,
4.56227E+17,Deleted User#0000,2020-09-30,"Yeah, understandable.",,
4.56227E+17,Deleted User#0000,2020-09-30,The current place I work in is a Java house with occasional JavaScript. I don't touch the development parts though.,,
4.56227E+17,Deleted User#0000,2020-09-30,"At the previous work, I wrote some Python and Ruby, and then sneaked in some Perl and CHICKEN Scheme.",,
4.62028E+17,StephenD#5938,2020-09-30,Nice. I did a little perl for digital library stuff a long time ago.,,
4.56227E+17,Deleted User#0000,2020-09-30,"Sneaked as in we had the liberty to do whatever we wanted for small glue scripts on our own servers, rather than customers' machines.",,
1.30231E+17,sarna#3904,2020-09-30,"@Deleted User I mean that's why I use python - my manager said what I write should be ""readable"" for him and team members :meow: 
(doesn't matter that he doesn't really code, and my teammates know it so well they use camelCase variables in their scripts)
((n once I got ""I don't know what ""decorator"" means"" during code review :meow: ))",,
4.62028E+17,StephenD#5938,2020-09-30,(I mostly meant nice about the chicken scheme),,
4.56227E+17,Deleted User#0000,2020-09-30,Ah,,
4.62028E+17,StephenD#5938,2020-09-30,confession time. I don't know what a decorator is either. tis a java thing right??,,
1.30231E+17,sarna#3904,2020-09-30,"no, a python thing :meow:",,
4.62028E+17,StephenD#5938,2020-09-30,:meow:,,
1.30231E+17,sarna#3904,2020-09-30,"```python
@foo # <- decorator
def bar():
  print(""something"")
```",,
1.30231E+17,sarna#3904,2020-09-30,it wraps a function definition,,
4.56227E+17,Deleted User#0000,2020-09-30,bad memories,,
4.56227E+17,Deleted User#0000,2020-09-30,I had to use it a lot.,,
1.30231E+17,sarna#3904,2020-09-30,"you could make one called `@timeit`, for example - and it'd time each function invocation",,
4.62028E+17,StephenD#5938,2020-09-30,Nice,,
1.30231E+17,sarna#3904,2020-09-30,"I tried using perl instead of python for our stuff, but ""perl dead and unreadable"" :meow:",,
1.30231E+17,sarna#3904,2020-09-30,"..then I tried ruby, but ""why not just python"" :meow:",,
4.56227E+17,Deleted User#0000,2020-09-30,:meow:,,
1.30231E+17,sarna#3904,2020-09-30,so python it is :meow:,,
4.56227E+17,Deleted User#0000,2020-09-30,"It sounds like they went ""why anything other than Python when you can Python?""",,
1.30231E+17,sarna#3904,2020-09-30,yeah,,
1.30231E+17,sarna#3904,2020-09-30,basically the only reason is popularity,,
4.62028E+17,StephenD#5938,2020-09-30,Python is fine. It‚Äôs just not interesting to me.,,plusone (1)
1.30231E+17,sarna#3904,2020-09-30,"but like.. people on my team write loops like this in python:
```python
for i in range(0, len(regs)):
    reg = regs[i]
    rname = reg['RegionName']
```
(copy-pasted from some AWS glue)",,
4.56227E+17,Deleted User#0000,2020-09-30,I wrote my bachelor's thesis project in Hy just to avoid Python.,,"ü§£ (1),meow (1)"
4.56227E+17,Deleted User#0000,2020-09-30,"I find it too tedious to use. It tries to force you to its will. ""My way or highway""",,
1.30231E+17,sarna#3904,2020-09-30,hope you'll never have to try go,,
4.56227E+17,Deleted User#0000,2020-09-30,hahah,,
4.56227E+17,Deleted User#0000,2020-09-30,"Yeah, Go is even more adamant about ""the one true way"".",,
4.56227E+17,Deleted User#0000,2020-09-30,Completely stifles expressivity.,,meow (1)
1.30231E+17,sarna#3904,2020-09-30,"btw, have you tried raku? overall, I want to like it, but it's just so complex :meow: and that nil propagation stuff is.. I don't like it",,
1.30231E+17,sarna#3904,2020-09-30,"(nil can be returned from any function, even if it's typed
and all methods cast on nil just return nil, no exceptions)",,
4.56227E+17,Deleted User#0000,2020-09-30,I want to try it but the ecosystem feels like a maze.,,meow (1)
4.62028E+17,StephenD#5938,2020-09-30,Never tried it. Always seemed to be a response to python.,,
4.62028E+17,StephenD#5938,2020-09-30,,https://cdn.discordapp.com/attachments/618895179343986688/760819951660826654/image0.jpg,ü§£ (1)
3.80947E+17,parlortricks#7425,2020-09-30,"> I wrote my bachelor's thesis project in Hy just to avoid Python.
@Deleted User have you tried coconut? it is similar from what ive read",,
1.30231E+17,sarna#3904,2020-09-30,"@StephenD well, it was supposed to be Perl 6",,
4.56227E+17,Deleted User#0000,2020-09-30,There's Perl 7 now.,,
4.56227E+17,Deleted User#0000,2020-09-30,"@parlortricks No, let me take a look.",,
4.62028E+17,StephenD#5938,2020-09-30,(Racket developer uses plot package to put earth on cube...because ‚Äòwhy not‚Äô),,
1.30231E+17,sarna#3904,2020-09-30,"yeah, good for perl (I think)",,
3.80947E+17,parlortricks#7425,2020-09-30,"> @parlortricks No, let me take a look.
@Deleted User  i got confused, its functional, not really lispy",,
4.62028E+17,StephenD#5938,2020-09-30,So there is raku AND Perl 7?,,
1.30231E+17,sarna#3904,2020-09-30,perl 7 is just a perl version,,
1.30231E+17,sarna#3904,2020-09-30,they went from 5 straight to 7 not to confuse people,,
1.30231E+17,sarna#3904,2020-09-30,"(actually not sure if there's perl 7 already, or just in plans)",,
4.56227E+17,Deleted User#0000,2020-09-30,Perl 7 is going to be different though.,,
4.56227E+17,Deleted User#0000,2020-09-30,They're going to make it more modern.,,
4.56227E+17,Deleted User#0000,2020-09-30,"Make `use strict; use warnings;` etc default, for example.",,
4.62028E+17,StephenD#5938,2020-09-30,Ahh it‚Äôs still Perl without the perl6/raku breaking changes,,
4.56227E+17,Deleted User#0000,2020-09-30,Yeah,,
1.30231E+17,sarna#3904,2020-09-30,function signatures? :meow:,,
3.80947E+17,parlortricks#7425,2020-09-30,its just perl with sane defaults?,,
4.56227E+17,Deleted User#0000,2020-09-30,Raku no longer has much in common with Perl any more.,,
4.56227E+17,Deleted User#0000,2020-09-30,"Kinda, yeah. More strict and has boilerplates and folk idioms built in.",,
4.56227E+17,Deleted User#0000,2020-09-30,AFAICT you can still configure it to run Perl 5 scripts in a compatibility mode.,,plusone (1)
3.80947E+17,parlortricks#7425,2020-09-30,wonder if my company will upgrade to new perl then,,
4.56227E+17,Deleted User#0000,2020-09-30,It's supposedly easy to migrate from 5 to 7.,,
3.80947E+17,parlortricks#7425,2020-09-30,"unless the upgrade can be billable to a customer, i doubt ittl happen for me, ha",,
4.56227E+17,Deleted User#0000,2020-09-30,haha yeah,,
1.30231E+17,sarna#3904,2020-09-30,we have machines with 5.16 :meow:,,
4.62028E+17,StephenD#5938,2020-09-30,Which industry/sector?,,
1.30231E+17,sarna#3904,2020-09-30,is that a question for me?,,
4.62028E+17,StephenD#5938,2020-09-30,Yes- about being a Perl shop (I‚Äôm guessing recruitment or local govt),,
1.30231E+17,sarna#3904,2020-09-30,"ah, no - I just meant we have 5.16 installed",,
1.30231E+17,sarna#3904,2020-09-30,we don't use it much,,
1.30231E+17,sarna#3904,2020-09-30,"there are some old scripts, but they're unused",,
4.62028E+17,StephenD#5938,2020-09-30,Ahh,,
1.30231E+17,sarna#3904,2020-09-30,I know it's 5.16 because I wanted to use it instead of python 2 :meow:,,
1.30231E+17,sarna#3904,2020-09-30,turns out 5.16 is old as hell too,,
4.56227E+17,Deleted User#0000,2020-09-30,"In my secondary job, they're trying to migrate from Perl to Python.",,
1.30231E+17,sarna#3904,2020-09-30,a lot of people do that now,,
1.30231E+17,sarna#3904,2020-09-30,rewriting from python/java to go is a popular thing too,,
4.62028E+17,StephenD#5938,2020-09-30,Not rust?,,
4.62028E+17,StephenD#5938,2020-09-30,Or node?,,
1.30231E+17,sarna#3904,2020-09-30,not many companies rewrite stuff in rust,,
1.30231E+17,sarna#3904,2020-09-30,"it's everywhere on the programming forums, but in the industry it's pretty niche",,
1.30231E+17,sarna#3904,2020-09-30,zalando dropped rust a few months ago..,,
1.30231E+17,sarna#3904,2020-09-30,but node - yeah,,
4.62028E+17,StephenD#5938,2020-09-30,i'm honestly surprised. I would have thought the safe+fast would push a lot of buttons,,
1.30231E+17,sarna#3904,2020-09-30,I wish my team didn't perceive ruby as legacy crap (it's because they have too many problems with the old chef version they have to support and they want to get rid of everything ruby now),,
1.30231E+17,sarna#3904,2020-09-30,"turns out safe+fast is not the right tradeoff, for most enterprise stuff",,
1.30231E+17,sarna#3904,2020-09-30,"popular+popular, however..",,
3.80947E+17,parlortricks#7425,2020-09-30,"fast just means throw more compute at the problem  so youre left with safe...safe from what? memory issues, just reboot",,
1.30231E+17,sarna#3904,2020-09-30,yeah basically - my friend works at zalando and their JVM services just spin 500 pods when needed,,
1.30231E+17,sarna#3904,2020-09-30,"their rust service works perfectly fine, but zalando wants ""more cross-team collaboration""",,
1.30231E+17,sarna#3904,2020-09-30,so everything but node n jvm got trashed,,
3.80947E+17,parlortricks#7425,2020-09-30,at least they are putting their eggs into two baskets,,
1.30231E+17,sarna#3904,2020-09-30,"it's funny, because they rewrote that service from scala to rust - it was too slow and architecturally complex
I wonder how it survives a rewrite from rust to kotlin/java",,
1.30231E+17,sarna#3904,2020-09-30,"it'll probably be slow as heck and very complex because of all the performance hacks they had to apply - but hey, people from other teams will be able to chime in",,
4.62028E+17,StephenD#5938,2020-09-30,enterprise is weird cause you can throw more servers at the problem - so in that case rust was never going to prosper in a scala environment.,,
4.62028E+17,StephenD#5938,2020-09-30,(someone else is payign for the servers),,
4.62028E+17,StephenD#5938,2020-09-30,(and they are not a significant cost anyway),,
1.30231E+17,sarna#3904,2020-09-30,programmers are more expensive than hardware these days,,
3.80947E+17,parlortricks#7425,2020-09-30,"enterprise can be hilarious, our architect decided we should have nvidia gtx1080ti in all our OCR machines because they do graphical work, not because the app is coded for CUDA....",,
3.80947E+17,parlortricks#7425,2020-09-30,graphical being it opened an image as an input file,,
3.80947E+17,parlortricks#7425,2020-09-30,:meow:,,
3.80947E+17,parlortricks#7425,2020-09-30,"rust is great somewhere, but ive not seen it at my work",,
1.30231E+17,sarna#3904,2020-09-30,csv reading and writing is still slower in racket than in python,,
1.30231E+17,sarna#3904,2020-09-30,I'm :meow:,,
1.30231E+17,sarna#3904,2020-09-30,I compiled it,,
1.30231E+17,sarna#3904,2020-09-30,and it's faster!!,,
1.30231E+17,sarna#3904,2020-09-30,(excluding startup),,
1.30231E+17,sarna#3904,2020-09-30,:meowblush:,,
4.66395E+17,oaktownsam#0815,2020-09-30,"> (racket 2.5s, python 0.5s)
@sarna odd.  In my synthetic test I got Racket at about 1/2 as fast as Python",,
1.30231E+17,sarna#3904,2020-09-30,was it just loading the file from disk? or loading + parsing JSON,,
1.30231E+17,sarna#3904,2020-09-30,"hm, I didn‚Äôt compile this one I think - I should‚Äôve",,
4.66395E+17,oaktownsam#0815,2020-09-30,Loading and parsing an 800k file 1000 times,,
4.66395E+17,oaktownsam#0815,2020-09-30,"I don't have the numbers, but on this computer it was (from memory) Python: ~24s, Racket: : ~56s",,
1.30231E+17,sarna#3904,2020-09-30,"oh, interesting. I‚Äôll check again tomorrow",,
4.66395E+17,oaktownsam#0815,2020-09-30,"> $ racket read-bench.rkt 
> cpu time: 60036 real time: 60426 gc time: 1770
> 
> $ python3 read_bench.py 
> 26.22542119026184 secs elapsed",,
4.66395E+17,oaktownsam#0815,2020-09-30,It is totally possible that your document is a different shape and maybe there would be more GC pressure,,
4.56227E+17,Deleted User#0000,2020-09-30,"Racket also has a relatively slow startup time, especially if you rely on too many libraries.",,
4.56227E+17,Deleted User#0000,2020-09-30,I try not to use `#lang racket` until the `require`s get cumbersome.,,plusone (1)
4.66395E+17,oaktownsam#0815,2020-09-30,That script is `racket/base` and `raco make read-bench.rkt` was run beforehand,,
1.30231E+17,sarna#3904,2020-09-30,`#lang racket` takes ~0.35s to load on my work laptop,,
1.30231E+17,sarna#3904,2020-09-30,that still leaves 2s+,,
4.66395E+17,oaktownsam#0815,2020-09-30,:meow:,,
3.29023E+17,nixin72#3554,2020-09-30,I wish Racket had something like Clojure's `->` and `->>` macros :P,,
1.30231E+17,sarna#3904,2020-09-30,same,,
1.30231E+17,sarna#3904,2020-09-30,I think they were implemented somewhere?,,
1.30231E+17,sarna#3904,2020-09-30,https://docs.racket-lang.org/threading/index.html,,
1.30231E+17,sarna#3904,2020-09-30,there ya go,,
1.30231E+17,sarna#3904,2020-09-30,I like how they solved ocaml‚Äôs problem with a hole,,meow (2)
4.56227E+17,Deleted User#0000,2020-09-30,They're very easy to implement from memory.,,
4.56227E+17,Deleted User#0000,2020-09-30,I just put them in a utility file when I need them instead of depending on a library.,,
1.30231E+17,sarna#3904,2020-09-30,the most popular OCaml stdlib replacement uses named arguments for everything instead,https://cdn.discordapp.com/attachments/618895179343986688/760912681414426654/image0.png,
1.30231E+17,sarna#3904,2020-09-30,@Deleted User why? code reuse is good :meow:,,
4.56227E+17,Deleted User#0000,2020-09-30,`doto` is also nice.,,
4.56227E+17,Deleted User#0000,2020-09-30,Depending on an external library is expensive. There's a slippery slope towards leftpadism here.,,
1.30231E+17,sarna#3904,2020-09-30,this library is much bigger than leftpad,,
1.30231E+17,sarna#3904,2020-09-30,I noticed many people who code in Scheme dialects don‚Äôt like dependencies,,
1.30231E+17,sarna#3904,2020-09-30,not sure why,,
2.66505E+17,notjack#9941,2020-09-30,lousy package managers plays a part i think,,
1.30231E+17,sarna#3904,2020-09-30,some Scheme dialects don‚Äôt even have one,,
1.30231E+17,sarna#3904,2020-09-30,:meow:,,
7.43864E+17,beru#4280,2020-09-30,I wish scheme has 1 main implementation,,
4.66395E+17,oaktownsam#0815,2020-09-30,also unreliable/non-existant library systems,,
1.30231E+17,sarna#3904,2020-09-30,racket is one true scheme :meow:,,
1.30231E+17,sarna#3904,2020-09-30,"jokes aside, maybe r7rs-large gets there",,
3.29023E+17,nixin72#3554,2020-09-30,"Oh shit, good to know this exists! Thanks @sarna!",,
1.30231E+17,sarna#3904,2020-09-30,"it‚Äôs only 125 lines, surprisingly",,
4.66395E+17,oaktownsam#0815,2020-09-30,threading is a very good macro,,
1.30231E+17,sarna#3904,2020-09-30,`and~>` sounds very useful,,
3.29023E+17,nixin72#3554,2020-09-30,"Wow, that's a lot smaller than I would expect.",,
3.29023E+17,nixin72#3554,2020-09-30,"Oh, of course it's Lexi Lambda lol, they have *so much* cool stuff",,
2.66505E+17,notjack#9941,2020-09-30,tip for using threading: _always_ use the hole markers,,
4.56227E+17,Deleted User#0000,2020-09-30,I quite like Akku.,,
4.56227E+17,Deleted User#0000,2020-09-30,It's the only reliable package manager for Scheme I've seen.,,
4.56227E+17,Deleted User#0000,2020-09-30,"It's in the tradition of pip w/ virtualenv, though. Not in the tradition of CPAN like raco pkg (PlaneT) is.",,
1.30231E+17,sarna#3904,2020-09-30,I heard good things about it,,
1.30231E+17,sarna#3904,2020-09-30,"and personally I prefer this way of doing things, instead of the CPAN way",,
1.30231E+17,sarna#3904,2020-09-30,problems arise when you gotta have more than one version of some library :/,,
1.30231E+17,sarna#3904,2020-09-30,"Raku allows that, idk about Perl",,
1.30231E+17,sarna#3904,2020-09-30,in OCaml I had a couple of cases like ‚Äúoh you‚Äôre pulling this library? I have to downgrade 10 of your packages from 3.0 to 0.12!‚Äù,,
3.29023E+17,nixin72#3554,2020-09-30,"Is this something Nix is able to solve? It's able to solve this issue with system packages, idk about packages for language's package managers though",,
1.30231E+17,sarna#3904,2020-09-30,I heard they interact badly (Nix and language‚Äôs package managers),,
1.30231E+17,sarna#3904,2020-09-30,not sure though,,
4.56227E+17,Deleted User#0000,2020-09-30,https://github.com/fractalide/racket2nix,,meowblush (1)
1.30231E+17,sarna#3904,2020-09-30,as I‚Äôve never tried personally,,
1.30231E+17,sarna#3904,2020-09-30,can I have the same issue with Racket that I had in OCaml? üëÄ,,
3.29023E+17,nixin72#3554,2020-09-30,"No idea, I've never tried nix at all personally, but I have some friends that have been shilling it recently, and this problem is exactly what it's meant to solve ü§∑‚Äç‚ôÇÔ∏è",,
1.30231E+17,sarna#3904,2020-09-30,"I tried nix, too complex for me :meow:",,
1.30231E+17,sarna#3904,2020-09-30,same with guix,,
2.66505E+17,notjack#9941,2020-09-30,nix looks neat,,
2.66505E+17,notjack#9941,2020-09-30,I want to do Weird things to it though,,
1.30231E+17,sarna#3904,2020-09-30,"it looks great, but it‚Äôs a big paradigm shift",,
2.66505E+17,notjack#9941,2020-09-30,feeling like sharing some Spice today so I'm here to say I've decided that `#true` and `#false` are much better than `#t` and `#f`,,"üçâ (2),meow (1)"
4.66395E+17,oaktownsam#0815,2020-09-30,That's some bold spice.,,
4.62028E+17,StephenD#5938,2020-09-30,Teaching languages got it right,,üçâ (1)
2.66505E+17,notjack#9941,2020-09-30,"_really_ bold spice would be saying it should just be `true` and `false` which should be bound to the values, so it doesn't have to be Special Reader Magic, but I don't think it's realistic to suggest that to other racketeers.",,
2.66505E+17,notjack#9941,2020-09-30,"the far more pressing problem is that `#t` and `#f` are pointlessly inscrutable shorthands that save three characters apiece at the expense of 1) preventing me from telling which is which, and 2) having to explain this nonsense to non-lisp people",,
1.30231E+17,sarna#3904,2020-09-30,some fonts make t and f *really* similar :meow:,,
3.5323E+17,Alex Knauth#4895,2020-09-30,`true` and `false` would make more sense if match-expanders could be identifiers,,üíØ (2)
1.30231E+17,sarna#3904,2020-09-30,~~`#y` and `#n` gang~~,,üî• (3)
4.56227E+17,Deleted User#0000,2020-09-30,Why not `#true` and `#false`?,,
4.66395E+17,oaktownsam#0815,2020-09-30,Yeah I'm team `true` and `false`.  Partly because I want `#` to be a magic reader hook.  Also writing `#` reader hooks should be easier.,,
4.56227E+17,Deleted User#0000,2020-09-30,"I don't really like the idea of hardcoding two plain identifiers as a different, self-evaluating type.",,
4.56227E+17,Deleted User#0000,2020-09-30,I like the Scheme tradition of using the `#` prefix for tokens treated to be separately by the reader.,,
2.66505E+17,notjack#9941,2020-09-30,Because that's how any other two-element enum type you'd make would look,,
2.66505E+17,notjack#9941,2020-09-30,"it'd have two constant values, bound to identifiers and exported by a module",,
2.66505E+17,notjack#9941,2020-09-30,"They wouldn't be hard coded, `true` and `false` would be identifiers bound with `define` and imported from a module or the enclosing `#lang`, just like any other constants would be.",,
2.66505E+17,notjack#9941,2020-09-30,"They wouldn't be hard coded, `true` and `false` would be identifiers bound with `define` and imported from a module or the enclosing `#lang`, just like any other named constants would be.",,
1.93202E+17,rocketnia#4517,2020-09-30,"you know stuff like `caddaddr`? at one point in like 2010, I was thinking of chaining ""front"" and ""tail"" operations like `fttftt`",,
2.66505E+17,notjack#9941,2020-09-30,_omg_,,
1.93202E+17,rocketnia#4517,2020-09-30,"these would *of course* be booleans, and you'd call a cons cell as a boolean-taking function to get its front or tail",,
1.93202E+17,rocketnia#4517,2020-09-30,but that was a long time ago and feels silly now,,
2.66505E+17,notjack#9941,2020-09-30,I've had plenty of those ideas,,
1.93202E+17,rocketnia#4517,2020-09-30,"or maybe it was ""first"" rather than ""front""... either way, really",,
2.66505E+17,notjack#9941,2020-09-30,"one time I wanted to change `require` to perform a DNS-like hierarchical resolution of paths, so `(require foo/bar/baz)` would first `(require foo)`, look in a `#%links` export or something for a hash table to lookup `bar` in, then require that and do another lookup for `baz`, then finally require that",,
1.93202E+17,rocketnia#4517,2020-09-30,sounds great!,,
2.66505E+17,notjack#9941,2020-09-30,I can't remember _why_ I wanted this or what problem it was supposed to fix,,
2.66505E+17,notjack#9941,2020-09-30,"and nowadays I just shrug and go ""if I'm changing something as fundamental as `require` specs, fuck it, just make them URLs""",,
1.93202E+17,rocketnia#4517,2020-09-30,"probably helpful for organizing codebases in ways that don't have their directory structure determined by their public interface, or for dependency injection to replace one whole subtree of module paths with another as far as certain modules are concerned...",,
2.66505E+17,notjack#9941,2020-09-30,yeah but like,,
2.66505E+17,notjack#9941,2020-09-30,"I couldn't remember why I would want to do either of those things, instead of just organizing modules the normal way",,
1.93202E+17,rocketnia#4517,2020-09-30,"peraonally though, I like to think of the module path as being like a kind of authorization; if you're being loaded at a module path, that means it's up to you and only you to define things that other modules are expecting at that path",,
1.93202E+17,rocketnia#4517,2020-09-30,"I don't know if this is strictly true in Racket, but it seems true as long as people don't do dynamic loading",,
1.93202E+17,rocketnia#4517,2020-09-30,"My system of custom variables is an exciting project. Over the past week, I've already made a big deal out of two hygiene-related surprises in Racket that turned out to be misunderstandings on ny part. :-p",,
2.66505E+17,notjack#9941,2020-09-30,whatcha makin? :p,,
1.93202E+17,rocketnia#4517,2020-09-30,"The motivation of this system is to represent something like type classes or implicit arguments. Where an operation would take an implicit argument or type class constraint, I'm thinking of treating that like an anaphoric variable use.

Not an anaphor that uses syntax parameters though. An anaphor more like `#%app`.

And it wouldn't be a single name-based binding so much as a database that contains compound relations, like (handwavingly) ""collection type T works with iterator functionality F, and here's how.""",,
2.66505E+17,notjack#9941,2020-09-30,"huh, I definitely don't get the details, but the big picture sounds neat",,
1.93202E+17,rocketnia#4517,2020-09-30,I'm not sure I've figured out all the details either. Currently I have a proof-of-concept system of variables that consists of arbitrary transformer-phase values (matched using `equal?) that are associated with some number of run-time value bindings.,,
1.93202E+17,rocketnia#4517,2020-09-30,so it seems I could use this to represent values that have associated static info (including things like variables with ellipsis depths) as well as constraints that extrinsically hold static (and run time) information about other variables in scope,,
1.93202E+17,rocketnia#4517,2020-09-30,it could go a lot of places XD,,
2.66505E+17,notjack#9941,2020-09-30,"overload resolution seems related, maybe?",,
1.93202E+17,rocketnia#4517,2020-09-30,yeah!,,
1.93202E+17,rocketnia#4517,2020-09-30,"anyway, the first thing I wanna use it for is to make a DSL for side effects, wherein some side effect systems _can_ compile simply to Racket side effects, but others can compile to other languages, or compile to more complex ways to model side effects within Racket",,
1.93202E+17,rocketnia#4517,2020-09-30,"well, I have my sights set low enough at the moment that I'm not aiming to compile to languages other than Racket",,
1.93202E+17,rocketnia#4517,2020-09-30,"speaking of overload resolution, I've got some ideas in mind for modules that can be customized with a set of extensions and can determine a transformed set of extensions. So if you want one of my macros to have a `set!` transformer, for instance, maybe I can define my macro in a way that takes extensions like that into account.",,
1.93202E+17,rocketnia#4517,2020-09-30,"the thing I'm most hoping to use that for is defining modules which can have customized contract policies, like turning off the contracts of one of their dependencies",,
2.66505E+17,notjack#9941,2020-09-30,"more easily configurable contracts is something I want, though I'm not yet sure in what way I want them",,
2.66505E+17,notjack#9941,2020-09-30,since it's about turning off edges between modules rather than just a straight switch on each module,,
1.30231E+17,sarna#3904,2020-10-01,"@oaktownsam OCaml (on default settings) takes 0.6s, Racket takes 2.5s, Python takes 0.57s",,
1.30231E+17,sarna#3904,2020-10-01,"interestingly, if I comment everything out in Racket and leave only
```scheme
(define parsed
  (with-input-from-file json-file
    (Œª () (read-json))))
```
it takes longer than before (around 3s)",,
1.30231E+17,sarna#3904,2020-10-01,"```scheme
(define parsed
  (with-input-from-file json-file
    (Œª () (string->jsexpr (port->string)))))```
2.7s :meow:",,
2.66505E+17,notjack#9941,2020-10-01,@sarna how long does it take if all you do is call `port->string`?,,
1.30231E+17,sarna#3904,2020-10-01,@notjack ~0.66s,,
1.30231E+17,sarna#3904,2020-10-01,startup is around 0.37s,,
1.30231E+17,sarna#3904,2020-10-01,"hmm, with idiomatic OCaml I got to Python speeds",,
1.30231E+17,sarna#3904,2020-10-01,Ruby takes 0.86s :meow:,,
1.30231E+17,sarna#3904,2020-10-02,"python's parser really is hand-tuned C, there's no way around that",,
1.30231E+17,sarna#3904,2020-10-02,"I'm gonna stop trying to make stuff faster, I feel like it's giving me brain damage :meow:",,
1.30231E+17,sarna#3904,2020-10-02,which editor do y'all use? DrRacket?,,
1.30231E+17,sarna#3904,2020-10-02,"I've been using doom emacs, but support for racket breaks pretty frequently",,
1.30231E+17,sarna#3904,2020-10-02,"tried vscode, it's missing half of the features :meow:",,
7.43864E+17,beru#4280,2020-10-02,vim,,
1.30231E+17,sarna#3904,2020-10-02,with some plugins? or spartan,,
7.43864E+17,beru#4280,2020-10-02,for racket/scheme i use auto-pairs and rainbow,,
1.30231E+17,sarna#3904,2020-10-02,just that? wow,,
7.43864E+17,beru#4280,2020-10-02,"yeah, if i need something more powerful i'll use drracket",,
3.80947E+17,parlortricks#7425,2020-10-02,"> I've been using doom emacs, but support for racket breaks pretty frequently
@sarna  DrRacket or VSCode",,
4.62028E+17,StephenD#5938,2020-10-02,"> which editor do y'all use? DrRacket?
@sarna  DrRacket serves me well.",,
4.62028E+17,StephenD#5938,2020-10-02,"Though I do customise with settings,  plugins & scripts",,
2.50764E+17,4984#4984,2020-10-02,I use vscode üòÑ i dont like too many features,,
4.62028E+17,StephenD#5938,2020-10-02,"üòÅI like lots of features! Arrows, bubbles, autocomplete, scripts! Yes give it to me üòÅ",,
4.56227E+17,Deleted User#0000,2020-10-02,Emacs :meow:,,meow (1)
7.43864E+17,beru#4280,2020-10-02,"When I use drracket, there's a noticable delay after a key press, and the character being shown onscreen",,
7.43864E+17,beru#4280,2020-10-02,Is this normal?,,
1.30231E+17,sarna#3904,2020-10-02,"@Deleted User do you use a distribution, like doom or spacemacs?",,
1.30231E+17,sarna#3904,2020-10-02,"@beru not really, it doesn‚Äôt differ much from other text editors I have, latency-wise",,
4.56227E+17,Deleted User#0000,2020-10-02,Nope,,
1.30231E+17,sarna#3904,2020-10-02,I think it‚Äôs bad with really big files tho,,
4.56227E+17,Deleted User#0000,2020-10-02,Plain GNU Emacs,,
1.30231E+17,sarna#3904,2020-10-02,:meowblush:,,
4.56227E+17,Deleted User#0000,2020-10-02,I don't like vi-style keybindings.,,
1.30231E+17,sarna#3904,2020-10-02,I see,,
1.30231E+17,sarna#3904,2020-10-02,spacemacs also has a ‚Äúholy‚Äù mode,,
1.30231E+17,sarna#3904,2020-10-02,it keeps the emacs bindings then,,
4.56227E+17,Deleted User#0000,2020-10-02,"I just install a bunch of packages I need, keep some .el files under `~/.emacs.d` and that's enough for me.",,meow (1)
4.62028E+17,StephenD#5938,2020-10-02,"> Is this normal?
@beru  no",,
4.62028E+17,StephenD#5938,2020-10-02,"Please log it to GitHub.com/racket/drracket with all the usual details 
* Racket distribution build type and version
* OS/architecture/word 
* display details (‚Äòretina‚Äô dpi ‚Äòmagnification‚Äô)
^ steps to reproduce /settings",,
1.30231E+17,sarna#3904,2020-10-02,I'll give dr racket a try again :meow:,,
4.62028E+17,StephenD#5938,2020-10-02,I run it on a raspberry pi 4 with no typing lag,,
1.30231E+17,sarna#3904,2020-10-02,neato,,
1.30231E+17,sarna#3904,2020-10-02,on mine it was kinda slow iirc,,
1.30231E+17,sarna#3904,2020-10-02,but everything was slow :meow:,,
4.62028E+17,StephenD#5938,2020-10-02,So it should run on low end chrome books and the like,,
4.62028E+17,StephenD#5938,2020-10-02,"> but everything was slow :meow:
@sarna  ‚òπÔ∏è",,
1.30231E+17,sarna#3904,2020-10-02,the worst offender was youtube,,
1.30231E+17,sarna#3904,2020-10-02,"everything worked fine, just slower",,
1.30231E+17,sarna#3904,2020-10-02,but youtube was lagging as hell :meow:,,
4.62028E+17,StephenD#5938,2020-10-02,Sounds like it‚Äôs not Dr racket specific you might be better off with Emacs  racket mode - But change the key bindings to what works for you,,
4.62028E+17,StephenD#5938,2020-10-02,I recognise that I am probably quite privileged to have a 2012 MacBook Pro I7 As my main machine,,
1.30231E+17,sarna#3904,2020-10-02,"I'll try to make racket layer better in doom emacs, maybe, someday.. but lemme experience a good IDE first",,
1.30231E+17,sarna#3904,2020-10-02,"my main machine is a desktop, dr racket is snappy there",,
1.30231E+17,sarna#3904,2020-10-02,on my work laptop even emacs is kinda :meow:  sometimes,,
4.62028E+17,StephenD#5938,2020-10-02,"> my main machine is a desktop, dr racket is snappy there
@sarna  üëç",,
7.43864E+17,beru#4280,2020-10-02,Var will be equal to #t,,
7.43864E+17,beru#4280,2020-10-02,"Or did you mean store the conditional expression, not the result?",,
4.62028E+17,StephenD#5938,2020-10-02,"Why not just `(define var #t)` or do you mean something like;
```scheme
(define is-greater-than-seven
             (lambda (b) (> 7 b)))
```",,
7.43864E+17,beru#4280,2020-10-02,`(define var '(> 7 5))` like this?,,
4.62028E+17,StephenD#5938,2020-10-02,`(define var <)` ?,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"Is it an expression that you want to evaluate multiple times, with possibly different results each time?",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"The expression `(> 7 5)` will produce the same result each time, so I'm confused",,
3.5323E+17,Alex Knauth#4895,2020-10-02,Please leave `'` quote out of this it's probably not what you want,,
1.30231E+17,sarna#3904,2020-10-02,but then you have to `(if var ..`,,
1.30231E+17,sarna#3904,2020-10-02,aight,,
3.5323E+17,Alex Knauth#4895,2020-10-02,What did you get to work?,,
3.5323E+17,Alex Knauth#4895,2020-10-02,I'm just worried it only half-works,,
7.43864E+17,beru#4280,2020-10-02,Racket has a built-in for loop tho,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"But if you're using recursion anyway, I don't understand why you would need to save a conditional expression instead of its value",,
2.75501E+17,Plane#0324,2020-10-02,"i'm guessing this is for the loop invariant, like ""i want to keep going until x is equal to 10, so i'll keep comparing x and 10 on each iteration""",,
2.75501E+17,Plane#0324,2020-10-02,so basically your function can take a function as a parameter,,
2.75501E+17,Plane#0324,2020-10-02,oh you agreed with what i said so i thought you were agreeing it was the answer,,
2.75501E+17,Plane#0324,2020-10-02,you just take a function as a parameter and call that function from yours,,
3.5323E+17,Alex Knauth#4895,2020-10-02,What problem are you running into?,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"I'm not sure what you mean... are you talking about the `guard` procedure in the 2nd-argument to `make-parameter`, or something else?",,
1.30231E+17,sarna#3904,2020-10-02,@Alex Knauth I think they mean ‚Äúfunction parameter/argument‚Äù,,
1.30231E+17,sarna#3904,2020-10-02,"you can just take functions as arguments in racket, it‚Äôs called ‚Äúfirst class functions‚Äù",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"A function parameter, like the `x` in `(define (f x) body)`?",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"Oh, an argument when calling a function.",,
3.5323E+17,Alex Knauth#4895,2020-10-02,You can use `begin` to group multiple expressions together,,
3.5323E+17,Alex Knauth#4895,2020-10-02,Oh do you want the argument to be a function? Then put it in `lambda ()` or `thunk`,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"A function with no inputs is commonly called a ""thunk""",,
3.5323E+17,Alex Knauth#4895,2020-10-02,About 6 years,,
4.56227E+17,Deleted User#0000,2020-10-02,The formatting makes it very difficult to read.,,
4.56227E+17,Deleted User#0000,2020-10-02,"But here are a couple semantic tips:
1. You don't need to check if the condition is equal to true. You can just say `if condition`.
2. You don't need to use `begin` if your code is a single line. If you're dealing with an `if` statement with multiple lines per case, you might want to consider using a `cond` instead.",,
4.56227E+17,Deleted User#0000,2020-10-02,The procedure takes a `code` argument but doesn't do anything with it.,,
4.56227E+17,Deleted User#0000,2020-10-02,So it just loops.,,
4.56227E+17,Deleted User#0000,2020-10-02,"Well, you can make it work but this isn't the idiomatic way to do loops in Racket.",,
4.56227E+17,Deleted User#0000,2020-10-02,Destructively incrementing an index for a loop is a very imperative idiom.,,
4.56227E+17,Deleted User#0000,2020-10-02,"C style, if you will.",,
4.56227E+17,Deleted User#0000,2020-10-02,In functional programming languages you should rely on natural recursion.,,
4.56227E+17,Deleted User#0000,2020-10-02,"Don't worry, I'm sure you'll get a hang of it in no time.",,
4.56227E+17,Deleted User#0000,2020-10-02,All forms of iteration in Racket uses recursion haha,,
4.56227E+17,Deleted User#0000,2020-10-02,(or continuations but let's not get ahead of ourselves),,
4.56227E+17,Deleted User#0000,2020-10-02,I could go as far as to say while and for loops are just not used in functional programming.,,
4.56227E+17,Deleted User#0000,2020-10-02,"Yes, but wouldn't you rather learn natural recursion?",,
4.56227E+17,Deleted User#0000,2020-10-02,(the problem in your code is that you need to call `code` before recursing again),,
3.5323E+17,Alex Knauth#4895,2020-10-02,"Okay I see a problem with your ""while"" loop: the condition expression `(= 1 asd)` relies on the mutable variable `asd`, but is only evaluated once so it will always be true. In order to fix this you would need a thunk there too",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"Turning `(= 1 asd)` into a thunk like `(thunk (= 1 asd))` means the argument is now a function with no inputs. This allows the expression `(= 1 asd)` to be evaluated multiple times, to produce different results after `asd` is mutated",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"`begin` doesn't make it a thunk, `thunk` does",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"also if it's a thunk you also need to call it whenever you want to ""evaluate"" the condition",,
3.5323E+17,Alex Knauth#4895,2020-10-02,Like you're already doing with `(code)`,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"You're already making `code` a thunk, just do the same with `condition`",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"Oh, and I think I see another problem: an extra `thunk` wrapping the then-body of the `if`",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"`condition` is a thunk the same way `code` is, so evaluating it should be `(condition)`, just like you're using `(code)` in the other place",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"Since `condition` is a thunk the same way `code` is, you need to use `(condition)` in the if-equal stuff, the same way you already have `(code)` in the begin stuff",,
3.5323E+17,Alex Knauth#4895,2020-10-02,Did you fix the `condition` in the if-equal?,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"Then I would have thought it would produce `""final""` almost immediately because `asd` starts out at `1` so `(= 10 asd)` should start out `#false`",,
3.5323E+17,Alex Knauth#4895,2020-10-02,Can you show how you fixed the `condition` in the if-equal?,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"Oh there shouldn't be a `thunk` in the if, only 2 `thunks` in the call to `recursive_while`",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"And as I said before, since `condition` is already a thunk the same way `code` is, you need to use`(condition)` to call it in the if-equal stuff, the same way you already have `(code)` in the begin stuff",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"`(thunk expr)` creates a thunk, doesn't call it",,
3.5323E+17,Alex Knauth#4895,2020-10-02,Wait I'm still confused why doesn't it end immediately? `(condition)` should be false on the first round,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"when I run it it returns `""final""` right away",,
3.5323E+17,Alex Knauth#4895,2020-10-02,which is what I would expect from a while loop with that condition and body,,
3.5323E+17,Alex Knauth#4895,2020-10-02,I don't know why it looks like for you it's printing `test` over and over again,,
3.5323E+17,Alex Knauth#4895,2020-10-02,Can you copy-paste directly instead of screenshoting?,,
3.5323E+17,Alex Knauth#4895,2020-10-02,Oh there's an extra `'` quote that shouldn't be there,,
3.5323E+17,Alex Knauth#4895,2020-10-02,Wait the screenshot is different now,,
3.5323E+17,Alex Knauth#4895,2020-10-02,It's not this anymore,https://cdn.discordapp.com/attachments/618895179343986688/761666980281319464/unknown.png,
3.5323E+17,Alex Knauth#4895,2020-10-02,What happened to that did you revert?,,
3.5323E+17,Alex Knauth#4895,2020-10-02,What was broken about that one?,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"When I run that it finishes with `""final""`",,
3.5323E+17,Alex Knauth#4895,2020-10-02,No that one's different,,
3.5323E+17,Alex Knauth#4895,2020-10-02,There was a version that looked like the image I posted above,,
3.5323E+17,Alex Knauth#4895,2020-10-02,what happened to that version?,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"You posted it here what happened to it?
https://discordapp.com/channels/571040468092321801/618895179343986688/761651995559723049",,
3.5323E+17,Alex Knauth#4895,2020-10-02,That one looks closer to right than anything else,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"It's not the same. It doesn't have the `thunk` around the `(= 10 asd)`, and it doesn't have the call around the use of the condition in the if-equal",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"You keep changing it faster than I can try to help you, its hard to keep up",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"When I manually write that and run it, it returns `""final""` without printing any `test` things. Is that what it does for you?",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"So that's a good start. It terminates, doesn't go into an infinite loop, that's progress",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"And it's the result I would expect from a while loop like:
```
let asd = 1;
while (10 === asd) {
  print(""test"");
  asd = asd + 1;
}
```",,
3.5323E+17,Alex Knauth#4895,2020-10-02,No it's adding 1 just fine,,
3.5323E+17,Alex Knauth#4895,2020-10-02,The problem is that the condition is false from the start,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"`asd` starts as 1

so `(= 10 asd)` starts as false",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"Usually when writing while loops where you want many iterations, you want the condition to be true at the start, and remain true for as many times as you want iterations",,
3.5323E+17,Alex Knauth#4895,2020-10-02,"At this point I think the definition of `recursive_while` looks right. But the use of the while loop is wrong in the same way
```
let asd = 1;
while (10 === asd) {
  print(""test"");
  asd = asd + 1;
}
```
is wrong",,
3.5323E+17,Alex Knauth#4895,2020-10-02,Well where did you learn to use while loops then?,,
4.56227E+17,Deleted User#0000,2020-10-02,You should read the Racket tutorial.,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"Well the thing with `let asd = 1;` is in ""other languages"". I just meant to say that your Racket program isn't wrong because of Racket stuff, it's wrong for reasons that would still be wrong in other languages",,
2.75501E+17,Plane#0324,2020-10-02,i think it is nice to explain that writing `thunk` is like writing `lambda ()`,,
3.5323E+17,Alex Knauth#4895,2020-10-02,I'm not sure what you mean,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"The `let asd = 1;` in ""other languages"" corresponds to the `(define asd 1)` in Racket",,
3.5323E+17,Alex Knauth#4895,2020-10-02,The `let` wasn't event the point of what I was talking about. I was talking about the `while` loop,,
3.5323E+17,Alex Knauth#4895,2020-10-02,The `while` loop there is wrong if you intended it to iterate multiple times,,
3.5323E+17,Alex Knauth#4895,2020-10-02,I'm wondering if you'll be able to understand why that while loop is wrong if I write it in a language you understand better... that's why I asked where you learned to use while loops,,
3.5323E+17,Alex Knauth#4895,2020-10-02,"So do you see how the while loop here is wrong?:
```
asd = 1
while 10 == asd:
  print(""test"")
  asd = asd + 1
```",,
7.43864E+17,beru#4280,2020-10-04,is there a way to get vim keybindings on the racket repl?,,
1.69964E+17,hegz#6596,2020-10-04,just use vim :p,,
1.69964E+17,hegz#6596,2020-10-04,not the best lisper out there but i found a half decent plugin,,
4.62028E+17,StephenD#5938,2020-10-04,https://github.com/takikawa/drracket-vim-tool,,
1.69964E+17,hegz#6596,2020-10-04,did anyone finish sicp?,,
1.69964E+17,hegz#6596,2020-10-04,"i have started it recently and not sure what's the correct plan to follow in order to get the most out of it, been watching the lectures while following along in the book",,
4.56227E+17,Deleted User#0000,2020-10-04,The best advice I can give is: Don't skip any exercises and don't move on to the next chapter until you make sure you've fully grasped what's being taught.,,
4.56227E+17,Deleted User#0000,2020-10-04,It's a very information dense book and every chapter builds on what is taught in prior chapters.,,
4.56227E+17,Deleted User#0000,2020-10-04,"If you miss something in a hurry to move on, it makes it even more difficult to move further later on.",,
4.56227E+17,Deleted User#0000,2020-10-04,"So yeah, very few people actually finish the book cover-to-cover for this reason. But even reading only a part of it teaches a lot IMO.",,
4.56227E+17,Deleted User#0000,2020-10-04,I've personally only read 2/3 of it.,,
1.93202E+17,rocketnia#4517,2020-10-05,"It's saying your function is missing the expression to compute its result. It just ends with definitions, no result.",,
1.93202E+17,rocketnia#4517,2020-10-05,"(If you already do have an expression in there that you intend to be the result, you might be able to fix this by simply moving it to the end, after the definitions.)",,
1.30231E+17,sarna#3904,2020-10-05,or you‚Äôre just not used to it,,
7.43864E+17,beru#4280,2020-10-05,"I started racket/scheme around a month ago, and at first I hated it. I can't do anything. But the more I code in racket, the more I like it. It's fun.",,meow (3)
1.30231E+17,sarna#3904,2020-10-05,@Dav1s wasn‚Äôt it like this when you first started coding in C++/Python?,,
1.30231E+17,sarna#3904,2020-10-05,in Racket you‚Äôll get 0 precedence errors :meow:,,
1.30231E+17,sarna#3904,2020-10-06,is there really no zlib racket wrapper? :meow:,,
3.80947E+17,parlortricks#7425,2020-10-06,"just discovered that VSCode has draw.io integration now, thats pretty darn cool",,
4.56227E+17,Deleted User#0000,2020-10-06,@sarna You know what to make now!,,
1.30231E+17,sarna#3904,2020-10-06,@Deleted User yeah I tried as I couldn‚Äôt really work now (internal network dead),,
1.30231E+17,sarna#3904,2020-10-06,failed miserably once again,,
1.30231E+17,sarna#3904,2020-10-06,:meow:,,
4.56227E+17,Deleted User#0000,2020-10-06,:meow:,,
4.56227E+17,Deleted User#0000,2020-10-06,"Never worry, for miserable failures are building blocks for glorious achievements.",,
4.56227E+17,Deleted User#0000,2020-10-06,I wanted it to sound like an exotic proverb but it ended up coming across like LinkedIn influencer deepity rubbish.,,
4.56227E+17,Deleted User#0000,2020-10-06,But you get the point,,
1.30231E+17,sarna#3904,2020-10-06,:meowblush:,,
1.30231E+17,sarna#3904,2020-10-06,http://zlib.net/manual.html,,
1.30231E+17,sarna#3904,2020-10-06,look at these structs though :meowloween:,,
1.30231E+17,sarna#3904,2020-10-06,"I know basic C, but it has so many weird things",,
1.30231E+17,sarna#3904,2020-10-06,what‚Äôs z_const? what‚Äôs FAR? pointers to alloc/free in the struct??,,
1.30231E+17,sarna#3904,2020-10-06,"what‚Äôs ZEXTERN and ZEXPORT, lol",,
4.56227E+17,Deleted User#0000,2020-10-06,It's a pointer.,,
1.30231E+17,sarna#3904,2020-10-06,"I tried to copy some other scheme‚Äôs bindings (tried with guile and chicken) but well, big surprise - FFI systems are kinda different",,
4.56227E+17,Deleted User#0000,2020-10-06,"Pointers are easy to represent in FFI because regardless of what type they point at, they invariably have the same size.",,
1.30231E+17,sarna#3904,2020-10-06,which one is a pointer though?,,
4.56227E+17,Deleted User#0000,2020-10-06,The ones with `*` in the type name. :meow:,,
1.30231E+17,sarna#3904,2020-10-06,:meow:,,
1.30231E+17,sarna#3904,2020-10-06,that I know,,
4.56227E+17,Deleted User#0000,2020-10-06,"At the end of the day, all C is built on the trick of treating chunks of continuous memory as data structures (pseudo-arrays, unions, structs) and doing pointer trickery to keep up the pretence.",,
1.30231E+17,sarna#3904,2020-10-06,"yeah, and this approach is very confusing - for me at least",,
4.56227E+17,Deleted User#0000,2020-10-06,"Some hail it as being ""closer to the way the computer works"" but I think it's actually very misleading because we aren't using VAXen any more.",,
4.56227E+17,Deleted User#0000,2020-10-06,https://queue.acm.org/detail.cfm?id=3212479,,
4.56227E+17,Deleted User#0000,2020-10-06,"In reality, pointers are secretly an abstraction over the black box of actual physical memory.",,
1.30231E+17,sarna#3904,2020-10-06,"yeah, C was close to PDP-11.. it‚Äôs not so close to modern CPUs (‚ÄúC abstract machine‚Äù is a thing)",,
1.30231E+17,sarna#3904,2020-10-06,"anyway, that doesn‚Äôt bring me closer to a working impl :meow:",,
1.30231E+17,sarna#3904,2020-10-06,https://github.com/r1b/zlib/blob/master/zlib.scm I‚Äôll try to copy this,,
4.62028E+17,StephenD#5938,2020-10-06,https://youtu.be/vaLKm9FE8oo,,
1.30231E+17,sarna#3904,2020-10-06,"sounds nice, can you repost in #off-topic @StephenD? it‚Äôs slower-moving than general üëÄ",,
1.30231E+17,sarna#3904,2020-10-06,~~this way I‚Äôll come back to it later instead of forgetting :meow:~~,,
1.30231E+17,sarna#3904,2020-10-06,thank you :meowblush:,,
4.62028E+17,StephenD#5938,2020-10-06,"I posted here deliberately as I really believe this video addresses an issue that affects all PL communities, racket included. I've posted in #resources for future references, but I've also put it in off topic too.  (it also got posted in general on racket slack, for the same reason)",,
1.30231E+17,sarna#3904,2020-10-06,yeah I skimmed through it and saw a lot of good stuff,,
1.30231E+17,sarna#3904,2020-10-06,I must say this discord is one of the friendliest and most humbling communities I‚Äôve been part of :meowblush:,,
2.25363E+17,AcerbicVeil#2790,2020-10-06,Fr i just joined and u peeps were really nice,,
4.62028E+17,StephenD#5938,2020-10-06,Thanks for the feedback @AcerbicVeil#2790 & @sarna#3904 - that is the goal,,
4.66395E+17,oaktownsam#0815,2020-10-06,@sarna what are you going to do with zlib?,,
1.30231E+17,sarna#3904,2020-10-06,@oaktownsam trying to make a discord bot library,,plusone (3)
1.30231E+17,sarna#3904,2020-10-06,https://discord.com/developers/docs/topics/gateway#receiving-payloads,,
4.62028E+17,StephenD#5938,2020-10-06,:meow:-bot,,meow (3)
1.30231E+17,sarna#3904,2020-10-06,kotbot,,
2.66505E+17,notjack#9941,2020-10-06,"> Never worry, for miserable failures are building blocks for glorious achievements.
@Deleted User _wow_",,
1.30231E+17,sarna#3904,2020-10-06,"there‚Äôs already one library for racket, but the author abandoned it and they write haskell now",,meow (1)
1.30231E+17,sarna#3904,2020-10-06,wanted to post their github status but they changed it,,
1.30231E+17,sarna#3904,2020-10-06,but well there‚Äôs a blog post,https://cdn.discordapp.com/attachments/618895179343986688/763075571575947274/image0.png,
1.30231E+17,sarna#3904,2020-10-06,"> polysemy: Higher-order, low-boilerplate, zero-cost free monads.",,
1.30231E+17,sarna#3904,2020-10-06,:meow:,,
1.30231E+17,sarna#3904,2020-10-06,and I‚Äôm here trying to send a hello payload,,
4.56227E+17,Deleted User#0000,2020-10-06,"I have come to the conclusion that ""zero-cost"" has no meaning in computer science.",,
4.56227E+17,Deleted User#0000,2020-10-06,"""zero-cost abstractions"" is a marketing buzzword",,
3.5323E+17,Alex Knauth#4895,2020-10-06,"""zero-cost abstractions"" usually are only zero-cost in very limited circumstances. If you limit them to only situations where they have zero-cost, they aren't really abstractions anymore. I guess it's used as ""abstractions with special-cases that are zero-cost when optimized""?",,
3.5323E+17,Alex Knauth#4895,2020-10-06,"But then ""abstractions with special-cases"" is the part that confuses things",,plusone (1)
2.75501E+17,Plane#0324,2020-10-06,@sarna this is the nicest discord community i've joined (:,,meowblush (2)
2.66505E+17,notjack#9941,2020-10-06,polysemy specifically is also definitely not zero cost,,
2.66505E+17,notjack#9941,2020-10-06,"it has benchmarks but they're wrong, along with most other effect system benchmarks, because benchmarking haskell algebraic effects libraries is extremely complex and poorly understood",,
1.30231E+17,sarna#3904,2020-10-06,benchmarks are always wrong,,
1.30231E+17,sarna#3904,2020-10-06,"‚Äúhow fast this thing can be on a small batch of artificial inputs‚Äù is never important 
‚Äúis my program fast enough‚Äù is always important",,
1.30231E+17,sarna#3904,2020-10-06,"I‚Äôm a guilty benchmarker, I wrote this for myself :meowblush:",,
2.66505E+17,notjack#9941,2020-10-06,"in this specific case, it was mostly because the benchmarks are single files which _massively_ changes how aggressive GHC is when inlining and specializing typeclass instances",,
1.30231E+17,sarna#3904,2020-10-06,How To Speed Up Your Haskell Program With This One Weird Trick,,
1.30231E+17,sarna#3904,2020-10-06,the weird trick: `cat *.hs > optimized.hs`,,
2.66505E+17,notjack#9941,2020-10-06,lol,,
2.66505E+17,notjack#9941,2020-10-06,package manager? I hardly know 'er!,,meow (2)
2.66505E+17,notjack#9941,2020-10-06,(I am slightly delirious from lack of sleep),,
1.30231E+17,sarna#3904,2020-10-06,"go get some rest, we‚Äôll be there when you come back :meowblush:",,‚ù§Ô∏è (1)
4.66395E+17,oaktownsam#0815,2020-10-06,Doing some scribble and package stuff today.  I think one of the problems I have with the package system is how I just end up cribbing parts of `info.rkt` files from other packages on github.,,üíØ (1)
2.66505E+17,notjack#9941,2020-10-06,"IMO, `#lang info` would benefit more than any other `#lang` from a protocol for Racket languages to expose autoformatters and static analyzers to IDEs",,
2.66505E+17,notjack#9941,2020-10-06,"anyway, today I have a wish for a tool that would take a rebellion stream pipeline like this:
```scheme
(transduce (in-range 0 20)
           (filtering even?)
           (mapping -)
           (taking 5)
           #:into into-list)
```
...and generate an animated diagram showing the values moving through the pipeline and what order the state transitions happen in",,
2.66505E+17,notjack#9941,2020-10-06,@oaktownsam you've used transducers with IO right? I'm looking more closely at transducer finishing and trying to figure out what behavior I want,,
4.66395E+17,oaktownsam#0815,2020-10-06,I have but it's been a while.,,
4.66395E+17,oaktownsam#0815,2020-10-06,@StephenD thanks for posting the video.  It was long but worth it.,,plusone (1)
1.30231E+17,sarna#3904,2020-10-07,,https://cdn.discordapp.com/attachments/618895179343986688/763303031218896896/unknown.png,
1.30231E+17,sarna#3904,2020-10-07,"> called hyphen->camelcase
> performs hyphen->titlecase",,
1.30231E+17,sarna#3904,2020-10-07,:meow:,,
2.66505E+17,notjack#9941,2020-10-07,missed opportunity to call it kebab case,,
1.30231E+17,sarna#3904,2020-10-07,"yeah, but why is the first letter uppercase :meow:",,
1.30231E+17,sarna#3904,2020-10-07,I also have a weird error,https://cdn.discordapp.com/attachments/618895179343986688/763306883062693908/unknown.png,
1.30231E+17,sarna#3904,2020-10-07,"it found zlib, but not a definition that I'm fairly sure is in it?",,
1.30231E+17,sarna#3904,2020-10-07,"added a version, same issue",,
2.75501E+17,Plane#0324,2020-10-07,i think `inflateInit` is a c macro which expands to a call to `inflateInit_`,,
2.75501E+17,Plane#0324,2020-10-07,so it doesn't end up being an actual symbol in the shared object,,
1.30231E+17,sarna#3904,2020-10-07,@Plane you're right!,,
1.30231E+17,sarna#3904,2020-10-07,https://refspecs.linuxbase.org/LSB_3.0.0/LSB-Core-generic/LSB-Core-generic/libz.html,,
1.30231E+17,sarna#3904,2020-10-07,"chicken bindings just bind to `inflateInit`, weird",,
1.30231E+17,sarna#3904,2020-10-07,describe doesn't work üò©,https://cdn.discordapp.com/attachments/618895179343986688/763341231387967518/unknown.png,
1.30231E+17,sarna#3904,2020-10-07,"@Deleted User I'm progressing (very slowly), thanks for encouraging me to try again :meowblush:",,
7.43864E+17,beru#4280,2020-10-07,"What's gamejam?
Is it an event where you develop games in a limited span of time?",,
1.30231E+17,sarna#3904,2020-10-07,yep,,
7.43864E+17,beru#4280,2020-10-07,When's the next one?,,
7.43864E+17,beru#4280,2020-10-07,"Also any resources on making a game, I'd like to try making one",,
1.30231E+17,sarna#3904,2020-10-07,as for the next one - no idea,,
1.30231E+17,sarna#3904,2020-10-07,resources - https://nostarch.com/realmofracket.htm,,
3.5323E+17,Alex Knauth#4895,2020-10-07,"No, but it will be scoped so it's only visible inside it, not outside",,
3.5323E+17,Alex Knauth#4895,2020-10-07,"My guess is the teacher is saying don't do it for now, until they explain scope further, then you can do it",,
3.5323E+17,Alex Knauth#4895,2020-10-07,If that's the case then you might have misheard or misunderstood? I'm confused about why v7.8 would be relevant?,,
3.5323E+17,Alex Knauth#4895,2020-10-07,"If he mentioned v7.8 specifically, the teacher is probably referring to a different concept... idk if I can find it in the 7.8 release notes?",,
3.5323E+17,Alex Knauth#4895,2020-10-07,"It's also possible the teacher is talking about a slightly different language other than Racket. When I was first learning, I was told something similar, but about Beginning Student Language, not Racket. Then eventually we as a class moved from Beginning Student Language up to Intermediate Student Language, and suddenly we got scope and we could nest function definitions",,
4.66395E+17,oaktownsam#0815,2020-10-07,@sarna chicken can just use the name because they compile scheme to C so they can use all of the preprocessor stuff,,
4.66395E+17,oaktownsam#0815,2020-10-07,It's really annoying that you cannot make your own ffi naming conventions.,,
1.30231E+17,sarna#3904,2020-10-07,@oaktownsam yeah :( I ended up using `#:c-id`,,
1.30231E+17,sarna#3904,2020-10-07,if you have some time please take a look at #help,,
1.30231E+17,sarna#3904,2020-10-07,I have no idea how to solve that,,
4.66395E+17,oaktownsam#0815,2020-10-07,"@beru The LISP gamejam just completed https://itch.io/jam/autumn-lisp-game-jam-2020 .  I can't remember when/if they do a Spring one.  It probably won't be until March/April/May.  We did a Racket one last November, but I don't think there are plans for one this year (yet)",,meowloween (1)
4.66395E+17,oaktownsam#0815,2020-10-07,"I have finally published a Racket package.  It only took me 12 years to get enough in order to do something.
https://docs.racket-lang.org/keyring/index.html",,"racket (5),meow (2),üëç (2),üéâ (2)"
4.62028E+17,StephenD#5938,2020-10-07,https://www.youtube.com/watch?v=QbF5NU-gYL4,,
4.62028E+17,StephenD#5938,2020-10-07,"VSCode users what extensions do you use for Racket programming?
https://marketplace.visualstudio.com/search?term=Racket&target=VSCode&category=Programming%20Languages&sortBy=Relevance
I‚Äôm updating the wiki page https://github.com/racket/racket/wiki/IDE%27s-and-text-editors
but I‚Äôm not a VSC user so I need your advice!",,
1.30231E+17,sarna#3904,2020-10-07,"‚Äúracket‚Äù is just syntax highlighting, it‚Äôs also kinda buggy IIRC",,
1.30231E+17,sarna#3904,2020-10-07,I used magic racket,,
1.30231E+17,sarna#3904,2020-10-07,"it was.. okay, but had like 10% of the features of dr racket",,
4.62028E+17,StephenD#5938,2020-10-09,sorry @Dav1s I'm deleting the video - please feel free to post in #off-topic,,
2.14881E+17,Moinate#6061,2020-10-09,Dav1ss - functions declared inside of other functions can't tested independently. I would agree that this makes it a bad idea for code written in a class. The only way I think it is ok is to capture arguments and then call the real function that you were able to test.,,
2.67464E+17,SlashDevSlashRandom#2112,2020-10-09,"as in, you want the return value of a function to be a function? if so, you just return a function/lambda:
```lisp
#lang racket
(define (make-adder x)
  (lambda (y) (+ x y)))

> (define plus7 (make-adder 7))
> (plus7 3)
=> 10
```",,
2.67464E+17,SlashDevSlashRandom#2112,2020-10-09,"or, although there are some extra caveats to be aware of, you could use `curry`:
```lisp
> (define plus7 (curry + 7))
> (plus7 8)
15
```",,
3.5323E+17,Alex Knauth#4895,2020-10-10,"A curried function is a function that can be partially applied
or in other words it can take its arguments in multiple groups.
This means when you apply it to the first group of arguments, it produces a function that can then accept the second group of arguments.
One class of these are functions with a first group of arguments as ""configuration options"", and a second group of arguments as ""user input."" If you're familiar with command-line stuff this might seem familiar as the ""command-line arguments"" and the ""stdin input stream"".
For example: a searching function might take a first group of arguments as ""the needle to search for"", and the second group of arguments as ""the haystack to search through""
```
(define ((search needle) haystack)
  ....)
```
If you're searching for a needle in only one haystack you can call it like this
```
((search ""needle"") ""hayneedlestack"")
```
But the currying becomes more helpful when you might want to search for the same needle in multiple haystacks:
```
(define f (search ""needle""))
(f ""hayneedlestack"")
(f ""hensneedleteeth"")
(f ""phoneedlethimknow"")
```
By using the same ""first group"" partial function on many different ""second groups"" of inputs.
Currying also helps when higher-order functions such as `map` take functions as input:
```
(map (search ""needle"") (list ""hayneedlestack"" ""hensneedleteeth"" ""phoneedlethimknow""))
```",,
2.67464E+17,SlashDevSlashRandom#2112,2020-10-11,"well, Racket doesn't have return, and not all languages have the same definition of return, but that Racket code is functionally equivalent to this python code that returns a lambda (which is the sense of return to which I assume you're referring):
```python
def adder(x):
    return lambda y: x + y
```",,
6.59783E+17,Markus#2886,2020-10-13,"```scheme
(define/contract (add x)
  (-> natural? natural?)
  (+ x 1))
```",,
6.59783E+17,Markus#2886,2020-10-13,Is it normal to write your functions with contracts?,,
6.59783E+17,Markus#2886,2020-10-13,Like just as a general rule?,,
6.59783E+17,Markus#2886,2020-10-13,"I think I'm misunderstanding their use, it looks like you can use them to check types",,
3.5323E+17,Alex Knauth#4895,2020-10-13,"I think it's less encouraged to use `define/contract`, and more encouraged to use `define` but export it with a contract with `provide`+`contract-out`, for example:
```
(provide (contract-out [add (-> natural? natural?)]))
(define (add x)
  (+ x 1))
```
The difference is where the contract boundary goes: with `define/contract` the boundary is between the function and the rest of the module, vs with `define`+`provide`+`contract-out` the boundary is between the module and whoever uses it",,
2.66505E+17,notjack#9941,2020-10-13,"If you're writing code in multiple files, I recommend `contract-out`. If you're writing all your code in a single file, I recommend `define/contract`.",,
6.59783E+17,Markus#2886,2020-10-13,Thank you both for your answers,,
2.75501E+17,Plane#0324,2020-10-14,"those answers are helpful to me too, it makes sense but i'd never really thought about it before",,
2.75501E+17,Plane#0324,2020-10-14,there are a lot of features in racket i don't have that much experience with but that seem pretty neat,,
4.66395E+17,oaktownsam#0815,2020-10-14,"Also remember that contracts are not free, and depending on the structure of your code can make things slow",,
5.07584E+17,pmatos#0179,2020-10-14,Adding to what @oaktownsam said: always use contract profiling if you use contracts and performance is important for your application.,,üíØ (3)
1.30231E+17,sarna#3904,2020-10-14,can I export a version of a function with and without a contract?,,
1.30231E+17,sarna#3904,2020-10-14,foo and foo/unsafe let‚Äôs say,,
2.66505E+17,notjack#9941,2020-10-14,"yes, `contract-out` has a way to automatically do that",,üíØ (2)
2.66505E+17,notjack#9941,2020-10-14,`#:unprotected-submodule`,,üçâ (1)
1.30231E+17,sarna#3904,2020-10-14,oh neat,,
6.59783E+17,Markus#2886,2020-10-15,"Hello everyone, is R5RS chez scheme?",,
6.59783E+17,Markus#2886,2020-10-15,may be a silly question,,
2.66505E+17,notjack#9941,2020-10-15,"Idle thought of the night: a much shorter notation for thunks would be nice, so people stop feeling the need to create macros like this:
```
(define-simple-macro (with-foo foo body ...)
  (call-with-foo foo (lambda () body ...)))
```
I'd rather see a shorthand like `{body ...}` that gets turned into `(lambda () body ...)`",,üíØ (1)
2.66505E+17,notjack#9941,2020-10-15,@Markus R5RS is a specification. It's a document that describes a bunch of rules for how scheme code is supposed to work. Chez scheme is an implementation: it's an actual program that takes scheme code and runs it.,,
6.59783E+17,Markus#2886,2020-10-15,Thank you,,
2.66505E+17,notjack#9941,2020-10-15,"chez scheme does not follow the rules of the R5RS specification. It does however, follow the rules of the R6RS spec.",,
6.59783E+17,Markus#2886,2020-10-15,Is there a module for it for Dr Racket? I know Racket is being built on top of it,,
2.66505E+17,notjack#9941,2020-10-15,"like, something you can import in your code with `(require chez-scheme)` and use somehow?",,
6.59783E+17,Markus#2886,2020-10-15,or like #lang chez,,
6.59783E+17,Markus#2886,2020-10-15,yeah,,
2.66505E+17,notjack#9941,2020-10-15,"Not really. Chez is being used to _implement_ racket, so you don't write chez code - the Racket implementation turns your racket code into chez scheme code, and then hands it off to chez scheme to compile and run.",,üëç (1)
2.66505E+17,notjack#9941,2020-10-15,There is a `#lang r5rs` (and I think `#lang r6rs` too) though. That lets you write R5RS scheme code and it will run as that spec says it should.,,
6.59783E+17,Markus#2886,2020-10-15,okay thank you,,
4.56227E+17,Deleted User#0000,2020-10-15,"I usually try to write code that runs on Racket, Chez and Guile with minimal changes.",,
2.75501E+17,Plane#0324,2020-10-15,"```scheme
#lang racket/base

(require (for-syntax racket/base)
         (rename-in fancy-app [#%app fancy-app])
         racket/stxparam
         syntax/parse/define)

(provide (rename-out [my-app #%app]))

(define-syntax-rule
  (thunk-app expr ...)
  (Œª () expr ...))

(define-syntax (my-app stx)
  (define app-stx
    (case (syntax-property stx 'paren-shape)
      [(#\{) #'thunk-app]
      [(#f
        #\(
        #\[) #'fancy-app]))
  (syntax-parse stx
    [(_ v ...)
     #`(#,app-stx v ...)]))
```",,
2.75501E+17,Plane#0324,2020-10-15,@notjack i tried to make a little thing to make `{}` make thunks and otherwise use fancy-app (:,,
2.75501E+17,Plane#0324,2020-10-15,i stole bits from your `delimit-app`!,,
2.66505E+17,notjack#9941,2020-10-15,ooooo nice :3,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,Has anyone here had to decide between Common Lisp and Racket? What made you choose Racket?,,
3.29023E+17,nixin72#3554,2020-10-15,"@RaycatWhoDat I started learning Lisp with CL and much prefer Racket. It's much cleaner, I prefer the lisp-1 direction, it's got a huge standard library whereas CLs is lacking in terms of modern languages, it's got a standard package management tool that ship with the language, and I overall just find it easier to work with. Only thing I find easier in CL is macros",,
3.29023E+17,nixin72#3554,2020-10-15,"Oh, I also think CL macros are easier to debug personally",,
3.29023E+17,nixin72#3554,2020-10-15,"But overall, Rackrt is a much nicer language",,
1.30231E+17,sarna#3904,2020-10-15,"@RaycatWhoDat yep. CL is just old, in a bad way",,
1.30231E+17,sarna#3904,2020-10-15,"of course it‚Äôs subjective, but you asked for opinions :meow:",,
4.62028E+17,StephenD#5938,2020-10-15,Racket does have a ‚Äòdefmacro‚Äô form that is like lisp macros but the core developers recommend the scheme style hygienic macros,,
3.29023E+17,nixin72#3554,2020-10-15,Like a `defmacro` that's not in the compatibility library?,,
4.62028E+17,StephenD#5938,2020-10-15,That‚Äôs the one,,
4.56227E+17,Deleted User#0000,2020-10-15,It's in the compatibility library.,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,Thanks for the perspectives. I appreciate it.,,
4.62028E+17,StephenD#5938,2020-10-15,I did have a go at Common Lisp - read On Lisp and did the ELM-ART online lisp tutor but Racket was more attractive. (A long time ago),,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,"Well, maybe for a bit of specificity...",,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,<https://gist.github.com/vindarel/c1ef5e043773921e3b11d8f4fe1ca7ac>,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,Could y'all chime in on the accuracy of this or if there are equivalents?,,
4.62028E+17,StephenD#5938,2020-10-15,You probably need to ask on the lisp discord for balance,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,I'll level with you,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,I hate the Lisp discord,,
4.56227E+17,Deleted User#0000,2020-10-15,Same,,
4.56227E+17,Deleted User#0000,2020-10-15,It's not exactly a friendly place.,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,"Too :teenACTUALLY:  and ""lol, javascript bad"" for me",,
4.62028E+17,StephenD#5938,2020-10-15,I see you have already checked the reddit,,
1.30231E+17,sarna#3904,2020-10-15,lisp discord >>>> lisp irc,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,"That's not exactly high regard, lol.",,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,"If I'm mildly miffed at the Lisp Discord, the IRC won't even acknowledge my existence",,
1.30231E+17,sarna#3904,2020-10-15,"this gist seems to be written by a hardcore CLer, it‚Äôs exaggerating CL‚Äôs pros, downplaying its cons, and posing design decisions made by Racket designers as flaws :meow:",,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,"Because ""javascript dev""",,
4.62028E+17,StephenD#5938,2020-10-15,I‚Äôm sure there are other communities for Common Lisp,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,@sarna Oh?,,
1.30231E+17,sarna#3904,2020-10-15,"yeah, like ‚Äúracket bad no introspection‚Äù",,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,@StephenD I have to take a look.,,
1.30231E+17,sarna#3904,2020-10-15,‚ÄúCL good because CL‚Äù,,
1.30231E+17,sarna#3904,2020-10-15,"@RaycatWhoDat I think fare‚Äôs post was better, here https://fare.livejournal.com/188429.html",,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,"Didn't Fare go to Gerbil Scheme? EDIT: Yes, they did.",,
1.30231E+17,sarna#3904,2020-10-15,yep,,
1.30231E+17,sarna#3904,2020-10-15,but this post compares racket with CL,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,ye,,
1.30231E+17,sarna#3904,2020-10-15,"and it‚Äôs more honest, I feel",,
3.5323E+17,Alex Knauth#4895,2020-10-15,"One reason I prefer Racket over Common Lisp is that Racket makes it easier for me to think about types properly. Types like booleans, symbols, and lists are all disjoint in Racket where they intersect in Common Lisp with things like `t` and `nil` being both or all three. Lists being immutabe, and structs being their own distinct things, giving more control over mutability as well as encapsulation, helps a lot as well. These things just make it easier for me reason about a program when I can't hold the whole thing in mind at once",,plusone (4)
4.62028E+17,StephenD#5938,2020-10-15,For me it is DrRacket and the friendly community.,,
4.62028E+17,StephenD#5938,2020-10-15,And the gui toolkit,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,I do enjoy that GUI toolkit,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,If only Raku had all of those :lytCRYA:,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,I do adore that language,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,But back on topic: let's say you're doing things and evaluating stuff in the REPL,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,How do you get those changes back into the source? Or are you only modifying things in the source and sending the form to the REPL to evaluate?,,
1.30231E+17,sarna#3904,2020-10-15,in CL? you write in the source file and send stuff to the REPL,,
1.30231E+17,sarna#3904,2020-10-15,you can also write in the REPL of course,,
1.30231E+17,sarna#3904,2020-10-15,for experimentation n stuff,,
1.30231E+17,sarna#3904,2020-10-15,"but mainly you send things to the REPL, test them there, repeat",,
1.30231E+17,sarna#3904,2020-10-15,"when you recompile something in CL, all that state accumulated in the REPL is preserved",,
1.30231E+17,sarna#3904,2020-10-15,which is both good (you don‚Äôt have to retype everything) and bad (you can have really weird bugs because of lots of accumulated state),,
1.30231E+17,sarna#3904,2020-10-15,"you can just restart your REPL there
but then we‚Äôre back to racket‚Äôs approach :)",,
4.62028E+17,StephenD#5938,2020-10-15,https://blog.racket-lang.org/2009/03/the-drscheme-repl-isnt-the-one-in-emacs.html,,
4.62028E+17,StephenD#5938,2020-10-15,https://docs.racket-lang.org/drracket/Keyboard_Shortcuts.html?q=keybinding#%28part._.Sending_.Program_.Fragments_to_the_.R.E.P.L%29,,
7.38552E+16,RaycatWhoDat#0001,2020-10-15,"Yeah, I meant in Racket",,meow (1)
4.56227E+17,Deleted User#0000,2020-10-15,`##lisp` > `#lisp`,,
4.56227E+17,Deleted User#0000,2020-10-15,@sarna,,
4.56227E+17,Deleted User#0000,2020-10-15,The former is for all Lisps.,,
1.30231E+17,sarna#3904,2020-10-15,my lisp > your lisp,,
1.30231E+17,sarna#3904,2020-10-15,"(I didn‚Äôt get the joke, sorry)",,
3.29023E+17,nixin72#3554,2020-10-15,"While working in the REPL in CL is great and, super fun, a very tight feedback loop, and an experience I wish more languages had, I believe it would be *way* nicer to work like that in Clojure rather than CL due to the approach that things should be stateless and functional. Restarting the REPL constantly in CL defeats the purpose imo, so I think Clojure would probably be better",,
4.56227E+17,Deleted User#0000,2020-10-15,what joke,,
4.56227E+17,Deleted User#0000,2020-10-15,@sarna Weren't you talking about the IRC channel?,,
3.29023E+17,nixin72#3554,2020-10-15,"The other problem with the REPL is that because of unexpected side effects all over the place, you might think something is working, but then you restart and realize the only reason it worked was because of some buildup of state that now you've gotten rid of  by restarting you REPL and then you're figuring out how to fix another unrelated problem",,
1.30231E+17,sarna#3904,2020-10-15,"@Deleted User oh. told you I didn‚Äôt get it!
is there another lisp channel? I was only on #lisp",,
1.30231E+17,sarna#3904,2020-10-15,and #lisp-beginners or something like that,,
1.30231E+17,sarna#3904,2020-10-15,"@nixin72 yep, I got into this even with small programs. I was a CL beginner, but I don‚Äôt think it‚Äôd improve with time :/",,
4.56227E+17,Deleted User#0000,2020-10-15,"`##lisp` is for all Lisps, not just CL.",,
1.30231E+17,sarna#3904,2020-10-15,oh!,,
1.30231E+17,sarna#3904,2020-10-15,now I got it,,
3.29023E+17,nixin72#3554,2020-10-15,"Yea, I was beginner when it happened too, but I feel like it's more a fundamental problem in the design of CL than something that would be fixed by experience",,plusone (2)
3.29023E+17,nixin72#3554,2020-10-15,"But it's the same problem as I have all the time in Emacs. I make some changes to my config, evaluate some buffers, next time I open Emacs I've got errors in my config and I'm like ""it worked fine 5 minutes ago""",,
3.29023E+17,nixin72#3554,2020-10-15,But I forgive Emacs for that because I love Emacs,,
1.93202E+17,rocketnia#4517,2020-10-15,I wonder if people experience(d) that a lot in Smalltalk as well,,
1.30231E+17,sarna#3904,2020-10-15,"well, in Smalltalk all you have is the REPL",,
4.62028E+17,StephenD#5938,2020-10-15,"On Thu, 15 Oct 2020 at 20:56, Asumu Takikawa wrote:
On 2020-08-03 09:35:16 -0400, 'John Clements' via Racket Users wrote:
> Racket version 7.8 is now available from
> 
>     https://racket-lang.org/

This is quite delayed, but the Ubuntu PPA has been updated to 7.8 as
well. Ubuntu version 20.10 (Groovy) is newly supported while 19.10
(Eoan) is phased out (will remain on Racket 7.7).

Sorry for the delay this time. As usual please report any issues on
github:

  https://github.com/takikawa/racket-ppa

Cheers,
Asumu

--",,
4.62028E+17,StephenD#5938,2020-10-17,RacketCon livestream!,,
7.38552E+16,RaycatWhoDat#0001,2020-10-17,"Does anyone reach for a different language for ""speeding things up""?",,
7.38552E+16,RaycatWhoDat#0001,2020-10-17,"That is to say, what language do y'all normally reach for the FFI for?",,
4.62028E+17,StephenD#5938,2020-10-17,I don‚Äôt but I‚Äôm pretty sure it‚Äôs c/c++,,
3.29023E+17,nixin72#3554,2020-10-17,Can you use Rust with Racket FFI?,,
3.29023E+17,nixin72#3554,2020-10-17,"Cause if you can, I would reach for Rust. But I've never used FFI lol",,
4.62028E+17,StephenD#5938,2020-10-17,Just asked on slack,,
4.62028E+17,StephenD#5938,2020-10-17,> Rust exposes C-like ABI bindings iirc,,
1.30231E+17,sarna#3904,2020-10-17,yeah,,
1.30231E+17,sarna#3904,2020-10-17,you just use `extern C` and `no_mangle`,,
1.30231E+17,sarna#3904,2020-10-17,"or wait, is one of them for calling C code ü§î I don‚Äôt remember",,
1.30231E+17,sarna#3904,2020-10-17,https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html#calling-rust-functions-from-other-languages,,
1.30231E+17,sarna#3904,2020-10-17,:meow:,,
7.38552E+16,RaycatWhoDat#0001,2020-10-17,I hate that I have to learn Rust,,
7.38552E+16,RaycatWhoDat#0001,2020-10-17,"I want one of the other languages (Nim, D, Crystal) to win the race but I don't think it's gonna happen",,
3.29023E+17,nixin72#3554,2020-10-17,What do you dislike about Rust?,,
1.30231E+17,sarna#3904,2020-10-17,"C already won the race, I think you can stop worrying :meow:",,
3.29023E+17,nixin72#3554,2020-10-17,"Yea, but I'd rather write code in just about anything else",,
1.30231E+17,sarna#3904,2020-10-17,lol,,
1.30231E+17,sarna#3904,2020-10-17,"I think in the no GC category you only have.. Rust, C[++], D and Zig?",,
1.30231E+17,sarna#3904,2020-10-17,"but if you want to just use something faster.. if it‚Äôs parsing JSON, use Python :meow:",,
1.30231E+17,sarna#3904,2020-10-17,"oh, or maybe inline Chez? Chez is pretty fast, for some tasks as fast as SBCL/Java IIRC",,
1.30231E+17,sarna#3904,2020-10-17,https://discord.com/channels/571040468092321801/618895179343986688/699699251726385283,,
1.30231E+17,sarna#3904,2020-10-17,:meowloween:,,
1.30231E+17,sarna#3904,2020-10-17,it‚Äôs even documented now! https://docs.racket-lang.org/foreign/vm.html#%28def._%28%28lib._ffi%2Funsafe%2Fvm..rkt%29._vm-eval%29%29,,
1.30231E+17,sarna#3904,2020-10-17,"https://ecraven.github.io/r7rs-benchmarks/
chez is the fastest scheme, almost :meow:",,
1.93202E+17,rocketnia#4517,2020-10-17,another interesting language with manual memory management is ATS,,
7.38552E+16,RaycatWhoDat#0001,2020-10-17,"> What do you dislike about Rust?
@nixin72 The syntax and the feel of it.",,
7.38552E+16,RaycatWhoDat#0001,2020-10-17,I don't feel productive in it at all,,
7.38552E+16,RaycatWhoDat#0001,2020-10-17,D gave me the choice which was cool.,,
4.62028E+17,StephenD#5938,2020-10-18,"Hi Racketeers,

Hope you are having a great RacketCon weekend.

Typed Racket was designed by a few people to serve a broad community ‚Äî
you included.

Today, we are looking for feedback to guide the design going forward.

Please share your thoughts and experiences (if any) regarding Typed
Racket. Even if you've never used --- or even heard about --- Typed
Racket, we want to hear from you!

https://tinyurl.com/typed-racket-survey

Feel free to email Ben if you have more feedback or questions.

The survey will remain open for 1 week. After it's closed, we will
share the (anonymized) results.

Thank you,

Ben Greenman & Shriram Krishnamurthi",,üëç (1)
4.66395E+17,oaktownsam#0815,2020-10-19,Missed seeing some discord racketeers at racketcon last weekend. üò¶,,
2.66505E+17,notjack#9941,2020-10-19,how was it otherwise? I wasn't able to make it,,
1.93202E+17,rocketnia#4517,2020-10-19,"I was able to watch the YouTube stream for several talks, and I tried out Gather once but was too shy",,
4.66395E+17,oaktownsam#0815,2020-10-19,"Aw, Stephen and I were there we're very kind üôÇ",,
4.66395E+17,oaktownsam#0815,2020-10-19,I didn't get to everything but it was convenient to attend with my kids running around in the background,,
4.62028E+17,StephenD#5938,2020-10-19,it was great - got to listen in on some cool conversations üôÇ,,üíØ (1)
4.66395E+17,oaktownsam#0815,2020-10-19,gather actually worked out pretty well I thought.,,üíØ (1)
4.62028E+17,StephenD#5938,2020-10-19,someone suggested doing the racket users meetup on gather?,,
4.62028E+17,StephenD#5938,2020-10-19,(I believe it is free for <20 users),,
4.66395E+17,oaktownsam#0815,2020-10-19,I was thinking something like that would be interesting people could gravitate to what they are interested in.,,
4.66395E+17,oaktownsam#0815,2020-10-19,Having everything from rcon up on youtube nearly immediately is good too.  Except they could have trimmed some of the waiting to start bits üôÇ,,
4.66395E+17,oaktownsam#0815,2020-10-19,bbiam work stuff ...,,
4.62028E+17,StephenD#5938,2020-10-19,doing one person doing live video is crazy hard imho.,,
4.62028E+17,StephenD#5938,2020-10-19,its normally **at least** a two-person job,,
4.62028E+17,StephenD#5938,2020-10-19,https://gather.town/app/wH1EDG3McffLjrs0/racket-users,,
4.62028E+17,StephenD#5938,2020-10-19,only chrome,,
4.66395E+17,oaktownsam#0815,2020-10-19,I love in gather there is furniture you can walk through and some you cannot.,,
4.62028E+17,StephenD#5938,2020-10-19,yeah,,
4.62028E+17,StephenD#5938,2020-10-19,I don't quite understand the 'private area',,
4.62028E+17,StephenD#5938,2020-10-19,are there rules or does gather behaviour change in 'private area',,
4.66395E+17,oaktownsam#0815,2020-10-19,"Yeah I don't quite get what it means ""private area""",,
1.30231E+17,sarna#3904,2020-10-20,"> only chrome
:meow:",,
1.30231E+17,sarna#3904,2020-10-20,I only peeked twice :meowblush:,,
4.62028E+17,StephenD#5938,2020-10-20,"> :meow:
@sarna  yeah the chrome thing is annoying - I wonder if it excludes some people",,
1.30231E+17,sarna#3904,2020-10-20,"me, I exclusively use firefox",,
1.30231E+17,sarna#3904,2020-10-20,say no to browser monopoly :meow:,,üëç (1)
4.62028E+17,StephenD#5938,2020-10-20,And I have a really old Mac with not much drive space so I‚Äôm not keen on the filling it up with chrome,,
1.30231E+17,sarna#3904,2020-10-20,haha,,
4.62028E+17,StephenD#5938,2020-10-20,It is huge,,
1.30231E+17,sarna#3904,2020-10-20,"yeah, browsers are OSs now",,
4.62028E+17,StephenD#5938,2020-10-20,And chrome is the new IE4-6,,
1.30231E+17,sarna#3904,2020-10-20,just more privacy-invasive,,
4.62028E+17,StephenD#5938,2020-10-20,What about Jitsi  meet?,,
4.62028E+17,StephenD#5938,2020-10-20,Have you tried that?,,
1.30231E+17,sarna#3904,2020-10-20,never used it,,
4.62028E+17,StephenD#5938,2020-10-20,Open source version of zoom,,
1.30231E+17,sarna#3904,2020-10-20,"oh, by the way - if you‚Äôre planning to switch a platform because of me, don‚Äôt do that - I don‚Äôt have that much free time :meow: I do 99% of programming stuff at work",,
1.30231E+17,sarna#3904,2020-10-20,even now I‚Äôm at work :meow:,,
1.30231E+17,sarna#3904,2020-10-20,"45-minute long daily meetings though, y‚Äôknow",,
4.62028E+17,StephenD#5938,2020-10-20,So am I,,
4.62028E+17,StephenD#5938,2020-10-20,The feedback about gather is good though-if it Means you are less likely to participate it will also affect others. I also worry that the 8- bit map interface doesn‚Äôt help people with low vision either,,üëç (2)
4.62028E+17,StephenD#5938,2020-10-20,"Racket Users *virtual meetup* 28 November

Platform to be decided; zoom  / jitsi / ? - suggestions please 
--
30 Minutes
1pm Pacific Time
9pm UK time
(contact me so we can work out when this is in *your time zone*)

-- If this is problematic let me know 

- this is intended to become a regular thing - maybe every 6-12 weeks

Kind regards

Stephen & Sam Phillips",,
5.20369E+17,Tictac#5779,2020-10-20,"Do any of you use ""Magic Racket"" I don't understand what it is but its supposed to be better than the regular DrRacket and should make coding easier?",,
4.56227E+17,Deleted User#0000,2020-10-20,"Magic Racket is just the Racket plugin for VS Code, loosely analogous to `racket-mode` of Emacs.",,
4.56227E+17,Deleted User#0000,2020-10-20,"VS Code, Emacs and DrRacket are all different text editors and IDEs.",,
1.30231E+17,sarna#3904,2020-10-20,":plusone:, and which one‚Äôs ‚Äúbetter‚Äù is a matter of preference",,
5.20369E+17,Tictac#5779,2020-10-20,Okay so I basically downloaded visual studios,,
5.20369E+17,Tictac#5779,2020-10-20,and I'm completely lost with the amount of stuff on there,,
5.20369E+17,Tictac#5779,2020-10-20,Have any of you downloaded magic racket before?,,
5.20369E+17,Tictac#5779,2020-10-20,"I'm looking for an IDE for racket that will basically help fill in brackets, auto format, previously defined constants. Similar to REPL.it for python or what not. Is this even possible?",,
2.66505E+17,notjack#9941,2020-10-20,"I don't think anything fits those exact features, but some stuff gets pretty close",,
2.66505E+17,notjack#9941,2020-10-20,"drracket has an auto-indenter and (kind of lousy) autocompletion, and it has a little graphical thing that highlights the code enclosed by a closing bracket so it's much easier to balance parens",,
2.75501E+17,Plane#0324,2020-10-20,"i've been using vi for about 25 years, vim for around 20ish of those i think.  and my vim config hasn't changed in a long time.  i feel like the way people use vim has changed and i'm a bit behind the times lol",,
2.66505E+17,notjack#9941,2020-10-20,"eh, not much point building up expertise in something if you just throw it away every six months when a new thing comes along",,
5.20369E+17,Tictac#5779,2020-10-20,"> drracket has an auto-indenter and (kind of lousy) autocompletion, and it has a little graphical thing that highlights the code enclosed by a closing bracket so it's much easier to balance parens
@notjack Ah yes I use auto-indenter and the graphical thing for brackets. But for autocompletion? I've never heard of this. Does it like fill in names of parameters already defined or...",,
2.66505E+17,notjack#9941,2020-10-20,"there's a shortcut to turn it on, on my mac I think it's cmd+/",,
2.66505E+17,notjack#9941,2020-10-20,so on windows it's probably ctrl+/,,
5.20369E+17,Tictac#5779,2020-10-20,alright let met try,,
5.20369E+17,Tictac#5779,2020-10-20,what does it do exactly?,,
2.66505E+17,notjack#9941,2020-10-20,"you know the background macro expansion that happens? assuming that succeeds, the autocompletion thing gives you a little popup when you're typing identifiers and the popup lists every identifier in scope (narrowed down by what you've already typed I think)",,
2.66505E+17,notjack#9941,2020-10-20,"it's not exactly snappy since it depends on macro expansion, and it's annoying that it's not on by default so you have to know the magic shortcut to use it, but it does work",,
5.20369E+17,Tictac#5779,2020-10-20,what is the macro expansion?,,
4.62028E+17,StephenD#5938,2020-10-20,"> There are several completion framework for Racket.
> 
> Quickscript Extra's dynamic completion (dynamic-abbrev) autocompletes words using existing words in the current file. Using it to autocomplete an identifier however means that it will suggest invalid identifiers taken from string literals.
> 
> DrRacket itself has the completion functionality via ctrl .. It does not autocomplete identifiers defined within a module.
> 
> Racket Mode has its own completion functionality. In addition to supporting identifiers required from other modules, it supports identifiers within a module via Check Syntax (and also other things like autocompleting require). However, it only considers identifiers that appear textually in the code, so identifiers generated programmatically (e.g., from the struct form) are not considered. It does not autocomplete only identifiers that would be in scope.
> 
> DrComplete enhances the completion functionality in DrRacket significantly. Similar to Racket Mode, it can autocomplete variety of things, including identifiers defined in a module. Additionally, it can discover identifiers generated programmatically. However, similar to Racket Mode, it does not autocomplete only identifiers that would be in scope.
- https://github.com/sorawee/fishy-completion",,
4.62028E+17,StephenD#5938,2020-10-20,(and there is fishy-completion where I got the above text from the 'related work' section of the readme),,
5.20369E+17,Tictac#5779,2020-10-20,Do you use this extension?,,
4.62028E+17,StephenD#5938,2020-10-20,"> 
>  it's annoying that it's not on by default 
> @notjack - I want to release an alternative build of DrRacket with sensible defaults",,
4.62028E+17,StephenD#5938,2020-10-20,(Or what \*I think\* are sensible defaults),,meow (1)
4.62028E+17,StephenD#5938,2020-10-20,"> Do you use this extension?
@Tictac I will - to my shame I've not done ***any*** code since the quickscript competition.",,
5.20369E+17,Tictac#5779,2020-10-20,Quickscript right? not fishy completion,,
4.62028E+17,StephenD#5938,2020-10-20,I use quickscript.,,
4.62028E+17,StephenD#5938,2020-10-20,But I will use fishy completion when I start coding again.,,
5.20369E+17,Tictac#5779,2020-10-20,nvm thats not it,,
5.20369E+17,Tictac#5779,2020-10-20,How do I install it?,,
5.20369E+17,Tictac#5779,2020-10-20,I want it üôè,,
4.62028E+17,StephenD#5938,2020-10-20,comes with DrRacket by default,,
5.20369E+17,Tictac#5779,2020-10-20,oh,,
5.20369E+17,Tictac#5779,2020-10-20,how come I've never used it,,
4.62028E+17,StephenD#5938,2020-10-20,but doesnt include any scripts,,
5.20369E+17,Tictac#5779,2020-10-20,what does that mean,,
4.62028E+17,StephenD#5938,2020-10-20,you can get a starter set with `raco pkg install quickscript-extra`,,
5.20369E+17,Tictac#5779,2020-10-20,Where do I type this?,,
4.62028E+17,StephenD#5938,2020-10-20,,https://cdn.discordapp.com/attachments/618895179343986688/768218139267432468/unknown.png,
4.62028E+17,StephenD#5938,2020-10-20,at the command prompt,,
5.20369E+17,Tictac#5779,2020-10-20,yes,,
4.62028E+17,StephenD#5938,2020-10-20,you need to set your $PATH to include racket/bin,,
5.20369E+17,Tictac#5779,2020-10-20,How do I set my $PATH to include racket/bin,,
4.62028E+17,StephenD#5938,2020-10-20,I'll get the link,,
4.62028E+17,StephenD#5938,2020-10-20,give me a moment,,
5.20369E+17,Tictac#5779,2020-10-20,okay thanks so much,,
4.62028E+17,StephenD#5938,2020-10-20,https://github.com/racket/racket/wiki/Set-your-PATH-environment-variable,,
4.62028E+17,StephenD#5938,2020-10-20,https://docs.racket-lang.org/quickscript/ Quickscript manual,,
5.20369E+17,Tictac#5779,2020-10-20,hey so like I'm on this screen and I'm confused where to go,,
4.62028E+17,StephenD#5938,2020-10-20,https://docs.racket-lang.org/quickscript-extra/ Quickscript-extra collection of scripts,,
5.20369E+17,Tictac#5779,2020-10-20,,https://cdn.discordapp.com/attachments/618895179343986688/768219353799458816/unknown.png,
4.62028E+17,StephenD#5938,2020-10-20,is racket in Path the system variables? I can't tell,,
4.62028E+17,StephenD#5938,2020-10-20,click Path,,
4.62028E+17,StephenD#5938,2020-10-20,then click edit,,
5.20369E+17,Tictac#5779,2020-10-20,okay,,
5.20369E+17,Tictac#5779,2020-10-20,,https://cdn.discordapp.com/attachments/618895179343986688/768219718535610418/unknown.png,
5.20369E+17,Tictac#5779,2020-10-20,It opens up this page,,
4.62028E+17,StephenD#5938,2020-10-20,"> On Windows 10:
> 
> Add the location of the racket folder to your Path(%Path%) environment variable. The default location is C:\Program Files\Racket\.
> 
> The follow page does a great job of showing all the steps for editing environment variables under Windows, including the Path: https://www.hows.tech/2019/03/how-to-set-environment-variables-in-windows-10.html.",,
5.20369E+17,Tictac#5779,2020-10-20,I don't understand what thats supposed to mean lol...,,
5.20369E+17,Tictac#5779,2020-10-20,wait I think I might have got it,,
4.62028E+17,StephenD#5938,2020-10-20,"Sorry, I should explain",,
5.20369E+17,Tictac#5779,2020-10-20,yeah,,
5.20369E+17,Tictac#5779,2020-10-20,idk,,
4.62028E+17,StephenD#5938,2020-10-20,if you type `raco` in the command prompt it should show you a list of options,,
5.20369E+17,Tictac#5779,2020-10-20,ohh comand prompt,,
5.20369E+17,Tictac#5779,2020-10-20,like cmd,,
5.20369E+17,Tictac#5779,2020-10-20,yes I see,,
4.62028E+17,StephenD#5938,2020-10-20,,https://cdn.discordapp.com/attachments/618895179343986688/768220657728487444/unknown.png,
5.20369E+17,Tictac#5779,2020-10-20,I was typing that into the terminal,,
5.20369E+17,Tictac#5779,2020-10-20,of drracket,,
4.62028E+17,StephenD#5938,2020-10-20,yes 'cmd' is correct,,
5.20369E+17,Tictac#5779,2020-10-20,okay,,
4.62028E+17,StephenD#5938,2020-10-20,sorry I should have been clear,,
5.20369E+17,Tictac#5779,2020-10-20,thats okay I'm new to this stuff,,
5.20369E+17,Tictac#5779,2020-10-20,So do I then type `raco pkg install quickscript-extra`,,
5.20369E+17,Tictac#5779,2020-10-20,I didn't install anything yet,,
4.62028E+17,StephenD#5938,2020-10-20,you can also use drracket package manager,https://cdn.discordapp.com/attachments/618895179343986688/768221028731453440/unknown.png,
4.62028E+17,StephenD#5938,2020-10-20,"> So do I then type `raco pkg install quickscript-extra`
@Tictac a bunch of text should scroll by ? üò¶",,
4.62028E+17,StephenD#5938,2020-10-20,yes,,
5.20369E+17,Tictac#5779,2020-10-20,oh yeah,,
5.20369E+17,Tictac#5779,2020-10-20,its downloading something,,
4.62028E+17,StephenD#5938,2020-10-20,üòÅ,,
4.62028E+17,StephenD#5938,2020-10-20,takes a minute,,
5.20369E+17,Tictac#5779,2020-10-20,its done,,
5.20369E+17,Tictac#5779,2020-10-20,so now what XD,,
4.62028E+17,StephenD#5938,2020-10-20,"If DrRacket is already running, click on `Scripts`|`Manage scripts`|`Compile scripts and reload`  in the menu bar.",,
5.20369E+17,Tictac#5779,2020-10-20,alright,,
5.20369E+17,Tictac#5779,2020-10-20,I did that,,
4.62028E+17,StephenD#5938,2020-10-20,do you see https://media.discordapp.net/attachments/618895179343986688/768218139267432468/unknown.png?width=559&height=505,,
5.20369E+17,Tictac#5779,2020-10-20,I see a bunch of stuff,,
5.20369E+17,Tictac#5779,2020-10-20,,https://cdn.discordapp.com/attachments/618895179343986688/768222421308145664/unknown.png,
4.62028E+17,StephenD#5938,2020-10-20,these are documented at https://docs.racket-lang.org/quickscript-extra/,,
5.20369E+17,Tictac#5779,2020-10-20,oh interesting,,
5.20369E+17,Tictac#5779,2020-10-20,which one is to complete a constant name or something when I am writing constants?,,
4.62028E+17,StephenD#5938,2020-10-20,"> 
> Quickscript Extra's dynamic completion (dynamic-abbrev) autocompletes words using existing words in the current file. Using it to autocomplete an identifier however means that it will suggest invalid identifiers taken from string literals.
> 
- https://github.com/sorawee/fishy-completion",,
5.20369E+17,Tictac#5779,2020-10-20,I see,,
4.62028E+17,StephenD#5938,2020-10-20,I think you might want `fishy-complete` to get that you need to install `raco pkg install quickscript-competition-2020`,,
5.20369E+17,Tictac#5779,2020-10-20,It says that its similar to dynamic autocomplete,,
4.62028E+17,StephenD#5938,2020-10-20,the readme has details https://github.com/sorawee/fishy-completion/blob/master/README.md,,
4.62028E+17,StephenD#5938,2020-10-20,Sorry I've got to go now. You might like DrComplete,,
4.62028E+17,StephenD#5938,2020-10-20,https://github.com/yjqww6/drcomplete/blob/master/README.md,,
4.62028E+17,StephenD#5938,2020-10-20,`raco pkg install drcomplete`,,
4.62028E+17,StephenD#5938,2020-10-20,if you don't like it you can remove with,,
4.62028E+17,StephenD#5938,2020-10-20,`raco pkg remove drcomplete`,,
4.62028E+17,StephenD#5938,2020-10-20,and restart drracket,,
5.20369E+17,Tictac#5779,2020-10-20,okay,,
5.20369E+17,Tictac#5779,2020-10-20,I reloaded DrRacket and my scripts from before aren't there anymore,,
5.20369E+17,Tictac#5779,2020-10-20,does that mean I have to like redo the raco thing every single time?,,
4.62028E+17,StephenD#5938,2020-10-20,no,,
4.62028E+17,StephenD#5938,2020-10-20,"If DrRacket is already running, click on Scripts|Manage scripts|Compile scripts and reload  in the menu bar.",,
5.20369E+17,Tictac#5779,2020-10-20,yeah I did that,,
5.20369E+17,Tictac#5779,2020-10-20,but I have this,,
5.20369E+17,Tictac#5779,2020-10-20,,https://cdn.discordapp.com/attachments/618895179343986688/768225983211372544/unknown.png,
4.62028E+17,StephenD#5938,2020-10-20,click library in that menu,,
5.20369E+17,Tictac#5779,2020-10-20,,https://cdn.discordapp.com/attachments/618895179343986688/768226118242664458/unknown.png,
4.62028E+17,StephenD#5938,2020-10-20,thats odd It looks like the quickscript-extra package has been removed,,
5.20369E+17,Tictac#5779,2020-10-20,yeah,,
5.20369E+17,Tictac#5779,2020-10-20,I should redownload it right,,
4.62028E+17,StephenD#5938,2020-10-20,go into the drracket package manager and see if it is still installed?,,
5.20369E+17,Tictac#5779,2020-10-20,how do I access that?,,
4.62028E+17,StephenD#5938,2020-10-20,(check first),,
5.20369E+17,Tictac#5779,2020-10-20,where can I check the drracket package manager?,,
4.62028E+17,StephenD#5938,2020-10-20,in the file menu,https://cdn.discordapp.com/attachments/618895179343986688/768226608870850560/unknown.png,
5.20369E+17,Tictac#5779,2020-10-20,alright thanks,,
5.20369E+17,Tictac#5779,2020-10-20,I think it says its installed,,
5.20369E+17,Tictac#5779,2020-10-20,,https://cdn.discordapp.com/attachments/618895179343986688/768226783886704640/unknown.png,
4.62028E+17,StephenD#5938,2020-10-20,"sorry, close that",,
4.62028E+17,StephenD#5938,2020-10-20,in the interactions do ` (require quickscript-extra/register)`,,
5.20369E+17,Tictac#5779,2020-10-20,alright,,
4.62028E+17,StephenD#5938,2020-10-20,Then click on Scripts|Manage scripts|Compile scripts and reload. (There is no need to restart DrRacket.),,
5.20369E+17,Tictac#5779,2020-10-20,okay,,
5.20369E+17,Tictac#5779,2020-10-20,ye I got it now thanks!,,
4.62028E+17,StephenD#5938,2020-10-20,"it takes a moment or two to reload the menu, but they should appear there",,
5.20369E+17,Tictac#5779,2020-10-20,cool nice,,
4.62028E+17,StephenD#5938,2020-10-20,instructions here: https://docs.racket-lang.org/quickscript/index.html#%28part._.Quickscript_.Extra%29,,
4.62028E+17,StephenD#5938,2020-10-20,sorry I have to go - I just got back from football and  I need a shower.,,
5.20369E+17,Tictac#5779,2020-10-20,oh yeah thank you so muchhhhh,,
4.62028E+17,StephenD#5938,2020-10-20,are you OK? I dont want to leave you in a state were you cant code,,
4.62028E+17,StephenD#5938,2020-10-20,?,,
5.20369E+17,Tictac#5779,2020-10-20,I'm good,,
5.20369E+17,Tictac#5779,2020-10-20,I'm good,,
5.20369E+17,Tictac#5779,2020-10-20,thanks!,,
5.20369E+17,Tictac#5779,2020-10-20,you helped a lot,,
4.62028E+17,StephenD#5938,2020-10-20,its good you set the %Path%,,
5.20369E+17,Tictac#5779,2020-10-20,"Thanks for all your help, this was a very confusing process so I'm lucky you came to help",,
4.62028E+17,StephenD#5938,2020-10-20,now you can use `raco exe` to compile your code for more speed!,,
5.20369E+17,Tictac#5779,2020-10-20,Compile code with raco exe?,,
4.62028E+17,StephenD#5938,2020-10-20,its good for me to find out what new users find confusing. It helps with documentation,,
5.20369E+17,Tictac#5779,2020-10-20,oo,,
5.20369E+17,Tictac#5779,2020-10-20,wait are you a developer?,,
5.20369E+17,Tictac#5779,2020-10-20,for drracket?,,
4.62028E+17,StephenD#5938,2020-10-20,not a core one but I make small contributions sometimes.,,
4.62028E+17,StephenD#5938,2020-10-20,https://github.com/racket-templates/cli-command/blob/master/README.md,,
4.62028E+17,StephenD#5938,2020-10-20,the readme and github repo has instructions to compile a small command line utility,,
4.62028E+17,StephenD#5938,2020-10-20,try it out and let me know if you run into any problems - I can help tomorrow.,,
5.20369E+17,Tictac#5779,2020-10-20,Alright cool I'll need to first try to get fishy completion to work,,
1.30231E+17,sarna#3904,2020-10-21,racket-mode broke on me again :meow:,,
1.30231E+17,sarna#3904,2020-10-21,https://github.com/greghendershott/racket-mode/issues/488,,
1.30231E+17,sarna#3904,2020-10-21,‚Äúclosed‚Äù,,
4.62028E+17,StephenD#5938,2020-10-21,@sarna it was closed because they couldnt reproduce the issue. If you know how to reproduce add the details and reopen the issue üôÇ,,
1.30231E+17,sarna#3904,2020-10-21,@StephenD the worst thing is that it appears and disappears randomly,,
1.30231E+17,sarna#3904,2020-10-21,now it appeared two days after installing emacs,,
1.30231E+17,sarna#3904,2020-10-21,"I nuked .emacs.d, will see if it helps",,
1.30231E+17,sarna#3904,2020-10-21,"but if I get it again, I‚Äôll reopen this issue",,
1.30231E+17,sarna#3904,2020-10-21,:meow:,,
4.62028E+17,StephenD#5938,2020-10-21,"The %252F is part of the query. Maybe an encodign mismatch where the query is sendign UTF-16, but racket-mode is expecting UTF-8",,
4.62028E+17,StephenD#5938,2020-10-21,Only guessing though.,,
1.30231E+17,sarna#3904,2020-10-21,I had a normal-looking path..,,
1.30231E+17,sarna#3904,2020-10-21,like `/home/me/code/foo.rkt`,,
4.62028E+17,StephenD#5938,2020-10-21,"did you try 
> Move point to the for/fold and press C-u C-x =. In the resulting *Help* buffer, where it describes text properties, is there a racket-xp-doc property and if so what is its value?",,
4.62028E+17,StephenD#5938,2020-10-21,Include that when you reopen.,,
1.30231E+17,sarna#3904,2020-10-21,these bindings don‚Äôt work for me,,
1.30231E+17,sarna#3904,2020-10-21,as I have doom emacs,,
1.30231E+17,sarna#3904,2020-10-21,I commented on the issue :/,,ü§û (1)
4.62028E+17,StephenD#5938,2020-10-21,Ahh - there are lots of doom users on the slack - if you dont use slack I can ask there what hte equivalent bindings in doom are?,,
1.30231E+17,sarna#3904,2020-10-21,just the command would be enough,,
4.62028E+17,StephenD#5938,2020-10-21,PS Good report - hoping that will help Greg identify the issue.,,
1.30231E+17,sarna#3904,2020-10-21,I tried :meowblush:,,plusone (1)
1.30231E+17,sarna#3904,2020-10-21,"and you can ask if it‚Äôs not much of a hassle, thanks",,
4.62028E+17,StephenD#5938,2020-10-21,I will do it now.,,meowblush (1)
4.62028E+17,StephenD#5938,2020-10-21,(You should probably note in your update that you are usign doom as it might be relevant),,
1.30231E+17,sarna#3904,2020-10-21,"I try not to do that at least at first, I had really unpleasant back-and-forth when using spacemacs",,
1.30231E+17,sarna#3904,2020-10-21,"(asking on #emacs - ‚Äúspacemacs is not emacs, ask on their channel!‚Äù
asking on #spacemacs - ‚Äúit‚Äôs an emacs problem, please try on #emacs‚Äù)",,
4.62028E+17,StephenD#5938,2020-10-21,Greg is not like that.,,
1.30231E+17,sarna#3904,2020-10-21,I‚Äôll update the issue then,,
1.05725E+17,Mitranim#5870,2020-10-21,Is anyone interested in nitpicks on Lisp syntax? Wrote some observations and would be interested in counter-arguments,,
1.30231E+17,sarna#3904,2020-10-21,"too many parens, huh?",,
1.05725E+17,Mitranim#5870,2020-10-21,"Oh, not that üôÇ",,
1.30231E+17,sarna#3904,2020-10-21,"oh, then please go ahead",,
1.05725E+17,Mitranim#5870,2020-10-21,"First one is about the concept of homoiconicity, which is arguably under-defined. What I'm critiquing may not be what other people think about: https://mitranim.com/posts/lang-homoiconic",,üëç (1)
4.62028E+17,StephenD#5938,2020-10-21,FWIW the many in the racket community recognise that `(+ 2 (* 3 4))` is a barrier for learners and are actively looking at supporting more familiar infix notations `2+(3*4)`,,
1.05725E+17,Mitranim#5870,2020-10-21,"Funny because personally, I think that's a feature we should never look to ""fix""",,
1.05725E+17,Mitranim#5870,2020-10-21,"There are other things to fix though, such as silly indentation conventions",,
4.62028E+17,StephenD#5938,2020-10-21,you are not alone. lots of different opinions here. that is fine.,,üëç (1)
1.30231E+17,sarna#3904,2020-10-21,wouldn‚Äôt `(2 . + . (3 . * . 4))` work?,,
1.05725E+17,Mitranim#5870,2020-10-21,That's the topic for the next post I was gonna link to discuss...,,
4.62028E+17,StephenD#5938,2020-10-21,yeah but you gotta admit it is unweildly,,plusone (1)
4.62028E+17,StephenD#5938,2020-10-21,I'm going to read your post @Mitranim !,,üìñ (1)
4.62028E+17,StephenD#5938,2020-10-21,I'm over at the racket taiwan discord!,,GWseremePeepoGGERS (1)
1.05725E+17,Mitranim#5870,2020-10-21,"The other one is just observing how much Lisp users _don't_ want to write S-expressions, and hack their way around them: https://mitranim.com/posts/lisp-sexpr-hacks",,üëç (1)
1.05725E+17,Mitranim#5870,2020-10-21,Doesn't include indent-based conventions but probably should have,,
1.05725E+17,Mitranim#5870,2020-10-21,"It's all coming from a fan, mind you",,
1.05725E+17,Mitranim#5870,2020-10-21,There's probably a lot more hacks in obscure dialects,,
1.30231E+17,sarna#3904,2020-10-21,have you heard of Rhombus?,,
1.30231E+17,sarna#3904,2020-10-21,"but yeah - my biggest issue is that while there‚Äôs virtually no entry barrier (first thing is a function, rest is arguments), lisp is still annoyingly hard for me to read",,
4.62028E+17,StephenD#5938,2020-10-21,Have you tried Reading Perl ? ü§£ üò≠ üò±,,
1.30231E+17,sarna#3904,2020-10-21,"I tried Raku, and it‚Äôs still more readable to me than Racket :meow:",,
1.30231E+17,sarna#3904,2020-10-21,Perl is harder,,
4.62028E+17,StephenD#5938,2020-10-21,"I've only read perl, I've never tried raku",,
1.30231E+17,sarna#3904,2020-10-21,Raku can read like a human language,,
1.30231E+17,sarna#3904,2020-10-21,Racket never will,,
1.30231E+17,sarna#3904,2020-10-21,unless you use a different #lang,,
1.30231E+17,sarna#3904,2020-10-21,"like, take a look at how prime numbers are defined here https://github.com/Raku/examples/blob/8d106ca066d6d827d4727b8d78c37b71f4409171/categories/best-of-rosettacode/prime-decomposition.pl#L28",,
4.62028E+17,StephenD#5938,2020-10-21,"There is now a Racket Taiwan Discord at https://discord.gg/xpwzAcx - it accepts several languages: English, Chinese, and many languages in Taiwan! üíØüòÉüëç",,
1.05725E+17,Mitranim#5870,2020-10-21,"I guess ""nitpicks on Lisp syntax"" was poor phrasing. Makes people talk about syntax _in general_. The observations in the posts above are very specific, and more about the implementation",,
4.62028E+17,StephenD#5938,2020-10-21,"> like, take a look at how prime numbers are defined here https://github.com/Raku/examples/blob/8d106ca066d6d827d4727b8d78c37b71f4409171/categories/best-of-rosettacode/prime-decomposition.pl#L28
@sarna wow! reminds me a lot of Applescript",,
4.62028E+17,StephenD#5938,2020-10-21,(I need to be clear *that is not a criticsm*),,
1.30231E+17,sarna#3904,2020-10-21,never heard of it,,
1.30231E+17,sarna#3904,2020-10-21,I‚Äôve never had a mac :meow:,,
1.05725E+17,Mitranim#5870,2020-10-21,‚Üë Requires a lot of special knowledge just to read,,
1.05725E+17,Mitranim#5870,2020-10-21,Needlessly high barrier,,
1.30231E+17,sarna#3904,2020-10-21,yeah but there‚Äôs a trade off there,,
1.30231E+17,sarna#3904,2020-10-21,you have to learn quite a lot to read it fluently,,
1.30231E+17,sarna#3904,2020-10-21,"but when you do, it‚Äôs grand",,
1.30231E+17,sarna#3904,2020-10-21,lisps still have that ‚Äúeverything is second-class‚Äù feeling for me,,
4.62028E+17,StephenD#5938,2020-10-21,"[ANN] fast-sequence
 (by Anna Bolotina, copied from Racket-users)

Hi,

I'm pleased to announce fast-sequence, a package providing a set of efficient and expressive macros for fast sequences.

The provided macros have high performance when used in a for (or its variants) clause. The best performance is provided when the macros are applied to fast sequences, such as applications of in-list, in-range, etc. The aim of the package is to make it easier to define new fast sequence forms.

Here is the documentation:

https://docs.racket-lang.org/fast-sequence/index.html

Please write to me if operations from this package are useful for your work. Feedback is welcome!",,
1.30231E+17,sarna#3904,2020-10-21,oh that‚Äôs a cool little package,,
4.62028E+17,StephenD#5938,2020-10-21,"(by Anna Bolotina, copied from Racket-users)",,
4.62028E+17,StephenD#5938,2020-10-21,nothing to do with me - I just thought it was a cool thing that should be shared,,
7.38552E+16,RaycatWhoDat#0001,2020-10-21,"dammit, did I miss the Raku conversation",,
4.62028E+17,StephenD#5938,2020-10-21,"You didn't miss much. Someone said 'lisp syntax is hard to read', I responded 'haha have tried perl', someone else said 'raku is good' and gave and example, I saw the example and said 'it reminded me of applescript in a good way', then someone else said 'whats applescript?'",,
7.38552E+16,RaycatWhoDat#0001,2020-10-21,ah,,
7.38552E+16,RaycatWhoDat#0001,2020-10-21,Raku causes me to flipflop language stacks more than I care to admit,,
7.38552E+16,RaycatWhoDat#0001,2020-10-21,"Sometimes, I just get tired of parens",,
2.75501E+17,Plane#0324,2020-10-21,a long time ago i was a professional perl programmer.  it's not my favorite language for various reasons but i still kind of have a soft spot for it because it's so easy to get a lot of things done in it.  or maybe because i've put enough time into it to be able to work quickly in it,,
2.75501E+17,Plane#0324,2020-10-21,i'll still use it for rather small things here and there,,
1.30231E+17,sarna#3904,2020-10-21,"I wanted to use it at work, but it got deprecated in favor of Python before I managed to actually write anything in it :meow:",,
4.35483E+17,KirbySlayer#3616,2020-10-21,"Hello, I wanna to know about how do the cartesian plane with ""Plot"" or an any information about 2D renders of this library... Thank u",,
2.67464E+17,SlashDevSlashRandom#2112,2020-10-21,have you seen <https://docs.racket-lang.org/plot/intro.html#%28part._.Plotting_2.D_.Graphs%29>?,,
4.35483E+17,KirbySlayer#3616,2020-10-21,Yes but i don't understand anything... I'm a beginner :c,,
2.67464E+17,SlashDevSlashRandom#2112,2020-10-21,"In that case, could you ask a more specific question about something you don't understand?",,
4.35483E+17,KirbySlayer#3616,2020-10-21,"how do u make a cartesian plane with plot? specifically with points ""https://docs.racket-lang.org/plot/renderer2d.html?q=plot""

The first item in the #3.2... Sorry for the english but I am colombian xd",,
1.93202E+17,rocketnia#4517,2020-10-21,"@Mitranim Both those blog posts were fantastic. I've come to a lot of the same conclusions in the designs of my languages, eventually preferring to consider strings and symbols to be the same thing, preferring readers that preserve formatting information, and preferring syntaxes that completely avoid infix (even in small quantities). I also avoid letting non-parenthesized prefix operations be applied to parenthesized arguments because it messes with indentation style and paren visibility. Traditional Lispy syntax has a lot of room for improvement, even with regard to some of the very principles that have supported it this far.",,"üëç (1),üíØ (1)"
1.93202E+17,rocketnia#4517,2020-10-21,@KirbySlayer A more specific question would make it easier to help. That section you linked gives two complete examples of using `points`. Do they work for you?,,
2.67464E+17,SlashDevSlashRandom#2112,2020-10-21,"Kirby if you just want a grid with nothing plotted on it, I would probably make `hrule`s and `vrule`s for the ranges, and then plot them",,
2.67464E+17,SlashDevSlashRandom#2112,2020-10-21,"if you do that, you'll need to specify the bounds as arguments to the plot function, because otherwise plot won't be able to decide what the bounds should be",,
1.05725E+17,Mitranim#5870,2020-10-22,"> lisps still have that ‚Äúeverything is second-class‚Äù feeling for me
Interesting way to phrase it. Might put this as a slogan on the next language, because that's sort of by design",,
1.05725E+17,Mitranim#5870,2020-10-22,Allocating special syntax to make `*ref` or `[]arr` first-class has the massive cost of overfitting the language to a particular subset of problems/programs,,
1.05725E+17,Mitranim#5870,2020-10-22,I believe we should stop overfitting languages and start designing languages that can be fitted for any problem/program. Been trying to phrase this well enough for a post,,
1.05725E+17,Mitranim#5870,2020-10-22,"Lisps are overfit too, you have to start from scratch from C level and build a full stack language from there",,
1.05725E+17,Mitranim#5870,2020-10-22,"Might be incendiary to say this in a Racket channel, but from my perspective, people implementing Lisp in C don't love Lisp enough",,
1.05725E+17,Mitranim#5870,2020-10-22,"Bad phrasing here, assumes too much about people and what they want from languages. Arguably a projection.",,
1.05725E+17,Mitranim#5870,2020-10-22,Better suggestions are welcome,,
1.05725E+17,Mitranim#5870,2020-10-22,The idea is that we shouldn't confine good qualities of Lisps to the implementation and execution model that prevents them from being self-hosted,,
1.05725E+17,Mitranim#5870,2020-10-22,"That level requires types, and the syntax for types is kind of hard to fit into a Lisp, especially when generics are involved. Can create syntactic ambiguities too. I can see why they don't usually bother. But it seems solvable",,
1.05725E+17,Mitranim#5870,2020-10-22,"Anyway, one consequence is that to make the language fittable for the full range of problems from C level to abstract business or scientific logic expressed in a DSL, you can't afford to allocate special syntax for _any_ of them, so _everything_ must be second-class, which is a useful insight",,
1.93202E+17,rocketnia#4517,2020-10-22,"I don't think there's a special difficulty with fitting the syntax of types to s-expressions.

Within the Racket ecosystem, see the contract system, the FFI, Typed Racket, Hackett (a proof-of-concept `#lang` with a type system like Haskell's), and Magnolisp (a `#lang` which compiles to C++).

Outside the Racket ecosystem, see BitC (back when it used s-expressions)... and... I'm sure I've seen at least a couple of low-level Schemes meant to be self-hostable intermediate languages, but I can't think of what they were called.",,
1.93202E+17,rocketnia#4517,2020-10-22,".
Scopes is a systems language with a syntax inspired by s-expressions: https://scopes.readthedocs.io/en/latest/dataformat/

A lot of these make choices that do give them some specialized syntax aside from s-expressions, but I think these can usually be brought back to s-expressions through a series of superficial tweaks to the syntax.",,
1.05725E+17,Mitranim#5870,2020-10-22,"Oh yes, just started reading about Typed Racket today, and placing type declarations separately from definitions really helps alleviate the difficulties I thought we'd have",,
1.05725E+17,Mitranim#5870,2020-10-22,"> I'm sure I've seen at least a couple of low-level Schemes meant to be self-hostable intermediate languages, but I can't think of what they were called.
Would be curious to find truly self-hosted Lisps",,
1.05725E+17,Mitranim#5870,2020-10-22,"In the sense that it compiles to assembly. I wrote a Lisp-to-JS at some point and it's _technically_ self-hosted, but that's not quite as useful",,
4.66395E+17,oaktownsam#0815,2020-10-22,"Chez and ikarus do.  (Ikarus may have been abandoned, I can't keep track of all of those schemes anymore)",,
1.05725E+17,Mitranim#5870,2020-10-22,"Interesting! Didn't know, checking Chez now, thanks",,
1.05725E+17,Mitranim#5870,2020-10-22,"Unsurprisingly, Chez source includes C code for allocations, GC, etc...",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,what was the problem? your system using C,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,You can use S-expression write a C,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,but that still a C,,
1.05725E+17,Mitranim#5870,2020-10-22,Could you please rephrase that? Hard to understand,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,`(define a (malloc (* Int)))`,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,so this is C or racket?,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,You have to interact with your abstract computation model,,
1.05725E+17,Mitranim#5870,2020-10-22,"Oh yes you could define a typed language using S-expressions for syntax. It could start C-like, but could also have higher-level supersets, all the way up to dynamic typing if desired. That's precisely my point. This could be far more useful than dynamic languages that depend on C instead of competing with it, while bereaving their users of this power",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,You didn't lose your power: https://github.com/rjnw/sham,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,"Anyone can make something like this, maybe not that easy, but possible",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,"If you build on C-like something, then users would like to interact with, if they can't they would argue that",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,And what was the problem of FFI?,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,Maybe you would like to learn PLT? üôÇ,,
1.05725E+17,Mitranim#5870,2020-10-22,Hmm would you care to explain the link above? It seems to have no documentation and I don't magically know what it's supposed to do...,,
1.05725E+17,Mitranim#5870,2020-10-22,"By PLT, are you referring to Racket?",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,Programming Language Theory,,
1.05725E+17,Mitranim#5870,2020-10-22,Maybe I should üôÇ It's about time,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,I think they have a paper,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,https://arxiv.org/pdf/2005.09028.pdf,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,"basically, you can do code generation via reader macro, and control link via something like require or something else, or you make a runtime for startup. Then you get what you want.",,üëç (1)
1.05725E+17,Mitranim#5870,2020-10-22,Hmm curious,,
1.05725E+17,Mitranim#5870,2020-10-22,"I'll check the paper, will take a while to grok",,
1.05725E+17,Mitranim#5870,2020-10-22,"So you could start with a dynamic language hosted by C, then write code that outputs assembly (Sham DSL or not), and theoretically replace the C code with that code? Sounds suspiciously similar to making a language that uses S-expressions for syntax, to the point that I lose track of the distinction",,
1.05725E+17,Mitranim#5870,2020-10-22,"Although I should read the paper first, they probably have different uses in mind",,
1.05725E+17,Mitranim#5870,2020-10-22,Such as linking the generated assembly into the currently running program,,
1.05725E+17,Mitranim#5870,2020-10-22,"Pretty exciting stuff, thanks for linking it",,
1.05725E+17,Mitranim#5870,2020-10-22,"Curious how easy or hard it would be to take the last logical step and turn this into executable binaries, replacing C, instead of going C ‚Üí Scheme ‚Üí macros ‚Üí LLVM ‚Üí execution, generating that code every time at runtime",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,"We would have a computation model, compiler make an executable format of that model, whole stuff. So, a macro generate `*.o` file as compiler, why not? üôÇ",,
1.05725E+17,Mitranim#5870,2020-10-22,"That was sort of my plan for bootstrapping a language, haven't gotten around to learning how to yet",,
1.05725E+17,Mitranim#5870,2020-10-22,"But I'll challenge your claim ""you didn't lose that power"" because it's true in a _technical_ sense but not a _practical_ sense since most users of a dynamic language are indeed locked out of the option to compile to an efficient executable while benefitting from type checking, sans writing a compiler themselves, by using Sham or somesuch...",,
1.05725E+17,Mitranim#5870,2020-10-22,"On my system `raco` takes 250ms to print help, so something must have gone wrong somewhere ü§∑‚Äç‚ôÄÔ∏è",,üòÜ (1)
1.05725E+17,Mitranim#5870,2020-10-22,"Apologies, I'm not here to offer critique",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,Hope chez can save that www,,ü§∑‚Äç‚ôÄÔ∏è (1)
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,"I understand your point, but that kind of language would be really hard, limitation removes flexibility. A different layer usually can't work well together, then you still have to unify them together",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-10-22,"I think https://github.com/Shark-Lang/Documentations/blob/main/doc.md trying to do what you thought, but they use Chinese... I tell them use English...",,"üá¨üáß (1),üá∫üá∏ (1)"
4.62028E+17,StephenD#5938,2020-10-22,https://translate.google.co.uk/translate?sl=zh-CN&tl=en&u=https%3A%2F%2Fgithub.com%2FShark-Lang%2FDocumentations%2Fblob%2Fmain%2Fdoc.md,,
4.62028E+17,StephenD#5938,2020-10-22,(seems passable),,
4.66395E+17,oaktownsam#0815,2020-10-22,@StephenD Thank you for sharing Leif's paper.  It's given me more to digest.,,
4.62028E+17,StephenD#5938,2020-10-22,Thank Leif !,,plusone (1)
4.62028E+17,StephenD#5938,2020-10-27,https://youtu.be/Pk3c9XarfHU,,"üëÄ (2),plusone (2)"
6.89163E+17,kilomeow#3267,2020-10-30,hi everyone! how hard do you think it will be to compile the `pollen` to `js` using racketscript (https://github.com/vishesh/racketscript) or whalesong (https://planet.racket-lang.org/package-source/dyoo/whalesong.plt/1/8/planet-docs/manual/index.html) ? or maybe to `wasm`?,,
6.89163E+17,kilomeow#3267,2020-10-30,the idea is to make fully client-side pollen web-editor,,
4.62028E+17,StephenD#5938,2020-10-30,"Welcome @kilomeow 

Do you mean a pollen editor or a pollen compiler? (or both?)


Notes: 
- RacketScript is currently not working as it is being updated to support the linklets changes in Racket. (vishesh has a new job and while he is still contributing he can't allocate as much time so has handed leadership over to Stephen Chang who is working on the update effort)
- I dont think whalesong will do this.
- We currently have wasm backend. The switch to the Chez Scheme backend will eventually make this possibly but I'm not aware of anyone working on wasm yet.",,
6.89163E+17,kilomeow#3267,2020-10-30,I'm talking more about pollen compiler. I want to do transformation from pollen markup/markdown to html on the client-side.,,
6.89163E+17,kilomeow#3267,2020-10-30,thank you for information on current state of `js` compilers. Wasm backend seems very interesting,,
4.62028E+17,StephenD#5938,2020-10-30,"I don't know your constraints but I'd suggest having a web based editor, with compiling happening on a server being much more achievable, and would provide a stepping stone towards doing it all on the client.",,
6.89163E+17,kilomeow#3267,2020-10-30,"yeah, it's already done with `pollen-rock` and it rocks üòâ",,
4.62028E+17,StephenD#5938,2020-10-30,I didn't know about that - can you share the  link?,,
6.89163E+17,kilomeow#3267,2020-10-30,https://docs.racket-lang.org/pollen-rock/index.html,,meow (1)
6.89163E+17,kilomeow#3267,2020-10-30,There is a deep difficulty in the fact that pollen is dsl for a racket and it seems that it's not so easy to compile to js/wasm. There is need to add some parts of the racket interpreter to js code üôÇ,,
6.89163E+17,kilomeow#3267,2020-10-30,"but there is a real profit of doing this, because fully client-side pollen web-editor would be much cooler",,
6.89163E+17,kilomeow#3267,2020-10-30,and it would be possible to add multi-user collaboration on the level of source editor,,
4.62028E+17,StephenD#5938,2020-10-30,"> and it would be possible to add multi-user collaboration on the level of source editor
@kilomeow that could be added to pollen-rock.",,
4.62028E+17,StephenD#5938,2020-10-30,I think multi-user collaboration is harder sans-server - I think there have been some projects to do it (not in racket),,
4.62028E+17,StephenD#5938,2020-10-30,Two people editing the same document onscreen at the same time probably also has disadvantages.,,
4.62028E+17,StephenD#5938,2020-10-30,(It certainly has technical challenges),,
4.62028E+17,StephenD#5938,2020-10-30,Can I suggest an alternative?   Set up a github action that compiles a pollen repository on commits.,,üÜí (1)
6.89163E+17,kilomeow#3267,2020-10-30,oh that's cool idea,,meow (1)
4.62028E+17,StephenD#5938,2020-10-30,I can't recall one. would be fun. 2htdp/universe & 2htdp/image,,
4.62028E+17,StephenD#5938,2020-10-30,or a console version!,,
9.83922E+16,Olical#9380,2020-11-01,"Hello Racket land! I've just finished a first version of Racket support in Conjure https://github.com/Olical/conjure my Neovim tooling for interacting with Clojure, Fennel, Janet and _now_ Racket! https://github.com/Olical/conjure/releases/tag/v4.8.0

If there's any Neovimmy people out there that love some of these languages (presumably Racket) I'd love to hear your feedback if this seems like something you'd be interested in. To avoid spam here, feel free to have a chat with me in the racket channel of https://conjure.fun/discord",,üëè (1)
9.83922E+16,Olical#9380,2020-11-01,And here's a little asciinema of me evaluating things in all of the languages https://asciinema.org/a/369564,,
9.83922E+16,Olical#9380,2020-11-01,"I am a Racket dabbler at best, so if there's people that are interested in this and think I'm doing things wrong, please let me know. I'd love to improve it for you üôÇ I'm a Clojure programmer by trade, so you'll have to call me out on Clojure-y influences leaking into the Racket side.",,üòç (5)
4.62028E+17,StephenD#5938,2020-11-01,"Hi @Olical 
Have you posted this on the other Racket channels - racket slack, IRC, racket-users mailing list, and r/racket ?",,
9.83922E+16,Olical#9380,2020-11-01,Nope! I'm not really aware of all the Racket-y places.,,
4.62028E+17,StephenD#5938,2020-11-01,reddit: https://www.reddit.com/r/Racket/,,
4.62028E+17,StephenD#5938,2020-11-01,mailing list: https://groups.google.com/forum/#!forum/racket-users/join,,
4.62028E+17,StephenD#5938,2020-11-01,#racket IRC on freenode.net: https://botbot.me/freenode/racket/,,
4.62028E+17,StephenD#5938,2020-11-01,https://racket-slack.herokuapp.com/ Slack channel signup. (https://racket.slack.com/ once you have signed up),,
4.62028E+17,StephenD#5938,2020-11-01,submit to https://racket-stories.com,,
4.62028E+17,StephenD#5938,2020-11-01,submit to https://racket-news.com newsletter at https://github.com/pmatos/racket-news/issues/new,,
4.62028E+17,StephenD#5938,2020-11-01,(If you are happy to compose a short announcement I am happy to post on any you are unable to do so yourself - but it is generally better if you post as the author),,
4.62028E+17,StephenD#5938,2020-11-01,I should also be clear I'm not a Clojure programmer myself - but I know a lot of racketeers are so it is worth getting the word out,,
4.66395E+17,oaktownsam#0815,2020-11-01,@Olical I posted the link in the #vim chat in the Racket slack.,,
9.83922E+16,Olical#9380,2020-11-01,Oh thanks!,,
2.66505E+17,notjack#9941,2020-11-02,this was neat to see today üòÅ https://www.reddit.com/r/Racket/comments/jmfgrs/racket_rebellion_tutorials_and_examples/,,üéâ (3)
2.75501E+17,Plane#0324,2020-11-03,"when i updated racket to 7.8, i had to basically remember and reinstall all the packages i'd been using before that",,
2.75501E+17,Plane#0324,2020-11-03,"i saw the discussion of `raco setup` and thought ""hey, that sounds nice.  when i update to 7.9, maybe that'll do it for me""",,
2.75501E+17,Plane#0324,2020-11-03,"but nope, now i have 7.9 and have to install all the packages again",,
2.75501E+17,Plane#0324,2020-11-03,i do have one file which requires a lot of stuff so i'm just repeatedly clicking 'install' in drracket after each error,,
2.75501E+17,Plane#0324,2020-11-03,it shouldn't take too long to get back to where i was,,
2.75501E+17,Plane#0324,2020-11-03,"it makes me wonder if there is a nice seamless, automatic way to do these upgrades which i'm somehow not doing though lol",,
5.59518E+17,alomew#2163,2020-11-03,I believe that `raco pkg migrate <old-version>` does this,,
2.75501E+17,Plane#0324,2020-11-03,ooh,,
2.75501E+17,Plane#0324,2020-11-03,thanks i'll put that in my notes for next time (:,,
2.75501E+17,Plane#0324,2020-11-03,the only other little thing i had to do was rebuild the little helper programs i use with `raco exe` since they're dynamically linked,,
2.75501E+17,Plane#0324,2020-11-03,(i use racket to make little programs to make my life easier),,
4.62028E+17,StephenD#5938,2020-11-03,‰πãÂâçÁî®‰æÜÂØ´ clojure ÁöÑ vim plugin ÁèæÂú®ÊîØÊè¥ racket ‰∫Ü https://github.com/Olical/conjure/wiki/Quick-start:-Racket-(stdio),,
3.29023E+17,nixin72#3554,2020-11-03,What year did PLT Scheme get renamed to Racket?,,
3.29023E+17,nixin72#3554,2020-11-03,"Last release to the PLT Scheme website was 2010, but I assume the official renaming happened before that?",,
3.29023E+17,nixin72#3554,2020-11-03,"Okay, looks like it officially changed to Racket at version 5 which came out June 2010",,
7.73175E+17,meowüé∫#2842,2020-11-04,Hello,,
7.73175E+17,meowüé∫#2842,2020-11-04,I lost control of my previous account @Deleted User.,,
2.66505E+17,notjack#9941,2020-11-04,twolu,,meow (2)
4.62028E+17,StephenD#5938,2020-11-04,@meowüé∫ should I remove or otherwise disable the old account?,,
2.75501E+17,Plane#0324,2020-11-04,welcome back @meowüé∫ and i hope you can resolve the account situation in whatever way is best for you,,
2.75501E+17,Plane#0324,2020-11-04,"@alomew thank you, i ended up running `raco pkg migrate 7.8` and realized there were several things i'd forgotten!  i'm going to try to remember to do this after each version is released",,üéâ (5)
7.73175E+17,meowüé∫#2842,2020-11-04,"@StephenD Yeah, you can discard the old one.",,
7.73175E+17,meowüé∫#2842,2020-11-05,I wonder... Is there a compromise between `filter` and `map`?,,
7.73175E+17,meowüé∫#2842,2020-11-05,Something equivalent to `(filter values (map <predicate> <list>))`,,
7.73175E+17,meowüé∫#2842,2020-11-05,`map` returns false values and `filter` discards results and returns the original values.,,
2.75501E+17,Plane#0324,2020-11-05,There is a `filter-map` although it takes a function where you wrote values,,
7.73175E+17,meowüé∫#2842,2020-11-05,I guess I could just implement it with `(define (filter-map p lst) (foldl (lambda (v acc) (if (p v) (cons v acc) acc)) '() lst))`,,
7.73175E+17,meowüé∫#2842,2020-11-05,Oh?,,
7.73175E+17,meowüé∫#2842,2020-11-05,wow there literally is a `filter-map`,,
2.75501E+17,Plane#0324,2020-11-05,https://docs.racket-lang.org/reference/pairs.html#%28def._%28%28lib._racket%2Flist..rkt%29._filter-map%29%29,,
2.75501E+17,Plane#0324,2020-11-05,(:,,
7.73175E+17,meowüé∫#2842,2020-11-05,Reminds me of the time I started out to implement `define/match` but realised it's already there when Emacs highlighted the name.,,
2.75501E+17,Plane#0324,2020-11-05,There‚Äôs a `filter-map` in SRFI 1 as well,,
7.73175E+17,meowüé∫#2842,2020-11-05,I keep neglecting to check SRFI-1 at times like this.,,
2.75501E+17,Plane#0324,2020-11-05,"Also I just learned to type backticks on my phone, yay me",,meow (2)
2.75501E+17,Plane#0324,2020-11-05,Only took years üëÄ,,
4.62028E+17,StephenD#5938,2020-11-05,(you are not the only one...),,
7.73175E+17,meowüé∫#2842,2020-11-05,haha,,
7.73175E+17,meowüé∫#2842,2020-11-05,"After spending quite a bit of time trying to parse nested lists with layered `map`s, `fold`s, `filter`s and `assq`s, I figured I should try SXML/SXPath.",,
7.73175E+17,meowüé∫#2842,2020-11-05,"And oh my goodness, it works like a charm.",,
4.62028E+17,StephenD#5938,2020-11-05,not `match` or a lens library?,,
4.62028E+17,StephenD#5938,2020-11-05,https://github.com/jackfirth/lens,,
4.62028E+17,StephenD#5938,2020-11-05,@notjack,,
7.73175E+17,meowüé∫#2842,2020-11-05,"It's so simple... üò≠
```Scheme
#lang racket/base
(require sxml/sxpath)
(require net/url)

(define repo (read (get-pure-port (string->url ""https://snow-fort.org/pkg/repo""))))
(define query (sxpath '(package library name srfi)))
```",,
7.73175E+17,meowüé∫#2842,2020-11-05,"Oh, I completely forgot about lenses.",,
7.73175E+17,meowüé∫#2842,2020-11-05,:meow:,,
7.73175E+17,meowüé∫#2842,2020-11-05,Even though nested lists are super common for representing data there's no popular way to easily query them.,,
7.73175E+17,meowüé∫#2842,2020-11-05,Popular as in comes with stdlib or in an SRFI.,,
2.75501E+17,Plane#0324,2020-11-05,have you seen `r-linq` yet,,
4.62028E+17,StephenD#5938,2020-11-05,In core racket *I think* it is fair to say that they use `match` https://docs.racket-lang.org/reference/match.html,,
7.73175E+17,meowüé∫#2842,2020-11-05,Isn't LINQ closer to transducers?,,
4.62028E+17,StephenD#5938,2020-11-05,https://docs.racket-lang.org/rebellion/Transducers.html,,
4.62028E+17,StephenD#5938,2020-11-05,"> Hello Racket land! I've just finished a first version of Racket support in Conjure https://github.com/Olical/conjure my Neovim tooling for interacting with Clojure, Fennel, Janet and _now_ Racket! https://github.com/Olical/conjure/releases/tag/v4.8.0
> 

@Olical  ""btw I just tried and it is very, very nice, exactly the sort of tools I was hoping to find in the racket/list world"" - OH on racket slack",,
7.73175E+17,meowüé∫#2842,2020-11-05,"Hmm, is there a way to write to multiple ports at once?",,
4.62028E+17,StephenD#5938,2020-11-05,IP ports?,,
7.73175E+17,meowüé∫#2842,2020-11-05,Just generic ports,,
4.62028E+17,StephenD#5938,2020-11-05,I think `copy-port`  https://docs.racket-lang.org/reference/port-lib.html?q=port#%28def._%28%28lib._racket%2Fport..rkt%29._copy-port%29%29,,
4.62028E+17,StephenD#5938,2020-11-05,Not done it myself,,
4.62028E+17,StephenD#5938,2020-11-05,"> If multiple outs are provided, data from in is written to every out. The different outs block output to each other, because each block of data read from in is written completely to one out before moving to the next out. The outs are written in the provided order, so non-blocking ports (e.g., file output ports) should be placed first in the argument list.",,
7.73175E+17,meowüé∫#2842,2020-11-05,Oh dear,,
7.73175E+17,meowüé∫#2842,2020-11-05,This code got really unidiomatic.,,
7.73175E+17,meowüé∫#2842,2020-11-05,"I'll show you in a bit, once it's working.",,
7.73175E+17,meowüé∫#2842,2020-11-05,or if,,
4.62028E+17,StephenD#5938,2020-11-05,:meow:,,
7.73175E+17,meowüé∫#2842,2020-11-05,Exactly...,,
7.73175E+17,meowüé∫#2842,2020-11-05,Ah what the heck,,
7.73175E+17,meowüé∫#2842,2020-11-05,"```Scheme
#lang racket
(require net/base64 net/http-client net/url)
(require json)
(require sxml/sxpath)
(require threading)

(displayln ""Generating listings for Snow Fort..."")
;; Snow Fort repo is in SXML format. We can directly query it with SXPath.
(let ((repo (~> ""https://snow-fort.org/pkg/repo"" string->url get-pure-port read))
      (query (sxpath '(package library name srfi))))
  (with-output-to-file ""data/snow-fort.scm"" #:exists 'replace
    (thunk (~>> repo query (map cadr) remove-duplicates (sort _ <) (for-each displayln)))))

(displayln ""Generating listings for CHICKEN eggs..."")
;; CHICKEN repo requires authentication, so we need to take a more roundabout path.
(let*-values (((response headers port)
                 (http-sendrecv ""code.call-cc.org"" ""/svn/chicken-eggs/release/5/egg-locations""
                                #:headers (list (bytes-append #""Authorization: Basic ""
                                                              (base64-encode #""anonymous:"" #"""")))
                                #:ssl? #t))
              ((results) (for/list ((egg (in-port read port))
                                    #:when (string-prefix? (symbol->string (car egg)) ""srfi-""))
                           (string->number (substring (symbol->string (car egg)) 5)))))
  (with-output-to-file ""data/chicken-external.scm"" #:exists 'replace
    (thunk (for-each displayln results))))
```",,
7.73175E+17,meowüé∫#2842,2020-11-05,"```Scheme
;;; continued...
(displayln ""Generating listings for chez-srfi..."")
;; GitHub API returns data in JSON format, which we can `read' into `hasheq's of lists.
(let* ((repo (~> ""https://api.github.com/repos/arcfide/chez-srfi/contents""
                 string->url get-pure-port read-json))
       (results (sort
                 (for/list ((file (map (curryr hash-ref 'name) repo))
                            #:when (string-prefix? file ""%3a"")
                            #:unless (string-suffix? file "".sls""))
                   (string->number (substring file 3)))
                 <)))
  (with-output-to-file ""data/chez-external.scm"" #:exists 'replace
    (thunk (for-each displayln results)))
  (with-output-to-file ""data/loko-external.scm"" #:exists 'replace
    (thunk (for-each displayln results)
           (displayln 160))))
```",,
7.73175E+17,meowüé∫#2842,2020-11-05,I hate the repetition in the two lines after `in-port` in `let*-values`,,
7.73175E+17,meowüé∫#2842,2020-11-05,feedback welcome btw,,
7.73175E+17,meowüé∫#2842,2020-11-05,"Okay, I restructured it and it looks better now: https://github.com/schemedoc/srfi-metadata/blob/master/external.rkt",,
2.75501E+17,Plane#0324,2020-11-05,"@StephenD in the wiki faq you wrote:

> The 'BC' means ""Before Chez [Scheme]"" , this is currently the standard version of Racket. (as at version 7.8)
> 
> Racket also comes in the 'CS' variant (Chez Scheme). This will probably be the 'standard' version from version 7.9 or 8.2.

but 7.9 didn't switch to CS because there were still some major bugs found in 7.8.  the release notes for 7.9 say:

> Racket CS may become the default Racket implementation in the next release. If, between this release and the next, no bugs are discovered in Racket CS that are more serious than those typically discovered in Racket BC, then Racket CS will become the default for the next release. (Serious Racket CS bugs were found since the v7.8 release, but they‚Äôre ever fewer and farther between.)

so i think that could be something to update in the faq",,
2.75501E+17,Plane#0324,2020-11-05,what version comes after 7.9?  is it 7.10?,,
4.66395E+17,oaktownsam#0815,2020-11-05,"7.10 will be the next version IF they don't switch to CS.

When they switch to CS as the standard version of Racket it will be 8.0",,
2.75501E+17,Plane#0324,2020-11-05,ooh i see,,
2.75501E+17,Plane#0324,2020-11-05,i was trying to think about what the faq should say,,
4.62028E+17,StephenD#5938,2020-11-05,@Plane good call,,
4.62028E+17,StephenD#5938,2020-11-05,"> ## What is 'BC' in Racket(BC)?
> 
> The 'BC' means ""Before Chez [Scheme]"" , this is currently the standard version of Racket. (as at version 7.9)
> 
> Racket also comes in the 'CS' variant (Chez Scheme). This will probably be the 'standard' at the next release.(January 2021)
> 
> For more information see [Racket Virtual Machine Implementations](https://docs.racket-lang.org/guide/performance.html#%28part._virtual-machines%29) in the Racket Guide.",,
4.62028E+17,StephenD#5938,2020-11-05,Thank you @Plane for picking that up.,,
2.66505E+17,notjack#9941,2020-11-09,@Dav1s use `cond`,,
2.66505E+17,notjack#9941,2020-11-09,"This:
```scheme
(if <condition1>
    <case1>
    (if <condition2>
        <case2>
        <else-case>))
```
Is equivalent to:
```scheme
(cond
  [<condition1> <case1>]
  [<condition2> <case2>]
  [else <else-case>])
```",,
7.73175E+17,meowüé∫#2842,2020-11-10,"One of these days, I want to attempt to write an FPS in Racket.",,meow (1)
7.73175E+17,meowüé∫#2842,2020-11-10,2htdp kinda already has everything necessary.,,üëç (1)
4.62028E+17,StephenD#5938,2020-11-10,Racket *needs* an FPS :meow:,,
3.5323E+17,Alex Knauth#4895,2020-11-10,Or Pict3D also has `big-bang3d`,,
7.72228E+17,hyena#0469,2020-11-10,"I came across a blog of a racketeer who took it upon himself to write all of the Vulkan bindings for racket. That would be much lower level than big-bang, of course, but it would be what you'd want to make a high performance fps. I will link it if I can find it again",,
7.72228E+17,hyena#0469,2020-11-10,https://sagegerard.com/racket-vulkan-initial-testing.html,,
4.62028E+17,StephenD#5938,2020-11-10,Ok who wants to be part of a team to port doom to racket ? ü§£,,
7.72228E+17,hyena#0469,2020-11-10,"It sounds out-there, but the creator of Wolfenstein 3d is fanatic about functional programming. He spoke here about porting the game into Haskell:https://youtu.be/1PhArSujR_A",,üëç (1)
7.72228E+17,hyena#0469,2020-11-10,The caveat is that this guy is literally a genius.,,
4.66395E+17,oaktownsam#0815,2020-11-10,Carmack was doing something with Racket when he was at Oculus.,,
4.66395E+17,oaktownsam#0815,2020-11-10,iirc,,
4.62028E+17,StephenD#5938,2020-11-10,I think he also taught his son racket,,
7.72228E+17,hyena#0469,2020-11-10,"Nice. I wish I learned this language at an earlier age. I bet I would be much further ahead in my understanding of programming concepts.

I'm working my way through htdp at the moment. Next step is sicp.",,
7.72228E+17,hyena#0469,2020-11-10,"Also... I just got an early-access copy of this:  https://nostarch.com/racket-programming-fun-way

I am learning so much from it. Mathematics as well as racket. I highly recommend this book.",,üòÅ (1)
3.29023E+17,nixin72#3554,2020-11-11,"Not an FPS, but Naughty Dog used Racket as their scripting language for (at the very least) Uncharted 2 and possibly The Last of Us.",,
2.75501E+17,Plane#0324,2020-11-11,i think i would have loved racket when i was little,,plusone (1)
2.75501E+17,Plane#0324,2020-11-11,i started out on a commodore 64,,üëç (1)
7.73175E+17,meowüé∫#2842,2020-11-11,IIRC Carmack is a fan of Scheme,,
7.73175E+17,meowüé∫#2842,2020-11-11,My graphics card doesn't support Vulkan so I can't try the bindings.,,
7.73175E+17,meowüé∫#2842,2020-11-11,Hmm,,
7.73175E+17,meowüé∫#2842,2020-11-11,Why is there no `match-lambda:` for Typed Racket?,,
7.73175E+17,meowüé∫#2842,2020-11-11,"Hmm, it's annoying that Typed Racket is missing a lot of things.",,
7.73175E+17,meowüé∫#2842,2020-11-11,There's no `vector->values`.,,
7.73175E+17,meowüé∫#2842,2020-11-11,"```Scheme
(define-syntax-rule (match-lambda: clause ...)
  (lambda: (id) (match id clause ...)))

(define-syntax-rule (match-lambda*: clause ...)
  (lambda: id (match id clause ...)))

(define-syntax-rule (match-lambda**: clause ...)
  (lambda: (ids ...) (match* (ids ...) clause ...)))
```
This should probably do the trick.",,
7.73175E+17,meowüé∫#2842,2020-11-11,"wait no, I'm dumb",,
7.73175E+17,meowüé∫#2842,2020-11-11,Where would types even go? :meow:,,
7.73175E+17,meowüé∫#2842,2020-11-11,"Is there a more succinct way to do this?
```Scheme
(define world-map
  (build-array #(32 32)
               (Œª: ((is : Indexes))
                 (match is
                   ((vector  0  y) 1)
                   ((vector 32  y) 1)
                   ((vector  x  0) 1)
                   ((vector  x 32) 1)
                   ((vector  x  y) 0)))))
```",,
2.66505E+17,notjack#9941,2020-11-11,Is there a `for/array` form? That's what I'd look for first,,
7.73175E+17,meowüé∫#2842,2020-11-11,Good point! There's a `for/array:`,,
7.73175E+17,meowüé∫#2842,2020-11-11,https://docs.racket-lang.org/pict3d/index.html :meow:,,
2.13587E+17,UMKO#4975,2020-11-12,Is there a clojure thread last macro `->>`  equivalent in racket?,,
2.66505E+17,notjack#9941,2020-11-12,@UMKO use the threading macro (~>) with underscores to indicate where arguments should go,,
2.13587E+17,UMKO#4975,2020-11-12,ah didn't know the threading module exists. Thanks!,,
7.73175E+17,meowüé∫#2842,2020-11-12,There's `~>>` in the package.,,
2.13587E+17,UMKO#4975,2020-11-12,thats nice,,
2.75501E+17,Plane#0324,2020-11-12,yes i honestly love those threading macros,,
2.75501E+17,Plane#0324,2020-11-12,it's so tempting to go as point free as possible and treat coding like explicit argument golf instead of focusing on readability lol,,
2.75501E+17,Plane#0324,2020-11-12,explicit argument golf is fun!,,
1.05725E+17,Mitranim#5870,2020-11-13,"Would the good folks here be interested in discussing namespacing/accessor syntax? Curious what led to the choice of accessor functions for struct fields, and lack of namespacing for modules. It could have been `one:two:three` like in Common Lisp, for example",,
2.66505E+17,notjack#9941,2020-11-13,You might be interested in `qualified-in` https://docs.racket-lang.org/qualified-in/,,
1.05725E+17,Mitranim#5870,2020-11-13,"I could see the need for specialized struct field accessor functions in a dynamic language if they're dense and addressed by offset rather than by name, like C structs. Static languages resolve field offsets at compile time and hardcode them into assembly, but a dynamic language can't do that. But I haven't checked if that's actually how Racket implements structs. Also, this could be looked up in the type definition at runtime anyway",,
1.05725E+17,Mitranim#5870,2020-11-13,"‚Üë So it does use `package-name:symbol`? Good to know, though I'm surprised this is not the default",,
1.05725E+17,Mitranim#5870,2020-11-13,Makes it all the more surprising that structs don't use this,,
1.05725E+17,Mitranim#5870,2020-11-13,"```
(struct GeoPoint (lng lat))
(define point (GeoPoint 10 20))
point:lng
```",,
2.66505E+17,notjack#9941,2020-11-13,"Keep in mind things like `if` and `define` are imported from modules as well. I'd rather not have to write your code like this:

```scheme
(racket/base:struct GeoPoint (lng lat))
(racket/base:define point (GeoPoint 10 20))
```",,
1.05725E+17,Mitranim#5870,2020-11-13,"Sure, but I'd expect a careful mix of unqualified and qualified imports. Also, qualified imports would need short aliases, defined locally in the import",,
1.05725E+17,Mitranim#5870,2020-11-13,"```
(import racket/base *)
(import some-library sl)

(struct A ...)
(sl:some-func)
```",,
2.66505E+17,notjack#9941,2020-11-13,"your `point:lng` example is interesting, because that's more than just qualifying",,
1.05725E+17,Mitranim#5870,2020-11-13,"I understand that it would pay the cost of looking up what `:lng` means inside the type, by symbol. But I'm not ready to say if this would always be slower than the specialized accessor function, depending on how the language handles symbols and considering the accessor's own internal overheads",,
1.05725E+17,Mitranim#5870,2020-11-13,"Curious if there are other, perhaps more important, considerations at play",,
2.66505E+17,notjack#9941,2020-11-13,You could do this at compile time with a match pattern,,
2.66505E+17,notjack#9941,2020-11-13,"as in, write a `GeoPoint` match expander with `define-match-expander` that turns this:
```scheme
(match-define (GeoPoint point) (GeoPoint 10 20))
```
into this:
```scheme
(match-define
  (? point?
     (and point
          (app GeoPoint-lng point.lng)
          (app GeoPoint-lat point.lat)))
  (GeoPoint 10 20))
```
The `racket/match` library and `match-define` will turn that into this:
```scheme
(define point (GeoPoint 10 20))
(define point.lng (GeoPoint-lng point))
(define point.lat (GeoPoint-lat point))
```",,
1.05725E+17,Mitranim#5870,2020-11-13,"Should note that I'm not keen on having more infix in a Lisp syntax. `one:two` is effectively a hack for infix inside symbols, without having to add actual infix. Would like to see better alternatives, but giving up on namespacing entirely seems worse to me ü§∑‚Äç‚ôÄÔ∏è",,
1.05725E+17,Mitranim#5870,2020-11-13,"The example above is interesting, and I didn't know of such features. But this would only work for `point?`, not for _any_ value of that type. Maybe some of your points are named `geo_location`. Maybe some are `x` and `y`...",,
2.66505E+17,notjack#9941,2020-11-13,"You could also make a match expander that works for any struct type, by looking up compile time info from the struct binding",,
2.66505E+17,notjack#9941,2020-11-13,"oh I had a typo in that example: should be `GeoPoint?`, not `point?`",,
1.05725E+17,Mitranim#5870,2020-11-13,"Would it be able to infer _which_ struct type that is, on an arbitrary variable?",,
2.66505E+17,notjack#9941,2020-11-13,Nope. You could make your own version of `struct` that automatically defined the type-specific match pattern though.,,
2.66505E+17,notjack#9941,2020-11-13,I don't really want something that works for arbitrary values by inspecting types at runtime though. Too much magic and runtime cost for a mild syntactic improvement that can be achieved at compile time too.,,
1.05725E+17,Mitranim#5870,2020-11-13,"Interesting. From my perspective, implicitly adding many, many hidden accessor functions to the local scope, for each type, and requiring the user to always type them out, is quite a massive downside, which doesn't exist with `value:field`. This might be coming from a different perspective on data modeling though, since I mostly work in Go where you keep data in structs. Not entirely sure how such an app would be written in Racket. Maybe this is less of a big deal when not using structs much",,
2.66505E+17,notjack#9941,2020-11-13,Yeah I think the accessor functions created by structs are kind of awkward. I just _also_ think there's ways to deal with that that don't have runtime costs.,,
2.66505E+17,notjack#9941,2020-11-13,"I find just using match patterns as-is helps a lot, since I need to use far fewer accessor functions to unpack data.",,
1.05725E+17,Mitranim#5870,2020-11-13,"Runtime aside, I'd really like to know if there could be a syntactic solution that doesn't involve accessor functions, fake infix, or real infix...",,
1.05725E+17,Mitranim#5870,2020-11-13,"For any kind of namespacing, including both qualified imports and struct fields",,
2.66505E+17,notjack#9941,2020-11-13,"Ya, I definitely think there's room for exploring namespacing in racket. It's possible to build with macros too.",,üëç (1)
1.05725E+17,Mitranim#5870,2020-11-13,"One of the reasons for my questioning is because I'm working towards something Lisp-inspired, which uses the prefix call notation for everything and doesn't have infix, but it _also_ has the self-imposed restriction that identifiers are C-style and can't contain special symbols. Special symbols, in any combination, are considered operators. Both identifiers and ""operators"" are usable in normal function call position. The problem is that this makes it impossible to implement namespacing by hacking `:` or `.` into symbols. It must be a real infix operator. Which is at odds with the design goal of not having infix. That's a problem I've been unable to solve, and would appreciate suggestions.",,
1.05725E+17,Mitranim#5870,2020-11-13,"Racket has the luxury of being able to use `:` or `.` inside symbols, but it's still ""fake infix"", and an ideal solution for both might be able to avoid it",,
1.93202E+17,rocketnia#4517,2020-11-13,"I think namespacing is a sufficiently distinct concern that it's worth reserving some punctuation for. And here's why...

Variable references are given a special privilege in Lispy syntax: Unlike most expressions, they're not written with parentheses. (They *could* be; imagine writing out something like `(ger-var foo)` every time.) So when some part of the program begins to warp into having a DSL with its own notion of ""variable reference expression,"" and they're written as `(hash-ref my-scope 'foo)` or `(send context foo)` or something, there end up being substantially more parens in the mix than even Lisp fans usually put up with. I think being able to write this as `ctx.foo` does a lot to make it more comfortable to maintain these parts of a program, by making them look more like ordinary Lispy code with ordinary variable references.",,"üíØ (1),üëç (1)"
1.93202E+17,rocketnia#4517,2020-11-13,".
Because of that, even if you're designing your syntax to allow for custom infix operators, I think it would make sense to set aside aside some of the syntax design effort specifically to support namespacing. It's a concern that doesn't necessarily get solved by other choices in the syntax design.",,
1.93202E+17,rocketnia#4517,2020-11-13,".
And *that* being said, I think namespacing of imports and namespacing in the sense of objects dispatch may or may not align. I think there are potentially multiple kinds of namespacing at play there. I think some languages get away with conflating them but that it can be the source of some quirks.",,
1.93202E+17,rocketnia#4517,2020-11-13,objects' dispatch*,,
1.93202E+17,rocketnia#4517,2020-11-13,`(get-var foo)` *,,
1.05725E+17,Mitranim#5870,2020-11-13,"Thanks for your thoughts. The default option I'm leaning towards is to allow just _one_ infix operator in the entire syntax, just for namespacing. The blasphemous ""impurity"" saddens me, but it's much more practical than writing `(. one two three)` every time, or not having namespacing at all. However, it has so many downsides.

First, it may conflict with the idea of supporting prefix operators. Without infix, it's easy to support paren-free prefix operators, which have always existed in Lisp. Unary prefix can be resolved unambiguously without precedence rules. But having both prefix and infix requires precedence rules.

Second, it might require hard-committing to a single specific operator. But not every syntax wants the same namespace operator. For example, suppose the ""main"" syntax uses `.`, but an XML-generating macro would want `:` used for XML namespacing. If only `.` is special-cased at the language level, the macro would have to support `:` all by itself, by implementing precedence and expression grouping. An ""ideal"" solution would allow the parser to group the operands of an infix operator before passing them to macros, so that user-defined code doesn't have to deal with this.

Third, an extremely theoretic and vague concern, is the idea that a sufficiently flexible language should be designed from the start without having to support such special cases, but being able to easily support them later, without creating syntactic conflicts. What I mean by this: this concern of namespacing wasn't around in the 50s or 60s when Lisp was created. Similarly, future language advancement will bring new concepts that will demand new syntax. An ideal solution would be a syntax that can easily do namespacing _and_ whatever the future will demand. Which is why special-casing just this one thing raises suspicion.",,
1.05725E+17,Mitranim#5870,2020-11-13,"About package namespacing vs. struct fields vs. methods. Personally I prefer when languages intentionally conflate all forms of namespacing, because it's not important for the user to differentiate them on a glance, and a major pain in the ass to remember whether to type `::` vs `.` vs `:` or whatever. Arguably subjective.",,
1.05725E+17,Mitranim#5870,2020-11-13,"The precedence and grouping issues only arise if one insists on making the separator a ""real"" operator, instead of putting it inside identifiers. That's my current approach because of the many, many downsides of having identifiers that are too permissive in what they contain",,
1.93202E+17,rocketnia#4517,2020-11-13,"I think there'll always be wacky ideas that don't fit into a preconceived idea of an extensible language. That's why when I recently came around to thinking of namespacing as something that deserves attention in a syntax, I associated it with some other choice that's already part of the design: The parenthesis-free variable references. In this sense, the attention to namespacing notation is just the syntax design picking up after its own mess, and the solution will generally apply to various future situations where things need to look like ordinary variable references.",,
1.93202E+17,rocketnia#4517,2020-11-13,"> Personally I prefer when languages intentionally conflate all forms of namespacing[...]
(I don't have much to say here, but I hear you.)",,
1.05725E+17,Mitranim#5870,2020-11-13,"Very interesting point. I thought about this recently but in slightly different terms and context. In any language with explicit pointers, reading and writing a variable can be seen as a shortcut for dereference operations:
```
some_variable       ->  *implicit_variable_pointer
some_variable = 10  ->  *implicit_variable_pointer = 10
```
In other words, a variable name is a shorthand for `*(stack_frame_pointer + offset)`. Your analogy is on a different axis, but very related",,
1.05725E+17,Mitranim#5870,2020-11-13,Worth remembering that `struct_value.field` tends to be a shorthand for `*(struct_value_pointer + field_offset)` as well,,
1.93202E+17,rocketnia#4517,2020-11-13,"I'm not sure I've arrived at a very good namespacing syntax in my own projects, but the one I've been trying out is `\foo`, which can be decorated with custom operators like `\|.op1 arg1 .op2|foo` to express something roughly like `(op1 arg1 (op2 foo))`",,
1.93202E+17,rocketnia#4517,2020-11-13,"I think the prefix `\` helps avoid dealing with precedence, but I'm not sure XD",,
1.93202E+17,rocketnia#4517,2020-11-13,I think `*foo` pointer dereferencing and `'foo` quoting are notations that very much justified by the idea of letting things look like ordinary variable references :),,
1.93202E+17,rocketnia#4517,2020-11-13,"sadly my notation approach would make them `\|d|foo` and `\|q|foo` at the very tersest, so I dunno XD",,
1.05725E+17,Mitranim#5870,2020-11-13,"Considering that namespacing is always about ""C in scope B in scope A in scope Global"", and the base level is ""A in scope Global"", this makes me think that it would be logically inconsistent to treat accessing something in scope, syntactically, as a ""function"", unless we also parenthesize _every_ access of A in scope Global",,
1.05725E+17,Mitranim#5870,2020-11-13,"Logically consistent options:
```
(deref A)      ; for EVERY variable read or write
(deref A B C)
A
A.B.C
```",,
1.05725E+17,Mitranim#5870,2020-11-13,"Thanks, may have at least found a new way to look at this. Certainly something to think about",,
1.93202E+17,rocketnia#4517,2020-11-13,"yeah, I think that's kinda what I'm going for with these thoughts",,
1.93202E+17,rocketnia#4517,2020-11-13,"calling it the ""global"" scope seems a bit odd if `A` is a local variable, but it is at least ""global"" in the sense of not being further qualified, so I think I follow what you mean there",,üëç (1)
1.05725E+17,Mitranim#5870,2020-11-13,"Forgot for a moment about blocks, modules, etc. üòÖ",,
1.05725E+17,Mitranim#5870,2020-11-13,"Unrelated to the problem of _specific_ syntax to express namespacing, there's also the matter of associativity. I'm pretty convinced that in a Lisp-style syntax it should be right-associative:
```
inner.mean.outer
(some_func.some_lib arg0 arg1 arg2)
```
When implementing a syntax lighlighter for this experimental dialect (for Sublime Text), I noticed that with this approach, the implementation of parsing/highlighting is simpler, as you don't need any special-case support for namespacing. For example, in parens, you just scope the first identifier as a ""function"" and move on. This simplification indicates you're onto something good.
This also matches the evaluation order of nested expressions. Compare:
```
(outer_func (mean_func (inner_func)))
```
Unfortunately doing this in a real language would simply cause programmers to make errors. Not sure if I'd dare.",,
1.05725E+17,Mitranim#5870,2020-11-13,"Another example. Clojure has `:keywords` as a special data type distinct from `'symbols`. It's recommended to use keywords as map keys. Keywords are also unary functions that ""get"" something from a map. The order is again from right to left. Compare:
```
(:inner (:mean some-value))
inner.mean.some_value
inner:mean:some_value
```",,
3.29023E+17,nixin72#3554,2020-11-13,"I've got a question about how Racket compiles things. When compiling a hello world file using `raco exe filename.rkt` with `#lang racket/base`, it takes less than 2 seconds. Compiling the same file with `#lang racket` takes 8-9 seconds. Compiling with `#lang typed/racket` takes upwards of 30 seconds and `#lang typed/racket/base` takes about the same amount of time. So what that indicates to me is that my compile times are gonna get 3-4 times slower just by using typed Racket, which seems pretty painful for a big project. So is that hit because it really takes 30 seconds to compile my hello world file, or is it taking 30 seconds to compile a bunch of libraries that it'll only need to compile once? Cause that's what I would think, except that `#lang typed/racket` and `#lang typed/racket/base` take the same amount of time. So I guess what I want to know is what can I expect my compile times to look like if I were to use typed racket instead of racket? Is it really that much slower?",,
4.66395E+17,oaktownsam#0815,2020-11-13,It's probably more fair to compare `raco make` than `raco exe`,,
4.66395E+17,oaktownsam#0815,2020-11-13,"It will take longer though to compile a TR module, because it's doing more stuff at compile time.",,
3.29023E+17,nixin72#3554,2020-11-13,"It makes perfect sense for it to take longer to compiler typed Racket, I just wasn't expecting that huge of a difference. Using `raco make` though it is way faster though, 0.7 seconds vs 2.4 seconds.",,
4.66395E+17,oaktownsam#0815,2020-11-13,Yeah `raco exe` is copying the whole runtime,,
4.66395E+17,oaktownsam#0815,2020-11-13,It may be trying to minimize how much is copied too.  That isn't cheap.,,
3.29023E+17,nixin72#3554,2020-11-13,Makes sense. Thank you!,,
2.13587E+17,UMKO#4975,2020-11-14,"Whats a good parsing library for Racket? I'm looking at megaparsack, but this library isn't being updated.",,
7.73175E+17,meowüé∫#2842,2020-11-14,Parsack is maintained.,,üëç (1)
4.62028E+17,StephenD#5938,2020-11-14,I just went onto mastadon and discovered there is a racket-mud project https://gitlab.com/emsenn/racket-mud/,,
2.75501E+17,Plane#0324,2020-11-14,"ohh that's pretty cool, i loved muds back in the 90s lol",,üíØ (1)
4.62028E+17,StephenD#5938,2020-11-14,I haven't tried it yet. I don't know if it is in a working state.,,
2.75501E+17,Plane#0324,2020-11-16,a little while back i set up rainbow parens in vim to help with understanding scheme code more easily,,
2.75501E+17,Plane#0324,2020-11-16,what really strikes me though is how useful rainbow parens have been trying to understand imperative code in other languages,,
2.75501E+17,Plane#0324,2020-11-16,i wish i had these decades ago lol,,
2.75501E+17,Plane#0324,2020-11-16,i copied a really nice set of rainbow colors from @meowüé∫,,
7.73175E+17,meowüé∫#2842,2020-11-16,:meowblush:,,
7.73175E+17,meowüé∫#2842,2020-11-16,It was mostly based on moe-theme's colours.,,
7.72228E+17,hyena#0469,2020-11-16,Does racket have a doubly-linked list type in the main library?,,
4.66395E+17,oaktownsam#0815,2020-11-16,"I don't think there is, but if there was it would probably be in the data module: https://docs.racket-lang.org/data/index.html",,
4.62028E+17,StephenD#5938,2020-11-17,I don‚Äôt know if the purely functional list implementations meet your needs but in any case https://docs.racket-lang.org/functional-data-structures/index.html?q=Pfds,,
4.62028E+17,StephenD#5938,2020-11-17,@hyena Just found this in the mail archive: https://groups.google.com/g/racket-users/c/D2Lq075bNos,,
4.62028E+17,StephenD#5938,2020-11-17,@hyena implementation of doubly linked lists https://github.com/soegaard/remacs/blob/master/dlist.rkt,,
7.72228E+17,hyena#0469,2020-11-17,Cool. I was musing about whether DLLs would be a nicer choice for the canonical data structure of a lispy language.,,
7.72228E+17,hyena#0469,2020-11-17,Since some algorithms require reversing a list and there are some asymmetries with performance for foldl and foldr,,
4.62028E+17,StephenD#5938,2020-11-17,I asked `soegaard` on slack and he said that `rmacs` was the only time he had a need to use them. In the `racket-users` thread **zippers** were mentioned as having similar performance but easier to implement and samth suggested that random access lists and VLists (both are in https://docs.racket-lang.org/functional-data-structures/index.html?q=Pfds),,
7.72228E+17,hyena#0469,2020-11-17,"Yeah, I sense that they don't fit the idiom of this style of programming enough to be worth the extra overhead.",,
7.72228E+17,hyena#0469,2020-11-17,Maybe you would only want them for more imperative-type programming where queues are more useful.,,
4.62028E+17,StephenD#5938,2020-11-17,"You can do imperative in racket - and you can use mutation - I think all the datatypes in the standard library have mutable versions. While avoiding mutation has its benefits it isn't rejected by the designers of Racket, (or the community).",,
4.62028E+17,StephenD#5938,2020-11-17,and if you are after a queues: https://docs.racket-lang.org/functional-data-structures/Queues.html?q=Pfds,,
4.62028E+17,StephenD#5938,2020-11-17,@hyena and there are  Imperative Queues too üôÇ : https://docs.racket-lang.org/data/Imperative_Queues.html?q=Queues,,
2.75501E+17,Plane#0324,2020-11-17,i saw there was actually a `zippers` package as well https://docs.racket-lang.org/zippers/,,
2.75501E+17,Plane#0324,2020-11-17,although i haven't used it,,
3.5323E+17,Alex Knauth#4895,2020-11-20,"Why ""only 3"" functions?",,
4.62028E+17,StephenD#5938,2020-11-20,"are you using the design recipe?  start by writing a name or description to three functions; think about how you will store the game state, and how you will determine the winner.",,
3.27072E+17,otakuu#1463,2020-11-21,"hey guys,
i have used the r5rs library the output is shown in terms of mcons",,
3.27072E+17,otakuu#1463,2020-11-21,is there any way to get that in the usual bracket notation,,
7.73175E+17,meowüé∫#2842,2020-11-21,`(print-mpair-curly-braces #f)`,,
3.27072E+17,otakuu#1463,2020-11-21,thanks,,
7.73175E+17,meowüé∫#2842,2020-11-22,It's annoying that the `sdl2` package is missing a good bit of bindings for events.,,
7.73175E+17,meowüé∫#2842,2020-11-22,"I wrote helper procedures to deal with unions and pointers with `ffi/unsafe`, abstracted away from the rest of the code, but now I noticed it's missing event constants.",,
7.73175E+17,meowüé∫#2842,2020-11-22,The `events.rkt` example doesn't work either.,,
7.73175E+17,meowüé∫#2842,2020-11-22,"oh wait, it literally uses symbols for constants :meow:",,
7.73175E+17,meowüé∫#2842,2020-11-22,So that `case` wasn't a mistake for `match`.,,
2.75501E+17,Plane#0324,2020-11-22,i remember seeing there were multiple sets of sdl bindings for racket and i wasn't sure what to use,,
7.73175E+17,meowüé∫#2842,2020-11-22,lockie/racket-sdl2 seems to be the most complete and up-to-date.,,
2.75501E+17,Plane#0324,2020-11-22,oh thank you that's good to know,,
7.73175E+17,meowüé∫#2842,2020-11-22,It's got a set of pretty bindings too.,,
2.75501E+17,Plane#0324,2020-11-22,"so that is just the `sdl2` package, which you just mentioned",,
7.73175E+17,meowüé∫#2842,2020-11-22,Yeah,,
7.73175E+17,meowüé∫#2842,2020-11-22,"This is approximately what I've done so far:
```Scheme
#lang racket
(require (prefix-in sdl: sdl2/pretty)
         (prefix-in c: ffi/unsafe))

(define (get-event-pointer!)
  (c:cast (c:malloc (c:ctype-sizeof sdl:_event)) c:_pointer sdl:_event*))

(define (get-event pointer)
  (c:ptr-ref pointer sdl:_event))

(define (get-event-type pointer)
  (c:union-ref (get-event pointer) 0))

(module+ main
  (sdl:set-main-ready!)
  (sdl:init! '(video))
  (define window (sdl:create-window! ""Test"" 0 0 640 480 '()))
  (define surface (sdl:get-window-surface window))
  (define colour (sdl:map-rgb (sdl:surface-format surface) 0 128 255))
  (sdl:fill-rect! surface #f colour)
  (sdl:update-window-surface! window)
  (do ((event-ptr (get-event-pointer!))
       (quit? #f))
      (quit? (sdl:quit!))
    (sdl:delay! 20)
    (sdl:poll-event! event-ptr)
    (case (get-event-type event-ptr)
      ((quit) (set! quit? #t))
       ...)))
```",,
7.73175E+17,meowüé∫#2842,2020-11-22,See how nice the prettified bindings are? :meowblush:,,
7.73175E+17,meowüé∫#2842,2020-11-22,Reduces the C taste left in your mouth.,,
7.73175E+17,meowüé∫#2842,2020-11-22,"So instead of```C
#define SDL_QUIT 0x100
```
It literally uses just ```Scheme
'quit
``` (except returned from the enum)",,
2.75501E+17,Plane#0324,2020-11-22,yay,,
2.66505E+17,notjack#9941,2020-11-23,"now get it to use
```scheme
quit
```
so if you make a typo like `qiut` there's a compile-time error :p",,
7.73175E+17,meowüé∫#2842,2020-11-23,:meow:,,
7.73175E+17,meowüé∫#2842,2020-11-23,I like how the docs make no attempt to explain what `amb` does.,https://cdn.discordapp.com/attachments/618895179343986688/780419106461450250/S01123-16051912.jpg,
7.73175E+17,meowüé∫#2842,2020-11-23,I'm surprised it's implemented in plain undelimited continuations though.,,
7.73175E+17,meowüé∫#2842,2020-11-23,I'd've expected something fancier.,,
4.62028E+17,StephenD#5938,2020-11-23,"To be fair that is the documentation for `#lang sicp` 1995 MIT/R5RS Scheme variant, and `amb` gets its own section in the SICP book.",,
4.62028E+17,StephenD#5938,2020-11-23,(`amb` is not a part of Racket),,
4.62028E+17,StephenD#5938,2020-11-23,,https://cdn.discordapp.com/attachments/618895179343986688/780461492041809920/IMG_2105.jpg,
4.66395E+17,oaktownsam#0815,2020-11-23,After studying (mini|micro)kanren I think that streams work better (or are at least easier to engineer and reason about) than `amb`,,
3.27072E+17,otakuu#1463,2020-11-24,,https://cdn.discordapp.com/attachments/618895179343986688/780685367665885194/unknown.png,
3.27072E+17,otakuu#1463,2020-11-24,when i give this as input,,
3.27072E+17,otakuu#1463,2020-11-24,,https://cdn.discordapp.com/attachments/618895179343986688/780685517435043860/unknown.png,
3.27072E+17,otakuu#1463,2020-11-24,iam getting output like this,,
3.27072E+17,otakuu#1463,2020-11-24,is there anyway to convert those mcons to brackets?,,
3.27072E+17,otakuu#1463,2020-11-24,i used (print-pair-curly-braces) as  suggested by @meowüé∫  but it didn't work,,
2.50764E+17,4984#4984,2020-11-24,"@otakuu because you are using mcons from r5rs, try display from r5rs too",,
2.50764E+17,4984#4984,2020-11-24,it appears it propperly implements printing of mcons,,
3.27072E+17,otakuu#1463,2020-11-24,okay,,
3.27072E+17,otakuu#1463,2020-11-24,thank you that worked,,
2.50764E+17,4984#4984,2020-11-25,wrong server sorry,,
2.50764E+17,4984#4984,2020-11-25,(i sent a msg but it was for a different server so i deleted it sorry),,
7.73175E+17,meowüé∫#2842,2020-11-26,@notjack What advantage do keysets offer over sets of symbols (other than being sorted at compile-time)?,,
2.66505E+17,notjack#9941,2020-11-26,@meowüé∫ the sorting is the main thing. I probably wouldn't have made them if there was a good sorted set implementation.,,
7.73175E+17,meowüé∫#2842,2020-11-26,Got it. üëç,,
3.5323E+17,Alex Knauth#4895,2020-11-26,Racket has `match` expressions,,
4.62028E+17,StephenD#5938,2020-11-26,https://docs.racket-lang.org/guide/match.html,,
2.66505E+17,notjack#9941,2020-11-26,"You write it kind of like switch statements, but instead of `switch` you say `match`, and instead of `case` you write a ""pattern"".",,
2.66505E+17,notjack#9941,2020-11-26,"```scheme
(match 3
  [1 ""one!""]
  [2 ""two!""]
  [3 ""many!""])
```
this expression evaluates to `""many!""`",,
2.66505E+17,notjack#9941,2020-11-26,"The 1, 2, 3 parts are patterns. The pattern 1 matches the number 1. There are other kinds of patterns that match more complex data than just numbers.",,
4.66395E+17,oaktownsam#0815,2020-11-26,"I haven't read this yet, copied from the Scheme Discord
https://notamonadtutorial.com/rebuilding-the-racket-compiler-with-chez-scheme-210e23a69484",,üëç (4)
4.62028E+17,StephenD#5938,2020-11-27,https://jacksonleeunderwriting.co.uk/about-us/job-vacancies/ a racketeer would tick all these boxes,,
4.62028E+17,StephenD#5938,2020-11-27,I‚Äôve posted on racket stories and submitted to racket news,,
7.73175E+17,meowüé∫#2842,2020-11-27,Let's give it a shot!,,
4.62028E+17,StephenD#5938,2020-11-27,Happy to be a referee for you @meowüé∫,,
7.73175E+17,meowüé∫#2842,2020-11-27,Aw thank you :meowblush:,,
7.73175E+17,meowüé∫#2842,2020-11-27,ü§û:meow:ü§û,,ü§û (2)
2.66505E+17,notjack#9941,2020-11-28,just opened a neat pull request to racket https://github.com/racket/racket/pull/3525,,plusone (8)
4.62028E+17,StephenD#5938,2020-11-29,"The Racket Way

https://www.infoq.com/presentations/racket/",,
2.17743E+17,Kurinoku#9847,2020-11-29,how do you call something that is proper racket? like when you find something that looks right in python you say pythonic... i remember seeing a term being thrown around but i cant remember what it was...,,
4.62028E+17,StephenD#5938,2020-11-29,Rackety,,plusone (2)
4.62028E+17,StephenD#5938,2020-11-29,Racketific,,
2.17743E+17,Kurinoku#9847,2020-11-29,i like rackety more,,
4.62028E+17,StephenD#5938,2020-11-29,I think that is more popular,,
2.17743E+17,Kurinoku#9847,2020-11-29,i can see why,,
2.17743E+17,Kurinoku#9847,2020-11-29,heh,,
2.17743E+17,Kurinoku#9847,2020-11-29,ty anyways,,
4.66395E+17,oaktownsam#0815,2020-11-29,"Just posting this here because I know some folks had problems with installing Racket 7.9 and `raco pkg` was not working right:
https://github.com/racket/racket/issues/3499",,"plusone (1),üôè (2)"
2.75501E+17,Plane#0324,2020-11-29,@Kurinoku i think for most languages people tend to talk about code being *idiomatic*.  but i like the sound of *rackety* (:,,
2.75501E+17,Plane#0324,2020-11-29,if you search this discord for *idiomatic* and *rackety* you can see people say *idiomatic* more often.  although you could discuss if there is a difference between them,,
2.75501E+17,Plane#0324,2020-11-29,i think in my brain they would be the same thing,,
2.66505E+17,notjack#9941,2020-11-29,"I would say that ""idiomatic"" is a language-agnostic term and ""rackety"" is the racket-specific version of it",,
2.75501E+17,Plane#0324,2020-11-29,"oh yes that is what i meant but i may have said it poorly, thank you (:",,
2.17743E+17,Kurinoku#9847,2020-11-29,my brain was messing with me and blocked both of those terms when i needed them most lol,,
2.13587E+17,UMKO#4975,2020-11-30,"https://adventofcode.com/
Advent of code is starting soon! 
Looking forward to see some Racket solutions üëÄ",,
7.72228E+17,hyena#0469,2020-11-30,I was just about to ask if anyone was planning on trying it this year.,,
7.72228E+17,hyena#0469,2020-11-30,I'm looking forward to doing the puzzles in racket and in kotlin (a language I haven't explored much yet),,
7.72228E+17,hyena#0469,2020-11-30,Maybe we could get a temporary channel here for AoC? Or we could take over the gamejam one...,,
2.66505E+17,notjack#9941,2020-11-30,"I like the idea of an advent of code channel, I'll make one",,üéÑ (3)
2.66505E+17,notjack#9941,2020-11-30,@hyena done!,,
5.39603E+17,spacey üåå#7238,2020-11-30,". Are there any common patterns you guys noticed when writing code in Racket? The patterns I was encouraged to use when doing Python, for example, heavily favored for-loops and changing variables, many times both at once.

As a Racket newbie, I'm still at the stage where I'm confused as to how to solve problems without mutating variables, though (for/list) has been useful when I just want my functions to return a list! (apply) has also come in handy a few times",,
4.66395E+17,oaktownsam#0815,2020-11-30,üéâ üéÖüèΩ Advent of Code starts in 1 hour 6 minutes.  Same leaderboard  (Key: 22197-a7a01707) as last year.  If you joined last year you're already in the leaderboard.  Join #advent-of-code for more advent of code chat.,,
4.66395E+17,oaktownsam#0815,2020-11-30,Pandemic + home&work chaos today and I nearly forgot about AoC,,
7.72228E+17,hyena#0469,2020-11-30,"I was in your shoes not too long ago. In addition to using map, filter, fold, and apply higher-order-functions, the main pattern to know is how to set up a tail-recursive list-eater.",,üíØ (1)
7.72228E+17,hyena#0469,2020-11-30,It's hard to shake the for loop + while loop style of problem solving when that has been so deeply ingrained.,,
5.39603E+17,spacey üåå#7238,2020-11-30,"haven't used fold before, will take a look at that! :D",,
7.72228E+17,hyena#0469,2020-11-30,"But the main pattern is to define a function that has a cond in it
And the first cond clause needs to have the base case (stop case) just return a single piece of data.
The remaining cond clauses need to call the same function with arguments that are changed ever-so-slightly so that you get a step closer to your base case",,
7.72228E+17,hyena#0469,2020-11-30,I'll try to find a few examples since that will make a whole lot more sense than me trying to explain it in the abstract,,
7.72228E+17,hyena#0469,2020-11-30,"Here's a reference that might help:
https://youtu.be/-EVZeYEMsAE",,
1.5424E+17,SwitchAxe#3481,2020-12-01,are variables THAT useless in racket? so far i've never really needed one even though i just started out a month ago,,
7.72228E+17,hyena#0469,2020-12-01,"Which part? racket/draw, pict, or 2htdp/image? There are probably more libraries besides.",,
2.66505E+17,notjack#9941,2020-12-02,"macro of the day:
```scheme
(regexp-define (as bs cs) #rx""(a*)(b*)(c*)"" ""aabbbbc"")
;; matches regexp against string and binds each group to a variable
;; as is bound to ""aa""
;; bs is bound to ""bbbb""
;; cs is bound to ""c""
```",,
7.72228E+17,hyena#0469,2020-12-02,lol my regexp-match approach is garbage compared to that,,
7.72228E+17,hyena#0469,2020-12-02,wasn't aware of that macro,,
2.66505E+17,notjack#9941,2020-12-02,I made it myself :p,,
7.72228E+17,hyena#0469,2020-12-02,oh nice...,,
2.66505E+17,notjack#9941,2020-12-02,"```scheme
(define-simple-macro (regexp-define (id:id ...) regex str)
  (match-define (list _ id ...) (regexp-match regex str)))
```",,
7.72228E+17,hyena#0469,2020-12-02,Some day I too will be a macro god,,
2.66505E+17,notjack#9941,2020-12-02,this one is proving _really_ handy,,
7.72228E+17,hyena#0469,2020-12-02,"I'm embarrassed to show what I actually did, haha",,‚ù§Ô∏è (1)
3.5323E+17,Alex Knauth#4895,2020-12-02,"Oh I had been thinking
```
(define-simple-macro (regexp-define (id:id ...) rx str)
  (match-define (regexp rx (list _ id ...)) str))
```",,
2.66505E+17,notjack#9941,2020-12-02,"@hyena the point of doing things is not to be good at them, it's to enjoy yourself :3",,
2.66505E+17,notjack#9941,2020-12-02,@Alex Knauth what are the error messages for that like if the regexp doesn't match? mine are garbage currently,,
3.5323E+17,Alex Knauth#4895,2020-12-02,"Stuff like
```
> (regexp-define (as bs cs) #rx""^(a*)(b)(c*)$"" ""aabbbbc"")
match-define: no matching clause for ""aabbbbc""
```",,
3.5323E+17,Alex Knauth#4895,2020-12-02,"Which I suppose is slightly better than `no matching clause for #f`, but it would be nice if there was a specialized error message for when the number of `()` groups didn't match the number of `id`s. Neither has that",,
2.66505E+17,notjack#9941,2020-12-02,Yup I would love that,,
7.72228E+17,hyena#0469,2020-12-02,"Here's my super hacky approach to parsing:
```
(struct policy (char min max) #:transparent)

(define (data->policy data)
  (define char (string-ref (first (regexp-match #rx"".:"" data)) 0))
  (define min (string->number
               (first (regexp-match #rx""[0-9]*"" data))))
  (define max (- (string->number
               (first (regexp-match #rx""-[0-9]*"" data)))))
(policy char min max))
```",,
7.72228E+17,hyena#0469,2020-12-02,"My favorite part is grabbing the hyphen along with the number, calling string->number on it (so it is now negative!!!) and then negating it again. What a glorious mess.",,
2.66505E+17,notjack#9941,2020-12-02,"lol that's awesome, I love it",,
7.73175E+17,meowüé∫#2842,2020-12-02,Okay this is really strange.,,
7.73175E+17,meowüé∫#2842,2020-12-02,Sometimes `call/cc` returns no values.,,
7.73175E+17,meowüé∫#2842,2020-12-02,"Like, literal `(values)`.",,
7.73175E+17,meowüé∫#2842,2020-12-02,oh wow,,
7.73175E+17,meowüé∫#2842,2020-12-02,Turns out I did the Scheme equivalent of null point dereferencing. :meow:,,
7.73175E+17,meowüé∫#2842,2020-12-02,"Wait no, it's even sillier than I thought.",,
7.73175E+17,meowüé∫#2842,2020-12-02,"```Scheme
((car (list (call-with-current-continuation identity))))
```",,
7.73175E+17,meowüé∫#2842,2020-12-02,Amazing.,,
7.73175E+17,meowüé∫#2842,2020-12-02,oh wait no,,
7.73175E+17,meowüé∫#2842,2020-12-02,ü§¶ I forgot to give it an argument,,üòÅ (2)
2.66505E+17,notjack#9941,2020-12-02,@Dav1s `regexp-match-positions` would do that if you're searching with arbitrary regular expressions,,
2.66505E+17,notjack#9941,2020-12-02,"if you're just looking for a certain substring, there might be something simpler",,
2.75501E+17,Plane#0324,2020-12-02,@Dav1s are you using `#lang racket` or one of the student languages?,,
2.75501E+17,Plane#0324,2020-12-02,there is https://docs.racket-lang.org/srfi/srfi-std/srfi-13.html?q=string-index#string-contains,,
2.75501E+17,Plane#0324,2020-12-02,yeah then you could `(require srfi/13)` and use `string-contains` i think,,
4.66395E+17,oaktownsam#0815,2020-12-02,The one @notjack recommended is in `racket/base`,,
4.66395E+17,oaktownsam#0815,2020-12-02,Also there is `string-contains?` in `racket/string`,,
2.75501E+17,Plane#0324,2020-12-02,"yeah though note the `?` is significant there, it tells you whether it's in the string but not which offset it's at",,
2.75501E+17,Plane#0324,2020-12-02,so they are slightly different functions,,
4.66395E+17,oaktownsam#0815,2020-12-02,Ah yes.,,
7.73175E+17,meowüé∫#2842,2020-12-03,Is there a folding `andmap`?,,
7.73175E+17,meowüé∫#2842,2020-12-03,"Given `(list foo bar baz quux)` and a predicate `(frob? a b)`, I want to obtain `(and (frob? foo bar) (frob? bar baz) (frob? baz quux))`.",,
7.73175E+17,meowüé∫#2842,2020-12-03,https://www.rosettacode.org/wiki/Amb#TXR :meow:,,üòÆ (1)
7.73175E+17,meowüé∫#2842,2020-12-03,Exactly what Jack was describing earlier.,,
2.75501E+17,Plane#0324,2020-12-03,"oh i see, if that is a requirement then perhaps you're meant to write it yourself",,
7.73175E+17,meowüé∫#2842,2020-12-03,Does `regexp-match-positions*` not work?,,
2.75501E+17,Plane#0324,2020-12-03,oh! right! that was in `racket/base`,,
7.73175E+17,meowüé∫#2842,2020-12-03,We're spoilt by Racket's rich stdlib. :meowblush:,,meowblush (6)
5.39603E+17,spacey üåå#7238,2020-12-05,how do i i invite people to this server?,,
2.25363E+17,AcerbicVeil#2790,2020-12-05,there was an invite code somewhere,,
2.25363E+17,AcerbicVeil#2790,2020-12-05,https://discord.com/invite/6Zq8sH5,,
2.25363E+17,AcerbicVeil#2790,2020-12-05,this i think,,üëç (1)
5.39603E+17,spacey üåå#7238,2020-12-05,"oh, thanks! :D",,
2.25363E+17,AcerbicVeil#2790,2020-12-05,np,,
2.66505E+17,notjack#9941,2020-12-08,"You know it's weird. I never find myself needing threading macros anymore. All my use cases for them turned out to be sequence processing code, which I just write with transducers now.",,
4.66395E+17,oaktownsam#0815,2020-12-08,Big brain: I now just use threads and async channels,,ü§Ø (2)
2.66505E+17,notjack#9941,2020-12-09,racket feature request: a `subsequence` function added to `racket/sequence`,,
2.66505E+17,notjack#9941,2020-12-09,"```scheme
(define (subsequence seq start [end +inf.0])
  ... returns a sequence of the elements of seq between start and end ...
```",,
2.17743E+17,Kurinoku#9847,2020-12-09,yeah that would be pretty useful,,
7.73175E+17,meowüé∫#2842,2020-12-09,Anyone here use `behavior/fsm`?,,
7.73175E+17,meowüé∫#2842,2020-12-09,I'm trying to implement a csexp parser with state machines for fun and (no) profit.,,
7.73175E+17,meowüé∫#2842,2020-12-09,It's fairly linear so an FSM is probably overkill for this but I'd like a simple use-case anyway.,,üçù (1)
2.66505E+17,notjack#9941,2020-12-11,wishlist: a `#lang assembly/x86-64` that compiles into real assembly that other racket modules can call over the FFI,,‚ù§Ô∏è (6)
7.02403E+17,Liwei#3406,2020-12-11,"LLVM IR or WASM is also good, portable back-end.",,
4.62028E+17,StephenD#5938,2020-12-11,"Someone did a 6502 assembler.
I‚Äôve often wondered how much effort it would take to to a minimal subset of x86-64",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2020-12-11,Almost a full backend I guess,,
4.66395E+17,oaktownsam#0815,2020-12-11,I've wanted a `#lang C` that would have a C backend and a Racket one so you can write and test your C in Racket before compiling to real C.,,‚ù§Ô∏è (3)
7.02403E+17,Liwei#3406,2020-12-11,Full Stack Racket,,
7.73175E+17,meowüé∫#2842,2020-12-11,"```Scheme
(define (split-into lst n)
  (define-values (head tail) (split-at lst n))
  (if (null? tail)
      (list head)
      (cons head (split-into tail n))))
(define (get-grids matrix)
  (apply append (map (curry apply map append) (split-up (map split-up matrix)))))
```
This looks like it shouldn't work, but it does.",,
7.73175E+17,meowüé∫#2842,2020-12-11,"```Scheme
> (pretty-print matrix)
'((1 2 3 4 5 6 7 8 9)
  (10 11 12 13 14 15 16 17 18)
  (19 20 21 22 23 24 25 26 27)
  (28 29 30 31 32 33 34 35 36)
  (37 38 39 40 41 42 43 44 45)
  (46 47 48 49 50 51 52 53 54)
  (55 56 57 58 59 60 61 62 63)
  (64 65 66 67 68 69 70 71 72)
  (73 74 75 76 77 78 79 80 81))
> (pretty-print (get-grids matrix))
'((1 2 3 10 11 12 19 20 21)
  (4 5 6 13 14 15 22 23 24)
  (7 8 9 16 17 18 25 26 27)
  (28 29 30 37 38 39 46 47 48)
  (31 32 33 40 41 42 49 50 51)
  (34 35 36 43 44 45 52 53 54)
  (55 56 57 64 65 66 73 74 75)
  (58 59 60 67 68 69 76 77 78)
  (61 62 63 70 71 72 79 80 81))
```",,
7.73175E+17,meowüé∫#2842,2020-12-11,:meow:,,
7.73175E+17,meowüé∫#2842,2020-12-11,I wrote a sudoku solver with `amb`.,,
7.73175E+17,meowüé∫#2842,2020-12-11,"It was surprisingly easy. I only had to validate each row, column and subgrid.",,
7.73175E+17,meowüé∫#2842,2020-12-11,"Now, to make a sudoku *generator*.",,
7.73175E+17,meowüé∫#2842,2020-12-11,"`(assert! (matrix-valid? (build-list 9 (thunk* (build-list 9 (thunk* (amb (range 1 10))))))))` should work, in theory.",,
7.73175E+17,meowüé∫#2842,2020-12-11,This is unsurprisingly really low-performance.,,üòÜ (1)
7.73175E+17,meowüé∫#2842,2020-12-11,I guess Prolog handles this better.,,
4.66395E+17,oaktownsam#0815,2020-12-11,"With sudoku solving it's good to use the ""human"" algorithms because you can use the techniques used to solve to rate the difficulty level",,
7.73175E+17,meowüé∫#2842,2020-12-12,That's a good point.,,
2.57829E+17,hyb#6033,2020-12-14,any racket gods down to help me for 5 minutes?,,
2.25363E+17,AcerbicVeil#2790,2020-12-14,"Im certainly no god, or even intermediate id say, but post the question",,
2.25363E+17,AcerbicVeil#2790,2020-12-14,Most preferably in #help,,
2.57829E+17,hyb#6033,2020-12-14,can we hop in a call for 2 seconds?,,
2.25363E+17,AcerbicVeil#2790,2020-12-14,Hmm,,
2.57829E+17,hyb#6033,2020-12-14,just easier to break down,,
2.25363E+17,AcerbicVeil#2790,2020-12-14,How complex is the problem,,
2.25363E+17,AcerbicVeil#2790,2020-12-14,Cuz im really not that good,,
2.57829E+17,hyb#6033,2020-12-14,i just cant get it to output,,
2.25363E+17,AcerbicVeil#2790,2020-12-14,Hmm,,
2.57829E+17,hyb#6033,2020-12-14,or dont know what to write if ygm,,
2.25363E+17,AcerbicVeil#2790,2020-12-14,Ill try my best but dont count on it,,
1.5424E+17,SwitchAxe#3481,2020-12-14,"Are there exercises other than project euler that one could do to practice functional programming (or programming in general, really)?",,
1.5424E+17,SwitchAxe#3481,2020-12-14,*for beginners,,
2.14881E+17,Moinate#6061,2020-12-14,"whats your background? especially in what way are you a ""beginner""? I haven't followed your posts here
it matters a lot what you already know, i'd say. 

also, say more about your goal
i mean, in a way practicing functional programming is just programming.
if you know enough, writing games with racket/universe is a lot of fun and you can learn plenty about functional programming. 

but a lot of people need feedback on whatever they write, in any context, to develop functional programming skills... i've seen plenty of java encoded into Haskell, so there's habits to break and new ways to see things that you have to develop somehow",,
2.14881E+17,Moinate#6061,2020-12-14,"CodingBat.com for Java & Python, can do a lot for the fundamentals in those languages. @SwitchAxe",,
2.14881E+17,Moinate#6061,2020-12-14,Exercises in the book https://HtDP.org  should be good for functional programming (Racket-centric). @SwitchAxe,,
2.14881E+17,Moinate#6061,2020-12-14,Paper book: Realm of Racket could be enlightening.,,
1.5424E+17,SwitchAxe#3481,2020-12-14,Ty,,
5.07584E+17,pmatos#0179,2020-12-16,"I have done this in 2018 for a contract I had for risc-v. I am still trying to find the time to clean it up, generalize it and release it. Lets cross fingers for 2021. üôÇ",,üëÄ (1)
2.66505E+17,notjack#9941,2020-12-16,whoa really?????,,
2.66505E+17,notjack#9941,2020-12-16,that is _awesome_,,
5.07584E+17,pmatos#0179,2020-12-16,Can you talk more about this? I have had several thoughts of doing something in this area. So after `#lang c` would you just have plan C code?,,
5.07584E+17,pmatos#0179,2020-12-16,"Have you heard of CGEN? So my generalization attemps followed a similar architecture. You write your ISA in a lang ISA and from that description you get an assembler, IR tools, and possibly FFI hooks. Turns out writing something specific to RISCV (I was on a deadline) was a lot easier than generalizing it.",,
5.07584E+17,pmatos#0179,2020-12-16,"Then not on a deadline, I never got it completed. So maybe deadlines are good?",,
5.07584E+17,pmatos#0179,2020-12-16,"In any case, it's the first time I heard of such wish. I will keep that in mind and try to get something published soon.",,
5.07584E+17,pmatos#0179,2020-12-16,cgen: https://sourceware.org/cgen/,,
5.07584E+17,pmatos#0179,2020-12-16,So that's how binutils generates its assemblers that are then used by gcc and ld for compiling and linking.,,
4.62028E+17,StephenD#5938,2020-12-16,@oaktownsam didn‚Äôt @jeapostrophe do a `#lang c` a while back?,,
4.62028E+17,StephenD#5938,2020-12-16,This https://github.com/jeapostrophe/c - I must try it with @plragde ‚Äòs https://cs.uwaterloo.ca/~plragde/flaneries/IYMLC/ - and check out https://github.com/jeapostrophe/rmc and https://github.com/jeapostrophe/adqc,,
5.07584E+17,pmatos#0179,2020-12-16,"This unfortunately highlights one of the issues with the racket package ecosystem. Lots of packages that start doing something cool only to go unmaintained. Worse, lots of these packages are little known to the community. Such a shame.",,üíØ (5)
4.62028E+17,StephenD#5938,2020-12-16,"I thought all package systems have these problems? From CTAN, CPAN, right through to NPM?(who can forget left-pad)",,
4.66395E+17,oaktownsam#0815,2020-12-16,"I think I missed some of Jay's packages.  I'll take a look again.  Partly what I want to toy with is making interpreters/gc without having to write much C if possible.  Or other things even really

I like the idea of Prescheme in Scheme48 and Slang in Squeak/Pharo.",,
4.56227E+17,Deleted User#0000,2020-12-16,I see this language or languages similair to it used in courses and books,,
4.56227E+17,Deleted User#0000,2020-12-16,but its not really a language used for software development,,
4.56227E+17,Deleted User#0000,2020-12-16,does learning this language come with benefits to your programming skill?,,
3.29023E+17,nixin72#3554,2020-12-16,"You're not likely to ever use Racket professionally. But, every time you learn a new language that has some unique or different features, you're adding a tool to your programmer's toolbox. And every tool you add is helpful because each of them will give you some new perspective on how to approach solving a problem. Racket will introduce you to concepts like the Language-Oriented Programming paradigm, the concept of continuations, and depending on what you already know, expression based programming, functional programming, and other things. Learning new languages I think is always useful because they all give you more tools, and teach you how to best tackle a problem at hand. That way when you face problems that aren't well suited to the approach you're using, instead of beating your head against a brick wall making it work, you can turn to tools and techniques better suited to the issue at hand to just get things done. 

So even if you don't end up ever using Racket, it will still teach you useful things that are likely to come on handy down the road.",,plusone (1)
4.56227E+17,Deleted User#0000,2020-12-16,"Yes that is true, am excited now üòÑ",,
4.56227E+17,Deleted User#0000,2020-12-16,yeah the concepts u learn u can also apply to other languages,,
4.66395E+17,oaktownsam#0815,2020-12-16,"Once upon a time you wouldn't use Ruby or Python in a ""Professional Software Job"", but look where we are now.",,ablobaww (1)
3.29023E+17,nixin72#3554,2020-12-16,"That's true. But as much as I love Racket, I don't think it'll ever see much more use than it's getting now. Or any Lisp for that matter. I absolutely love Lisp - Clojure and Racket especially, but I think people just have too much of an aversion to all the parentheses honestly. I've been teaching Common Lisp to uni students who started with Java for a yearish and every semester as soon as students see it it's an instant disgust with the syntax. Just non-stop complaints until they move on to the next language the course teaches and complaining about how stupid Lisp is. A very small number will message me and tell me they think Lisp is cool and ask for resources on where they can learn a little more, but that's a tiny number of students.",,
2.74358E+17,jesscxc#4846,2020-12-16,fundamentally the parens are a stylistic choice in Lisp (list processing),,
2.74358E+17,jesscxc#4846,2020-12-16,"programming as a whole is changing rapidly, especially with eg VR",,
2.74358E+17,jesscxc#4846,2020-12-16,"list processing is not going away, that's for sure üòä",,
3.29023E+17,nixin72#3554,2020-12-16,"Oh for sure, the concept of list processing isn't going anywhere. But until universities change and stop putting Java and Object-Oriented Programming up on the mantle as the most important things to know, list processing will not be done in the best tool to do list processing üòÇ",,
4.66395E+17,oaktownsam#0815,2020-12-16,"I had a shower thought the other morning (most likely remembered from something someone else wrote) about how Haskell and OCaml (and later things like F# and now Rust) have encouraged developers to allow more ""weird"" features in their languages.",,
3.29023E+17,nixin72#3554,2020-12-16,Have you heard of the corecursive podcast?,,
4.66395E+17,oaktownsam#0815,2020-12-16,"I may have heard of it, but not heard it.",,
3.29023E+17,nixin72#3554,2020-12-16,"It's a great podcast with interviews from some well known developers (recently Brian Kernighan was on it talking about ""the birth of unix"") that incidentally ends up talking a lot about functional programming and compilers and some fun stuff. But anyways, I think it was an episode of corecursive that talked about exactly that, how some languages will appear and introduce these cool and useful features that tend to sit around for a while because people don't know how to apply those features outside academia, and then 10, 20 years down the road someone will say ""I want to use that cool useful feature that I found in some niche language"", and then they end up getting adopted and stuff.",,
7.02403E+17,Liwei#3406,2020-12-16,"IMHO, the list concept is okay. It's just that the syntax appears to be too many parentheses. This can be improved by list/tree notation with less parentheses, such as sweet-exp.

Which can let me write code like following.

~>>
 in-naturals 1
 map sqr
 filter (divides? 4 _)
 take 5
 for-each displayln",,
4.66395E+17,oaktownsam#0815,2020-12-16,"Yeah in the PL Design forums they often talk about the weirdness budget.  How much ""weird"" features can your language have and still be acceptable.",,ehehe (1)
3.29023E+17,nixin72#3554,2020-12-16,"Yea, exactly. I'd never heard the term ""weirdness budget"", but it's a really interesting concept, and it's why I think Rust for example never really took off, even though it provides so many undeniable benefits as a systems language. Too much weird in it.",,
4.66395E+17,oaktownsam#0815,2020-12-16,Still early on Rust I think.  It's barely 12 years old üôÇ,,
3.29023E+17,nixin72#3554,2020-12-16,"Totally agree with that it can be changed to include less parentheses (don't know if I'd use the word ""improved"" since I'm personally a huge fan of the parens), but if that would get more people using Lisp-likes, I'd be for it I guess. At least as an alternative syntax, I like my parens ü•≤",,üëç (1)
4.66395E+17,oaktownsam#0815,2020-12-16,Sometimes it does look like success is a function of some random variable.  Like why is D not more successful?  It's a nice language.  And Objective-C was a dead end until Apple bought out Next.,,
4.66395E+17,oaktownsam#0815,2020-12-16,(obvs huge support from a major player is not random.),,
2.74358E+17,jesscxc#4846,2020-12-16,Clojure's young too ü•≥,,
3.29023E+17,nixin72#3554,2020-12-16,"Idk anything about D tbh. But I think 12 years is plenty of time for a language to gain interest and traction. Look at Go, TypeScript, Ruby, Java, they all had astronomical increases in popularity within 10 years. And I think that this is a fair comparison considering Rust isn't a niche language made by a small independent group of devs, it was made by Mozilla, has been pushed hard by Mozilla, has been talked about by Facebook, Amazon, Google, Microsoft, etc, it's a language almost everyone has heard of but not many people use",,
3.29023E+17,nixin72#3554,2020-12-16,"Of course Java and TypeScript both came out at times where they were really well positioned to become the popular languages they are today, but I think Rust was super well positioned too. I think it should've been the ""market disrupting"" technology for low-level programming. The only real options were C and C++, and the dangers of manual memory management have been well known for years, there was just no safer alternatives to C and C++ that could also compete in performance. Rust seems like it would've been the obvious choice for everyone to try out since it ticked the boxes of ""safe"" and ""fast as hell""",,
4.66395E+17,oaktownsam#0815,2020-12-16,I know they're different in some ways but from what I've seen (in industry) is that Go took Rust's mojo.,,
2.66505E+17,notjack#9941,2020-12-17,Rust is definitely taking off quite a lot,,plusone (1)
7.02403E+17,Liwei#3406,2020-12-17,"Since I see it as a tree structure in its internal, I'm okay with a syntactically more concise version or even a graphical version. It can still display with parentheses explicitly without any problems.

I think most lispers just do this with their own brains.",,
4.66395E+17,oaktownsam#0815,2020-12-19,Scaring myself here.  I've been hacking on FFI to gstreamer for a few days now and I haven't segfaulted Racket once yet.,,meowmas (1)
3.29023E+17,nixin72#3554,2020-12-19,üòÆ,,
7.73175E+17,meowüé∫#2842,2020-12-19,Don't jinx it!,,
4.62028E+17,StephenD#5938,2020-12-20,https://corecursive.com,,
3.5323E+17,Alex Knauth#4895,2020-12-22,"I just saw a Stack Overflow question about Typed Racket and the generic graph library:
```
#lang typed/racket

(require/typed graph
               [#:opaque Graph graph?]
               [unweighted-graph/undirected ((Listof (List Any Any)) -> Graph)]
               [add-edge! (Graph Any Any -> Void)])

(define g : Graph (unweighted-graph/undirected '((1 2) (1 3))))
(add-edge! g 2 3)
```
about this printing a warning. However, I'm wondering if this warning could be eliminated if `define-generics` defined the `graph?` predicate as a `struct-type-property-predicate-procedure?` instead of a lambda wrapping a struct-type-property-predicate-procedure.",,
3.5323E+17,Alex Knauth#4895,2020-12-22,"Like here:
```
(define-values (graph2 prop:pred graph3)
   (#%app:82 make-struct-type-property 'gen:graph prop:guard (#%app:83 list) (quote #t)))
(define-values:84 (graph?) (lambda:85 (graph) (#%app:86 prop:pred graph)))
```
If it just got rid of the extra lambda-wrapping on `graph?` I think Typed Racket would stop complaining about this",,
3.5323E+17,Alex Knauth#4895,2020-12-22,"Unfortunately for the macro it's not quite that simple:
```
(define (predicate-name self-name)
  (or (fast-pred-name self-name)
      ...
      (prop:pred self-name)
      (default-pred-name self-name)
      ...))
```
It can't just define `predicate-name` as `prop:pred` if `fast-pred`s or `default-pred`s exist.",,
3.5323E+17,Alex Knauth#4895,2020-12-22,"And if those existed, then Typed Racket would be right to spit out that warning message",,
4.66395E+17,oaktownsam#0815,2020-12-25,"Made a blinking LED on RPi GPIO with Racket
https://gist.github.com/samdphillips/4dd15ef89e5e4fff54cffd5be8af9d80",,plusone (1)
4.62028E+17,StephenD#5938,2020-12-26,That would be a great addition to the Racket Wiki Artifacts collection,,
4.62028E+17,StephenD#5938,2020-12-27,And submission to rack  rn,,
4.66395E+17,oaktownsam#0815,2020-12-27,Added to the wiki!,,
4.66395E+17,oaktownsam#0815,2020-12-27,I have a temperature/humidity sensor that I'm going to try and get work sometime this week.  Hopefully I can do most of it in Racket and not have to write any C.,,
1.32971E+17,thornAvery#3077,2020-12-27,does anyone here use Nix? Im looking for info on specifying that Racket has certain raco packages installed,,
7.73175E+17,meowüé∫#2842,2020-12-27,Not sure how helpful it'd be in your case but racket2nix might lead you somewhere.,,
6.43137E+17,Anything#4621,2020-12-28,"At my job, whenever we release a new website, someone in the team compares the new and the old website and creates a mapping of URLs from the old to the new so that someone else can create redirections from the old URLs to the new URLs.  Assuming I have a list of all relevant old URLs and another list of all new URLs, I want to write a program to create this mapping. Python offers libraries such as https://spacy.io/usage/vectors-similarity and I believe this is what I must do --- find the similarity between texts and choose the best one.  I shouldn't compare HTML because the new website will be completely different.  But perhaps I can read the visible text on the pages (perhaps apply some transformations) and then see which ones are more similar.  I'm not sure how to best do this.  My question is --- what is available out there in Racket for this and if you have any strategy-recommendations to suggest.  Thanks!",,
2.66505E+17,notjack#9941,2020-12-28,that is a very interesting problem that I have no idea how to approach,,
6.43137E+17,Anything#4621,2020-12-28,"Alright, that sounds very scary now!",,
2.66505E+17,notjack#9941,2020-12-28,"Doing some thinking about it and this is my model of the problem: you've got two hash tables, whose keys are URLs and whose values are strings representing ""all of the visible text on that page"". So I'd start on a function like this:

```scheme
; Builds a hash table that maps old URLs to new URLs, where
; each old URL maps to the new URL whose visible text is most
; similar
;
; Hash Url String -> Hash Url String -> Hash Url Url
;
; Examples:
; > (build-similarity-hash
;     (hash
;       ""http://oldsite.com/yellow-meanies"" ""bananas""
;       ""http://oldsite.com/red-devils"" ""peppers"")
;      (hash
;        ""http://new.com/bananas"" ""bananas are yellow meanies""
;        ""http://new.com/peppers"" ""peppers are red devils"")))
;
; (hash
;   ""http://oldsite.com/yellow-meanies"" ""http://new.com/bananas""
;   ""http://oldsite.com/red-devils"" ""http://new.com/peppers"")
(define (build-similarity-hash old-texts new-texts)
  ...)
```",,
2.66505E+17,notjack#9941,2020-12-28,"as for how to actually _do_ that... I'd search through https://pkgs.racket-lang.org for any data science packages related to natural language processing, and failing that, I'd look for a C library somewhere that I could write an FFI wrapper for.",,
6.43137E+17,Anything#4621,2020-12-28,"Thanks, @notjack .  I appreciate that.  That's exactly that path I'm going to follow.  What I'm going to try right now, though, is to use this tool (https://github.com/TeamHG-Memex/page-compare) which seems to do the job.  And if I ever get to write a Racket solution, I should look at which algorithms they're using (assuming the result is good).",,
2.66505E+17,notjack#9941,2020-12-28,Oh that's an excellent idea,,üëç (1)
4.66395E+17,oaktownsam#0815,2020-12-28,"**Racket Users Video Meetup** ‚òéÔ∏è üì∫
Saturday 2021/01/09 :: 8pm CET / 7pm UK / 11am Pacific
https://gather.town/app/wH1EDG3McffLjrs0/racket-users

**Agenda**
- What have you been working on?
- Paper for discussion:
> Macros for Domain-Specific Languages by MICHAEL BALLANTYNE, ALEXIS KING & MATTHIAS FELLEISEN
> https://2020.splashcon.org/details/splash-2020-oopsla/105/Macros-for-Domain-Specific-Languages

Kind regards,
Sam Phillips & Stephen De Gabrielle",,"üíØ (1),meow (1)"
2.66505E+17,notjack#9941,2020-12-28,oh boy,,
2.66505E+17,notjack#9941,2020-12-28,@oaktownsam can you remind me the day of / day before?,,
4.66395E+17,oaktownsam#0815,2020-12-28,Yep.,,
4.83487E+17,jest#6646,2020-12-28,"if you were to put a number on it , what percentage of students hate the parens lol? i think my main complaints about lisp is lack of some static typing. Honestly i still have yet to take advantage of racket macros and metaprogramming ...
John Carmack was trying to popularize racket as the scripting language for vr https://youtu.be/ydyztGZnbNs but it got kind of dropped in a way",,
4.83487E+17,jest#6646,2020-12-28,"the zig language is another front runner to compete against C, its key goal being simplicity, no hidden control flow,  and its beating rust in some areas (namely working in embedded, compile time generics, faster compile times, among other things)",,
3.29023E+17,nixin72#3554,2020-12-28,"Almost all students find the parens off-putting at first afaict, and most quickly decide they hate the parens. I recommend to all the students to use tools like rainbow braces or parinfer to alleviate the struggles of adjusting to the syntax, but since we use Common Lisp it's a little tougher to enforce that than if we were to use Racket and they get the tools from DrRacket. A lot end up using those crappy online compilers even üòï If I were to throw out my best guess as to how many students hate Lisp because of the parens by the time the section of the course on Lisp is done, I'd guess around 75% of the students.",,üòî (2)
4.83487E+17,jest#6646,2020-12-28,if only brendan eich pushed through with lisp in the browser.. then all the need for all these javascript front end frameworks would disappear,,
3.29023E+17,nixin72#3554,2020-12-28,"I mean, then they'd just be a bunch of Scheme frameworks üòâ which is way better",,
2.66505E+17,notjack#9941,2020-12-29,"it's weird, it's almost like teaching people one mathematical computation notation system for thirteen years of school and then telling them to throw all that knowledge away in their first CS class rubs people the wrong way",,üëå (2)
5.39603E+17,spacey üåå#7238,2020-12-29,"Been doing AoC starting with Day 2 in Racket. Kind of tough, but interesting! :)",,
5.39603E+17,spacey üåå#7238,2020-12-29,"I kind of wish Racket would treat strings and lists not similarly. You can for loop over a string in either language, but I can't do something like `first` on a string, though I can do it on a list",,
5.39603E+17,spacey üåå#7238,2020-12-29,Rackjure is nice though :3,,
2.66505E+17,notjack#9941,2020-12-29,Does `stream-first` work on strings?,,
4.62028E+17,StephenD#5938,2020-12-29,https://media.ccc.de/v/rc3-257534-all_programming_language_suck_just_build_your_own_language_oriented_programming_with_racket,,
4.66395E+17,oaktownsam#0815,2020-12-29,"I understand the desire to be able to treat collections similarly, but if/when you try to treat fixed length data (eg. strings, vectors, etc.) like lists you end up with either: 1. excessive memory usage and copying, or 2. extra administrative objects (cursors of some kind).

And then you have to address mutability...",,
2.66505E+17,notjack#9941,2020-12-29,"I've seen some interesting stuff in the other direction in rust, where manipulating fixed-length collections with iterators gets an efficiency bonus compared to a loop with indexed access, because the iterator version can compile to code that omits the bounds check on accessing each element",,"üëç (1),cooluwu (1)"
4.83487E+17,jest#6646,2020-12-31,i know this has been asked a million times but,,
4.83487E+17,jest#6646,2020-12-31,"well, i asked before but i cant search it on slack because of the stupid search limit",,
4.83487E+17,jest#6646,2020-12-31,"what is the difference between pict, draw, and 2htdp image?",,
2.66505E+17,notjack#9941,2021-01-01,too tired to explain now but just wanted to make a note that we should _really_ have a page in the racket docs for that question,,
4.83487E+17,jest#6646,2021-01-01,"yes, please make an faq lol",,
4.62028E+17,StephenD#5938,2021-01-01,"**what is the difference between pict, draw, and 2htdp image?**

> The pict library is one of the standard Racket functional picture libraries (the other being 2htdp/image). This library was originally designed for use with Slideshow, and is re-provided by the slideshow language.
- https://docs.racket-lang.org/pict/index.html

> The racket/draw library provides a drawing API that is based on the PostScript drawing model. It supports line drawing, shape filling, bitmap copying, alpha blending, and affine transformations (i.e., scale, rotation, and translation).
- https://docs.racket-lang.org/draw/overview.html",,
4.62028E+17,StephenD#5938,2021-01-01,Added to the FAQ https://github.com/racket/racket/wiki/Frequently-Asked-Questions#what-is-the-difference-between-pict-draw-and-2htdp-image,,ü•∞ (1)
4.62028E+17,StephenD#5938,2021-01-01,"> The `2htdp/image` package provides a number of basic image construction functions, along with combinators for building more complex images out of existing images. Basic images include various polygons, ellipses and circles, and text, as well as bitmaps. Existing images can be rotated, scaled, flipped, and overlaid on top of each other.",,
4.83487E+17,jest#6646,2021-01-01,"i mean, when would you prefer using one over the other and what tasks are they better suited for?",,
4.83487E+17,jest#6646,2021-01-01,since they both provide drawing mechanisms,,
4.62028E+17,StephenD#5938,2021-01-01,2htdp/image+universe Games in a very functional style,,
4.62028E+17,StephenD#5938,2021-01-01,There is also MetaPict https://docs.racket-lang.org/metapict/index.html,,
4.62028E+17,StephenD#5938,2021-01-01,Pict+slideshow for presentations,,
4.62028E+17,StephenD#5938,2021-01-01,"Draw to dc is useful in pict
```
(draw-pict pict dc x y) ‚Üí void?
  pict : pict-convertible?
  dc : (is-a?/c dc<%>)
  x : real?
  y : real?
Draws pict to dc, with its top-left corner at offset (x, y).
```",,
4.62028E+17,StephenD#5938,2021-01-01,Save SVG in 2htdp is also cool https://docs.racket-lang.org/teachpack/2htdpimage.html?q=2htdp#%28def._%28%28lib._2htdp%2Fimage..rkt%29._save-svg-image%29%29,,
4.62028E+17,StephenD#5938,2021-01-01,metapict does SVG too,,
4.62028E+17,StephenD#5938,2021-01-01,Plotting https://docs.racket-lang.org/plot/index.html?q=Plot,,
4.83487E+17,jest#6646,2021-01-02,"so in racket there's no way to make a struct specifying the values via keyword arguments? e.g
```scheme
(define pos (x y))

(pos #:x 1 #:y 5)
```",,
2.25363E+17,AcerbicVeil#2790,2021-01-02,Idk if this is what you mean but you can use `define-struct`,,
2.25363E+17,AcerbicVeil#2790,2021-01-02,"```scheme
(define-struct pos (x y))

(make-pos 1 5)
```",,
2.25363E+17,AcerbicVeil#2790,2021-01-02,If u wanna call x for example you do:,,
2.25363E+17,AcerbicVeil#2790,2021-01-02,"```scheme
(pos-x (make-pos 1 5))
```",,
2.25363E+17,AcerbicVeil#2790,2021-01-02,Which would return 1,,
2.25363E+17,AcerbicVeil#2790,2021-01-02,pos-y would return 5,,
2.66505E+17,notjack#9941,2021-01-02,@jest there's a couple of ways but they all involve third party packages,,
4.83487E+17,jest#6646,2021-01-02,"ahh, ill look into the mlater then",,
4.83487E+17,jest#6646,2021-01-02,"another question , `(regexp-match #px""[[:alnum:],[-]+ )""` , how do i get this regex to allow `.` through? I really only need it to filter out `\` and quotes `""`",,
4.83487E+17,jest#6646,2021-01-02,nvm i got it,,
7.73175E+17,meowüé∫#2842,2021-01-02,Depends on which languages you're comparing it against.,,
2.66505E+17,notjack#9941,2021-01-02,the `#lang` mechanism is a huge advantage IMO,,
2.66505E+17,notjack#9941,2021-01-02,"but for more everyday tasks, I would say one advantage it has over other untyped languages is that structs are more nominal than other ways of grouping data, and between that and contracts it's easier to write correct code and get good error messages in racket than it is in python, javascript, and other schemes and lisps.",,
2.66505E+17,notjack#9941,2021-01-02,Scribble is also amazing,,
4.61981E+17,Gavinok#4195,2021-01-02,I agree that the ability to modify the syntax of a language is a straight up game changer. Other then that the gui libs are great. Borderline  the best for a language specific and cross platform gui development. If none of that appeals to you then look into scheme since most of its pros and cons can be applied to racket.,,
4.66395E+17,oaktownsam#0815,2021-01-03,Racket has the best system for dealing with and communicating between concurrent and parallel processes.,,
2.75501E+17,Plane#0324,2021-01-03,Racket is fun,,plusone (7)
7.02403E+17,Liwei#3406,2021-01-03,This is indeed the biggest advantage of Racket!,,
4.62028E+17,StephenD#5938,2021-01-03,I think it has the most advanced macro system (syntax-parse) & ide macro support (macro-stepper),,plusone (1)
4.62028E+17,StephenD#5938,2021-01-03,It‚Äôs also the easiest to develop cross platform GUI development platform. It works out of the box.,,
5.39603E+17,spacey üåå#7238,2021-01-03,"@jest the docs point out that you'll usually want to make structs transparent, if I recall correctly",,
7.73175E+17,meowüé∫#2842,2021-01-03,"They are all completely different languages, so what applies to one won't apply to the other.",,
7.73175E+17,meowüé∫#2842,2021-01-03,"A better question to ask would be ""What advantages does Racket have over Java?""",,
2.66505E+17,notjack#9941,2021-01-04,"If we're talking about things that pretty much no other languages have, the macro system is definitely a huge advantage. Specifically `syntax-parse`, it's amazing.",,plusone (6)
6.43137E+17,Anything#4621,2021-01-04,"Every language has some syntax, but Racket has ""beautiful syntax"", which is not the case of any other Lisp.  (For example, Common Lisp makes you write things #'procedure-name instead of just procedure-name.) üôÉ",,hehe (1)
4.62028E+17,StephenD#5938,2021-01-04,on the topic of syntax-parse - check out https://docs.racket-lang.org/syntax-parse-example/index.html,,üëç (1)
4.62028E+17,StephenD#5938,2021-01-04,slack seems dead rn,,
4.66395E+17,oaktownsam#0815,2021-01-04,"From my work: ""Slack users are having trouble connecting and may be experiencing poor performance today. Slack is currently working on the issue that started around 3:15pm GMT. We will provide updates until the outage is resolved.""",,
4.62028E+17,StephenD#5938,2021-01-04,ta,,
4.83487E+17,jest#6646,2021-01-04,"using rebellion types and how come:
```scheme
(define-record-type opcode (name argument addressing-mode))
(define add-42
  (opcode #:name 'ADD
          #:argument 42
          #:addressing-mode 'immediate))

(record-type? opcode) ; returns false???
(record-type? add-42) ; also false
```",,
4.83487E+17,jest#6646,2021-01-04,opcode is a `#<procedure:constructor:opcode>` . where do i get its type tho ?,,
3.5323E+17,Alex Knauth#4895,2021-01-04,does `descriptor:opcode` fill that?,,
4.66395E+17,oaktownsam#0815,2021-01-04,^-- this,,
4.66395E+17,oaktownsam#0815,2021-01-04,"> descriptor-id, which defaults to descriptor:id ‚Äî the type descriptor for the created type.",,
4.66395E+17,oaktownsam#0815,2021-01-04,you can also specify a name with `#:descriptor-name` in `define-record-type`,,
7.94955E+17,Laurent O#6627,2021-01-04,(was replying to wrong message...),,
2.66505E+17,notjack#9941,2021-01-04,(wow it's wild to see other people fielding questions for a package I made),,"yayy (1),ü•∞ (1)"
7.94955E+17,Laurent O#6627,2021-01-04,"well, rebellion stats on github are decent iirc, something like 50 stars and ~10 forks. Means you quite likely have at least 20 users :)",,
7.94955E+17,Laurent O#6627,2021-01-04,I wonder how many users on average we can expect in reality based on these numbers ü§î,,
2.66505E+17,notjack#9941,2021-01-04,wait that returns false?,,
2.66505E+17,notjack#9941,2021-01-04,...oh whoops I wrote the docs example wrong,,
2.66505E+17,notjack#9941,2021-01-04,OH,,
2.66505E+17,notjack#9941,2021-01-04,I see what you did now,,
2.66505E+17,notjack#9941,2021-01-04,nevermind,,
7.94955E+17,Laurent O#6627,2021-01-04,"Also, quite likely the benefit of quality documentation ;)",,‚ù§Ô∏è (3)
4.83487E+17,jest#6646,2021-01-04,i wish that was built into racket :s,,
4.83487E+17,jest#6646,2021-01-04,or at minimum have the an ide experience like rust-analyzer in vscode..,,‚ù§Ô∏è (1)
4.83487E+17,jest#6646,2021-01-04,,https://cdn.discordapp.com/attachments/618895179343986688/795801159070777364/unknown.png,
4.83487E+17,jest#6646,2021-01-04,"the grey text is displaying type inference and parameter names, etc",,
4.83487E+17,jest#6646,2021-01-04,maybe i shoud look into how to write the lsp for it lol,,
2.66505E+17,notjack#9941,2021-01-04,I highly recommend contributing to https://github.com/jeapostrophe/racket-langserver,,
2.66505E+17,notjack#9941,2021-01-04,and I have a lot of thoughts about porting Rust's clippy tool to racket,,
4.83487E+17,jest#6646,2021-01-04,"according to jeapostrophe:
```
I think that the right way to implement most features in Racket-LSP is to find the corresponding feature in DrRacket and then disentangle from DrR's GUI and then expose the feature through the LSP. In many cases, DrR has already been internally organized to do that, but we just haven't done enough spelunking yet.
```
that sounds like too much work lol....",,
4.83487E+17,jest#6646,2021-01-04,in the mean time im using tabnine for autocomplete https://github.com/codota/TabNine,,
4.83487E+17,jest#6646,2021-01-04,it sometimes eats a crap ton of ram and cpu tho,,
2.66505E+17,notjack#9941,2021-01-04,There's a drracket autocompletion feature but it has some issues,,
7.73175E+17,meowüé∫#2842,2021-01-04,Hmm,,
7.73175E+17,meowüé∫#2842,2021-01-04,"`the-color-database` manages to `find-color` `""DarkGoldenrod""` but not `""Dark Goldenrod""`.",,
7.73175E+17,meowüé∫#2842,2021-01-04,The colour names should be normalised otherwise.,,
7.73175E+17,meowüé∫#2842,2021-01-04,"ie both `""Dark Green""` and `""DarkGreen""` should work",,
7.73175E+17,meowüé∫#2842,2021-01-04,"Okay, this is new: `set!: unbound identifier`",,
7.73175E+17,meowüé∫#2842,2021-01-04,"oh wait, it was talking about its argument ü§¶",,
3.29023E+17,nixin72#3554,2021-01-05,"What are your thoughts on Clojure? It's a lisp-1, so you don't get all the ugly CLisms üòÑ",,
6.43137E+17,Anything#4621,2021-01-05,"I don't use Clojure.  And by the way I was half joking with my comment above.  It's true I prefer Racket over any other Lisp, but of course I will choose Clojure over any other non-Lisp language and most likely every other Lisp that's not Racket.  

The parenthesis-syntax to me, though, is beautiful syntax.  It is very uniform and very nice to edit it using editors like Emacs and DrRacket.  It is beautiful, visually speaking, and pleasurable to edit it.  

Some thinkers say that computer programs should be pleasurable to use.  (This is people in the Human-Computer Interface field.  I agree with them.)

One principle that guides me is what I call the principle of least surprise.  Software should not surprise you.  By knowing everything that it's doing it and what's going to happen next, it gives you a sense of great control, which is pleasurable.  Another source of pleasure seems to do a lot with very little effort.  Editing and navigating through your code using text editors like Emacs and DrRacket seems to let you do a lot with little and I believe this is easily maximized with ""beautiful syntax"".  But, as you can see, the more fundamental principle here ""pleasurable to use"".",,
3.29023E+17,nixin72#3554,2021-01-05,"Totally agree that the parenthesis are a very nice syntax üòÑ Much better imo than C-style or anything else I've seen.

Your syntax is the ""front-end"" of your language, and it's what your users need to interact with, and so designing it well is important, and I think Lisp has done it best. 

I personally love both Racket and Clojure, I've just been focusing a bit more on Clojure recently since if I ever manage to get a job in Lisp, it will most likely be in Clojure!",,
6.43137E+17,Anything#4621,2021-01-05,Good point!,,
4.83487E+17,jest#6646,2021-01-05,"@Dav1s never used kite, but kite looks like its for 16 languages while tabnine is for every language and tried to be general purpose",,
4.83487E+17,jest#6646,2021-01-05,"oo, they have a comparison",,
4.83487E+17,jest#6646,2021-01-05,https://www.youtube.com/watch?v=10cO9UNsA3Y,,
7.73175E+17,meowüé∫#2842,2021-01-05,I got bored this morning and wrote a bidding value calculator for the German game skat: <https://github.com/erkin/skat-bidder>,,
7.73175E+17,meowüé∫#2842,2021-01-05,There are screenshots inside.,,
2.14881E+17,Moinate#6061,2021-01-05,Normalization of color names was (should have been?) fixed in Racket 7.9. https://github.com/racket/draw/pull/17,,
2.14881E+17,Moinate#6061,2021-01-05,"That was a good example of a PR cleanup that could have been on the ""good first issues"" list.",,
7.73175E+17,meowüé∫#2842,2021-01-05,"Ah, I'm on v7.4",,
7.73175E+17,meowüé∫#2842,2021-01-05,Thanks!,,
3.5323E+17,Alex Knauth#4895,2021-01-05,No that PR was never merged,,
7.73175E+17,meowüé∫#2842,2021-01-05,oh,,
3.5323E+17,Alex Knauth#4895,2021-01-05,instead of that https://github.com/racket/draw/commit/c8ebf2dee7c0d1b895d9c5124d9fd696338b554f was committed,,
3.5323E+17,Alex Knauth#4895,2021-01-05,Which does something similar but with some tweaks I think,,
4.62028E+17,StephenD#5938,2021-01-06,"Racket users video meetup - Jan 9, 2021 at 8pm CET, via Gather Town. https://gather.town/app/wH1EDG3McffLjrs0/racket-users 
There‚Äôll be (optionally) lightning talks and the paper for discussion (optional pre-reading) is the featured paper: Macros for Domain-Specific Languages. https://drive.google.com/file/d/14XMPoRJgrmAJ934qDZSCQ8p8_rvNEe0b/view?usp=sharing",,"plusone (2),meow (2),üëÄ (1)"
4.66395E+17,oaktownsam#0815,2021-01-06,https://www.reddit.com/r/lisp/comments/kre1nn/well_at_least_racket_is_up_on_m1_mac/,,
4.62028E+17,StephenD#5938,2021-01-06,Is it the cs or bc build ?,,
4.66395E+17,oaktownsam#0815,2021-01-06,Not sure.  I just was amused that Racket might be one of the only Lisps that will run on the M1.,,üëç (1)
4.62028E+17,StephenD#5938,2021-01-06,It is the best lisp ‚ù§Ô∏è:racket:,,"plusone (5),‚ù§Ô∏è (5)"
4.62028E+17,StephenD#5938,2021-01-07,Pinned a message.,,
7.94955E+17,Laurent O#6627,2021-01-07,"Given how different Racket is, I'm surprised we can still call it a Lisp at this point üòâ Though WP does list it as a dialect of Lisp.",,
4.62028E+17,StephenD#5938,2021-01-07,all new builds are CS unless othewise specified,,
7.94955E+17,Laurent O#6627,2021-01-07,did you just reply to jest's message on... slack? üòÑ,,
4.62028E+17,StephenD#5938,2021-01-07,I'm confused?,,
4.62028E+17,StephenD#5938,2021-01-07,that was samth...are you messign with me?,,
7.94955E+17,Laurent O#6627,2021-01-07,"Jest posted the following message on slack ""Is the next version of racket chez scheme as default [...] ?""",,
7.94955E+17,Laurent O#6627,2021-01-07,"and your message looked like you replied to jest, but on a different medium üôÇ",,
7.94955E+17,Laurent O#6627,2021-01-07,which felt like parallel universes üòÑ,,
4.62028E+17,StephenD#5938,2021-01-07,mflatt responded to me asking about the M1 build > All snapshot builds are CS unless labeled ‚ÄúBC‚Äù.,,
4.62028E+17,StephenD#5938,2021-01-07,I felt compelled to pass it on.,,üëç (1)
4.62028E+17,StephenD#5938,2021-01-07,"Racket Users Video Meetup  ‚òéÔ∏è üì∫
Saturday 2021/01/09 :: 8pm CET / 7pm UK / 11am Pacific
https://gather.town/app/wH1EDG3McffLjrs0/racket-users

Agenda
What have you been working on?
Paper for discussion:
Macros for Domain-Specific Languages by MICHAEL BALLANTYNE, ALEXIS KING & MATTHIAS FELLEISEN
https://2020.splashcon.org/details/splash-2020-oopsla/105/Macros-for-Domain-Specific-Languages
Kind regards,
Sam Phillips & Stephen De Gabrielle",,üéâ (2)
4.62028E+17,StephenD#5938,2021-01-07,Pinned a message.,,
7.73175E+17,meowüé∫#2842,2021-01-07,Sounds exciting,,
2.17743E+17,Kurinoku#9847,2021-01-07,"is there a userscript for racket docs? i dislike that the navigation panel on the left stays static, especially for when the page is very long, and if i want to search another method/function/variable in the same file

https://racket.slack.com/archives/C06V96CLD/p1610058433497900",,
4.62028E+17,StephenD#5938,2021-01-08,What's a 'userscript' in this context?,,
7.73175E+17,meowüé∫#2842,2021-01-08,A web script that gets injected on the client-side to alter the UX.,,
4.62028E+17,StephenD#5938,2021-01-08,nice,,
7.73175E+17,meowüé∫#2842,2021-01-08,For example to give Google a dark theme,,
4.62028E+17,StephenD#5938,2021-01-08,I wonder if css can detect os settings?,,
4.66395E+17,oaktownsam#0815,2021-01-08,https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme,,üòÉ (1)
4.66395E+17,oaktownsam#0815,2021-01-08,In case you didn't know MDN is probably the best place to look up web (HTML/HTTP/CSS) standard stuff.,,
4.62028E+17,StephenD#5938,2021-01-08,thanks,,
2.66505E+17,notjack#9941,2021-01-08,"nope. Also if a call is tail recursive, it doesn't consume any extra memory.",,
2.66505E+17,notjack#9941,2021-01-08,"? no, recursion depth limits are an artificial limitation of implementations, not a good and necessary thing for program safety",,
2.66505E+17,notjack#9941,2021-01-08,tail recursion is no different from loops,,
4.66395E+17,oaktownsam#0815,2021-01-08,The only language I can think of that tracks recursion depth is Python.  Maybe Ruby and Javascript have it too,,
1.93202E+17,rocketnia#4517,2021-01-09,"Racket (not to mention languages based on it) is the only language I know for sure lets the stack grow arbitrarily. The JVM and JavaScript (not to mention languages based on them) typically have stack size limits in the thousands of frames, I think, with the exact limit being implementation-specific. I don't know what the status of other languages is.",,
1.93202E+17,rocketnia#4517,2021-01-09,"(Small numbers of local variables also contribute to overflowing the stack in JS, or at least they did when I was testing it out several years ago.)",,
1.93202E+17,rocketnia#4517,2021-01-09,(I suppose my testing was mainly on Chrome V8.),,
4.66395E+17,oaktownsam#0815,2021-01-09,"I guess even system languages technically have limits, but they are mostly imposed by the OS.  The reason for them is definitely partially because of safety but that is due to how they layout process memory.",,
4.62028E+17,StephenD#5938,2021-01-09,"Agenda
What have you been working on?
Paper for discussion:
Macros for Domain-Specific Languages by MICHAEL BALLANTYNE, ALEXIS KING & MATTHIAS FELLEISEN
https://2020.splashcon.org/details/splash-2020-oopsla/105/Macros-for-Domain-Specific-Languages
Kind regards,
Sam Phillips & Stephen De Gabrielle",,
4.66395E+17,oaktownsam#0815,2021-01-09,@notjack (and anyone else) if you're around we're in gather now,,
4.62028E+17,StephenD#5938,2021-01-09,Work In Progress: https://spdegabrielle.github.io/research-papers/  https://github.com/spdegabrielle/research-papers,,ü•∞ (1)
6.43137E+17,Anything#4621,2021-01-09,Note to self.  Use my calendar next time so I can join on time.  I hope I didn't disrupt anything.,,plusone (1)
4.62028E+17,StephenD#5938,2021-01-09,"Thank you to everyone who joined the racket meet-up.
Next one is 6th Feb",,
6.43137E+17,Anything#4621,2021-01-09,@StephenD  Is there a URL already set?  Same as https://gather.town/app/wH1EDG3McffLjrs0/racket-users?,,
4.66395E+17,oaktownsam#0815,2021-01-09,Should be the same unless Stephen says otherwise,,üëå (2)
4.62028E+17,StephenD#5938,2021-01-09,Or unless there is a better alternative.,,
2.66505E+17,notjack#9941,2021-01-09,oops I slept through it,,oh_no (3)
4.66395E+17,oaktownsam#0815,2021-01-09,Next time I'll try to get up early to remind you before you go to bed üòÑ,,üòÖ (1)
5.39603E+17,spacey üåå#7238,2021-01-10,What time/days are the Racket meetups?,,
4.66395E+17,oaktownsam#0815,2021-01-10,Saturday's 4-6 weeks apart we don't really plan more than 1 ahead,,
4.66395E+17,oaktownsam#0815,2021-01-10,time depends on where in the world you are üòÑ .  11am Pacific  for me,,
2.74358E+17,jesscxc#4846,2021-01-10,"11am PST = 11am UTC-8 = 7pm/19h UTC, btw üòä",,
7.97612E+17,Achernar#9642,2021-01-10,"hi, I've read HtDP to learn programming and now I just don't know what learn next, should I go with Racket or it's too academic as some people mentioned to me? Mostly they tell me ""learn Python or Java"" lol",,
2.17743E+17,Kurinoku#9847,2021-01-10,"well, python and java have huge communities and resources behind them, also many libraries, i learned C/C++/java becuz of college and python by myself, i must say if you have something in mind like bots (discord, etc), machine learning, need sellable skills or whatever, python/java comes first, gamedev is C++/C#, you might also try Rust... 

but i have to say racket is capable of doing more and easilier than what vanilla python can, personal appreciation here.",,
6.69959E+17,grantr#1590,2021-01-10,does htdp have racket?,,
6.43137E+17,Anything#4621,2021-01-10,"If I could go back in time, I would have make sure to spend some 10 years on just Lisp first having first read HtDP and having done everything as meticulously as the book does.  After that I would try to write things the Lisp way in every other language I'd learn later.  As the Lisp choice, Racket for sure.  I think it's safe to say that Racket is the most advanced Lisp out there.  It is definitely not ""too academic"" in the sense that you could use it for anything you're planning to do --- I conjecture.  And ""academic"" is actually a pretty nice adjective.  I'm a real-world programmer trying every day to make ends meet and I try to be as academic as possible.

Either way, if you're beginning, more important than Racket is HtDP.  This book has changed my life and it I've heard the same from others here.  It is a deceptively looking book.  I had to get half-way through to see its depth.",,
6.43137E+17,Anything#4621,2021-01-10,"Does HtDP use Racket?  (That's the question I'm answering here.  Did I get your question right?)  The book uses a series of languages implemented with Racket.  It begins with BSL --- beginning student language.  The purpose of this language is to fit in well with the book.  You're using Racket when you're using BSL.  Eventually the book introduces other (more advanced) languages.

The full-fledged Racket language per se is probably better seen in the book ""The Realm of Racket"".",,
6.69959E+17,grantr#1590,2021-01-10,"@Anything I see, that's why the question seemed a bit weird to me",,
6.69959E+17,grantr#1590,2021-01-10,I wish I started out on sicp,,
6.43137E+17,Anything#4621,2021-01-10,"If you read HtDP, you will find SICP a much easier book.  (Some exercises are always hard anyway, though.)  HtDP has some tough exercises too.  I remember generating all permutations without side effects.  I took a long while on that one and the book pretty much guides you to write the solution.  Not everything is easy.  But it becomes easier as you work through it --- over the years in my case.",,
2.14881E+17,Moinate#6061,2021-01-10,"@Achernar I agree with what people here are saying, but some notes and a different perspective.
Assuming you're kind of a beginner programmer but not a cs student: **universe** games can be very satisfying to write. If you're not really satisfied with anything you've written, try making a multiplayer clone of ""agar.io"" or four player pong (1 paddle per player, 1 player per wall). Learn how to use `for` from the Racket Guide (really I usually want `for/fold` in my games) and `struct-copy` if you haven't run into them. 

One natural next step would be to learn how to write macros. Being able to write a macro is definite proof that you ""really know Racket"" in my book. üôÇ I think Hendershott's Fear of Macros is even in the main-line documentation now. http://www.greghendershott.com/fear-of-macros/ Or Butterick's Beautiful Racket for writing little languages. https://beautifulracket.com/",,
2.14881E+17,Moinate#6061,2021-01-11,"Macros are a way to add new features to a language, extending the language in a way that a function can not.
Example of a macro: `~>` https://docs.racket-lang.org/threading/index.html
The Racket Guide has a pretty reasonable introduction to macros, beginning with `(swap x y)` which exchanges the values of x and y. https://docs.racket-lang.org/guide/pattern-macros.html",,yay_jump (1)
5.39603E+17,spacey üåå#7238,2021-01-11,@jesscxc so it's at 7PM UTC?,,
2.74358E+17,jesscxc#4846,2021-01-11,"11am PST (Pacific Standard Time) is 7pm UTC, yes",,
2.74358E+17,jesscxc#4846,2021-01-11,"but in mid-March when Daylight Saving Time starts, Pacific Time changes to PDT (UTC-7), and that's 6pm UTC",,
2.74358E+17,jesscxc#4846,2021-01-11,Daylight Saving Time is mid-March to early November btw üòä,,
2.74358E+17,jesscxc#4846,2021-01-11,"EST is UTC-5; EDT is UTC-4, btw üòä",,
2.74358E+17,jesscxc#4846,2021-01-11,"(my personal timestamps include timezones, so it's easy to calculate ü§ì)",,
3.81684E+17,wwall#5076,2021-01-13,Hello. I have question. i write simple lexer use parser-tools  How i can extend information which return lexer? i want somewing look at  (token-ID lexeme {:key1 value1}) Is exists simple way for it?,,
4.66395E+17,oaktownsam#0815,2021-01-13,If you don't have to interoperate with the parser generator in `parser-tools/parser` then the easy way is to make your own token type. With the fields you need.,,
2.66505E+17,notjack#9941,2021-01-13,"out of curiosity, what do you like about them?",,
2.75501E+17,Plane#0324,2021-01-13,"for most of my career i haven't necessarily picked languages based on how much i *liked* them, but based on what was appropriate for the task at hand",,
2.75501E+17,Plane#0324,2021-01-13,after 25 years of c++ off-and-on it's not exactly my favorite language (lol),,
2.75501E+17,Plane#0324,2021-01-13,but in some ways it's gotten a lot better over the years,,
2.66505E+17,notjack#9941,2021-01-14,yeah that makes sense,,
2.66505E+17,notjack#9941,2021-01-14,"racket :p though I'm a fan of haskell, java, rust, and some others",,
2.66505E+17,notjack#9941,2021-01-14,pure functional programming with higher-kinded types and typeclasses is pretty cool,,
2.66505E+17,notjack#9941,2021-01-14,I'm not interested in ranking languages,,
2.66505E+17,notjack#9941,2021-01-14,They're pretty neat,,
5.39603E+17,spacey üåå#7238,2021-01-14,i still don't know how to actually do stuff with functional languages,,
5.39603E+17,spacey üåå#7238,2021-01-14,maybe i should start looking at other people's code. any ideas?,,
2.25363E+17,AcerbicVeil#2790,2021-01-14,Well what kind of stuff would you like to do,,
2.25363E+17,AcerbicVeil#2790,2021-01-14,Think of something you would want and maybe look at things similar to it,,
5.39603E+17,spacey üåå#7238,2021-01-14,"like let's say i wanted to do a poker kata, like so https://codingdojo.org/kata/PokerHands/",,
5.39603E+17,spacey üåå#7238,2021-01-14,how would i represent the cards? i first solved it in java and it felt pretty natural to use a bunch of mutation and objects,,
5.39603E+17,spacey üåå#7238,2021-01-14,i tried using structs but it didn't feel right,,
5.39603E+17,spacey üåå#7238,2021-01-14,:o,,
5.39603E+17,spacey üåå#7238,2021-01-14,cons cells :D,,
5.39603E+17,spacey üåå#7238,2021-01-14,c o n s,,
5.39603E+17,spacey üåå#7238,2021-01-14,does that sounds like a good idea?,,
2.25363E+17,AcerbicVeil#2790,2021-01-14,"You could use structs, i prolly wouldnt tho cuz im not that good  at them",,
2.25363E+17,AcerbicVeil#2790,2021-01-14,I would use cons cells ye,,
2.25363E+17,AcerbicVeil#2790,2021-01-14,But i mean im not the most effiencent programmer :D,,
5.39603E+17,spacey üåå#7238,2021-01-14,no problem hehe,,
4.66395E+17,oaktownsam#0815,2021-01-14,"```scheme
(struct card [suit value] #:transparent)
```",,
4.66395E+17,oaktownsam#0815,2021-01-14,I'd make a hand a list of cards then,,
4.66395E+17,oaktownsam#0815,2021-01-14,Then write a ton of predicates for the different hands,,
4.66395E+17,oaktownsam#0815,2021-01-14,"What really would make a difference in solving that particular problem would be how robust the support your language has for comparisons and ordering, and is pretty orthogonal to which style you use.",,
6.43137E+17,Anything#4621,2021-01-14,"I was investigating with a deck of cards just the other day.  I used a pair for a card.
```Lisp
war.rkt>  (take (make-deck) 5)
'((hearts . 1) (hearts . 2) (hearts . 3) (hearts . 4) (hearts . 5))```
I wanted to investigate a game called war.  I discovered some interesting conjectures.  If two people play this game and the first player is always the first to play and when you collect the table you always keep the cards in the same order, then there is a very high probability that the game will never end.  If you, however, shuffle the table cards then there is a very high probability that the game will end.  (When a table ties, the two players just play another table to see who wins the entire table.  I see that not everyone plays it like that, but this is how I knew how to play.)

I never realized the game could actually go on forever because in practice when people play nobody keeps the cards in order, so there is some randomness going on in the table and apparently that's what makes the game end.  It's possible to end the game without shuffling the table cards.  I did search and find decks that could illustrate that.

The code is not pretty:
https://pastebin.com/raw/rLNLLtcW",,"üëå (1),yay_jump (1)"
4.66395E+17,oaktownsam#0815,2021-01-14,"There are many reasons to choose structs over lists, but one that I like is that your code is not littered with car cdr cadr etc.",,
6.43137E+17,Anything#4621,2021-01-14,"That was the first time I used match and define-match.  I finally decided to stop with the car, cdr, cadr. :-)  And that was days ago.",,
4.66395E+17,oaktownsam#0815,2021-01-14,Yes match helps a lot there.,,
6.43137E+17,Anything#4621,2021-01-14,It is so wonderful.  I'm at a phase now that I'm finally enjoying Racket quite a lot.  I'm finally learning faster because I'm being able to use it daily now.  I took years to get here.,,"yay_jump (2),üôå (2)"
6.43137E+17,Anything#4621,2021-01-14,I got to end my day.  Have a good night you all!,,
2.74358E+17,jesscxc#4846,2021-01-14,that's really neat!,,‚ù§Ô∏è (1)
5.39603E+17,spacey üåå#7238,2021-01-15,"What's match? I keep hearing about it, but I'm not entirely clear on what it is/how it's used",,
2.14881E+17,Moinate#6061,2021-01-15,Wouldn't it be best to google? https://docs.racket-lang.org/reference/match.html?q=match#%28form._%28%28lib._racket%2Fmatch..rkt%29._match%29%29,,
2.14881E+17,Moinate#6061,2021-01-15,"Look at the source code for the games distributed with Racket, I'm sure you'll see it plenty.",,
6.43137E+17,Anything#4621,2021-01-15,"For the record, I decided to see what people think of the game just now.  Apparently it's not like how I have played.  Let's take this page https://www.officialgamerules.org/blank as the official rules.  When a table ties (both cards with the same rank), each player adds one card face down and one face up.  The new dispute is between the face up cards.  This should increase the probability that the game will end.  However, I still claim that if perfect order is always kept, the game will likely cycle on.

These ""official"" rules not do consider the following case: when a player has only a single card remaining in her stack and this last table ties, what happens?  I decided to define this as a tie.  The player with most cards cannot be so unlucky to tie the last table.  My *rationale* is that if you tie the last card, you found a way to a stalemate, which works as a reward to the player that was almost losing the game.

If you collect the table keeping the same exact original order of the cards (that is, first player puts her card first, then second player puts her card on top [and first player is always the first to place the card]), then the probability (so I believe) the game will end is about 13% of the times.  If you shuffle the cards before collecting the table, the probability the game will end is over 99% --- I did not find a game that did not end.  (I do not understand these results.)",,
6.43137E+17,Anything#4621,2021-01-15,"-
How long does this game take?  If you shuffle the table cards before collecting them, the average number of rounds seems to be close to 620.  (If we consider each round to last about 5 seconds, that'd be near an hour of game.)  If you keep the table order, most games don't end, but considering only those that do end then the average number of rounds I get is 2161 rounds (but with a standard deviation of 1345) and an amplitude of 4904.

No great certainty on any of this.  (For instance, I claim a game doesn't end if after 5000 rounds, it hasn't ended yet.  That's just a guess I came up with by inspection, but you can see that some games do end very near 5000 rounds.)",,
7.73175E+17,meowüé∫#2842,2021-01-15,"Oh hey, I recently dealt with card games on Racket.",,
7.73175E+17,meowüé∫#2842,2021-01-15,Let me get out of bed.,,
7.73175E+17,meowüé∫#2842,2021-01-15,@Anything Have you implemented any game logic?,,
2.74358E+17,jesscxc#4846,2021-01-15,there was a pastebin link with some code üòä,,
2.66505E+17,notjack#9941,2021-01-15,"1) this is extremely funny
2) I'd generally prefer that memes go in #off-topic",,"hehe (1),plusone (2)"
2.66505E+17,notjack#9941,2021-01-15,"at least if they're not racket-specific, anyway",,
6.43137E+17,Anything#4621,2021-01-15,"Hi, @Lulu.  Like @jesscxc said.  [The message](https://discord.com/channels/571040468092321801/618895179343986688/799478541628080188) points to some quick-and-dirty code I wrote just to investigate a bit of the behavior of the game.  The code is a simulation of the game from which I extracted some statistics.  (Here's the link again: https://pastebin.com/raw/rLNLLtcW)",,oh_yes (2)
2.74358E+17,jesscxc#4846,2021-01-15,Have you considered the applications to like life in general?,,
2.74358E+17,jesscxc#4846,2021-01-15,like the math than can be abstracted from the conjectures and see how it could relate to social interaction and such ü§ìüòÅ,,
6.43137E+17,Anything#4621,2021-01-15,"That sounds very interesting, but I certainly have not thought of any of this so far.  üòä  You're catching me by surprise here.  I can't see any, say, implications from that game.  I do like the topic, though.  For instance, sometimes I feel like inventing a game or something for educating people relative to stuff they don't understand.  For instance, inflation!  I'd love to play an inflation game or (much better) invent a nice one!  

Have you considered?!  I'd love to hear your thoughts for sure.",,
2.74358E+17,jesscxc#4846,2021-01-15,"ooooh, very interesting",,
2.74358E+17,jesscxc#4846,2021-01-15,i'm working on a timetravel incremental game :3,,
6.43137E+17,Anything#4621,2021-01-15,"That sounds interesting, but I am in the dark, of course. :meowblush:",,
2.74358E+17,jesscxc#4846,2021-01-15,"incremental games are kind of related to inflation/deflation, since if you think of it like changes in purchasing power, then investing in resources that create more resources is playing with the math of that effect :blobaww:",,
6.43137E+17,Anything#4621,2021-01-15,"Hm, I sense a bit of the idea.  So I guess a timetravel incremental game might involve dynamics of one timetravel creating implications for the players, which perhaps would have be balanced with other things in the game.  (I do think of an inflation game like that.  The players should be like banks, with power to create money in a variety of ways and, while the power brings them a lot of profit, the more they use it, the higher the probability that they would face terrible consequences.  But, I confess, there are great difficulties with ideas of this sort.  One big problem I always find is that it kinda takes computer resources to help people visualize things and I kinda feel that having a computer involved in a game isn't easy or cheap to do or even desirable.)  Life is not easy. :-)  I did find a game very recently that seemed kinda in this realm.  The visual work looked good.  I wonder if I can find it again.

Found it:
https://boardgamegeek.com/boardgame/99385/milton-keynes

Not as close as I said above perhaps.  My real desire is to teach people about inflation, ignoring a bit any controversies that do exist around it.  I'd be very satisfied already if there was a game that could teach people by very concrete ways that the increase in monetary supply decreases the value of the money they hold.  That'd make me happy already.  I'd be super happy if the dynamics of the game, while giving people's freedom to buy and sell stuff, would sooner or later show the consequences of increasing the monetary supply (which they would have the freedom to do too).",,üî• (1)
6.43137E+17,Anything#4621,2021-01-16,"Ethereum uses a lower-level encoding called Recursive Length Prefix, or RLP.  When a transaction is signed, for example, the bytes signed are the RLP-encoding of the transaction.  A nice implementation of the method in ACL2, a theorem prover, has been [done](https://arxiv.org/pdf/2009.13769).  I ported it to Racket for personal use:
  https://pastebin.com/raw/BJz8yJTt
The presentation of the code can be found in this PDF.  This is a first draft.  My next step is to continue to write a Racket library on top of the JSON-RPC supported by Ethereum nodes.",https://cdn.discordapp.com/attachments/618895179343986688/800194086610534400/eth.pdf,
2.66505E+17,notjack#9941,2021-01-16,"Oh that's cool, congrats!",,üòä (1)
4.53311E+17,0000000000#7632,2021-01-16,is there any overlap between racket and type theory languages like coq or lean used in mathematics proofs?,,
4.53311E+17,0000000000#7632,2021-01-16,and do you think I should learn haskell before racket?,,
4.53311E+17,0000000000#7632,2021-01-16,I am a CS student BTW if that helps,,
2.66505E+17,notjack#9941,2021-01-17,"There's The Little Prover, which is a book and companion programming language (built on Racket) about dependently typed programming http://the-little-prover.github.io/",,‚ù§Ô∏è (1)
2.66505E+17,notjack#9941,2021-01-17,Oh wait no I'm thinking of the book The Little Typer http://thelittletyper.com/,,
2.74358E+17,jesscxc#4846,2021-01-17,really cool! :ablobaww:,,üòä (1)
2.14881E+17,Moinate#6061,2021-01-17,"@0000000000 I would say Haskell and Racket are likely to teach independent skills. Haskell is typed. Unless you use Typed Racket, you're not doing that. If you have a solid understanding of a few programming languages, Haskell is fine. Some schools teach SML or Objective CAML in an intro class. That might be less painful than Haskell. 

If you're going to try to learn Haskell on your own, expect to fail the first time (i sure did).  If you're going for it, spend the $60 and get https://haskellbook.com/ . You can learn Haskell from https://learnyouahaskell.com/  but the exercises and depth of discussion in the Haskell Programming from first principles is a lot better.

The pro for Racket is you can actually get stuff done. üôÇ The amount of machinery you need to master to build a GUI application (or say a game, even a multiplayer networked game) is *so* much less... 

But Racket won't change the way you think about programming the way Haskell will.",,‚ù§Ô∏è (1)
4.53311E+17,0000000000#7632,2021-01-17,https://en.wikipedia.org/wiki/Racket_(programming_language),,
4.53311E+17,0000000000#7632,2021-01-17,the write up here makes it way more interesting,,
4.53311E+17,0000000000#7632,2021-01-17,"the part about using racket to teach CS concepts about language design, semantics, DSL. the part about scheme and lisp is super interesting.",,
4.53311E+17,0000000000#7632,2021-01-17,someone sent me hear because I was asking about untyped lambda calculus actually,,
4.53311E+17,0000000000#7632,2021-01-17,I was planning on learning LISP or haskell in 2021 anyway along side my books on lambda calculus,,
4.53311E+17,0000000000#7632,2021-01-17,so now I wondering if racket>scheme>lisp?,,
4.53311E+17,0000000000#7632,2021-01-17,not concerned with raw performance or the speed of building a usable GUI. I am more concerned with investing time into a language that can do all of mathematics including category theory and type theory even though I am building things from scratch. I still need a really unlimited language that is conducive to building languages and complicated algebraic structures of rings fields groups monoids magmas etc..,,
4.83487E+17,jest#6646,2021-01-18,anyone try to tackle racket language server to autocomplete on vscode ?,,
4.83487E+17,jest#6646,2021-01-18,https://github.com/jeapostrophe/racket-langserver/issues/5 this guy says he attempted to use code completion so i presume its implemented but hidden?,,
1.93202E+17,rocketnia#4517,2021-01-18,"Most Racket code is untyped and uses some loose contracts. I've explored modeling some category-theoretic interfaces with very precise contracts in Racket (https://docs.racket-lang.org/lathe-morphisms/index.html), and I wouldn't say it's been the easiest experience.

Contracts drag down the performance of the program, and I've been getting the sense that this is especially noticeable for something as abstract as categories. A typical use of categories involves several passes through contracts, and many of those contracts invoke each other multiple times. I've been very tempted to offer alternative interfaces that have looser or nonexistent contracts, so that bugs might be more trouble to track down, but at least non-buggy programs would be faster.

When I see people write category theory libraries with the same level of generality and the same precision of error-checking, they usually do so in dependently typed languages like Agda. Haskell also has a number of category theory libraries, and since Haskell either lacks or makes it difficult to use dependent types, these libraries tend not to reflect much of the full generality of the original caregory theory concepts.

At any rate, I think the static typing of these languages means that they don't force the kind of compromise I face in Racket between run time performance and catching bugs. I think my dreams for Lathe Morphisms would be much easier to pursue in Agda.

Racket does have some statically typed options. Typed Racket exists and supposedly makes up for some of the run time cost of the contract approach, but I don't hear consistent success stories with it. Turnstile+ seems like a promising tool for developing dependently typed languages, but I don't think any particular Turndsile+ language has a living community yet, so it's a ""some assembly required"" situation.",,
1.93202E+17,rocketnia#4517,2021-01-18,".
There's also the issue that my Lathe Morphisms contracts and programs tend to be very verbose. This reflects the fact that Racket has no lexically scoped implicit arguments, like Agda, Idris, and Scala do (and like Haskell does if we count type class instances). In mathematical writing for human readers, category theory concepts tend to be reusable with slight tweaks on many different foundations, but the choice of foundation and tweaks is specified once (if even that) and then left implicit. Likewise, type theory papers tend to leave type annotations implicit when it's easy enough for a human reader to infer them. In Racket, with no ready-to-go mechanism for making things like these implicit, it seems difficult to wrangle the verbosity.

Personally, part of my goal with Lathe Morphisms to make these things more explicit anyway. I've found the usual implicitness to be a barrier of entry to understanding the concepts, and I'd to help out other people who have the same trouble. But at some point, the extra work of being explicit about everything really does drag down the experience in a way that looks embarrassing next to the terseness of Agda, Haskell, etc. I feel that those languages' support for implicit arguments makes them work with the grain of the category theory and type theory traditions a lot better.

I have some ideas for implementing lexically scoped implicit arguments for Racket. (Racket already has dynamically scoped implicit arguments in the form of ""parameters,"" but I don't find those suitable for this. It arguably has lexically scoped ones in the form of ""syntax parameters,"" but they're not quite lexically scoped enough to respect macro hygiene.) But I haven't put my ideas into practice yet, and it's once again a ""some assembly required"" situation since no technique like this has much of a following in the Racket community yet.

[edit: ""scoprd"" -> ""scoped""]",,
1.93202E+17,rocketnia#4517,2021-01-18,"Oh yeah, you also mentioned wondering how Racket compares to Scheme in general, or Lisp in general. I think Racket explores macros in a lot more depth than just about any other Scheme or Lisp. For all that I'm saying ""some assembly required"" exists in Racket, I think Racket has some of the least assembly required out of all Scheme and Lisp dialects.",,
4.53311E+17,0000000000#7632,2021-01-18,thank you very much for such an excellent explanation @rocketnia,,plusone (1)
4.53311E+17,0000000000#7632,2021-01-18,I found this http://magma.maths.usyd.edu.au/magma/,,meownsch (1)
4.53311E+17,0000000000#7632,2021-01-18,$1440! hhaha,,plusone (1)
1.93202E+17,rocketnia#4517,2021-01-18,"oh, fascinating, looks like it's really well documented",,‚ù§Ô∏è (1)
4.62028E+17,StephenD#5938,2021-01-19,https://defn.io/2021/01/19/racket-cs-on-ios/,,meow (1)
2.14881E+17,Moinate#6061,2021-01-19,"My two cents: you *really* need to keep clear goals in mind when you start messing with very abstract stuff. Let your application drive your theory. The best abstractions I know of were developed over time by people with deep experience with the details of very problematic situations. Sure Magma is cool but there's a lot of the table of contents I don't even know, much less the ""Solving Problems with Magma"" paper. A horse and carriage driver like me is going to have a hard time understanding airplane controls, regardless of how cool I think the look.  http://magma.maths.usyd.edu.au/magma/pdf/examples.pdf",,
4.83487E+17,jest#6646,2021-01-20,why is slack so terrible ....,,
4.83487E+17,jest#6646,2021-01-20,the stupid toolbar gets in the way and i cant search past 10k messages,,
6.43137E+17,Anything#4621,2021-01-20,"Yes, the lack of searching ability is the expensive part.  You can pay and get it.  By the way, I think the Racket slack server does not have the searching limitation.",,
2.66505E+17,notjack#9941,2021-01-20,the racket slack uses the free tier,,
2.66505E+17,notjack#9941,2021-01-20,"the paid tier is pay-per-active-user, which gets infeasibly expensive for non-corporations when you've got hundreds of users",,"oof_blinking (3),‚úÖ (1)"
2.75501E+17,Plane#0324,2021-01-21,woah c++ has a logo now?,,
2.75501E+17,Plane#0324,2021-01-21,it makes me think of pac-man eating two little +s,,ü§£ (1)
4.62028E+17,StephenD#5938,2021-01-21,"FWIW the slack has 1,378 members",,
4.62028E+17,StephenD#5938,2021-01-21,this discord has 346,,
4.62028E+17,StephenD#5938,2021-01-21,"the slack has 350,522 messages (but only the last 10k are visible)",,
2.14881E+17,Moinate#6061,2021-01-21,but I'd say more drive-by casual interaction here. and perhaps more noise.,,
2.66505E+17,notjack#9941,2021-01-21,"and many more students and homework problems (an observation, not a complaint)",,
4.62028E+17,StephenD#5938,2021-01-21,yes - the students are welcome üôÇ,,
2.14881E+17,Moinate#6061,2021-01-21,in 5 years this discord will be full of pros using racket on the job,,‚ù§Ô∏è (5)
2.66505E+17,notjack#9941,2021-01-21,and/or even more academics,,
5.39603E+17,spacey üåå#7238,2021-01-21,i hope i,,
5.39603E+17,spacey üåå#7238,2021-01-21,'m one of those pros,,
4.6331E+17,alex27#9605,2021-01-21,"hey all! I'm starting this great journey, have some questions",,üôå (1)
2.66505E+17,notjack#9941,2021-01-21,@alex27 fire away,,
2.75501E+17,Plane#0324,2021-01-21,welcome! (:,,
2.25363E+17,AcerbicVeil#2790,2021-01-22,Its acc pretty crazy how little time in here can acc help out with the whole beginner hurdle,,‚ù§Ô∏è (2)
2.25363E+17,AcerbicVeil#2790,2021-01-22,Cuz my profs defo didnt help with that,,
2.25363E+17,AcerbicVeil#2790,2021-01-22,But just like a day or two in here was enough to set me off to the races,,‚ù§Ô∏è (5)
2.25363E+17,AcerbicVeil#2790,2021-01-22,:meow:,,
4.6331E+17,alex27#9605,2021-01-22,"they are rather vague but still.. how far away racket from other dialects, and how similar it with Haskell?",,
7.73175E+17,meowüé∫#2842,2021-01-22,Racket is very close to Scheme but considerably different from other Lisps.,,
7.73175E+17,meowüé∫#2842,2021-01-22,"It's very different from Haskell. Haskell is statically typed, purely functional and lazily evaluated.",,
7.73175E+17,meowüé∫#2842,2021-01-22,"Racket is dynamically typed (except for Typed Racket), not pure and eagerly evaluated (except for Lazy Racket).",,
7.73175E+17,meowüé∫#2842,2021-01-22,"It's an expression oriented language (like almost all other functional languages) and encourages language-oriented development. Just as most other Lisps, Racket is extremely flexible and expects you to carve a high-level language (and perhaps DSLs) out for your project and provides powerful tools to that end. It's got a very rich standard library and built in package manager, which set it apart from the rest of the Scheme ecosystem.",,
7.73175E+17,meowüé∫#2842,2021-01-22,"Just like Scheme, it's popular in the academia, both as a simple language for teaching the principles of CS, but also as a vessel for PLT research. The standard library contains a lot of unique features not found elsewhere because of the latter.",,
7.73175E+17,meowüé∫#2842,2021-01-22,"And, this is my personal observation, because of the former it's somewhat disliked because many people remember it as ""that weird language they forced me to use in CS 101 and it wasn't Java/Python/JavaScript"".",,
7.73175E+17,meowüé∫#2842,2021-01-22,How's that for an elevator pitch?,,‚ù§Ô∏è (4)
4.6331E+17,alex27#9605,2021-01-22,"Not so bad, haha. Thanks a lot for explanations.
> not pure
does that mean that it encourages side effects?
> package manager
is there anything like virtual environments in python?
And yes, I saw that stdlib is pretty awesome.
And btw, what's about debugging? Tools/ techniques ?",,
7.73175E+17,meowüé∫#2842,2021-01-22,It doesn't encourage them per se ‚Äî they're still frowned upon per the functional style. But it doesn't prevent them either. Racket is closer to OCaml than Haskell in some ways.,,
7.73175E+17,meowüé∫#2842,2021-01-22,It's not exactly like virtualenv but raco has scopes (the default ones are `installation` (`$PREFIX`) and `user` (`~`)) and you can declare your project a package (`raco pkg new`) and designate its dependencies with versions in the `info.rkt`.,,
7.73175E+17,meowüé∫#2842,2021-01-22,"As for debugging, although I write Racket code in Emacs, I fall back to DrRacket for debugging. It's got excellent static analysis features and a state of the art macro stepper.",,
7.73175E+17,meowüé∫#2842,2021-01-22,Racket doesn't really have repl-based interactive debugging like Common Lisp and some Schemes.,,
7.73175E+17,meowüé∫#2842,2021-01-22,"If you'd like to avoid DrRacket, `errortrace` is a nice debugger and profiler library (complements `raco profile`).",,
7.73175E+17,meowüé∫#2842,2021-01-22,"There are some procedures in `unstable/debug` for elaborate ""printf debugging"". üòÅ",,
7.94955E+17,Laurent O#6627,2021-01-22,Note that it is discouraged to use side effects because the compiler is optimized for the functional style. But sometimes it's still faster or much easier to use some mutation,,
4.6331E+17,alex27#9605,2021-01-22,"I was trying to find some info on lang relations and find this one: https://erkin.party/blog/190208/spaghetti/
looks pretty",,
4.6331E+17,alex27#9605,2021-01-22,thanks for explanations!,,
7.73175E+17,meowüé∫#2842,2021-01-22,I should update that sometime. üò¨,,
4.6331E+17,alex27#9605,2021-01-22,"yeah, would be great. It was a bit sad that there are only 3 posts",,
7.94955E+17,Laurent O#6627,2021-01-22,"Prolog/planner should probably under first order logic, but not untyped lambda calclus",,
4.6331E+17,alex27#9605,2021-01-22,is drracket used widely or people tend to avoid using it?,,
4.6331E+17,alex27#9605,2021-01-22,it reminds me pythons IDLE,,
7.94955E+17,Laurent O#6627,2021-01-22,"There was a poll not so long ago, and i think it was 50% drracket and 50% Emacs, roughly",,
1.93202E+17,rocketnia#4517,2021-01-22,"It can be hard to avoid side effects in Racket. Many Racket utilities have behavior that depends impurely on the value of parameters. Racket's concurrency, port I/O, and ephemeron tables (among other things) are designed in an impure style. Racket's user-defined types (`struct`, `make-struct-property`) depend on being able to generate a new token impurely. Racket's recursion support (`letrec`, module-level definitions, local definitions) depends on a limited form of mutation.

It seems basically pointless to try to avoid side effects during macroexpansion in Racket. Racket's macroexpansion model relies pervasively on parameters, generativity (`gensym`, `generate-temporaries`, `make-syntax-introducer`), and limited forms of mutation (particularly things that add to the global binding table and local binding context such as `syntax-local-bind-context`, which I think underlies the way local definitions work).",,"üëç (1),üß† (1)"
7.94955E+17,Laurent O#6627,2021-01-22,@StephenD did the poll,,
1.93202E+17,rocketnia#4517,2021-01-22,(sorry for the out-of-order wall of text! I was just typing that for a while. üòÑ ),,
4.62028E+17,StephenD#5938,2021-01-22,"Lots of people used multiple editors like @meowüé∫  mentioned above - emacs&drracket, vim&drracket, vsc&drracket.
It would be good to do another poll. My feeling is racket-mode(Emacs) is growing in popularity",,plusone (1)
4.6331E+17,alex27#9605,2021-01-22,"Hey people, it's only my first day here and already I can say that it's pretty cozy and welcoming to be here, thanks a lot!",,
4.6331E+17,alex27#9605,2021-01-22,"what could you say about ""The Little Series"" books?",,‚ù§Ô∏è (1)
7.73175E+17,meowüé∫#2842,2021-01-22,"They're very nice. Although they won't teach you Racket, they will teach you principles of various fields of computer science.",,
7.73175E+17,meowüé∫#2842,2021-01-22,"The Little Schemer teaches recursion and list manipulation from the ground up in the first half, for example.",,‚ù§Ô∏è (1)
2.14881E+17,Moinate#6061,2021-01-22,@Lulu Is there any place to post or pin that comparison of Racket and Haskell that you wrote? Seems very nice and comes up here regularly. Maybe copy and paste it into #resources and pin it there? [no ping on purpose],,
4.66395E+17,oaktownsam#0815,2021-01-22,"As @rocketnia wrote there are a lot of forms of side-effects in Racket, but I find (in my experience) having to write `(set! a 42)` vs. `a = 42` is a psychological barrier to writing a lot of variable mutating code.",,
4.66395E+17,oaktownsam#0815,2021-01-22,screen shot for some more Raspberry Pi hacking I'm working on.,https://cdn.discordapp.com/attachments/618895179343986688/802248427823955968/Screen_Shot_2021-01-22_at_10.28.23_AM.png,"racket (5),ü•∞ (2)"
4.66395E+17,oaktownsam#0815,2021-01-22,those are picts,,
7.94955E+17,Laurent O#6627,2021-01-22,It should be called `please-mutate-this-variable!` to make the barrier more effective ;),,"hehe (1),üòÜ (1)"
4.66395E+17,oaktownsam#0815,2021-01-22,Or just use boxes everywhere like SML üôÇ,,
2.75501E+17,Plane#0324,2021-01-22,maybe add more exclamation points for more emphasis `(mutate-this-variable!!!!!!!!!!!!!!!!!!!!!!!!!! a 42)`,,
2.75501E+17,Plane#0324,2021-01-22,oh gosh mine is so much more rude than Laurent O's without the `please`,,"hehe (2),üòÆ (1)"
7.94955E+17,Laurent O#6627,2021-01-22,Let's compromise: `PLEASE-mutate-this-variable!!!!!!!!!!!!!!!!!!!!!!!!!!`,,üòÆ (1)
7.73175E+17,meowüé∫#2842,2021-01-22,Intercal vibes,,
4.53311E+17,0000000000#7632,2021-01-23,this makes me want to go back to clojure. I didn't get very far last time. maybe I should try again.,,
4.53311E+17,0000000000#7632,2021-01-23,racket seems to be perfect for building a compiler,,
4.53311E+17,0000000000#7632,2021-01-23,or DSL,,
4.53311E+17,0000000000#7632,2021-01-23,but that is not really my goal,,
5.39603E+17,spacey üåå#7238,2021-01-23,"clojure is also really good. best to commit to one, assuming you're a beginner like myself!",,
5.39603E+17,spacey üåå#7238,2021-01-23,i can't even mess around with scheme nowadays. have decided to be all in on JS for job hunting reasons,,"üò¢ (1),‚ù§Ô∏è (1)"
4.6331E+17,alex27#9605,2021-01-24,@0000000000 what ere benefits of using Clojure upon Racket?,,
4.53311E+17,0000000000#7632,2021-01-24,https://www.youtube.com/watch?v=P2yr-3F6PQo,,
4.53311E+17,0000000000#7632,2021-01-24,TL;DR he is both a clojure fan boy,,
4.53311E+17,0000000000#7632,2021-01-24,he makes the argument that we should all use the same programming language so that the industry is not fragmented,,thonking_with_portals (1)
4.53311E+17,0000000000#7632,2021-01-24,then makes the argument that you can't use languages that have problems or limitations,,
4.53311E+17,0000000000#7632,2021-01-24,then says clojure,,
4.53311E+17,0000000000#7632,2021-01-24,I laughed at this because when I used clojure it was to get access to some really obscure libraries that no one has ever heard of,,
4.53311E+17,0000000000#7632,2021-01-24,the tutorials were not as good compared to python,,
4.53311E+17,0000000000#7632,2021-01-24,so my opinion was far off from his,,
4.53311E+17,0000000000#7632,2021-01-24,my understanding is that people use a package for emacs to get the clojure highlighting and tool chain working,,
5.39603E+17,spacey üåå#7238,2021-01-24,"with clojure, you can use any of the packages that work with java in your project as well",,
4.62028E+17,StephenD#5938,2021-01-24,He's not a CS professor.,,
4.62028E+17,StephenD#5938,2021-01-24,https://blog.racket-lang.org/2021/01/racket-status.html,,"üëè (7),racket (8)"
4.53311E+17,0000000000#7632,2021-01-24,sorry my mistake,,
2.66505E+17,notjack#9941,2021-01-25,just made a pretty cool announcement on racket-users! https://groups.google.com/g/racket-users/c/xKHLgqs5Uq8,,"plusone (5),racket (3)"
4.6331E+17,alex27#9605,2021-01-25,@notjack i'm not sure that it's intended but there is a hardcode in main file,,
4.6331E+17,alex27#9605,2021-01-25,the last line of main.rkt,,
2.66505E+17,notjack#9941,2021-01-25,Yup that's intended. See https://docs.racket-lang.org/resyntax/,,
4.6331E+17,alex27#9605,2021-01-25,"got it, thanks",,
4.62028E+17,StephenD#5938,2021-01-25,posted to reddit https://www.reddit.com/r/Racket/comments/l4q9mx/resyntax/,,
2.66505E+17,notjack#9941,2021-01-25,thanks!!,,
7.86607E+17,dvanhorn#3426,2021-01-25,"I've run in to a weird situation where using the ffi to call into some assembly code that make an indirect call to a function results in an infinite loop on Linux, while it seems to work fine on Mac.  I can't tell if there's something wrong with the assembly or the ffi...  I wonder if anyone can spot the problem.  Also, if instead of going through the ffi, I just generate a static executable, everything works.  ü§∑  https://gist.github.com/dvanhorn/670b8ea1a2346ea3675897accd99b85c",,
4.66395E+17,oaktownsam#0815,2021-01-25,Is it possible to run through gdb?  Or maybe see if it can be reproduced using just libffi from some C code?,,
4.83487E+17,jest#6646,2021-01-25,"found some uses of racket in the wild:
https://guide.handmadehero.org/hmcon/2016/05/#0 (4:29) naughtydog uses racket for data definition files and runtime scripts
https://youtu.be/fQnUTmOu3lc?t=1804 (30:00 animator at nuaghty dog uses racket for animations n stuff)",,meow (2)
2.66505E+17,notjack#9941,2021-01-27,@Dav1s please keep off-topic images in #off-topic,,
4.62028E+17,StephenD#5938,2021-01-28,No problem - off topic posts are welcome in #off-topic - we all need a break and a laugh sometimes. (Check out #rules - we strive to keep this discord ok for kids as there are some quite young racketeers and we want to be ok for them and their parents) ‚ù§Ô∏è,,
7.73175E+17,meowüé∫#2842,2021-01-28,I wish FrTime were better documented. üò¨,,plusone (2)
4.66395E+17,oaktownsam#0815,2021-01-29,Nothing too impressive.  I just moved the tiny amount of work that I did for a Godot extension to the 8.0 pre-release.,https://cdn.discordapp.com/attachments/618895179343986688/804765890381611008/unknown.png,
4.66395E+17,oaktownsam#0815,2021-01-29,At this point all it does is register the plugin and loads a Racket module.  To be actually useful is going to require a bit more work.  Also only works on Linux,,plusone (1)
4.66395E+17,oaktownsam#0815,2021-01-30,"Someone pinged me in Slack about this so I got it mostly cleaned up and published it.
Library to interface to a DHT11 sensor on a RPi in Racket
https://github.com/samdphillips/racket-dht11",,
2.72109E+17,Ytrog#4186,2021-01-31,https://mendhekar.medium.com/why-i-still-lisp-and-you-should-too-18a2ae36bd8,,"üëç (1),cool (1)"
5.39603E+17,spacey üåå#7238,2021-01-31,"Wish there were code examples. I've read so much Lisp evangelism that I've heard all these points a bunch of times before, but without examples, I'm not much closer to understanding what they really mean :(",,üòÖ (1)
4.62028E+17,StephenD#5938,2021-01-31,I hear you.,,
4.62028E+17,StephenD#5938,2021-01-31,I'm also bugged by the misconception that Racket (or scheme) is harder to learn than Python. IMHO it is far easier to learn the basics of Racket than Python. I'd suggest basic Racket is easier than BASIC.,,
4.62028E+17,StephenD#5938,2021-01-31,"Case in point: https://docs.racket-lang.org/quick/index.html  has First class functions, Macros & Objects in a beginners tutorial!",,
7.94955E+17,Laurent O#6627,2021-01-31,"He should have said: after having learned a first imperative-style PL such as Pascal or C, learning Python is easier than learning Racket. 
But if that's your first language, that's a different thing",,
7.94955E+17,Laurent O#6627,2021-01-31,"In my previous life, I taught PHP (for various reasons) to non-coders, and the third year I decided to explain expression reduction in details because they had so many misconceptions about programming otherwise. I wish I'd been allowed to teach Racket ;)",,
2.14881E+17,Moinate#6061,2021-01-31,"I think article's argument against typed languages needs to be strengthened a lot before I can take it seriously. Same thing that spacey said, a real good examples would go a long way.",,
2.14881E+17,Moinate#6061,2021-01-31,"I personally have found that changing my own old untyped code breaks it, but with typed code once it compiles with the changes, it's in pretty good shape.",,
2.25363E+17,AcerbicVeil#2790,2021-01-31,I learned basic racket first and I think it made it a whole lot easier to understand python with it,,
4.62028E+17,StephenD#5938,2021-02-02,Racket News Issue 45 is here. RN is 2 today. Take a moment to celebrate... possibly with some coffee and cake. Enjoy! https://racket-news.com/2021/02/racket-news-issue-45.html,,yay_jump (3)
7.73175E+17,meowüé∫#2842,2021-02-02,Yay,,
4.62028E+17,StephenD#5938,2021-02-03,No 3 on the orange site!,https://cdn.discordapp.com/attachments/618895179343986688/806528972199297108/image.png,yay_jump (2)
7.73175E+17,meowüé∫#2842,2021-02-03,"The Orange Website likes to praise Lisp whenever it comes up, then continue to not use it in any capacity.",,oof_blinking (3)
2.74358E+17,jesscxc#4846,2021-02-03,is HN still built in Lisp?,,
8.03177E+17,boezicat#6355,2021-02-03,"Supposedly yes, at least wikipedia page wasn't updated otherwise and that's what HN comments say. https://en.wikipedia.org/wiki/Hacker_News",,lisp (1)
3.29023E+17,nixin72#3554,2021-02-03,"If your only source of programming news was HN, you'd really get the impression Lisp is used a lot more lol",,"meow (1),üò´ (1)"
2.14881E+17,Moinate#6061,2021-02-03,"*rust, you mean",,
4.62028E+17,StephenD#5938,2021-02-03,It got to second position ! https://news.ycombinator.com/item?id=26008869,,
4.62028E+17,StephenD#5938,2021-02-03,,https://cdn.discordapp.com/attachments/618895179343986688/806617573361713192/image0.png,
2.75501E+17,Plane#0324,2021-02-03,yay,,
4.53311E+17,0000000000#7632,2021-02-03,https://overtone.github.io/,,
4.53311E+17,0000000000#7632,2021-02-03,there is an emacs addon that does the code highlighting,,
4.53311E+17,0000000000#7632,2021-02-03,this is one of the dependencies https://leiningen.org/,,
4.53311E+17,0000000000#7632,2021-02-03,I always had problems on old versions of debian or ubuntu getting the linux audio driver to work right,,
4.53311E+17,0000000000#7632,2021-02-03,but it works great on a pi because that is where they have a standard distro that they target,,
4.53311E+17,0000000000#7632,2021-02-03,the developer is on x86 but does not support users on any specific distro,,
2.14881E+17,Moinate#6061,2021-02-05,"BSL prints out multiline strings with \n instead of going to the next line... what issues | objections to changing that would I expect? With the change students could include block descriptions of what they were doing and have it come out that way in the interactions pane. Not the most compelling use, I know, but... I'm just staring at a 3 line output explanation `If the mouse's x-coordinate is larger than\n the x-coord of the circle...` and thinking ""ugh"".",,
2.14881E+17,Moinate#6061,2021-02-05,"you searched for it, right? try the top hit(s). no experience, I'm an emacs + racket-mode person... highly recommended üôÇ",,
5.2015E+17,bevo#3607,2021-02-05,"> Any suggestions for racket extensions for vs code
> 
The Magic Racket extension works ok in VS Code
A few quirks to it still, like output is not colorised, 
and the `Load file in REPL` button has to be hit twice to actually load the file ,
the first time just opens the REPL.
(that's on windows, it works correctly on WSL2-Ubuntu)
Auto-complete works.
It's way easier to set up shortcuts for than the Dr
I set:
F5 - Racket: Load file in REPL
F6 - Racket: Open the REPL for the current file
So I hit F6 to open the REPL, toggle back to the editor, hit F5 to load the file in,
then it works great
One bonus,
It has Alt-Enter already set to send a selected region or line to the REPL for evaluation
You can write expressions between block comments that don't load with the file,
and send them to the REPL ad hoc, without leaving the editor screen
I love that!
Pros:
Much nicer theme to look at, integrated terminal(s), instant auto-save with file watching, column selection, instant reload, recall upon reopening, easy to mod
Cons:
User input throws a contract error
The filename is appended before the prompt, eg `""101-test.rkt"">`, so it 's a bit messier
No 'arrows' (highlights and go to definition instead) 
No docs lookup 
No image or gui features
Other Dr Racket environment features I haven't used yet

I hope it keeps developing. üôÇ
I bounce between Doom, VS Code and Dr Racket atm
Emacs is the only one that lets you clear the REPL screen without reloading the file
That's the first thing I'd change in the other 2, get Ctrl-L clearing the screen

https://marketplace.visualstudio.com/items?itemName=evzen-wybitul.magic-racket

Edit: Ctrl-L does clear the screen on the Linux version of magic  üôÇ
One down",,
2.14881E+17,Moinate#6061,2021-02-06,"It works ""fine"" on linux. Which is to say, the instructions for installation work. It did not meet my expectations for editing mode behavior so I deleted it as soon as I typed out one function definition and ended up with two extra closing `)`.",,
2.14881E+17,Moinate#6061,2021-02-06,You might try thinking about what you don't like about DrRacket. And mentioning it here to see if you get decent pointers.,,
7.94955E+17,Laurent O#6627,2021-02-06,"Parts of the behaviour can be configured of course of, in particular re  auto adding parentheses",,
7.94955E+17,Laurent O#6627,2021-02-06,I was thinking of DrRacket---i don't know for Sauron,,
4.66395E+17,oaktownsam#0815,2021-02-06,"Racket Video meetup in 5 minutes
https://gather.town/app/wH1EDG3McffLjrs0/racket-users",,
1.55481E+17,Skallos#0001,2021-02-06,"Just wondering, how does one become a Racketeer?",,
2.25363E+17,AcerbicVeil#2790,2021-02-06,i think your suppose to get it as soon as you join,,
2.25363E+17,AcerbicVeil#2790,2021-02-06,at least i did,,
2.25363E+17,AcerbicVeil#2790,2021-02-06,:PB_peepo_shrug:,,
4.66395E+17,oaktownsam#0815,2021-02-06,So before a couple of weeks ago you had to have the Racketeer role to see or post in any channels.  The admins decided that is (at present) an unnecessary gate to people participating on the server.,,
4.66395E+17,oaktownsam#0815,2021-02-06,"@Skallos I've granted you the ""Racketeer"" role.  Use it wisely üòõ",,
1.55481E+17,Skallos#0001,2021-02-06,I see. I will use it wisely.,,
1.55481E+17,Skallos#0001,2021-02-06,I thought maybe you had to show something cool you made with Racket,,
7.94955E+17,Laurent O#6627,2021-02-07,"Anything made with Racket is cool, so that's a low bar üòã",,
1.55481E+17,Skallos#0001,2021-02-07,"In that case, here is a Racket program I wrote to display the solution space graphs of twisty puzzles.",,
1.55481E+17,Skallos#0001,2021-02-07,https://imgur.com/x4GShUq,,cool (8)
1.55481E+17,Skallos#0001,2021-02-07,"It's not efficient by any means. It starts to leg with ~50 nodes. But that's beyond what the program was designed to do, which is to analyze local structure of graphs.",,
1.93202E+17,rocketnia#4517,2021-02-07,that's so cool XD,,
2.66505E+17,notjack#9941,2021-02-08,"you mean, besides Racket? (racket, both BC and CS, are compiled to native code)",,
1.55481E+17,Skallos#0001,2021-02-09,"Someone else has asked me to put the code on GitHub, so I'll need to figure out how that works. But there is still a few more things I'd like to do first, such as give the program a title that isn't ""World"", and add a button the slightly randomize the positions of every point. Sometimes the force directed graphing can get stuck in local minima.",,
1.55481E+17,Skallos#0001,2021-02-09,https://imgur.com/0Rjj3SR,,
1.55481E+17,Skallos#0001,2021-02-09,This is the graph of a cube that got stuck in one of these local minima.,,plusone (1)
2.66505E+17,notjack#9941,2021-02-09,Just wanted to pile on by saying it looks _incredibly_ cool,,üëç (3)
2.66505E+17,notjack#9941,2021-02-11,"I kind of want something like `#lang brag`, but where the token types are just predicates",,ü§î (1)
2.66505E+17,notjack#9941,2021-02-11,late night brainstorming,,
2.14881E+17,Moinate#6061,2021-02-11,Do I think problems registering an account on racket packges will just go away if I wait? Is it my fault?,,
2.14881E+17,Moinate#6061,2021-02-11,,https://cdn.discordapp.com/attachments/618895179343986688/809563732643938344/unknown.png,
2.14881E+17,Moinate#6061,2021-02-11,"Attempted to ""get code""",,
2.66505E+17,notjack#9941,2021-02-11,wow that is a terrible error message,,
2.66505E+17,notjack#9941,2021-02-11,"it looks like the server returned an error response somewhere internally, then a handler function tried to convert that response to JSON because it didn't think to check if the response is successful before trying to parse it, so the handler itself threw an error and obscured the original error",,
2.66505E+17,notjack#9941,2021-02-11,"anyway, did this happen when you were trying to create an account on pkgs.racket-lang.org?",,
2.14881E+17,Moinate#6061,2021-02-11,yes,,
2.14881E+17,Moinate#6061,2021-02-11,"it also looks like packages might not be owned by the person who creates them, if they put (only) a different email address in the list of package authors... which is why i'm creating a(nother) account",,
1.55481E+17,Skallos#0001,2021-02-12,https://i.imgur.com/SamlHY4.gif,,
1.55481E+17,Skallos#0001,2021-02-12,"I made a simple ~~""hyperbolic""~~ non-Euclidean maze game.",,
1.55481E+17,Skallos#0001,2021-02-12,With randomly generated mazes.,,cool (2)
2.14881E+17,Moinate#6061,2021-02-12,nice! looks beautiful,,
1.55481E+17,Skallos#0001,2021-02-12,https://i.imgur.com/c1VMbos.gif,,
1.55481E+17,Skallos#0001,2021-02-12,Made some improvements.,,
1.55481E+17,Skallos#0001,2021-02-12,I'll soon set up a Github account to upload my code files there.,,yay_jump (2)
1.55481E+17,Skallos#0001,2021-02-12,"In case anyone asks how I removed the artifacts, the solution is to be smart with how you generate graphics.",,cooluwu (1)
1.55481E+17,Skallos#0001,2021-02-12,"Previously, each tile is a 3x3 grid of squares and rectangles.",,
1.55481E+17,Skallos#0001,2021-02-12,"In the new solution, instead of giving different rectangles different colors, a rectangle is just placed on top for each connection. Essentially, avoid leaving ""gaps"" when using `above` or `beside` for shapes of the same color.",,
2.74358E+17,jesscxc#4846,2021-02-12,Very cool!!,,
1.55481E+17,Skallos#0001,2021-02-13,@Dav1s @notjack @jesscxc @meowüé∫ I set up a GitHub account and uploaded a bunch of files there. Some of the files were made back when I coded in WeScheme and didn't think formatting code was worthwhile.,,
1.55481E+17,Skallos#0001,2021-02-13,The files made in WeScheme I barely knew about lists and the amazing things you can do with them.,,
1.55481E+17,Skallos#0001,2021-02-13,Some projects were made back when my knowledge on lambdas and lists were very minimal.,,
2.74358E+17,jesscxc#4846,2021-02-13,https://github.com/Skallos-s/Racket,,"plusone (2),racket (3)"
2.74358E+17,jesscxc#4846,2021-02-13,"very very cool, Skallos!",,
2.64024E+17,Eutro#0016,2021-02-13,"Would anyone care for a `partial` procedure in `racket/function`? It would differ from `curry` in that it always returns a procedure that can be applied once before it applies the original procedure. One use case I can think of is that `partial` could be used to make a thunk from a procedure with side effects:
```scheme
> (partial display ""Some message"" (current-output-port))
<procedure:partial:display>
```unlike `curry` which would do```scheme
> (curry display ""Some message"" (current-output-port))
Some message
```",,
2.64024E+17,Eutro#0016,2021-02-13,`curry` feels strange to me because it's not guaranteed to return a procedure,,
2.14881E+17,Moinate#6061,2021-02-13,How is this different from the stuff in relation?,,
2.14881E+17,Moinate#6061,2021-02-13,When people mention stuff like this I look it up to learn...,,
2.64024E+17,Eutro#0016,2021-02-13,"I found `partial` in Rackjure, it doesn't support keyword arguments:
```scheme
(define ((partial f . args1) . args2)
  (apply f (append args1 args2)))
```",,
2.64024E+17,Eutro#0016,2021-02-13,What's that?,,
3.5323E+17,Alex Knauth#4895,2021-02-13,I made a version of `partial` that does support keyword arguments,,
7.73175E+17,meowüé∫#2842,2021-02-13,"Wouldn't you use
`(thunk (display ""Some message"" (current-output-port)))` for that?",,
2.14881E+17,Moinate#6061,2021-02-13,I think it was just an example.,,
7.73175E+17,meowüé∫#2842,2021-02-13,My point is that `thunk` covers the use case of unevaluated... thunks,,"üëç (1),hehe (1)"
4.62028E+17,StephenD#5938,2021-02-14,https://blog.racket-lang.org/2021/02/racket-v8-0.html,,"üëè (7),blobaww (2),racket (2)"
2.64024E+17,Eutro#0016,2021-02-14,finally,,
4.62028E+17,StephenD#5938,2021-02-14,Got delayed because windows was putting warnings on it.,,
4.62028E+17,StephenD#5938,2021-02-14,"Just spotted @racketfest announce on Twitter:
‚Äî‚Äî
Calling all @racketlang fans:

Announcing: Racketfest 2021 Amateur Night! This year, Racketfest goes online (to @gather_town) on March 26 & 27.

Details here: racketfest.com.

Register: https://gumroad.com/l/racketfest-2021-amateur-night-ticket

‚Äî‚Äî
The last Racketfest was great so I‚Äôm looking forward to this one (I‚Äôve already got my ticket)!

Thank you @Jesse Alama !",,
4.66395E+17,oaktownsam#0815,2021-02-16,üéâ New Racket-8.0 Docker images are out,,
4.66395E+17,oaktownsam#0815,2021-02-16,Thanks @notjack,,
2.66505E+17,notjack#9941,2021-02-16,that was thanks to bogdanp üôÇ,,
2.88731E+17,phoph#9361,2021-02-16,Is Racket scheme?,,
7.73175E+17,meowüé∫#2842,2021-02-16,"In most ways, yes.",,
7.73175E+17,meowüé∫#2842,2021-02-16,"There are some significant divergences, both in spirit and implementation.",,
2.88731E+17,phoph#9361,2021-02-16,How do I learn teh rackety ways,,
7.73175E+17,meowüé∫#2842,2021-02-16,https://docs.racket-lang.org/getting-started/,,
7.73175E+17,meowüé∫#2842,2021-02-16,There are links to specific documents that you can pick from based on your skill level.,,
2.66505E+17,notjack#9941,2021-02-16,"minor tips for people used to scheme:
1. use `define` instead of `let`
2. use `for` loops, especially `for/list` loops
3. use transparent structs instead of lists with a small fixed number of elements",,
2.75501E+17,Plane#0324,2021-02-16,@phoph there's a web page explaining why the name changed from PLT Scheme to Racket which touches on your question https://racket-lang.org/new-name.html,,
2.75501E+17,Plane#0324,2021-02-16,although that change happened ten years ago,,
2.74358E+17,jesscxc#4846,2021-02-16,yeah Skallos has really cool projects,,
2.74358E+17,jesscxc#4846,2021-02-16,the game is to make it in order,,
1.55481E+17,Skallos#0001,2021-02-17,You are some 21 moves away.,,
1.55481E+17,Skallos#0001,2021-02-17,"||Start by moving the 9 and 10, then 14, 15, and 13. Then 12 and 11.
13, 15, 14, 13, 11, 12.
Finally, 15, 14, 13, 10, 9, 13, 14, 15.||",,
1.55481E+17,Skallos#0001,2021-02-17,That program can load in custom images.,,
1.55481E+17,Skallos#0001,2021-02-17,I'll have to make a file explaining how to do it though.,,
1.55481E+17,Skallos#0001,2021-02-17,"But I kind of want to make an even better version that lets you load in any file from your computer, not those with a specific file name in a specific folder.",,
3.47238E+17,leastfixedpoint#8940,2021-02-18,"Hi all, just to let you know I updated the package server to have a slightly different flow for password resets and account registrations, for spam prevention reasons. Please email me tonyg@leastfixedpoint.com if you have any trouble.",,üëç (3)
4.66395E+17,oaktownsam#0815,2021-02-18,Thanks @leastfixedpoint !,,
2.66505E+17,notjack#9941,2021-02-18,so you can see if a number is negative,,
2.66505E+17,notjack#9941,2021-02-18,"which would come in handy if you were, for example, implementing a function to compute the absolute value of a number
```scheme
(define (abs x)
  (if (negative? x)
      (- x)
      x))
```",,
3.29023E+17,nixin72#3554,2021-02-18,"Yes, you can just check if it's less than 0, but if you're glancing over code quickly, this is easier to understand because it's just english",,
3.29023E+17,nixin72#3554,2021-02-18,"Not that much, sure, but I'd say that's worth it",,
1.62766E+17,Kehvarl#4720,2021-02-18,Anything that keeps you in the flow and saves you from having to think about what the code is trying to say is worthwhile.,,‚¨ÜÔ∏è (3)
3.29023E+17,nixin72#3554,2021-02-18,"Plus, having a function for it means that it's composable",,
3.29023E+17,nixin72#3554,2021-02-18,"Cause it's just a little bit of extra mental overhead, and code should be made for humans to read",,
2.66505E+17,notjack#9941,2021-02-18,"you could totally do that, sure",,
7.02403E+17,Liwei#3406,2021-02-18,"Similar question. Why the word ""negative"" even exist?",,
2.66505E+17,notjack#9941,2021-02-18,I probably wouldn't bother with things like `positive?` and `negative?` in a language if 1) I was able to write comparisons with infix ops and 2) it was easy to make partially-applied functions,,
2.66505E+17,notjack#9941,2021-02-18,like `xs.filter(_ < 0)` would be nice,,
3.29023E+17,nixin72#3554,2021-02-18,"When you're asking someone about the properties of a number, are you more likely to word that as ""is it negative"" or ""is it less than 0""? I'd say that most people would think of that as ""is it negative"", because we give words to properties to help us think about them",,
3.29023E+17,nixin72#3554,2021-02-18,"I just think that code should be made for others to read, and I think that `(negative? x)` is easier to read than `(< x 0)`",,üíØ (1)
7.02403E+17,Liwei#3406,2021-02-18,There is also a function called zero?,,
3.29023E+17,nixin72#3554,2021-02-18,"Iirc, yes there is",,
3.29023E+17,nixin72#3554,2021-02-18,,https://cdn.discordapp.com/attachments/618895179343986688/812174525809688599/unknown.png,
3.29023E+17,nixin72#3554,2021-02-18,"Oh, I guess I should update to Racket 8 shouldn't I? üòÅ",,
7.02403E+17,Liwei#3406,2021-02-18,"IMHO, (zero? n) conveys a clearer meaning than (= 0 n).",,
3.29023E+17,nixin72#3554,2021-02-18,"Oh, sad, AUR doesn't have 8 yet üò¢",,
3.29023E+17,nixin72#3554,2021-02-18,"Well, let me put it for you this way, would you rather your language include these functions, or would you rather a package for simple shit like `even?` https://www.npmjs.com/package/is-odd",,
3.29023E+17,nixin72#3554,2021-02-18,"A package that just checks if a number is even, with 300k weekly downloads",,
3.29023E+17,nixin72#3554,2021-02-18,¬Ø\_(„ÉÑ)_/¬Ø,,
3.29023E+17,nixin72#3554,2021-02-18,It's not about not understanding,,
3.29023E+17,nixin72#3554,2021-02-18,It's about clarity,,
3.29023E+17,nixin72#3554,2021-02-18,"And with prefix notation in particular, it's easy to get tripped up with `>` and `<`",,
1.62766E+17,Kehvarl#4720,2021-02-18,"If everything was about understanding, we'd just write assembly.   Expressive power for your human readers (which may include future you) is a net positive.",,blob_yes (1)
3.29023E+17,nixin72#3554,2021-02-18,"I know I still screw up `<` and `>` sometimes, especially in Lisps, and I've been programming for 5 years",,
2.66505E+17,notjack#9941,2021-02-18,"having names for every little thing can actually be bad for clarity, tbh. Working with rxjava taught me that üò¨",,
2.66505E+17,notjack#9941,2021-02-18,but the lack of infix notation means that there's a lot more use in having names for these numeric things,,
3.29023E+17,nixin72#3554,2021-02-18,"`add1` is a function with no other arguments, which also means it's more easily composable",,
1.62766E+17,Kehvarl#4720,2021-02-18,Nothing says you have to use (add1! a).   But it is a nicely expressive increment.   Why does C have x++ instead of only doing x = x + 1.   And why is += in languages?,,
3.29023E+17,nixin72#3554,2021-02-18,`(map (lambda (x) (+ x 1)) '(1 2 3))` vs `(map add1 '(1 2 3))`,,
3.5323E+17,Alex Knauth#4895,2021-02-18,"Natural numbers with the data definition:
```
A Natural is one of:
 - 0
 - (add1 Natural)
```
With the predicate `zero?` to distinguish the cases, and `sub1` as the ""accessor"" for the `add1` constructor",,
1.62766E+17,Kehvarl#4720,2021-02-18,It's syntactic sugar that can make it easier to reason about the intention of the programmer.  And also make it quicker to read the code itself.,,
3.29023E+17,nixin72#3554,2021-02-18,"Every time you want one of these features as a function, it means you have to wrap it in a lambda, and that starts to get messy and impact readability very quickly as you can see in that example above",,
3.29023E+17,nixin72#3554,2021-02-18,"Or `(filter (lambda (x) (< x 0)) list-of-numbers)` vs `(filter negative? list-of-numbers)`, etc. Anything with `map` or `filter` is immediately improved if you don't need to wrap it in a lambda",,
3.29023E+17,nixin72#3554,2021-02-18,"Just `(set! x (+ x 3))` - you need to draw the line somewhere on how many small convenience functions to include, and Racket just has `add1`",,
2.66505E+17,notjack#9941,2021-02-18,making it easier to make simple lambdas would help with this too,,
3.29023E+17,nixin72#3554,2021-02-18,Clojure's lambda shorthand is bless,,
2.66505E+17,notjack#9941,2021-02-18,"with the `fancy-app` package, that filter example is `(filter (< _ 0) list-of-numbers)`",,
3.29023E+17,nixin72#3554,2021-02-18,"Which is much nicer, but I still think `negative?` is clearer. I need to think too much about order with these operator when it's prefix notation for `negative?` to not be worth it imo since it's such a common thing to need to check. Clojure you'd do `(filter #(< % 0) list-of-numbers)`",,
2.66505E+17,notjack#9941,2021-02-18,"I'll use `negative?` since it's there, I'm just not sure I'd go out of my way to implement `negative?` in a different language",,
3.29023E+17,nixin72#3554,2021-02-18,"I would say `negative?` isn't worth it anymore if numbers were treated like functions in Clojure like data structures are. So you can do
```clj
(let [data {:some 'values :in [""some"" ""data"" :structures]}]
  ((data :in) 2)) ; :structures
```
in Clojure, and if you could extend the number protocols to be able to do 
```clj
#(x < 0)
```
then I'd say you can drop the function",,
3.29023E+17,nixin72#3554,2021-02-18,"But otherwise, `negative?` is nice to have",,
3.29023E+17,nixin72#3554,2021-02-18,Agreed. It's just a nice to have that I think is worth including in languages that don't use infix notation.,,
4.62028E+17,StephenD#5938,2021-02-19,"Reminder that the Great Metaprogram-off with our very own @Unknown will be this Friday, at the different time of 11am PT!! https://twitter.com/jeanqasaur/status/1362262148458573824",,
2.75501E+17,Plane#0324,2021-02-19,"just updated to 8.0, and i finally learned about `raco distribute` so i won't have to rebuild my little binaries when i update next time lol",,
2.64024E+17,Eutro#0016,2021-02-19,"Racket has infix notation if you wrap the function with `.`s as in
```scheme
(define (negative? x) (x . < . 0))
```which I would probably only use for `>`/`<`s",,
2.64024E+17,Eutro#0016,2021-02-19,"Oh, and `->` maybe",,
7.02403E+17,Liwei#3406,2021-02-19,There is also a ++ operator in C. I would not call it dumb stuff. üòÜ,,
7.02403E+17,Liwei#3406,2021-02-19,"`(filter positive? list-of-numbers)`
Is indeed more readable and clear.",,
2.736E+17,Alwinfy#7306,2021-02-19,this whole shebang is kind of why i want a `partial` operator,,
2.736E+17,Alwinfy#7306,2021-02-19,you could say `(map (partial + 3) '(1 2 3))` and get out `'(4 5 6)`,,
2.736E+17,Alwinfy#7306,2021-02-19,(referring to this earlier discussion),,
7.02403E+17,Liwei#3406,2021-02-19,How about (curry + 3),,
2.64024E+17,Eutro#0016,2021-02-19,While curry _works_ it's a bit much,,
2.736E+17,Alwinfy#7306,2021-02-19,"curry's semantics are kind of unclear, yeah",,
2.64024E+17,Eutro#0016,2021-02-19,"It's great that it doesn't apply the procedure until you hit a valid arity, but sometimes you'd rather it would apply after exactly one application, possibly throwing arity errors.",,
7.73175E+17,meowüé∫#2842,2021-02-19,It sounds easy enough to implement.,,
7.73175E+17,meowüé∫#2842,2021-02-19,"Something like
```Scheme
(define-syntax-rule (partial f args ...)
  (Œª (x) (f args ... x)))
```",,
7.73175E+17,meowüé∫#2842,2021-02-19,"If you're feeling fancy,
```Scheme
(define-syntax (partial stx)
  (syntax-parse stx
    #:datum-literals (%)
    ((partial f args ... % args* ...)
     (syntax (Œª (x) (f args ... x args* ...))))
    ((partial f args ...)
     (syntax (Œª (x) (f args ... x))))))
```",,
7.73175E+17,meowüé∫#2842,2021-02-19,You get a Clojure-style `%` slot this way.,,
7.73175E+17,meowüé∫#2842,2021-02-19,"```
(map (partial - % 3) '(10 20 30 40)) => '(7 17 27 37)```",,
2.66505E+17,notjack#9941,2021-02-19,the `cut` macro in one of the srfi libraries does this,,
2.66505E+17,notjack#9941,2021-02-19,though I prefer the `fancy-app` version where you don't have to insert something at the front of the application form,,
4.66395E+17,oaktownsam#0815,2021-02-20,https://mikeinnes.github.io/2020/06/06/modern-languages.html,https://cdn.discordapp.com/attachments/618895179343986688/812611305085075516/Screenshot_20210220-010407.png,
2.66505E+17,notjack#9941,2021-02-20,_yeah_,,
2.66505E+17,notjack#9941,2021-02-20,excruciatingly relevant to `resyntax` üò≠,,
2.66505E+17,notjack#9941,2021-02-20,"> Nowadays, all of this work ‚Äì and a lot more besides ‚Äì is taken care of by LLVM. With some caveats, you can casually spit out LLVM IR and get great performance on every major hardware platform, as well as a comprehensive toolchain.
...or you can write a few racket macros üòÅ",,üëå (1)
4.66395E+17,oaktownsam#0815,2021-02-20,That whole section I was thinking of resyntax and people complaining about DrRacket and LSP support,,üíØ (1)
4.66395E+17,oaktownsam#0815,2021-02-20,(the bit about parsing that is),,
2.66505E+17,notjack#9941,2021-02-20,"> such as the lack of value types on the JVM
java is getting inline classes!! this is gonna be a thing!!",,
2.66505E+17,notjack#9941,2021-02-20,@oaktownsam wow imagine if resyntax worked with that racket langserver jay's working on,,
1.93202E+17,rocketnia#4517,2021-02-20,"> Basic ideas like block structure, lexical scope and use of indentation are universal and aren‚Äôt going anywhere.

Is that so? :-p",,
2.64024E+17,Eutro#0016,2021-02-20,"> Basic ideas like block structure, lexical scope and use of indentation are universal and aren‚Äôt going anywhere.
Not with that attitude.",,hehe (1)
2.736E+17,Alwinfy#7306,2021-02-20,one thing i'm staying mad about is that #<void> isn't falsey,,
2.64024E+17,Eutro#0016,2021-02-20,is it `#f`? Didn't think so,,
2.64024E+17,Eutro#0016,2021-02-20,also just make a lang where it is falsey ha ha,,
2.736E+17,Alwinfy#7306,2021-02-20,"i can't write (when condition body), i have to write (and condition body)",,
2.736E+17,Alwinfy#7306,2021-02-20,staying mad,,
3.29023E+17,nixin72#3554,2021-02-20,"> Any other languages use prefix notation like racket?
Any language in the Lisp family uses prefix notation like Racket. Clojure, Emacs Lisp, Common Lisp, Scheme, LFE, etc.
>  is there a script to quickly convert it?
That would break into the realm of compilers, in which case yes, there are tools to convert it. ClojureScript for example compiles to JavaScript, Hy compiles to Python, and I'm sure there's others. 

There's also reader macros that allow use of infix notation in Racket and Common Lisp. There's this #lang for example that supports infix notation: https://docs.racket-lang.org/sweet/index.html?q=",,
3.29023E+17,nixin72#3554,2021-02-20,"There's also some other languages that support prefix notation, like Haskell",,
3.29023E+17,nixin72#3554,2021-02-20,"Umm, I'm sure there are, but I don't know where you'd find one. If you want to write one yourself though, the algorithm for going from infix -> prefix for math is called the shunting yard algorithm",,cool (1)
2.736E+17,Alwinfy#7306,2021-02-20,pretty easy to write a shunting-yard parser for the former and a LALR parser for the latter,,
3.29023E+17,nixin72#3554,2021-02-20,It's not too complicated,,
2.736E+17,Alwinfy#7306,2021-02-20,serializing out of the AST is relatively easy,,
3.29023E+17,nixin72#3554,2021-02-20,Going from prefix to infix is super simple though,,
3.29023E+17,nixin72#3554,2021-02-20,Just insert the symbol between each of the arguments,,
3.29023E+17,nixin72#3554,2021-02-20,"Yea, look up the shunting yard algorithm then. You should be able to implement one from a description of how that works",,
3.29023E+17,nixin72#3554,2021-02-20,"Yea, I'd recommend it. Parsing is an interesting topic.",,
2.74358E+17,jesscxc#4846,2021-02-20,"What do you mean by ""adds parentheses""?",,
2.66505E+17,notjack#9941,2021-02-21,I made a shunting yard transducer once,,
2.64024E+17,Eutro#0016,2021-02-21,"For Advent of Code 2020 day 18, the puzzle was to evaluate an infix expression. That's really fun with lisp  because you can ||split into subexpressions and rearrange recursively||.",,
4.62028E+17,StephenD#5938,2021-02-21,Infix ‚û°Ô∏è prefix `arith.rkt` in https://docs.racket-lang.org/guide/hash-reader.html#%28part._readtable%29,,
4.62028E+17,StephenD#5938,2021-02-21,Is there an algo to go from prefix ‚û°Ô∏è infix ?,,
5.19322E+17,b1_#8868,2021-02-22,"@spacey üåå  I'm reading HtDP to learn to program, not to learn racket or lisp. I have no particular interest in either programming language. Learning programming languages isn't really learning to program, and the book explains why very early on. It's worth a read.",,
5.39603E+17,spacey üåå#7238,2021-02-22,"> Learning programming languages isn't really learning to program
I'm aware of that. I'm using Racket as a vehicle to learn functional programming; all the stuff I currently know is OOP",,
5.19322E+17,b1_#8868,2021-02-22,My bad then,,
5.39603E+17,spacey üåå#7238,2021-02-22,No worries!,,
5.39603E+17,spacey üåå#7238,2021-02-22,Are you reading the first edition of HTDP?,,
5.19322E+17,b1_#8868,2021-02-22,"I'm reading 2nd ed, 1 Aug 2014",,üëå (1)
5.06301E+17,xoxo#7837,2021-02-22,hi! im a first time learner for racket,,cooluwu (1)
5.39603E+17,spacey üåå#7238,2021-02-22,Hello there! :D,,
2.25363E+17,AcerbicVeil#2790,2021-02-22,:blobwavereverse:,,
7.02403E+17,Liwei#3406,2021-02-22,Forth also has `0=` `0>` `0<` operators.,,
4.66395E+17,oaktownsam#0815,2021-02-22,"Some CPUs have a zero ""register"" so compare vs zero can be done in less instructions (including movement of values to the proper registers.)",,
2.14881E+17,Moinate#6061,2021-02-23,I'm kind of confused by the copyright 2014 in HtDP/2e ... The paperback says 2018 and the web site was updated in 2020. Just curious.,,
4.62028E+17,StephenD#5938,2021-02-24,"I‚Äôm guessing the authors first released in 2014, did a paper edition in 2018, and kept updating the web version üòÄ",,
1.56786E+17,williewillus#8490,2021-02-24,"does anyone know if there's a library to automatically generate json serialization/deserialization boilerplate for structs, potentially recursively?",,
1.56786E+17,williewillus#8490,2021-02-24,or not even json but just to plain data,,
1.56786E+17,williewillus#8490,2021-02-24,I'm working on racket-cord and writing all the hash->struct and struct->hash functions is going to drive me crazy,,
1.56786E+17,williewillus#8490,2021-02-24,"to the point where I'm considering doing away with structs entirely and just handling the plain data, clojure style",,
2.66505E+17,notjack#9941,2021-02-24,@williewillus make a macro using the `struct-id` syntax class from the `syntax-classes` package,,
2.66505E+17,notjack#9941,2021-02-24,"one sec, writing example",,
2.66505E+17,notjack#9941,2021-02-24,"```scheme
#lang racket

(require (for-syntax syntax/parse/class/struct-id)
         syntax/parse/define)

(define-syntax-parse-rule
  (struct->hash id:struct-id instance-expr)
  #:declare instance-expr (expr/c #'id.predicate-id)
  (let ([instance instance-expr.c])
    (hash (~@ 'id.accessor-id (id.accessor-id instance)) ...)))

(struct person (name age) #:transparent)

;; outputs #hash((person-age . 42) (person-name . ""Alice""))
(struct->hash person (person ""Alice"" 42))
```",,üòé (3)
2.66505E+17,notjack#9941,2021-02-24,"it's kind of a pain if you want to have just the field names in the output though, instead of the accessor function names",,
2.14881E+17,Moinate#6061,2021-02-24,Presumably to be solved in another pass of something.,,
2.66505E+17,notjack#9941,2021-02-24,"you could instead do that part with my `rebellion` package, specifically the record types in the `rebellion/type/record` library
```scheme
#lang racket
(require (for-syntax rebellion/type/record/binding)
         rebellion/type/record
         syntax/parse/define)

(define-syntax-parse-rule
  (record->hash id:record-id instance-expr)
  #:declare instance-expr (expr/c #'id.predicate)
  (let ([instance instance-expr.c])
    (hash
     (~@ id.field-name
         (id.field-accessor instance))
     ...)))

(define-record-type person (name age))

;; outputs #hash((age . 42) (name . ""Alice""))
(record->hash person
              (person #:name ""Alice"" #:age 42))
```",,üëç (1)
4.66395E+17,oaktownsam#0815,2021-02-25,Some json recently I've used lenses or just wrote out accessors against the deserialized,,
4.66395E+17,oaktownsam#0815,2021-02-25,Not fancy but it works,,
2.736E+17,Alwinfy#7306,2021-02-25,"@r16, the bot made by @williewillus, @Eutro, and I, has been added! Check it out with `!rkt help`",,
2.736E+17,Alwinfy#7306,2021-02-25,"It saves snips of code called ""tricks"" for execution",,plusone (1)
4.66395E+17,oaktownsam#0815,2021-02-25,!rkt help,,
8.02004E+17,r16#4581,2021-02-25,"R16 -- A Racket Trick Bot for Discord
Running on Racket 7.9
Brought to you by williewillus, Alwinfy, and Eutro

Commands:
-  !rkt eval <code> => evaluate <code> as a Racket form
-  !rkt register <name> <code> => register <code> as a trick with name <name>
-  !rkt call <name> ... => invoke the named trick, evaluating its source code verbatim in a fresh sandbox
-  !!<trickname> => shorthand for !rkt call <trickname>
-  !rkt show <name> => show metadata and source for the named trick
-  !rkt update <name> <code> => change the source of the named trick; requires ownership or administrator
-  !rkt delete <name> => delete the named trick; requires ownership or administrator and cannot be undone!
-  !rkt popular => show a leaderboard of popular tricks
-  !rkt help => show this message

The following data is available in the trick environment:
-  all symbols from the `threading-lib` package (for utility purposes)
-  make-attachment => Procedure that makes an attachment from a byte-string, file name and MIME type
-  call-trick => Procedure that calls another trick given a name and arguments
-  message-contents => Full text of the invoking command, as a string
-  string-args => Message contents after the bot command, as a string
-  read-args => Thunk that returns message contents after the bot command, as split by the Racket reader, or #f if there was a split failure
-  delete-caller => Thunk that removes the call or eval command that ran this code",,"cool (1),yay_jump (1)"
4.66395E+17,oaktownsam#0815,2021-02-25,Does it handle `eval (let loop () (loop))` well?,,
2.736E+17,Alwinfy#7306,2021-02-25,!rkt eval (let loop () (loop)),,
2.736E+17,Alwinfy#7306,2021-02-25,"Timeouts, I believe",,‚è≤Ô∏è (1)
8.02004E+17,r16#4581,2021-02-25,":warning: stderr:
with-limit: out of time
  context...:
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:412:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:510:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:882:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:878:5: loop",,plusone (3)
4.66395E+17,oaktownsam#0815,2021-02-25,!rkt eval (let loop () (with-handlers ([exn:fail? values]) (loop))),,
4.66395E+17,oaktownsam#0815,2021-02-25,that should oom,,
4.66395E+17,oaktownsam#0815,2021-02-25,or timeout,,
2.64024E+17,Eutro#0016,2021-02-25,the timeout is uh quite long,,
2.736E+17,Alwinfy#7306,2021-02-25,yea lmao,,
4.66395E+17,oaktownsam#0815,2021-02-25,haha,,
2.736E+17,Alwinfy#7306,2021-02-25,"i told Willie ""tone it down"" but he didn't listen :wacko:",,
2.66505E+17,notjack#9941,2021-02-25,is there a good snippet of code that runs fast but uses huge amounts of memory,,
2.736E+17,Alwinfy#7306,2021-02-25,!rkt eval (make-string #\z 14137893413434),,
8.02004E+17,r16#4581,2021-02-25,":warning: stderr:
make-string: contract violation
  expected: exact-nonnegative-integer?
  given: #\z
  argument position: 1st
  other arguments...:
   14137893413434
  context...:
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:412:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:510:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:882:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:878:5: loop",,
2.736E+17,Alwinfy#7306,2021-02-25,"whoops, flipped the order",,
2.736E+17,Alwinfy#7306,2021-02-25,!rkt eval (make-string 14137893413434 #\z),,
8.02004E+17,r16#4581,2021-02-25,":warning: stderr:
out of memory 
  context...:
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:412:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:510:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:882:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:878:5: loop",,
2.736E+17,Alwinfy#7306,2021-02-25,ta-da,,
4.66395E+17,oaktownsam#0815,2021-02-25,"!rkt eval ""hello world""",,
8.02004E+17,r16#4581,2021-02-25,hello world,,
4.66395E+17,oaktownsam#0815,2021-02-25,"!rkt eval (displayln ""hello world"")",,
8.02004E+17,r16#4581,2021-02-25,hello world,,
4.66395E+17,oaktownsam#0815,2021-02-25,!rkt eval (for ([i 10]) (displayln i) (sleep 1)),,
8.02004E+17,r16#4581,2021-02-25,"0
1
2
3
4
5
6
7
8
9",,
5.39603E+17,spacey üåå#7238,2021-02-25,!rkt eval (max 100 300 200),,
8.02004E+17,r16#4581,2021-02-25,300,,
5.39603E+17,spacey üåå#7238,2021-02-25,Yay ü•∞,,"hehe (1),yay_jump (1)"
2.66505E+17,notjack#9941,2021-02-25,ü§î wonder if there's a sensible way for it to send multiple messages while evaluating something,,
2.736E+17,Alwinfy#7306,2021-02-25,We made sure the return-value was one message per message due to spam capability,,üíØ (1)
4.66395E+17,oaktownsam#0815,2021-02-25,That's what I figured,,
4.66395E+17,oaktownsam#0815,2021-02-25,"It could be interesting for a long running eval to say ""hey I'm still running your script over here...""",,
2.64024E+17,Eutro#0016,2021-02-25,"often bots ""type"" during long evaluations",,
4.66395E+17,oaktownsam#0815,2021-02-25,That seems sensible,,
2.66505E+17,notjack#9941,2021-02-25,streaming output seems useful in general for bots though I agree an evaluater bot seems risky for that,,
2.14881E+17,Moinate#6061,2021-02-25,!rkt eval (for/list ([i (in-range 5 10)]) (* i i)),,
8.02004E+17,r16#4581,2021-02-25,":warning: stderr:
i^2: undefined;
 cannot reference an identifier before its definition
  in module: 'program
  context...:
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:412:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:510:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:882:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:878:5: loop",,
2.14881E+17,Moinate#6061,2021-02-25,"oops, will move to #bots",,
1.56786E+17,williewillus#8490,2021-02-25,"basically, the bot uses racket/sandbox on default settings
so if you find an exploit it's not our fault ;p",,
1.56786E+17,williewillus#8490,2021-02-25,to what,,
2.736E+17,Alwinfy#7306,2021-02-25,tone down the evaluator limits?,,
2.736E+17,Alwinfy#7306,2021-02-25,"i'm not complaining about 20mb for certain (haha !!doots go brr), but 30s is kind of excessive",,
2.45109E+17,Basix#2873,2021-02-26,is there a list of the difference between racket and scheme?,,
7.73175E+17,meowüé∫#2842,2021-02-26,"No, but Scheme implementations are divergent enough that it wouldn't make much sense to make one. The most fundamental one to keep in mind is that lists are immutable in Racket.",,
7.73175E+17,meowüé∫#2842,2021-02-26,Mutable lists are provided as a completely separate data structure but their use is strongly discouraged.,,
7.73175E+17,meowüé∫#2842,2021-02-26,"Otherwise, Racket (the language) can be considered an overgrown, standards-noncompliant Scheme implementation with a humongous standard library. But Racket (the platform) contains a multitude of languages, including non-Lisps. Amongst these, there are `#lang r5rs` and `#lang r6rs` as minimal, standards-compliant Scheme implementations.",,"üëç (1),cool (1)"
4.66395E+17,oaktownsam#0815,2021-02-26,"There's also a `#lang r7rs` but it is an add-on package, and pretty strict to the written standard.",,
4.62028E+17,StephenD#5938,2021-02-26,no student or teacher is ever going to find that. they are not even going to look.,,
7.73175E+17,meowüé∫#2842,2021-02-26,"Haha, true",,
4.62028E+17,StephenD#5938,2021-02-26,lang scheme and lang sicp should be part of select a language config dialog.,,
4.62028E+17,StephenD#5938,2021-02-26,I *dare* you to submit a PR to that effect.,,
2.14881E+17,Moinate#6061,2021-02-26,lmao,,
7.73175E+17,meowüé∫#2842,2021-02-26,I'm sure they'd've put `#lang sicp` there if it weren't for the rivalry between SICP and HtDP.,,"oh_no (2),üòÇ (1)"
2.75501E+17,Plane#0324,2021-02-26,i found sicp to be genuinely enjoyable,,
2.75501E+17,Plane#0324,2021-02-26,"i should try to work through HtDP, i'm not really familiar with it",,
4.62028E+17,StephenD#5938,2021-02-27,They are completely different in my opinion.,,plusone (1)
4.62028E+17,StephenD#5938,2021-02-27,There is a lot to learn from both.,,oh_yes (1)
4.1228E+17,xgqt#8370,2021-02-28,https://fosstodon.org/@xgqt/105811808565803515,,ü§© (3)
4.66395E+17,oaktownsam#0815,2021-02-28,wha?!?!,,
4.66395E+17,oaktownsam#0815,2021-02-28,oh wow I had considered buildinga terminal emulator.  I didn't know Will had already.  Now I feel more like I should be playing with Rash,,
4.66395E+17,oaktownsam#0815,2021-02-28,Now we need a screenshot with rash running on rackterm running on rwind.,,
4.1228E+17,xgqt#8370,2021-02-28,a x11 wm? wow I gotta do this one,,
4.66395E+17,oaktownsam#0815,2021-02-28,By @Laurent O,,
4.66395E+17,oaktownsam#0815,2021-03-01,Progress... (https://github.com/samdphillips/mushell),https://cdn.discordapp.com/attachments/618895179343986688/815863698132303902/Screen_Shot_2021-03-01_at_12.29.06_AM.png,"üôå (2),cool (1),cooluwu (1)"
5.39603E+17,spacey üåå#7238,2021-03-01,Awesome! :D,,
3.20686E+17,Turgut#2799,2021-03-01,"how could one check if a given string, such as ""#lang racket hello""",,
3.20686E+17,Turgut#2799,2021-03-01,is valid racket code?,,
3.20686E+17,Turgut#2799,2021-03-01,i looked at the Racket documentation to see if i could transform the given string to a s-exp,,
3.20686E+17,Turgut#2799,2021-03-01,thinking there might exist a built-in procedure string->s-exp,,
3.20686E+17,Turgut#2799,2021-03-01,"however, such a procedure does not seem to exist",,
1.56786E+17,williewillus#8490,2021-03-01,invoke the reader on the string and see if it returns a valid syntax object?,,
3.20686E+17,Turgut#2799,2021-03-01,the read procedure?,,
3.20686E+17,Turgut#2799,2021-03-01,"I've considered it, but it expects an input port",,
3.20686E+17,Turgut#2799,2021-03-01,I guess I could transform the string into one?,,
1.56786E+17,williewillus#8490,2021-03-01,(open-input-string str) gives you an input port that reads from the given string,,
1.56786E+17,williewillus#8490,2021-03-01,iirc,,
3.20686E+17,Turgut#2799,2021-03-01,there seems to be an issue with this approach,,
3.20686E+17,Turgut#2799,2021-03-01,"(define in (open-input-string ""(begin 1)))""))
(read in)",,
3.20686E+17,Turgut#2799,2021-03-01,"read returns a s-exp, even though the given string is not valid",,
3.20686E+17,Turgut#2799,2021-03-01,it cuts the right-most parantheses,,
3.20686E+17,Turgut#2799,2021-03-01,i would need read to consider the entire string,,
3.20686E+17,Turgut#2799,2021-03-01,"(define (parsable? text)
  (let ((in (open-input-string (string-replace text ""#lang racket"" """"))))
    (read in)
    (not (non-empty-string? (port->string in)))))",,
3.20686E+17,Turgut#2799,2021-03-01,this seems to work,,
3.20686E+17,Turgut#2799,2021-03-01,thanks for the pointers willie,,
2.64024E+17,Eutro#0016,2021-03-01,you could `(read)` until EOF,,
2.64024E+17,Eutro#0016,2021-03-01,make sure to enable #lang and #reader as well,,
2.66505E+17,notjack#9941,2021-03-01,you can also use `read-syntax` and then `expand` to check for syntax errors,,
2.14881E+17,Moinate#6061,2021-03-02,"@StephenD Is there a reason for omitting WeScheme from the list of online Racket resources?
Because it's not really Racket?
I'm willing to write up a PR with the things I say here if you want them.
- pasterack.org can create images it cannot do animations, and that's the only one.
- rollApp is really just a virtualization solution for anything, not bad to have on the list but it would be good to be clear the limitation is (apparently) that you cannot _save_ your work!
I'm sure it's not for everyone but a single screenshot of each would make it at lot easier for people to pick the appropriate one. (I imagine the target audience of that wiki page is all of these: people who cannot install software on a computer? people who want easy access to their work from home and school? ""Unsophisticated"" chromebook-only users? people whose computers are > 6 years old and too slow to run racket effectively.)",,
4.62028E+17,StephenD#5938,2021-03-02,run¬†DrRacket¬†every day so you don‚Äôt miss the other easter eggs,,ü§î (1)
4.62028E+17,StephenD#5938,2021-03-02,I forgot WeScheme!,,
4.62028E+17,StephenD#5938,2021-03-02,rollApp - you can save but you have to pay to do so,,
4.62028E+17,StephenD#5938,2021-03-02,"> I'm sure it's not for everyone but a single screenshot of each would make it at lot easier for people to pick the appropriate one. (I imagine the target audience of that wiki page is all of these: people who cannot install software on a computer? people who want easy access to their work from home and school? ""Unsophisticated"" chromebook-only users? people whose computers are > 6 years old and too slow to run racket effectively.)

I'm not sure I'd encourage any of them but you are right - some people are not as lucky as I and may be stuck with a locked down lab or work computer, or even just a phone, and I don't want to exclude them. 
Instead of a PR would you be willing to post in #resources ?
it would be much appreciated - from there I can add it to the wiki. Probably a good thing to post on reddit and facebook too.
TYVM",,
2.14881E+17,Moinate#6061,2021-03-02,That was interesting. I didn't really know about NextJournal or `iracket`. I think you could do the same trick with DeepNote (similar to NextJournal).,,
7.73175E+17,meowüé∫#2842,2021-03-03,"@Moinate Great work in #resources, thank you. üëè",,üéâ (2)
2.66505E+17,notjack#9941,2021-03-03,"gotta do annoying things at work, and I just wanna write racket :'(",,üòî (5)
6.46253E+17,mwarren#6807,2021-03-04,"@notjack  We all have to do annoying work, and we all would prefer to write racket, such is life, I emphasise.",,
7.94955E+17,Laurent O#6627,2021-03-04,Just write Racket at work üòã,,hehe (1)
3.29023E+17,nixin72#3554,2021-03-04,"I managed to convince my team lead to led me start building a new service in Clojure recently, so I've been working in that the past 2 weeks. I know it's not Racket, but I think it's as close as I'll get hahah",,"cool (2),üôå (1)"
1.56786E+17,williewillus#8490,2021-03-04,"so I emailed the racketfest organizers to sign up to present r16, how long should I expect to wait to receive confirmation, or is there no confirmation?
idk where else to ask so here will do üòõ",,
2.14881E+17,Moinate#6061,2021-03-04,I just started using 8.0 cs and the performance is *very* noticeably better than 7.9. Way to go!,,yay_jump (1)
5.39603E+17,spacey üåå#7238,2021-03-04,ayyy,,
5.39603E+17,spacey üåå#7238,2021-03-04,what are you writing/using that you can notice the performance? i just write little toy programs,,
5.39603E+17,spacey üåå#7238,2021-03-04,with Rackeet at least,,
4.62028E+17,StephenD#5938,2021-03-04,the organiser is normally a next day or two type response. Pretty good considering family & work pressures.,,
4.62028E+17,StephenD#5938,2021-03-04,@Moinate thank you for your detailed contribution in #resources on racket on the web.,,
2.14881E+17,Moinate#6061,2021-03-04,"You're welcome, it was fun.",,
2.14881E+17,Moinate#6061,2021-03-04,"@spacey üåå I notice as soon as the arrow-drawing routine runs, the UI is _snappy_. Running stuff like toy code with a universe server running also starts up really fast.",,
1.56786E+17,williewillus#8490,2021-03-04,"cool, I'll wait another couple days then before I worry my message went to spam",,
7.13289E+17,susanoo#7341,2021-03-05,i find it really cool that drracket is written in racket,,same (1)
1.30231E+17,sarna#3904,2021-03-05,you can write plugins for it in racket too,,cool (1)
2.736E+17,Alwinfy#7306,2021-03-05,_points at emacs_ you're not gonna believe this,,üòé (4)
1.30231E+17,sarna#3904,2021-03-05,emacs is in racket too?!,,"üò∏ (5),yay_jump (2),hehe (2)"
1.56786E+17,williewillus#8490,2021-03-05,no it's in emacs lisp,,
1.30231E+17,sarna#3904,2021-03-05,:purdy:,,
1.56786E+17,williewillus#8490,2021-03-05,but almost the entire editor is written in it and you can hack on pretty much all parts of it,,
1.56786E+17,williewillus#8490,2021-03-05,it's the ultimately flexible lisp environment,,
2.736E+17,Alwinfy#7306,2021-03-05,hello to the ~~rust~~emacs evangelism strike force :wacko:,,üò≥ (2)
1.30231E+17,sarna#3904,2021-03-05,"ya I use it, was joke",,
1.56786E+17,williewillus#8490,2021-03-05,emacs lisp is kind of a crusty old dialect tho lol,,
1.30231E+17,sarna#3904,2021-03-05,you either use a crusty old dialect that works or a shiny new one that doesn't,,
2.64024E+17,Eutro#0016,2021-03-05,Tail call optimization? Never heard of it,,üòÜ (4)
2.14881E+17,Moinate#6061,2021-03-05,I do wish writing it was as easy to make a command or remaps keys in Racket as it is in Emacs.,,plusone (2)
2.75501E+17,Plane#0324,2021-03-05,Ideally remapping keys in DrRacket would be beginner friendly,,plusone (2)
4.62028E+17,StephenD#5938,2021-03-06,"@Moinate @Plane @susanoo 
Could the `Add User-defined Keybindings...` documentation be improved ? 
https://docs.racket-lang.org/drracket/Keyboard_Shortcuts.html?q=Keybindings#%28part._defining-shortcuts%29",,
4.62028E+17,StephenD#5938,2021-03-06,"The DrRacket `Script` menu  is another way to add keybindings

https://docs.racket-lang.org/quickscript/index.html?q=Quickscript#%28mod-path._quickscript%29",,
2.14881E+17,Moinate#6061,2021-03-06,"I would say that in its current form its usability is about 3 out of 10. The examples show the necessity of defining for yourself basic functionality like a function to rebind a key to a command. Discovering the existing functions means reading the documentation I guess.

The emacs experience: 
- to discover an existing keybinding, you run C-h c.
- to rebind a key you run (global-set-key (key ""C-t"") 'switch-to-buffer-other-window) ;; sorry just made this up, I have no idea if emacs even has tabs. 

The racket experience (this is practically a blog post on its own, kind of sorry but I'm trying to make a point as well as relate my own experience trying it right now):
- to discover an existing keybinding Edit->Keybindings->Show active keybindings (this is not so bad)... then type `c:t` to search for control t in the list. Ok, it shows C-t is transpose-chars. Wait, I wanted command-t. Ok What's that? Idk, so search for :t and discover that command-t is `d:t` and it is bound to `New Tab`.
- copy 18 lines of boilerplate code into a file and adjust the file to ""determine language from source
- look for the keybindings window to double check - wait, wtf, it's not in the Windows menu, minimize the window I'm working on and there it is, hiding behind. Ok found it, anyway.",,
2.14881E+17,Moinate#6061,2021-03-06,"- realize that the example says it is defining control-T, but in the `frame-key` statement there is no indication of how the modifier key is being set, I was expecting the key string to be ""c:t"" but it's just ""t"". Oof. Well good thing I can read Racket code and understand that the code is automatically figuring the default prefix and applying it, so change the boilerplate so it just listens to what I want instead of automatically deciding on a prefix (this is good, it removes half of the boilerplate code)
- Ok great, now I need to enter New Tab as the function name. I've never done this before. I know how to enter a function name with spaces in a Real Lisp, by using `|New Tab|`, maybe Racket has a similar facility... but at this point I think it's time to give up. Maybe I'll try `next-tab` just so I can complete the process of defining a new keybinding. IT WORKS!!!!",,
2.14881E+17,Moinate#6061,2021-03-06,"The experience was actually much better this time. The last time I tried it, I thought the keybindings had to be in a file to be loaded, which was even worse.",,
2.14881E+17,Moinate#6061,2021-03-06,"One simple keybinding I wish I knew how to define:
- Join to next/previous line: the Vi command `J` or the emacs command `delete-indentation` (bound to Command-shift-6 in my setup).
If anybody knows that one, please let me know!",,
2.14881E+17,Moinate#6061,2021-03-06,"Possible improvements (some that even I could make): 
* Simplified `#lang` that includes basic functions like `frame-key`, `rebind`, and `menu-bind`.
* Display keybindings output for menu bindings distinguished in some way (quotes?) from function bindings",,
4.62028E+17,StephenD#5938,2021-03-06,"Racket meetup now
https://gather.town/app/wH1EDG3McffLjrs0/racket-users

Agenda. (more of a set of suggestions and talking points than a strict agenda)

What have you been working on?
 * Papers/package for discussion: Take your pick‚Ä¶we are going macro crazy for this meetup!
 * Stuck macro: Predictable Macros for Hindley-Milner paper and video by Langston Barrett, David Thrane Christiansen & Samuel G√©lineau.
 * Automata via Macros (Functional Pearl) by Shriram Krishnamurti
resyntax: An experimental refactoring tool for Racket built on top of syntax-parse by Jack Firth",,blobaww (1)
2.14881E+17,Moinate#6061,2021-03-07,"> Join to next/previous line...
This keybinding is called ""remove-space"". Meta-space (or alt-space on a mac)",,üëè (1)
2.14881E+17,Moinate#6061,2021-03-07,"I don't know where the line linked below appears in the docs, but it seems inaccurate. (commented out).
https://github.com/racket/gui/blob/ee2a2ec6f9b70b3f2dfe4041a2d5fb4901201cdf/gui-lib/framework/main.rkt#L1442
https://github.com/racket/gui/blob/a00b2b32e40f519887c5877b8a01a8887fad0bc4/gui-lib/framework/private/keymap-global.rkt#L984",,
2.74358E+17,jesscxc#4846,2021-03-07,"> [from Lisp discord server] @ Techno Chess, Atomic variation#1325 body cannot consist of exclusively internal defines, there has to be at least one ""normal"" expression
is there a theoretical reason for that? or historical, or?",,
2.66505E+17,notjack#9941,2021-03-08,Body of what?,,
2.66505E+17,notjack#9941,2021-03-08,Some body forms don't require at least one expression. Module bodies for example.,,
2.74358E+17,jesscxc#4846,2021-03-08,"> ""is something like this a valid lambda expression: `(lambda (x) (define x 10))` // this does give an error, but I'm really asking if you can put a definition in the body of a lambda"" ... [yeah internal `define` is fine and recommended even over `let`, where applicable // but body cannot consist of exclusively internal `define`s, there has to be at least one ""normal"" expression]",,
2.74358E+17,jesscxc#4846,2021-03-08,"lambda body, but I also wonder in general",,
2.66505E+17,notjack#9941,2021-03-08,"In general, ""internal definitions"" are blocks where the whole block is an expression, but within the block definitions are allowed. Usually in order for this to make sense, the block needs one final expression within it.",,
2.66505E+17,notjack#9941,2021-03-08,"Definitions don't evaluate to `(void)`. They don't evaluate to anything, because they're not expressions.",,
2.66505E+17,notjack#9941,2021-03-08,That's why `(lambda (x) (define y 10))` is an error - the code hasn't specifed what the lambda's result expression is,,
2.66505E+17,notjack#9941,2021-03-08,"It doesn't have to be like this. Definitions _could_ evaluate to void, and be usable as expressions. It's just that usually when you've got a definition you expect to _use_ it somewhere, so blocks with no final expression are usually the result of a programmer forgetting to write down the final expression, or putting parens in the wrong place or some other error.",,
2.66505E+17,notjack#9941,2021-03-08,Not making definitions count as expressions makes it easier to find those kinds of errors.,,
4.66395E+17,oaktownsam#0815,2021-03-10,"This may be too hacky for some folks, but if you like json data literals you can fake them with `#lang at-exp`",,
4.66395E+17,oaktownsam#0815,2021-03-10,"```
#lang at-exp racket/base

(require json)

(define (json . parts)
  (string->jsexpr
   (apply string-append parts)))

@json{
 {
  ""a"": [1,2,3,4,5],
  ""b"": [7,8,9,10]
 }
}
```",,üëç (1)
4.66395E+17,oaktownsam#0815,2021-03-10,@sarna --^,,
1.30231E+17,sarna#3904,2021-03-10,@oaktownsam that's just plain evil,,
1.30231E+17,sarna#3904,2021-03-10,I love it!,,hehe (1)
4.62028E+17,StephenD#5938,2021-03-10,Is it ok if I post on reddit?,,
4.66395E+17,oaktownsam#0815,2021-03-10,Yes please do,,üòÄ (1)
4.66395E+17,oaktownsam#0815,2021-03-10,"It should be possible to do that with yaml too, I just haven't tried.",,cool (1)
4.66395E+17,oaktownsam#0815,2021-03-10,A very clever racketeer could make it run at compile-time instead of run-time,,hehe (1)
4.66395E+17,oaktownsam#0815,2021-03-10,"I'm not that clever but here is a version that works at compile-time:
```
#lang at-exp racket/base

(require (for-syntax racket/base
                     racket/sequence
                     json)
         syntax/parse/define)

(define-syntax-parse-rule (json-cte parts:str ...)
  #:do [(define ss
          (for/list ([s (in-syntax #'(parts ...))]) (syntax->datum s)))]
  #:with jsexpr
  (datum->syntax #'(parts ...) (string->jsexpr (apply string-append ss)))
  jsexpr)

@json-cte{
 {
  ""a"": [1,2,3,4,5],
  ""b"": [7,8,9,10]
 }
}
```",,
2.66505E+17,notjack#9941,2021-03-10,`define-syntax-parse-rule` üíï,,üòç (3)
4.66395E+17,oaktownsam#0815,2021-03-10,"I forgot the new name, but I found a helpful link in the doc when I searched for the old name üôÇ",,
2.66505E+17,notjack#9941,2021-03-10,mental note: add `define-simple-macro -> define-syntax-parse-rule` suggestion to `resyntax`,,"plusone (1),üíØ (2)"
1.30231E+17,sarna#3904,2021-03-10,"well you kinda did, since JSON is valid YAML 1.2",,
1.30231E+17,sarna#3904,2021-03-10,is there really any distinction in racket? do macros get compiled when you do `raco exe`?,,
4.66395E+17,oaktownsam#0815,2021-03-10,Yes compile time is when all the macros run üôÇ,,
2.66505E+17,notjack#9941,2021-03-10,@sarna yeah there's a _huge_ distinction,,
1.30231E+17,sarna#3904,2021-03-10,üëÄ,,
2.66505E+17,notjack#9941,2021-03-10,"if you download precompiled bytecode from the package server instead of source code, when you install a package you might get it with all the macros already expanded away",,
1.30231E+17,sarna#3904,2021-03-10,I mean when you run it like ` racket main.rkt` then you don't *see* a separate compile phase,,
2.66505E+17,notjack#9941,2021-03-10,`raco setup` is the compile phase,,
1.30231E+17,sarna#3904,2021-03-10,oh! I see,,
4.66395E+17,oaktownsam#0815,2021-03-10,(or `raco make`),,plusone (1)
1.30231E+17,sarna#3904,2021-03-10,that's cool,,
2.66505E+17,notjack#9941,2021-03-10,"when you run `racket` it implicitly compiles things, and it won't recompile dependencies that haven't changed",,
1.30231E+17,sarna#3904,2021-03-10,that's cool too! so if I have precompiled libraries it'll run faster than if I had just the source code?,,
2.66505E+17,notjack#9941,2021-03-10,yup,,
1.30231E+17,sarna#3904,2021-03-10,neato,,
2.66505E+17,notjack#9941,2021-03-10,well,,
2.66505E+17,notjack#9941,2021-03-10,code will run faster if things are compiled before the code is run,,
4.66395E+17,oaktownsam#0815,2021-03-10,"Yeah generally if you say ""X.rkt runs slow"" you will be asked to time `raco make X.rkt` and then time `racket X.rkt` separately",,
4.66395E+17,oaktownsam#0815,2021-03-10,Especially if it's like Typed Racket since it does a lot more at compile time.,,plusone (1)
2.66505E+17,notjack#9941,2021-03-10,"you don't need to download precompiled libraries for the compilation speedup, when you install a package normally it downloads the source and compiles it on your machine. the precompilation download thing is for the case when compiling code takes forever or involves dependencies you don't actually need at runtime.",,
1.30231E+17,sarna#3904,2021-03-10,"it all makes sense now, thanks for explaining üôá‚Äç‚ôÇÔ∏è",,"üéâ (2),üôá‚Äç‚ôÇÔ∏è (1)"
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-03-11,"servlet in racket slang isn't same as servlet in java, is it? there is no servlet container deployment, from what I can tell",,
4.62028E+17,StephenD#5938,2021-03-11,"‚Äî
Racket Stories

Hi All,

[Racket Stories](https://racket-stories.com) has close to 400 links to Racket related stuff.

Help me get to 500.

Submit blog posts, libraries, one off Racket hacks, ...

New or old doesn't matter - if it is interesting to you, it's probably interesting to others as well.

Don't forget to vote on the stories.

/soegaard",,
2.66505E+17,notjack#9941,2021-03-12,started work on parallelizing `resyntax`!,,
2.66505E+17,notjack#9941,2021-03-12,(I'm sick of it taking 30+ minutes to refactor the `racket/racket` repository),,
1.93202E+17,rocketnia#4517,2021-03-12,hooray for getting started on that üôÇ I hope it pays off,,
2.66505E+17,notjack#9941,2021-03-12,fingers crossed,,ü§û (1)
2.66505E+17,notjack#9941,2021-03-12,though I'm already a little stumped: how do I get the number of cpu cores for the current machine? I want to make one place per core.,,
2.66505E+17,notjack#9941,2021-03-12,"ah, found the `processor-count` function",,cool (2)
6.36424E+17,Killian (KDr2)#8329,2021-03-12,https://github.com/KDr2/kittle-buffer A Brainf**k Interpreter üôÇ,,üëå (1)
3.20686E+17,Turgut#2799,2021-03-12,is there a built-in function to get the equal prefix as it were of 2 lists?,,
3.20686E+17,Turgut#2799,2021-03-12,(prefix '(1 2 3 4) '(1 2 3 6 7)) -> '(1 2 3),,
3.20686E+17,Turgut#2799,2021-03-12,something like this,,
3.20686E+17,Turgut#2799,2021-03-12,"obviously, you can write this yourself but i'm wondering if i can get a more elegant solution",,
3.5323E+17,Alex Knauth#4895,2021-03-12,"```
> (take-common-prefix (list 1 2 3 4) (list 1 2 3 6 7))
(list 1 2 3)
> (take-common-prefix (list 'a 'b 'c 'd) (list 'a 'b 'x 'y 'z))
(list 'a 'b)
```",,üíØ (4)
5.39603E+17,spacey üåå#7238,2021-03-12,Racket has a pretty cool standard library ü•∞,,plusone (5)
3.20686E+17,Turgut#2799,2021-03-12,thank you,,
1.30231E+17,sarna#3904,2021-03-13,@notjack have you seen https://github.com/Bogdanp/racket-review ? maybe you can join forces üëÄ,,
1.30231E+17,sarna#3904,2021-03-13,"what's the most popular racket, uh.. communication platform? the mailing list?",,
1.30231E+17,sarna#3904,2021-03-13,"this server doesn't get a lot of traffic, I wonder if there's anything busier out there",,
7.94955E+17,Laurent O#6627,2021-03-13,I'd say slack,,
3.20686E+17,Turgut#2799,2021-03-13,"it seems i cannot pass the special-forms (i think theyre special-forms) ""and"" and ""or"" as function arguments",,
3.20686E+17,Turgut#2799,2021-03-13,i wanted a function,,
3.20686E+17,Turgut#2799,2021-03-13,"that takes and/or as a parameter, so say",,
3.20686E+17,Turgut#2799,2021-03-13,"'''(define (perform-logical-operation operation bool-A bool-B)
(operation bool-A bool-B))",,
3.20686E+17,Turgut#2799,2021-03-13,(perform-logical-operation and #t #f),,
3.20686E+17,Turgut#2799,2021-03-13,is there a way to do this cleanly?,,
2.64024E+17,Eutro#0016,2021-03-13,"`and`/`or` aren't particularly special, they're just macros. You can just do `(lambda (a b) (and a b))` if you need to pass it as an argument. There might exist one already somewhere in the standard library",,plusone (1)
2.64024E+17,Eutro#0016,2021-03-13,`(compose (curry andmap identity) list)` might work?,,
2.64024E+17,Eutro#0016,2021-03-13,but it's longer so don't use it,,
1.30231E+17,sarna#3904,2021-03-13,"oh, hmm. I don't know why people use slack, it has a message cap :meow: on the clojure one when you posted a question and checked the answer the next day it would already be deleted",,
3.20686E+17,Turgut#2799,2021-03-13,thanks for the suggestions Eutro!,,
7.94955E+17,Laurent O#6627,2021-03-13,"Yeah that part is really annoying, although for racket we still have a few months of history. But the thread system is very useful. I don't like the discord style where everything is mixed together, it's almost impossible to have several conversations at once, in particular with code.",,
1.30231E+17,sarna#3904,2021-03-13,"yeah I can see that. I'll check the slack out, thanks!",,
1.30231E+17,sarna#3904,2021-03-13,"I mean I'll still be here, it's just that I'd like to read more racket stuff - and here there's not a lot, usually :meow:",,
2.66505E+17,notjack#9941,2021-03-13,yes üëÄ,,üëÄ (1)
4.62028E+17,StephenD#5938,2021-03-13,The slack has ~1400 Users,,üëÄ (1)
4.62028E+17,StephenD#5938,2021-03-13,"If a you are after more racket stuff I‚Äôd recommend:
https://racket-news.com
and
https://racket-stories.com",,
4.62028E+17,StephenD#5938,2021-03-13,"Should we make some ‚Äòbreakout room‚Äô channels, or #general-overflow?",,
1.56786E+17,williewillus#8490,2021-03-13,"I wish more people still used mailing lists, for this reason
Emails were designed around persistence and threading and we've thrown that all out for instant messaging then bolted the threading back on",,
1.56786E+17,williewillus#8490,2021-03-13,and the ricketyness shows,,
4.62028E+17,StephenD#5938,2021-03-13,"The mailing list is still used, but much of the traffic moved to slack.",,
4.62028E+17,StephenD#5938,2021-03-13,And typed-racket is trialing GitHub discussions https://github.com/racket/typed-racket/discussions,,
1.30231E+17,sarna#3904,2021-03-14,"yep I'm already reading those, thanks!",,
1.30231E+17,sarna#3904,2021-03-14,what do you think about forums? for me they're like mailing lists but less clunky,,
2.66505E+17,notjack#9941,2021-03-14,like Discourse?,,
1.30231E+17,sarna#3904,2021-03-14,yeah for example,,
4.62028E+17,StephenD#5938,2021-03-14,I‚Äôm interested in trialing a Racket Discourse instance as I‚Äôve had generally good experience on other discourse instances. Easy to use. But I don‚Äôt have time Rn,,
4.62028E+17,StephenD#5938,2021-03-14,FWIW https://docs.google.com/spreadsheets/d/1WxnA2NYmj33w7TVA4QWwMQUaqh3lQzhE8MN6QSheyCQ/edit,,
1.30231E+17,sarna#3904,2021-03-14,"sorry for the very late reply, but I found an article that has something on this - https://defn.io/2020/02/12/racket-web-server-guide/",,
1.30231E+17,sarna#3904,2021-03-14,"""A servlet is a function from a request to a response."" - I doubt Java ones are that simple :meow:",,
1.5424E+17,SwitchAxe#3481,2021-03-14,would you rather manage strings as strings or as lists?,,
1.30231E+17,sarna#3904,2021-03-14,"as strings, strings as lists are kinda problematic",,
1.5424E+17,SwitchAxe#3481,2021-03-14,why?,,
1.30231E+17,sarna#3904,2021-03-14,because.. they're lists of what? bytes? unicode graphemes? characters?,,
1.5424E+17,SwitchAxe#3481,2021-03-14,oh idk,,
1.30231E+17,sarna#3904,2021-03-14,it's hard to make this decision,,
1.30231E+17,sarna#3904,2021-03-14,and even then lists won't be as ergonomic as a dedicated string type,,
1.30231E+17,sarna#3904,2021-03-14,"I mean the underlying type could be a list, but you as a user don't see that (because you don't need to)",,
1.5424E+17,SwitchAxe#3481,2021-03-14,"ok, thank you very much",,
1.30231E+17,sarna#3904,2021-03-14,:meowblush: if you have any other questions don't hesitate to ask,,
4.66395E+17,oaktownsam#0815,2021-03-14,"Even ""strings"" have a lot of built in assumptions.",,
2.64024E+17,Eutro#0016,2021-03-14,Strings are just `char *`s,,
2.64024E+17,Eutro#0016,2021-03-14,"any `char *` is also a string, you'll run into a null byte eventually",,
1.56786E+17,williewillus#8490,2021-03-14,ü§î,,
1.30231E+17,sarna#3904,2021-03-14,"in C, yes",,
2.736E+17,Alwinfy#7306,2021-03-14,"cursed address space where dereferencing off the end of an unterminated string sets you to a mode where all memory accesses return 0xff, in effect causing you to loop forever",,
4.66395E+17,oaktownsam#0815,2021-03-14,Also can contain some invalid codepoints,,
2.29708E+17,wiggles#9999,2021-03-14,hi racket server here's my crime from when i took sicp https://gist.github.com/9999years/993e8c84e2eeec9301bb3a24501fdfcd,,meowloween (5)
2.66505E+17,notjack#9941,2021-03-14,hi berry!,,
2.29708E+17,wiggles#9999,2021-03-14,hi not jack!,,üëã (1)
2.75501E+17,Plane#0324,2021-03-14,Avoiding C-style strings is one of the best reasons not to use a language I can think of,,ü§£ (2)
3.20686E+17,Turgut#2799,2021-03-16,whats the Racket way to check whether 2 objects are instances of the same class?,,
3.20686E+17,Turgut#2799,2021-03-16,"i found object-info, but that seems excessive",,
3.20686E+17,Turgut#2799,2021-03-16,is there a cleaner way?,,
2.66505E+17,notjack#9941,2021-03-16,I think you can use `object-interface` on both objects and check if the returned interfaces are equal,,plusone (1)
4.59824E+17,Wayramaru#2602,2021-03-17,Hello people,,
6.93105E+17,fbü¶ã#8263,2021-03-17,hello,,
4.59824E+17,Wayramaru#2602,2021-03-17,lol,,
6.93105E+17,fbü¶ã#8263,2021-03-17,"can anyone help me with replacing an
 index of a list",,
6.93105E+17,fbü¶ã#8263,2021-03-17,,https://cdn.discordapp.com/attachments/618895179343986688/821716046712143893/unknown.png,
6.93105E+17,fbü¶ã#8263,2021-03-17,im trying to give an index and it should replace that,,
6.14162E+17,Hals#9318,2021-03-17,It works but the index doesn‚Äôt,,
6.14162E+17,Hals#9318,2021-03-17,Any help would be appreciated,,
6.93105E+17,fbü¶ã#8263,2021-03-17,yes,,
6.93105E+17,fbü¶ã#8263,2021-03-17,@everyone,,
4.59824E+17,Wayramaru#2602,2021-03-17,:meowblushcry:,,
6.14162E+17,Hals#9318,2021-03-17,Anyone made a hangman game on scheme,,
2.75501E+17,Plane#0324,2021-03-17,"hi @fbü¶ã welcome (:
1. there is a channel dedicated to asking for help #help which you can use if you like
2. i don't think pinging everyone works 
3. discord has a special way you can include your code as text, and still get highlighting and so forth.  if you do that, it will make it easier for people to help",,üëç (1)
2.75501E+17,Plane#0324,2021-03-17,"you put ``‚Äã`‚Äã`‚Äã`scheme‚Äã`` on the first line by itself, then your code, then  ``‚Äã`‚Äã`‚Äã`‚Äã`` on the last line by itself.

it looks like this, and people can copy + paste or edit it:
```scheme
(define v (make-vector 10 20))
```
and it looks like this while you're typing:",https://cdn.discordapp.com/attachments/618895179343986688/821744742915768320/unknown.png,
5.39603E+17,spacey üåå#7238,2021-03-17,i've made one in JavaScript. feel free to ping me if you want the code i used for the game logic,,
4.13079E+17,m_m#3045,2021-03-17,Hello. I am thinking about using Racket as a video streaming server. Does anyone have any exp. with that kind of projects in Racket? How about Racket performance? Can it handle it?,,
4.66395E+17,oaktownsam#0815,2021-03-17,There is overscan which uses gstreamer.,,
4.66395E+17,oaktownsam#0815,2021-03-17,I have not tried too hard to get it to work,,
4.66395E+17,oaktownsam#0815,2021-03-17,https://pkgs.racket-lang.org/package/overscan,,
4.66395E+17,oaktownsam#0815,2021-03-17,I think that Mark stopped developing it a couple years back üò¶,,
4.66395E+17,oaktownsam#0815,2021-03-17,Essentially all of the heavy computational stuff is in gstreamer from what I understand.,,
4.13079E+17,m_m#3045,2021-03-17,On the other hand I don't need to do a lot of stuff with it. Just stream video from user browsers and send them back data as a stream.,,
4.13079E+17,m_m#3045,2021-03-17,Hmm it is really funny. I am observing and doing something with Racket from a couple of years and I have that feeling that most of the packages are really outdated and there is less new packaged each year. Is it only me?,,
1.30231E+17,sarna#3904,2021-03-17,"it can feel like this, but its not objectively true I think",,
1.30231E+17,sarna#3904,2021-03-17,I have this feeling with other languages I got back into after some time,,
4.62028E+17,StephenD#5938,2021-03-17,It‚Äôs really hard to compete with OBS these days. I like racket but if you just want to stream a users browser it‚Äôs hard to beat.,,
4.66395E+17,oaktownsam#0815,2021-03-18,@notjack We should devise a cryptocurrency that just does a lot of sleep calls and doesn't use up power consuming cpu instructions.,,üòÜ (3)
2.66505E+17,notjack#9941,2021-03-18,NapCoin,,
4.66395E+17,oaktownsam#0815,2021-03-18,Oops this is probably better for #off-topic üòõ,,
2.66505E+17,notjack#9941,2021-03-18,I'll allow some light non-interrupting riffing,,
1.30231E+17,sarna#3904,2021-03-18,are keyword arguments slower than positional ones?,,
1.30231E+17,sarna#3904,2021-03-18,I mean if a function has all positional vs all keyword - would calling the one with all keyword args be slower?,,
2.66505E+17,notjack#9941,2021-03-18,"when called dynamically / in higher-order ways, they're slower. When called normally I think there's some macro-based cleverness to give it a fast path.",,
6.87833E+17,grey#8674,2021-03-18,Also note that the speed difference is probably not noticeable in most cases.,,
1.30231E+17,sarna#3904,2021-03-18,oh nice!,,
1.30231E+17,sarna#3904,2021-03-18,"yep, premature optimization is still one of my most frequent sins :meow:",,
4.66395E+17,oaktownsam#0815,2021-03-18,This is from the original keyword paper.  I dunno how applicable it is now.,https://cdn.discordapp.com/attachments/618895179343986688/822250956292620298/Screen_Shot_2021-03-18_at_4.30.47_PM.png,
4.66395E+17,oaktownsam#0815,2021-03-18,"The microbenchmark is on page 5 of the paper if anyone wants to test it now üôÇ
https://www.cs.utah.edu/plt/publications/scheme09-fb.pdf",,
1.56786E+17,williewillus#8490,2021-03-18,!!argbench,,
8.02004E+17,r16#4581,2021-03-18,"cpu time: 38 real time: 38 gc time: 0
cpu time: 41 real time: 41 gc time: 0
cpu time: 303 real time: 303 gc time: 0
cpu time: 63 real time: 63 gc time: 9
cpu time: 242 real time: 242 gc time: 0
cpu time: 313 real time: 313 gc time: 0
cpu time: 394 real time: 394 gc time: 8",,
1.56786E+17,williewillus#8490,2021-03-18,"that's in a sandbox on 8.0 CS
on my desktop (no sandbox, 7.9 BC) it's pretty much all equal and at 12 ms",,
1.56786E+17,williewillus#8490,2021-03-18,"so the answer is yes but probably not that much
I bet a big chunk of the time in the sandbox is spent reloading some of the keyword machinery inside the sandbox namespace",,
1.30231E+17,sarna#3904,2021-03-19,"""unused keyword"" is surprisingly slow, imo",,
1.30231E+17,sarna#3904,2021-03-19,also - fun that there are so many papers about racket machinery. free and great quality documentation! in other langs you'd have way less info,,
1.30231E+17,sarna#3904,2021-03-19,just looked at #bots üò≥,,
1.30231E+17,sarna#3904,2021-03-19,:racketflat:acket,,
4.66395E+17,oaktownsam#0815,2021-03-19,"Most other languages just hack something out and see what sticks and the implementation is the specification.

Racket doesn't have a formal specification but several parts have at been documented and played with formally.",,
1.30231E+17,sarna#3904,2021-03-19,"yeah, I like that :)",,
1.30231E+17,sarna#3904,2021-03-19,"though stuff like r7rs counts as ""formally specified"", right?",,
7.73175E+17,meowüé∫#2842,2021-03-19,Yup,,
4.66395E+17,oaktownsam#0815,2021-03-19,I think R7RS just cribbed the semantics from R5RS and standardized some bits.,,
4.66395E+17,oaktownsam#0815,2021-03-19,(the denotational semantics from the end of the spec),,
7.73175E+17,meowüé∫#2842,2021-03-19,IEEE Scheme*,,üòÜ (1)
1.30231E+17,sarna#3904,2021-03-19,ANSI Scheme and IEEE Scheme - two separate dialects,,
7.73175E+17,meowüé∫#2842,2021-03-19,They both refer to the same standard. :meow:,,
7.73175E+17,meowüé∫#2842,2021-03-19,IEEE/ANSI 1178-1990,,
7.73175E+17,meowüé∫#2842,2021-03-19,"R7RS Small is based on IEEE Scheme, which, in turn, is based on R4RS.",,
4.66395E+17,oaktownsam#0815,2021-03-19,"Huh, I wonder what the delta between R4 and R5 is?",,
4.66395E+17,oaktownsam#0815,2021-03-19,I assumed R7 was just based on R5.,,
7.73175E+17,meowüé∫#2842,2021-03-19,Very little,,
7.73175E+17,meowüé∫#2842,2021-03-19,,https://cdn.discordapp.com/attachments/618895179343986688/822561781813346325/unknown.png,
4.66395E+17,oaktownsam#0815,2021-03-19,Some handwavey bits about numbers?,,
4.66395E+17,oaktownsam#0815,2021-03-19,Ah thanks!,,
7.73175E+17,meowüé∫#2842,2021-03-19,IEEE Scheme adds very little on R4RS. Mostly shaving the irregularities such as making the empty list truthy.,,
7.73175E+17,meowüé∫#2842,2021-03-19,It costs $160 to read but *cough* I can arrange something if you're interested.,,
4.66395E+17,oaktownsam#0815,2021-03-19,Nah it's cool.,,
7.73175E+17,meowüé∫#2842,2021-03-19,Okie,,
4.66395E+17,oaktownsam#0815,2021-03-19,I think I've read enough scheme standards for a few lifetimes üôÇ,,
7.73175E+17,meowüé∫#2842,2021-03-19,Haha üòÅ,,
1.30231E+17,sarna#3904,2021-03-19,"oh I didn't know it was actually a thing lmao, I tried to make a joke :meowblushcry:",,
7.73175E+17,meowüé∫#2842,2021-03-19,Oh haha,,
7.73175E+17,meowüé∫#2842,2021-03-19,https://erkin.party/scheme/bibliography/#standards,,
7.73175E+17,meowüé∫#2842,2021-03-19,(R4RS technically came out later than the IEEE standard),,
1.30231E+17,sarna#3904,2021-03-19,is R7RS-large alright? I checked some time ago and most of the things have been last updated in 2019 IIRC,,
7.73175E+17,meowüé∫#2842,2021-03-19,"R7RS is still going, albeit slowly.",,
7.73175E+17,meowüé∫#2842,2021-03-19,jcowan seems dedicated to actually finish it.,,
1.30231E+17,sarna#3904,2021-03-19,"going as in not finished, or really going? :meow:",,
1.30231E+17,sarna#3904,2021-03-19,oh I see,,
7.73175E+17,meowüé∫#2842,2021-03-19,WIP,,
7.73175E+17,meowüé∫#2842,2021-03-19,He's releasing individual portions in the form of 'dockets' so that it doesn't need to be released in one go.,,
7.73175E+17,meowüé∫#2842,2021-03-19,A good portion of the standard is already frozen.,,
1.30231E+17,sarna#3904,2021-03-19,data structures are finished I think?,,
7.73175E+17,meowüé∫#2842,2021-03-19,'Orange Edition' is the newest finalised version.,,
7.73175E+17,meowüé∫#2842,2021-03-19,They're further breaking down individual portions into SRFIs so that they can be implemented individually.,,
4.66395E+17,oaktownsam#0815,2021-03-19,"I sort of wish that it wasn't all on jcowan, but I'm not invested enough in Scheme to help or push the issue.  So I hope it all works out!",,
7.73175E+17,meowüé∫#2842,2021-03-19,"Yeah, it's 60% him, 40% everyone else. I admire his dedication.",,
4.66395E+17,oaktownsam#0815,2021-03-19,I mean I guess it is good the SRFI process seems to be getting more traction,,
7.73175E+17,meowüé∫#2842,2021-03-19,Yeah!,,
4.66395E+17,oaktownsam#0815,2021-03-19,Although some SRFIs are questionable (still),,
7.73175E+17,meowüé∫#2842,2021-03-19,R7RS Small was a lacklustre because it was something of an emergency compromise to satisfy the militant minimalist purists who boycotted R6RS.,,
7.73175E+17,meowüé∫#2842,2021-03-19,But it at least it's a clean ground to build upon.,,
7.73175E+17,meowüé∫#2842,2021-03-19,I still use R6RS when I write Scheme (and I try to rely on SRFIs as much as possible for portability) but I have high hopes for R7RS Large.,,
1.30231E+17,sarna#3904,2021-03-19,what's the point of having such a small language that you have to rely on implementation-specific stuff to get anything useful done?,,
7.73175E+17,meowüé∫#2842,2021-03-19,"I know, right?!",,
1.30231E+17,sarna#3904,2021-03-19,:meow:,,
7.73175E+17,meowüé∫#2842,2021-03-19,"And they're missing the point that if you don't want to implement all that stuff, it's perfectly fine not to be standard compliant. Nobody's going to stop you from calling your language Scheme.",,
1.30231E+17,sarna#3904,2021-03-19,"that's why I'm trying to stick to racket, even if other schemes seem to have compelling features",,
7.73175E+17,meowüé∫#2842,2021-03-19,Just say it's 'a subset of Scheme for embedded development' or something.,,üëç (1)
7.73175E+17,meowüé∫#2842,2021-03-19,"Yeah, I think Racket did a good job with its splendid stdlib.",,
1.30231E+17,sarna#3904,2021-03-19,"yeah.. I think a large part of ""the lisp curse"" is thinking ""lisp"" is one language",,
7.73175E+17,meowüé∫#2842,2021-03-19,Exactly,,
6.87833E+17,grey#8674,2021-03-19,"The nice thing about Racket is that you can implement a formal model of it in Redex. And, for not technically having a formal spec, Racket doesn‚Äôt suffer from the undefined behavior that is, ahem, ‚Äúdefined‚Äù in other lang‚Äôs specs.",,plusone (2)
7.73175E+17,meowüé∫#2842,2021-03-19,I'm also against undefined behaviour but jcowan sorta kinda explained why some people do.,,
7.73175E+17,meowüé∫#2842,2021-03-19,"It makes language implementation simpler under the hood where you can rely on all sorts of dirty tricks for performance, but you don't want the *users* of the compiler/interpreter/whatever to use them.",,
7.73175E+17,meowüé∫#2842,2021-03-19,"I disagree but eh, I can see what they mean.",,
7.73175E+17,meowüé∫#2842,2021-03-19,IMO you should break the rules under the hood in a way that never leaks to the language exposed to the users.,,üëç (1)
1.30231E+17,sarna#3904,2021-03-19,"by the way, if the behavior is truly undefined and the compiler can do whatever it wants.. can it refuse to compile the program, or safely crash on runtime? instead of assuming undefined = impossible to happen (hello C)? :meow:",,
7.73175E+17,meowüé∫#2842,2021-03-19,Yes,,
1.30231E+17,sarna#3904,2021-03-19,but it'd be slower I imagine,,
7.73175E+17,meowüé∫#2842,2021-03-19,"It can do anything it wants, which isn't entirely a bad thing. Like, if you're incrementing an index in a loop in a hotspot, you can assure the compiler that your code checks the index's upper bound to disable the built-in overflow checker if integer overflow is undefined behaviour. This way, you can take out the runtime overflow checks that run with every increment for performance.",,üëç (1)
7.73175E+17,meowüé∫#2842,2021-03-19,"But if your upper bound check doesn't work, you deserve the nasal demons.",,
7.73175E+17,meowüé∫#2842,2021-03-19,"Then again, I'm in the school of 'Do the Right Thing' rather than 'Worse Is Better'. I believe correctness takes precedence over performance.",,
7.73175E+17,meowüé∫#2842,2021-03-19,No undefined behaviour for me thank you very much :meowleft:,,
1.30231E+17,sarna#3904,2021-03-19,yeah same here :meow:,,
2.66505E+17,notjack#9941,2021-03-19,I assumed the reference to IEEE Scheme was a joke üòÖ didn't realize there actually was an IEEE Scheme spec,,
4.66395E+17,oaktownsam#0815,2021-03-19,I think that's a real bygone era.  Really only C/C++ and maybe Ada are still standardized by quasi-governmental bodies.,,
4.66395E+17,oaktownsam#0815,2021-03-19,(not that IEEE is a govt üòõ,,
7.73175E+17,meowüé∫#2842,2021-03-20,Yup,,meow (1)
7.73175E+17,meowüé∫#2842,2021-03-20,https://web.archive.org/web/20090115204042/http://philosecurity.org/2009/01/12/interview-with-an-adware-author,,
7.73175E+17,meowüé∫#2842,2021-03-20,He deployed TinyScheme on millions of computers for adware. :meow:,,
1.30231E+17,sarna#3904,2021-03-20,living the dream,,
2.64024E+17,Eutro#0016,2021-03-20,"> NT is fundamentally a Unicode system, so all the strings internally are 16-bit counter Unicode. The Win32 API is fundamentally Ascii. There are strings that you can express in 16-bit counted Unicode that you can‚Äôt express in ASCII. Most notably, you can have things with a Null in the middle of it.
> That meant that we could, for instance, write a Registry key that had a Null in the middle of it. Since the user interface is based on the Win32 API, people would be able to see the key, but they wouldn‚Äôt be able to interact with it because when they asked for the key by name, they would be asking for the Null-terminated one. Because of that, we were able to make registry keys that were invisible or immutable to anyone using the Win32 API. Interestingly enough, this was not only all civilians and pretty much all of our competitors, but even most of the antivirus people.
Brilliant",,üò´ (1)
1.30231E+17,sarna#3904,2021-03-20,:meowblushcry:,,
7.94955E+17,Laurent O#6627,2021-03-20,"That was an enjoyable read, thanks!",,üëç (1)
1.56786E+17,williewillus#8490,2021-03-20,windows be like,,
7.94955E+17,Laurent O#6627,2021-03-20,This is pretty smart indeed. The guy is borderline genius. 'Racket' would have been the perfect language for him üòÜ,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-03-20,"I mean, srfi process is quite lax, anyone can publish any design they want",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-03-20,"there is some scattering of the docs; you might find some outdated version somewhere (especially if it's bitbucket). The working repo for specs is https://github.com/johnwcowan/r7rs-work. Specs from there are transformed into SRFI's, for which you can either check https://srfi.schemers.org/ for released ones (the ones with ""by John Cowan (text)""), or https://github.com/pre-srfi for unreleased ones",,
1.30231E+17,sarna#3904,2021-03-20,oh I see! quite a lot of progress is being made üëÄ that's nice,,
4.59824E+17,Wayramaru#2602,2021-03-21,is  recur a function in racket?,,
2.64024E+17,Eutro#0016,2021-03-21,!rkt eval recur,,
8.02004E+17,r16#4581,2021-03-21,":warning: stderr:
recur: undefined;
 cannot reference an identifier before its definition
  in module: 'program
  context...:
   body of 'program",,
2.64024E+17,Eutro#0016,2021-03-21,no,,
2.64024E+17,Eutro#0016,2021-03-21,What do you mean though?,,
2.64024E+17,Eutro#0016,2021-03-21,"If you're coming from Clojure, the equivalent to `recur` is to just call the function you're in",,
4.59824E+17,Wayramaru#2602,2021-03-21,I am using pretty big in drracket,,
2.64024E+17,Eutro#0016,2021-03-21,`recur` is defined right there in the code,,
4.59824E+17,Wayramaru#2602,2021-03-21,i that is what i though,,
3.5323E+17,Alex Knauth#4895,2021-03-21,`recur` is a macro in one of the Racket Student Languages,,
3.5323E+17,Alex Knauth#4895,2021-03-21,https://docs.racket-lang.org/htdp-langs/advanced.html#(form._((lib._lang%2Fhtdp-advanced..rkt)._recur)),,
3.5323E+17,Alex Knauth#4895,2021-03-21,"it's basically ""named let"" under a different name",,
5.39603E+17,spacey üåå#7238,2021-03-21,Racket is basically `recur`: the language :),,
1.30231E+17,sarna#3904,2021-03-23,love their logo,,
1.30231E+17,sarna#3904,2021-03-23,,https://cdn.discordapp.com/attachments/618895179343986688/823855205576605696/image0.gif,üòç (1)
1.30231E+17,sarna#3904,2021-03-25,"@williewillus don't compilers also deal with messy data? and if you want to have nice error messages, you have to embed an understanding of broken programs too",,
1.56786E+17,williewillus#8490,2021-03-25,what I mean is that the data structures being manipulated are fully under your control,,
1.56786E+17,williewillus#8490,2021-03-25,"the compiler determines what constitutes a valid expression/statement/etc, not some ambiguous outside web service",,
1.30231E+17,sarna#3904,2021-03-25,"oh, yeah. but then static typed people would argue it's your job to make a safe wrapper around that",,
1.30231E+17,sarna#3904,2021-03-25,which is cool when you can express stuff you need within the type system,,
1.56786E+17,williewillus#8490,2021-03-25,"yea it might be nice, but the moment the data leaves your system you lose everything youve built up
for lots of use cases it's a lot of ceremony for nothing
i recommend giving the clojure hopl article a read, it's pretty interesting

anyways, yeah clojure is probably the only dynamic language I could stand to use in any production case. Maybe Racket too but you know, too niche ;P",,
1.30231E+17,sarna#3904,2021-03-25,what are you normally using then?,,
1.56786E+17,williewillus#8490,2021-03-25,"at work? a mix of python, ocaml, and hack (it's pretty similar to java nowadays)
python makes me want to die",,
1.30231E+17,sarna#3904,2021-03-25,"""a lot of ceremony for nothing"" yeah I agree
nothing + confusing error messages..",,
1.30231E+17,sarna#3904,2021-03-25,ah,,
1.30231E+17,sarna#3904,2021-03-25,python was forced on me at work,,
1.30231E+17,sarna#3904,2021-03-25,n same,,
1.56786E+17,williewillus#8490,2021-03-25,"I don't know why people love it so much
it has lots of gotchas, and the docs are terrible (people claim otherwise)",,
1.30231E+17,sarna#3904,2021-03-25,my biggest issue with python is how hypocritical it marketing was,,
1.30231E+17,sarna#3904,2021-03-25,"""everybody uses the same style"" - and then at work I get a file that uses camel case variables, 6 spaces of indentation",,
4.66395E+17,oaktownsam#0815,2021-03-25,haha,,
1.30231E+17,sarna#3904,2021-03-25,"""it's beautiful"" - it can get as ugly as badly written perl if you want, really",,
4.66395E+17,oaktownsam#0815,2021-03-25,"I don't mind Python too much, but I probably write in a Java/Smalltalk/Racket influenced style",,
1.30231E+17,sarna#3904,2021-03-25,"and with clojure I don't like the cult of rich :meow: also, enormous startup time (1.5s?) - I mostly write CLI utilities",,
4.66395E+17,oaktownsam#0815,2021-03-25,Other peoples python can be awful tho,,
1.30231E+17,sarna#3904,2021-03-25,"yeah, same, I do very little side effects. imperative style of my colleagues often trips me up",,
1.30231E+17,sarna#3904,2021-03-25,python also has weird scoping rules,,
1.30231E+17,sarna#3904,2021-03-25,which are totally unintuitive until you read about them and then remember about them,,
4.66395E+17,oaktownsam#0815,2021-03-25,I have heard people talk about weird scoping but it doesn't trip me up too much because I almost always use object or local variables,,
1.56786E+17,williewillus#8490,2021-03-25,"my problem with python is mainly docs
and also the performance
I think about the engineering time and dollars sunk (by my co. and others) into trying to make python actually work and it's such a waste üòõ",,
4.66395E+17,oaktownsam#0815,2021-03-25,There is a paper by SK etal about python's semantics,,
1.56786E+17,williewillus#8490,2021-03-25,for internal tools I can tell whether one is written in python or C++ by how fast it prints out --help üòõ,,
1.30231E+17,sarna#3904,2021-03-25,do you know the loop variable persists after the loop is done? and it has the same value as the last iteration,,
1.30231E+17,sarna#3904,2021-03-25,"x = 5
for x in range(10):
   <some code>
print(x) # prints 10 or 9 I don't remember",,
4.66395E+17,oaktownsam#0815,2021-03-25,I think I did.  I also try not to reuse names as well,,
4.66395E+17,oaktownsam#0815,2021-03-25,https://cs.brown.edu/~sk/Publications/Papers/Published/pmmwplck-python-full-monty/,,
1.30231E+17,sarna#3904,2021-03-25,"I often reuse names when I can, ie have good and predictable scoping rules.. like in racket",,
1.30231E+17,sarna#3904,2021-03-25,did you find racket more performant?,,
4.66395E+17,oaktownsam#0815,2021-03-25,I mean I don't reuse them in the same scope.,,
1.56786E+17,williewillus#8490,2021-03-25,I haven't done anything really performance sensitive in racket,,
1.30231E+17,sarna#3904,2021-03-25,interpreting a lot of code at startup = :meow:,,
1.56786E+17,williewillus#8490,2021-03-25,my impression from reading around is it's about python level or slightly better,,
1.30231E+17,sarna#3904,2021-03-25,"oh! yeah, but I'd think a loop creates a new scope or something",,
1.56786E+17,williewillus#8490,2021-03-25,any raco command spin up my fans though so...it's not that good either üòõ,,
1.30231E+17,sarna#3904,2021-03-25,yeah startup is not its best side,,
4.66395E+17,oaktownsam#0815,2021-03-25,how much code that is needed in  start up is unfortunate,,
1.30231E+17,sarna#3904,2021-03-25,including errortrace adds 0.15s for printing --help :meow:,,
1.30231E+17,sarna#3904,2021-03-25,"I like how natural-cli handles it, it prints the first part really quickly and then you get available subcommands like 0.2s later",,
1.30231E+17,sarna#3904,2021-03-25,"the delay in printing the second part is noticeable, but the tool feels snappy",,
1.30231E+17,sarna#3904,2021-03-25,instead of waiting for the whole period and printing the entire message at once,,
1.30231E+17,sarna#3904,2021-03-25,(it uses dynamic-require for subcommands),,
2.66505E+17,notjack#9941,2021-03-25,this kind of thing is why I'm a really big fan of using macros to derive automated serializing and deserializing logic,,
2.66505E+17,notjack#9941,2021-03-25,and also why I think protocol buffers can be pretty neat sometimes,,
2.64024E+17,Eutro#0016,2021-03-25,or haha reflection like Gson,,
2.66505E+17,notjack#9941,2021-03-25,Gson _hiss_,,
4.66395E+17,oaktownsam#0815,2021-03-25,The only problems I have with standard converters / protocol tools is that someone comes up with a new one every 10 years,,
1.30231E+17,sarna#3904,2021-03-25,rust's serde is *chef's kiss*,,
1.30231E+17,sarna#3904,2021-03-25,"by the way, does anyone know why there are so few YAML 1.2 parsers? the standard is from 2006 I think, and all of them except for like five are for 1.1.. including the racket one",,
1.30231E+17,sarna#3904,2021-03-25,"1.2 is the good one, unfortunately :meow:",,
2.66505E+17,notjack#9941,2021-03-25,what does 1.2 add?,,
1.30231E+17,sarna#3904,2021-03-25,"it fixes booleans (""y"" and ""no"" no longer count as bools), it's a true superset of json",,
1.30231E+17,sarna#3904,2021-03-25,and besides that I'm not that sure to be honest :meow:,,
1.30231E+17,sarna#3904,2021-03-25,too much to do at work to read specs this time,,
1.30231E+17,sarna#3904,2021-03-25,is that a really slimmed down python implemented in racket? what's it for? :meow:,,
4.66395E+17,oaktownsam#0815,2021-03-25,Research,,
4.66395E+17,oaktownsam#0815,2021-03-25,Just proving semantics mostly iiuc,,
2.64024E+17,Eutro#0016,2021-03-25,@ willie install it on the bot user so we can use it in tricks,,
4.66395E+17,oaktownsam#0815,2021-03-25,serde was one of the motivators for Rust having procedural macros.,,
4.66395E+17,oaktownsam#0815,2021-03-25,besides it being cool to write compile time programs,,
1.30231E+17,sarna#3904,2021-03-25,"you wouldn't be able to use python libs though, right?",,
1.30231E+17,sarna#3904,2021-03-25,I don't think comptime execution in rust is that advanced as of now ü§î,,
4.66395E+17,oaktownsam#0815,2021-03-25,each trick would have to load the python stdlib and would take an additional 10s,,üòç (2)
2.64024E+17,Eutro#0016,2021-03-25,"heh, someone made a `whatever_compiles` macro",,
4.66395E+17,oaktownsam#0815,2021-03-25,I haven't tracked the feature too much.  It could still be in the nightly but not release channel,,
2.64024E+17,Eutro#0016,2021-03-25,also `build.rs` has been a thing for a while now,,
4.66395E+17,oaktownsam#0815,2021-03-25,"It isn't as full featured as Racket, but it allows more than the ""syntax-rules"" pattern macros",,
1.30231E+17,sarna#3904,2021-03-25,"oh, I didn't know",,
4.66395E+17,oaktownsam#0815,2021-03-25,I try not to do too much in Rust so I get a fun surprise every couple of years when I need to do something in it.,,
1.30231E+17,sarna#3904,2021-03-25,"haha, yeah",,
1.30231E+17,sarna#3904,2021-03-25,the ergonomics improve quickly,,
1.30231E+17,sarna#3904,2021-03-25,though I heard async is still kinda icky,,
1.30231E+17,sarna#3904,2021-03-25,"btw, did you know perl had first-class continuations? :meow: https://metacpan.org/pod/Coro::State",,
4.66395E+17,oaktownsam#0815,2021-03-25,I'm trying to ignore async/await everywhere because I think it's not good.,,
1.30231E+17,sarna#3904,2021-03-25,racket's model is very nice,,
4.66395E+17,oaktownsam#0815,2021-03-25,"Actually I don't know enough about it to make a good judgement, but everytime I try it seems needlessly complex to deal with bad runtimes.",,
2.66505E+17,notjack#9941,2021-03-25,I have _many_ opinions on async/await,,
1.30231E+17,sarna#3904,2021-03-25,"I've never written a complex async program, it's all very complicated to me :meowblush:",,
1.30231E+17,sarna#3904,2021-03-25,actually :meowblushcry:,,
2.66505E+17,notjack#9941,2021-03-25,giving people advice and reviewing code in 4 different async frameworks as well as working on the libraries and static analysis for them is a huge part of my day job,,
1.30231E+17,sarna#3904,2021-03-25,please share your opinions üëÄ,,
2.66505E+17,notjack#9941,2021-03-25,right after I shower :p,,
1.30231E+17,sarna#3904,2021-03-25,have a nice shower :meowblush:,,
4.66395E+17,oaktownsam#0815,2021-03-25,no stinky async/await opinions allowed.,,meow (2)
1.30231E+17,sarna#3904,2021-03-25,so.. we're blocking?,,üòÜ (1)
6.87833E+17,grey#8674,2021-03-25,"I‚Äôve seen a fair number of complains about async/await and the various implementations thereof, but, not being a developer of any kind, I‚Äôve no experience, thus no opinion, on it. Do feel free to serve me some preconceived notions about them üòõ",,
2.75501E+17,Plane#0324,2021-03-25,"Me too, I‚Äôll share some preconceived notions about async later, I promise",,
2.66505E+17,notjack#9941,2021-03-25,oh right I forgot to talk about async!,,
2.66505E+17,notjack#9941,2021-03-25,lol,,
2.75501E+17,Plane#0324,2021-03-25,Lol,,
2.75501E+17,Plane#0324,2021-03-25,I‚Äôm interested to hear too,,
2.66505E+17,notjack#9941,2021-03-25,SO ASYNC!,,
2.66505E+17,notjack#9941,2021-03-25,"my thoughts on it are that the async/await, promises, futures, threads, etc. are all kind of surface level details. where I usually focus on is the semantic model. almost all concurrency systems fall into one of two models:
- preemptive, different tasks run independently and task switching happens at arbitrary points as determined by some scheduler somewhere
- cooperative, different tasks run until they explicitly pause, yielding control to other tasks
and **both of these models are bad if they're universal**.",,
2.66505E+17,notjack#9941,2021-03-25,"if all your tasks are preemptive, you can have interleaving of execution _anywhere_ and you need to use thread-safe data structures everywhere",,
2.66505E+17,notjack#9941,2021-03-25,"if all your tasks are cooperative, then a single misbehaving task (such as a task that does a long heavy number-crunching computation, or which blocks the underlying thread without remembering to yield control to other tasks) locks up the entire system",,
2.66505E+17,notjack#9941,2021-03-25,"things like M:N threading models try to reach a middle-ground through the scheduler, but that's not a good way to solve the problem IMO because there's no way for programmers to say _which_ tasks can safely run together cooperatively and which can't.",,
2.66505E+17,notjack#9941,2021-03-25,at work there's this really neat framework called Promise Graph,,
2.66505E+17,notjack#9941,2021-03-25,"it's cooperative _by default_, but you can say ""run this code in a separate graph"" - concurrency within a graph is cooperative, but concurrency between different graphs is preemptive",,
2.66505E+17,notjack#9941,2021-03-25,this means that you don't have to care about thread safety by default. you only need thread safe data structures when you decide that you want to isolate some code so that it can't mess with other code if it does something bad.,,
2.66505E+17,notjack#9941,2021-03-25,"and the great part is that this is a decision that's feasible for programmers to make effectively with local reasoning alone! usually what happens is you only make a new graph in one of these scenarios:
- you're about to run some computationally expensive code, like some giant graph traversal or something. that gets a separate graph so that it can run without blocking other code in the current graph.
- you're about to run some relatively untrusted code and want to limit its blast radius. for instance, server frameworks would create a separate graph for handling each request, so that if some request causes your server code to start spinning at 100% CPU or block or something, this doesn't prevent the server from handling other requests.",,
1.30231E+17,sarna#3904,2021-03-26,"is there a version of this for mere mortals? :meow:
edit - this one? https://github.com/microsoft/p-graph",,
1.30231E+17,sarna#3904,2021-03-26,"also, would preemptive OS threads with cooperative user-level threads work? :meow:",,
1.30231E+17,sarna#3904,2021-03-26,oh that's M:N I guess,,
1.30231E+17,sarna#3904,2021-03-26,isn't it a reference for turtle graphics?,,
4.66395E+17,oaktownsam#0815,2021-03-26,Honu.  It's a hawaiian thing iirc.,,
4.66395E+17,oaktownsam#0815,2021-03-26,Prince K≈´hi≈ç Day,,
4.66395E+17,oaktownsam#0815,2021-03-26,https://en.wikipedia.org/wiki/Prince_K%C5%ABhi%C5%8D_Day,,
4.66395E+17,oaktownsam#0815,2021-03-26,Oh and if I had looked at Slack I would not have had to google that üòÑ,,
1.30231E+17,sarna#3904,2021-03-26,oh! neat,,
1.30231E+17,sarna#3904,2021-03-26,"by the way - somebody here posted a plugin for dr racket that added a panel with a file tree. I can't find it now, does anyone know what that was? :meowblush:",,
4.66395E+17,oaktownsam#0815,2021-03-26,"I can't look right now, but maybe search for ""file explorer"" on the package site?",,
1.30231E+17,sarna#3904,2021-03-26,got it!,,
1.30231E+17,sarna#3904,2021-03-26,https://pkgs.racket-lang.org/package/files-viewer,,
1.30231E+17,sarna#3904,2021-03-26,searched by tags :meow:,,
2.66505E+17,notjack#9941,2021-03-26,it's a Google internal thing :(,,
1.30231E+17,sarna#3904,2021-03-26,"oh, then enjoy your good concurrency privilege",,üòÇ (4)
2.66505E+17,notjack#9941,2021-03-26,one time I did do a little experiment to see what a racket version of that framework would look like https://github.com/jackfirth/fiberweb,,
2.66505E+17,notjack#9941,2021-03-26,didn't get very far tho,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-03-27,why do you (if you do) prefer the dynamic typing over static typing variant,,
1.30231E+17,sarna#3904,2021-03-27,of racket or in general?,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-03-27,racket,,
1.30231E+17,sarna#3904,2021-03-27,"- I find its type notation a bit unreadable
- almost all packages I use are untyped
- I don't feel a need to, tbh",,
7.73175E+17,meowüé∫#2842,2021-03-27,I enjoy the flexibility of procedures taking and returning values of arbitrary types.,,
7.73175E+17,meowüé∫#2842,2021-03-27,I don't really have a strong preference either way but I find that statically typed languages tend get in my way when structuring code with little benefit for readability or clean design.,,
1.56786E+17,williewillus#8490,2021-03-27,they occupy different niches for sure,,
7.73175E+17,meowüé∫#2842,2021-03-27,You can have some of the benefits (like hinting optimisations at the compiler or having a procedure's types stand out for readability) with type annotations in dynamic languages.,,
2.14881E+17,Moinate#6061,2021-03-27,"Kind of agreed with Lulu. I prefer types, but I don't want them to get in my way. I've never used a Maybe type in Racket, but it looks ""clunky"" compared to languages that have it baked in. I very much do not like runtime failure vs compile-time detection of problems.",,
2.14881E+17,Moinate#6061,2021-03-27,"Is it correct to say that you cannot have the benefit of ""safety"" in a dynamic language? (Whatever safety is, anyway. ""Make illegal states unrepresentable"" sounds good in theory.)",,
2.64024E+17,Eutro#0016,2021-03-27,we have contracts at least but it's maybe a little bit too much overhead,,
2.64024E+17,Eutro#0016,2021-03-27,where are our zero cost abstractions ü¶Ä,,ü¶Ä (3)
2.14881E+17,Moinate#6061,2021-03-27,"Contract is run-time, right?",,
1.56786E+17,williewillus#8490,2021-03-27,yeah,,
2.14881E+17,Moinate#6061,2021-03-27,"Last I ran into them, I was dismayed that they weren't enforced for intra-module calls, didn't really fit my use-case of protecting me from myself.",,
1.56786E+17,williewillus#8490,2021-03-27,you can make that so,,
1.56786E+17,williewillus#8490,2021-03-27,with define/contract,,
1.56786E+17,williewillus#8490,2021-03-27,I think module boundary is a good medium,,
2.736E+17,Alwinfy#7306,2021-03-27,"to be fair, ""safety"" is a relative term; obviously _anyone_ can find a way to footy shooty with enough effort
it's just that the idea of a Compile Time Type Checker is pretty much one of the best tools we've discovered for it",,
9.9326E+16,Runi#1730,2021-03-27,does typed racket check types at compile time?,,
2.736E+17,Alwinfy#7306,2021-03-27,Yeah,,
9.9326E+16,Runi#1730,2021-03-27,im still quite new to racket but this sounds very analogous to JS vs TS,,
9.9326E+16,Runi#1730,2021-03-27,i spent a long time avoiding TS for reasons very alike those moinate gave above but after deciding to try it out by converting a large project I'm fully in favor of static type analysis,,
9.9326E+16,Runi#1730,2021-03-27,in my case for two main reasons: IDE being able to offer you exact documentation and navigation and function signatures all the time & never letting you run with silly typos,,
9.9326E+16,Runi#1730,2021-03-27,"idk if either of those apply to racket though, does typed racket allow you to see signatures when writing code?",,
9.9326E+16,Runi#1730,2021-03-27,if so i might have to try it,,
2.14881E+17,Moinate#6061,2021-03-27,even untyped racket will show signatures,,
2.14881E+17,Moinate#6061,2021-03-27,start typing and look for the arrow thing in the upper right of DrRacket,,
1.56786E+17,williewillus#8490,2021-03-27,yea the ide support thing is not fully a static/dynamic thing,,
9.9326E+16,Runi#1730,2021-03-27,oh wack never saw it before,,
1.56786E+17,williewillus#8490,2021-03-27,also I guess for lisps traditionally it's much more focused on the repl/live experimentation,,
1.56786E+17,williewillus#8490,2021-03-27,less so for racket,,
1.56786E+17,williewillus#8490,2021-03-27,which I consider a downside,,
9.9326E+16,Runi#1730,2021-03-27,this doesn't seem to work for any user-defined procedures,,
9.9326E+16,Runi#1730,2021-03-27,"which would make it again very analogous to js/ts lol, in js you'll see signatures for library functions but not your own since the ide wont know what the signature is for your own functions unless they have type info",,
2.64024E+17,Eutro#0016,2021-03-27,"Depending on the IDE, you might be able to add type hints in comments that it sees",,
9.9326E+16,Runi#1730,2021-03-27,ah yeah i've seen those before,,
2.14881E+17,Moinate#6061,2021-03-27,"If you use typed racket DrRacket does give you signatures (type info) on your own functions. I'd be interested in learning if it can process comments for ""regular racket"".",,
2.14881E+17,Moinate#6061,2021-03-27,I tried define/contract but DrRacket wasn't getting anything out of that.,,
1.30231E+17,sarna#3904,2021-03-27,"@Runi TS is optional typing, TR is what they call gradual typing
TR inserts contracts on dynamic-static boundaries so stuff is safe even if your whole thing isn't typed
TS doesn't",,
7.73175E+17,meowüé∫#2842,2021-03-27,DrRacket does static analysis,,
9.9326E+16,Runi#1730,2021-03-27,ooh that sounds like a lovely feature,,
9.9326E+16,Runi#1730,2021-03-27,you can have mixed projects in ts but when it comes to dynamic files you have to turn on or off typechecking for the whole file,,
9.9326E+16,Runi#1730,2021-03-27,so its not that workable,,
1.30231E+17,sarna#3904,2021-03-27,"yeah, the downside is that it slows down the program until you put static types on everything. they're working on reducing the overhead",,
9.9326E+16,Runi#1730,2021-03-27,yeah that makes sense,,
2.64024E+17,Eutro#0016,2021-03-27,well TS' types have no real representation at runtime,,
2.64024E+17,Eutro#0016,2021-03-27,bit hard to do any runtime checking there,,
9.9326E+16,Runi#1730,2021-03-27,"yes, but theoretically the compiler could check dynamic modules only for their usage of static modules",,
9.9326E+16,Runi#1730,2021-03-27,although i guess it kinda already does that with implicit any & allowJS enabled,,
5.39603E+17,spacey üåå#7238,2021-03-27,,https://cdn.discordapp.com/attachments/618895179343986688/825489500485844992/IMG_20210327_161522.jpg,
5.39603E+17,spacey üåå#7238,2021-03-27,HtDP came in the mail! :D,,üòÄ (4)
7.73175E+17,meowüé∫#2842,2021-03-27,heck yeah,,
2.14881E+17,Moinate#6061,2021-03-27,"Interesting comment about static languages seen recently on HN: https://news.ycombinator.com/item?id=26607057
Note: I think the post should begin ""In languages _without_ static analysis...""",,
2.14881E+17,Moinate#6061,2021-03-27,"Although presumably static analysis != static typing, in theory.",,
4.66395E+17,oaktownsam#0815,2021-03-27,"?
That's an odd statement.  API changes are generally bad (or very least ""not good"") no matter what your analysis model is.",,
1.56786E+17,williewillus#8490,2021-03-27,agreed,,
1.56786E+17,williewillus#8490,2021-03-27,"it's a philosophy thing
clojure has been amazingly stable and this culture is viral in the ecosystem too",,
6.87833E+17,grey#8674,2021-03-28,That depends on who you ask!,,
5.19322E+17,b1_#8868,2021-03-29,"How do I visualise my programs - as my programs get bigger I'm finding I am losing track of how everything works, especially when refactoring the code? Does anyone use UML (Unified Modelling Language)? Software for this, maybe Visio? I could draw something on paper, but I'd prefer to have something I can save next to the program file.",,
2.64024E+17,Eutro#0016,2021-03-29,what about data structures?,,
2.64024E+17,Eutro#0016,2021-03-29,implementation of them?,,
2.64024E+17,Eutro#0016,2021-03-29,probably C/C++ or C#/Java,,
2.64024E+17,Eutro#0016,2021-03-29,using them? if you learn with Clojure anything else will feel disappointingly unwieldy,,
2.64024E+17,Eutro#0016,2021-03-29,that's my opinion though,,
3.29023E+17,nixin72#3554,2021-03-29,I think UML should have some diagram type for system architecture,,
3.29023E+17,nixin72#3554,2021-03-29,"Agreed that learning to implement data structures in an OOP language is probably easier. If you want to see really well implemented data structures, Clojure has some of the best.",,
1.30231E+17,sarna#3904,2021-03-29,or just use a lisp and build everything based on lists :meow:,,
5.19322E+17,b1_#8868,2021-03-29,"Tx, nixin",,
5.19322E+17,b1_#8868,2021-03-29,*Thx,,
4.66395E+17,oaktownsam#0815,2021-03-29,:hulkout:,,
1.30231E+17,sarna#3904,2021-03-29,:hulksmart:,https://cdn.discordapp.com/attachments/618895179343986688/826142053502681119/image0.jpg,
4.66395E+17,oaktownsam#0815,2021-03-29,"_whispers ""everytime you say the only data structure in lisp is the list part of lisp dies""_",,
1.30231E+17,sarna#3904,2021-03-29,until only lists remain?,,
1.30231E+17,sarna#3904,2021-03-29,:meowleft:,,meow (2)
2.64024E+17,Eutro#0016,2021-03-29,"It took me three reads of that to understand, so here's the same thing with a comma:
> *whispers ""everytime you say the only data structure in lisp is the list, part of lisp dies""*",,üòé (1)
7.94955E+17,Laurent O#6627,2021-03-29,"I think you're sorely mistaken and it is actually
> whispers ""everytime, you say, the only data structure in lisp is, the list part of lisp dies""",,
3.5323E+17,Alex Knauth#4895,2021-03-29,Lists are overrated. Trees are where it's at. And Lisp does trees right,,
2.64024E+17,Eutro#0016,2021-03-29,just implement all your types as closures,,
7.13289E+17,susanoo#7341,2021-03-29,Have you looked into design patterns? Maybe using a more decoupled design would let you separate your code into distinct modules/classes.,,
7.13289E+17,susanoo#7341,2021-03-29,I use draw.io for drawing diagrams but it seems not ideal because it gets out of date pretty fast as you are refactoring.,,
9.9326E+16,Runi#1730,2021-03-29,"in particular i'm a huge fan of SOLID - living by even just the first one (Single Responsibility Principle) immediately leads you to designs in which each module serves exactly one easily understood purpose, and is named or organized such that that purpose is immediately clear when you see the file",,
9.9326E+16,Runi#1730,2021-03-29,works wonders for maintainability down the line since you always know where to go to change something,,
4.62028E+17,StephenD#5938,2021-03-29,"‚ÄúThe module browser shows you the structure of all of the files in your program. It can be opened via the Show menu, or via the Module Browser menu items in the Racket menu.

A module browser window contains a square for each module. The squares are colored based on the number of lines of code in the module. If a module has more lines of code, it gets a darker color. If a module is red, it means that DrRacket did not find a source file for it.‚Äù

https://docs.racket-lang.org/drracket/module-browser.html",,
7.13289E+17,susanoo#7341,2021-03-29,Huh I didn't know about that feature. I just tried to open it and it's been running for a few minute. Seems to be adding every file in Racket üòÜ,,
6.87833E+17,grey#8674,2021-03-29,"I think the module browser is quite handy, but it‚Äôs kinda slow.",,
7.13289E+17,susanoo#7341,2021-03-29,It just finished running (took about 15 minutes) and produced this,https://cdn.discordapp.com/attachments/618895179343986688/826250181749637130/unknown.png,
6.87833E+17,grey#8674,2021-03-29,"When I said, ‚Äúslow‚Äù, I was talking about 30 seconds for a 200 element graph. I‚Äôm not sure what‚Äôs going on there...",,üòÇ (1)
7.13289E+17,susanoo#7341,2021-03-29,I'm guessing it's because I did `(require pict)`,,
2.736E+17,Alwinfy#7306,2021-03-29,ŒªŒªŒªŒªŒªŒªŒªŒª,,
6.87833E+17,grey#8674,2021-03-29,Church-encode IEEE floating-point arithmetic?,,
1.56786E+17,williewillus#8490,2021-03-29,https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fi0.kym-cdn.com%2Fphotos%2Fimages%2Foriginal%2F001%2F170%2F001%2Fc44.png&f=1&nofb=1,,hahayes (3)
1.30231E+17,sarna#3904,2021-03-30,trees as linked lists you mean?,,
1.30231E+17,sarna#3904,2021-03-30,"use closures to implement objects, use objects to implements the rest. genius :meowblushcry:",,
4.66395E+17,oaktownsam#0815,2021-03-30,"http://people.csail.mit.edu/gregs/ll1-discuss-archive-html/msg03277.html  
> The venerable master Qc Na was walking with his student, Anton.  Hoping to
> prompt the master into a discussion, Anton said ""Master, I have heard that
> objects are a very good thing - is this true?""  Qc Na looked pityingly at
> his student and replied, ""Foolish pupil - objects are merely a poor man's
> closures.""
> 
>   Chastised, Anton took his leave from his master and returned to his cell,
> intent on studying closures.  He carefully read the entire ""Lambda: The
> Ultimate..."" series of papers and its cousins, and implemented a small
> Scheme interpreter with a closure-based object system.  He learned much, and
> looked forward to informing his master of his progress.
> 
>   On his next walk with Qc Na, Anton attempted to impress his master by
> saying ""Master, I have diligently studied the matter, and now understand
> that objects are truly a poor man's closures.""  Qc Na responded by hitting
> Anton with his stick, saying ""When will you learn? Closures are a poor man's
> object.""  At that moment, Anton became enlightened.",,pldng (1)
1.30231E+17,sarna#3904,2021-03-30,beautiful story :meowblushcry:,,
2.64024E+17,Eutro#0016,2021-03-30,beautiful,,
4.62028E+17,StephenD#5938,2021-03-30,http://okmij.org/ftp/Scheme/#pure-oo,,
1.30231E+17,sarna#3904,2021-03-30,"this site has some gems:
> Scheme in Perl, or Perl as Scheme
> However unexpected, Perl and Scheme are indeed somewhat close. This article will show nested, improper and circular lists, shared data structures, fixpoint and other combinators, higher-order functions and closures -- all in Perl. Even the location of parentheses is sometimes similar to that in Scheme notation.",,
1.30231E+17,sarna#3904,2021-03-30,üò≥,,
4.62028E+17,StephenD#5938,2021-03-30,Yes lots of cool stuff but I was referring to the ‚ÄòPurely-functional Object-Oriented System‚Äô (in a handful of lines of code).,,
1.30231E+17,sarna#3904,2021-03-30,"ah yes of course, sorry for talking over you, didn't mean to :meowblushcry:",,üíô (1)
4.66395E+17,oaktownsam#0815,2021-03-30,Oleg's site is all ü§Ø,,
4.66395E+17,oaktownsam#0815,2021-03-30,@notjack have you tested Rebellion data types with https://github.com/racket/racket/pull/3627 yet?,,
2.66505E+17,notjack#9941,2021-03-30,@oaktownsam not yet but it's exciting! if you try that out please let me know how it goes,,üëç (1)
4.66395E+17,oaktownsam#0815,2021-03-30,I have to see if how brave I am to run a nightly build,,
6.87833E+17,grey#8674,2021-03-30,"Does anyone have opinions on using ‚Äúname shortening macros‚Äù? I used to hold the strong opinion that names with full words/phrases were preferable, but I‚Äôve written `define/syntax-parse` so many times that it‚Äôs starting to feel cluttered. Now, `def/sp` looks tempting.",,
1.56786E+17,williewillus#8490,2021-03-30,Hmm for me I would just consider the likelihood someone else is going to look at that code in the future,,
1.56786E+17,williewillus#8490,2021-03-30,"personal script? whatever is fine
public library with many potential users/contributors in the future? maybe not",,plusone (1)
2.66505E+17,notjack#9941,2021-03-30,I think it's a sign that there's too many things trying to compete for namespace territory in a very general problem domain,,
6.87833E+17,grey#8674,2021-03-30,That sounds like a tricky thing to fix.,,
6.87833E+17,grey#8674,2021-03-30,Is there a particular reason that Racket doesn‚Äôt really have a notion of namespacing beyond the module system and name mangling?,,
2.66505E+17,notjack#9941,2021-03-30,my take is that it's a problem to fix by ditching or unifying features rather than namespacing them,,ü§î (1)
2.66505E+17,notjack#9941,2021-03-31,adding range sets (immutable sorted sets of non-overlapping ranges) to rebellion! the story thus far: https://github.com/jackfirth/rebellion/pull/494,,
4.66395E+17,oaktownsam#0815,2021-03-31,You can go pretty far with module privacy and name mangling though.,,
4.66395E+17,oaktownsam#0815,2021-03-31,"Ok this is just trying to see how `multidict` would work with `gen:dict`
https://github.com/jackfirth/rebellion/compare/master...samdphillips:multidict-gen-dict",,
4.66395E+17,oaktownsam#0815,2021-03-31,(not a PR yet),,
2.66505E+17,notjack#9941,2021-03-31,"multidict definitely shouldn't implement `gen:dict`, IMO",,
2.66505E+17,notjack#9941,2021-03-31,"the hierarchy I imagine is this:
```
bicollection
 |-- multidict
 |-- dict
```",,
2.66505E+17,notjack#9941,2021-03-31,"there could be a `multidict-as-dict` function which takes a multidict and constructs a `gen:dict` view of the multidict as a dictionary from keys to nonempty sets, but I wouldn't make `multidict` implement that by default",,
2.66505E+17,notjack#9941,2021-03-31,since things like `(dict-set (multidict 'a 1) 'a (set))` would do the wrong thing,,
4.66395E+17,oaktownsam#0815,2021-03-31,Yeah I thought I would run it by you.  They don't quite nest,,
4.66395E+17,oaktownsam#0815,2021-03-31,If I got that far I was going to have `dict-set` error,,
4.66395E+17,oaktownsam#0815,2021-03-31,as that is technically allowable by the interface,,
2.66505E+17,notjack#9941,2021-03-31,I dug up the guava docs on why they didn't do this for `Multimap` and `Map` (the java versions of `multidict` and `gen:dict`) https://github.com/google/guava/wiki/NewCollectionTypesExplained#multimap-is-not-a-map,,
4.66395E+17,oaktownsam#0815,2021-03-31,It does seem like a a multidict could be a set of entries?,,
2.66505E+17,notjack#9941,2021-03-31,"yeah that's doable, but I'd probably do that by making `multidict-entries` return a `gen:set` view rather than copying everything into a hash set",,
4.66395E+17,oaktownsam#0815,2021-03-31,The purpose of gen:set is that you don't copy into a hash set,,
2.66505E+17,notjack#9941,2021-03-31,"right. but I don't really want multidicts to look like sets _by default_, I'd want that to be something users _ask_ for when they want to treat them like sets. so I'd make `multidict-entries` return a struct that implements `gen:set` by delegating to the multidict",,
4.66395E+17,oaktownsam#0815,2021-03-31,I see,,
2.66505E+17,notjack#9941,2021-03-31,collection views are really nice,,
2.66505E+17,notjack#9941,2021-04-01,"woooo binary search!
```scheme
;; Vector A, (A -> Comparison) -> Option A
;; Searches vec for an element for which the search function returns the `equivalent` constant, then
;; returns the index of that element if such an element exists. The vector is assumed to be sorted in
;; a manner consistent with the comparison results returned by the search function. The search is a
;; binary search taking log(n) time. Note that if there are multiple elements for which the search
;; function returns `equivalent`, it is unspecified which of them is chosen. If no elements satisfy
;; the search function, `absent` is returned.
;; Examples:
;; > (vector-binary-search (vector ""a"" ""b"" ""c"" ""d"") (Œª (x) (compare string<=> x ""c"")))
;; (present 2)
(define (vector-binary-search vec search-function)
  (define/guard (loop [lower 0] [upper (sub1 (vector-length vec))])
    (guard (<= lower upper) else
      absent)
    (define middle (quotient (+ lower upper) 2))
    (match (search-function (vector-ref vec middle))
      [(== lesser) (loop lower (sub1 middle))]
      [(== greater) (loop (add1 middle) upper)]
      [(== equivalent) (present middle)]))
  (loop))
```",,üéâ (2)
2.66505E+17,notjack#9941,2021-04-01,"success! range sets can now be queried to check if they contain a value
```scheme
(test-case ""range-set-contains?""
  (define ranges (range-set (singleton-range 1) (closed-range 4 7) (greater-than-range 10)))
  (check-false (range-set-contains? ranges 0))
  (check-true (range-set-contains? ranges 1))
  (check-false (range-set-contains? ranges 2))
  (check-false (range-set-contains? ranges 3))
  (check-true (range-set-contains? ranges 4))
  (check-true (range-set-contains? ranges 5))
  (check-true (range-set-contains? ranges 6))
  (check-true (range-set-contains? ranges 7))
  (check-false (range-set-contains? ranges 8))
  (check-false (range-set-contains? ranges 9))
  (check-false (range-set-contains? ranges 10))
  (check-true (range-set-contains? ranges 11))
  (check-true (range-set-contains? ranges 12)))
```",,
1.30231E+17,sarna#3904,2021-04-01,google has their own java stdlib? interesting. what do you think about stdlib replacements? they kinda fragment the ecosystem imo :meow:,,
2.64024E+17,Eutro#0016,2021-04-01,"it's not really a replacement, it builds upon it",,plusone (1)
2.66505E+17,notjack#9941,2021-04-01,"yeah what Eutro said. It doesn't like, replace the java `Collection<T>` interface or similar ones. it just adds more stuff and fills out gaps.",,
1.30231E+17,sarna#3904,2021-04-01,oh! I see,,
1.30231E+17,sarna#3904,2021-04-01,"so Jane Street's Core is the weird one, replacing OCaml's hashes and whatnot",,concern (1)
1.56786E+17,williewillus#8490,2021-04-01,ocaml and stdlib replacements are wack,,
1.30231E+17,sarna#3904,2021-04-01,"there are separate ones for OCaml and Reason. and there's one that ""unifies"" them. in total I think they have five stdlib replacements :meowblushcry:",,
1.30231E+17,sarna#3904,2021-04-01,"@notjack is there any way to ""extend"" an existing struct so it's a rebellion record?",,
2.66505E+17,notjack#9941,2021-04-01,"@sarna no, but it's possible to derive converters between records and structs, or to derive an equivalent record definition from a struct. Would either of those work?",,
1.30231E+17,sarna#3904,2021-04-01,I'll look up these concepts in the docs. thanks!,,
2.66505E+17,notjack#9941,2021-04-01,"It would require writing some macros and is the kind of thing that makes sense to include support for in rebellion proper, so actually if it seems like this approach would work for you then I would welcome a feature request github issue",,
1.30231E+17,sarna#3904,2021-04-01,"oh, so deriving converters is not in rebellion yet? I think that could work, I'd have to write some toy code though ü§î",,
1.30231E+17,sarna#3904,2021-04-01,because I'm not sure if it'd work if you have existing functions that work on the struct,,
2.66505E+17,notjack#9941,2021-04-01,"right, you would need to insert explicit conversions whenever you had one type and needed the other",,
2.66505E+17,notjack#9941,2021-04-01,but that's just mechanically adding a function call. the useful part that rebellion could do is automatically generate the implementation of those conversion functions.,,
9.9326E+16,Runi#1730,2021-04-01,"some work i'm doing on racket support in other editors, figured i'd share",https://cdn.discordapp.com/attachments/618895179343986688/827341409660174436/signatures.mp4,ü•∞ (1)
9.9326E+16,Runi#1730,2021-04-01,"completions, too",https://cdn.discordapp.com/attachments/618895179343986688/827341499254702110/unknown.png,
3.29023E+17,nixin72#3554,2021-04-01,üòÆ,,
2.66505E+17,notjack#9941,2021-04-01,oh hell yes that's awesome,,
2.66505E+17,notjack#9941,2021-04-01,is this using language server protocol? or something else,,
9.9326E+16,Runi#1730,2021-04-01,"yes, i'm building on https://github.com/jeapostrophe/racket-langserver",,
2.66505E+17,notjack#9941,2021-04-01,oh that is _wonderful_,,
9.9326E+16,Runi#1730,2021-04-01,"ah yeah, one more that got merged some days ago so i forgot about it lol",https://cdn.discordapp.com/attachments/618895179343986688/827347313118806016/112740735-bd335600-8f3c-11eb-8fd7-68e5a30a5212.png,
9.9326E+16,Runi#1730,2021-04-01,the docs link,,
9.9326E+16,Runi#1730,2021-04-01,one of the most useful ide features of drracket imo,,
2.66505E+17,notjack#9941,2021-04-01,yes!! üéâüéâüéâüéâ,,
2.48476E+17,elderica#8169,2021-04-01,nice,,
2.64024E+17,Eutro#0016,2021-04-02,nice,,
2.64024E+17,Eutro#0016,2021-04-02,wonder how well it works with `racket-mode`,,
9.9326E+16,Runi#1730,2021-04-02,"i'm still new to racket, how can i test this?",,
2.64024E+17,Eutro#0016,2021-04-02,"`racket-mode` is an Emacs major mode for Racket, which should probably not step on the toes of the LSP Emacs package",,
1.56786E+17,williewillus#8490,2021-04-02,it probably just works,,
1.56786E+17,williewillus#8490,2021-04-02,racket-mode only provides highlighting/non-semantic stuff,,
1.56786E+17,williewillus#8490,2021-04-02,racket-xp-mode is the mode that actually does inference/semantic analysis,,
9.9326E+16,Runi#1730,2021-04-02,"ah, gotcha, well I'm writing this stuff to the LSP spec so if it causes issues I'd probably sooner assign blame to the LSP emacs package",,
9.9326E+16,Runi#1730,2021-04-02,though now that you mention that i think it is ignoring some of the client capabilities right now.. lol,,
9.9326E+16,Runi#1730,2021-04-02,auto-indenting entire s-expressions when closing,https://cdn.discordapp.com/attachments/618895179343986688/827581209986596864/ontypeformatting.mp4,"üëç (4),‚ù§Ô∏è (2)"
1.30231E+17,sarna#3904,2021-04-02,looks great!,,
5.39603E+17,spacey üåå#7238,2021-04-02,https://www.youtube.com/playlist?list=PLi6VoEKYdlE39FKNE-oz0Z6LYqdmymTss,,
5.39603E+17,spacey üåå#7238,2021-04-02,hope this is the right channel for this! :),,
1.30231E+17,sarna#3904,2021-04-02,"hm, maybe #resources too? I dunno",,
1.30231E+17,sarna#3904,2021-04-02,I really enjoyed your talk @williewillus @Eutro @Alwinfy :meowblush:,,meowblush (2)
1.30231E+17,sarna#3904,2021-04-02,conjure looks super cool too,,
2.29708E+17,wiggles#9999,2021-04-02,oh fuck this is so poggers,,
2.29708E+17,wiggles#9999,2021-04-02,i'm TAing an sicp course rn and i want this for my students so bad,,
2.29708E+17,wiggles#9999,2021-04-02,oh hey i helped with this :3,,
2.66505E+17,notjack#9941,2021-04-02,yeah! :3 thanks,,
2.66505E+17,notjack#9941,2021-04-02,I got the `range-set-encloses?` operation working and now I'm working on `range-subset`,,
1.30231E+17,sarna#3904,2021-04-03,"do you know any examples of racket languages that are more, hmm, lightweight than stuff like rosette or scribble? something like `#lang web-server/insta`, probably even without a `#lang` line",,
6.87833E+17,grey#8674,2021-04-03,Are you just looking for any ‚Äúsmall‚Äù Racket lang?,,
6.87833E+17,grey#8674,2021-04-03,"There‚Äôs slideshow, the student languages are simple, datalog isn‚Äôt big (I think).",,
1.30231E+17,sarna#3904,2021-04-03,for any lang that doesn't change the surface syntax a lot,,
1.30231E+17,sarna#3904,2021-04-03,"datalog may be small, but the syntax is completely different",,
6.87833E+17,grey#8674,2021-04-03,The student languages don‚Äôt change the syntax. R5RS is small and the syntax is the same.,,
1.30231E+17,sarna#3904,2021-04-03,"hmm, I think I expressed myself wrong :meowblushcry: 
I'm looking for something that *adds* mostly functions and macros, but you use them more or less from plain racket. something like ruby's rspec - it's very domain specific (you wouldn't use it for anything besides testing), but it doesn't change ruby's syntax/underlying machinery",,
1.30231E+17,sarna#3904,2021-04-03,like.. more like a library-dsl instead of a whole language,,
6.87833E+17,grey#8674,2021-04-03,"Oh! In that case, you could look at the lexing library.",,
6.87833E+17,grey#8674,2021-04-03,https://docs.racket-lang.org/parser-tools/Lexers.html?q=parser-tools,,
6.87833E+17,grey#8674,2021-04-03,"There‚Äôs rackunit, for testing.
https://docs.racket-lang.org/rackunit/api.html?q=rackunit",,
1.30231E+17,sarna#3904,2021-04-03,oh yes! that's the stuff. thanks a ton!,,
1.30231E+17,sarna#3904,2021-04-03,"it doesn't look very DSL-y for me, but it has some interesting stuff too",,
1.30231E+17,sarna#3904,2021-04-03,"oh my, there's rackunit gui",,
9.9326E+16,Runi#1730,2021-04-03,langserver now has some nice typed racket support,https://cdn.discordapp.com/attachments/618895179343986688/827971838742233128/unknown.png,meow (2)
9.9326E+16,Runi#1730,2021-04-03,previously it would just repeat the summary line for each,,
2.75501E+17,Plane#0324,2021-04-03,thanks for all the hard work (:,,"plusone (2),‚ù§Ô∏è (1)"
2.66505E+17,notjack#9941,2021-04-03,"@Runi I'm skimming the pull requests you've been sending to the langserver impl and I'm wondering, would the `range-set` thing I'm implementing right now be of use to you?",,
9.9326E+16,Runi#1730,2021-04-03,"i did see that you were working on that and thought it looked interesting since i'm dealing with interval maps/ranges, but the trace really needs to associate information to the intervals so i think the map is still necessary",,
2.66505E+17,notjack#9941,2021-04-03,ah gotcha,,
2.66505E+17,notjack#9941,2021-04-03,"would need to be a range map, not a range set",,
9.9326E+16,Runi#1730,2021-04-03,the ability to query an arbitrary position and get the containing interval & data back out is super important for this lol,,
9.9326E+16,Runi#1730,2021-04-03,yeah,,
2.66505E+17,notjack#9941,2021-04-03,@Runi re: https://github.com/jeapostrophe/racket-langserver/pull/37 - I've done some stuff with kill safety before and would be happy to answer any questions,,
9.9326E+16,Runi#1730,2021-04-03,"oh lovely, thanks, i'll probably take you up on that when i get back on the threading stuff",,
9.9326E+16,Runi#1730,2021-04-03,there is actually a decent chance that i can just refactor that part to operate entirely independently of any shared memory (i.e. on its own copy of the text and its own trace) which might just bypass the need to do anything special for kill safety,,
2.66505E+17,notjack#9941,2021-04-03,that definitely sounds good,,
2.66505E+17,notjack#9941,2021-04-03,also because of you I'm installing vscode and giving this a shot :p,,
2.66505E+17,notjack#9941,2021-04-03,"I've never used it before though, what do I need to do to hook it up to the racket langserver?",,
9.9326E+16,Runi#1730,2021-04-03,oh sweet! all you need is to `raco pkg install racket-langserver` and install the Magic Racket extension,,
9.9326E+16,Runi#1730,2021-04-03,the extension loads the langserver from the package manager automatically so that should be it,,
4.66395E+17,oaktownsam#0815,2021-04-03,I was thinking of taking it on a test drive with Neovim,,
9.9326E+16,Runi#1730,2021-04-03,"just be careful with the lang line with the current version, as the langserver is easily sent into an unusable state if it cant read it",,
2.66505E+17,notjack#9941,2021-04-03,this magic racket? https://marketplace.visualstudio.com/items?itemName=evzen-wybitul.magic-racket,,
9.9326E+16,Runi#1730,2021-04-03,yep,,
9.9326E+16,Runi#1730,2021-04-03,this is one of the things fixed in the pr waiting to be merged,,
9.9326E+16,Runi#1730,2021-04-03,"i'd love to know how it works on other editors, i haven't really tried with anything but vscode yet",,
4.66395E+17,oaktownsam#0815,2021-04-03,I have not really used neovim yet so my experience might be questionable.,,
4.66395E+17,oaktownsam#0815,2021-04-03,üòõ,,
9.9326E+16,Runi#1730,2021-04-03,"well honestly one of the top motivators for me working on this is to make the new racketeer experience a lot nicer, since my first entry experience consisted of trying vscode, being super disappointed with the experience, then trying drracket and not being very impressed by the interface and especially lack of workspace features",,‚ù§Ô∏è (4)
9.9326E+16,Runi#1730,2021-04-03,so if you haven't used neovim yet that would put you in the ideal testing audience lol,,
2.66505E+17,notjack#9941,2021-04-03,"@oaktownsam If you figure out how to set it up with neovim, I highly recommend sending a PR to update the langserver project README with setup instructions.",,
9.9326E+16,Runi#1730,2021-04-03,"oh yes, that would be lovely",,
2.66505E+17,notjack#9941,2021-04-03,"editor support is definitely the biggest pain point I hear about from people trying to get into racket so seriously, huge thanks from me for working on this",,
9.9326E+16,Runi#1730,2021-04-03,"absolutely! and this motivation stems largely from a project i'm quite fond of, CodeSpells, being written primarily in racket",,
9.9326E+16,Runi#1730,2021-04-03,"i figure if the new racketeer experience gets improved then that project has a better chance at success, too",,
9.9326E+16,Runi#1730,2021-04-03,all the better if it benefits the community at large,,
2.66505E+17,notjack#9941,2021-04-03,fingers crossed I can eventually get `resyntax` integrated with the langserver too,,
9.9326E+16,Runi#1730,2021-04-03,what does `resyntax` do?,,
2.66505E+17,notjack#9941,2021-04-03,"analyzes racket code and suggests improvements, for example if you write `(first (reverse lst))` it will suggest using `(last lst)` instead",,
2.66505E+17,notjack#9941,2021-04-03,it also suggests using `define` instead of `let`,,
9.9326E+16,Runi#1730,2021-04-03,"oh, that sounds wonderful",,
2.66505E+17,notjack#9941,2021-04-03,here's some examples of changes it suggests: https://github.com/jackfirth/resyntax/blob/master/default-recommendations/let-binding-suggestions-test.rkt,,
9.9326E+16,Runi#1730,2021-04-03,"hm, actually yeah looking at the LSP spec again you can totally just stick this in as a code action",,
9.9326E+16,Runi#1730,2021-04-03,that would be quite handy,,
2.66505E+17,notjack#9941,2021-04-03,"I think I'll open an issue about integrating the two. It's not stable enough yet for that to be a good idea, but it's a long term goal.",,üëç (1)
2.66505E+17,notjack#9941,2021-04-03,https://github.com/jeapostrophe/racket-langserver/issues/40,,
2.66505E+17,notjack#9941,2021-04-03,god this rules,https://cdn.discordapp.com/attachments/618895179343986688/827992717048807465/Screen_Shot_2021-04-03_at_12.47.08_PM.png,meowblushcry (1)
4.66395E+17,oaktownsam#0815,2021-04-03,"Racket Meetup on Gather in 5 minutes üì∫ ‚òéÔ∏è 
https://gather.town/app/wH1EDG3McffLjrs0/racket-users",,
4.62028E+17,StephenD#5938,2021-04-03,@Runi I would like to improve the Neovim section of https://github.com/racket/racket/wiki/IDE%27s-and-text-editors,,
9.9326E+16,Runi#1730,2021-04-03,"seems good, how can i help?",,
4.62028E+17,StephenD#5938,2021-04-03,"Lol. I know **nothing** about Neovim. üò≠

If you could provide some guidance on how best to configure and use Neovim with Racket that would help new racketeers who use Neovim that would be awesome. Neovim is pretty popular and it would be great to help new racketeers.",,
9.9326E+16,Runi#1730,2021-04-03,if i'm being honest i hadn't even heard about neovim until today :P so I may not be the best to help there,,
4.62028E+17,StephenD#5938,2021-04-03,Sorry I just skimmed the thread and misunderstood,,
4.62028E+17,StephenD#5938,2021-04-03,What do you use?,,
9.9326E+16,Runi#1730,2021-04-03,visual studio code,,
1.30231E+17,sarna#3904,2021-04-03,neovim was the one that had conjure,,
1.30231E+17,sarna#3904,2021-04-03,"~~oh nvm, that was a whole different thing too lol~~",,
4.62028E+17,StephenD#5938,2021-04-03,Even better - which plugins work best for you? https://marketplace.visualstudio.com/search?term=Racket&target=VSCode&category=Programming%20Languages&sortBy=Relevance,,
9.9326E+16,Runi#1730,2021-04-03,"so far, Magic Racket is the only one I've used",,
9.9326E+16,Runi#1730,2021-04-03,"however, considering that the one just named ""Racket"" has twice as many downloads despite having a 3 star rating and version 0.0.3, i'd guess that for the benefit of new racketeers we might want to fix that lol",,
6.44304E+17,jos#4553,2021-04-03,"Hi,",,
6.44304E+17,jos#4553,2021-04-03,"I have this list of list '((a 3 50)   
                  (b 6 30)
                  (c 4 40)
                  (d 5 10)",,
6.44304E+17,jos#4553,2021-04-03,is there a way i can return abcd,,
9.9326E+16,Runi#1730,2021-04-03,"since the ""Racket"" extension links to a deleted repository and hasn't been updated in ~three years i've shot off an email to have it removed",,
9.9326E+16,Runi#1730,2021-04-03,hopefully that goes through & the first one people see becomes the one with LSP integration,,
1.30231E+17,sarna#3904,2021-04-03,map car?,,"üó∫Ô∏è (4),üöó (4)"
6.44304E+17,jos#4553,2021-04-03,I'm not sure I understand. I just recently started scheme,,
1.30231E+17,sarna#3904,2021-04-03,oh. `map` is a function that applies a function to every element of a list,,
1.30231E+17,sarna#3904,2021-04-03,and `car` is a function that takes the first element from a list,,
2.64024E+17,Eutro#0016,2021-04-03,"and `car` takes the left hand side of a pair, i.e. the first element of a list",,
1.30231E+17,sarna#3904,2021-04-03,`(car '(a 3 50))` would be `'a`,,
2.64024E+17,Eutro#0016,2021-04-03,!rkt eval `(car '(a 3 50))`,,
8.02004E+17,r16#4581,2021-04-03,a,,üòç (1)
1.30231E+17,sarna#3904,2021-04-03,:meowblushcry: this bot is beautiful,,
6.44304E+17,jos#4553,2021-04-03,Ohh that worked perfectly thank you!,,
1.30231E+17,sarna#3904,2021-04-03,"you're welcome, map is a very useful function! hope you have fun playing with it",,
6.44304E+17,jos#4553,2021-04-03,So I got (a c). Is that a list?,,
2.64024E+17,Eutro#0016,2021-04-03,!rkt eval `(list? '(a c))`,,
8.02004E+17,r16#4581,2021-04-03,#t,,
2.64024E+17,Eutro#0016,2021-04-03,looks like it :wacko:,,üôè (1)
6.44304E+17,jos#4553,2021-04-03,Is there a function to do this (A 1 1 E 1 1) -> ((A 1 1) (E 1 1))? Transform a list to a list of list,,
6.44304E+17,jos#4553,2021-04-03,update: made it work using,,
6.44304E+17,jos#4553,2021-04-03,"```scm
(define (split-by lst n)
   (if (not (empty? lst))
       (cons (take lst n) (split-by (drop lst n) n))
       '() ))
```",,
2.75501E+17,Plane#0324,2021-04-03,there is an existing function in srfi/1 called `split-at` i believe,,
6.87833E+17,grey#8674,2021-04-03,I believe you can find `split-at` in `racket/list`.,,
2.75501E+17,Plane#0324,2021-04-03,oh! yay,,
6.44304E+17,jos#4553,2021-04-03,Is there an easy way to create and output a file? I can't really find much about that,,
6.44304E+17,jos#4553,2021-04-03,I have a fonction that return a number and I want to create a file and write that number inside,,
1.56786E+17,williewillus#8490,2021-04-03,!!racketdoc with-output-to-file,,
8.02004E+17,r16#4581,2021-04-03,https://docs.racket-lang.org/search/index.html?q=with-output-to-file,,üëç (2)
2.66505E+17,notjack#9941,2021-04-03,only one `range-set` operation left to implement: checking whether one range set encloses another range set,,
4.66395E+17,oaktownsam#0815,2021-04-04,!!racketdoc write-to-file,,
8.02004E+17,r16#4581,2021-04-04,https://docs.racket-lang.org/search/index.html?q=write-to-file,,
2.66505E+17,notjack#9941,2021-04-04,range sets are implemented and documented!,https://cdn.discordapp.com/attachments/618895179343986688/828146269499031582/Screen_Shot_2021-04-03_at_10.57.08_PM.png,üéâ (2)
9.9326E+16,Runi#1730,2021-04-04,just finished symbol renaming in the langserver as well :),https://cdn.discordapp.com/attachments/618895179343986688/828151906664185856/rename.mp4,üíñ (2)
2.66505E+17,notjack#9941,2021-04-04,I just saw the pull request :0,,
2.66505E+17,notjack#9941,2021-04-04,awesome,,
9.9326E+16,Runi#1730,2021-04-04,sending this here too because it's a much cooler display of the feature,https://cdn.discordapp.com/attachments/618895179343986688/828154767728574474/rename-struct.mp4,plusone (1)
2.66505E+17,notjack#9941,2021-04-04,yesssss excellent,,
2.66505E+17,notjack#9941,2021-04-04,Resyntax now always preserves all comments üéâ https://github.com/jackfirth/resyntax/pull/105,,"how (3),meow (4)"
7.94955E+17,Laurent O#6627,2021-04-04,Can you force in case there's a gui and you ask the user?,,
4.66395E+17,oaktownsam#0815,2021-04-04,Well I have neovim running with racket-langserver.  Someone already did the hard work of sending the neovim folks how to start the server.,,üéâ (2)
4.66395E+17,oaktownsam#0815,2021-04-04,I mean the real hard part  for me is learning how neovim does things differently from vim and how you're supposed to get to all of the LSP magic,,
2.66505E+17,notjack#9941,2021-04-04,"nope, not yet. in cases where that's wanted I'd probably look into improving the rule in question so it tracks the comments better. Resyntax checks if a rule's replacement preserves all of the source locations that contained comments in the input syntax, so making replacements preserve more from the input using `ORIGINAL-SPLICE` and `ORIGINAL-GAP` can fix the issue.",,
2.66505E+17,notjack#9941,2021-04-04,seems like it's been a good week for projects in this server üòÑ,,
4.66395E+17,oaktownsam#0815,2021-04-04,It is now late and there are a million toggles on my text editor that are going to need to be flipped several times each.,,
4.66395E+17,oaktownsam#0815,2021-04-04,I was able to get this to work in neovim.  It's not as pretty as vscode though.,,
4.66395E+17,oaktownsam#0815,2021-04-04,When it goes to do the rename it fills in the whole accessor name which is annoying because then you get things like rename `struct-accessor` to `struct-struct-accessornewname`,,
4.66395E+17,oaktownsam#0815,2021-04-04,Rather it prompts with the current name and has  the full accessor name there,,
9.9326E+16,Runi#1730,2021-04-04,"interesting, maybe the neovim LSP client doesn't support prepareRename",,
9.9326E+16,Runi#1730,2021-04-04,prepareRename is responsible for telling the client what the valid rename range is,,
4.66395E+17,oaktownsam#0815,2021-04-04,"maybe I figure there are at least 4 places where the bug could be:
1. my config
2. LSP client
3. LSP server
4. LSP spec",,
4.66395E+17,oaktownsam#0815,2021-04-04,"Mystery solved:
```lua
-- TODO(ashkan) use prepareRename
```",,"üòÜ (4),hahayes (1)"
9.9326E+16,Runi#1730,2021-04-04,pfft,,
4.66395E+17,oaktownsam#0815,2021-04-04,https://github.com/neovim/neovim/blob/1186f7dd96b054d6a653685089fc845a8f5d2f27/runtime/lua/vim/lsp/buf.lua#L171,,
9.9326E+16,Runi#1730,2021-04-04,"it sounds like the default behavior is to assume the entire symbol is being renamed, probably as given by the language grammar",,
9.9326E+16,Runi#1730,2021-04-04,not sure if there's a good way to fix that,,
4.66395E+17,oaktownsam#0815,2021-04-04,Yeah that's where I figured maybe my config could be to blame.  I'll see if they have an issue I can apply subtle pressure with.,,
4.66395E+17,oaktownsam#0815,2021-04-04,Oh has the README (which seems to be the only docs) been updated with the new capabilities you have added?,,
9.9326E+16,Runi#1730,2021-04-04,"ah, no",,
9.9326E+16,Runi#1730,2021-04-04,"the rename PR hasnt been merged yet, i'll just push it there",,
4.66395E+17,oaktownsam#0815,2021-04-04,Nice! Thanks!,,
6.44304E+17,jos#4553,2021-04-04,Is there a function to merge a list of list into a list,,
6.44304E+17,jos#4553,2021-04-04,```(1521 225 (laptop hoodie ua_long_sleeve leggings racerback travel_kit)) to (1521 225 laptop hoodie ua_long_sleeve leggings racerback travel_kit)```,,
9.9326E+16,Runi#1730,2021-04-04,"that operation is normally referred to as ""flattening"" the list",,
9.9326E+16,Runi#1730,2021-04-04,and racket does indeed have a flatten procedure: <https://docs.racket-lang.org/reference/pairs.html?q=flatten#%28def._%28%28lib._racket%2Flist..rkt%29._flatten%29%29>,,
2.64024E+17,Eutro#0016,2021-04-04,"be careful, actually",,
2.64024E+17,Eutro#0016,2021-04-04,`flatten` flattens all sublists into the final list,,
6.44304E+17,jos#4553,2021-04-04,Oh boy I think it is a list of pairs,,
6.44304E+17,jos#4553,2021-04-04,I tried flatten but it didn't work,,
2.64024E+17,Eutro#0016,2021-04-04,"well, non-empty lists _are_ pairs",,
2.64024E+17,Eutro#0016,2021-04-04,!rkt eval `(pair? (list 1 2))`,,
8.02004E+17,r16#4581,2021-04-04,#t,,
9.9326E+16,Runi#1730,2021-04-04,"multithreaded syntax checks working reliably now, notice the IDE features like signature help and completions popping up instantly while the error reporting lags behind",https://cdn.discordapp.com/attachments/618895179343986688/828444296835367002/multithread-sample.mp4,
2.66505E+17,notjack#9941,2021-04-05,that is so awesome,,
1.93202E+17,rocketnia#4517,2021-04-05,"it really is, wow!",,
4.66395E+17,oaktownsam#0815,2021-04-05,Jay merged it in a few hours ago.  Time to update my system üòÑ,,
1.30231E+17,sarna#3904,2021-04-05,:meowsmile:,,
1.30231E+17,sarna#3904,2021-04-05,a big day for racket,,
4.66395E+17,oaktownsam#0815,2021-04-05,Sadly racket-langserver does not like to work when you are using neovim over ssh: https://github.com/jeapostrophe/racket-langserver/issues/45,,concern (1)
4.66395E+17,oaktownsam#0815,2021-04-05,"I mean I know why it's doing it, it's just a bit annoying.",,
9.9326E+16,Runi#1730,2021-04-05,"hm, i wonder if we can disentagle it from any gui-dependent packages",,
9.9326E+16,Runi#1730,2021-04-05,"though i dealt with this in an unrelated racket project and just ended up doing some hacky thing to make a ""fake"" x11 display",,
9.9326E+16,Runi#1730,2021-04-05,so that's probably an option too,,
9.9326E+16,Runi#1730,2021-04-05,"ah yeah, XVFB",,
4.66395E+17,oaktownsam#0815,2021-04-05,That something to try.  If I get it to work I'll put it as a workaround in that issue,,
9.9326E+16,Runi#1730,2021-04-05,the way i got my other project to work was installing xvfb (i.e. `apt install xvfb`) & then setting `xvfb-run racket main.rkt` as the daemon command,,
9.9326E+16,Runi#1730,2021-04-05,i assume you already have to configure the langserver command for neovim so it might just be a drop-in replacement and it'll work,,
4.66395E+17,oaktownsam#0815,2021-04-05,yeah going to try that right now,,
4.66395E+17,oaktownsam#0815,2021-04-05,Yep that works.,,
9.9326E+16,Runi#1730,2021-04-05,great!,,
4.66395E+17,oaktownsam#0815,2021-04-05,Does anyone know if there is a way to make the DrRacket formatter to not add spaces on empty lines?,,
6.44304E+17,jos#4553,2021-04-05,Hey is there a prolog server?,,
1.30231E+17,sarna#3904,2021-04-06,"damn, TIL that:
- `sequence-*` return streams
- so I still have to convert them back to the type I had, by hand
- it's ~9x slower than just using the non-sequence function
pain :meowwarp:",,üò¢ (1)
1.56786E+17,williewillus#8490,2021-04-06,unfortunate,,
1.56786E+17,williewillus#8490,2021-04-06,whats the logic? curious how clojure performs in this case,,
1.56786E+17,williewillus#8490,2021-04-06,since all of its data manipulation kind of revolves around coll<->seq conversions,,
1.56786E+17,williewillus#8490,2021-04-06,so they might be more optimized,,
2.14881E+17,Moinate#6061,2021-04-06,"Is anyone familiar with either of the books that showed up recently on the racket-lang.org web site?

Racket Programming the Fun Way - Sample chapter is interesting, but _wide_ ranging. I can't figure out who the audience is. I see conditional expressions appear _after_ `foldl` and `foldr`. I'm guessing this is kind of a broad quick brush through a bunch of stuff with some cool applications as you go.

Don't Teach Coding: Until You Read This Book - It sounds good, but there is **so much** snake oil in this field, VC-backed ""education"" has really made me skeptical. I'd love any positive reviews of this book, the authors, ThoughtSTEM, etc.",,coolspells (1)
9.9326E+16,Runi#1730,2021-04-06,"haven't read the book, but I can vouch that the authors of the second one, Stephen and Lindsey, are great folk! they're the ones doing the Codespells project these days that got me into racket & they're super passionate about the field so I'd be surprised if it's very snake-oily",,"üëç (3),coolspells (1)"
1.30231E+17,sarna#3904,2021-04-06,"I had a list with 100k lists in it, inner lists had 20 random elements
I measured how long it took to do `map map +80` lol",,
2.34164E+17,python#3213,2021-04-06,hey all,,
4.62028E+17,StephenD#5938,2021-04-06,Hey @python welcome!,,
2.34164E+17,python#3213,2021-04-06,i guess i should change my name,,
2.34164E+17,python#3213,2021-04-06,I'm on the slack already by the name of Graham,,
2.34164E+17,python#3213,2021-04-06,"i was looking for a scheme discord server, but i could never find one",,
2.75501E+17,Plane#0324,2021-04-06,welcome (:,,
4.62028E+17,StephenD#5938,2021-04-06,@python there is a link to the scheme discord in #scheme.  But come back if you feel like trying racket.,,
2.34164E+17,python#3213,2021-04-06,I just came from the scheme discord üôÇ,,
2.34164E+17,python#3213,2021-04-06,and i've used racket a bit,,
2.34164E+17,python#3213,2021-04-06,I like it,,
2.34164E+17,python#3213,2021-04-06,it's my second favorite language,,
2.34164E+17,python#3213,2021-04-06,I find it easy to use for competitive programming,,
4.62028E+17,StephenD#5938,2021-04-06,Nice!,,
2.64024E+17,Eutro#0016,2021-04-06,I wish I could use racket for cp :sadhowdy:,,
2.34164E+17,python#3213,2021-04-06,i can't either üòî,,
2.34164E+17,python#3213,2021-04-06,"i just use python, it's the closest i can get",,
2.02953E+17,checkersai#1659,2021-04-06,I've been using racket to do problems on codewars.com,,
2.34164E+17,python#3213,2021-04-06,"im in an official competition and i can only use C, C++, Java, Kotlin, or Python",,üòØ (1)
2.02953E+17,checkersai#1659,2021-04-06,Would it be cheating if you used a language that compiled to one of those?,,
2.02953E+17,checkersai#1659,2021-04-06,also what competition?,,
2.34164E+17,python#3213,2021-04-06,i am competitin in an ICPC divisional competiion,,
1.56786E+17,williewillus#8490,2021-04-06,is there a dispatch form that does constant time dispatch based on a scalar value?,,
1.56786E+17,williewillus#8490,2021-04-06,like imperative `switch` or clojure's `case`,,
1.56786E+17,williewillus#8490,2021-04-06,I tried racket case but it expands to nested if checks,,
1.56786E+17,williewillus#8490,2021-04-06,gonna just make a manual jump table for now,,meowblushcry (1)
2.02953E+17,checkersai#1659,2021-04-06,"How would you write a jump table? Racket doesn't have goto, does it?",,
2.02953E+17,checkersai#1659,2021-04-06,... https://docs.racket-lang.org/control-manual/index.html#%28form._%28%28lib._control%2Fmain..rkt%29._begin%2Fgoto%29%29,,
2.02953E+17,checkersai#1659,2021-04-06,Dear God Racket has goto,,
6.87833E+17,grey#8674,2021-04-06,"Racket can implement *any* control structure: goto, async/await, coroutines, generators, and so on...",,
6.87833E+17,grey#8674,2021-04-06,"As for jump tables, a vector of functions is a straightforward solution. You could sugar it up with a little macro.",,
6.87833E+17,grey#8674,2021-04-06,"Although, that assumes your values are integers and are contiguous.",,
6.87833E+17,grey#8674,2021-04-06,I suppose a hash table of functions would be more general.,,
1.56786E+17,williewillus#8490,2021-04-06,"i just ended up using case
log complexity to dispatch is fine for now",,
4.66395E+17,oaktownsam#0815,2021-04-07,To be fair that's not in the standard library,,
4.66395E+17,oaktownsam#0815,2021-04-07,IIRC Will Clinger wrote a paper about jump table dispatch for case in Scheme years ago.  Not sure of Racket uses that expansion.  It would only expand to a jump table if certain criteria were met.,,
1.30231E+17,sarna#3904,2021-04-07,"continuations are though, no?",,
6.87833E+17,grey#8674,2021-04-07,"Yes, the continuations primitives are found in https://docs.racket-lang.org/reference/cont.html?q=call%2Fcc",,
1.30231E+17,sarna#3904,2021-04-07,"and from wiki:
> Continuations are the functional expression of the GOTO statement, and the same caveats apply.",,
1.30231E+17,sarna#3904,2021-04-07,so maybe racket is the worst language :meowwarp:,,
6.87833E+17,grey#8674,2021-04-07,"Iteration and tail recursion are, essentially, a restricted form of GOTO. The same applies to exceptions and even to returning from a function.",,
6.87833E+17,grey#8674,2021-04-07,"Racket‚Äôs continuations are incredibly powerful (thus, potentially dangerous) but they‚Äôre designed to be well-behaved and enable you to implement useful things that would be virtually impossible, otherwise. (Racket‚Äôs exceptions and threads are implemented with continuations.)",,
1.30231E+17,sarna#3904,2021-04-07,"yeah, I'm just joking around :meowsmile:",,
7.73175E+17,meowüé∫#2842,2021-04-07,`begin/goto` looks a lot like CL's `tagbody`.,,
7.73175E+17,meowüé∫#2842,2021-04-07,It's much less chaotic than unbounded `goto` the way C does it.,,
7.73175E+17,meowüé∫#2842,2021-04-07,"I wonder how expensive it is. If it's cheaper than a tail-recursive loop, it might be worthwhile for low-level macros.",,
7.73175E+17,meowüé∫#2842,2021-04-07,How expensive are delimited continuations in Racket anyway?,,
1.30231E+17,sarna#3904,2021-04-07,"C's goto -> chaotic evil
begin/goto -> lawful evil",,
1.30231E+17,sarna#3904,2021-04-07,on chez scheme they got much cheaper IIRC,,
7.73175E+17,meowüé∫#2842,2021-04-07,Also it should've been called `go-to` IMO :meow:,,
7.73175E+17,meowüé∫#2842,2021-04-07,"In Racket, I mean.",,
1.30231E+17,sarna#3904,2021-04-07,https://blog.racket-lang.org/2020/02/racket-on-chez-status.html,,
1.30231E+17,sarna#3904,2021-04-07,here you can find benchmarks on BC and CS continuations,,
7.73175E+17,meowüé∫#2842,2021-04-07,"Guh, `control` calls it `dotimes` instead of `do-times` too.",,
7.73175E+17,meowüé∫#2842,2021-04-07,How un-Rackety!,,
7.73175E+17,meowüé∫#2842,2021-04-07,/bikeshed,,
7.73175E+17,meowüé∫#2842,2021-04-07,It's implemented in a strange way too: https://github.com/soegaard/control/blob/master/control/dotimes.rkt#L25,,
7.73175E+17,meowüé∫#2842,2021-04-07,"I thought `do` is cheap. Why not just
```Scheme
(define-syntax-rule (do-times n . body)
  (do ((i n (sub1 i)))
      ((zero? i))
    . body))
```?",,
2.14881E+17,Moinate#6061,2021-04-07,no answer to that but i imagine the name is old http://clhs.lisp.se/Body/m_dotime.htm,,
2.14881E+17,Moinate#6061,2021-04-07,"notice your method does not give the same answer for negative n. 
now why would anyone do that?? Idk, but...",,
7.73175E+17,meowüé∫#2842,2021-04-07,Oh yes but it's a CL-ism.,,
7.73175E+17,meowüé∫#2842,2021-04-07,"Like, we use `define-struct` rather than `defstruct`.",,
2.14881E+17,Moinate#6061,2021-04-07,thank goodness üôÇ,,
7.73175E+17,meowüé∫#2842,2021-04-07,Maybe not a great example since Racket now uses `struct` alone. üòõ,,
2.10838E+17,Brick Nermon#1277,2021-04-07,"can someone help me finish this problem, heres my code so far",https://cdn.discordapp.com/attachments/618895179343986688/829386317502611466/unknown.png,
2.10838E+17,Brick Nermon#1277,2021-04-07,"'''(define (sublist last input ignored sorted)
  ...)

(define (merge l1 l2)
  (cond ((null? l1) l2)
        ((null? l2) l1)
        ((< (car l1) (car l2)) (cons (car l1) (merge (cdr l1) l2)))
        (else (cons (car l2) (merge l1 (cdr l2))))))

(define (strand-aux unsorted sorted)
  ...)

(define (strand-sort lst)
  (strand-aux lst (list)))'''",,
7.73175E+17,meowüé∫#2842,2021-04-07,Let's take this to #help.,,
7.73175E+17,meowüé∫#2842,2021-04-07,I added this to the bot:,,
7.73175E+17,meowüé∫#2842,2021-04-07,)newbie,,
8.04819E+17,Jam Mopsribbon#0421,2021-04-07,"Some guidelines on how to get help quickly:
0. Be polite first and foremost.
1. Don't ask to ask. Just ask what's on your mind!
2. Use the help channel for questions or they can get lost in the stream.
3. Don't message people directly to ask your questions. This is a public forum.
4. Don't ask people to do your homework for you. (No, even if you're paying.)
5. Don't post your code as a screenshot. Copy and paste it here, enclosed between triple backticks. (Not apostrophes!)

Next, it will be immensely helpful for people trying to help you if you answer these questions in order:
1. What is the task at hand?
2. How far have you come at solving this task? What do you have so far?
3. What exactly are you struggling with right now?
4. What approaches did you try to solve said problems? Why did they fail?",,
7.73175E+17,meowüé∫#2842,2021-04-07,Is it too long?,,
7.94955E+17,Laurent O#6627,2021-04-07,1. No need to ask whether it's okay to ask. Just ask what's on your mind!,,
7.94955E+17,Laurent O#6627,2021-04-07,Its a bit long yes. Maybe remove 1. Add 'please' before don'ts maybe,,
7.94955E+17,Laurent O#6627,2021-04-07,"2. Describe what you have tried
Remove 4.",,
1.93202E+17,rocketnia#4517,2021-04-07,"I think 5 is an unnecessary barrier. Having to learn an arcane syntax before you can learn another arcane syntax is almost a catch-22.

I think with 3, instead of ""This is a public forum,"" how about ""If you ask where everyone can see it, you're more likely to reach someone who's available to help""?",,
1.93202E+17,rocketnia#4517,2021-04-07,"Perhaps instead of saying people should use backticks, something that explains how to do it would help. Perhaps with a note like ""When you make it easy for us to copy and edit your code, it's easier for us to help.""",,
1.93202E+17,rocketnia#4517,2021-04-07,"Maybe mentioning GitHub gists or Pasterack there would be good too, for larger code samples",,
7.73175E+17,meowüé∫#2842,2021-04-07,These are all good ideas.,,
7.73175E+17,meowüé∫#2842,2021-04-07,But I'd rather keep the screenshot part because each time we have to ask people to post the code itself.,,
1.93202E+17,rocketnia#4517,2021-04-07,"hmm, come to think of it, I don't know much about Pasterack and apparently no one here has ever talked about it",,
7.73175E+17,meowüé∫#2842,2021-04-07,"Yeah, #4 is redundant with rules actually.",,
7.73175E+17,meowüé∫#2842,2021-04-07,#3 needs to also cover that people really don't like unsolicited DMs.,,
1.93202E+17,rocketnia#4517,2021-04-07,"ah, Pasterack has come up sometimes in the Racket Slack, so that's where I heard about it",,
7.73175E+17,meowüé∫#2842,2021-04-07,And some students do it (and delete their messages here) to prevent other students from seeing the solutions.,,
7.73175E+17,meowüé∫#2842,2021-04-07,Not cool...,,
7.73175E+17,meowüé∫#2842,2021-04-07,)version,,
8.04819E+17,Jam Mopsribbon#0421,2021-04-07,This is **Jam Mopsribbon v0.0.0.4.6** (she/they) by `meowüé∫#2842`.,,
7.73175E+17,meowüé∫#2842,2021-04-07,)newbie,,
8.04819E+17,Jam Mopsribbon#0421,2021-04-07,"Some guidelines on how to get help quickly:
0. Be polite first and foremost.
1. No need to ask to ask. Just ask what's on your mind!
2. Use the help channel for questions or they can get lost in the stream.
3. Don't message people directly to ask your questions, especially without asking them first.
4. Don't post your code as a screenshot. Either copy and paste it here or use a pastebin service such as http://pasterack.org/.

It will be immensely helpful for people trying to help you if you answer these questions:
1. How far have you come at solving your task? What do you have so far?
2. What exactly are you struggling with right now?
3. What did you try when attempting to solve said problems? Why did they fail?",,
7.73175E+17,meowüé∫#2842,2021-04-07,How's this?,,
7.73175E+17,meowüé∫#2842,2021-04-07,Maybe I can add a quick guide to copy/pasting code as a separate command.,,
7.94955E+17,Laurent O#6627,2021-04-07,Better. I still think the first 1. could be phrased better like I said above---I find the current sentence unclear,,
7.73175E+17,meowüé∫#2842,2021-04-07,Let's see...,,
7.73175E+17,meowüé∫#2842,2021-04-07,I'd like to keep it a question still.,,
7.73175E+17,meowüé∫#2842,2021-04-07,So I'm trying to think of a plainer way to phrase it.,,
7.94955E+17,Laurent O#6627,2021-04-07,"I'm talking about the other ""1."" :)",,
7.73175E+17,meowüé∫#2842,2021-04-07,Oh,,
7.94955E+17,Laurent O#6627,2021-04-07,'Ask to ask' is ambiguous,,
7.73175E+17,meowüé∫#2842,2021-04-07,"""to ask to ask"" is a stock phrase",,
7.73175E+17,meowüé∫#2842,2021-04-07,But I think it can confuse ESL speakers.,,
7.73175E+17,meowüé∫#2842,2021-04-07,https://dontasktoask.com/,,üëç (1)
7.94955E+17,Laurent O#6627,2021-04-07,Oh okay then. I see. Though i suspect that won't be obvious to everyone,,
7.73175E+17,meowüé∫#2842,2021-04-07,Do you think I should rephrase it still?,,
7.73175E+17,meowüé∫#2842,2021-04-07,Hmm,,
7.94955E+17,Laurent O#6627,2021-04-07,"How about, as a compromise
No need to 'ask to ask'. Just ask!",,
7.94955E+17,Laurent O#6627,2021-04-07,"Hmm, not sure that solves anything",,
7.73175E+17,meowüé∫#2842,2021-04-07,I think that's clearer actually.,,üëç (1)
7.73175E+17,meowüé∫#2842,2021-04-07,)newbie,,
8.04819E+17,Jam Mopsribbon#0421,2021-04-07,"Some guidelines on how to get help quickly:
0. Be polite first and foremost.
1. No need to 'ask to ask'. Just ask what's on your mind!
2. Use the help channel for questions or they can get lost in the stream.
3. Don't message people directly to ask your questions, especially without asking them first.
4. Don't post your code as a screenshot. Either copy and paste it here or use a pastebin service such as http://pasterack.org/.

It will be immensely helpful for people trying to help you if you answer these questions:
1. How far have you come at solving your task? What do you have so far?
2. What exactly are you struggling with right now?
3. What did you try when attempting to solve said problems? Why did they fail?",,
7.73175E+17,meowüé∫#2842,2021-04-07,There are some good texts on asking informative questions but most of them are written in a mildly condescending tone. :meow:,,ü•∂ (2)
2.14881E+17,Moinate#6061,2021-04-07,I would emphasize examples more. Many of the beginner problems stem for a poor understanding of the problem or writing code that could never work on any example. I ‚ù§Ô∏è HtDP design process (of course).,,
6.87833E+17,grey#8674,2021-04-07,"Question: a day or two ago, wasn‚Äôt there a student by the screen-name of ‚Äúharsh‚Äù that was asking for homework help?",,
6.87833E+17,grey#8674,2021-04-07,They appear to have started their own ‚ÄúRacket‚Äù Discord.,,lmao12_o (4)
2.02953E+17,checkersai#1659,2021-04-07,Lmaoooo,,
2.02953E+17,checkersai#1659,2021-04-07,Got a link?,,
2.66505E+17,notjack#9941,2021-04-07,"yup, it's a clone of this one üôÑ",,
1.93202E+17,rocketnia#4517,2021-04-07,reminds me of Pinky and the Brain making their own papier-m√¢ch√© Earth,,meowsmile (2)
1.93202E+17,rocketnia#4517,2021-04-07,"I hope they learn how to program, but I'm not gonna join that, lol",,
2.02953E+17,checkersai#1659,2021-04-07,"It's set up the same way lol, but there's nothing written on any of the channels",,
6.87833E+17,grey#8674,2021-04-07,I don‚Äôt understand why that comes across as something worth doing. It‚Äôs so bizarre.,,
2.02953E+17,checkersai#1659,2021-04-07,This whole situation is bizarre,,
2.02953E+17,checkersai#1659,2021-04-07,"Some guy got kicked out of several lisp discord servers for spamming the same homework question and being rude, and then starts a new lisp server by copying this one",,
2.34164E+17,python#3213,2021-04-07,He's gonna make his own racket discord with blackjack and hookers (and homework),,hahayes (5)
1.30231E+17,sarna#3904,2021-04-07,"out of all lisp servers, he chose ours. isn't it flattering :meowsmile:",,
2.34164E+17,python#3213,2021-04-07,"To be fair, it was the most specific",,
2.34164E+17,python#3213,2021-04-07,Lisp > scheme > racket,,
2.66505E+17,notjack#9941,2021-04-07,"to be clear, he's not just doing this to be random. he's trying to trick people into joining that server instead of this one so he can ask them for help instead. since I assume he's banned from all the normal lisp servers now.",,
2.66505E+17,notjack#9941,2021-04-07,like it's not just for kicks,,
2.34164E+17,python#3213,2021-04-07,I might join the other one to troll him for a bit üòà,,
2.34164E+17,python#3213,2021-04-07,He also got a new account with the same name I noticed,,
3.5323E+17,Alex Knauth#4895,2021-04-07,oh I should block that one too then,,
4.62028E+17,StephenD#5938,2021-04-07,)newbie,,
8.04819E+17,Jam Mopsribbon#0421,2021-04-07,"Some guidelines on how to get help quickly:
0. Be polite first and foremost.
1. No need to 'ask to ask'. Just ask what's on your mind!
2. Use the help channel for questions or they can get lost in the stream.
3. Don't message people directly to ask your questions, especially without asking them first.
4. Don't post your code as a screenshot. Either copy and paste it here or use a pastebin service such as http://pasterack.org/.

It will be immensely helpful for people trying to help you if you answer these questions:
1. How far have you come at solving your task? What do you have so far?
2. What exactly are you struggling with right now?
3. What did you try when attempting to solve said problems? Why did they fail?",,
2.02953E+17,checkersai#1659,2021-04-07,I don't know what's real anymore,https://cdn.discordapp.com/attachments/618895179343986688/829459238384173156/realorno.png,
2.02953E+17,checkersai#1659,2021-04-07,I'm assuming the Stephen that dm'd me is the real one from here,,
4.62028E+17,StephenD#5938,2021-04-07,yes that is me,,
4.62028E+17,StephenD#5938,2021-04-07,thank you @meowüé∫ for creating )newbie,,
4.62028E+17,StephenD#5938,2021-04-07,*I'm in stealth mode*,,üïµÔ∏è (1)
2.14881E+17,Moinate#6061,2021-04-07,kelly it's a little weird to have the invite link to the fake racket discord in chat... but whatever... i get why it's there üôÑ,,
4.62028E+17,StephenD#5938,2021-04-07,I just removed the invite posted by @grey,,
6.87833E+17,grey#8674,2021-04-07,"Sorry, I didn‚Äôt mean to cause trouble! I just meant to show what I saw.",,
7.73175E+17,meowüé∫#2842,2021-04-07,Feedback welcome~,,
4.62028E+17,StephenD#5938,2021-04-07,I‚Äôm assuming that you know a tiny part of me dies each time I see an unbalanced parenthesis ü§£,,
2.02953E+17,checkersai#1659,2021-04-07,What if the command was (newbie),,
2.02953E+17,checkersai#1659,2021-04-07,make the bot itself a lisp interpreter lol,,hahayes (1)
4.62028E+17,StephenD#5938,2021-04-07,No trouble at all - it is much appreciated - and l made a copy before I deleted it. üëè,,
4.62028E+17,StephenD#5938,2021-04-07,Check out #bots,,
4.62028E+17,StephenD#5938,2021-04-07,!rkt eval `(+ 1 2 3)`,,
8.02004E+17,r16#4581,2021-04-07,6,,
4.62028E+17,StephenD#5938,2021-04-07,Go back to about 3-March,,
2.02953E+17,checkersai#1659,2021-04-07,awesome,,
1.93202E+17,rocketnia#4517,2021-04-07,!rkt eval `)newbie`,,ü§£ (2)
8.02004E+17,r16#4581,2021-04-07,":warning: stderr:
eval:1:0: read-syntax: unexpected `)`
  context...:
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:113:0: default-sandbox-reader
   /home/r16bot/r16/evaluator.rkt:28:0
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:571:0: input->code
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:897:14",,
1.93202E+17,rocketnia#4517,2021-04-07,üòá,,
4.62028E+17,StephenD#5938,2021-04-07,You scamp !@rocketnia,,
7.73175E+17,meowüé∫#2842,2021-04-07,I tried to pick something people never use (on purpose) in regular text.,,
7.73175E+17,meowüé∫#2842,2021-04-07,So far it's worked!,,
6.98371E+17,Danish.CS()#9517,2021-04-07,What‚Äôs the best online free editor to use for racket ?,,
2.66505E+17,notjack#9941,2021-04-07,"""online"" as in ""works in a web browser without downloading anything""?",,
2.02953E+17,checkersai#1659,2021-04-07,"The guy renamed his (copycat) discord server to ""CSC600 Racket""",,
2.02953E+17,checkersai#1659,2021-04-07,"Which, after a brief search, looks like a class from San Fran State University",,
2.02953E+17,checkersai#1659,2021-04-07,I won't search beyond that because I don't wanna doxx anyone,,
2.34164E+17,python#3213,2021-04-07,good on him then,,
2.34164E+17,python#3213,2021-04-07,my uni has plenty of discord servers for students looking to help eachother,,
2.34164E+17,python#3213,2021-04-07,"as long as they are transparent about it, it's cool",,
5.49715E+17,Twinky#3035,2021-04-07,Yeah i am in the class,,
5.49715E+17,Twinky#3035,2021-04-07,He is in my classmate and he is a foreign exchange student,,üëç (1)
5.49715E+17,Twinky#3035,2021-04-07,Idk what he was thinking but I told him to rename it because he is basically copying you guys,,üëç (3)
5.49715E+17,Twinky#3035,2021-04-07,Doesnt help to have the same icon for two servers either,,
6.98371E+17,Danish.CS()#9517,2021-04-08,Yes @notjack,,
2.66505E+17,notjack#9941,2021-04-08,@Danish.CS() unfortunately there isn't anything available üò¶,,üò• (1)
6.98371E+17,Danish.CS()#9517,2021-04-08,"Oh ok. What‚Äôs a good yet light weight IDE for racket/scheme?
I downloaded Racket from official website on my mac, it takes up almost 1gb of my memory üò≥",,
2.02953E+17,checkersai#1659,2021-04-08,Vim,,
2.66505E+17,notjack#9941,2021-04-08,"I suggest going for something with langserver support, like VSCode or neovim",,
6.98371E+17,Danish.CS()#9517,2021-04-08,Alright cool. I‚Äôll check those out. Thank you,,
2.34164E+17,python#3213,2021-04-08,"racket (cs) runs on chez scheme with just a bit of C code for racket io, right?",,
2.66505E+17,notjack#9941,2021-04-08,yup,,
2.34164E+17,python#3213,2021-04-08,and chez does fancy jit stuff?,,
1.56786E+17,williewillus#8490,2021-04-08,not sure how fancy it is,,
2.34164E+17,python#3213,2021-04-08,okay,,
2.66505E+17,notjack#9941,2021-04-08,I don't think chez does any jitting,,
2.66505E+17,notjack#9941,2021-04-08,the old racket bc impl had a decent jit though,,
2.34164E+17,python#3213,2021-04-08,i'm thinking about if i could port a scheme implementation to webassembly,,
2.34164E+17,python#3213,2021-04-08,"racket is probably too complicated, but just scheme would probably be doable",,
1.56786E+17,williewillus#8490,2021-04-08,you could probably compile one of the many C impls,,
1.56786E+17,williewillus#8490,2021-04-08,like guile or chicken or chez itself,,
4.66395E+17,oaktownsam#0815,2021-04-08,You would need to do petit chez probably since full blown Chez produces machine code.,,
2.34164E+17,python#3213,2021-04-08,"okay, i thought that might be the case",,
2.34164E+17,python#3213,2021-04-08,it would need to be just an interpreter,,
4.66395E+17,oaktownsam#0815,2021-04-08,Chicken does some stack tricks so not too sure about that.,,
4.66395E+17,oaktownsam#0815,2021-04-08,S7 may be a good one to try it's derived from TinyScheme iirc,,
2.34164E+17,python#3213,2021-04-08,what's that simple one?,,
2.34164E+17,python#3213,2021-04-08,was it scheme48,,
2.34164E+17,python#3213,2021-04-08,i remember reading one that was written to be easy to understand,,
2.34164E+17,python#3213,2021-04-08,probably uses simpler code too,,
4.66395E+17,oaktownsam#0815,2021-04-08,Maybe tinyscheme,,
4.66395E+17,oaktownsam#0815,2021-04-08,It has a few warts though,,
4.66395E+17,oaktownsam#0815,2021-04-08,"scheme48 is cool, but not really well documented and I think is no longer being worked on.",,
4.66395E+17,oaktownsam#0815,2021-04-08,Bogdan has built part of (last I checked) runtime for WASM so you can run WASM programs in Racket,,
4.66395E+17,oaktownsam#0815,2021-04-08,https://github.com/Bogdanp/racket-wasm,,
4.66395E+17,oaktownsam#0815,2021-04-08,Looks like he had to stop working on it around the new year,,
2.34164E+17,python#3213,2021-04-08,really no-one implemented text format reading and writing?,,
2.34164E+17,python#3213,2021-04-08,i figured that would have been easy,,
2.34164E+17,python#3213,2021-04-08,"i was thinking about doing something with wasm in racket, so i might keep this for later",,
3.29023E+17,nixin72#3554,2021-04-08,https://github.com/google/schism,,
2.34164E+17,python#3213,2021-04-08,ooh,,
2.34164E+17,python#3213,2021-04-08,nice,,
4.66395E+17,oaktownsam#0815,2021-04-08,So one positive and negative about wasm is that it's a real stripped down system.,,
2.34164E+17,python#3213,2021-04-08,"it may be very stripped down, but it's better than compiling to javascript üôÇ",,
9.9326E+16,Runi#1730,2021-04-08,sneak peek :),https://cdn.discordapp.com/attachments/618895179343986688/829607323638038538/definition-in-other-files.mp4,"üëÄ (4),üî• (1)"
1.27914E+17,Jame#5763,2021-04-08,are there any data structure/algorithm books/blogs/resources that you know of for Racket?,,
2.66505E+17,notjack#9941,2021-04-08,@Runi oh _hell yeah_,,
2.66505E+17,notjack#9941,2021-04-08,does it work for functions wrapped in `contract-out`?,,
9.9326E+16,Runi#1730,2021-04-08,"it does! via a dirty hack that might be fragile, but I don't quite have the test cases to know lol",,
9.9326E+16,Runi#1730,2021-04-08,"not really much of a hack, just taking a substring of the modified ID",,
9.9326E+16,Runi#1730,2021-04-08,but if any of them don't fit the pattern of `provide/contract-id-(name).N` then it won't work for those,,
2.66505E+17,notjack#9941,2021-04-08,I think there's a long github thread somewhere talking about this problem,,
9.9326E+16,Runi#1730,2021-04-08,"if you find it ping me, I'd be interested in reading other potential solutions",,
2.66505E+17,notjack#9941,2021-04-08,found it! https://github.com/racket/racket/issues/3733,,
2.66505E+17,notjack#9941,2021-04-08,greg needed to solve the same problem for `racket-mode` in emacs,,
9.9326E+16,Runi#1730,2021-04-08,aha,,
9.9326E+16,Runi#1730,2021-04-08,"oh wow, this was fixed not even three weeks ago",,
9.9326E+16,Runi#1730,2021-04-08,that's so recent that I probably don't even have the update,,
2.66505E+17,notjack#9941,2021-04-08,yeah that's the reason it was fresh in my mind üòÖ,,
2.66505E+17,notjack#9941,2021-04-08,8.1 is coming out this month I think,,
9.9326E+16,Runi#1730,2021-04-08,ahh it's not out yet gotcha,,
9.9326E+16,Runi#1730,2021-04-08,"hm... I wonder then if I should even rely on this at all, because I imagine 99% of users won't have the update and it breaking for them would be no good",,
9.9326E+16,Runi#1730,2021-04-08,"I suppose I'll just keep going with my current solution, lol",,
2.34164E+17,python#3213,2021-04-08,it's probably good to have a MSRV of a few months on your project,,
9.9326E+16,Runi#1730,2021-04-08,MSRV?,,
2.34164E+17,python#3213,2021-04-08,oh,,
2.34164E+17,python#3213,2021-04-08,minimum supported racket version,,
2.34164E+17,python#3213,2021-04-08,i realised that's not a racket thing now,,
2.34164E+17,python#3213,2021-04-08,"basicly, in projects say you will support versions of racket that are up to three months old",,
2.34164E+17,python#3213,2021-04-08,"it doesn't work quite so well for slow releases for racket i guess, i got things mixed up a bit",,
9.9326E+16,Runi#1730,2021-04-08,ahh gotcha,,
1.30231E+17,sarna#3904,2021-04-08,"you know HTDP and SICP already, right?",,
1.27914E+17,Jame#5763,2021-04-08,"SICP yeah, HTDP no",,
1.27914E+17,Jame#5763,2021-04-08,"I'll check it out, thank you! @sarna",,
1.30231E+17,sarna#3904,2021-04-08,"I haven't actually read HTDP, but it's specifically for racket and it teaches you how to program well",,
1.30231E+17,sarna#3904,2021-04-08,so it can be a good pick,,
7.73175E+17,meowüé∫#2842,2021-04-08,They take completely different approaches to the same subject. I think there's benefit in reading both of them from cover to cover.,,
7.73175E+17,meowüé∫#2842,2021-04-08,(I haven't finished HtDP though...),,
1.27914E+17,Jame#5763,2021-04-08,is it worth the buy or should I just go through the online 1st edition,,
7.73175E+17,meowüé∫#2842,2021-04-08,The second edition is also online.,,
7.73175E+17,meowüé∫#2842,2021-04-08,http://htdp.org/2020-8-1/Book/index.html,,
1.56786E+17,williewillus#8490,2021-04-08,does racket have static/class methods?,,
1.56786E+17,williewillus#8490,2021-04-08,briefly skimmed the docs but i don't see it,,
2.74358E+17,jesscxc#4846,2021-04-08,@Anything really enjoys HtDP :),,
6.43137E+17,Anything#4621,2021-04-08,"You bet!  This book changed my (programming) life.  Like others are saying up there, HtDP and SICP are two different things.  HtDP is a unique book in the world.  There is no other like it.  I'd say one should read HtDP first and then SICP.  SICP is a definitely a very great book, but I think it's a hard read without having the knowledge acquired from HtDP.",,
2.14881E+17,Moinate#6061,2021-04-08,Check out WeScheme.org. It's not exactly 100% Racket but is very usable for basic programming.,,
1.27914E+17,Jame#5763,2021-04-08,"I definitely read SICP first, lol, got maybe halfway through if not a little more, and then I've helped friends out when they've done scheme puzzles and stuff from Maybe the little schemer (or some other book in that category)",,
1.27914E+17,Jame#5763,2021-04-08,puzzles/problems,,
4.66395E+17,oaktownsam#0815,2021-04-08,No.  You can just use module level functions in many cases.,,
5.19322E+17,b1_#8868,2021-04-08,"Check the resources section of this discord channel for some HtDP related links - I posted some a few weeks ago: HtDP2e exercise solutions, course notes from uni course that used book, etc",,
1.27914E+17,Jame#5763,2021-04-08,heck yeah thank you tons!!!!,,
5.19322E+17,b1_#8868,2021-04-08,np - book is good,,
1.32971E+17,thornAvery#3077,2021-04-08,is this the right place to ask about peoples vim setups?,,
2.66505E+17,notjack#9941,2021-04-08,seems as good a place as any to me (a non-vim user),,
2.29708E+17,wiggles#9999,2021-04-08,i wrote a github action that analyzes pull requests with @notjack's resyntax (<https://github.com/jackfirth/resyntax>) !!,https://cdn.discordapp.com/attachments/618895179343986688/829891128094228501/unknown.png,"üíñ (7),üòç (5)"
2.66505E+17,notjack#9941,2021-04-08,it's SO COOL,,
9.9326E+16,Runi#1730,2021-04-08,that is sweet!!,,
2.29708E+17,wiggles#9999,2021-04-08,next i will maybe figure out why racket-langserver is always crashing :p,,
9.9326E+16,Runi#1730,2021-04-08,"i left a silly bug in there for a few days, try updating it",,
9.9326E+16,Runi#1730,2021-04-08,it *ought* to be fairly stable now,,
2.29708E+17,wiggles#9999,2021-04-08,oops okay,,
3.29023E+17,nixin72#3554,2021-04-08,"Man, between @Runi's work getting Racket working better in vscode, better refactoring tools thanks to@notjack's resyntax and now the CI integration from @wiggles, Racket's tooling is really making good progress the past few months.",,üéâ (8)
1.32971E+17,thornAvery#3077,2021-04-08,i  was wondering what rainbow parenthesis plugin people were using? my old one was clobbering vim-rackets comment highlighting so i was wondering what a good one is,,
3.29023E+17,nixin72#3554,2021-04-08,"Thank you to everyone who's been putting this effort into making improvements for the tooling, it's very impressive the speed at which y'all are making things right now.",,‚ù§Ô∏è (4)
2.66505E+17,notjack#9941,2021-04-08,don't forget the discord bot üôÇ,,
3.29023E+17,nixin72#3554,2021-04-08,*True*,,
3.29023E+17,nixin72#3554,2021-04-08,The Discord bot is pretty awesome,,
2.66505E+17,notjack#9941,2021-04-08,"!rkt eval `(format ""I'm a ~a bot"" ""good"")`",,
8.02004E+17,r16#4581,2021-04-08,I'm a good bot,,cute (3)
3.29023E+17,nixin72#3554,2021-04-08,üòÇ,,
2.66505E+17,notjack#9941,2021-04-08,@thornAvery sorry there aren't more vim users online üò¶,,
2.29708E+17,wiggles#9999,2021-04-08,i'm a vim user but i'm using vs code for racket so i am of no assistance üòî,,
2.66505E+17,notjack#9941,2021-04-08,"!rkt eval
```scheme
#lang racket/base

(define x 1)

(println `(foo . ,x))
(println `(foo . (unquote x)))
(println `(foo unquote x))
```",,concern (1)
8.02004E+17,r16#4581,2021-04-08,"'(foo . 1)
'(foo . 1)
'(foo . 1)",,
2.66505E+17,notjack#9941,2021-04-08,awful code snippet,,
2.29708E+17,wiggles#9999,2021-04-08,"oh, *much* better now, thank you!",,
2.29708E+17,wiggles#9999,2021-04-08,jack ew,,
9.9326E+16,Runi#1730,2021-04-08,good to hear!,,
4.66395E+17,oaktownsam#0815,2021-04-08,"I use vim, but I don't use rainbow parens sorry.",,
4.66395E+17,oaktownsam#0815,2021-04-08,I have gotten very good at counting parens,,
2.66505E+17,notjack#9941,2021-04-08,pet peeve resyntax rule: https://github.com/jackfirth/resyntax/issues/123,,"hahayes (1),üëç (1)"
4.66395E+17,oaktownsam#0815,2021-04-08,I think of you every time I use quasi-quote @notjack .,,
4.66395E+17,oaktownsam#0815,2021-04-08,And then I end up not using quasiquote,,üòÜ (1)
3.5323E+17,Alex Knauth#4895,2021-04-09,"if it were me I would suggest `list` whether it was quasiquoting-with-immediate-unquoting or any quasiquote or even quote, but I am biased by my previous bad experiences with quote and eval",,
6.87833E+17,grey#8674,2021-04-09,I generally only use (quasi)quotation when working with syntax objects.,,
1.93202E+17,rocketnia#4517,2021-04-09,"that's basically the case here; it is part of code-generating code, but the code just so happens to be a datum rather than syntax, and this particular part of the code just so happens to be a single list",,
2.64024E+17,Eutro#0016,2021-04-09,but when you're golfing you need to save those extra characters!,,
2.74358E+17,jesscxc#4846,2021-04-09,"yes, I love this soooooooooo much",,
2.74358E+17,jesscxc#4846,2021-04-09,I think tooling and ecosystem are some of the biggest factors for accelerating a language,,
2.74358E+17,jesscxc#4846,2021-04-09,is there a way i can use the Racket bot on my server? :3,,
1.56786E+17,williewillus#8490,2021-04-09,you can install it yourself https://git.sr.ht/~williewillus/r16/,,"blobaww (1),üëç (1)"
2.29708E+17,wiggles#9999,2021-04-09,"> The quasiquoting is doing nothing at all here
um it's saving precious characters?? you think i have all day to type out little programs? (for this message we are ignoring my employment spending all day typing out little programs)",,üòÜ (1)
2.29708E+17,wiggles#9999,2021-04-09,"polishing up the resyntax github action with @notjack's suggestions!
link in lieu of image description: <https://github.com/9999years/racket-package-resyntax-action/pull/1#pullrequestreview-632676265>",https://cdn.discordapp.com/attachments/618895179343986688/830144979253854238/unknown.png,
4.62028E+17,StephenD#5938,2021-04-09,"There is some guidance at https://docs.racket-lang.org/guide/Vim.html
,but I suspect you have seen that. 

It might be worth asking on the Racket Slack https://racket-slack.herokuapp.com/",,
4.62028E+17,StephenD#5938,2021-04-09,What vs code plugins do you use for Racket?,,
2.29708E+17,wiggles#9999,2021-04-09,"i use magic racket
https://marketplace.visualstudio.com/items?itemName=evzen-wybitul.magic-racket",,
2.29708E+17,wiggles#9999,2021-04-09,i am not particularly impressed with the vs code experience (particularly the vim layer) but i am very picky with editors / am pretty burned out on linux rn so various things in my setup are subpar rn,,üò¢ (3)
4.62028E+17,StephenD#5938,2021-04-09,Thanks @wiggles,,
2.75501E+17,Plane#0324,2021-04-09,i have been using https://www.vim.org/scripts/script.php?script_id=4176,,
2.75501E+17,Plane#0324,2021-04-09,although i think i edited it a little,,
2.75501E+17,Plane#0324,2021-04-09,also i'm using these colors,,
2.75501E+17,Plane#0324,2021-04-09,"```
\       '#afff00',
\       '#87ffff',
\       '#5fafd7',
\       '#d18aff',
\       '#ff7bbb',
\       '#dd0000',
\       '#ff8700',
\       '#ffd700',
\       '#a1db00',
\       '#87d7af',
\       '#1f5bff',
\       '#af5fff',
\       '#ff4ea3',
\       '#a40000',
\       '#ff5d17',
\       '#c4a000',
\       '#5faf00',
\       '#00d7af',
\       '#005f87',
\       '#9a08ff',
\       '#ff1f8b',
\       '#ef2929',
\       '#ffaf5f',
\       '#fce94f',
```",,
2.75501E+17,Plane#0324,2021-04-09,looks like this,https://cdn.discordapp.com/attachments/618895179343986688/830165814044262450/unknown.png,cooluwu (1)
7.73175E+17,meowüé∫#2842,2021-04-09,pretty~,,
1.33131E+17,Lord Windy#7673,2021-04-09,"Gosh, that is gorgeous",,
1.33131E+17,Lord Windy#7673,2021-04-09,Is that a vim with a picture in the background?,,
5.39603E+17,spacey üåå#7238,2021-04-09,dang that's some pretty looking code!,,
5.39603E+17,spacey üåå#7238,2021-04-09,and not just because of the colors,,
2.10838E+17,Brick Nermon#1277,2021-04-09,"``` (define (tree-equal  Ta Tb)
  (cond ((and (null? Ta) (null? Tb)) #t)
        ((or   (null? Ta) (null? Tb)) #f)
        (else (and (eq? (value Ta) (value Tb))
                   (tree-equal (left   Ta) (left   Tb))
                   (tree-equal (right Ta) (right  Tb ))))))

(define (tree-map T f)
  (if (null? T)
      ‚Äô()
      (make-tree (f (value T))
                 (tree-map (left T) f)
                 (tree-map (right T) f))))

(define (tree-sort  elements)
  (define (make-tree  value  left  right) (list  value  left  right ))
  (define (value  tree) (car  tree))
  (define (left  tree)   (cadr  tree))
  (define (right  tree) (caddr  tree))
  (define (insert  element T)
    (cond ((null? T) (make-tree  element  ‚Äô()  ‚Äô()))
          ((< element (value T)) (make-tree (value T)
                                            (insert  element (left T))
                                            (right T)))
          (else (make-tree (value T)
                           (left T)
                           (insert  element (right T))))))
  (define (insert-list  insert-elements T)
    (if (null? insert-elements)
        T
        (insert-list (cdr  insert-elements)
                     (insert (car  insert-elements) T))))
  (define (sort-extract T)
    (if (null? T)
        ‚Äô()
        (append (sort-extract (left T))
                (list (value T))
                (sort-extract (right T)))))
  (sort-extract (insert-list  elements  ‚Äô())))
```",,
2.10838E+17,Brick Nermon#1277,2021-04-09,can someone tell me why that code gives me this error?,,
2.10838E+17,Brick Nermon#1277,2021-04-09,"*** ERROR: Compile Error: syntax-error: malformed if: (if (null? T) ‚Äô () (make-tree (f (value T)) (tree-map (left T) f) (tree-map (right T) f)))
""./main.sc"":8:(define (tree-map T f) (if (null? T) ...",,
1.93202E+17,rocketnia#4517,2021-04-09,"looks like you're using a ""smart quote"" instead of the usual apostrophe for your `'()`",,
1.93202E+17,rocketnia#4517,2021-04-09,"this switcheroo can happen when people write code in a word processor or publish it with WordPress, because those tools try to make the quotation marks prettier",,
1.93202E+17,rocketnia#4517,2021-04-10,"Actually, this particular switcheroo looks like the kind of thing that happens in academic papers a lot, since TeX understands `` ` '`` as the left and right single quotes",,
1.93202E+17,rocketnia#4517,2021-04-10,er,,
1.93202E+17,rocketnia#4517,2021-04-10,"understands

```
` '
```",,
2.10838E+17,Brick Nermon#1277,2021-04-10,so place ` ' before the parenthesis?,,
1.93202E+17,rocketnia#4517,2021-04-10,no,,
1.93202E+17,rocketnia#4517,2021-04-10,"using a find-and-replace feature of your editor, search your code for ‚Äô and replace it with '",,
1.93202E+17,rocketnia#4517,2021-04-10,that fix needs to be made in several places,,
2.10838E+17,Brick Nermon#1277,2021-04-10,"Ahh thank you, it works now üôÇ",,oh_yes (1)
1.93202E+17,rocketnia#4517,2021-04-10,"oh, I'm glad! :)",,
2.14881E+17,Moinate#6061,2021-04-10,I wonder if the teaching languages should activate a warning for smart quotes... no idea how prevalent this problem is.,,
1.93202E+17,rocketnia#4517,2021-04-10,I think that's a great idea,,
2.10838E+17,Brick Nermon#1277,2021-04-10,"Is scheme a commonly used coding language? I've never even heard of it, but i'm starting to teach myself how to use it.",,
3.29023E+17,nixin72#3554,2021-04-10,"It's not super common, no. It's used more for hobbies, academia and teaching than in like, business applications and stuff",,
2.10838E+17,Brick Nermon#1277,2021-04-10,Do you know the benefits of actually learning how to use scheme?,,
3.29023E+17,nixin72#3554,2021-04-10,"A lot of people will tell you different things about why you should learn Scheme. You'll hear people rant about ""enlightenment"" and how scheme (or more generally lisp) will make you a better programmer and whatnot, or maybe how Lisp is some language given to us by god (there's an actual article about that) and all sorts of crap. Scheme is a super fascinating language, but I personally don't understand those claims. I love Lispy languages, have been using them for almost 2 years now for hobby projects, and honestly, I use them because they feel more natural to me. The way of expressing programs in Scheme, Clojure or whatever feels more natural to me than Java or Python. I love the syntax, I love functional programming, and I love dynamic languages. Scheme, Racket and Clojure fit the bill for me on those criteria. And honestly, they're fun. I enjoy programming more when using them.",,
6.87833E+17,grey#8674,2021-04-10,"To be fair, there‚Äôs a cozy corner of the private sector for people who want to write Scheme for networking equipment.",,
3.29023E+17,nixin72#3554,2021-04-10,"I've heard that before. Also heard people claim that there's stuff written in Scheme as part of iOS ü§∑ idk if it's true, but if it is, you don't see job postings for Scheme.",,
6.87833E+17,grey#8674,2021-04-10,"I mean, I assume that Cisco uses Chez Scheme for something other than a side project.",,
3.29023E+17,nixin72#3554,2021-04-10,My step-dad works for Cisco as an engineer and they own and maintain Chez Scheme and he's never met anyone there using Scheme. I even asked him if he could ask around about Scheme usage,,
3.29023E+17,nixin72#3554,2021-04-10,Cisco is of course a giant company,,
3.29023E+17,nixin72#3554,2021-04-10,There could be several degrees of separation between him and a scheme programmer,,
3.29023E+17,nixin72#3554,2021-04-10,"But wherever they use scheme, it seems somewhat tucked away",,
6.87833E+17,grey#8674,2021-04-10,"Well, now I have a vision of Secret Schemers who gather in the basement of Cisco HQ, dressed like wizards from the SICP book, to argue about macros and `call/cc`.",,"üòÑ (3),hehe (1),üßô (1)"
3.29023E+17,nixin72#3554,2021-04-10,I like this vision very much.,,
6.87833E+17,grey#8674,2021-04-10,"I enjoy Racket because the macro system is the state-of-the-art (Racket introduced many macro concepts/technologies that are now being adopted by other/new languages). If I want to build a complex feature or experiment make a little programming language, Racket makes that really easy.

Aside from the language extension aspect, it‚Äôs always useful to try out new languages/libraries/techniques so that you can gain more experience with different perspectives on programming.

The short answer: I think Racket is fun üòÑ",,‚ù§Ô∏è (3)
2.75501E+17,Plane#0324,2021-04-10,"there was a problem a few months ago with a zero-width space preventing the code from working, which can be inserted for somewhat similar reasons",,
2.75501E+17,Plane#0324,2021-04-10,https://discord.com/channels/571040468092321801/667522224823205889/761421299418923068,,
2.75501E+17,Plane#0324,2021-04-10,and there was another similar error with dashes and en dashes,,
2.75501E+17,Plane#0324,2021-04-10,https://discord.com/channels/571040468092321801/667522224823205889/761555739381727253,,
2.75501E+17,Plane#0324,2021-04-10,so a whole class of problems might potentially be avoided if that were accounted for,,
2.75501E+17,Plane#0324,2021-04-10,certainly this is not the first time someone's had that issue,,
1.30231E+17,sarna#3904,2021-04-10,does anyone know how rosette works? does it compile to racket?,,
1.30231E+17,sarna#3904,2021-04-10,"ohh
> To verify or synthesize code, Rosette compiles it to logical constraints solved with off-the-shelf SMT solvers.",,
7.94955E+17,Laurent O#6627,2021-04-10,"Sorawee on slack is working on Rosette, I'm sure he can answer all your questions (there)",,
1.30231E+17,sarna#3904,2021-04-10,thanks! I don't have any specific ones for now :meow:,,
4.66395E+17,oaktownsam#0815,2021-04-10,"@sarna He gave a talk at RacketFest 2021 about Rosette 4.0
https://www.youtube.com/watch?v=PrlDufHRFnk&list=PLi6VoEKYdlE39FKNE-oz0Z6LYqdmymTss",,"üôè (1),üç¥ (1)"
4.62028E+17,StephenD#5938,2021-04-10,There is a rosette project template at https://github.com/racket-templates/rosette-template,,üëç (1)
4.62028E+17,StephenD#5938,2021-04-10,"The template contains many Rosette example files.

synth.rkt: a sample program synthesizer (synthesis query) taken from Building a Program Synthesizer by James Bornholt.
verify.rkt: a sample program verifier (verification query).
sudoku.rkt: a sample Sudoku solver (angelic execution query)
Detailed description is given in each file.",,
4.62028E+17,StephenD#5938,2021-04-10,"I don‚Äôt know about scheme specifically but I‚Äôve learnt a lot with Racket. A lot of that can be attributed the people ü•∞.

I like racket because 
* it is easy to learn 
* the standard library and package catalog mean it can do most things. 
* It is relatively fast - not `c` fast - but fast enough. 
* I can jump between windows, Linux, macOS or even a Raspberry Pi and my code works.",,
1.30231E+17,sarna#3904,2021-04-10,"thanks, I'll check it out :)",,
1.30231E+17,sarna#3904,2021-04-10,oh neat! that'll help :),,
4.66395E+17,oaktownsam#0815,2021-04-10,Ryan Culpepper http client pkg wip ... https://github.com/rmculpepper/racket-http123,,
1.56786E+17,williewillus#8490,2021-04-10,so are private/ modules just convention?,,
1.56786E+17,williewillus#8490,2021-04-10,just curious what the practice is,,
2.66505E+17,notjack#9941,2021-04-10,"they're just convention, yeah",,
2.66505E+17,notjack#9941,2021-04-10,"when looking at a module name like `foo/bar/baz`, there's 3 categories:
- it's got `private` in it somewhere, definitely don't use it unless you know the risks
- it's documented, definitely fine to use
- neither of the above, who knows if it's stable or not",,
2.14881E+17,Moinate#6061,2021-04-11,the fact that `in-generator` does not take as input the results of calling `(generator () ...)` just seems wrong/very confusing to me. at least it's documented but I was like ?@#!#@,,
2.34164E+17,python#3213,2021-04-11,in what way are they different?,,
2.14881E+17,Moinate#6061,2021-04-11,"""they"" = ?",,
2.34164E+17,python#3213,2021-04-11,what's the difference between `in-generator` and `generator` that you are talking about?,,
2.34164E+17,python#3213,2021-04-11,sorry for the misunderstanding,,
2.14881E+17,Moinate#6061,2021-04-11,"well I thought you would do
```
(define my-gen (generator () ... ))
(for/list ([x (in-generator (my-gen))]) ...)
```
but that was wrong. I don't have an understanding of the point of view where that makes sense.",,
2.34164E+17,python#3213,2021-04-11,oh,,
2.14881E+17,Moinate#6061,2021-04-11,Even `(in-generator my-gen)` would make sense to me. but its still wrong.,,
2.34164E+17,python#3213,2021-04-11,the `in-generator` macro is for defining a generator inline,,
2.34164E+17,python#3213,2021-04-11,to use a generator in a for loop you want to use `in-producer`,,
2.14881E+17,Moinate#6061,2021-04-11,"yeah, but `(in-list ...)` isn't for building a list in-line",,
2.34164E+17,python#3213,2021-04-11,ü§∑,,
2.34164E+17,python#3213,2021-04-11,didn't get enough bikeshedding i guess,,
2.14881E+17,Moinate#6061,2021-04-11,lol,,
2.34164E+17,python#3213,2021-04-11,it was a little confusing to me at first too,,
2.34164E+17,python#3213,2021-04-11,how to consume a generator,,
2.14881E+17,Moinate#6061,2021-04-11,i found in-producer before i realized i better learn the difference between a generator sequence and stream before jumping in,,
2.34164E+17,python#3213,2021-04-11,a generator is a procedure you call over and over again to produce values,,
2.34164E+17,python#3213,2021-04-11,a sequence is anything that a `for` construct takes,,
2.34164E+17,python#3213,2021-04-11,and a stream is a special type of object that act as iterables and can be used as sequences,,
2.14881E+17,Moinate#6061,2021-04-11,is there no `generator->stream` because it would be useless as both basically serve the same purpose (more or less),,
2.34164E+17,python#3213,2021-04-11,it would be trivial to implement generator->stream if you wanted,,
2.34164E+17,python#3213,2021-04-11,"also, you could just do it with `for/stream` pretty easily",,
2.14881E+17,Moinate#6061,2021-04-11,"makes sense, thanks, i'll go try to make something with it",,
2.34164E+17,python#3213,2021-04-11,np,,
4.66395E+17,oaktownsam#0815,2021-04-11,`(define (generator->stream gen) (sequence->stream (in-producer gen)))`,,
4.66395E+17,oaktownsam#0815,2021-04-11,You may need to pass a sentinel value to `in-producer`,,
4.66395E+17,oaktownsam#0815,2021-04-11,"```
#lang racket/base

(require racket/generator
         racket/sequence)

(define (range n)
  (generator ()
   (define (next i)
     (when (< i n)
       (yield i)
       (next (add1 i))))
   (next 0)))
     
(define (generator->stream g)
  (sequence->stream
   (in-producer g void?)))

;; demo - use in-range if you really want to iterate on a range
(for/list ([x (generator->stream (range 10))]) x)
```",,
1.93202E+17,rocketnia#4517,2021-04-11,that mismatch between `in-generator` and `generator` has bothered me too,,
2.66505E+17,notjack#9941,2021-04-11,same,,
4.66395E+17,oaktownsam#0815,2021-04-11,"Yeah I've never really ""gotten"" `in-generator` I guess if you want to make a sequence without going through `in-producer`?",,
2.34164E+17,python#3213,2021-04-11,from what i can tell `(in-generator ...)` is basicly `(in-producer (generator () ...))`,,
2.34164E+17,python#3213,2021-04-11,just allows you to declare a generator inline with the sequence syntax,,
2.66505E+17,notjack#9941,2021-04-11,which like. who the hell declares a generator inline in a `for` clause? have you seen how little room those things have?,,"ü§£ (1),thistbh (2)"
3.55368E+17,tgruben#2648,2021-04-12,"noob warning...  my high level desire is to perform bit operations( and,or,not,xor) on a chunk of uint64 words(1024), i am thinking i may need to do it as a ctype array (uint64), but i am open to suggestions.",,
3.55368E+17,tgruben#2648,2021-04-12,"i've implemented all my desired behavior in go, but was now wanting to mimic actions in lisp more as an exercise in learning lisp",,
4.66395E+17,oaktownsam#0815,2021-04-12,Without having to do a lot of low level FFI stuff the easiest way is to load the data into a list or vector and use a for loop with the bitwise operations. https://docs.racket-lang.org/reference/generic-numbers.html?q=bitwise-operations#%28part._.Bitwise_.Operations%29,,
4.66395E+17,oaktownsam#0815,2021-04-12,A nicer interface for such low level things would probably let you manipulate `bytes?` as uniform arrays,,üëç (1)
4.66395E+17,oaktownsam#0815,2021-04-12,Went to install resyntax and got a ton of errors because my rebellion was out of date üò¶,,üò¶ (1)
1.30231E+17,sarna#3904,2021-04-12,would be nice to have something like virtualenvs/switches/bundles,,
2.34164E+17,python#3213,2021-04-12,that might be doable,,
2.34164E+17,python#3213,2021-04-12,i don't think it should be too hard,,
2.66505E+17,notjack#9941,2021-04-12,"a much simpler fix would be for me to actually start using the `version` field of `info.rkt` in rebellion so that resyntax can declare a lower bound, and then `raco pkg` would have figured out it had to update `rebellion` when sam installed resyntax üòÖ",,
2.66505E+17,notjack#9941,2021-04-12,@oaktownsam can you open an issue in rebellion about versioning? seems like this is a sign that The Time Has Come and that rebellion has enough users that this is a thing I should start doing now,,üëç (1)
4.66395E+17,oaktownsam#0815,2021-04-12,Working on it.  MFlatt gave me some pointers a couple weeks ago. I have a package I should publish this week.  Here's the (literal) gist of how it works https://gist.github.com/samdphillips/8afaf8f2332e1ba57c4dc634097c2a8a,,
4.66395E+17,oaktownsam#0815,2021-04-12,If I get a moment this afternoon I'll just publish the undocumented but works version I have.  It's not much different from the gist besides setting up a raco command.,,
1.30231E+17,sarna#3904,2021-04-12,ohh that's super cool!,,
1.30231E+17,sarna#3904,2021-04-12,there are so many quality-of-life improvements for racket lately :meowsmile: it's awesome,,
2.34164E+17,python#3213,2021-04-12,about how long does racket take to compile?,,
4.66395E+17,oaktownsam#0815,2021-04-12,a while,,
2.34164E+17,python#3213,2021-04-12,okay,,
2.34164E+17,python#3213,2021-04-12,under an hour?,,
4.66395E+17,oaktownsam#0815,2021-04-12,It's faster if you get the source + prebuilt whatnot,,
2.34164E+17,python#3213,2021-04-12,i got `racket-8.0-src.tgz`,,
2.34164E+17,python#3213,2021-04-12,idk if that's it,,
4.66395E+17,oaktownsam#0815,2021-04-12,source + built packages is what it is called,,
2.34164E+17,python#3213,2021-04-12,"the racket package for archlinux was out of date, so i learned how to update an arch package to day",,
4.66395E+17,oaktownsam#0815,2021-04-12,If you are on a supported architecture you may want to try the linux installer,,
4.66395E+17,oaktownsam#0815,2021-04-12,That's what I use,,
2.34164E+17,python#3213,2021-04-12,I just built it from the normal arch package build,,
2.34164E+17,python#3213,2021-04-12,I figured I wouldn't mess with things,,
4.66395E+17,oaktownsam#0815,2021-04-12,(I don't use arch tho.),,
2.34164E+17,python#3213,2021-04-12,What do you use?,,
2.64024E+17,Eutro#0016,2021-04-12,It takes me 20 minutes to compile from source + prebuilt,,üëç (1)
2.64024E+17,Eutro#0016,2021-04-12,"CS, that is",,
4.66395E+17,oaktownsam#0815,2021-04-12,Amazon Linux and XUbuntu,,üëç (1)
2.64024E+17,Eutro#0016,2021-04-12,BC was like 5 minutes :wacko:,,
2.34164E+17,python#3213,2021-04-12,oh nice,,
2.34164E+17,python#3213,2021-04-12,"well, i think im on CS now",,
4.66395E+17,oaktownsam#0815,2021-04-12,"A lot of the build time is docs and compiling the base collects, when you don't have the prebuilt",,
2.14881E+17,Moinate#6061,2021-04-12,"yeah, under an hour, but not under 15 min",,üëç (1)
2.34164E+17,python#3213,2021-04-12,"i got my updated racket package, it worked perfectly üôÇ",,
4.66395E+17,oaktownsam#0815,2021-04-12,ugh where does racket put launchers when installing to user scope ?,,
4.66395E+17,oaktownsam#0815,2021-04-12,I installed resyntax and now I can't run it,,
2.66505E+17,notjack#9941,2021-04-12,some weird as hell place ><,,
2.66505E+17,notjack#9941,2021-04-12,chime in on https://github.com/racket/racket/issues/3708 in support of the racket installer setting up PATH stuff for user scoped binaries automatically,,
4.66395E+17,oaktownsam#0815,2021-04-12,Ok.  Is there a reason not use register resyntax as a raco command?,,
2.66505E+17,notjack#9941,2021-04-12,"no, other than that I can't make up my mind about whether or not `raco resyntax analyze` is too wordy",,
2.66505E+17,notjack#9941,2021-04-12,and the idea of making it a raco command just because racket doesn't try very hard to make launchers easy to use leaves a sour taste in my mouth,,
4.66395E+17,oaktownsam#0815,2021-04-12,I think I saw that issue when it was only about 10 comments long,,
4.66395E+17,oaktownsam#0815,2021-04-12,Lovely how after 20 years the 4-5 dominant unix distributions (incl MS and Apple) cannot decide on how to do some fairly basic stuff.,,
4.66395E+17,oaktownsam#0815,2021-04-12,"Probably not too helpful a comment, but I haven't needed to install python on a unix system in the past 10 years.  It was just there.  Python3  has kinda been messing that up, but it's either already installed or in the OS package system",,
2.66505E+17,notjack#9941,2021-04-12,Yeah the python situation is better in that way,,
4.66395E+17,oaktownsam#0815,2021-04-12,"1. become the hottest programming language
2 ...
3. don't worry about how things get installed",,
2.34164E+17,python#3213,2021-04-12,imo nixos has some good ideas about setting stuff up,,
2.34164E+17,python#3213,2021-04-12,"i haven't use it, but it looked promising",,
6.87833E+17,grey#8674,2021-04-12,"There‚Äôs also the option of packaging everything using Docker, but that seems rather heavy-handed.",,
2.66505E+17,notjack#9941,2021-04-12,"Plus like, people like to be able to write scripts that do things to their, yknow, files",,
2.66505E+17,notjack#9941,2021-04-12,"docker does not make that easy, as you have to learn how volume mounting works",,
2.34164E+17,python#3213,2021-04-12,"personally, i think docker is a neat system",,
2.34164E+17,python#3213,2021-04-12,and for me I prefer using it in a less restricted way,,
2.66505E+17,notjack#9941,2021-04-12,I like docker a lot,,
2.34164E+17,python#3213,2021-04-12,"i've used it for some services, but i did it in an entirely non-isolated networking",,
2.34164E+17,python#3213,2021-04-12,it was a nice way to declaratively setup my network services,,
2.66505E+17,notjack#9941,2021-04-12,the prospect of teaching somebody else how to use racket and docker simultaneously is daunting,,
4.66395E+17,oaktownsam#0815,2021-04-12,Docker is nice because it's a mostly portable target for stuff.,,
4.66395E+17,oaktownsam#0815,2021-04-12,"Part of the Linux issue is that there are some many standards to choose from.  One of the nice things about systemd is that it says ""you have to do things this way"" and for the most part it does the right thing.",,
2.34164E+17,python#3213,2021-04-12,imo static linking is also something people should be doing more of,,
2.34164E+17,python#3213,2021-04-12,it's very convenient,,
2.66505E+17,notjack#9941,2021-04-12,agreed,,
2.34164E+17,python#3213,2021-04-12,"an opinionated thing like systemd can be nice, but i think opinionated systems should be mostly non-default",,
2.66505E+17,notjack#9941,2021-04-12,"""you want to run this tool I made? download this binary and Just Run It"" is a very compelling workflow",,
2.34164E+17,python#3213,2021-04-12,mhm,,
2.34164E+17,python#3213,2021-04-12,"that's what I do with my ""games"" basicly",,
2.34164E+17,python#3213,2021-04-12,i compile them with musl staticly linked libc,,
4.66395E+17,oaktownsam#0815,2021-04-12,It seems like it could be interesting if resyntax could record the name of the suggestions it has made and somehow users could share them anonymously.,,
4.66395E+17,oaktownsam#0815,2021-04-12,I guess just running it over the package server corpus would get you a good idea of what is in the wild though.,,
2.66505E+17,notjack#9941,2021-04-12,"I want to extend it to include a ""this wasn't useful"" link in each suggestion, so that users can click a button to tell me if a suggestion didn't make sense or was buggy or seemed like a bad idea",,
2.34164E+17,python#3213,2021-04-12,"cargo clippy has a staging system where it tests lints in a ""nursery"" list just to make sure they work well before they put them in the main list. Most issues on the github are also detailing how lints misbehave",,üíØ (1)
2.66505E+17,notjack#9941,2021-04-12,"excellent idea, please write it down here https://github.com/jackfirth/resyntax/",,
2.66505E+17,notjack#9941,2021-04-12,(or remind me some other time because I don't have time right now and I'm sure I'm gonna forget about that),,
1.56786E+17,williewillus#8490,2021-04-12,"I feel the opposite. I don't like the bloat systemd brings, but I would definitely take a unified and integrated interface over 4 fragmented implementations (ever seen linux audio??)
on the BSD's, for example, everything is vertically integrated and mostly just works. If there's a problem, everyone works hard to fix the one impl, instead of going ""screw this I'm going to start my own fork""",,
1.56786E+17,williewillus#8490,2021-04-12,"also I dislike the trend towards statically linking/throwing everything into a container and calling it a day
it's just a workaround

of course huge corps with monorepos have different use cases, and some programming languages just don't support it, but I mean for the common linux workstation, programs should be a) easy to compile and b) dynamically linked

for me, flatpak is only for sandboxing proprietary applications, everything else should be and is dynamically linked where possible and managed by the package manager",,
2.34164E+17,python#3213,2021-04-12,"I have dealt with linux audio, and quite a bit",,
2.34164E+17,python#3213,2021-04-12,"jack and pulse audio, at the same time ü•≤",,
1.56786E+17,williewillus#8490,2021-04-12,"but yeah
my opinion of systemd is ""not ideal, but inevitable and let's just focus on it now""
don't really understand people who are still fighting it to this day",,
1.56786E+17,williewillus#8490,2021-04-12,linux's problem of only being a kernel I guess,,
2.34164E+17,python#3213,2021-04-12,"for me i would just like to be able to send a friend a binary and it work
obvoiusly for real system package tools, yes you would like to compile and link to your libraries, but that's not the easiest ""first try"" sorta thing that works best with games or more one-off programs",,
1.56786E+17,williewillus#8490,2021-04-12,yeah,,
1.56786E+17,williewillus#8490,2021-04-12,there's a spectrum,,
2.34164E+17,python#3213,2021-04-12,"I use it quite a bit too, but as a very opinionated system, it will doubtingly have many people who don't like it",,
2.34164E+17,python#3213,2021-04-12,do you just want me to write it in an issue?,,
2.66505E+17,notjack#9941,2021-04-12,yes üòÖ,,
2.34164E+17,python#3213,2021-04-12,"i added a lot more information, sorry if it got a little too long üôÇ",,
3.29023E+17,nixin72#3554,2021-04-13,"NixOS has some good ideas, but it's poorly executed imo. The ecosystem is all over the place with tons of tools to learn like nixos, nix, nix-shell, nix flakes, home-manager, etc. And the various package streams are a pain in the ass to handle if you want to change streams, never mind trying to use multiple. I tried NixOS for almost 2 months, gave it an honest shot as my daily driver that whole time, but I found it more a pain than anything. I've started working on a declarative AUR helper though for Arch based systems. It's still in really early stages, but some things I'm hoping to build are:
- declarative management of AUR and pacman packages
- a simple way to add modules for declarative management for other package managers, like npm, pip, etc.
- pinning package versions to ignore that package in system upgrades 
- installing temporary packages through terminal that can all be wiped out quickly and easily
- ad hoc package specification for installing tars as packages (no idea how this will work yet)

And I'm writing it in Racket, so the config will all be in Racket too.",,
3.29023E+17,nixin72#3554,2021-04-13,"It's in very very early stages though, I've only written like 150 or 200 lines of code and I can't even install packages yet.",,
3.29023E+17,nixin72#3554,2021-04-13,I'm also considering writing it in Guile Scheme instead of Racket since pretty much every unix system already has Guile installed so there's no build deps for people to go get.,,
2.34164E+17,python#3213,2021-04-13,"I had a similar takeaway from NixOS, i was trying to build a very specialist linux distribution, and nixos looks promising, but it was not well documented",,
2.34164E+17,python#3213,2021-04-13,"a declarative AUR heper sounds like an interesting project, but pacman is not a system built for holding older versions, so im wondering how you handle pinning",,
4.66395E+17,oaktownsam#0815,2021-04-13,"The people who are fighting it are people who love writing shell scripts, and don't realize the billion mistakes that can be made getting a daemon started properly on unix that systemd helps you avoid.",,
1.30231E+17,sarna#3904,2021-04-13,"what about stuff that you want multiple versions of? like programming language versions, or libraries for those
(like, you have thing A that depends on python 3.6 and requests 2.2, and thing B that depends on python 3.8+ and requests 3.0)",,
2.64024E+17,Eutro#0016,2021-04-13,The solution is to not use Python,,
1.30231E+17,sarna#3904,2021-04-13,:meowwarp:,,
2.64024E+17,Eutro#0016,2021-04-13,"Other than, you know, the language itself, I absolutely despise its dependency system",,
1.30231E+17,sarna#3904,2021-04-13,"but even for racket, if you wanted to keep racket 7 for example and ubuntu had only racket 8 packaged, how would you proceed",,
1.30231E+17,sarna#3904,2021-04-13,"what's so different about python's dependency system? in my experience it's all bad, across the board",,
2.64024E+17,Eutro#0016,2021-04-13,I mean I usually compile from source :wacko3Dspin: so it's just a matter of using the correct one,,
2.64024E+17,Eutro#0016,2021-04-13,"`pip` doesn't work 90% of the time, which results in me having to dive around finding and compiling a bunch of different random native packages to link to this Python package that doesn't even declare anything nicely",,
2.64024E+17,Eutro#0016,2021-04-13,and nobody actually writes Python code:citation_needed: it's just libraries written in other languages pulled together with strings,,
1.30231E+17,sarna#3904,2021-04-13,"ah, I thought it was like the overall architecture or something. yes, pip fails for me surprisingly often, I don't know if I had that many issues with any other package manager, and I've used some niche languages..",,
1.30231E+17,sarna#3904,2021-04-13,"even today I had a problem with pip:
when installing language server, it complains that jedi is version 2.17 that is incompatible with pyls (but it installs it anyway)
when you then upgrade jedi, it goes from 2.17 to 2.18 with no problems
and when you try installing pyls, it uninstalls jedi 2.18, installs 2.17 and complains that 2.17 is too old. WHAT :meowwarp:",,pausing (1)
1.30231E+17,sarna#3904,2021-04-13,python code gets written by people who don't know python but think they know python because it looks easy at the first glance,,
1.30231E+17,sarna#3904,2021-04-13,"wait.. will the wheel of history make another turn?
language popular -> people writing shitty scripts in language -> language declared shitty -> language unpopular",,
1.30231E+17,sarna#3904,2021-04-13,"perl is dead, long live perl!",,
2.75501E+17,Plane#0324,2021-04-13,i'm still happy to use perl for really tiny things sometimes lol,,
2.75501E+17,Plane#0324,2021-04-13,"for a while it was the main language i used at work, and i always kind of enjoyed it as long as i didn't have to stray into the parts of the language i didn't enjoy so much",,
2.75501E+17,Plane#0324,2021-04-13,so for certain problem domains it just felt like it made things really easy and i liked that.  and for many other problems it felt like absolutely the wrong tool,,
2.75501E+17,Plane#0324,2021-04-13,but i've always been the sort who liked to use lots of different tools for different things (:,,
1.30231E+17,sarna#3904,2021-04-13,seems like you follow perl's TIMTOWTDI :meowsmile:,,
2.14881E+17,Moinate#6061,2021-04-13,"re:python isn't the basic advice use virualenv (or similar) and keep different required versions in different virtualenv? 
BTW - I just discovered `mamba` after waiting **huge** minutes for `conda` to resolve a small upgrade... it has a much faster solver. 
I am going to link an article even though I feel like I heard about it from Racket people... at the time I thought it was informative. -> https://medium.com/@sdboyer/so-you-want-to-write-a-package-manager-4ae9c17d9527",,
1.30231E+17,sarna#3904,2021-04-13,"@Moinate yea but it's failing for me in a virtualenv, lol
it installs the wrong package by itself and then complains :meowwarp:",,
1.30231E+17,sarna#3904,2021-04-13,"re: the article
RIP Sam Boyer's work, I think he quit open source altogether after this go mod apocalypse",,
1.56786E+17,williewillus#8490,2021-04-13,if things are not semver compatible they should be packaged separately,,
1.56786E+17,williewillus#8490,2021-04-13,"which gets into the whole problem of ""people don't follow semver""",,
1.56786E+17,williewillus#8490,2021-04-13,which is a different thing entirely,,
1.30231E+17,sarna#3904,2021-04-13,under different names you mean? or what,,
1.30231E+17,sarna#3904,2021-04-13,because you can't install a v2.2 and v3.0 of some lib at once,,
1.30231E+17,sarna#3904,2021-04-13,"ohh ignore me, I was thinking pip. of course you can make a package like somelib2 and somelib3",,
1.30231E+17,sarna#3904,2021-04-13,sorry!,,
2.34164E+17,python#3213,2021-04-13,"there was a big problem with this when a major python library for cryptography updated, and their build process changed in a breaking way (didn't build on musl platforms anymore) on a minor version",,
2.34164E+17,python#3213,2021-04-13,then they just said they don't follow semver üòî,,
1.56786E+17,williewillus#8490,2021-04-13,yea just makes life hard for everyone,,
2.34164E+17,python#3213,2021-04-13,yup,,
2.34164E+17,python#3213,2021-04-13,caused lots of issues,,
1.56786E+17,williewillus#8490,2021-04-13,and also IMO as part of the oss ecosystem people should aim for maximum portability to as many environments as feasible,,
1.56786E+17,williewillus#8490,2021-04-13,"what made it not compatible with musl, weird gnu extensions?",,
2.34164E+17,python#3213,2021-04-13,"it's an issue with rust that's being worked on, but hasn't been fixed yet",,
2.34164E+17,python#3213,2021-04-13,the issue is that they said this was a non-breaking change üò†,,
2.34164E+17,python#3213,2021-04-13,IT WAS DEFINITELY BREAKING!,,
1.56786E+17,williewillus#8490,2021-04-13,"another problem caused by the fact that linux is just a kernel + wild west userland, but I digress üôÇ",,üëç (1)
2.34164E+17,python#3213,2021-04-13,i figured out the rust thing,,
2.34164E+17,python#3213,2021-04-13,so rust proc macros are dylibs,,
2.34164E+17,python#3213,2021-04-13,but musl platform is static linked only,,
2.34164E+17,python#3213,2021-04-13,and rust doesn't allow them to mix (except on windows for some reason ü§∑ ),,
2.34164E+17,python#3213,2021-04-13,weird linker stuff ig,,
1.30231E+17,sarna#3904,2021-04-13,some clojure libs don't follow semver but in a good way ‚Ñ¢Ô∏è (basically promising no breaking changes ever),,üòÜ (1)
1.30231E+17,sarna#3904,2021-04-13,async is like this,,
1.56786E+17,williewillus#8490,2021-04-13,"yeah clojure is weird one out
everything is 0.x but they're also extremely stable lol",,
2.34164E+17,python#3213,2021-04-13,rust does that a lot too,,
1.56786E+17,williewillus#8490,2021-04-13,"to the point where half a year back there was an effort to ""1.0"" a bunch of libraries",,
1.56786E+17,williewillus#8490,2021-04-13,eh rust has more churn,,
1.56786E+17,williewillus#8490,2021-04-13,but yeah some things should really be 1.0,,
1.56786E+17,williewillus#8490,2021-04-13,like rand,,
2.34164E+17,python#3213,2021-04-13,"lots of times you will see high numbers like ""0.13""",,
2.34164E+17,python#3213,2021-04-13,"the developer is confident in it, but not confident enough to say it's 100% production ready",,
2.34164E+17,python#3213,2021-04-13,you know?,,
1.56786E+17,williewillus#8490,2021-04-13,"the other side of it is that the semver spec basically says ""If a nontrivial amount of people are using it already, it should be 1.0"" and ""if you'd be worried or mindful of making a breaking change, it should be 1.0""",,
1.56786E+17,williewillus#8490,2021-04-13,üòõ,,
2.34164E+17,python#3213,2021-04-13,there's also some libraries abusing semver,,
2.34164E+17,python#3213,2021-04-13,"like the old clippy on ""0.0.302""",,
2.34164E+17,python#3213,2021-04-13,they probably not using it correctly,,
2.34164E+17,python#3213,2021-04-13,"but then again, i don't think semver is a great fit for it",,
4.62028E+17,StephenD#5938,2021-04-13,Please keep the #off-topic in #off-topic üíô,,
2.34164E+17,python#3213,2021-04-13,sorry,,
4.66395E+17,oaktownsam#0815,2021-04-13,"@notjack could/should resyntax be used for guidance on scribble docs?
I don't have a good use case but just saw that I was writing 
```
@title{name - description}
```
while the de-facto style looks like it is
```
@title{name: description}
```",,
4.66395E+17,oaktownsam#0815,2021-04-13,Just published my virtualenv like thing for Racket.  It is a bit rough https://pkgd.racket-lang.org/pkgn/package/raco-pkg-env,,
4.62028E+17,StephenD#5938,2021-04-13,It‚Äôs fine üòÄ,,
2.66505E+17,notjack#9941,2021-04-13,"It can't _yet_, but it's something I've been planning for as an eventual goal",,
2.66505E+17,notjack#9941,2021-04-13,"@Runi I have a language server protocol question. So I see in VSCode that some notes on my code will say ""no quick fixes available"", so I assume there's a standard way in lsp for language servers to say ""here's a problem on this line, and to fix it, here's what you should put instead."" Is there a command line tool somewhere that just fires up a langserver and fixes all the problems it finds in a directory? Like, if I integrated Resyntax with racket-langserver, would the `resyntax` CLI I made be superfluous?",,
9.9326E+16,Runi#1730,2021-04-13,"problems are reported as a `textDocument/publishDiagnostics` notification, which can report errors, warnings, and info messages (you've seen Unused Requires, which are info-level, so they have a blue squiggly)
fixes to those problems can be reported when the user highlights a particular range, the client sends `textDocument/codeAction` and the server responds with possible actions to take on the given range, these don't necessarily have to be ""Quick Fix""es but there is particular support in the spec for code actions that fix diagnostic problems",,
9.9326E+16,Runi#1730,2021-04-13,that being said I'm not aware of a command line tool of the sort you're talking about,,
9.9326E+16,Runi#1730,2021-04-13,"...i admit i read the first half of your message and just started explaining how the LSP specifies quick fixes, and only saw the actual question after lol",,
2.66505E+17,notjack#9941,2021-04-13,"huh, it seems weird that the diagnostics themselves don't have a way to say ""...and here's the possible actions you could take to fix this"" directly in the diagnostic",,
2.66505E+17,notjack#9941,2021-04-13,know where I could go looking? I wonder if there's an LSP mailing list or something I can badger people on,,
9.9326E+16,Runi#1730,2021-04-13,there's a list of LSP tools on the site: https://microsoft.github.io/language-server-protocol/implementors/tools/,,
9.9326E+16,Runi#1730,2021-04-13,"i don't know of any groups or mailing lists, it's maintained by microsoft so i doubt there's anything official",,
9.9326E+16,Runi#1730,2021-04-13,"besides like, github issues",,
9.9326E+16,Runi#1730,2021-04-13,"oh, this is just tools/IDEs that support the LSP",,
9.9326E+16,Runi#1730,2021-04-13,yeah i have no idea where else to look then lol,,
2.66505E+17,notjack#9941,2021-04-13,huh,,
2.66505E+17,notjack#9941,2021-04-13,it seems Obvious(TM) to me that there are a lot of _non-editor_ clients that would be super super useful to have. I'm surprised.,,
9.9326E+16,Runi#1730,2021-04-13,"there's a few fields, you could probably stick the suggested fix in the description or something",,
2.66505E+17,notjack#9941,2021-04-13,"like, imagine a github action where you tell it ""here's my langserver"" and it automatically starts it up, gets diagnostics, and reports them on pull requests",,
2.34164E+17,python#3213,2021-04-13,i think most languages have non-LSP interfaces for those kinds of things,,
9.9326E+16,Runi#1730,2021-04-13,I guess mostly that kind of thing is handled by just tossing the code at the compiler,,
9.9326E+16,Runi#1730,2021-04-13,yeah,,
2.66505E+17,notjack#9941,2021-04-13,yeah but we here in the racket world are in the unique position of barely having interfaces to those things at all,,
2.66505E+17,notjack#9941,2021-04-13,next question: how do clients typically handle dealing with multiple langservers? just a straight map of file extensions to the appropriate command to start a langserver process?,,
9.9326E+16,Runi#1730,2021-04-13,"i only have experience with VSC, which allows any extension to define a new language and how files should be identified as being in that language, which is mostly just file extensions",,
9.9326E+16,Runi#1730,2021-04-13,& then the options given to the language server client usually just tell it to activate the server when a file in this language is opened,,
9.9326E+16,Runi#1730,2021-04-13,"i'm sure it varies widely by editor, but i imagine the standard is by extension or otherwise explicitly set mode or language lol",,
9.9326E+16,Runi#1730,2021-04-13,in VSC in particular you can also manually set the language in the bottom right or tell the editor to always associate an extension with a language,,
2.66505E+17,notjack#9941,2021-04-13,hmm,,
2.66505E+17,notjack#9941,2021-04-13,"who owns the filesystem? that is, if the server and client are running on different machines, which machine's filesystem is expected to be the one actually being read from and written to?",,
9.9326E+16,Runi#1730,2021-04-13,i think it's not explicitly specified,,
9.9326E+16,Runi#1730,2021-04-13,"iirc when the client tells the server it has opened a document, the document is considered ""managed"" by the client and should not be opened by the server",,
9.9326E+16,Runi#1730,2021-04-13,"aside from that, i think either can operate on either machine",,
9.9326E+16,Runi#1730,2021-04-13,although the URIs are sent by the client and it's expected that the server can reach the same path by navigating to that URI?,,
2.66505E+17,notjack#9941,2021-04-13,interesting,,
2.66505E+17,notjack#9941,2021-04-13,that would make sense,,
2.66505E+17,notjack#9941,2021-04-13,I'm trying to put together a plan for how I could actually use language servers in a CI environment instead of a local development environment,,
2.66505E+17,notjack#9941,2021-04-13,"the URIs can be http:// URIs right? like it's not some weird nonsense where the spec says ""they're URIs but only the file: scheme is supported""",,
9.9326E+16,Runi#1730,2021-04-13,yeah i guess it can be anything,,
2.66505E+17,notjack#9941,2021-04-13,"when the server wants to make edits to files, my understanding of the spec so far is that the server shouldn't do that directly and instead should send messages to the client, right?",,
9.9326E+16,Runi#1730,2021-04-13,yeah generally,,
9.9326E+16,Runi#1730,2021-04-13,or actually i think in all cases,,
9.9326E+16,Runi#1730,2021-04-13,"even for workspace edits, like files that the client hasn't even opened, it expects a message",,
9.9326E+16,Runi#1730,2021-04-13,"in which case, i'm not actually sure the server should ever need to use the URI except for as an identifier",,
2.66505E+17,notjack#9941,2021-04-13,"I'm thinking I could make a tool for CI purposes where instead of installing all the langservers ahead of time and then giving it a map from file types to langserver programs, you instead give it a map from file types to docker images containing the langserver programs",,
2.66505E+17,notjack#9941,2021-04-13,"it would probably need it for reading, I assume. unless the client sends the content of the files over the wire?",,
9.9326E+16,Runi#1730,2021-04-13,the client sends the contents of files it opens,,
2.66505E+17,notjack#9941,2021-04-13,whoa really?,,
2.66505E+17,notjack#9941,2021-04-13,"just, the whole thing?",,
9.9326E+16,Runi#1730,2021-04-13,"but if the language server wants to do any fancy workspace features involving files not opened by the client, it's gotta open those files manually",,
9.9326E+16,Runi#1730,2021-04-13,yep,,
2.66505E+17,notjack#9941,2021-04-13,what sort of fancy workspace features?,,
9.9326E+16,Runi#1730,2021-04-13,like workspace-wide symbol renaming or navigation (definition/references),,
2.66505E+17,notjack#9941,2021-04-13,ahhh,,
2.66505E+17,notjack#9941,2021-04-13,hmmm,,
9.9326E+16,Runi#1730,2021-04-13,tbh i'm not really how sure language servers are as a CI tool,,
2.66505E+17,notjack#9941,2021-04-13,yeah I haven't yet figure out if it's a feasible thing,,
9.9326E+16,Runi#1730,2021-04-13,"language servers designed for editor use can make some assumptions, such as that you're not really going to send a barrage of requests immediately following a file-open notification lol",,
9.9326E+16,Runi#1730,2021-04-13,i wouldn't be surprised if some of them (including the racket langserver) are rather fragile in such a situation,,
2.34164E+17,python#3213,2021-04-13,seems like a lot of overhead for somehting that could be done directly,,
2.66505E+17,notjack#9941,2021-04-13,there's just a lot of integration work and I'm trying to figure out how to trim it down,,
9.9326E+16,Runi#1730,2021-04-13,"> i'm not really how sure language servers
wtf am i even saying",,
9.9326E+16,Runi#1730,2021-04-13,not really sure how useful*,,
2.66505E+17,notjack#9941,2021-04-13,"for each of these things:
- resyntax suggestions
- unused requires
- missing info.rkt deps

I want each of these things:
- command line tool to automatically fix them en-masse
- automatic review comments on github pull requests
- same as above, but for gitlab (I assume gitlab has something for that?)
- tool to automatically create pull requests that fix them en-masse in existing repos
- ability to automatically fix them in editors and IDEs

and this is an NxM matrix that could easily suck up a lot of my time",,
4.66395E+17,oaktownsam#0815,2021-04-13,"neovim uses ""filetypes"" which vim maps file extensions or contents to a tag",,
9.9326E+16,Runi#1730,2021-04-13,"ahh, yeah, i can definitely see how the langserver is an appealing place to look considering it also aims to aggregate all of these things lol",,
9.9326E+16,Runi#1730,2021-04-13,"this kinda brings to mind ESLint, which exists to complain at you and to automatically refactor code/remove unused imports/fix whitespace and is super widely used in CI",,
9.9326E+16,Runi#1730,2021-04-13,maybe racket just needs a similar tool,,
2.34164E+17,python#3213,2021-04-13,gitlab does have these,,üëç (1)
2.34164E+17,python#3213,2021-04-13,"probably not in the same way, but gitlab CI is quite useful",,
4.66395E+17,oaktownsam#0815,2021-04-13,Lints for `#lang info` may be good too.,,
2.66505E+17,notjack#9941,2021-04-13,absolutely,,
2.66505E+17,notjack#9941,2021-04-13,hmm. so how do workspaces work in lsp?,,
9.9326E+16,Runi#1730,2021-04-13,"yeah I think what we're really looking for is just a proper racket linter - path glob in, problems out, option to fix all the fixable problems",,
9.9326E+16,Runi#1730,2021-04-13,"as far as I can tell, the client can send one or many workspace folders, and that's about it lol",,
9.9326E+16,Runi#1730,2021-04-13,actually looking through those folders for items of interest is I guess up to the server,,
2.66505E+17,notjack#9941,2021-04-13,"everyone's gonna make one and there's gonna be umpteen different ones, is the problem. there needs to be some centralized place to put this kind of tooling, rather than making them separately-installed standalone components. otherwise we'll never be able to reach any sort of community consensus on what lints are good lints.",,
2.66505E+17,notjack#9941,2021-04-13,there's already like four other racket linters,,
2.66505E+17,notjack#9941,2021-04-13,"they just have wildly varying levels of integration, feature capabilities, and support",,
4.66395E+17,oaktownsam#0815,2021-04-13,There are?,,
2.66505E+17,notjack#9941,2021-04-13,"@oaktownsam bogdan popa has one, there's ryanc's version of resyntax, there's my old (unmaintained) `syntax-warn` system, and there's another formatter somewhere that I've forgotten the author of",,
2.66505E+17,notjack#9941,2021-04-13,"plus the stuff built into the langserver. and also you could count the drracket indenter too, if you felt inclined to do so.",,
4.66395E+17,oaktownsam#0815,2021-04-13,"Ugh, currently playing the ""what did I mess up in my info file that the package server won't render my docs""",,
4.66395E+17,oaktownsam#0815,2021-04-13,Maybe it's just a normal delay ...,,
9.9326E+16,Runi#1730,2021-04-13,I feel like the problem of competing implementations is kind of necessarily unsolvable especially with something inherently opinionated like linting,,
9.9326E+16,Runi#1730,2021-04-13,even with the language server there are I think two other implementations for racket lol,,
9.9326E+16,Runi#1730,2021-04-13,i just picked one and hopefully it's gonna be so much better as to be the obvious choice,,
2.66505E+17,notjack#9941,2021-04-13,yeah I'm not looking to make there be Only One implementation. I _am_ looking to make a Default implementation.,,
2.66505E+17,notjack#9941,2021-04-13,and that's way more of a social problem than a technical problem,,üëç (2)
2.66505E+17,notjack#9941,2021-04-13,"relatedly, I think the langserver is featureful enough now that it should be moved into the `racket` github org",,
4.66395E+17,oaktownsam#0815,2021-04-13,Connecting linters (like resyntax) to diagnostics and quick fix would be üßë‚Äçüç≥ üíã,,‚ù§Ô∏è (1)
4.66395E+17,oaktownsam#0815,2021-04-13,I imagine a racket level api of some sort ...,,
9.9326E+16,Runi#1730,2021-04-13,"totally fair! I do think there's absolutely space for some standardization when it comes to linters/CI tools, right now they're just all over the place",,
9.9326E+16,Runi#1730,2021-04-13,"maybe that space is as a part of the LSP, idunno",,
2.66505E+17,notjack#9941,2021-04-13,"I think it's worth exploring, at the least, since the potential benefits seem huge",,
4.66395E+17,oaktownsam#0815,2021-04-13,Sorawee made a linter too: https://github.com/Bogdanp/racket-review/issues/5,,
2.66505E+17,notjack#9941,2021-04-13,lol,,
2.66505E+17,notjack#9941,2021-04-13,that's amusing and also good!,,
2.66505E+17,notjack#9941,2021-04-13,this is a space where group collaboration on a Default tool will get us _much_ further than we've gotten so far,,üíØ (1)
4.66395E+17,oaktownsam#0815,2021-04-13,Some of these seem to be at different levels.  Like resyntax is really a source level rewrite (at least from my experience so far.)  Sorawee was/is trying to analyze and lint from fully expanded code.  Maybe these different tactics could be different backends to the Grand Unified Racket Linter (ooh good acronym there.),,üíØ (1)
2.66505E+17,notjack#9941,2021-04-13,Definitely,,
2.66505E+17,notjack#9941,2021-04-13,"and if I can make the wiring from linter to github CI use lsp, then all these other tools won't have to suffer like @wiggles did to implement automated linter pull request commenting",,
2.14881E+17,Moinate#6061,2021-04-14,"does `rustfmt` have any of these integrations? that's a project where it seems like they would have gotten it right. 
on second thought, also perhaps some Big Employers have some kind of private integration system that took N person-years to develop?
... is there a well-designed (if possibly overengineered) framework for doing that stuff at the old $dayjob?",,
2.14881E+17,Moinate#6061,2021-04-14,i'm trying to keep up üôÇ it seems like the problem for all of the tools will then become the need to implement (some broken subset of?) the LSP?,,
2.66505E+17,notjack#9941,2021-04-14,they've gotta implement it anyway if they want editor integration,,
4.62028E+17,StephenD#5938,2021-04-14,I might be wrong but I thought some work had been done to make DrRacket functionality available to Racket Mode by moving it out of DrRacket and exposing an api that both use?,,
2.66505E+17,notjack#9941,2021-04-14,"Yes, though it still has a lot of GUI dependencies. I think the stuff for racket-mode is mostly at the macro expansion level. and also the Check Syntax piece of drracket.",,
2.66505E+17,notjack#9941,2021-04-14,"been thinking about versioning in racket and today I came across this bit of text in a java spec and it's got some parallels to the situation in the racket world

> Third party libraries and frameworks typically support a range of Java platform versions, generally going several versions back. As a consequence they often do not take advantage of language or API features available in newer releases since it is difficult to express conditional platform dependencies, which generally involves reflection, or to distribute different library artifacts for different platform versions.
> 
> This creates a disincentive for libraries and frameworks to use new features, that in turn creates a disincentive for users to upgrade to new JDK versions---a vicious circle that impedes adoption, to everyone's detriment.",,pensivewooooooooble (1)
1.93202E+17,rocketnia#4517,2021-04-14,"It's a lot easier to use reflection in Racket in a way that only has load-time or compile-time costs. Or... for all I know, maybe it's actually rather feasible these days on the JVM too. I seem to recall a lot of reflective power was starting to be kinda feasible in 2008 as Groovy and Scala were getting bigger, and some other exciting stuff must've happened between then and now. XD",,
2.66505E+17,notjack#9941,2021-04-14,"if there was some function like `pkg-version` you could implement some cool ""desugaring"" stuff",,
1.93202E+17,rocketnia#4517,2021-04-14,"another thought is that the JS ecosystem seems to practically fall over itself to adopt new language features, and quite a number of the ""language features"" are so boringly non-transformative that they can expressed with shims and Babel plugins",,
7.73175E+17,meowüé∫#2842,2021-04-14,If only there were a way to conditionally expand code at compile-time. üòõ,,üòâ (2)
2.66505E+17,notjack#9941,2021-04-14,getting it to happen automatically and without library client effort is the hard part,,
1.93202E+17,rocketnia#4517,2021-04-14,"so maybe the key is that every release of a platform should release a lot of really hyped-up little features that you could have gotten from a library the whole time, and as people scramble to integrate those with their work, they can get the really transformative features as a side effect",,
2.34164E+17,python#3213,2021-04-14,it turns out they come from the library in the end anyway,,
2.66505E+17,notjack#9941,2021-04-14,"I'd actually like to see a way for a library to say ""here's a new feature! it can be desugarged into these other existing features though, if you need to support older versions"" and for the build process for other libraries to automatically desugar stuff. so a library can be implemented using version 8 of some other library but it can still support clients who only have version 5 of the other library",,
2.34164E+17,python#3213,2021-04-14,that is just babel plugins,,
2.34164E+17,python#3213,2021-04-14,maybe we do have a thing or two we could learn from javascript üôÇ,,üå∂Ô∏è (1)
2.66505E+17,notjack#9941,2021-04-14,"no, babel plugins require the client to actually set up the plugin",,
2.66505E+17,notjack#9941,2021-04-14,I want a thing that's integrated into the language and automatic,,
2.34164E+17,python#3213,2021-04-14,"well, it's not hard",,
2.34164E+17,python#3213,2021-04-14,for projects that already use babel for building,,
2.66505E+17,notjack#9941,2021-04-14,"it doesn't have to be hard to be a problem. if it's not _already_ set up for _all_ your clients, then the problem is that a library using newer versions of other libraries just for sugar features becomes a breaking change.",,
2.66505E+17,notjack#9941,2021-04-14,"the system isn't trying to solve a problem for clients, it's trying to solve a problem for library developers without introducing more problems for clients",,
1.93202E+17,rocketnia#4517,2021-04-14,"if there's a library involved, that library is already not integrated into all clients, right?",,
2.64024E+17,Eutro#0016,2021-04-14,tbh just write TypeScript/ClojureScript instead if you're already compiling to js :hahayes:,,
2.66505E+17,notjack#9941,2021-04-14,"@rocketnia I'm picturing something like, in the package manager, where it sees if a client is using library X and version 1 of library Y, and X is using version 2 of library Y, but all of the new bindings in version 2 of library Y have some static info in them saying ""here's how to desugar usages of this into usages of version 1 features"" and then the package manager can automatically edit the code of X to make it compatible with version 1 of Y for the client.",,
2.66505E+17,notjack#9941,2021-04-14,"so the client doesn't really have to care what version of Y is used by X, and the developer of X doesn't have to avoid using new features of Y in fear of breaking compatibility for clients who can't upgrade for some reason",,
1.93202E+17,rocketnia#4517,2021-04-14,"I think this is really important and challenging stuff. I wanna point out a few things that might shake up the design:

- People might publish information that helps migrate from one library to an alternative library, without even the same set of features.

- Sometimes there might be more than one way to upgrade. The old library just had one kind of thread, but now the library offers lightweight threads heavyweight threads. Old features don't care about the difference, but new features do, so the user is invited to make a choice as they upgrade their code.

- Upgrading a library might be automatable in most cases, but not if the code uses ""unsafe"" features. In general, upgrading unstable libraries can involve a whole-program refactor rather than a set of independent local changes. A protocol that allowed whole-program collections of snippets to be transformed at once might be able to accommodate this.",,
7.24304E+17,popol#5934,2021-04-14,hey,,üëã (1)
1.93202E+17,rocketnia#4517,2021-04-14,hello :),,
7.24304E+17,popol#5934,2021-04-14,i just started learning racket and couldn't understand some points,,
1.93202E+17,rocketnia#4517,2021-04-14,"- Someone might want to update more than one library at a time. In this case, a protocol that keeps the different libraries' changes from overlapping is ideal. This makes things a bit complex as it can be counter-pressure against the last point. Libraries should transform the whole part of the program *they're* involved with, but not any part of the program that another library is involved with.",,
1.93202E+17,rocketnia#4517,2021-04-14,feel free to ask questions in #help,,
2.66505E+17,notjack#9941,2021-04-14,"I'd probably limit the downgradable APIs to only those where it's quite trivial to replace the new feature with old features. Stuff like new utility functions, or renamed functions, or new convenience arguments, or slightly different argument types that are still convertible to and from the old argument types. Anything more complex where the semantic differences are important would probably be out of scope IMO. The 80% cases can get really far here.",,
1.93202E+17,rocketnia#4517,2021-04-14,I think you're right :) just hoping to inspire you to 82%,,
2.66505E+17,notjack#9941,2021-04-14,"my goal with the idea is to make long-term API maintenance easier, because it's essentially impossible in racket today",,plusone (1)
1.93202E+17,rocketnia#4517,2021-04-14,are there ecosystems where it's possible?,,
2.66505E+17,notjack#9941,2021-04-14,"I may or may not be inspired by a lot of stuff internally at my job :p they have library desugaring for android, so that you can write apps using libraries that use java 8 lambdas and such but it gets turned into java 7 compatible code automatically for older android phones",,
1.93202E+17,rocketnia#4517,2021-04-14,"like, I think the case in Racket is a little harder than other languages mostly because Racket doesn't make it as easy to juggle multiple versions",,
2.66505E+17,notjack#9941,2021-04-14,there's also a lot of automated large-scale refactoring tooling,,
2.66505E+17,notjack#9941,2021-04-14,google actually doesn't use multiple versions of anything either. there's a One Version Policy: everyone at google uses the same version of each library.,,
1.93202E+17,rocketnia#4517,2021-04-14,this sounds a lot like a Babel for Java,,
9.9326E+16,Runi#1730,2021-04-14,"that sounds like a recipe for never, ever updating any library ever *ever*, because it would require updating too many things",,
2.66505E+17,notjack#9941,2021-04-14,yeah it's definitely in the same vein,,
1.93202E+17,rocketnia#4517,2021-04-14,sounds like the way Racket works,,
2.66505E+17,notjack#9941,2021-04-14,"it sounds like it, but actually libraries are updated pretty often",,
2.66505E+17,notjack#9941,2021-04-14,there's large-scale refactoring and migration tooling to make it work,,
2.66505E+17,notjack#9941,2021-04-14,yup,,
9.9326E+16,Runi#1730,2021-04-14,ahhhhhh that sounds lovely,,
2.66505E+17,notjack#9941,2021-04-14,"yeah like if I want to change some method used in a 100 million different places in code, I can actually do that",,
4.66395E+17,oaktownsam#0815,2021-04-14,Fun fact: Racketeers designed the ECMA module system and (at least one I know of) are involved in the broader ECMAscript standardization process.,,
2.34164E+17,python#3213,2021-04-14,"oh, nice!",,
6.87833E+17,grey#8674,2021-04-14,"I get the impression that things like versioning/upgrading often get discussed mostly in the context of the language, and external tools for managing these things don‚Äôt get as much attention.",,
6.87833E+17,grey#8674,2021-04-14,"Then again, getting people to agree on which language, library, and build tools to use makes for a daunting combinatorial problem.",,
2.34164E+17,python#3213,2021-04-14,*xkcd standards*,,üíØ (1)
4.62028E+17,StephenD#5938,2021-04-14,"I‚Äôm just trying to catch up here; are you saying that when someone updates a library they also provide a refactoring tool so usages of that library can be updated?
V1 (make-hat colour size)
->
V2  (make-hat size colour)",,
2.14881E+17,Moinate#6061,2021-04-14,I think he's talking about something like this. See section IV. Practical Applications. https://storage.googleapis.com/pub-tools-public-publication-data/pdf/41342.pdf,,
2.14881E+17,Moinate#6061,2021-04-14,Actualy I better just lie low & let someone who really does it respond... lol.,,
2.66505E+17,notjack#9941,2021-04-14,"Yes. If I want to rename a method from `bad()` to `good()` in a core Java library, I follow this process:

- Change the name to `good()` but keep the old name `bad()` around as a deprecated method that just calls `good()`. Stick `@InlineMe` on the old `bad()` method. Submit this change.

- Run the `Inliner` command line tool over the entire google codebase. It starts a MapReduce pipeline that finds all usages of `bad()` and rewrites them to `good()`. It puts all the changes in a single massive commit, but doesn't push it anywhere.

- Run this tool called Rosie which takes massive commits and splits them into multiple independent commits. It looks up the teams that own the touched files and groups changes by team. If all of the changes for a single team is still too large, it further splits it into chunks small enough to stay under a number-of-lines-changed threshold, and it tries to group changes in the same directories together. Then Rosie sends out all of the individual change groups as separate, independently mergeable pull requests.

- Leave Rosie running on my machine for a few days or weeks. It will automatically watch all of the pull requests it created and merge them when they're approved. If anyone comments on them or any tests fail or there's some other issue, it tosses those changes out and alerts me.

- After that's done, I take care of any stragglers, which are usually because of code doing weird things like reflection or teams having bizarre build issues.

- Eventually, the google-wide dead-code-elimination tooling notices that `bad()` isn't called by anyone anymore and sends me a pull request that deletes it. I click the button and the change is done.",,"üò® (1),pldng (1)"
2.66505E+17,notjack#9941,2021-04-14,"There's also a separate ""large-scale change global approval"" process, where I write up a doc saying ""I want to make this change. It touches so much code that just getting all the different teams to review it and click the merge button is too much work. Here's why the change is trivially safe."" And then I skip the step of sending the changes to each team for review, and instead I send them to a small set of people who are ""global reviewers"" who have permission to merge into everyone's code.",,üëç (1)
2.66505E+17,notjack#9941,2021-04-14,"There's also a tool internally that's like Resyntax, but for Java, so this process also works for any refactoring that Resyntax could automate.",,
6.87833E+17,grey#8674,2021-04-14,That‚Äôs incredible.,,
2.66505E+17,notjack#9941,2021-04-14,"It's pretty wild. When we upgraded everyone to Java 8, the java libraries team wrote tooling to auto-lambdify everyone's code too.",,hahayes (1)
6.87833E+17,grey#8674,2021-04-14,Widespread use of tooling/processes like that could really help a lot of projects.,,
2.66505E+17,notjack#9941,2021-04-14,"It really, _really_ helps library and framework owners, since it makes it feasible to actually make lots of backwards incompatible changes without imploding the ecosystem.",,
2.66505E+17,notjack#9941,2021-04-14,"and as a result, the google java libraries are very very good :3",,
2.14881E+17,Moinate#6061,2021-04-14,"I know I've seen a writeup of this somewhere, do you know a ref off the top of your head?",,
2.14881E+17,Moinate#6061,2021-04-14,Not that you didn't just provide one... thanks tons for taking the time to explain!,,
2.66505E+17,notjack#9941,2021-04-14,Not a clue üòÖ,,üòÜ (1)
2.66505E+17,notjack#9941,2021-04-14,"If you crawl around the Mockito github issue conversations, you'll probably see some mentions about it. One of the mockito devs works here and has spent pretty much the last two years doing large-scale migrations and refactorings in preparation for upgrading google to mockito 3, because google's version of mockito is something like 6 years old",,
2.66505E+17,notjack#9941,2021-04-14,"or it was, because he finished that migration process a few weeks ago",,
2.66505E+17,notjack#9941,2021-04-14,"That was definitely one of the most complex migrations google has had to do. People do _wack_ stuff with mocks, so a lot of API changes that would normally have been safe were... not.",,
2.34164E+17,python#3213,2021-04-14,"nice, mockito has an even 900 closed issues",,
2.66505E+17,notjack#9941,2021-04-14,In my 20% time I've been working on a really cool addition to this tooling too üòÑ,,
2.66505E+17,notjack#9941,2021-04-14,"it auto-rewrites APIs to use stricter types, like `ProjectId` instead of `String`",,‚ù§Ô∏è (1)
2.34164E+17,python#3213,2021-04-14,"i kind of want to learn java, but it's ecosystem and tooling scares me a bit",,
2.66505E+17,notjack#9941,2021-04-14,Google Java is also probably not very representative of Java as a whole,,
2.34164E+17,python#3213,2021-04-14,i know,,
2.66505E+17,notjack#9941,2021-04-14,"we almost never use mutable state, for example",,
2.34164E+17,python#3213,2021-04-14,but stuff like maven and gradle escape my understanding,,
2.34164E+17,python#3213,2021-04-14,ant too,,
2.66505E+17,notjack#9941,2021-04-14,oh god yeah I have _no_ clue how to use those and the one or two times I tried I gave up very quickly,,üòÜ (1)
2.34164E+17,python#3213,2021-04-14,that's comforting to hear from a professional,,
2.64024E+17,Eutro#0016,2021-04-14,Google Java is actually great,,
2.64024E+17,Eutro#0016,2021-04-14,some of the best Javas out there,,
2.66505E+17,notjack#9941,2021-04-14,"In the professional java world it's not uncommon for companies to have at least one person who's full time job is figuring out build shit for everyone else. I mostly don't ever have to configure stuff like that, it's all set up for me and the dependency management stuff is automated.",,üëç (1)
2.64024E+17,Eutro#0016,2021-04-14,obviously nothing can beat my most awful hacks though :clueless:,,üòÅ (1)
2.34164E+17,python#3213,2021-04-14,"i just wanted to try out clojure once, but i got to learn how jvm build systems work, no thanks",,
4.66395E+17,oaktownsam#0815,2021-04-14,Ant is like make but in XML and maven is ... maven.  Gradle is fairly sane for small things.  All of them end up causing tons of copy and paste because it's just you just want some dependencies at build time or run time or whatever.,,
4.66395E+17,oaktownsam#0815,2021-04-14,gradle really isn't too bad because you don't have to wade through 100k of xml configuration to figure out what is going on.,,
2.64024E+17,Eutro#0016,2021-04-14,Leiningen is a fine build system,,
2.66505E+17,notjack#9941,2021-04-14,bazel is. weird. but in a neat good way.,,
2.64024E+17,Eutro#0016,2021-04-14,don't you use something else internally?,,
4.66395E+17,oaktownsam#0815,2021-04-14,Last I used clojure/Leiningen it rubbed me the wrong way.,,how (1)
2.66505E+17,notjack#9941,2021-04-14,"Sort of. It's still bazel, but we call it blaze, and it has a couple google-specific hacks in it.",,
4.66395E+17,oaktownsam#0815,2021-04-14,"Don't ask how it ""rubbed me the wrong way"" it was like 8 years ago and all I have are faint memories and this t-shirt.",,
2.66505E+17,notjack#9941,2021-04-14,"but like, it's not exactly an independent fork. It's like how racket technically uses a fork of chezscheme that has some racket-specific patches in it, but the fork is still regularly rebased from the upstream chezscheme",,
2.66505E+17,notjack#9941,2021-04-14,"same here, interestingly down to almost the same number of years :p",,
7.73175E+17,meowüé∫#2842,2021-04-14,I would wear that t-shirt.,,
7.73175E+17,meowüé∫#2842,2021-04-14,"!!instant-tshirt Clojure tooling and Leiningen
rubbed me the wrong way eight years ago and
all I got was a lousy t-shirt.",,
8.02004E+17,r16#4581,2021-04-14,,https://cdn.discordapp.com/attachments/618895179343986688/832055632312008714/shirt.png,üòç (3)
3.29023E+17,nixin72#3554,2021-04-14,"I don't mind the way Leiningen does things and using it is fine imo, but *good lord it's slow as hell*",,
1.30231E+17,sarna#3904,2021-04-15,"hey @oaktownsam, I got racket languge server working in neovim!",,üéâ (1)
1.30231E+17,sarna#3904,2021-04-15,,https://cdn.discordapp.com/attachments/618895179343986688/832137796441210900/unknown.png,
1.30231E+17,sarna#3904,2021-04-15,"you just need this:
```
"" plug begin, other plugins
Plug 'autozimu/LanguageClient-neovim', {
    \ 'branch': 'next',
    \ 'do': 'bash install.sh',
    \ }
"" plug end somewhere here

set hidden

let g:LanguageClient_serverCommands = {
    \ 'scheme': ['racket', '-l', 'racket-langserver'], "" or 'racket' if you have proper filetypes set
    \ }
```",,
4.66395E+17,oaktownsam#0815,2021-04-15,That's a different LSP client than the one I'm using,,
4.66395E+17,oaktownsam#0815,2021-04-15,Neato,,
1.30231E+17,sarna#3904,2021-04-15,in theory it should Just Work ‚Ñ¢Ô∏è with any client ü§î,,
4.66395E+17,oaktownsam#0815,2021-04-15,I didn't look too deeply into what alternatives there were.,,
1.30231E+17,sarna#3904,2021-04-15,"it was the first one that worked for me some time ago, that's why I'm using it",,
2.66505E+17,notjack#9941,2021-04-15,finally got around to reading the issue you opened and thank you very much for the details!,,
2.66505E+17,notjack#9941,2021-04-15,(context for others: https://github.com/jackfirth/resyntax/issues/125),,
2.02953E+17,checkersai#1659,2021-04-15,Is there a reason that the Lisp format has you writing closing parens all on the same line?,,
2.64024E+17,Eutro#0016,2021-04-15,what do you mean?,,
2.64024E+17,Eutro#0016,2021-04-15,you _can_ put them on a different line,,
2.64024E+17,Eutro#0016,2021-04-15,but also why,,
2.02953E+17,checkersai#1659,2021-04-15,"Wouldn't something like
```scheme
(define ...
  (stuff ...
    (more-stuff ...
      (even-more-stuff...
      (other-stuff ...)
      )))
```
make a bit more sense? That way if you have to add something, you just make a new line",,
2.02953E+17,checkersai#1659,2021-04-15,"I know you can, but the general formatting rule is that that's how it's done",,
4.66395E+17,oaktownsam#0815,2021-04-15,"So for finished code the convention is to put them all on the last line.

I have seen (and have done it myself) code where if you're not 100% sure you're done it's on a separate line.",,
2.02953E+17,checkersai#1659,2021-04-15,"Ah, that's basically what I'm doing",,
4.66395E+17,oaktownsam#0815,2021-04-15,Especially things like `requires` and work-in-progress test submodules,,
2.02953E+17,checkersai#1659,2021-04-15,But it also made me curious about the history of this convention,,
4.66395E+17,oaktownsam#0815,2021-04-15,"I don't know, but I have a wild guess it has to do with saving paper üôÇ",,
2.02953E+17,checkersai#1659,2021-04-15,That makes a lot of sense actually,,
6.87833E+17,grey#8674,2021-04-15,"I can‚Äôt speak to the historical considerations, but given that auto indentation is a thing, putting the close parens on separate lines doesn‚Äôt add much to readability, since you can rely on the indentation for cues. However, I will put close parens on a separate line, if the form is too big to fit on one screen.",,
2.34164E+17,python#3213,2021-04-15,"In the SCIP lecture videos, they used the same system, so it's been in use for a long time",,
4.66395E+17,oaktownsam#0815,2021-04-15,They probably kept doing it in the 80s to save bytes üòÑ,,üòÜ (1)
2.34164E+17,python#3213,2021-04-15,yeah,,
2.75501E+17,Plane#0324,2021-04-15,i don't have a strong opinion but i like it (:,,
2.75501E+17,Plane#0324,2021-04-15,i do really like the way things line up vertically and you can just see the structure of the code,,
2.75501E+17,Plane#0324,2021-04-15,i wish people did that in more languages,,
1.56786E+17,williewillus#8490,2021-04-15,"yeah
instead of asking ""why stack on the same line"", we should ask the imperative programmers ""why waste another whole line on braces""? üòõ",,üëç (1)
4.66395E+17,oaktownsam#0815,2021-04-15,Strangely I'm ok with braces on different lines.,,
2.64024E+17,Eutro#0016,2021-04-15,ok mr ifs-require-braces,,
1.56786E+17,williewillus#8490,2021-04-15,wacko,,
1.56786E+17,williewillus#8490,2021-04-15,that's to stop people from shooting themselves in the foot,,üëÜ (1)
2.75501E+17,Plane#0324,2021-04-15,i never felt like that was particularly necessary,,
2.75501E+17,Plane#0324,2021-04-15,"at least, i personally never ran into any problems arising from braceless ifs over the past few decades lol",,
2.75501E+17,Plane#0324,2021-04-15,"just seems like an arbitrary convention, it's fine i guess",,
2.75501E+17,Plane#0324,2021-04-15,"but i've always just adapted to whatever convention other people want to use, i never really push opinions about those things very much",,üëç (1)
2.75501E+17,Plane#0324,2021-04-15,"i feel like being adaptable, keeping things in a group relatively low-friction, is a good trait to have",,
2.75501E+17,Plane#0324,2021-04-15,"so if a project declares that we must have braces on all `if`s in a language where it's not syntactically required, that's cool with me",,
2.75501E+17,Plane#0324,2021-04-15,when in rome,,
5.19322E+17,b1_#8868,2021-04-15,Me too. I'm all about readability,,
2.64024E+17,Eutro#0016,2021-04-15,"braceless ifs, fors or whiles are only acceptable if the statement comes on the same line",,
2.64024E+17,Eutro#0016,2021-04-15,braceless `do ...; while();` though :yeefuckinhaw:,,ü§î (1)
4.66395E+17,oaktownsam#0815,2021-04-15,"I understand that sentiment, but I would put them in braces",,
2.64024E+17,Eutro#0016,2021-04-15,"I tend to write my imperative code to aggressively short-circuit and return/continue as early as possible, so a lot of my ifs are just `return;` or `continue;`",,
2.34164E+17,python#3213,2021-04-15,"imo, the more brackets/parens the better üòà",,
2.34164E+17,python#3213,2021-04-15,but also put them on the same line to not waste space,,
2.34164E+17,python#3213,2021-04-15,hate C# convention for that,,
5.19322E+17,b1_#8868,2021-04-15,If not wasting space is more readable (the war of the parentheses convention has started),,
5.19322E+17,b1_#8868,2021-04-15,"(...to the death, no prisoners)",,
2.34164E+17,python#3213,2021-04-15,at least can we all agree that this is absolutely terrible: https://github.com/sal55/langs/blob/master/lisp.c,,
5.19322E+17,b1_#8868,2021-04-15,certainly,,
9.9326E+16,Runi#1730,2021-04-15,my only complaint with the parens ending all on one line is that i semi-regularly need to poke through or count them to figure out which one to insert a newline at if I ever want to add another expression to a nested let/cond/loop/etc,,
2.75501E+17,Plane#0324,2021-04-15,i use `%` in vim to hop between matched parens,,plusone (1)
9.9326E+16,Runi#1730,2021-04-15,i think it's one of those conventions that might save space or look a little nicer in exchange for a tiny bit of maintainability,,
2.75501E+17,Plane#0324,2021-04-15,"i think most editors have things like that, like alt-left/right in drracket",,
2.75501E+17,Plane#0324,2021-04-15,so a lot of the time your editor can sort of jump to the right spot for you,,
9.9326E+16,Runi#1730,2021-04-15,i'll have to find the equivalent in vsc lol,,
9.9326E+16,Runi#1730,2021-04-15,would be good to know for sure,,
2.736E+17,Alwinfy#7306,2021-04-15,"```json
{
  ""type"": ""botania:mana_infusion"",
  ""input"": {
    ""item"": ""minecraft:hay_block""},
  ""output"": {
    ""item"": ""minecraft:sugar_cane""},
  ""mana"": 2000}```",,
1.56786E+17,williewillus#8490,2021-04-15,json is just a terrible format,,
1.56786E+17,williewillus#8490,2021-04-15,you know how I'm going to respond :wacko:,,
4.66395E+17,oaktownsam#0815,2021-04-15,<five hour conversation about json and xml intensifies>,,
2.66505E+17,notjack#9941,2021-04-15,"json, xml, and parenthesis, glad we got the important topics covered üòâ",,
2.34164E+17,python#3213,2021-04-15,one of the reasons i love rainbow brackets,,
2.75501E+17,Plane#0324,2021-04-15,rainbow brackets are nice,,
2.75501E+17,Plane#0324,2021-04-15,editors also usually highlight matched brackets too i think,,
2.75501E+17,Plane#0324,2021-04-15,i like the way drracket does it tbh,,
2.75501E+17,Plane#0324,2021-04-15,rainbow brackets in drracket would be a cool thing to have,,
2.75501E+17,Plane#0324,2021-04-15,although i guess a lot of people just use emacs lol,,
2.02953E+17,checkersai#1659,2021-04-15,that's why I suggested this: https://discord.com/channels/571040468092321801/618895179343986688/832379976950743041,,
2.75501E+17,Plane#0324,2021-04-15,editors basically do take care of that for you though,,
2.75501E+17,Plane#0324,2021-04-15,i haven't used vscode so i can't help with specifics on that but maybe someone else can,,
9.9326E+16,Runi#1730,2021-04-15,"ah i already looked it up, ctrl+shift+\ goes to the matching bracket",,
9.9326E+16,Runi#1730,2021-04-15,i do wonder if just adopting a convention that obsoletes having to do that would be worth it though lol,,
9.9326E+16,Runi#1730,2021-04-15,also might improve readability a bit - makes it immediately obvious which indent levels are for sequential statements instead of arguments,,
9.9326E+16,Runi#1730,2021-04-15,(is there a name that encompasses that in racket? docs usually just refer to it as *exprs* or body),,
7.73175E+17,meowüé∫#2842,2021-04-16,Has anyone here used the games/cards library to make something?,,
7.73175E+17,meowüé∫#2842,2021-04-16,I can't see it used outside PLT Games.,,
2.75501E+17,Plane#0324,2021-04-16,"i haven't, but i just looked up the docs, and i see this:",,
2.75501E+17,Plane#0324,2021-04-16,"> According to [some mathematical theorem], 7 is a large enough n to get a perfect shuffle.",,
2.75501E+17,Plane#0324,2021-04-16,interesting üëÄ,,
2.75501E+17,Plane#0324,2021-04-16,"Making a game with racket is one thing I haven‚Äôt done yet, but I kind of want to",,
2.75501E+17,Plane#0324,2021-04-16,"I‚Äôm not the most experienced Racketeer, but it‚Äôs just such a fun language (:",,
7.73175E+17,meowüé∫#2842,2021-04-16,Absolutely!,,
2.64024E+17,Eutro#0016,2021-04-16,well now's your chance with the Lisp #gamejam,,
4.66395E+17,oaktownsam#0815,2021-04-16,"Greg Hendershott has a WIP identifier lookup tool for searching across modules: https://github.com/greghendershott/pdb

Possibly of interest to @Runi",,
9.9326E+16,Runi#1730,2021-04-16,"interesting! though i feel like i'd be hesitant to store symbols like this because there's no way for the langserver to tell if a user has edited (`git pull`, etc) a project since the last time it checked all of the files",,
7.73175E+17,meowüé∫#2842,2021-04-16,Maybe a Git hook can be defined to refresh automatically?,,
4.66395E+17,oaktownsam#0815,2021-04-16,He's designing it to work with racketmode in emacs so he may find that feedback useful,,
5.19322E+17,b1_#8868,2021-04-17,"Anyone know: if I write program in Racket how hard it is to get it working on the web - or should I just learn Python, Ruby or Javascript?",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-04-17,"easy, if multipage app satisfies what you mean by ""working on the web""",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-04-17,"(which I assume it does, because otherwise neither python or ruby are commonly used to implement clientside scripting / frontend)",,
5.19322E+17,b1_#8868,2021-04-17,"What I mean is, if I make a simple game in Racket, can I get it up on the web for others to interact with?",,
5.19322E+17,b1_#8868,2021-04-17,I'm not talking about anything too complicated,,
5.19322E+17,b1_#8868,2021-04-17,"If I can, how would I do that - is Continue the way to do it",,
5.19322E+17,b1_#8868,2021-04-17,"...and, if it's possible, anybody got any examples they can link to",,
1.93202E+17,rocketnia#4517,2021-04-17,"@b1_  it probably depends on what you mean by a ""simple game""...

If you're thinking of something with real-time gameplay or animations, you'll probably want to use one of the ways to generate JavaScript from Racket (i.e., RacketScript, Urlang). Racket has some game engines for making games as desktop applications, but you probably won't be able to make a game that way and put it on the web without taking a serious performance hit.

If you're thinking of something more turn-based, like Twine games (e.g., Birdland), text adventures, or Neopets, you might be able to do that as a Racket web server that serves simple HTML pages with links and forms on them. In this case, Racket's web server frameworks would probably be useful. ""Continue"" is a guide that describes a couple of those frameworks.",,
5.19322E+17,b1_#8868,2021-04-17,"Interactive games is probably too complicated - I was thinking a simple map building app, that has a user enter parameters like size of map, percentage of sea, etc, then the map is generated to the screen (hex map for example) on a webpage using Racket's image library - this is just a practice exercise",,
5.19322E+17,b1_#8868,2021-04-17,So user would input their choices then the map is generated - like a batch program. Maybe it's a World Prog Big-Bang program with on-key used for input,,
5.19322E+17,b1_#8868,2021-04-17,"Maybe while we're here someone could tell me what design pattern/recipe I'm supposed to use for such a program, if any.",,
5.19322E+17,b1_#8868,2021-04-17,"*I meant real-time interactive is too complicated, because the map game/interface I'm describing is still interactive",,
1.93202E+17,rocketnia#4517,2021-04-17,"@b1_ The only way I know of to put a big-bang program on the web is Whalesong, which compiles Racket to JavaScript in a way that's really faithful to Racket's semantics. From what I've heard, the cost of that faithfulness is that the resulting JavaScript is often pretty slow.

Nowadays, there might be another way to do it via Emscripten, compiling Racket itself to Wasm to run in the browser. I don't recall if I've seen anyone do that.",,
5.19322E+17,b1_#8868,2021-04-17,"*okay, the map-game is also real-time interactive, but you know what I mean",,
5.19322E+17,b1_#8868,2021-04-17,"Sounds not so easy. I think I will need to do a mock-up anyway - I can do that in Racket and then move on to Python , Ruby or Javascript which I will probably need to do anyway. I already have done a lot of Ruby but ran into endless bugs so I am reading HtDP2e to learn testing and check-functions and concentration of data definitions (learning to program properly in other words)",,
1.93202E+17,rocketnia#4517,2021-04-17,"I think your questions are sadly more in ""is this possible to do at all with current technology"" territory than ""what do people usually do"" territory...

It seems like Whalesong is the project that most directly addresses what you're looking to do, so that might hold the answers.",,
5.19322E+17,b1_#8868,2021-04-17,"Thx, I'm checking it out.",,
1.93202E+17,rocketnia#4517,2021-04-17,"If I understand right, Pyret has partly been built as a way to let students make big-bang games that work on the web. Pyret is a different language than Racket, and it compiles directly to JavaScript so that its big-bang can have good performance.",,
5.19322E+17,b1_#8868,2021-04-18,"Best result I'm going to get is if I mock it up iin Racket, then write the finished prog in Javascript",,
5.19322E+17,b1_#8868,2021-04-18,...I'm thinkin,,
5.19322E+17,b1_#8868,2021-04-18,Since Javascript executes on your browser,,
7.73175E+17,meowüé∫#2842,2021-04-18,@Dav1s Please keep copypastas in #off-topic.,,
7.73175E+17,meowüé∫#2842,2021-04-18,Or preferably not here at all.,,"thistbh (2),plusone (1)"
4.62028E+17,StephenD#5938,2021-04-18,does anyone use tio.run to run rackethttps://tio.run/##XUzNCsIwDL73KSJekpMTnyhr4yirHYsV5tPXrA4pBpLw/Sr7WUqt58R5Am3IOVRZX1HlIC6TZFEui5JpQe4xC2wwdAgZRnKA7TylnEy/UWfwxv9qAM3WjaUx8WMM9gnwHSUFuBL9ub78Rq3X0761fgA,,
1.30231E+17,sarna#3904,2021-04-18,"when I click on this link, my discord crashes",,concern (2)
4.62028E+17,StephenD#5938,2021-04-18,Discord on my phone quits too!  Just using the link direct works fine I found it via http://cs.brown.edu/courses/cs173/2020/generators.html,,
4.62028E+17,StephenD#5938,2021-04-18,I‚Äôve removed the post.,,
7.73175E+17,meowüé∫#2842,2021-04-18,üëç,,
2.14881E+17,Moinate#6061,2021-04-18,"1. If you are willing to have people download a Racket client, then you can use `htdp/universe` to make a real-time multiplayer interactive game.",,
2.14881E+17,Moinate#6061,2021-04-18,"The practice exercise of a map-building program can be done without ""live"" interactivity with the web server https://docs.racket-lang.org/continue/index.html
There are examples of using a similar server setup to make 1 player interactive game by encoding all of the game state in the url (I believe). Look for ""web-sweeper"" or ask here - I no longer have a link to the source.",,
5.19322E+17,b1_#8868,2021-04-18,"Well I am willing for any user to dl a Racket client, but they wont be. I think the idea of being able to create a simple program in Racket and have it work online with no requirement for the user to do anything except enter some desired parameters and hit a ""go"" button is appealing to me and also motivational. A prog lang having this capability is probably a part of what makes it popular too. Even better if it can be ported to a smart phone.",,
5.19322E+17,b1_#8868,2021-04-18,"Writing a program and having it seemlessly published online or on a phone is the idea, even have it published on web or phone as you build it would be ideal.",,
5.19322E+17,b1_#8868,2021-04-18,"Building something on your computer in DrRacket and no-one ever seeing it, not so motivational.",,
5.19322E+17,b1_#8868,2021-04-18,"Not that I'm going to give up on Racket and my book HtDP2e study, it's just too good.",,
2.75501E+17,Plane#0324,2021-04-18,"that's why i worked on flash games a long time ago, not because i thought flash was the world's coolest tech, but because lots of people would see the games lol",,
5.19322E+17,b1_#8868,2021-04-18,üëç,,
1.93202E+17,rocketnia#4517,2021-04-18,"This is the reason I used JavaScript as my primary language for a long time. Nowadays, it seems like most popular languages have at least some quirky way to compile things to JS or Wasm, so there are a lot of options.",,
5.54147E+17,blankhart#6257,2021-04-18,"are there common examples of the use of syntax objects at runtime, rather than in macro transformers?",,
3.5323E+17,Alex Knauth#4895,2021-04-18,"I've used syntax objects at runtime when writing compilers in Racket... mainly because they're convenient for source-locations, but also because `syntax-parse` is awesome",,
2.66505E+17,notjack#9941,2021-04-18,@blankhart does a tool that analyzes code count? https://github.com/jackfirth/resyntax/,,
3.5323E+17,Alex Knauth#4895,2021-04-18,I've also used syntax objects at runtime for scribble documents using `scribble/example` or similar things,,
5.54147E+17,blankhart#6257,2021-04-18,"yes those count, thanks",,
3.5323E+17,Alex Knauth#4895,2021-04-18,"Oh and also for processing with XML files at runtime, when I want to preserve the source-location of the XML elements for error-reporting purposes",,
3.5323E+17,Alex Knauth#4895,2021-04-18,"Another example is counting SLOC, or Source Lines Of Code, of racket files",,
5.54147E+17,blankhart#6257,2021-04-18,can you say more about processing with XML files and the source location of XML elements?,,
3.5323E+17,Alex Knauth#4895,2021-04-18,"well for my particular example I was processing MusicXML, trying to parse it into my own representation of sheet music so I could analyze it with music-theory stuff and transform it in certain ways",,ü§Ø (2)
5.54147E+17,blankhart#6257,2021-04-18,i see,,
3.5323E+17,Alex Knauth#4895,2021-04-18,"and when there was an error in a MusicXML file, I really needed to know exactly where the problem was coming from so I could fix it",,
5.54147E+17,blankhart#6257,2021-04-18,maybe what i am missing (as a racket novice) is how the syntax object was useful - the error reporting would presumably be associated with the MusicXML file rather than anything in the racket into which it was parsed,,
3.5323E+17,Alex Knauth#4895,2021-04-18,The syntax-parse error messages I was getting had both the source-location within the MusicXML file and the syntax-class within the file I was writing to parse it,,
6.87833E+17,grey#8674,2021-04-18,"Syntax objects are *abstract* syntax, which means they‚Äôre a nicely-formed data structure, instead of a string of characters. Any time that you parse something into a data structure that accurately represents the parsed data, you‚Äôre building abstract syntax. Error reporting is simply a case of using the information encoded in abstract syntax to point to a specific part of the concrete syntax.",,
5.54147E+17,blankhart#6257,2021-04-18,"that makes sense to me, but how would the syntax object passed to syntax-parse be constructed at runtime in order to capture interesting lexical information?  is the point that if i am using a non-racket language, i am definitely keeping the source information, but not because i have a syntax object, just because i want an annotated AST.  the way to do that in racket would be to use the syntax object as a preexisting construct for that purpose? so at runtime, the parser endows the AST with the source info and turns it into a syntax object?",,
2.66505E+17,notjack#9941,2021-04-18,you can use syntax objects without using any of the lexical information / scope bits,,
2.66505E+17,notjack#9941,2021-04-18,in that case they turn into s-expressions with source locations,,
2.66505E+17,notjack#9941,2021-04-18,which are very handy for error-reporting purposes,,
6.87833E+17,grey#8674,2021-04-18,"Syntax objects are actually plain Racket data with extra information (like source locations) attached to them. You can build a syntax object out of normal data using `datum->syntax`. (https://docs.racket-lang.org/reference/stxops.html?q=-%3Esyntax#%28def._%28%28quote._~23~25kernel%29._datum-~3esyntax%29%29) Racket‚Äôs reader (parser) does this while parsing a module.

You can write a parser that does this to build a custom AST for a specific source language, but it‚Äôs much easier to use a library like `bragg` (https://docs.racket-lang.org/brag/index.html?q=bragg) to automatically generate a parser that gives you syntax objects.",,plusone (1)
5.54147E+17,blankhart#6257,2021-04-18,"got it, thanks - if i understand, then put another way, racket has parsers that generate racket syntax objects for use at compile-time in order to give effect to the language-oriented programming paradigm (language towers etc.) but there is no reason those same parsers can't also be used at runtime in order to propagate source file spans into the AST.",,
6.87833E+17,grey#8674,2021-04-18,The language tower approach is that the runtime of one program is just the compile time of another program.,,üíØ (1)
5.54147E+17,blankhart#6257,2021-04-18,"is that agreement?  i understand phased compilation, but there is only one phase zero.",,
5.54147E+17,blankhart#6257,2021-04-18,once racket goes away,,
6.87833E+17,grey#8674,2021-04-18,"What do you mean by, ‚Äúonce racket goes away‚Äù?",,
2.66505E+17,notjack#9941,2021-04-18,"I'd agree with this, yes",,
5.54147E+17,blankhart#6257,2021-04-18,"well, at some point you aren't running racket on a source file, you are running a compiled program",,
5.54147E+17,blankhart#6257,2021-04-18,by racket meaning the racket compiler,,
5.54147E+17,blankhart#6257,2021-04-18,"thanks all, this was very helpful",,
2.75501E+17,Plane#0324,2021-04-18,racket running seamlessly on wasm would be super nice,,üíØ (1)
7.73175E+17,meowüé∫#2842,2021-04-18,"@blankhart Racket doesn't have a native compiler, mind you. You'll still need the `racket` executable to run the bytecode.",,
7.73175E+17,meowüé∫#2842,2021-04-18,"So, in a sense, the compiler follows you around.",,
5.54147E+17,blankhart#6257,2021-04-19,But the VM is separate from the compiler and the expander doesn't run again once everything is bytecode right?,,
2.66505E+17,notjack#9941,2021-04-19,right,,
2.66505E+17,notjack#9941,2021-04-19,the expander is still included in the executable in case you `eval` anything though,,
7.94955E+17,Laurent O#6627,2021-04-19,Nice. Do you have a snippet by any chance?,,
2.75501E+17,Plane#0324,2021-04-19,it takes about 19 seconds for me to call `(random)` a hundred million times,,
2.75501E+17,Plane#0324,2021-04-19,but it only takes about 9 seconds if i do it in a sandbox,,
2.64024E+17,Eutro#0016,2021-04-19,!rkt eval `(time (for ([i (in-range 10000)]) (random)))`,,
8.02004E+17,r16#4581,2021-04-19,cpu time: 2 real time: 2 gc time: 0,,
2.64024E+17,Eutro#0016,2021-04-19,:clueless:,,
2.64024E+17,Eutro#0016,2021-04-19,Takes the bot ~19 seconds too in our sandbox,,
2.64024E+17,Eutro#0016,2021-04-19,which is slightly quicker than my Chromebook (23s) :groovefast:,,
2.64024E+17,Eutro#0016,2021-04-19,In a sandbox it timed out (>30s),,
2.75501E+17,Plane#0324,2021-04-19,speed up your tight-loop calls to `random` with this one weird trick!,,
2.75501E+17,Plane#0324,2021-04-19,it's kind of a silly thing to test but i was thinking of writing some code which runs largely sandboxed,,
2.75501E+17,Plane#0324,2021-04-19,"and, not knowing anything about the sandbox, i started wondering, is there often a noticeable performance penalty in the sandbox?",,
2.75501E+17,Plane#0324,2021-04-19,"well, the code won't be a loop calling `random` a hundred million times, so it might work out differently lol",,
2.75501E+17,Plane#0324,2021-04-19,it was just the first thing i thought to try,,
2.75501E+17,Plane#0324,2021-04-19,and i was surprised to see it consistently ran faster inside the sandbox,,
7.73175E+17,meowüé∫#2842,2021-04-19,Sounds like you should investigate `random`'s guts.,,
7.73175E+17,meowüé∫#2842,2021-04-19,It's probably an OS-level bottleneck.,,
5.19322E+17,b1_#8868,2021-04-19,"Turns out there is a way to develop web apps in Racket, there's a book in the Racket recommended books list https://racket-lang.org/books.html called Server Racket by Jesse Alama",,
3.5323E+17,Alex Knauth#4895,2021-04-19,https://github.com/AlexKnauth/syntax-sloc,,
7.94955E+17,Laurent O#6627,2021-04-19,"Awesome, thanks @Alex Knauth",,
2.34164E+17,python#3213,2021-04-19,"üòÜ  ah, so there is a ""pyramid scheme""",,
2.34164E+17,python#3213,2021-04-19,i was theorizing about what such a scheme would do,,
4.62028E+17,StephenD#5938,2021-04-19,this is the fun one  https://esolangs.org/wiki/Pyramid_Scheme,,
2.34164E+17,python#3213,2021-04-19,"ahh, that's more like it üôÇ",,
4.62028E+17,StephenD#5938,2021-04-19,"it is in ruby!  üò±  
https://github.com/ConorOBrien-Foxx/Pyramid-Scheme/blob/master/pyra.rb",,concern (1)
4.62028E+17,StephenD#5938,2021-04-19,"Instant competition time!  I'll send a racket t-shirt https://devswag.com/products/racket-t-shirt  for the first **three** langs to be created and put on the racket package catalog. 
Post your entries on #show-and-tell I'm the judge. üôÇ",,üòÉ (1)
2.34164E+17,python#3213,2021-04-19,any langauge?,,
2.64024E+17,Eutro#0016,2021-04-19,@Alwinfy doots lang doots lang,,
4.62028E+17,StephenD#5938,2021-04-19,it has to be written in racket.,,
2.34164E+17,python#3213,2021-04-19,can an assembly language count?,,
2.34164E+17,python#3213,2021-04-19,i have an assembler written in racket,,
2.34164E+17,python#3213,2021-04-19,i haven't done much with it,,
4.62028E+17,StephenD#5938,2021-04-19,yes,,
2.34164E+17,python#3213,2021-04-19,posted,,
2.736E+17,Alwinfy#7306,2021-04-19,you publish it :P,,nou (1)
2.736E+17,Alwinfy#7306,2021-04-19,i don't want to go through the hoops of langifying it,,
2.34164E+17,python#3213,2021-04-19,"i am not familiar so, how does packaging work in racket?",,
2.64024E+17,Eutro#0016,2021-04-19,Does `#lang r16/trick` count because I think that's the only one I've written :groovefast:,,
2.34164E+17,python#3213,2021-04-19,oh wait,,
2.34164E+17,python#3213,2021-04-19,does it have to be a #lang?,,
2.736E+17,Alwinfy#7306,2021-04-19,i think that counts as a metalang,,
2.736E+17,Alwinfy#7306,2021-04-19,which means you should get the credit :P,,
4.62028E+17,StephenD#5938,2021-04-19,it has to be in racket on on the package catalog.,,
2.64024E+17,Eutro#0016,2021-04-19,So anything that can be `raco pkg install`-ed?,,
2.64024E+17,Eutro#0016,2021-04-19,`r16/trick` fits the bill then :groovefast:,,
2.34164E+17,python#3213,2021-04-19,i have to figure out how to package something,,
4.62028E+17,StephenD#5938,2021-04-19,"from 
https://pkgs.racket-lang.org",,
4.62028E+17,StephenD#5938,2021-04-19,"yes, That is one t-shirt gone.  DM me your details",,üëç (1)
4.62028E+17,StephenD#5938,2021-04-19,two to go.,,
2.34164E+17,python#3213,2021-04-19,@StephenD https://pkgd.racket-lang.org/pkgn/package/basm,,
2.34164E+17,python#3213,2021-04-19,it is online,,
2.34164E+17,python#3213,2021-04-19,"i don't really understand how the package catalog works, but i think i did it right",,
4.62028E+17,StephenD#5938,2021-04-19,can you update the readme so I know how to use it?,,
2.34164E+17,python#3213,2021-04-19,"oh, yeah üòÜ",,
4.62028E+17,StephenD#5938,2021-04-19,You have a provisional win - on the condition that I can actually get it working.,,
2.34164E+17,python#3213,2021-04-19,"haha, yeah",,
4.62028E+17,StephenD#5938,2021-04-19,ONE LEFT......,,
2.34164E+17,python#3213,2021-04-19,i will include some examples in the readme,,üíØ (1)
2.34164E+17,python#3213,2021-04-19,here you go: https://gitlab.com/pythondude325/basm/-/blob/master/README.md,,
2.34164E+17,python#3213,2021-04-19,"it's a language mainly written for one person, so i didn't really think about that üòÖ",,ü§£ (1)
4.62028E+17,StephenD#5938,2021-04-19,That counts. Dm me your details,,
4.62028E+17,StephenD#5938,2021-04-19,Don‚Äôt forget to post to #show-and-tell,,
2.34164E+17,python#3213,2021-04-19,i already did,,
2.34164E+17,python#3213,2021-04-19,just above the r16/tricks thing,,
2.34164E+17,python#3213,2021-04-19,"oh, that link. gotcha",,plusone (1)
4.62028E+17,StephenD#5938,2021-04-19,One left.....,,
1.93202E+17,rocketnia#4517,2021-04-19,"was the one left here, or is there one left now? just asking for other people's sake",,
2.66505E+17,notjack#9941,2021-04-19,"We don't want to encourage discussing cryptocurrency in this server. It's an environmentally disastrous technology that's mostly used to trick people out of their money. Cryptography and blockchain-y stuff is fine to talk about, but cryptocurrency is not.",,
2.66505E+17,notjack#9941,2021-04-19,"Yes, I do only offer support to projects I agree with. If somebody starts writing racket code for piloting military drones or for facial recognition-based border surveillance, I will not support that and I won't make a space for it in this server. Every self-respecting engineer should consider whether the things they build are used to hurt people. To do otherwise is wildly irresponsible.

If you want to work on this project or seek help with it, that's fine, I'm not going to stop you from doing that anywhere else. Just don't do it here.",,
2.66505E+17,notjack#9941,2021-04-19,"Neither of those are on topic, so if you continue trying to argue the point I'll gladly resolve the inconsistency by kicking you. And no, I don't agree with that statement about the listsev at all.",,
5.39857E+17,youtube.com/adamgolding#3870,2021-04-19,I am clarifyin the policy so I know the politics of this discord,,
5.39857E+17,youtube.com/adamgolding#3870,2021-04-19,why do you disagee with the statement abou tthe listerv?,,
2.66505E+17,notjack#9941,2021-04-19,Because the mailing list and this discord have different users and admins.,,
5.39857E+17,youtube.com/adamgolding#3870,2021-04-19,I cam ehere because the discord was mentioned on the listserv and I seconded added a link to it to th eracket webpage,,
5.39857E+17,youtube.com/adamgolding#3870,2021-04-19,but now I'm not so sure,,
5.39857E+17,youtube.com/adamgolding#3870,2021-04-19,"but form what you said above, my post was actually on-topic",,
2.66505E+17,notjack#9941,2021-04-19,"I'm happy to answer more questions about my philosophy of community moderation in DMs, but that isn't a conversation I'm going to subject the whole server to. If you'd like more explanation, DM me.",,
5.39857E+17,youtube.com/adamgolding#3870,2021-04-19,okay that's reasonable enough,,üëç (1)
4.66395E+17,oaktownsam#0815,2021-04-19,@notjack I'm trying to use `#lang envy` for a project and sadly it's bombing out my testing because I don't have (or need) the environment variables set for testing.  Do you know of any work-arounds for that?,,
2.66505E+17,notjack#9941,2021-04-19,hmm. not off the top of my head. what sort of variables?,,
4.66395E+17,oaktownsam#0815,2021-04-19,Just environment variables.  The problem is when `raco test` goes to check the module it runs it and of course none of the env variables are set.,,
4.66395E+17,oaktownsam#0815,2021-04-19,So it errors,,
2.66505E+17,notjack#9941,2021-04-19,"no I mean, what kind of config things are you using the env vars for",,
2.66505E+17,notjack#9941,2021-04-19,"like, addresses of remote services / database connection info?",,
4.66395E+17,oaktownsam#0815,2021-04-19,yes,,
4.66395E+17,oaktownsam#0815,2021-04-19,I'm replacing a bespoke `(getenv var)` macro,,
2.66505E+17,notjack#9941,2021-04-19,perhaps the eager evaluation of envy was a mistake,,
4.66395E+17,oaktownsam#0815,2021-04-19,"I think I may just scrap using the surface syntax and use `(define/provide-environment ...)` directly, then I can put in the ""don't test this"" sub-module",,
4.66395E+17,oaktownsam#0815,2021-04-19,actually I'll see if I can change how I call raco test since,,
4.66395E+17,oaktownsam#0815,2021-04-19,that is less drastic,,
2.66505E+17,notjack#9941,2021-04-19,"_ah_ I see what you mean - `raco test` is trying to eval the envy module itself, and that's the problem",,
4.66395E+17,oaktownsam#0815,2021-04-19,yessss,,
2.66505E+17,notjack#9941,2021-04-19,there's a way to use `info.rkt` to tell `raco test` to skip certain files,,
4.66395E+17,oaktownsam#0815,2021-04-19,Not eagerly evaluating the vars would work too though.,,
4.66395E+17,oaktownsam#0815,2021-04-19,"Making this into a proper package with an `info.rkt` was on my todo, I guess I should do that sooner now üôÇ",,
4.66395E+17,oaktownsam#0815,2021-04-19,`test-omit-paths`,,
2.66505E+17,notjack#9941,2021-04-19,yup that one,,
4.66395E+17,oaktownsam#0815,2021-04-19,ahh another workaround is just to pass `-x` to `raco test` as that skips modules that don't have test submodules,,
4.66395E+17,oaktownsam#0815,2021-04-19,The ultimate workaround would be to remove `raco test` from the Dockerfile.  But that seems like a poor practice üòõ,,
2.66505E+17,notjack#9941,2021-04-19,It would technically work :p,,
7.65855E+17,stevejobs#8546,2021-04-20,"hey guys , how to search for element in deeper levels of a list using racket",,
4.62028E+17,StephenD#5938,2021-04-20,"https://discord.com/channels/571040468092321801/618895179343986688/833833697924481075

Two went last night - there is one prize left",,
1.93202E+17,rocketnia#4517,2021-04-20,"yeah, I messed up and thought the two people who got the prize were three people instead :)",,
4.1228E+17,xgqt#8370,2021-04-20,Hi! Is there any library / DSL for proofs written in Racket? Something like Izabelle or Coq.,,
7.73175E+17,meowüé∫#2842,2021-04-20,There's Dracula.,,
7.73175E+17,meowüé∫#2842,2021-04-20,http://dracula-lang.github.io/,,
7.73175E+17,meowüé∫#2842,2021-04-20,Also https://arxiv.org/abs/1611.09473,,
7.73175E+17,meowüé∫#2842,2021-04-20,And https://github.com/wilbowma/cur,,
4.1228E+17,xgqt#8370,2021-04-20,"I saw on pkgs.racket before that dracula build fails
thx for suggesting cur",,
7.73175E+17,meowüé∫#2842,2021-04-20,"Yeah, Dracula is a bit old and undermaintained.",,
7.73175E+17,meowüé∫#2842,2021-04-20,I think it was intended for the book The Little Prover.,,
4.62028E+17,StephenD#5938,2021-04-20,@youtube.com/adamgolding I apologise for removing your post.  I want all racketeers to be welcome here. As it is Racket related I'd appreciate it if you could repost.,,"üôÑ (1),‚òπÔ∏è (1)"
5.39857E+17,youtube.com/adamgolding#3870,2021-04-20,"Thanks Stephen, this is what I wrote on the listserv: ""Thanks Stephen, perhaps you can help get the ball rolling again--I had written to suggest that racketers may want to enter the moralis hackathon as there are some points of convergence:

- racket seeks to bridge multiple languages, moralis seeks to bridge multiple blockchains with different smart contract languages
- racket has a powerful contract system which will ultimately need to interoperate with smart contracts¬†
- racket is aimed at web applications as one use case and moralis is first (I think) in what will be many CMS-type platforms for the new web3 paradigm--if racket does not have a web3 solution it will be left behind and it is already not widely used for web servers--this is an opportunity¬†for the Racket community to front-run the web development industry, get it?

I am not an experienced racketer but I would be happy to help out.¬† I also got Mr. Ivan to create an #off-topic in the moralis discord for brainstorming¬†that is not strictly development, by analogy to how freenode has both #math and #not-math.¬† I also suggest the racket discord create a channel specifically for decentralized systems of all kinds--torrents, web3, crypto, voting systems, markets, etc.

Cheers,
Adam""",,
5.39857E+17,youtube.com/adamgolding#3870,2021-04-20,the closest existing project i have found is https://www.reddit.com/r/Racket/comments/7gnzxg/write_your_next_ethereum_contract_in_pyramid/,,
4.62028E+17,StephenD#5938,2021-04-20,I‚Äôve not kept up with racket-news but I just found the last issue!,,
4.62028E+17,StephenD#5938,2021-04-20,https://racket-news.com/2021/03/racket-news-issue-48.html,,
4.62028E+17,StephenD#5938,2021-04-20,I‚Äôm really interested in the ‚Äòproject in the spotlight‚Äô,,
4.62028E+17,StephenD#5938,2021-04-20,https://gitlab.iaaras.ru/iaaras/landau,,
4.62028E+17,StephenD#5938,2021-04-20,"From the website:

> Landau is a language for dynamical systems with automatic differentiation. Landau is a Turing incomplete statically typed domain-specific differentiable language. The Turing incompleteness provides the ability of sophisticated source code analysis and, as a result, a highly optimized compiled code. Among other things, the language syntax supports functions, compile-time ranged for loops, if/else branching constructions, real variables and arrays, and the ability to manually discard calculation where the automatic derivatives values are expected to be negligibly small. In spite of reasonable restrictions, the language is rich enough to express and differentiate any cumbersome paper-equation with practically no effort.",,
2.66505E+17,notjack#9941,2021-04-20,Wow that sounds really cool,,
2.34164E+17,python#3213,2021-04-20,i understood about 80% of those words,,
4.66395E+17,oaktownsam#0815,2021-04-20,If you constrain the programming language you can solve hard problems easier.  The constrained language is still useful. üòÑ,,plusone (1)
2.14881E+17,Moinate#6061,2021-04-20,"It looks like the mixfix package from Racket News can immediately write ""an array reference operator"" so that `(arr @ 4)`  produces `(array-ref arr 4)`, which I think was discussed on this server a while ago. I'm not sure if this beats out the (hack?) `make-set!-transformer` approach that was suggested, but it's still cool.",,
4.83487E+17,jest#6646,2021-04-20,how do you get the fractional part of a decimal value out in racket?,,
4.83487E+17,jest#6646,2021-04-20,e.g `3.1415 -> 1415`,,
2.66505E+17,notjack#9941,2021-04-20,"@jest Do you want to get the fractional part as a number between 0 and 1, or as an integer? that is, should `3.1415` produce `0.1415` or `1415`?",,
4.83487E+17,jest#6646,2021-04-20,"woops yeah, meant : `0.1415`",,
4.83487E+17,jest#6646,2021-04-20,i just realized i could do `x - floor(x)`,,
2.66505E+17,notjack#9941,2021-04-20,does that give you the result you want for negative numbers?,,
2.66505E+17,notjack#9941,2021-04-20,"like, do you want `-3.1415` to produce `-0.1415` or `0.1415`",,
1.93202E+17,rocketnia#4517,2021-04-20,or should it produce 0.8685?,,
2.66505E+17,notjack#9941,2021-04-20,also a good question üôÇ,,
4.83487E+17,jest#6646,2021-04-20,"ehh, not too worried about negative numbers for now lol",,üëç (1)
4.83487E+17,jest#6646,2021-04-20,"lol, bug reports shot up after the release of racket on chez",,
1.93202E+17,rocketnia#4517,2021-04-20,er... pretty sure my math's wrong ... should've been 0.8585,,
2.66505E+17,notjack#9941,2021-04-20,"hard to say what math is ""right"" in this case, IMO :p",,hehe (1)
2.66505E+17,notjack#9941,2021-04-20,"oh yes, quite a lot lol",,
4.66395E+17,oaktownsam#0815,2021-04-21,"More üëÄ 
or more üêõ",,
5.54147E+17,blankhart#6257,2021-04-21,"when racket executes code during expansion, how much compilation does it do before evaluation? is there a compile-time interpreter separate from the VM?",,
2.64024E+17,Eutro#0016,2021-04-21,There's phase levels,,
2.64024E+17,Eutro#0016,2021-04-21,anything executed at compile time of a given phase is the runtime of a different phase,,
5.54147E+17,blankhart#6257,2021-04-21,"i am asking a different question, about how the compiler is implemented rather than about the phase semantics",,
2.14881E+17,Moinate#6061,2021-04-21,"I'm not sure if Eutro answers the question, though. For example, I'm wondering something like when you do `raco make` do your top-level constant expressions get evaluated and saved in the compiled file, instead of being computed at the point which the file is loaded (""run-time"")? 

* Simplest example: does `(define x (* 25 25))` result in a multiplication when the file is loaded, or is it 100% equivalent to `(define x 625)`? 
* What about `(define y (expensive-computation 25))`, where `expensive-computation` is a function defined in the same file?

I can see what a swamp this is. Is there any way in which Racket contains side-effects of functions? (Not as far as I'm aware.) So unless there's a step where the function is marked ""obviously pure don't worry about this"", it can't be run ahead of time (unless...?). Ugh. I ‚ù§Ô∏è Haskell, I guess. I suppose some of this isn't even really part of ""Racket"" so much as Chez Scheme?",,
2.14881E+17,Moinate#6061,2021-04-21,"Maybe the blankheart question is just ""what can the compiler do"" and the answer is ""anything"" - you can run Racket code at compilation time.",,
5.54147E+17,blankhart#6257,2021-04-21,"i was asking a simpler question, about whether there is a difference in the way code is compiled and executed at compile-time rather than at run-time. for example, i could see a compiler writer deciding to use a different pipeline for compile-time code that skips a lot of optimizations in order to speed up the compiler, on the assumption that the compile-time expression will not be that expensive relative to the compilation process",,
5.54147E+17,blankhart#6257,2021-04-21,"that is also true of template haskell - for example, i can see template haskell being compiled by default without optimizations even if the program itself is specified to be compiled at -O3",,
2.14881E+17,Moinate#6061,2021-04-21,That's enough detail that I think you'll get the kind of answer you want from someone who knows.,,
3.38034E+17,sorawee#6299,2021-04-21,"They are all Racket code, so they are handled similarly. See https://docs.racket-lang.org/reference/linklets.html for example.",,
3.38034E+17,sorawee#6299,2021-04-21,"Yes, `(define x (* 25 25))` gets reduced to `(define x 225)`. Racket (or rather Chez Scheme) has a partial evaluator which can do that",,
3.38034E+17,sorawee#6299,2021-04-21,Here's its source code if you want to see it: https://github.com/racket/racket/blob/master/racket/src/ChezScheme/s/cp0.ss,,üòÅ (1)
3.38034E+17,sorawee#6299,2021-04-21,"It does try to infer the pureness of your expressions, though it's rather simplistic. See  https://github.com/racket/racket/blob/master/racket/src/ChezScheme/s/cp0.ss#L1121 for instance.",,
3.38034E+17,sorawee#6299,2021-04-21,"If you want to see how your code gets optimized by the partial evaluator, run `PLT_LINKLET_SHOW_CP0=1 racket /path/to/file.rkt` or `PLT_LINKLET_SHOW_CP0=1 raco make /path/to/file.rkt`",,
5.54147E+17,blankhart#6257,2021-04-21,"thank you @sorawee that is what i was looking for.  it's buried in the reference but i think the crux to understanding the answer is `eval-linklet` which ""Returns a variant of a linklet that is prepared for JIT compilation such that every later use of the result linklet with instantiate-linklet shares the JIT-generated code.""  the point being that the frontend doesn't have to send each compile-time expression through the whole pipeline every time it is used.  is that right?",,
3.38034E+17,sorawee#6299,2021-04-21,"It doesn't use `make-set!-transformer`. Rather, it overrides `#%app` and does something crazy with it.",,"concern (1),üëç (1)"
3.38034E+17,sorawee#6299,2021-04-21,"I don't know deep details about linklets, but ""frontend doesn't have to send each compile-time expression through the whole pipeline every time it is used"" is correct.",,
5.54147E+17,blankhart#6257,2021-04-21,"fwiw, i just learned on IRC that template haskell runs in an interpreted environment and is not compiled the same way as runtime code",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-04-21,all this talk hurts my brain; tbh I'm quite a fan of simplicity of syntax-rules,,
4.66395E+17,oaktownsam#0815,2021-04-21,"`syntax-rules` uses the same machinery, it's just a bit higher in the stack.",,
1.93202E+17,rocketnia#4517,2021-04-21,does that mean `(set! (arr @ 4) 10)` doesn't work?,,
3.38034E+17,sorawee#6299,2021-04-21,It won't work if that's Racket's `set!`. It could work if that's your own `set!`. The problem with Racket's `set!` is that it mandates that the first operand must be an identifier.,,
3.38034E+17,sorawee#6299,2021-04-21,"Though really, if you have `(arr @ 4)`, you might as well add something like `(arr @ 5 = 3)` instead of using `set!`",,concern (1)
2.64024E+17,Eutro#0016,2021-04-21,noo I don't want to use infix notation,,
2.66505E+17,notjack#9941,2021-04-21,"get in losers, we're using infix notation",,"meowsmile (2),ü•∫ (1),weary_technologist (1)"
2.34164E+17,python#3213,2021-04-21,i wrote an `infix-eval` function once,,
2.34164E+17,python#3213,2021-04-21,"it wasn't fun, but it did work",,
4.66395E+17,oaktownsam#0815,2021-04-21,I should dust off my honu experiment again.  I can't remember what I got stuck on last.,,plusone (2)
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-04-21,something something two dots syntax thing..,,üòâ (1)
2.736E+17,Alwinfy#7306,2021-04-21,tbh the two-dots syntax form is kind of unwieldy,,plusone (2)
2.736E+17,Alwinfy#7306,2021-04-21,you need a space before and a space after,,
2.736E+17,Alwinfy#7306,2021-04-21,so six chars total,,
2.736E+17,Alwinfy#7306,2021-04-21,~~haskell's infixl/infixr when~~,,concern (1)
2.66505E+17,notjack#9941,2021-04-21,yeah plus it looks really weird,,
2.64024E+17,Eutro#0016,2021-04-21,I think that's good because it discourages people from using it,,
2.64024E+17,Eutro#0016,2021-04-21,:clueless:,,
2.66505E+17,notjack#9941,2021-04-21,"I like infix because I like being able to read usages of `<`, `>`, etc. and trust that the author got the argument order correct",,
2.66505E+17,notjack#9941,2021-04-21,prefix `<` is... really easy to screw up,,
2.64024E+17,Eutro#0016,2021-04-21,`(define less-than? <)` :hahayes:,,
2.64024E+17,Eutro#0016,2021-04-21,I just read it as that and I'm mostly‚Ñ¢ fine,,
2.66505E+17,notjack#9941,2021-04-21,"yeah I've definitely trained myself into looking for that, I just wish I didn't have to do that",,
3.29023E+17,nixin72#3554,2021-04-21,"`<` and `>` (and other similar comparison operators) I think are the only place that I genuinely think that we'd benefit from infix, but that benefit is really big in this case imo",,
2.66505E+17,notjack#9941,2021-04-21,"ironically I work in java, which has infix syntax for everything _except_ `<` and `>` (with custom `Comparable` types)",,
3.29023E+17,nixin72#3554,2021-04-21,"lol, so it's all `obj1.compareTo(obj2)`?",,üòÇ (1)
2.14881E+17,Moinate#6061,2021-04-21,After a few really annoying misreads I decided I would only use <,,
2.66505E+17,notjack#9941,2021-04-21,"usually it's one of three things:
- `obj1.toNumber() >= obj2.toNumber()` for objects that are just wrappers around single fields
- `obj1.compareTo(obj2) >= 0` not _that_ bad, at least the symbol `>=` still shows up in there
- `is(obj1).atLeast(obj2)` using this small library which gives you a statically-imported `is()` method to start a fluent comparison chain",,
2.66505E+17,notjack#9941,2021-04-21,none of these options are great,,
3.29023E+17,nixin72#3554,2021-04-21,"Yea, would be nice if Java had operator overloading... Would solve this whole issue.",,
2.66505E+17,notjack#9941,2021-04-21,and introduce a lot of new ones probably :p,,
3.29023E+17,nixin72#3554,2021-04-21,TRUE,,
2.66505E+17,notjack#9941,2021-04-21,"I'd be happy if they just changed the existing `<`, `>`, etc. operators to work on `Comparable` objects",,
3.29023E+17,nixin72#3554,2021-04-21,"Yea, that'd make sense",,
3.29023E+17,nixin72#3554,2021-04-21,But god forbid you can compare anything except primitive data types,,
2.64024E+17,Eutro#0016,2021-04-21,The `compareTo` feels fine to me honestly,,
2.64024E+17,Eutro#0016,2021-04-21,"when compiled down, comparisons to zero are just a single instruction anyway :groovefast:",,
2.66505E+17,notjack#9941,2021-04-21,it looks weird and people get confused by the fact that `compareTo` returns an arbitrary integer,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2021-04-21,return `'<` or `'>` or `'=`?,,groovefast (1)
2.66505E+17,notjack#9941,2021-04-21,it's java :p,,
2.34164E+17,python#3213,2021-04-21,"it's the same way in C, and probably lots of other languages",,
2.66505E+17,notjack#9941,2021-04-21,and it's confusing in those too :p,,
6.87833E+17,grey#8674,2021-04-21,"Yeah, if I just compared two things, I don‚Äôt want to have to compare an integer to zero just to know what the original comparison was.",,
2.66505E+17,notjack#9941,2021-04-21,had an idea https://github.com/racket/racket/issues/3796,,
4.66395E+17,oaktownsam#0815,2021-04-21,"Other languages (I think HCL) use a heredoc that strips off leading whitespace.  So like this could work.
```
(define query #-<<SQL
    SELECT *
      FROM mytable
      WHERE this_is_true()
    SQL
)
```",,
4.66395E+17,oaktownsam#0815,2021-04-21,That last hanging paren is what kills me on heredocs,,
2.66505E+17,notjack#9941,2021-04-21,"Yeah, plus having to pick a delimiter is annoying",,
4.66395E+17,oaktownsam#0815,2021-04-21,triple quote is probably the least controversial I would think,,
2.66505E+17,notjack#9941,2021-04-21,"yeah, it already exists in tons of languages and it's unlikely to require escaping anything within the string block",,
4.66395E+17,oaktownsam#0815,2021-04-21,I don't like the new github link previews.  It makes me think it's a link to someone's presentation slide deck.,,
2.66505E+17,notjack#9941,2021-04-21,"same, they look bizarrely empty",,
2.34164E+17,python#3213,2021-04-21,i like it better than before,,
2.34164E+17,python#3213,2021-04-21,before it would just make the repo icon as big as it could,,
2.34164E+17,python#3213,2021-04-21,https://github.com/jyn514/saltwater,,
2.34164E+17,python#3213,2021-04-21,wait,,
2.34164E+17,python#3213,2021-04-21,it still does it,,
2.34164E+17,python#3213,2021-04-21,im a bit confused,,
9.9326E+16,Runi#1730,2021-04-21,it's only for issues i think,,
9.9326E+16,Runi#1730,2021-04-21,issues/prs,,
9.9326E+16,Runi#1730,2021-04-21,it's kinda neat but i wish they compressed it waaay more,,
4.66395E+17,oaktownsam#0815,2021-04-21,Someone linked to some code in #help and it was the big box too,,
2.34164E+17,python#3213,2021-04-21,huh,,
9.9326E+16,Runi#1730,2021-04-21,oh no you're totally right,,
2.34164E+17,python#3213,2021-04-21,i thought that i saw one for a repo that showed like the number of stars and stuff,,
9.9326E+16,Runi#1730,2021-04-21,https://github.com/racket/gui,,
2.34164E+17,python#3213,2021-04-21,yeah,,
2.34164E+17,python#3213,2021-04-21,like that,,
9.9326E+16,Runi#1730,2021-04-21,null,,
9.9326E+16,Runi#1730,2021-04-21,lol,,
2.34164E+17,python#3213,2021-04-21,weird,,
9.9326E+16,Runi#1730,2021-04-21,oh you know what? i bet discord or github just still has the old image cached for saltwater,,
2.34164E+17,python#3213,2021-04-21,"oh, probably yeah",,
2.34164E+17,python#3213,2021-04-21,i wonder if it will ever come out of the cache üòï,,
4.66395E+17,oaktownsam#0815,2021-04-21,weird I don't get preview in Slack.,,
4.66395E+17,oaktownsam#0815,2021-04-21,I do get them in Signal though.,,
4.66395E+17,oaktownsam#0815,2021-04-21,whatever I guess,,
2.66505E+17,notjack#9941,2021-04-21,I'm guessing either caches or they're doing a gradual rollout,,
2.75501E+17,Plane#0324,2021-04-21,yeah i do believe they cache those for a long time,,
2.75501E+17,Plane#0324,2021-04-21,i feel like they could improve those by not having an image,,
2.34164E+17,python#3213,2021-04-21,i usually just delete the embed whenever i paste a saltwater link because it's so big and useless,,
2.75501E+17,Plane#0324,2021-04-21,"mainly because when i see the image i spend time thinking about it, so it's kind of a speed bump on the road to actually understanding what i'm looking at",,üëç (1)
2.34164E+17,python#3213,2021-04-21,it is kind of hard to read it,,
2.34164E+17,python#3213,2021-04-21,font sizes/weights should be higher,,
2.66505E+17,notjack#9941,2021-04-21,the contrast is annoying too,,
2.66505E+17,notjack#9941,2021-04-21,big white rectangle in the middle of my dark mode discord,,
1.93202E+17,rocketnia#4517,2021-04-21,I probably would prefer dark mode for this rectangle even though I use light mode Discord :-p,,
2.66505E+17,notjack#9941,2021-04-22,I am sad üò¶ https://github.com/racket/racket/issues/3796#issuecomment-824518037,,üò¢ (1)
2.64024E+17,Eutro#0016,2021-04-22,What's the point of the language makeup bar at the bottom if it's not labelled? :pensi:,,
2.34164E+17,python#3213,2021-04-22,just memorize the colors üòâ,,
9.9326E+16,Runi#1730,2021-04-22,i wonder what the optimal indentation is for at-exps... maybe there should just be none?,,
9.9326E+16,Runi#1730,2021-04-22,"starting a new line indents you to the previous bracket, but that's all it'll do?",,
2.34164E+17,python#3213,2021-04-22,maybe a different multiline string scheme would be better?,,
2.34164E+17,python#3213,2021-04-22,"rust uses `r#""""#` `r##""""##` and so on (arbitrary number of hashes to completely avoid escaping)",,
2.34164E+17,python#3213,2021-04-22,"zig, which i picked up yesterday, precedes each line of the multiline string with `\\`",,
2.74358E+17,jesscxc#4846,2021-04-22,"what I do is like
```lisp
(multiline """"_uuid
text1
text2
""""_uuid
)

(singleline uuid\nthis is all going to be considered one string even though it has ""innerquotes""uuid\n)
```",,
2.74358E+17,jesscxc#4846,2021-04-22,"obviously the `""""_uuid` could be anything, not just a UUID ( https://en.wikipedia.org/wiki/Universally_unique_identifier ), but the precision means almost guaranteed not to break",,
2.34164E+17,python#3213,2021-04-22,neat,,
2.74358E+17,jesscxc#4846,2021-04-22,"in my files rather than a UUID (which can be like dozens of characters long), I use a to-the-second Longgame timestamp, eg:
```
> longgame_timestamp
>> ty21.4.22.2.24.14azm4d4s
```",,
2.74358E+17,jesscxc#4846,2021-04-22,"which has time zone in it (""zm4"" = UTC-4), so a specific second on Earth",,
2.74358E+17,jesscxc#4846,2021-04-22,"so a full example is like:
```lisp
(multiline """"_ty21.4.22.2.25.29azm4d4s
data
""""_ty21.4.22.2.25.29azm4d4s
)
```",,
2.34164E+17,python#3213,2021-04-22,is there a reason you don't just use rfc3339 date format?,,
2.34164E+17,python#3213,2021-04-22,or iso8601,,
2.74358E+17,jesscxc#4846,2021-04-22,"ISO 8601 and RFC 3339 ( https://en.wikipedia.org/wiki/ISO_8601 ) (eg ""2021-04-22T05:51:35+00:00"") use colons ("":"") and plus (""+"") and minus (""-""), which breaks a lot of things (eg Windows filenames, URL issues, file transferring, etc)",,
2.34164E+17,python#3213,2021-04-22,"okay, gotcha",,
2.34164E+17,python#3213,2021-04-22,i don't think about windows file name restrictions much,,valid (1)
2.34164E+17,python#3213,2021-04-22,"i use linux, and it allows almost every character in the filenames (excluding /)",,cool (1)
2.74358E+17,jesscxc#4846,2021-04-22,"Longgame timestamp is just alphanumeric and dots (""."") (eg ""ty21.4.22.2.28.03azm4d4s""); also different versions (with same philosophy) with hyphens, just alphanumeric, etc",,üëå (1)
2.74358E+17,jesscxc#4846,2021-04-22,"here's (raw) Longgame timestamp design doc:
http://noliesplease.com/lgt_wiki/howto_longgame_timestamp.txt",,
2.74358E+17,jesscxc#4846,2021-04-22,"been working on it 5+ years so it's got some pretty cool features (eg time remaining, intervals, BCE, etc)",,
2.34164E+17,python#3213,2021-04-22,neat,,you_too_u2 (1)
2.74358E+17,jesscxc#4846,2021-04-22,"Longgame timestamp is designed to be pretty compact and writable by hand, too (eg doesn't need to be to-the-second (eg ""ty21.4.22s""); ISO 8601 works well for sorting, but extremely verbose üò¢",,
2.74358E+17,jesscxc#4846,2021-04-22,"the system of ""y21.4.22"" is becoming more popular, too; which is nice üòä",,
2.66505E+17,notjack#9941,2021-04-22,"The current behavior is _great_ for scribble docs. It's just, not great for anything else.",,
9.9326E+16,Runi#1730,2021-04-22,then maybe scribble should keep its indenter but at-exp can use a slightly different one?,,
9.9326E+16,Runi#1730,2021-04-22,right now at-exp just hard defers to scribble's but that's not really necessary,,
2.75501E+17,Plane#0324,2021-04-22,"i actually really like the racket docs, but sometimes my poor brain has to re-read things a few times lol",,
2.75501E+17,Plane#0324,2021-04-22,"i've mostly made pretty small programs in racket, often just little utilities (< 30 lines long) that would do something useful for me",,valid (1)
2.75501E+17,Plane#0324,2021-04-22,so i'm still learning how the module system works,,
2.34164E+17,python#3213,2021-04-22,"I agree, racket docs is my second favorite docs system. It's very easy to search and navigate quickly",,
9.9326E+16,Runi#1730,2021-04-22,100% agree,,
2.75501E+17,Plane#0324,2021-04-22,yippee!! my code works,,"üéâ (4),meowsmile (3)"
2.74358E+17,jesscxc#4846,2021-04-22,it's pretty amazing how great they are,,
2.74358E+17,jesscxc#4846,2021-04-22,like the precision and completeness,,
2.74358E+17,jesscxc#4846,2021-04-22,"I do agree I have to make an effort to study them, at the same time :3",,
6.87833E+17,grey#8674,2021-04-22,"One thing I‚Äôd like to see changed about the Racket docs is for the navigation sidebar thingy to be separately scrollable from the main content, so I don‚Äôt have scroll all the way to the top just to get around.",,üëç (4)
4.62028E+17,StephenD#5938,2021-04-22,"I thought this was a WIP. Might be worth checking recent branches, forks and PR‚Äôs.",,
4.66395E+17,oaktownsam#0815,2021-04-22,I think it's fixed in a snapshot and will be in the next release.,,
6.87833E+17,grey#8674,2021-04-22,Hooray! üòÑ,,
2.75501E+17,Plane#0324,2021-04-23,now that i'm making a little bit larger program `(module+ test` is handy,,
2.75501E+17,Plane#0324,2021-04-23,oof i feel a really strong compulsion to type `)`,,
2.75501E+17,Plane#0324,2021-04-23,"i noticed in racket i can type `#t` `#true` or, if i require `racket/bool`, i can type `true`",,
2.75501E+17,Plane#0324,2021-04-23,my initial feeling is that i like `#true` best,,
2.75501E+17,Plane#0324,2021-04-23,`true` doesn't get syntax highlighting and `#t` is terse,,plusone (3)
2.66505E+17,notjack#9941,2021-04-23,agreed,,
2.64024E+17,Eutro#0016,2021-04-23,How evil is it to return nil as true,,
2.34164E+17,python#3213,2021-04-23,very,,plusone (1)
2.75501E+17,Plane#0324,2021-04-23,lol,,
5.39857E+17,youtube.com/adamgolding#3870,2021-04-25,@grey although pressing the 'home' key is pretty effective üôÇ,,
2.75501E+17,Plane#0324,2021-04-25,do most racketeers use emacs?,,
2.14881E+17,Moinate#6061,2021-04-25,"raw number, surely DrRacket... 
Anything with images... DrRacket...

On discord I see a lot of emacs users... DrRacket is almost good enough for me, but I haven't learned to do everything on the keyboard. If I were willing to use the function keys, maybe, but they're to far from the middle of the keyboard for me to want to use them. So I'm one of the emacs people with `racket-mode`.",,
2.14881E+17,Moinate#6061,2021-04-25,"Actually, I'd say 80% of the time I use DrRacket. But 80% of the time I'm not working on a big project.",,
2.64024E+17,Eutro#0016,2021-04-25,images work in Emacs though :thounking:,,
2.75501E+17,Plane#0324,2021-04-25,i've used drracket a lot for my smaller programs but for working with multiple files i'm feeling more like i want to use vim (which is what i have the most time spent on over the past 25 years),,
2.75501E+17,Plane#0324,2021-04-25,i've never used emacs much but i'm kind of curious,,
4.62028E+17,StephenD#5938,2021-04-25,"I did a survey about a year ago and the DrRacket and Racket Mode numbers were pretty even.

The surprising thing was the large number of people who used 2 or more editors.",,
2.75501E+17,Plane#0324,2021-04-25,interesting!,,
2.75501E+17,Plane#0324,2021-04-25,thanks,,
4.62028E+17,StephenD#5938,2021-04-25,I believe it is generally agreed that Racket Mode is very good.,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-04-25,"vim for writting, drracket for debugging",,üëè (1)
4.62028E+17,StephenD#5938,2021-04-25,"I think some cool stuff is happening with the language-server, but I don‚Äôt know if vim can use that.",,
9.9326E+16,Runi#1730,2021-04-25,"vim has <https://github.com/prabirshrestha/vim-lsp> or <https://github.com/neoclide/coc.nvim>, neovim has language server support built-in",,
2.75501E+17,Plane#0324,2021-04-25,yes i am using vim-lsp,,
2.75501E+17,Plane#0324,2021-04-25,i never made the switch to neovim,,
9.9326E+16,Runi#1730,2021-04-25,how's the langserver? curious about the experience in other editors and if it's useful or if there are gripes that could be improved,,
2.75501E+17,Plane#0324,2021-04-25,i have no gripes atm,,
2.75501E+17,Plane#0324,2021-04-25,i'm happy lol,,
2.75501E+17,Plane#0324,2021-04-25,we'll see as i use this more!,,‚ù§Ô∏è (3)
9.9326E+16,Runi#1730,2021-04-25,good to hear :),,
8.14743E+16,jimpjorps#0001,2021-04-25,I've been using Magic Racket in VS Code and the langserver's been useful there,,üëç (3)
2.66505E+17,notjack#9941,2021-04-25,I used 2 because renaming and moving files is a huge pain in drracket,,
2.66505E+17,notjack#9941,2021-04-25,I wonder how universal that experience is,,
4.66395E+17,oaktownsam#0815,2021-04-25,Used LSP in neovim this morning.  Mostly using diagnostics and some variable renaming,,
4.62028E+17,StephenD#5938,2021-04-25,Ah yes. No files browser in DrRacket,,
2.75501E+17,Plane#0324,2021-04-25,i really like it for typing tiny things and experimenting,,üíØ (1)
2.75501E+17,Plane#0324,2021-04-25,it reminds me of when i was little and i had a c64 and i could just type anything and see what happened,,yea (1)
2.66505E+17,notjack#9941,2021-04-25,Same! It's really really good at that,,
2.66505E+17,notjack#9941,2021-04-25,I also really like how hitting Run runs your tests too,,
2.75501E+17,Plane#0324,2021-04-25,when i'm on windows i use wsl2 with debian,,
2.75501E+17,Plane#0324,2021-04-25,"one thing that made it easier for me most of the time was to just use one copy of racket, since you can run windows binaries from wsl2",,
2.75501E+17,Plane#0324,2021-04-25,so i have a symlink from `$HOME/bin/racket` to `/mnt/c/Program Files/Racket/Racket.exe`,,concern (1)
2.75501E+17,Plane#0324,2021-04-25,mostly that has worked pretty well,,
2.75501E+17,Plane#0324,2021-04-25,and i haven't had to maintain two copies of racket with the same libs etc,,
2.75501E+17,Plane#0324,2021-04-25,but now i am running into a problem with this,,
2.75501E+17,Plane#0324,2021-04-25,which is basically just related to the way racket tries to resolve paths,,
2.75501E+17,Plane#0324,2021-04-25,"```bash
crystal@wings:~$ cd /mnt/c/racket
crystal@wings:/mnt/c/racket$ racket hello-world.rkt             # this works
Hello, world!

crystal@wings:/mnt/c/racket$ cd
crystal@wings:~$ racket /mnt/c/racket/hello-world.rkt           # this doesn't work
open-input-file: cannot open module file
  module path: \\wsl$\Debian\mnt\c\racket\hello-world.rkt
  path: \\wsl$\Debian\mnt\c\racket\hello-world.rkt
  system error: „Ç¢„ÇØ„Çª„Çπ„ÅåÊãíÂê¶„Åï„Çå„Åæ„Åó„Åü„ÄÇ; win_err=5

crystal@wings:~$ cd /mnt/c
crystal@wings:/mnt/c$ racket /mnt/c/racket/hello-world.rkt      # this doesn't work either
open-input-file: cannot open module file
  module path: C:\mnt\c\racket\hello-world.rkt
  path: C:\mnt\c\racket\hello-world.rkt
  system error: ÊåáÂÆö„Åï„Çå„Åü„Éë„Çπ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„ÄÇ; win_err=3
```",,
2.75501E+17,Plane#0324,2021-04-25,so i may have to start keeping both copies of racket and always installing packages on both,,
2.75501E+17,Plane#0324,2021-04-25,frown,,
2.75501E+17,Plane#0324,2021-04-25,farewell easy life,,
2.75501E+17,Plane#0324,2021-04-25,those are interesting failure modes though,,
2.75501E+17,Plane#0324,2021-04-25,i guess i should make a quick wrapper to install a package on both üëÄ,,
2.75501E+17,Plane#0324,2021-04-25,"anyway, the langserver stuff has an issue:",,
2.75501E+17,Plane#0324,2021-04-25,https://github.com/Eugleo/magic-racket/issues/29,,
2.75501E+17,Plane#0324,2021-04-25,which is linked to:,,
2.75501E+17,Plane#0324,2021-04-25,https://github.com/jeapostrophe/racket-langserver/issues/45,,
2.75501E+17,Plane#0324,2021-04-25,"since i was using the windows binary, i didn't need an x server, but it broke anyway because racket tried to understand the file paths and failed",,
9.9326E+16,Runi#1730,2021-04-25,"hmm, that seems like a separate issue from the X server problem in #29",,
2.75501E+17,Plane#0324,2021-04-25,"the answer might just be ""don't do that""",,
2.75501E+17,Plane#0324,2021-04-25,but yes,,
2.75501E+17,Plane#0324,2021-04-25,but for now i'll just set up wsl with an x server and a local racket install,,
2.75501E+17,Plane#0324,2021-04-25,@Runi got it working fine using an x server (in this case https://sourceforge.net/projects/vcxsrv/) on wsl2 (:,,üëè (1)
2.75501E+17,Plane#0324,2021-04-25,i wish wsl2 was just a tiiiiny bit more magically seamless,,
2.75501E+17,Plane#0324,2021-04-25,"one other tiny pain point for me has been `tail -f` not working when windows updates a log file, 'cause there's no notification to the wsl side that it was updated",,
2.75501E+17,Plane#0324,2021-04-25,but everything works almost super well lol,,
2.75501E+17,Plane#0324,2021-04-25,"anyway @Runi thank you, i have the lsp stuff working everywhere i edit racket files now (:",,üéâ (3)
2.75501E+17,Plane#0324,2021-04-25,i am really enjoying it,,
2.75501E+17,Plane#0324,2021-04-25,"even if the wsl setup is a little hinky with two copies of racket . . . ooh, i have to make it call the windows racket to open up help files in my windows browser, and the linux racket to start the langserver . . .",,
8.14743E+16,jimpjorps#0001,2021-04-25,"built-in GUI support for WSL2 was in one of the recent insider builds, so maybe that part will be less of a hassle if they can't decouple the langserver from drracket easily",,
2.75501E+17,Plane#0324,2021-04-25,perfect!,,
2.75501E+17,Plane#0324,2021-04-25,"yes, i was thinking about that too!",,
2.75501E+17,Plane#0324,2021-04-25,i don't really want to try that yet but it sounds like it could be quite nice,,
2.75501E+17,Plane#0324,2021-04-25,"i always felt like a fish out of water trying to develop on windows, and i still do to a certain extent, but wsl has helped a lot with that (:",,
2.75501E+17,Plane#0324,2021-04-25,before that i used to use cygwin / msys,,
2.75501E+17,Plane#0324,2021-04-25,`paredit.vim` is also nice but i swapped `[` and `(`,,
2.66505E+17,notjack#9941,2021-04-26,working on a sorted map collection for Rebellion :0,,
2.66505E+17,notjack#9941,2021-04-26,red-black trees. they are hard.,,
2.34164E+17,python#3213,2021-04-26,i've always wondered how datastructures like that work in racket,,
2.34164E+17,python#3213,2021-04-26,it would be cool to have BTrees in racket,,
2.66505E+17,notjack#9941,2021-04-26,"they work pretty much the same, if you're fine with a mutable tree",,
2.66505E+17,notjack#9941,2021-04-26,I'm gonna have to implement okasi's immutable red-black trees eventually though too üò≠,,
2.34164E+17,python#3213,2021-04-26,but you can't really use pointers in racket,,
2.34164E+17,python#3213,2021-04-26,well,,
2.34164E+17,python#3213,2021-04-26,everything is basicly pointers,,
2.66505E+17,notjack#9941,2021-04-26,I'm just taking the algorithms in https://en.wikipedia.org/wiki/Red‚Äìblack_tree and using structs with mutable fields,,üëå (3)
2.66505E+17,notjack#9941,2021-04-26,_yessssss_,https://cdn.discordapp.com/attachments/618895179343986688/836134946372190238/Screen_Shot_2021-04-26_at_12.01.30_AM.png,
2.66505E+17,notjack#9941,2021-04-26,tests all passing wooo!,,üéâ (5)
2.75501E+17,Plane#0324,2021-04-26,Yippee!,,
2.14881E+17,Moinate#6061,2021-04-26,"I wasn't aware that Racket has a ton of ""built in"" (ish) data types until recently. https://docs.racket-lang.org/data/index.html?q=data",,
2.736E+17,Alwinfy#7306,2021-04-26,clojure's B-tree vectors when :P,,hahayes (1)
2.64024E+17,Eutro#0016,2021-04-26,binary tree? more like 32ary tree,,
2.34164E+17,python#3213,2021-04-26,B-trees are the generalization across binary trees and 32ary trees (and every other one),,
2.64024E+17,Eutro#0016,2021-04-26,oh b for balanced not binary,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-04-26,"alright, this is just cursed

```scheme
(define quote add1)
(define foo 1)
'foo ;; returns 2
```
I mean, I knew `'` is equivalent to `quote`, but I didn't know it's equivalent to such extent",,hahayes (1)
2.66505E+17,notjack#9941,2021-04-26,"oh yes, it's deeply evil",,
3.5323E+17,Alex Knauth#4895,2021-04-26,"whenever I see that I think ""what if `'` as quote were hygienic?""
```
#lang hygienic-quote racket
(define quote add1)
(define foo 1)
'foo ;; returns 'foo equivalent to (string->symbol ""foo"")
```",,
2.66505E+17,notjack#9941,2021-04-26,ü§î I could make a version of `quote` that only lets you quote symbols,,
2.75501E+17,Plane#0324,2021-04-26,wah!!,,
2.75501E+17,Plane#0324,2021-04-26,"it's spooky, i need a security blanket now",,plusone (1)
2.64024E+17,Eutro#0016,2021-04-26,`'` but it expands directly to `#%datum`,,
2.64024E+17,Eutro#0016,2021-04-26,and then someone rebinds `#%datum` :pausing:,,
3.5323E+17,Alex Knauth#4895,2021-04-26,well that 2nd step at least would be properly handled by hygienic macro expansion,,
3.5323E+17,Alex Knauth#4895,2021-04-26,even if the 1st step of `'` into `quote` isn't,,
2.66505E+17,notjack#9941,2021-04-26,`'` but it's read as not a list,,
7.72228E+17,hyena#0469,2021-04-26,Minor gripe about Racket syntax: hyphens shouldn't be used in struct getter functions when they are used in variable names by convention.,,
2.66505E+17,notjack#9941,2021-04-26,"agreed, the name clashes are very annoying",,
7.72228E+17,hyena#0469,2021-04-26,This is a place where I actually prefer C syntax of dotting to access an attribute of something,,
2.66505E+17,notjack#9941,2021-04-26,same,,
2.66505E+17,notjack#9941,2021-04-26,"dot syntax for namespacing is really, really nice",,
7.72228E+17,hyena#0469,2021-04-26,I guess I am most likely to use a match-define to unpack what I need so its kind of a moot point.,,
2.66505E+17,notjack#9941,2021-04-26,"using informative names for struct types in racket is really painful because the full name _plus_ the field name has to be used in every accessor, so there's this huge incentive to abbreviate struct names",,
7.72228E+17,hyena#0469,2021-04-26,maybe people could start typing structs with underscores instead?,,
7.72228E+17,hyena#0469,2021-04-26,I mean the names of structs,,
2.66505E+17,notjack#9941,2021-04-26,I haven't come up with a good solution short of adding a whole dot-syntax-transformer layer or something,,
2.66505E+17,notjack#9941,2021-04-26,"the small-step approaches, like using Upper-Case for struct names, making struct names as short as possible, etc. don't really go far enough for me, the results just look awkward",,
7.72228E+17,hyena#0469,2021-04-26,or maybe the solution is to make (get ) its own special form that takes a struct name and a field,,
3.5323E+17,Alex Knauth#4895,2021-04-26,"Some structs that are a combination of 2 pieces of data...
```
(struct date-time [date time])
(date-time d t)
(date-time-date dt)
(date-time-time dt)
```",,
2.66505E+17,notjack#9941,2021-04-26,I think that hits the problem where you can no longer change a function to a field accessor and vice versa without breaking backwards compat,,
8.14743E+16,jimpjorps#0001,2021-04-26,"the setter functions are also named backwards from how names for built-in data-types are chosen, like `vector-set!` compared to `set-my-struct-property!`, which has thrown me a couple times",,
2.66505E+17,notjack#9941,2021-04-26,yeah this is the worst ugh,,
7.72228E+17,hyena#0469,2021-04-26,@Alex Knauth yeah! exactly. A screen full of that stuff just looks like gibberish,,
2.66505E+17,notjack#9941,2021-04-26,"contrast to OOP syntax:
```rust
// The fields are bound because the type is known
let d: Date = ...
d.date
d.time
```",,
3.5323E+17,Alex Knauth#4895,2021-04-26,"On the other hand having the type explicit can help when I'm reading code that someone else wrote (someone else possibly including myself-6-months-ago), or that doesn't have contracts or type-comments",,
3.5323E+17,Alex Knauth#4895,2021-04-26,"but having `normal+id-match-expander-id-match-transformer` is annoying
```
(struct normal+id-match-expander [normal id-match-transformer]
  #:property prop:procedure (struct-field-index normal)
  #:property prop:id-match-expander
  (Œª (self) (normal+id-match-expander-id-match-transformer self)))
```",,
7.72228E+17,hyena#0469,2021-04-26,Having to type something as awkward as that for a straight forward task is what just kills my motivation to work with something.,,
7.72228E+17,hyena#0469,2021-04-26,That's also an issue I have with Java's verbose and indirect patterns like AbstractFactoryFactoryWhatever,,
2.66505E+17,notjack#9941,2021-04-26,"the java issue maps more towards just having unnecessary wrapper functions and wrapper structs in racket, rather than naming",,
2.66505E+17,notjack#9941,2021-04-26,it's semantic verbosity :p not syntactic,,
7.72228E+17,hyena#0469,2021-04-26,yeah I see the distinction. I like that so many of the design patterns can just be answered with functional patterns in racket,,
3.5323E+17,Alex Knauth#4895,2021-04-26,"or `arity+keywords-arity`
```
(struct arity+keywords (arity required-kws allowed-kws))
```
containing the results of `procedure-arity` and `procedure-keywords` together",,
2.66505E+17,notjack#9941,2021-04-26,I wish the existing arity stuff just used an `arity` struct which had keyword arity information in it already,,
2.66505E+17,notjack#9941,2021-04-26,the current stuff is more like a `positional-arity` type than an `arity` type,,
3.5323E+17,Alex Knauth#4895,2021-04-26,"yeah, that's true",,
3.5323E+17,Alex Knauth#4895,2021-04-26,"```
(struct arity [positional required-kws allowed-kws])
```
with accessors `arity-positional`, `arity-required-kws`, and `arity-allowed-kws` makes a lot more sense than what I have above...
but existing Racket uses the word `arity` for positional arity only",,
3.5323E+17,Alex Knauth#4895,2021-04-26,"```
;; A [Fingeringof X] is a (fingering [Maybe Finger] X)
(struct fingering [finger target] #:transparent)
```
accessor named `fingering-finger`",,
2.66505E+17,notjack#9941,2021-04-26,maybe call the field `source` instead?,,
3.5323E+17,Alex Knauth#4895,2021-04-26,"uh, I don't think that fits here, it's not a ""source to target"" kind of thing, it's a ""finger on key"" or ""finger on fret"" or ""finger on note"" kind of thing",,
2.66505E+17,notjack#9941,2021-04-26,"ahh, gotcha",,
3.5323E+17,Alex Knauth#4895,2021-04-26,"an accessor named `position-position-in-measure` for
```
;; A Position is a (position Nat Duration)
(struct position [measure position-in-measure] #:transparent)
```
where the `position-in-measure` is a musical duration, some number of beats or beat-subdivisions from the start of the measure to the position within the measure",,
2.66505E+17,notjack#9941,2021-04-26,maybe call that `offset`?,,
2.66505E+17,notjack#9941,2021-04-26,the `position-in-measure` field I mean,,
3.5323E+17,Alex Knauth#4895,2021-04-26,"```
(struct stx/holes [stx holes] #:prefab)
```",,
3.5323E+17,Alex Knauth#4895,2021-04-26,"```
(struct expr+type (expr type) #:transparent)
```",,
2.66505E+17,notjack#9941,2021-04-26,yeah in those cases the type-name-in-accessor repetition is especially painful,,
3.5323E+17,Alex Knauth#4895,2021-04-26,"```
(struct procedure+type-expander [procedure type-expander]
  #:property prop:procedure (struct-field-index procedure)
  #:property prop:type-expander (strut-field-index type-expander))
```",,
3.5323E+17,Alex Knauth#4895,2021-04-26,fortunately for that one people would never use the struct-accessors anyway,,
6.87833E+17,grey#8674,2021-04-27,"It gets even more confusing with the supertype-in-name: `exn:fail:contract`. At that point, it‚Äôs tempting just to make it a URL...",,
2.75501E+17,Plane#0324,2021-04-27,i was looking at alex knauth's ` postfix-dot-notation` https://docs.racket-lang.org/postfix-dot-notation/index.html,,
2.75501E+17,Plane#0324,2021-04-27,"and i was thinking, i haven't really run into any symbols with `.` in them yet in racket",,
2.75501E+17,Plane#0324,2021-04-27,although i'm not the most experienced racketeer,,
2.66505E+17,notjack#9941,2021-04-27,"`syntax-parse` is the most common source of `.` in racket, I think",,
8.14743E+16,jimpjorps#0001,2021-04-27,infix representations use periods around the infixed operator so I think the postfix dot notation is at least consistent with that idea,,
7.72228E+17,hyena#0469,2021-04-27,is the idea of a syntax object unique to racket?,,
2.66505E+17,notjack#9941,2021-04-27,good question,,
7.72228E+17,hyena#0469,2021-04-27,"To your knowledge, do all other programming languages do macros by simple text replacement",,
2.66505E+17,notjack#9941,2021-04-27,"there are many languages that have macro systems that operate on ASTs, but I don't know of any other than Racket that call them syntax objects",,
2.66505E+17,notjack#9941,2021-04-27,"template haskell calls them splices, I think. scheme's `syntax-rules` system conveniently sidesteps the manner by not referring to the AST objects directly and instead only letting you describe pattern-matching-based rearranging rules. no idea what rust does.",,
7.72228E+17,hyena#0469,2021-04-27,"Syntax objects are to ensure hygiene, right?",,
7.72228E+17,hyena#0469,2021-04-27,to avoid capturing variables outside of the macro's application,,
2.66505E+17,notjack#9941,2021-04-27,"sort of. it's more like, syntax objects are to track _scope_. and you can't have hygienic macros if you don't track scope.",,
2.66505E+17,notjack#9941,2021-04-27,you can also use syntax objects to break and bend hygiene in interesting ways that aren't possible with just s-expressions,,
2.64024E+17,Eutro#0016,2021-04-27,Rust's macros operate on token trees,,
2.64024E+17,Eutro#0016,2021-04-27,/ast,,
7.72228E+17,hyena#0469,2021-04-27,"I feel like I've never truly understood macros in racket in a deep way that others understand them. Like I know how to use define-syntax and I get that it is a function from syntax object -> syntax object, but I am just following patterns when I write them.",,
2.64024E+17,Eutro#0016,2021-04-27,My lisp game jam lisp doesn't have macros because all functions operate directly on the datums in the expression :hahayes:,,
7.72228E+17,hyena#0469,2021-04-27,"For instance, if the macro system were based on quoting and unquoting and splicing, I wouldn't think to question it.",,
2.66505E+17,notjack#9941,2021-04-27,"for advanced racket macro stuff, there's a few things that were really helpful to me to learn about:
- the Bindings as Sets of Scopes paper http://www.cs.utah.edu/~mflatt/scope-sets/
- how to use `define-syntax` and `syntax-local-value` together to smuggle compile-time information around, and how to use syntax classes to make this information easy to refer to in `syntax-parse` macros (this is how I implemented compile-time type information for `rebellion/type` macros, see https://docs.racket-lang.org/rebellion/Interfaces_Common_to_All_Types.html#%28part._.Compile-.Time_.Type_.Information%29)
- how to use `local-expand` to let macros see through uses of other macros (see this thread on my `guarded-block` macro and Ryan's advice about implementing it with `local-expand` https://groups.google.com/g/racket-users/c/H-EppBmQ7oU/m/l_V4v9oiCQAJ)
- probably other stuff I'm forgetting",,üëç (3)
7.72228E+17,hyena#0469,2021-04-27,Thanks for the references. Sometimes the only way for me to really learn something is if I stumble into the painful situation that the given solution is meant to deal with. I probably won't learn that stuff fully unless i try writing a library like you did,,
2.66505E+17,notjack#9941,2021-04-27,"a lot of this stuff also just, isn't really organized and documented well. I think it's fair to say that the best practices and idioms for advanced racket macrology are still being worked out.",,
3.5323E+17,Alex Knauth#4895,2021-04-27,"Some other variants of scheme have syntax objects, but not standard scheme if I remember correctly",,
2.75501E+17,Plane#0324,2021-04-27,there is a `struct-plus-plus` package which (among other things) makes structs with `structname.field` alongside `structname-field` https://docs.racket-lang.org/struct-plus-plus/index.html#%28part._.Dotted_.Accessors%29,,
2.75501E+17,Plane#0324,2021-04-27,the example given is `remote-server.send-ch` instead of `remote-server-send-ch`,,
8.14743E+16,jimpjorps#0001,2021-04-27,that is a cool package,,
2.66505E+17,notjack#9941,2021-04-27,it does a lot of neat stuff,,
9.9326E+16,Runi#1730,2021-04-27,that seems way more readable,,
2.75501E+17,Plane#0324,2021-04-27,i just started using `struct-define` and i like it a lot,,
5.06301E+17,xoxo#7837,2021-04-27,is anyone in this server strong in prolog?,,
5.06301E+17,xoxo#7837,2021-04-27,its hard to find online prolog resources so i just thought it might be worth asking :/,,
2.66505E+17,notjack#9941,2021-04-27,I've dabbled but not much,,
4.66395E+17,oaktownsam#0815,2021-04-27,"Chez uses ""syntax objects""",,
5.06301E+17,xoxo#7837,2021-04-27,ah ok ;/,,
5.06301E+17,xoxo#7837,2021-04-27,i just have some simple questions,,
5.06301E+17,xoxo#7837,2021-04-27,like list processing,,
4.66395E+17,oaktownsam#0815,2021-04-27,R6RS surely has some sort of syntax objects.,,
4.66395E+17,oaktownsam#0815,2021-04-27,Syntax objects are also great at doing something that ASTs normally do: track source location information.  When people are down on syntax-case (and related) macros but very enthused about defmacro (and implicit and explicit renaming) style macros I wonder how their implementation handles reporting errors.,,
2.64024E+17,Eutro#0016,2021-04-27,Clojure keeps source information in dedicated metadata for its lists and symbols,,
4.66395E+17,oaktownsam#0815,2021-04-27,Give a shot asking in #help or #off-topic,,
5.06301E+17,xoxo#7837,2021-04-27,ok!!,,
2.64024E+17,Eutro#0016,2021-04-27,unfortunately a lot of that information is lost in certain macros,,
4.66395E+17,oaktownsam#0815,2021-04-27,Yeah I think CL used symbol hacks,,
4.66395E+17,oaktownsam#0815,2021-04-27,CL is all symbol hacks though,,hahayes (1)
4.66395E+17,oaktownsam#0815,2021-04-27,To be fair Scheme (and Javascript for modules) are all lambda hacks,,
2.64024E+17,Eutro#0016,2021-04-27,what are lambdas for if not hacking,,üíØ (2)
1.93202E+17,rocketnia#4517,2021-04-28,"what are these ""symbol hacks"" that Common Lisp does?",,
1.93202E+17,rocketnia#4517,2021-04-28,"like, is there some documentation on it?",,
4.66395E+17,oaktownsam#0815,2021-04-28,"So that comment is a bit off the cuff, and I don't remember all of the details, but things like symbol properties (http://www.lispworks.com/documentation/HyperSpec/Body/f_symb_4.htm) and how the package system uses/looks up symbols always felt hacky to me.",,
2.10838E+17,Brick Nermon#1277,2021-04-28,> can someone fix my code?,https://cdn.discordapp.com/attachments/618895179343986688/836987619568123904/unknown.png,
2.10838E+17,Brick Nermon#1277,2021-04-28,"``` (define (pow-tr b e)
  (if (= e 0)
      1
      (* b (power b (- e 1)))))
(power 2 3) ```",,
8.14743E+16,jimpjorps#0001,2021-04-28,"you named the function `pow-tr`, but you call `power` later",,
2.10838E+17,Brick Nermon#1277,2021-04-28,"yeah i fixed, that but the coding shows me this error",,
2.10838E+17,Brick Nermon#1277,2021-04-28,,https://cdn.discordapp.com/attachments/618895179343986688/836988902110920765/unknown.png,
2.10838E+17,Brick Nermon#1277,2021-04-28,idk what this means,,
8.14743E+16,jimpjorps#0001,2021-04-28,I believe that whatever you're submitting your code to is checking your function to see if it comes up with the right answer,,
8.14743E+16,jimpjorps#0001,2021-04-28,"I don't think that's an error, just a log of the testing process",,
8.14743E+16,jimpjorps#0001,2021-04-28,"also, one other problem: `(power 0 0)` returns 1, but the problem description says it ought to return 0",,
2.10838E+17,Brick Nermon#1277,2021-04-28,how would i fix that?,,
8.14743E+16,jimpjorps#0001,2021-04-28,you never check the value of `b`,,
8.14743E+16,jimpjorps#0001,2021-04-28,so think about how you could add a way to check for both `b` and `e` being zero,,
6.31189E+17,jmiven#3559,2021-04-28,also the problem description asks for a tail recursive function. Your pow-tr is not tail-recursive üôÇ,,
8.14743E+16,jimpjorps#0001,2021-04-28,the final problem is that the function isn't tail-recursive,,
8.14743E+16,jimpjorps#0001,2021-04-28,"the way your function works, it'll build up a big stack of `(* b (* b (* b (* b ...` operations and then have to do them all at once at the end",,
8.14743E+16,jimpjorps#0001,2021-04-28,"but you want to write the function in a way where each time you call the function again, you do one of those multiplications",,
8.14743E+16,jimpjorps#0001,2021-04-28,so that you're not building up that stack,,
8.14743E+16,jimpjorps#0001,2021-04-28,https://beautifulracket.com/explainer/recursion.html#tail-recursion if you want to see some examples of other functions written with tail-call recursion,,
2.14881E+17,Moinate#6061,2021-04-28,"requests for help and code fixing should go in the #help channel, please",,
2.5607E+17,maxvel#8267,2021-04-28,"hello üôÇ I'm trying Racket gui and can not find how to make a resizer thingy between panels, like the one in the middle of DrRacket, could someone point me what is this element?",,
2.5607E+17,maxvel#8267,2021-04-28,I found drracket is using `horizontal-dragable` from `framework` üòÑ,,üëç (1)
9.9326E+16,Runi#1730,2021-04-28,does racket have any standard way of providing environment information in a separate file like `.env`,,
9.9326E+16,Runi#1730,2021-04-28,i don't want to bother with setting variables manually when running racket or anything like that,,
2.66505E+17,notjack#9941,2021-04-28,you could read environment variables,,
2.66505E+17,notjack#9941,2021-04-28,and then use `.env` files directly,,
2.75501E+17,Plane#0324,2021-04-28,i'm finally learning more about macros and it's pretty neat,,
2.75501E+17,Plane#0324,2021-04-28,beautiful racket is a nice book,,
2.66505E+17,notjack#9941,2021-04-28,it's a lovely book,,
5.39603E+17,spacey üåå#7238,2021-04-28,I paid for it :),,groovefast (1)
4.66395E+17,oaktownsam#0815,2021-04-28,"@Runi there is no standard way, you could save your ""environment"" into a hash table in a file and then on start up read it and set environment variables using `putenv`",,
4.66395E+17,oaktownsam#0815,2021-04-28,https://docs.racket-lang.org/reference/envvars.html,,
6.31189E+17,jmiven#3559,2021-04-28,@Runi I remember https://github.com/lexi-lambda/envy,,
6.31189E+17,jmiven#3559,2021-04-28,never tried it though,,
4.66395E+17,oaktownsam#0815,2021-04-28,I just used envy on a project.  It's great if you need to pull in a bunch of environment variables and it handles defaults and coercing to the correct types for your program (as long as what you want is an int string or bool),,
4.66395E+17,oaktownsam#0815,2021-04-28,oh it also supports symbols it would seem.,,
9.9326E+16,Runi#1730,2021-04-28,does this write the vars so that they can be read with `getenv`?,,
4.66395E+17,oaktownsam#0815,2021-04-28,Nope it's just for reading them,,
1.56786E+17,williewillus#8490,2021-04-28,you could just use a shell script?,,
2.14881E+17,Moinate#6061,2021-04-28,Do you want to give any more details on your environment-variable problem? Are you trying to pass them to a subprocess? It sounds like you want to pass a changed environment (possibly setting some of the environment vars) on to a child process?,,
1.56786E+17,williewillus#8490,2021-04-28,"#!<your shell>
export A=foo
export B=bar
racket script.rkt",,
2.14881E+17,Moinate#6061,2021-04-28,"^^ Yeah, what willie said, we're wondering whats wrong with `source ~/.myenv; exec racket ...`.",,
2.14881E+17,Moinate#6061,2021-04-28,I'm pretty sure Runi wants Racket to change some of them since they're asking about `setenv` (basically),,
2.14881E+17,Moinate#6061,2021-04-28,"Racket-generated shell script, lol.",,
9.9326E+16,Runi#1730,2021-04-28,"shell script isn't exactly portable, .env files using a `dotenv` module (like what exists for js, python, ruby, php) is both exactly as simple in every environment and works automatically in every environment",,
9.9326E+16,Runi#1730,2021-04-28,i just find it much easier to think about lol,,
2.34164E+17,python#3213,2021-04-28,you could put a bunch of environment variables in an assoc map into an sexpr file and use it as your .env,,
2.34164E+17,python#3213,2021-04-28,it would be pretty simple to write,,
9.9326E+16,Runi#1730,2021-04-28,"yeah, there's similarly dead simple methods of doing it in the languages i just listed lol",,
9.9326E+16,Runi#1730,2021-04-28,the module i mentioned points to <https://12factor.net/config> as justification,,
9.9326E+16,Runi#1730,2021-04-28,which is not mixing config with code,,
9.9326E+16,Runi#1730,2021-04-28,idunno how useful it is but i've more or less internalized this and now just reach for .env files to add to .gitignore whenever i need to store secrets/tokens/etc,,
9.9326E+16,Runi#1730,2021-04-28,so i was wondering if there was a racket equivalent,,
4.66395E+17,oaktownsam#0815,2021-04-28,I generally use a file and `source` it in.,,‚òùÔ∏è (1)
4.66395E+17,oaktownsam#0815,2021-04-28,(with bash),,
4.66395E+17,oaktownsam#0815,2021-04-28,"I may be a little dense, but after reading the python-dotenv package description it seems to make development easier, but I would think it could add a production dependency?",,
1.56786E+17,williewillus#8490,2021-04-28,yeah I've never really used anything like dotenv much,,
4.66395E+17,oaktownsam#0815,2021-04-28,I mean I use env files but generally docker eats them and sets the container up The Right Way(TM),,plusone (1)
2.14881E+17,Moinate#6061,2021-04-28,"Reading that Python dotenv module is actually scary. There's a lot of details... and frankly it seems anti-Lispy to do your configuration in a Bash-syntax module parsed by regular expressions instead of in S-expr and just load it. 

That said, I can totally see the attraction of a single way to manage configuration everywhere.",,
4.66395E+17,oaktownsam#0815,2021-04-29,!rkt eval (hash-code (thread void)),,
8.02004E+17,r16#4581,2021-04-29,":warning: stderr:
hash-code: undefined;
 cannot reference an identifier before its definition
  in module: 'program
  context...:
   body of 'program",,
4.66395E+17,oaktownsam#0815,2021-04-29,!rkt eval (equal-hash-code (thread (void)),,
8.02004E+17,r16#4581,2021-04-29,":warning: stderr:
eval:1:0: read-syntax: expected a `)` to close `(`
  context...:
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:113:0: default-sandbox-reader
   /home/r16bot/r16/evaluator.rkt:28:0
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:571:0: input->code
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:897:14",,
2.66505E+17,notjack#9941,2021-04-29,_grabs popcorn_,,
4.66395E+17,oaktownsam#0815,2021-04-29,!rkt eval (equal-hash-code (thread (void))),,
8.02004E+17,r16#4581,2021-04-29,":warning: stderr:
thread: contract violation
  expected: (procedure-arity-includes/c 0)
  given: #<void>
  context...:
   body of 'program",,
4.66395E+17,oaktownsam#0815,2021-04-29,hahah,,
2.66505E+17,notjack#9941,2021-04-29,lmao,,
2.66505E+17,notjack#9941,2021-04-29,at least the error messages are being useful,,
4.66395E+17,oaktownsam#0815,2021-04-29,I seriously thought it would be faster to check something here than to open a terminal and repl,,
4.66395E+17,oaktownsam#0815,2021-04-29,: !rkt eval (equal-hash-code (thread (lambda () (void)))),,
2.66505E+17,notjack#9941,2021-04-29,!rkt eval (equal-hash-code (thread void)),,
8.02004E+17,r16#4581,2021-04-29,36583,,
4.66395E+17,oaktownsam#0815,2021-04-29,!rkt eval (equal-hash-code (thread void)),,
8.02004E+17,r16#4581,2021-04-29,39506,,
2.66505E+17,notjack#9941,2021-04-29,!rkt eval (equal-hash-code (thread void)),,
8.02004E+17,r16#4581,2021-04-29,42430,,
2.66505E+17,notjack#9941,2021-04-29,!rkt eval (equal-hash-code (thread void)),,
8.02004E+17,r16#4581,2021-04-29,45354,,
2.66505E+17,notjack#9941,2021-04-29,!rkt eval (equal-hash-code (thread void)),,
8.02004E+17,r16#4581,2021-04-29,48278,,
2.66505E+17,notjack#9941,2021-04-29,ascending. interesting.,,
4.66395E+17,oaktownsam#0815,2021-04-29,"I was more concerned if they were hash-able, but I think most things are.",,
2.66505E+17,notjack#9941,2021-04-29,I don't think there's anything that isn't,,
2.66505E+17,notjack#9941,2021-04-29,there are some things whose hash codes change when they're mutated. but that's evil.,,pensivewobble (1)
4.66395E+17,oaktownsam#0815,2021-04-29,haha,,
4.66395E+17,oaktownsam#0815,2021-04-29,"I'm changing something that has 1 producer : 1 consumer to M producers : N consumers, but I'm trying to work out if I can pin a producer to a consumer",,
2.64024E+17,Eutro#0016,2021-04-29,Hashing the thread was how I debugged whether two things are running on the same thread lol,,
4.66395E+17,oaktownsam#0815,2021-04-29,Of course if N < M then I have idle consumers,,
4.66395E+17,oaktownsam#0815,2021-04-29,er flip that,,
2.66505E+17,notjack#9941,2021-04-29,threads should have names,,
4.66395E+17,oaktownsam#0815,2021-04-29,Agree,,
4.66395E+17,oaktownsam#0815,2021-04-29,having `prop:thread` would help at least fake it.,,
1.55481E+17,Skallos#0001,2021-04-29,Does anyone have a good resource/tutorial for making multiplayer games in DrRacket?,,
7.73175E+17,meowüé∫#2842,2021-04-29,https://con.racket-lang.org/2014/vanderson.pdf https://github.com/david-vanderson/warp,,
1.55481E+17,Skallos#0001,2021-04-29,"I have seen the pdf before, but it doesn't really help me much. As for the game, it's a bit too complicated for me to understand what is happening. Is there a place I can slowly build up some simple game?",,
1.55481E+17,Skallos#0001,2021-04-29,<https://docs.racket-lang.org/teachpack/2htdpuniverse.html>,,
1.55481E+17,Skallos#0001,2021-04-29,"I came across this, and while I can understand each component, I can't see how to put it all together.",,
1.55481E+17,Skallos#0001,2021-04-29,Are there completed working examples of world-universe program interactions that are simple? That I may try to understand?,,
8.14743E+16,jimpjorps#0001,2021-04-29,"if you can get a hold of a copy of *Realm of Racket*, chapters 13 and 14 walk the reader through how to set up client-server interactions and manage the game state using `2htdp/universe`",,
1.55481E+17,Skallos#0001,2021-04-29,Thanks! One site that has the book for sale has chapter 14 as a preview fortunately. I'll take a look.,,
8.14743E+16,jimpjorps#0001,2021-04-29,the source code for each example's also at https://github.com/racket/realm,,
1.55481E+17,Skallos#0001,2021-04-29,Thanks! I can figure things out on my own from here.,,
8.14743E+16,jimpjorps#0001,2021-04-29,üëç,,
4.62028E+17,StephenD#5938,2021-04-29,"> In this section, we introduce capabilities for designing a distributed program, which is really a number of programs that coordinate their actions in some fashion. Each of the individual programs may run on any computer in the world (as in our planet and the spacecrafts that we sent out), as long as it is on the internet and as long as the computer allows the program to send and receive messages (via TCP). We call this arrangement a universe and the program that coordinates it all a universe server or just server.


https://docs.racket-lang.org/teachpack/2htdpuniverse.html#%28part._universe._world2%29",,
1.55481E+17,Skallos#0001,2021-04-29,I think I have an idea how this stuff works.,,
4.79785E+17,Sze#4087,2021-04-29,"I sometimes wonder about predicates/runtime type information and performance. It can be kind of annoying to have to call n predicates until you hit one that returns true, so sometimes I think it would be nice to have just a `type` function that returns a symbol or enum-like value indicating what type it is. That might not work so great if you have cases like `number?` vs `positive-integer?` vs `fixnum?` etc... I also wonder if things like match are able to optimize the predicates away in cases where it could just use some kind of internal type tag and dispatch between different branches using that.",,
2.66505E+17,notjack#9941,2021-04-29,"I think `match` has an optimization to avoid unnecessary predicate tests, but it doesn't have anything to collapse necessary predicate tests into inspection on a type tag. AFAIK the internal info needed to do that isn't exposed above the VM layer.",,
4.79785E+17,Sze#4087,2021-04-29,"I can understand not wanting to expose that information with all the impersonator stuff, might leak to much information in some cases to wrap values with contracts without being observable by user code, but if there isn't anything that is currently optimizing that, I wonder what would be needed so the optimizer can do something about that",,
4.79785E+17,Sze#4087,2021-04-29,"I mostly thought about it because I have a big chain of predicates that dispatches to things that save values based on the type in sepparate arrays on disk, currently it is fast enough for me, just scared it will become slow with more data, but I guess I have to measure it and keep an eye on it...",,
1.55481E+17,Skallos#0001,2021-04-29,What is the best way to implement text input in a world/universe?,,
1.55481E+17,Skallos#0001,2021-04-29,<https://docs.racket-lang.org/reference/Byte_and_String_Input.html>,,
1.55481E+17,Skallos#0001,2021-04-29,"I came across `(read-line)`, which somewhat works.",,
1.55481E+17,Skallos#0001,2021-04-29,But doesn't really when compiling a program.,,
1.55481E+17,Skallos#0001,2021-04-29,"Alternatively, I could write my own text input system, but there has to be a better way.",,
4.62028E+17,StephenD#5938,2021-04-29,Do you want it to block on text input or keep ticking?,,
1.55481E+17,Skallos#0001,2021-04-29,I don't think I follow. What I want is to have a text box a user could type into.,,
1.55481E+17,Skallos#0001,2021-04-29,"So when prompted, the user would type something, that the program would then use in some way.",,
4.62028E+17,StephenD#5938,2021-04-29,"You could make a dialog box in an on-tick 

https://docs.racket-lang.org/gui/dialog_.html",,
1.55481E+17,Skallos#0001,2021-04-29,"`(read-line)` would almost work, except it doesn't work well in a world setting, let alone when the program is compiled.",,
1.55481E+17,Skallos#0001,2021-04-29,Does that require an additional package?,,
4.62028E+17,StephenD#5938,2021-04-29,Yes,,
1.55481E+17,Skallos#0001,2021-04-29,"Right. Also, since I have seen this problem before...
https://i.imgur.com/S3oQyMs.png",,
1.55481E+17,Skallos#0001,2021-04-29,Is there a way to resolve this instead of manually requiring the functions you need?,,
1.55481E+17,Skallos#0001,2021-04-29,,https://cdn.discordapp.com/attachments/618895179343986688/837439337565126666/S3oQyMs.png,
4.62028E+17,StephenD#5938,2021-04-29,What sort of multiplayer game are you making?,,
1.55481E+17,Skallos#0001,2021-04-29,Found a solution to this.,,
1.55481E+17,Skallos#0001,2021-04-29,2 player game.,,
1.55481E+17,Skallos#0001,2021-04-29,With very simple controls.,,
4.62028E+17,StephenD#5938,2021-04-29,Do players take turns?,,
1.55481E+17,Skallos#0001,2021-04-29,Yes.,,
1.55481E+17,Skallos#0001,2021-04-29,"I should mention a bit more. I'm aiming for a more polished look, so a screen to put in a name and port to connect to, rather than it being hard-coded.",,
1.55481E+17,Skallos#0001,2021-04-29,"Turn-based game, yes.",,
1.55481E+17,Skallos#0001,2021-04-29,"Huh, I'm blanking on what details I should give, and which don't really matter. :(",,
1.55481E+17,Skallos#0001,2021-04-29,Dialog windows would be very handy.,,
9.9326E+16,Runi#1730,2021-04-29,"i dont know how easy it would be to integrate the racket/gui dialog box into your game's look and feel, if it's not then you might just have to implement simple text input yourself, it's not that unusual when making games in more bare frameworks",,
1.55481E+17,Skallos#0001,2021-04-29,"But that would require me learning how to use that first. üòî
I'm focussing on multiplayer first.",,
1.55481E+17,Skallos#0001,2021-04-29,"I might do that. Right now I make menus using `2htdp/image`, so I'll stick to it for now and only delve into once I'm comfortable with this.",,
7.72228E+17,hyena#0469,2021-04-29,Maybe prototype it with provided libraries and then focus on aesthetics?,,
1.55481E+17,Skallos#0001,2021-04-29,I'd like to get used to making multiplayer games first though.,,
4.62028E+17,StephenD#5938,2021-04-29,"I don‚Äôt think you are required to use 2htdp/image 

Since it is a turn based game I think the ball tossing design discussed at the end of 2htdp/universe is a good start
https://docs.racket-lang.org/teachpack/2htdpuniverse.html?q=Universe#%28tech._universe._package%29",,
4.62028E+17,StephenD#5938,2021-04-29,You can still use big-bang for each client but maybe use racket/gui instead of 2htdp/image alone,,
4.62028E+17,StephenD#5938,2021-04-29,You will learn about oo gui,,
1.55481E+17,Skallos#0001,2021-04-29,"Well, I would need to draw the game board. Does `racket/gui` offer methods of drawing?",,
7.72228E+17,hyena#0469,2021-04-29,You can draw onto a canvas by sending it messages,,
4.62028E+17,StephenD#5938,2021-04-29,Yes but it is more work than 2/image,,
7.72228E+17,hyena#0469,2021-04-29,https://github.com/soegaard/space-invaders,,
7.72228E+17,hyena#0469,2021-04-29,https://github.com/soegaard/breakout,,
1.55481E+17,Skallos#0001,2021-04-29,"If it helps, I am making a replica of this game.
<https://boardgamegeek.com/boardgame/2040/trippples>",,
1.55481E+17,Skallos#0001,2021-04-29,It's gonna be a while before I reach your level of proficiency.,,
7.72228E+17,hyena#0469,2021-04-29,The complexity of these examples are probably on par with making a board game like you are describing.,,
7.72228E+17,hyena#0469,2021-04-29,"They are ~300 lines of code in a single source file and demonstrate drawing on a canvas and setting up a game loop, so maybe you could get some ideas from it.",,
4.62028E+17,StephenD#5938,2021-04-29,Why do you want text entry?,,
4.62028E+17,StephenD#5938,2021-04-29,Or is that to establish the connection ?,,
1.55481E+17,Skallos#0001,2021-04-29,Yes.,,
7.72228E+17,hyena#0469,2021-04-29,"(also, they aren't my projects, they are from Jens Axel Soegaard)",,
1.55481E+17,Skallos#0001,2021-04-29,I'm talking about the way you code. Not how much code.,,
1.55481E+17,Skallos#0001,2021-04-29,Ah.,,
1.55481E+17,Skallos#0001,2021-04-29,So the way he codes.,,
4.62028E+17,StephenD#5938,2021-04-29,So you want a pre game dialog where you enter the server address and player name,,
4.62028E+17,StephenD#5938,2021-04-29,"Three phases:
1. Each player specifies their name and the server
2. Players take turns placing pieces on 8x8 board
3. Player takes turns making legal moves until a player reaches their goal first(win), can‚Äôt move(lose) or concedes",,
1.55481E+17,Skallos#0001,2021-04-29,Yes.,,
1.55481E+17,Skallos#0001,2021-04-29,"Well, I was going to ignore phase 2. To simplify things. But if you insist...",,
1.55481E+17,Skallos#0001,2021-04-29,I'm probably going to redo this project in the future.,,
1.55481E+17,Skallos#0001,2021-04-29,But I should probably include phase 2.,,
4.62028E+17,StephenD#5938,2021-04-29,I‚Äôd suggest the first phase is done before starting big-bang: a gui dialog to enter name and server connection details,,
1.55481E+17,Skallos#0001,2021-04-29,"> big-bang
I was planning on 2 big-bang events.",,
4.62028E+17,StephenD#5938,2021-04-29,Do you know how to make a dialog with a name and server details field? Or maybe a frame% with the game name the fields to enter player name and server connection details?,,
1.55481E+17,Skallos#0001,2021-04-29,"I have no experience with dialogs. I have completed the startup screen though, to my liking.",,
1.55481E+17,Skallos#0001,2021-04-29,There'll come a time when I learn how to make proper GUI. But I'll get lost when I try to learn this and multiplayer at once. :(,,
4.62028E+17,StephenD#5938,2021-04-29,I think you are right to break the task up into smaller pieces.,,
4.62028E+17,StephenD#5938,2021-04-29,I‚Äôd suggest working through 2htdp/universe first - the ball tossing game it ends on will be a good basis to start from for the third phase i mentioned above,,
1.55481E+17,Skallos#0001,2021-04-29,Will note.,,
1.55481E+17,Skallos#0001,2021-04-29,Thank you all for the help!,,
4.62028E+17,StephenD#5938,2021-04-29,"Using your start up screen and capturing player input will require learning a little of the racket gui:
1 show the startup screen
2. Show user input fields 
3. Make a play button that (a)takes the user input, (b) closes the ‚Äòstartup window‚Äô (c) passes the user input to big-bang as the starting state",,
1.55481E+17,Skallos#0001,2021-04-29,I was planning on using `2htdp/image`.,,
4.62028E+17,StephenD#5938,2021-04-29,You can still use it for you startup screen graphics but 2htdp/image doesn‚Äôt have text entry,,
4.62028E+17,StephenD#5938,2021-04-29,I think you will need to start here https://docs.racket-lang.org/gui/windowing-overview.html,,
2.14881E+17,Moinate#6061,2021-04-29,You can do text entry with 2htdp just use a key handler. It‚Äôs fine if no frills.,,
4.79785E+17,Sze#4087,2021-04-29,"I think handling the input in the game within the big-bang is fine too, the result might be nicer in the long run (having game-style ui). Doing it without racket/gui is more work in the short term (and you have to handle your own ""ui-input/logic""), but might seem more polished in the end, many games roll their own ui style. @Skallos I think its fine for you to do it with whatever you think makes sense for your game or fits your goal for what you want to end up with. There are lots of different options with racket.",,
4.79785E+17,Sze#4087,2021-04-29,"well maybe it isn't even ""more"" work",,
4.62028E+17,StephenD#5938,2021-04-29,Good points‚¨ÜÔ∏è,,
2.14881E+17,Moinate#6061,2021-04-29,"The hump to start with GUI is a little intimidating, I can see why you would want 2htdp only.... but if u don‚Äôt want to understand deeply i think you could slap some working GUI code together pretty fast starting with the GUI tutorial.",,
4.62028E+17,StephenD#5938,2021-04-29,I can only say how ***I would do it***. That might not be right for you.,,
4.62028E+17,StephenD#5938,2021-04-29,Best wishes and keep asking questions they are welcome,,
4.62028E+17,StephenD#5938,2021-04-29,"If you do it all in `2htdp/image` and `universe` it might be worth thinking of the start screen and data entry as one game, whose end triggers the start(and provides data for) the second game ‚Äòtrippples‚Äô itself 

Based on your description of what you want to achieve I think working from the start to the end of `2htdp/universe` will give you much of what you need to know.

 https://docs.racket-lang.org/teachpack/2htdpuniverse.html",,
2.66505E+17,notjack#9941,2021-04-30,steadily making progress on sorted collections! it's fun watching the number of TODO comments shrink,,üòç (3)
2.75501E+17,Plane#0324,2021-04-30,Yay!,,
7.72228E+17,hyena#0469,2021-04-30,"Racket uses the # symbol in a lot of different ways in combination with other symbols (#' for syntax, #: for keywords, #/ for characters, etc). Is there a consistent meaning for # or is it just a flag for the compiler?",,
2.14881E+17,Moinate#6061,2021-04-30,"""Reader macro"" I think... changes the way the very low level input method is understanding what it sees.
Official docs ->
https://docs.racket-lang.org/reference/readtables.html
> A readtable is consulted at specific times by the reader: [...] 
> when determining how to parse a datum that starts with #;",,
2.14881E+17,Moinate#6061,2021-04-30,"That page doesn't look too enlightening, I'm sure someone else will have a better reference for how `#` is understood. The takeaway is that the handling can be configured = is not built in to the compiler/lexer/reader/whatever",,
7.72228E+17,hyena#0469,2021-04-30,"That's interesting. Thanks for the reference. It's along the lines of what I was imagining, that it is convenient to have a symbol that flagged something as a token",,
1.93202E+17,rocketnia#4517,2021-04-30,"it's basically ""we used up most of the punctuation already, so how about using some punctuation we've already used, but with potentially a completely different meaning this time""",,
7.72228E+17,hyena#0469,2021-04-30,It has an unfortunate effect of making some source files look like a crazy mix of punctuation marks,,
2.64024E+17,Eutro#0016,2021-04-30,I think that's half the fun,,
7.72228E+17,hyena#0469,2021-04-30,"There should be a code golf style competition to create the ugliest and convoluted source code to accomplish a given task. 
I wonder which common language would have the easiest time with that.",,
4.66395E+17,oaktownsam#0815,2021-04-30,"Yes `#` is like an extension point in other Lisps, you dispatch your crazy reader extensions off of `#`",,
4.66395E+17,oaktownsam#0815,2021-04-30,I abused #{ to do inline `system` calls.,,
4.66395E+17,oaktownsam#0815,2021-04-30,https://github.com/samdphillips/racket-rkshell,,
9.9326E+16,Runi#1730,2021-04-30,"this has been conceptualized before in the form of ""code bowling"", but without restrictions it tends to be a competition to generate the longest possible representation of a program in some crazy language like this <https://codegolf.stackexchange.com/a/211696/>",https://cdn.discordapp.com/attachments/618895179343986688/837743498753081384/unknown.png,
9.9326E+16,Runi#1730,2021-04-30,<https://codegolf.stackexchange.com/questions/tagged/code-bowling?tab=Votes> for more (including some more interesting ones),,
8.14743E+16,jimpjorps#0001,2021-04-30,placing arbitrary restrictions on yourself to do basic tasks can be fun,,
8.14743E+16,jimpjorps#0001,2021-04-30,last night I was working on an exercise to implement integer multiplication without using * or any type conversion functions,,
2.81975E+17,Aeva#1234,2021-04-30,does perl still count as a common language üòè,,üòè (1)
4.66395E+17,oaktownsam#0815,2021-04-30,"How can we stop the bane of existence, rightward drift, when `with-handlers` exists:
```scheme
  (with-handlers ([exn:fail?
                   (log-error-fail 'get-sensor-data
                                   ""an error occurred"")])
      ...)
```",,üò≠ (1)
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-04-30,newline immediately after with-handlers identifier?,,
4.66395E+17,oaktownsam#0815,2021-04-30,Maybe.  I'm resisting the urge to make a `(try (catch ...) (finally ...))` syntax,,
1.93202E+17,rocketnia#4517,2021-04-30,"If you might nest a bunch of `with-handlers`, I think putting the catch block after the main block means the code will have a pyramid of rightward drift in the middle, followed by catch blocks in a gradual cascade to the left.

Since I use Parendown, I like to keep all the nesting at the very end, so that I can use weak opening parens to avoid indenting any of that nested structure.

I think Go arrives at a similar place as I do with Parendown: One statement declares an error handler, and it applies for the rest of the current block. Multiple handlers can be set up this way while staying at the same nesting level.",,
1.93202E+17,rocketnia#4517,2021-04-30,"All that being said, nesting multiple handlers isn't the source of the rightward drift you're concerned about there...",,
1.93202E+17,rocketnia#4517,2021-04-30,I think Techno Chess's suggestion is the same as what I'd suggest there.,,
1.93202E+17,rocketnia#4517,2021-04-30,"as one idea, the parens of `with-handlers` could be replaced with something more like a `define`-style block DSL:

```scheme
  (try
    (handler exn:fail?
      (log-error-fail 'get-sensor-data
                      ""an error occurred""))
    ...)
```",,
2.66505E+17,notjack#9941,2021-04-30,nesting multiple `with-handlers` should probably be avoided in general. move them into helper functions.,,
4.66395E+17,oaktownsam#0815,2021-04-30,Oh yeah I'm not nesting the `with-handlers`,,
4.66395E+17,oaktownsam#0815,2021-04-30,It's a similar problem with `let` and `letrec` you have this lambda way off to the right,,
2.66505E+17,notjack#9941,2021-04-30,and it's weird that it's a lambda in the first place. it's not like it's going to be called multiple times.,,
2.66505E+17,notjack#9941,2021-04-30,(by the same `with-handlers` I mean),,
4.66395E+17,oaktownsam#0815,2021-04-30,It's to pass in the exception value AFAIU,,
6.87833E+17,grey#8674,2021-04-30,"Racket‚Äôs delimited continuation system uses procedures for handlers, maybe so that it‚Äôs unnecessary to introduce a new kind of construct just for handlers?",,
2.66505E+17,notjack#9941,2021-04-30,"What I mean is, it's weird that the syntax isn't like this:
```scheme
(with-handlers
    ([id bool-expr handler-body ...+] ...)
  body ...+)
```",,
4.66395E+17,oaktownsam#0815,2021-04-30,Yeah that would be better.,,
4.66395E+17,oaktownsam#0815,2021-04-30,You mean `pred-expr` instead of `bool-expr` ?,,
4.66395E+17,oaktownsam#0815,2021-04-30,(in my example above `(log-error-fail ...)` is a curried function,,
2.66505E+17,notjack#9941,2021-04-30,"No I mean bool. So you'd do
```scheme
(with-handlers
    ([e (exn:fail? e) (handle-fail e)])
  body ...
```",,
4.66395E+17,oaktownsam#0815,2021-04-30,I see,,
2.66505E+17,notjack#9941,2021-04-30,"at least, that's what I'd probably do with a `try ... catch` variant of the syntax",,
1.93202E+17,rocketnia#4517,2021-04-30,"Even using one `with-handlers` is quite suspicious outside of, like, writing a process monitor kind of thing.",,
1.93202E+17,rocketnia#4517,2021-04-30,"But this is an operation that takes a block and transforms it into a block where things are caught. Whether we compose it with itself or not, it can compose with other block-transforming operations.",,
1.93202E+17,rocketnia#4517,2021-04-30,like `let` and `parameterize`,,
1.93202E+17,rocketnia#4517,2021-04-30,"yeah, this has always confused me. I can kinda see wanting to juat write `exn:fail?` but then having to have a lambda for the handler still seems pretty odd",,
2.64024E+17,Eutro#0016,2021-04-30,is it cursed to use `void` as a predicate?,,
2.64024E+17,Eutro#0016,2021-04-30,In `with-handlers` for example,,
1.93202E+17,rocketnia#4517,2021-04-30,"hmm, `box` might be a less confusing ""predicate"" than `void` since some people might expect `void`'s result to be falsy :-p",,
2.66505E+17,notjack#9941,2021-04-30,use `(Œª (_) #true)`,,
2.66505E+17,notjack#9941,2021-04-30,or actually,,
2.66505E+17,notjack#9941,2021-04-30,ugh I was hoping there was an `any?` predicate,,
1.93202E+17,rocketnia#4517,2021-04-30,any/c,,
2.66505E+17,notjack#9941,2021-04-30,you could use `any/c` technically,,
2.66505E+17,notjack#9941,2021-04-30,but it doesn't _look_ like a predicate so it's a little weird,,
1.93202E+17,rocketnia#4517,2021-04-30,`any/c` should probably be named `value?` or something like that,,
2.66505E+17,notjack#9941,2021-04-30,"though now that I think about it, it's weird that `any/c` wasn't named `any?` in the first place",,
2.66505E+17,notjack#9941,2021-04-30,`value?` would make sense too,,
1.93202E+17,rocketnia#4517,2021-04-30,!rkt eval (any/c '()),,
8.02004E+17,r16#4581,2021-04-30,#t,,
1.93202E+17,rocketnia#4517,2021-04-30,but there aren't any,,nil (1)
1.93202E+17,rocketnia#4517,2021-04-30,I bet the naming is a historical detail showing through at this point,,
1.93202E+17,rocketnia#4517,2021-04-30,"Like, it wasn't always the case that various values could be used as flat contracts. Maybe the same was true of predicates?",,
1.93202E+17,rocketnia#4517,2021-04-30,but it would be pretty verbose to have to write `(-> (flat-contract string?) (flat-contract string?) (flat-contract string?))`,,
2.66505E+17,notjack#9941,2021-04-30,"yeah, predicates used to require wrapping to be used as contracts",,
2.66505E+17,notjack#9941,2021-04-30,see https://docs.racket-lang.org/reference/data-structure-contracts.html?q=flat-contract#%28def._%28%28lib._racket%2Fcontract%2Fprivate%2Fmisc..rkt%29._flat-contract%29%29,,
1.93202E+17,rocketnia#4517,2021-04-30,"ah, there it is, ""before predicates could be used directly as flat contracts""",,
2.66505E+17,notjack#9941,2021-04-30,I know this because I accidentally screwed up some resyntax rules to migrate code from before predicates could be used as contracts üòÖ https://github.com/jackfirth/resyntax/issues/43,,
1.93202E+17,rocketnia#4517,2021-04-30,"oh, fascinating thing to run into, yeah",,
2.66505E+17,notjack#9941,2021-04-30,see also https://github.com/racket/racket/pull/3683,,
1.93202E+17,rocketnia#4517,2021-04-30,part of me probably would prefer the stronger typing of the old way of doing things,,
2.66505E+17,notjack#9941,2021-04-30,yeah I can see the reasoning for that,,
2.66505E+17,notjack#9941,2021-04-30,in general implicit conversions are not great tools to reach for in APIs by default,,
2.66505E+17,notjack#9941,2021-04-30,this particular case seems like a good exception,,
1.93202E+17,rocketnia#4517,2021-04-30,"only part of me would prefer it stricter, and part of me likes the brevity so that contracts can be used as documentation",,
2.75501E+17,Plane#0324,2021-04-30,"so i noticed there is a package `ftree` which doesn't have docs hosted on racket-lang, but it does have scribble docs that just fail to build",,
2.75501E+17,Plane#0324,2021-04-30,`raco test --package ftree` outputs errors like these https://pkg-build.racket-lang.org/server/built/test-fail/ftree.txt,,
2.75501E+17,Plane#0324,2021-04-30,"so i changed the scribble file like this (not a complete diff, just to show the kind of change):",,
2.75501E+17,Plane#0324,2021-04-30,"```
<           (for-label ftree/ftree/ftree
<                      ftree/raseq/raseq
<                      ftree/pqueue/pqueue
<                      ftree/orderedseq/orderedseq
<                      ftree/intervaltree/intervaltree)
---
>           (for-label ftree
>                      raseq
>                      pqueue
>                      orderedseq
>                      intervaltree)
```",,
2.75501E+17,Plane#0324,2021-04-30,"and that made it happy and i got the docs building on my local machine, tests passed",,
2.75501E+17,Plane#0324,2021-04-30,looking in git i see this was changed before as well: <https://github.com/stchang/ftree/commit/cbb0dd0d81c720806e75f89442193017a9cb0b21>,,
2.75501E+17,Plane#0324,2021-04-30,from this pr <https://github.com/stchang/ftree/pull/2>,,
2.75501E+17,Plane#0324,2021-04-30,did scribble change over time?,,
2.75501E+17,Plane#0324,2021-04-30,this pr was merged so i assume it most likely worked in 2016,,
2.75501E+17,Plane#0324,2021-04-30,i don't really know what i'm doing lol so i'm hesitant to submit a pr,,
2.66505E+17,notjack#9941,2021-04-30,I think the original change just used the wrong paths,,
2.66505E+17,notjack#9941,2021-04-30,"as in, I don't think the original change made it work in the first place",,
2.75501E+17,Plane#0324,2021-04-30,i see,,
2.66505E+17,notjack#9941,2021-04-30,the new change you made doesn't seem quite right either,,
2.75501E+17,Plane#0324,2021-04-30,i haven't used scribble before,,
2.75501E+17,Plane#0324,2021-04-30,so i kinda Made It Work instead of Doing The Right Thing‚Ñ¢,,
2.75501E+17,Plane#0324,2021-04-30,i should read the scribble docs,,
2.66505E+17,notjack#9941,2021-04-30,actually,,
2.66505E+17,notjack#9941,2021-04-30,nevermind,,
2.66505E+17,notjack#9941,2021-04-30,your change is right,,
2.66505E+17,notjack#9941,2021-04-30,"(ugh, multi-collection packages are the worst)",,
2.66505E+17,notjack#9941,2021-04-30,"ah, this change https://github.com/stchang/ftree/commit/4f5f57c437446b83a01bb251659dc0cfdbd88167",,
2.66505E+17,notjack#9941,2021-04-30,that's what broke the docs,,
2.66505E+17,notjack#9941,2021-04-30,so the docs did used to render correctly,,
2.75501E+17,Plane#0324,2021-04-30,a-ha,,
2.66505E+17,notjack#9941,2021-04-30,"but when it was changed to a multi-collection package, the module paths in the docs weren't updated",,
2.66505E+17,notjack#9941,2021-04-30,and also,,
2.66505E+17,notjack#9941,2021-04-30,that change would have broken the code of anyone using the package at the time,,
2.66505E+17,notjack#9941,2021-04-30,so,,
2.66505E+17,notjack#9941,2021-04-30,üòÖ,,
2.66505E+17,notjack#9941,2021-04-30,I'm guessing this package didn't have too many users,,
4.66395E+17,oaktownsam#0815,2021-04-30,"I generally have a 2-3 cycle round trip with the package server before I have a good ""release""",,
4.66395E+17,oaktownsam#0815,2021-04-30,generally because of scribble,,
4.66395E+17,oaktownsam#0815,2021-04-30,I should probably set up GH actions or something to run drdr like the package server does,,
4.66395E+17,oaktownsam#0815,2021-05-01,http://guillaume.baierouge.fr/2021/04/23/simulating-digital-circuits-in-racket/a-risc-v-core-in-racket/index.html,,
5.06301E+17,xoxo#7837,2021-05-01,does anyone here have experience w pascal?,,
4.62028E+17,StephenD#5938,2021-05-01,Have you tried the Delphi Community Discord? https://discord.me/delphi,,
5.06301E+17,xoxo#7837,2021-05-01,no i didnt know this was a server i will join it!,,
5.06301E+17,xoxo#7837,2021-05-01,i just had a quick conceptual q about pascal,,
1.55481E+17,Skallos#0001,2021-05-01,Is there a significant difference between using `let` and `define` for local assignments?,,
1.55481E+17,Skallos#0001,2021-05-01,https://i.imgur.com/j19P4VP.png,,
1.55481E+17,Skallos#0001,2021-05-01,"I see `define` would need less parens, and takes less effort to define local functions.",,
1.55481E+17,Skallos#0001,2021-05-01,But is there any other difference?,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-01,"in racket no, afaik",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-01,"there is a difference in scheme (if you care about), in that you can only use internal defines before regular expressions",,
2.66505E+17,notjack#9941,2021-05-01,"The macro expander rewrites internal definitions into equivalent let forms anyway, so there's no difference",,
2.66505E+17,notjack#9941,2021-05-01,the `define` form is preferred to reduce nesting,,
1.55481E+17,Skallos#0001,2021-05-01,That's what I figured. Thank you.,,
1.55481E+17,Skallos#0001,2021-05-01,"Is there a built-in function, like `remove`, that instead removes the item at a specified index, rather than value?",,
2.75501E+17,Plane#0324,2021-05-01,i don't believe so,,
1.55481E+17,Skallos#0001,2021-05-01,Wew. Server code for my multiplayer game is almost done. Just need proper move validation and a win condition. Time to chug through completing the client code.,,
2.75501E+17,Plane#0324,2021-05-01,yay!,,
2.75501E+17,Plane#0324,2021-05-01,i just learned how to use `with-handlers`,,
2.75501E+17,Plane#0324,2021-05-01,i picked up this knowledge ~~on the street~~ in #general,,
2.75501E+17,Plane#0324,2021-05-01,"i was like ""gee, i made two `remove-at` implementations, but they have different error behaviors""",,
2.75501E+17,Plane#0324,2021-05-01,"```scheme
(define (remove-at lst index)
  (cond
    [(empty? lst) empty]
    [(zero? index) (remove-at (cdr lst) (sub1 index))]
    [(cons (car lst) (remove-at (cdr lst) (sub1 index)))]))

(define (remove-at lst index)
  (append (take lst index)
          (drop lst (add1 index))))
```",,
2.75501E+17,Plane#0324,2021-05-01,"""i should try to clean that up""",,
2.75501E+17,Plane#0324,2021-05-01,"```scheme
(define (remove-at lst index)
  (with-handlers
      ([exn:fail:contract?
        (Œª (_) (raise-argument-error 'remove-at ""index in range [0..n) for list of length n"" index))])
    (append (take lst index)
            (drop lst (add1 index)))))
```",,
2.75501E+17,Plane#0324,2021-05-01,this function got wider!,,
7.73175E+17,meowüé∫#2842,2021-05-01,"There's similarly no `insert-at`, possibly on purpose, as lists aren't very suitable for random access tasks.",,
7.73175E+17,meowüé∫#2842,2021-05-01,@Plane You can use `split-at` to avoid traversing the list twice.,,
2.75501E+17,Plane#0324,2021-05-01,that sounds good,,
2.75501E+17,Plane#0324,2021-05-01,i need to learn how to work with multiple return values,,
2.75501E+17,Plane#0324,2021-05-01,i was actually looking at `split-at`,,
7.73175E+17,meowüé∫#2842,2021-05-01,"Although you'll still be traversing twice, I suppose, because of `append`.",,
2.75501E+17,Plane#0324,2021-05-01,that's why the first thing i did was write it with explicit recursion,,
2.75501E+17,Plane#0324,2021-05-01,well that and i'm just trying to practice my rusty cs skills lol,,
7.73175E+17,meowüé∫#2842,2021-05-01,"Yeah, that's a good idea for busy routines.",,
2.75501E+17,Plane#0324,2021-05-01,my first version just returns the initial list if the index is outside the expected range,,
2.75501E+17,Plane#0324,2021-05-01,which doesn't seem *un*-reasonable but i was thinking i should learn to use the contract system soon,,
7.73175E+17,meowüé∫#2842,2021-05-01,You can throw an error for null.,,
7.73175E+17,meowüé∫#2842,2021-05-01,Since it should never reach the end of the list.,,
7.73175E+17,meowüé∫#2842,2021-05-01,And shouldn't be given an empty list either.,,
2.75501E+17,Plane#0324,2021-05-01,"```scheme
(define (remove-at lst index)
  (define (remove-at-aux lst index original-index)
    (cond
      [(or (negative? index)
           (empty? lst))
       (raise-argument-error 'remove-at ""index in range [0..n) for list of length n"" original-index)]
      [(zero? index)
       (rest lst)]
      [(cons (car lst)
             (remove-at-aux (cdr lst)
                            (sub1 index)
                            original-index))]))
  (remove-at-aux lst index index))
```",,
2.75501E+17,Plane#0324,2021-05-01,something like that,,
7.73175E+17,meowüé∫#2842,2021-05-01,You don't need to define an original-index argument.,,
7.73175E+17,meowüé∫#2842,2021-05-01,It already binds the arguments in the parent scope.,,
2.75501E+17,Plane#0324,2021-05-01,ooh good point,,
2.75501E+17,Plane#0324,2021-05-01,i didn't think about that,,
2.75501E+17,Plane#0324,2021-05-01,"thanks, let's pretend this whole conversation was in #help üëÄ",,
7.73175E+17,meowüé∫#2842,2021-05-01,Hehe,,
5.06301E+17,xoxo#7837,2021-05-01,i love ur hamster @Plane,,
5.06301E+17,xoxo#7837,2021-05-01,is it a syrian hamster?,,
5.06301E+17,xoxo#7837,2021-05-01,i have a russian dwarf hammie,,
2.75501E+17,Plane#0324,2021-05-01,yes her name is mint (:,,
2.75501E+17,Plane#0324,2021-05-01,we can post hamster pictures in #off-topic,,
5.06301E+17,xoxo#7837,2021-05-01,omg,,
5.06301E+17,xoxo#7837,2021-05-01,ok,,
5.06301E+17,xoxo#7837,2021-05-01,mint is so cute,,
7.73175E+17,meowüé∫#2842,2021-05-01,:meowblush:,,
1.55481E+17,Skallos#0001,2021-05-01,https://i.imgur.com/1xgapla.png,,
1.55481E+17,Skallos#0001,2021-05-01,"Huh, I did not know this was a feature.",,
2.75501E+17,Plane#0324,2021-05-01,"i'm sure i read those docs, but i never used `apply` that way and i forgot",,
2.75501E+17,Plane#0324,2021-05-01,looks handy!,,
8.14743E+16,jimpjorps#0001,2021-05-01,"figuring out apply, curry, curryr and compose really help make things like map and filter neater",,
8.14743E+16,jimpjorps#0001,2021-05-01,don't have to write lambdas for everything,,
5.06301E+17,xoxo#7837,2021-05-01,"hey guys, does anyone have any idea as to why the code in help that i just posted is not putting that one list together?",,
2.75501E+17,Plane#0324,2021-05-02,later i realized i could do a simpler `remove-at` with `for/list`:,,
2.75501E+17,Plane#0324,2021-05-02,"```scheme
(define (remove-at lst index)
  (for/list ([value (in-list lst)]
             [position (in-naturals)]
             #:unless (= position index))
    value))
```",,
2.75501E+17,Plane#0324,2021-05-02,the version with `take` and `drop` seems to be fastest though by a decent margin,,
4.66395E+17,oaktownsam#0815,2021-05-02,I was surprised at first but the `for/list` version is traversing items and sticking them on a fresh list most likely.,,
3.5323E+17,Alex Knauth#4895,2021-05-02,"With a list of length `n` and an index `i`, the version with take and drop needs to traverse up to `i` but not the full `n` like the for version does. A version with `split-at` instead would traverse up to `i` once instead of twice.",,
3.5323E+17,Alex Knauth#4895,2021-05-02,"The version that seems best to me would use something like a `split-at-reverse` and `append-reverse`, like this:
```
(define (remove-at lst index)
  (define-values [ra b] (split-at-reverse lst index))
  (append-reverse ra (rest b))
```
where `(split-at-reverse (list A B C D E) 3)` produces `(values (list C B A) (list D E))`",,
7.94955E+17,Laurent O#6627,2021-05-02,"Yeah, I often define a `rev-append` when I want to avoid unnecessary work, in particular when i use lists as sets",,
7.94955E+17,Laurent O#6627,2021-05-02,I also have a `in-zip` somewhere which is like `in-list` but also binds reverse-left and right (rest),,
7.94955E+17,Laurent O#6627,2021-05-02,Could be used here with a break clause,,
3.5323E+17,Alex Knauth#4895,2021-05-02,"but to supplement `append-reverse`, or `revappend` or whatever it's named, it would be nice to have `take-reverse` and `split-at-reverse` as well",,plusone (1)
7.94955E+17,Laurent O#6627,2021-05-02,Although these could be done with in-zip,,
7.94955E+17,Laurent O#6627,2021-05-02,It should be in bazaar/loop if anyone is interested,,
1.55481E+17,Skallos#0001,2021-05-02,"Is there a way to send messages to the Universe console? I see there is `(to-string render-expr)`, but I am wondering if it can print a message directly to the console without an event to trigger. Specifically, sending a message on startup.",,
2.14881E+17,Moinate#6061,2021-05-02,"I am pretty sure no.
The universe console does automatically print some message on startup, as you probably know.
You can't print there, but you could print in the console for the window you started the server in (so non-gui).
The gui in the universe code is not exposed as far as I can see. 
You could look to see where it is created https://github.com/racket/htdp/blob/6d8926510bd48aaeec3f6dba9364f3d08e8e1601/htdp-lib/2htdp/private/universe.rkt#L160 
Maybe you could define a subclass of the `universe%` class to get access to the `gui` field, but I am pretty sure you're hoping for a function that logs the info you pass it.",,
1.55481E+17,Skallos#0001,2021-05-02,I would want to compile the program to a separate application at best.,,
1.55481E+17,Skallos#0001,2021-05-02,"I could have the universe have it's own display, though.",,
2.14881E+17,Moinate#6061,2021-05-02,"Yes, that sounds good. You will avoid all of the ""garbage"" messages that get printed by default to the universe console that way, which is probably preferable anyway.",,
2.66505E+17,notjack#9941,2021-05-02,"I think not allocating a head list at all and storing the cons calls on the stack would likely be fastest
```scheme
(define (remove-at lst x)
  (cond
    [(zero? x) (rest lst)]
    [else
     (cons (first lst)
           (remove-at (rest lst) (sub1 x)))]))
```",,üëç (3)
2.64024E+17,Eutro#0016,2021-05-02,but my TCO,,
2.66505E+17,notjack#9941,2021-05-02,"you're allocating linear space for the head list anyway, tail calls won't make a difference",,
2.64024E+17,Eutro#0016,2021-05-02,"the difference is that without tail calls the extra space is for the stack frame, while with tail calls it's for the head list",,
2.66505E+17,notjack#9941,2021-05-02,"yes. when it's for the head list, that list then needs to be destroyed and recreated when it's appended into the tail list. so the tail call version uses about double the space.",,
1.55481E+17,Skallos#0001,2021-05-02,"We did talk earlier. I have it set up that there is an initial `big-bang` where you can type in your name and ip address to connect to, as well as an insturctions page. From there, you would connect to the server by starting up a new `big-bang`. Is this a smart idea?",,
1.55481E+17,Skallos#0001,2021-05-02,"Ideally, I would prefer if the first `big-bang`, where you typed in the login details, would stop and close, but I can't figure out a way to do that.",,
1.55481E+17,Skallos#0001,2021-05-02,I would also prefer to stay away from gui dialogs and use `2htdp/image`.,,
4.66395E+17,oaktownsam#0815,2021-05-02,Great.  Found an incredibly annoying bug with an interaction between two separate libraries.  And now my minimal example is failing to work.,,
4.66395E+17,oaktownsam#0815,2021-05-02,"TLDR; in a web server response object don't do anything fancy inside the body generating procedure.  In this case I was making a `net/http-easy` call and on exception (due to the remote being unreachable) the web server kills the `net/http-easy` http connection pool thread, and then it fails on every subsequent request because the pool is dead.",,
2.14881E+17,Moinate#6061,2021-05-02,"That plan seems fine.
There is an option to big-bang `(close-on-stop #true)`. 
Usually define a variable to hold the final model from that, to use in the next big-bang.
https://docs.racket-lang.org/teachpack/2htdpuniverse.html?q=2htdp#%28form._world._%28%28lib._2htdp%2Funiverse..rkt%29._close-on-stop%29%29",,
1.55481E+17,Skallos#0001,2021-05-02,I got help from notjack. I did know of `close-on-stop` already.,,
1.55481E+17,Skallos#0001,2021-05-02,The problem I had was launching the next big-bang whilst closing the current one.,,
1.55481E+17,Skallos#0001,2021-05-02,"notjack's solution was to close the current world, return the data, and launch the second big-bang using that data.",,
2.14881E+17,Moinate#6061,2021-05-02,Yes that‚Äôs the way,,
2.66505E+17,notjack#9941,2021-05-02,kill safety strikes again ugh,,
2.66505E+17,notjack#9941,2021-05-02,connection pools should ideally be kill safe. maybe file a bug about that in `net/http-easy`?,,
4.66395E+17,oaktownsam#0815,2021-05-02,Yeah I need to formulate it.,,
4.62028E+17,StephenD#5938,2021-05-02,I think you need the  `(stop-when stop-expr)` clause https://docs.racket-lang.org/teachpack/2htdpuniverse.html#%28form._world._%28%28lib._2htdp%2Funiverse..rkt%29._big-bang%29%29,,
4.62028E+17,StephenD#5938,2021-05-02,Oops. Looks like you are on track with help from others. üòÄ Good luck üëç,,
4.66395E+17,oaktownsam#0815,2021-05-02,"Complicated bugs are hard to report üò¶
https://github.com/Bogdanp/racket-http-easy/issues/12",,
2.66505E+17,notjack#9941,2021-05-02,I extracted the Function Design Recipe from the How to Design Programs book into its own gist https://gist.github.com/jackfirth/81336ed48a0668643c9f0c680d5d56ad,,üëè (2)
4.66395E+17,oaktownsam#0815,2021-05-02,"Great Blog Post about Racketeer Dave Herman,
https://brson.github.io/2021/05/02/rusts-most-unrecognized-contributor",,plusone (1)
4.66395E+17,oaktownsam#0815,2021-05-02,"I don't know if he does much Racket nowadays, but he's responsible for a few packages still on the package server.",,
4.66395E+17,oaktownsam#0815,2021-05-02,I /think/ Dave wrote the first version of the json package too.,,
2.66505E+17,notjack#9941,2021-05-02,Wow that's a great article,,
4.61981E+17,Gavinok#4195,2021-05-03,Is it just me or is racket kinda slow? I love the lang but have never found it to have good performance. Especially when it comes to startup,,
2.66505E+17,notjack#9941,2021-05-03,"Startup time is a known problem. Steady state performance is quite good, or at least can be if you know what to do when optimizing.",,
4.61981E+17,Gavinok#4195,2021-05-03,Fair I am still need so most of my programs don't run that long.,,
2.66505E+17,notjack#9941,2021-05-03,"Try using `#lang racket/base` instead of `#lang racket`, if you haven't done that already",,
4.62028E+17,StephenD#5938,2021-05-03,@Gavinok some gathered notes on how to make Racket programs fast https://github.com/racket/racket/wiki/Fast-Racket,,
2.14881E+17,Moinate#6061,2021-05-03,Gavinok - it would be interesting to hear (at least kind of generally) what kind of applications you are writing / thinking about,,this (1)
4.61981E+17,Gavinok#4195,2021-05-03,Many of the programs I have worked on are glorified scripts but since I found the startup time of racket to be rough I have been looking into making GUIs with it.,,same (2)
2.22201E+17,winny#9877,2021-05-03,"I found as long as I ran a byte compiled copy with racket base, the overhead is usually not a problem except on my pentium M (for example try installing a racket cli tool e.g. `raco pkg install - -auto runomatic` then run it, it might not be notiably slow because it's byte compiled)",,meowwarp (1)
4.61981E+17,Gavinok#4195,2021-05-03,I'll give that a try,,
5.06301E+17,xoxo#7837,2021-05-04,hey is anyone able to take a look at help?,,
1.55481E+17,Skallos#0001,2021-05-04,"I think my multiplayer game is done. Well, for the most part.",,
1.55481E+17,Skallos#0001,2021-05-04,I still have to code in the ending still.,,
1.55481E+17,Skallos#0001,2021-05-04,But everything else seems working nice. Logic and all.,,
1.55481E+17,Skallos#0001,2021-05-04,Not sure of bugs. Still need to try getting a third client logging in.,,
1.55481E+17,Skallos#0001,2021-05-04,Is it recommended to require a port for the game? In addition to IP?,,
1.55481E+17,Skallos#0001,2021-05-04,Or not?,,
9.9326E+16,Runi#1730,2021-05-04,most games assume a default port but make it configurable,,
9.9326E+16,Runi#1730,2021-05-04,so if you dont explicitly enter a port (either when hosting or connecting) itll just use the default,,
4.66395E+17,oaktownsam#0815,2021-05-04,It makes it easier on the player then too.,,
1.55481E+17,Skallos#0001,2021-05-04,"In Minecraft, don'y you have to put in a port for LAN?",,
1.55481E+17,Skallos#0001,2021-05-04,"Well, I don't have any ports requirements at all.",,
1.55481E+17,Skallos#0001,2021-05-04,"Also, Racket seems to default an empty IP address to `LOCALHOST`.",,
1.55481E+17,Skallos#0001,2021-05-04,"Oh, I still have to try this on different computers in the same network.",,
9.9326E+16,Runi#1730,2021-05-04,it defaults to port 25565 of the ip you give,,
9.9326E+16,Runi#1730,2021-05-04,you don't necessarily need a port when connecting on LAN if you know the local ip of the host,,
4.66395E+17,oaktownsam#0815,2021-05-04,"Minecraft also supports SRV DNS records so you, which are a bit of complication you probably shouldn't worry about yet.",,
9.9326E+16,Runi#1730,2021-05-04,ah is this what enables auto-discovering other games on the same network?,,
9.9326E+16,Runi#1730,2021-05-04,"oops, no definitely not, seems like this is for telling minecraft what port your server is on without it having to know beforehand, or something of the sort",,
4.66395E+17,oaktownsam#0815,2021-05-04,No auto discovery uses a UDP thingy.,,
9.9326E+16,Runi#1730,2021-05-04,auto discovery will remain a mystery to me :p,,
4.66395E+17,oaktownsam#0815,2021-05-04,"Yeah SRV DNS lets you host a server at ""fungalfoot.dasbistro.com"" but under the covers sends it to ""myserver.dastbistro.com:25565""",,
4.66395E+17,oaktownsam#0815,2021-05-04,"So the user types in your ""nice"" name",,
4.66395E+17,oaktownsam#0815,2021-05-04,It's good if you want to switch around ports or ips without having to tell players,,
4.66395E+17,oaktownsam#0815,2021-05-04,"Found it, minecraft uses ""gamespy query protocol"" for local discovery",,
4.66395E+17,oaktownsam#0815,2021-05-04,I've never had it work right on my network though.  And my kids want to play with their friends so we generally have something out on the internet so it never comes up.,,
1.55481E+17,Skallos#0001,2021-05-04,"Oh, I also have to make the how-to-play screen.",,
4.66395E+17,oaktownsam#0815,2021-05-04,"I thought I had a good way of using continuation marks to have thread names, but now it won't work.",,
2.66505E+17,notjack#9941,2021-05-05,@oaktownsam something I want that's related to that kind of observability is a tracing library,,
4.62028E+17,StephenD#5938,2021-05-05,https://racket-news.com/2021/05/racket-news-issue-49.html,,
2.75501E+17,Plane#0324,2021-05-05,oh wow that's a lot of news,,
4.62028E+17,StephenD#5938,2021-05-05,"Racket version 8.1 is now available from https://racket-lang.org/. 
See the blog post by @jbclements for more information: 
https://blog.racket-lang.org/2021/05/racket-v8-1.html",,üòÆ (1)
2.75501E+17,Plane#0324,2021-05-05,running `raco pkg migrate 8.0` now (:,,
2.75501E+17,Plane#0324,2021-05-05,the new tabs in drracket are very nice,,
2.75501E+17,Plane#0324,2021-05-05,that's something we needed for sure,,
4.66395E+17,oaktownsam#0815,2021-05-05,Now I just have to wait for racksnaps to catch up,,
4.66395E+17,oaktownsam#0815,2021-05-05,"oh wait scratch that, racksnaps is not version dependent (I think)",,
1.55481E+17,Skallos#0001,2021-05-05,"Hmm, I'd like to test my game across multiple computers, but it's seemingly not working.",,
1.55481E+17,Skallos#0001,2021-05-05,Is there a set guide on how to figure out what IP address to connect to via LAN?,,
1.55481E+17,Skallos#0001,2021-05-05,My IPv4 address doesn't seem to work.,,
9.9326E+16,Runi#1730,2021-05-05,how are you determining your ipv4 address?,,
1.55481E+17,Skallos#0001,2021-05-05,Through command prompt.,,
1.55481E+17,Skallos#0001,2021-05-05,This command `ipconfig`.,,
9.9326E+16,Runi#1730,2021-05-05,"yeah, that's the right one, your local ip is the ""IPv4 Address"" entry under your main adapter (Ethernet?)",,
9.9326E+16,Runi#1730,2021-05-05,should look like 192.168.0.XXX or so,,
9.9326E+16,Runi#1730,2021-05-05,if another computer on LAN connects to that the router bounces them to your computer,,
1.55481E+17,Skallos#0001,2021-05-05,"Hmm, I realized that I am on wifi, but the other computer is connected via Ethernet on another network. I suppose this may be the problem.",,
9.9326E+16,Runi#1730,2021-05-05,if it's on another network (i.e. via another router) then you can't connect via LAN,,
9.9326E+16,Runi#1730,2021-05-05,if your wifi is being served by the same router that they're connected to via ethernet it ought to still be fine,,
1.55481E+17,Skallos#0001,2021-05-05,Hmm. I am not really knowledgeable about this at all. :(,,
1.55481E+17,Skallos#0001,2021-05-05,I'll try fishing out another laptop to try.,,
4.66395E+17,oaktownsam#0815,2021-05-05,can you ping from one host to the other?,,
9.9326E+16,Runi#1730,2021-05-05,"oh yes, try pinging the ipv4 address of your host computer from the laptop or vice versa",,
1.55481E+17,Skallos#0001,2021-05-05,I got it to work on another computer connected on the same network.,,
4.62028E+17,StephenD#5938,2021-05-06,Communicating across networks is something using the server component mentioned in 2htdp/universe  can help with.,,
2.82958E+17,RadioSilence#9629,2021-05-07,"Hey, been enjoying the _oh, it's all forms_ of racket recently.

I wonder, is racket the main language of any libraries, apps or services I would have heard of?

It seems it's mainly for academic purposes.",,
3.29023E+17,nixin72#3554,2021-05-07,"One example of industry use I know of for Racket is Naughty Dog used it as their scripting language for some of the ""Uncharted"" and ""The Last of Us"" games.",,üëè (3)
2.14881E+17,Moinate#6061,2021-05-07,"RadioSilence - I get the motivation behind this question, but if you spell out the implications a little more you might find out something more interesting.

Let me show you want I mean.
When I say ""It seems it's mainly for academic purposes,"" I could be saying
- it's full of bugs as soon as you try to use it in a way the author did not intend
- the documentation sucks you have to figure it out by reading the source code
- it's slow and a memory hog, totally impractical under the resource constraints I have at my startup
- it doesn't support my processor/architecture
- i could not find somebody to hire to maintain it
- i think it will be gone in 5 years and I don't want to be left holding the bag to maintain my service
- it has no hooks to standard libraries (idk, SQL or Vulkan)
- i love it but i'm worried it is not a marketable skill
- how do I do basic stuff like write a CRUD app in Racket or some crappy webservice

Some of those are (mostly) true but some of them aren't.
If you expand on what you are thinking you can get better answers.",,
9.9326E+16,Runi#1730,2021-05-07,"I'm not them but I've wondered similar things about racket, every language is designed with a philosophy and that philosophy usually implies certain use cases that the language is ""built for"", for example rust was designed with the philosophy of zero cost abstractions and memory safety and this implies extreme usefulness in performance sensitive applications

it seems like racket was designed to be a language for building languages, which begs the question, if I'm not building a language should I be using racket? is it worth using it over something else?",,
4.66395E+17,oaktownsam#0815,2021-05-07,"What was it ""built for"" doesn't seem like a good indicator to me.  Ruby wasn't ""built for"" making web sites.  Python wasn't ""built for"" data science.  Ocaml wasn't ""built for"" financial application.  Javascript was not ""built for"" running server processes. These (and Racket) are general purpose programming languages.  

Maybe more important is who is in the developer community and what are they doing.",,
8.14743E+16,jimpjorps#0001,2021-05-07,"the response I get when I mention I'm learning Racket in other communities of programmers is interesting to me, the three categories of response are always ""what's that"", ""eww Lisp"" or ""why not Clojure""",,
2.22201E+17,winny#9877,2021-05-07,"A friend is learning racket and honestly the documentation is kind of dense for learning.  if you know how schemes work it might be okay, but even myself it took at least 8 months to get productive on racket, mainly because the only way to learn was to look at examples and re-read the guide a couple times (as the reference docs are strictly reference - not designed to learn the api from)",,
2.14881E+17,Moinate#6061,2021-05-07,"can you mention what you were trying to do? (and what api's you were trying to master?)

I am trying to figure out what kind of introductory book would be useful, and who would the audience be?
alternative question - what do you think a good method for beginning to write code in a language looks like? is it the same for all (most?) languages?",,
2.14881E+17,Moinate#6061,2021-05-07,"I mean, I liked TRPL a lot. Is that the kind of foundational book you're wishing for? https://doc.rust-lang.org/book/",,
2.22201E+17,winny#9877,2021-05-07,Yeah the rust book seems like a nice example.  One resource that sticks with me is the Official Python Tutorial.  https://docs.python.org/3/tutorial/ I think of the racket guide as more of an abbreviated tour of features to expect when learning (than an actual resource to learn how to program racket from),,
8.14743E+16,jimpjorps#0001,2021-05-07,the little schemer was what helped me solidify the basics of how racket works,,
8.14743E+16,jimpjorps#0001,2021-05-07,and there's a few guides out there about how to set up DrRacket for it,,
9.9326E+16,Runi#1730,2021-05-07,"i mean a language being built to be general-purpose is totally a thing and i'd certainly describe ruby, python, & js that way (havent seen much of ocaml)",,
9.9326E+16,Runi#1730,2021-05-07,i guess i just didn't really see racket that way,,
2.82958E+17,RadioSilence#9629,2021-05-07,After further reading racket seems is a tool for programming language design!,,
2.82958E+17,RadioSilence#9629,2021-05-07,I came across the Racket Manifesto.,,
2.75501E+17,Plane#0324,2021-05-07,there's kind of a spectrum though,,
2.75501E+17,Plane#0324,2021-05-07,"you can use racket, the language",,
2.75501E+17,Plane#0324,2021-05-07,you can add your own little macros here and there where you need them,,
2.75501E+17,Plane#0324,2021-05-07,basically just to make your life easier,,
2.75501E+17,Plane#0324,2021-05-07,you can go all the way to making a DSL,,
2.75501E+17,Plane#0324,2021-05-07,i think you can just do whatever suits the problem at hand,,
2.75501E+17,Plane#0324,2021-05-07,"i think it's not that you *need* to make languages to solve problems with racket, it's that you *can* make languages if it makes your life easier",,plusone (1)
2.75501E+17,Plane#0324,2021-05-07,"but the really nice thing is a lot of people have already made little macros, or full languages, for various things and you can just take theirs and re-use them (:",,
2.75501E+17,Plane#0324,2021-05-07,"so that's nice, even if you don't really get into the macro system yourself",,
2.9987E+17,spacebat#6171,2021-05-07,"Hi, I have read that one of the ways racket differs from some other lisps is the model of compilation - I took this to mean that, were I to stand up a service using racket, then depending on how it is built I might not be able to start a listener and connect to get a repl in the running environment, or perhaps that if I could, there would be a lot of things that cannot be redefined at that point",,
2.9987E+17,spacebat#6171,2021-05-07,"coming from a common lisp background where most things can be redefined on the fly, I wonder in what ways - if any - that ability is restricted in racket",,
1.56786E+17,williewillus#8490,2021-05-07,in my limited experience racket is a lot less dynamic/redefinable on the fly than either CL or clojure,,
1.56786E+17,williewillus#8490,2021-05-07,it's still pretty dynamic since it's a lisp after all,,
1.56786E+17,williewillus#8490,2021-05-07,but there's definitely an expectation to have to restart things,,
1.56786E+17,williewillus#8490,2021-05-07,"and yeah, compilation is a one-time thing",,
4.66395E+17,oaktownsam#0815,2021-05-07,"A subtle point about ""a tool for programming language design"", if you are a PL researcher you don't just want to prove a bunch of nice logical and mathematical properties about your fancy new language feature, you also want to know if it is going to work in a larger context like in a real General purpose PL.",,
1.93202E+17,rocketnia#4517,2021-05-07,"Sometimes it seems wrong to call a language general-purpose if it isn't extensible to support user-defined language ideas. Implementing new language ideas is part of programming.

I think a lot of Ruby and JS programmers embrace that, but they often use mechanisms outside the language to accomplish their ideas. In Racket, it's embraced in a more pervasive way.",,plusone (2)
4.66395E+17,oaktownsam#0815,2021-05-07,"Shoutout to @meowüé∫ from someone on HN ""... Racket software that inspire me""",https://cdn.discordapp.com/attachments/618895179343986688/840400597265416192/Screen_Shot_2021-05-07_at_6.30.38_PM.png,meow (1)
8.14743E+16,jimpjorps#0001,2021-05-07,"I saw that too, I hadn't heard of Gemini before that and it looks like a cool project",,
7.73175E+17,meowüé∫#2842,2021-05-07,:meowblush:,,
4.66395E+17,oaktownsam#0815,2021-05-07,I think there is some other folks doing some Gemini work that's on the package server as well.,,
4.66395E+17,oaktownsam#0815,2021-05-07,I only heard about it a couple months ago.  It seems niche.  But HTTP seemed niche in 1993 so ü§∑,,
4.66395E+17,oaktownsam#0815,2021-05-07,@Runi not sure if you found this: https://docs.racket-lang.org/dotenv/index.html,,
9.9326E+16,Runi#1730,2021-05-07,oh,,
9.9326E+16,Runi#1730,2021-05-07,"pff haha wow i swear i looked up ""racket dotenv"" before",,
9.9326E+16,Runi#1730,2021-05-07,"yes, this is exactly what i was asking about, i'm embarassed to have missed that lol",,
4.66395E+17,oaktownsam#0815,2021-05-07,I was looking for something unrelated in the package server and it caught my eye,,
9.9326E+16,Runi#1730,2021-05-07,"nice, thanks for linking it lol",,
2.66505E+17,notjack#9941,2021-05-08,@Aeva question: how are you determining the assembly of a racket program? I've always wondered how to do that,,
2.81975E+17,Aeva#1234,2021-05-08,install the package `disassemble` and then `raco decompile compiled/myscript_rkt.zo` will print it out,,
2.81975E+17,Aeva#1234,2021-05-08,see also https://docs.racket-lang.org/raco/decompile.html,,
2.66505E+17,notjack#9941,2021-05-08,_sweet_,,
2.81975E+17,Aeva#1234,2021-05-08,:D,,
2.81975E+17,Aeva#1234,2021-05-08,also it gets verbose fast,,
1.55481E+17,Skallos#0001,2021-05-09,I published my code for Trippples to my Github page.,,"plusone (2),üéâ (2)"
1.55481E+17,Skallos#0001,2021-05-09,"When running locally, use `run.rkt` to launch the worlds and server.",,
1.55481E+17,Skallos#0001,2021-05-09,"If you want to create an executable, then you'll need to modify the client code to launch the client.",,
2.74358E+17,jesscxc#4846,2021-05-10,https://github.com/Skallos-s/Trippples,,
2.74358E+17,jesscxc#4846,2021-05-10,"really cool, Skallos!! :ablobaww:",,
2.14881E+17,Moinate#6061,2021-05-10,"Just for a laugh for the rest of you, in their `make-mail` code Skallos does `(datum next y)`. This confused the _life_ out of me until I realized it was not the built-in racket datum function. I was like ?!! you can do that? How???  https://docs.racket-lang.org/syntax/Datum_Pattern_Matching.html?q=datum#%28form._%28%28lib._syntax%2Fdatum..rkt%29._datum%29%29",,
6.87833E+17,grey#8674,2021-05-10,There are no reserved names in Racket,,
1.55481E+17,Skallos#0001,2021-05-10,Oh. I didn't know that.,,
1.55481E+17,Skallos#0001,2021-05-10,"I try to make new names, guess I need to be more careful next time.",,
7.73175E+17,meowüé∫#2842,2021-05-11,"!rkt eval
```
(define define 5)
(+ define 10)
```",,ü§î (3)
8.02004E+17,r16#4581,2021-05-11,15,,
7.73175E+17,meowüé∫#2842,2021-05-11,The world is your oyster... You're in the driving seat of your programming language.,,ü•∞ (1)
2.64024E+17,Eutro#0016,2021-05-11,"!rkt eval ```
(define define-values void)
(define-values (a) 1)
a
```",,
8.02004E+17,r16#4581,2021-05-11,1,,
2.64024E+17,Eutro#0016,2021-05-11,üòî,,
7.73175E+17,meowüé∫#2842,2021-05-11,Shhh,,
7.73175E+17,meowüé∫#2842,2021-05-11,We don't talk about `define-values`...,,
7.73175E+17,meowüé∫#2842,2021-05-11,(because there's a syntax parameter protecting it (and some other tokens like `lambda` and `else`) from misuse for easier debugging and better error messages),,
7.73175E+17,meowüé∫#2842,2021-05-11,"Oh wait, `lambda` and `else` can be overridden.",,
4.83487E+17,jest#6646,2021-05-11,posted this on the slack but gonna ask here too,,
4.83487E+17,jest#6646,2021-05-11,"```scheme
(string-split ""\""aB\"" = (/obj/cades_1{pull_disable = 1},/turf/floor_2,/area/inside)"" "" = "" #:repeat? #f)
; gives me
'(""\""aB\"""" ""(/obj/cades_1{pull_disable"" ""1},/turf/floor_2,/area/inside)"") ; length 3. Not what I want because #:repeat? #f doesnt work!@@@!!!
; what i want:
'(""\""aB\"""" ""(/obj/cades_1{pull_disable = 1},/turf/floor_2,/area/inside)"") ;length 2 (""aB"" ""p1,p2,p3"")
```",,
8.14743E+16,jimpjorps#0001,2021-05-11,I would probably just do string-join on the cdr of the output,,
4.83487E+17,jest#6646,2021-05-11,is this a bug in `string-split` ? if so im gonna report it :s,,
8.14743E+16,jimpjorps#0001,2021-05-11,"I think #:repeat controls matching multiple consecutive matching delimiters, like if you want to split at any number of spaces or new lines or whatever",,
8.14743E+16,jimpjorps#0001,2021-05-11,"```scheme
> (string-split ""a\n\n\n\nb"" ""\n"")
'(""a"" """" """" """" ""b"")
> (string-split ""a\n\n\n\nb"" ""\n"" #:repeat? #true)
'(""a"" ""b"")
```",,
4.83487E+17,jest#6646,2021-05-11,behh.. wish an option to stop at first would be implemented.... but it would introduce a breaking change..,,
4.83487E+17,jest#6646,2021-05-11,"or would it ü§î ,  if its an optional arg",,
8.14743E+16,jimpjorps#0001,2021-05-11,in the meantime I think it's just some extra playing around with lists,,
8.14743E+16,jimpjorps#0001,2021-05-11,"```scheme
> (let ([string-parts (string-split ""a = {b = 1, c = 2}"" ""="")])
    (list (car string-parts) (string-join (cdr string-parts) ""="")))
'(""a "" "" {b = 1, c = 2}"")
```",,
8.14743E+16,jimpjorps#0001,2021-05-11,"could probably iterate over the chars in the list to find the first match and then use that to produce two `substring` results, too",,
8.14743E+16,jimpjorps#0001,2021-05-11,"a #:once? argument would be nice though, I agree",,
1.55481E+17,Skallos#0001,2021-05-11,"```scheme
(define temp (string-split ""\""aB\"" = (/obj/cades_1{pull_disable = 1},/turf/floor_2,/area/inside)"" "" = "" #:repeat? #f))
(cons (car temp) (string-join (cdr temp) "" = ""))
```",,
1.55481E+17,Skallos#0001,2021-05-11,Another solution.,,
4.83487E+17,jest#6646,2021-05-11,how would i view the implementation of `string-split`  if i want to pr a change to add #:once?,,
4.83487E+17,jest#6646,2021-05-11,the scribble pages dont link to the source o:,,
4.83487E+17,jest#6646,2021-05-11,"found it : https://github.com/racket/racket/blob/274eb82debacbb12d7b31bc891f994a0bd3d83f2/racket/collects/racket/string.rkt#L150 .
What does `#:repeat? [+? #f]` , specifically the `+?` mean?",,
8.14743E+16,jimpjorps#0001,2021-05-11,it assigns whatever comes after `#:repeat` in the procedure call to the name `+?`,,
4.83487E+17,jest#6646,2021-05-11,ahhh,,
8.14743E+16,jimpjorps#0001,2021-05-11,and the default is #false,,
4.66395E+17,oaktownsam#0815,2021-05-11,Someone using a fancy name...,,
2.14881E+17,Moinate#6061,2021-05-11,A `maxsplit` parameter like Python has would be more verstatile. https://docs.python.org/3/library/stdtypes.html?highlight=split#str.split,,
2.14881E+17,Moinate#6061,2021-05-11,I imagine there's some reason this is not in Scheme standard string utilities. I don't know enough to comment but probably somebody else here does.,,
2.75501E+17,Plane#0324,2021-05-11,oh that's actually interesting,,
2.75501E+17,Plane#0324,2021-05-11,have you ever had a use for that?  (besides maxsplit=1),,
2.14881E+17,Moinate#6061,2021-05-12,"all hacks for me. parsing something ilke a comma separated value file where first N fields are numbers and the last field is the free-form ""comment"" field and I want to just glob the comment all together into the last split field. at the time just getting it done made sense to me. now i think i would spend the effort to use a csv parser written by someone else.",,
2.14881E+17,Moinate#6061,2021-05-12,"i think having maxsplit also (theoretically) allows pre-allocation of space for the list (in Python - ummm.... array?). right now i'd be really suprised to ever find out that was a bottleneck, but it's an ""Advertised Advantage""",,
2.34164E+17,python#3213,2021-05-12,If you made a split stream (then take to your max) it wouldn't be such a hack,,
1.55481E+17,Skallos#0001,2021-05-12,"Took me a while to figure this out, but if you need to do element-wise addition (or any binary operator) on 2 lists, then a nice way of doing this is with `map`. Thought I might share for anyone interested.
```scheme
(map + (list 1 2 3) (list 6 5 4))
```",,üíØ (1)
1.55481E+17,Skallos#0001,2021-05-12,!rkt eval (map + (list 1 2 3) (6 5 4)),,
8.02004E+17,r16#4581,2021-05-12,":warning: stderr:
application: not a procedure;
 expected a procedure that can be applied to arguments
  given: 6
  context...:
   body of 'program",,
1.55481E+17,Skallos#0001,2021-05-12,!rkt eval (map + (list 1 2 3) (list 6 5 4)),,
8.02004E+17,r16#4581,2021-05-12,(7 7 7),,
1.55481E+17,Skallos#0001,2021-05-12,It's nice to know `map` can take in any number of lists of the same size.,,
1.55481E+17,Skallos#0001,2021-05-12,"And now I'm sad. :(
```scheme
(foldl list-ref nested-lists (list index1 index2 ...))
```
This does not work because the first argument of `list-ref` must be a list. You have to create a new function that is `list-ref`, but with swapped inputs. Still a nice workaround, but not as elegant as I hoped. :(",,
6.87833E+17,grey#8674,2021-05-12,"If naming things is the hardest part of software development, deciding the order of procedure arguments is the second hardest.",,plusone (1)
1.55481E+17,Skallos#0001,2021-05-12,"When I first came across `list-ref`, I always thought the arguments were backwards.",,
1.55481E+17,Skallos#0001,2021-05-12,~~Guess I was right all along.~~,,
3.5323E+17,Alex Knauth#4895,2021-05-12,"There are 2 schools of thought on order of arguments I know of:
 * Main argument first, such as the main data structure it processes/deconstructs. This is the usual convention in Racket, and it's why `list-ref` takes the list first.
 * Main argument last, with other arguments before it to make currying easier. This is the usual convention in Haskell and other ML-based languages, and it is also used for some higher-order functions in Racket, which is why `foldl` takes the list last, and why the ""combinator"" argument to foldl takes the accumulator last (though that might have more to do with the argument order of `cons`, I don't know).",,
1.55481E+17,Skallos#0001,2021-05-12,"That does make sense, but it makes using `foldl` a little bit more messier.",,
6.87833E+17,grey#8674,2021-05-12,"Argument order is even more tricky in a statically-typed setting because, depending on how arguments are ordered, the resulting type can either clarify or obscure the behavior of a procedure.",,
3.5323E+17,Alex Knauth#4895,2021-05-12,"And by the way I've run into conflicts in my code where I originally wrote something with the main-argument-first convention, and later I change it into a curried function with the main-argument-last convention. Like if I first wrote:
```
(define (my-list-ref lst i) ....)
```
I sometimes later end up changing it to
```
(define ((my-list-ref i) lst) ....)
```
because other parts of my code would look cleaner with the curried version",,
6.87833E+17,grey#8674,2021-05-12,"Hm... I think I‚Äôd like an IDE plugin that yells at me, if I violate a set of conventions.",,
6.87833E+17,grey#8674,2021-05-12,"Wait, didn‚Äôt @notjack make some kind of convention-checker doodad for DrRacket?",,
8.14743E+16,jimpjorps#0001,2021-05-12,"resyntax, though iirc it‚Äôs still experimental and a command line tool",,
2.75501E+17,Plane#0324,2021-05-12,"yep!  it's like `zipWith` in haskell (:  you can also do a list comprehension:
```scheme
> (for/list ([a (list 1 2 3)]
             [b (list 6 5 4)])
    (+ a b))
'(7 7 7)
```",,
2.75501E+17,Plane#0324,2021-05-12,that will work with lists of uneven size,,
6.87833E+17,grey#8674,2021-05-12,"This one actually predates resyntax. It‚Äôs called, ‚Äúsyntax warnings‚Äù, but it seems to use similar ideas: https://youtu.be/i6wXy3MZm64",,
2.75501E+17,Plane#0324,2021-05-12,there is a `map` that works with lists of uneven size in `srfi/1` as well,,
2.66505E+17,notjack#9941,2021-05-12,"yeah Resyntax is ""syntax warnings but it actually works""",,
2.66505E+17,notjack#9941,2021-05-12,only took me 4 years to get back around to it!,,
4.66395E+17,oaktownsam#0815,2021-05-12,I think if I had an hour I could work up a quickscript to run resyntax on the current buffer and open a simple window.,,
2.66505E+17,notjack#9941,2021-05-12,the behavior of `foldl` is _definitely_ just because of `cons` rather than any deeper rationale as far as I can tell,,
7.00112E+17,mikera#2510,2021-05-12,"Hi all, I'm building a decentralised Lisp Machine inspired by Racket, Scheme and Clojure - https://convex.world/sandbox",,
7.00112E+17,mikera#2510,2021-05-12,"I have a design question for Racket gurus - when designing the macro system, how do you make the tradeoffs between passing Syntax Objects vs. Raw Forms? Should macros always work with Syntax Objects? If so, how do you avoid cluttering macro code with lots of `syntax-e` wrapping and unwrapping?",,
2.66505E+17,notjack#9941,2021-05-12,syntax objects are preferable because they can track scopes in ways that plain s-expressions can't,,
2.66505E+17,notjack#9941,2021-05-12,"to avoid cluttering, have a pattern matching / parsing system like `syntax-rules` / `syntax-parse` for deconstructing syntax objects, and a templating system like `#'` for constructing them",,
2.66505E+17,notjack#9941,2021-05-12,I highly recommend reading the Binding as Sets of Scopes paper for background when designing your macro system https://www.cs.utah.edu/plt/scope-sets/,,üëç (1)
7.00112E+17,mikera#2510,2021-05-12,"This looks like an awesome reference, thanks!",,üòÅ (1)
4.83487E+17,jest#6646,2021-05-12,"posted this in the racket discord, gonna post it here:
```lisp
#lang racket

(define width 2)
(define height 3)
(define lay 4)
(define 3d (make-vector 2 (make-vector lay (make-vector (* width height) 0))))

(define (2d->1d x y w)
  (+ x (* w y)))

(define (mut 3d-index)
  (define z (vector-ref 3d 3d-index))
  (for ([y-index (range 0 height)])
    (define row (vector-ref z y-index))
    (for ([x-index (range 0 width)])
      (define index-into-x (2d->1d x-index y-index width))
      (vector-set! row index-into-x (random 0 20))
      )))

(for ([i (range 0 (vector-length 3d))])
  (mut i)
  (println i)
  (println (vector-ref 3d i)))

(println ""final"")
(println 3d)
```

how come the final resulting vector is not what i expect?
```lisp
0
'#(#(5 2 1 4 5 6) #(5 2 1 4 5 6) #(5 2 1 4 5 6) #(5 2 1 4 5 6))
1
'#(#(4 8 2 0 2 4) #(4 8 2 0 2 4) #(4 8 2 0 2 4) #(4 8 2 0 2 4))
""final""
'#(#(#(4 8 2 0 2 4) #(4 8 2 0 2 4) #(4 8 2 0 2 4) #(4 8 2 0 2 4)) #(#(4 8 2 0 2 4) #(4 8 2 0 2 4) #(4 8 2 0 2 4) #(4 8 2 0 2 4)))

;what i expect is a combination of both stacked ontop of each other like this:
#(#(#(5 2 1 4 5 6) #(5 2 1 4 5 6) #(5 2 1 4 5 6) #(5 2 1 4 5 6))
#(#(4 8 2 0 2 4) #(4 8 2 0 2 4) #(4 8 2 0 2 4) #(4 8 2 0 2 4)))
```

this is a small snippet from a sort of complex program converting maps. I know it can be done a different way and done better but right now I just wanna know why the resulting vec isnt what i expect it.. I'm printing the state of the vec right before i print final but yet they're different",,
2.75501E+17,Plane#0324,2021-05-13,so as a shorter example,,
2.75501E+17,Plane#0324,2021-05-13,"```scheme
> (define v (make-vector 2 (vector)))
> (eq? (vector-ref v 0)
       (vector-ref v 1))
#t
```",,
2.75501E+17,Plane#0324,2021-05-13,`eq?` means they refer to the same object,,
4.83487E+17,jest#6646,2021-05-13,ohhh my god...,,
4.83487E+17,jest#6646,2021-05-13,why >:0? how do i make it so they dont refer to the same vector?,,
4.83487E+17,jest#6646,2021-05-13,rewrote this in rust to make sure i wasnt going crazy...,,
4.83487E+17,jest#6646,2021-05-13,"```rust
use rand::{thread_rng, Rng};
fn to_1d(x: usize, y: usize, w: usize) -> usize {
    return x + w * y;
}

const width: usize = 2;
const height: usize = 3;
const total: usize = width * height;
const lay: usize = 4;
fn mu(threeD_index: usize, arr: &mut [[[i32; total]; lay]; 2]) {
    let mut rng = thread_rng();
    let z = &mut arr[threeD_index];
    for y in 0..height {
        let row = &mut z[y];
        for x in 0..width {
            let index_into = to_1d(x, y, width);
            row[index_into] = rng.gen_range(0..9);
        }
    }
}

fn main() {
    let mut threeD = [[[0; total]; lay]; 2];
    for i in 0..threeD.len() {
        let t = &mut threeD;
        mu(i, t);
        dbg!(i);
        println!(""{:?}"", threeD[i]);
    }
    dbg!(""final"");
    println!(""{:?}"", threeD);
}
/* 
[src\main.rs:159] i = 0
[[5, 6, 0, 0, 0, 0], [0, 0, 3, 8, 0, 0], [0, 0, 0, 0, 7, 1], [0, 0, 0, 0, 0, 0]]
[src\main.rs:159] i = 1
[[6, 8, 0, 0, 0, 0], [0, 0, 7, 4, 0, 0], [0, 0, 0, 0, 7, 7], [0, 0, 0, 0, 0, 0]]
[src\main.rs:162] ""final"" = ""final""
[[[5, 6, 0, 0, 0, 0], [0, 0, 3, 8, 0, 0], [0, 0, 0, 0, 7, 1], [0, 0, 0, 0, 0, 0]], 
[[6, 8, 0, 0, 0, 0], [0, 0, 7, 4, 0, 0], [0, 0, 0, 0, 7, 7], [0, 0, 0, 0, 0, 0]]]
*/
```
it works as intended and i think its a 1-1 mirror of the racket version... other than the two vectors aliasing...",,
2.64024E+17,Eutro#0016,2021-05-13,that turns out to be pretty important,,
4.83487E+17,jest#6646,2021-05-13,should document it in `make-vector` somewhere... i had no idea,,
4.83487E+17,jest#6646,2021-05-13,"but anywhoo, how would i make it so the two vectors wont alias :0?",,
2.75501E+17,Plane#0324,2021-05-13,you could use `build-vector`,,
2.75501E+17,Plane#0324,2021-05-13,"i'm not the most experienced racketeer, there might be a better way",,
2.66505E+17,notjack#9941,2021-05-13,"```scheme
(for/vector ([_ (in-range 0 n)])
  (vector))
```",,
2.66505E+17,notjack#9941,2021-05-13,that's what I'd probably use,,
4.83487E+17,jest#6646,2021-05-13,wasted a couple hours lol... why does `(make-vector 2 (vector))` create an aliasing vector :0 ?,,
4.83487E+17,jest#6646,2021-05-13,i guess its too late to change it now... god knows what will break,,
2.64024E+17,Eutro#0016,2021-05-13,because it fills the vector with that value,,
2.64024E+17,Eutro#0016,2021-05-13,every element in the new vector will be that value,,
2.64024E+17,Eutro#0016,2021-05-13,how could it _not_ create an aliasing vector?,,
2.66505E+17,notjack#9941,2021-05-13,"`(make-vector 2 (vector))` is equivalent to this:
```scheme
(define tmp (vector))
(make-vector 2 tmp)
```",,
2.75501E+17,Plane#0324,2021-05-13,"```scheme
(for/vector ([_ (in-range 2)])
  (for/vector ([_ (in-range 4)])
    (for/vector ([_ (in-range 6)])
      (random 0 20))))
```",,
2.75501E+17,Plane#0324,2021-05-13,`for/vector` seems kinda neat,,
4.83487E+17,jest#6646,2021-05-13,a bit verbose to create a nested vector...,,
4.83487E+17,jest#6646,2021-05-13,meh,,
2.75501E+17,Plane#0324,2021-05-13,"but i guess for the original code it would be more like
```scheme
(define 3d (for/vector ([_ (in-range 2)])
             (for/vector ([_ (in-range lay)])
               (for/vector ([_ (in-range (* width height))])
                 0))))
```",,
2.75501E+17,Plane#0324,2021-05-13,i guess you could make it less verbose,,
2.75501E+17,Plane#0324,2021-05-13,"```scheme
(define-syntax-rule (vec size v)
  (for/vector ([_ (in-range size)])
    v))

(define 3d (vec 2 (vec 4 (vec 6 0))))
```",,
4.83487E+17,jest#6646,2021-05-13,üëç,,
4.83487E+17,jest#6646,2021-05-13,racket on vscode is pretty great :9,,oh_yes (1)
4.83487E+17,jest#6646,2021-05-13,hover definitions are a bit weird...,,
4.83487E+17,jest#6646,2021-05-13,,https://cdn.discordapp.com/attachments/618895179343986688/842430982782189588/unknown.png,
4.83487E+17,jest#6646,2021-05-13,it gives the correct hover hint when you initially type it though,,
4.83487E+17,jest#6646,2021-05-13,,https://cdn.discordapp.com/attachments/618895179343986688/842431340095209512/unknown.png,
4.1228E+17,xgqt#8370,2021-05-13,this is very nice,,
4.83487E+17,jest#6646,2021-05-13,waiting for inlay hints to be standardized in the langserver protocol and vscode,,
4.83487E+17,jest#6646,2021-05-13,https://github.com/microsoft/vscode/issues/16221#issuecomment-363087092,,
4.83487E+17,jest#6646,2021-05-13,"üòå if we could get inlay hints for function parameter names, it would be insaneee",,
4.1228E+17,xgqt#8370,2021-05-13,so this is via LSP?,,
4.83487E+17,jest#6646,2021-05-13,"yep, magic racket and installing racket-langserver works great",,
4.83487E+17,jest#6646,2021-05-13,soo much better than drracket,,
4.1228E+17,xgqt#8370,2021-05-13,"afaik this is a problem beacuse: https://racket-mode.com/#eldoc
` Many Racket primitives are defined in #%kernel or #%runtime. There‚Äôs no easy way to determine their argument lists. Most do not provide a contract.
Many of the interesting Racket forms are syntax (macros) not functions. There‚Äôs no easy way to determine their ‚Äúargument lists‚Äù. `",,
4.83487E+17,jest#6646,2021-05-13,ahhh üòî,,
4.1228E+17,xgqt#8370,2021-05-13,"yea, sucks",,
4.83487E+17,jest#6646,2021-05-13,"i never understood the love for emacs lol, vims key bindings are real good üòå",,
4.1228E+17,xgqt#8370,2021-05-13,"for me I'm not a fan of ""modal"" editing",,
4.1228E+17,xgqt#8370,2021-05-13,also I think emacs is much more customizable and extensible,,
4.1228E+17,xgqt#8370,2021-05-13,you have a pkg to make emacs use VI keys,,
4.1228E+17,xgqt#8370,2021-05-13,I dont think a pkg that would add emacs keys to (neo)vim exists ;P,,
4.83487E+17,jest#6646,2021-05-13,ehh i guess i never really gave emacs bindings a fair shot so im biased. A lot of linux things i use like the window manager (i3) also uses hjkl for navigation among other things so i like how migration is relatively smooth since its the default,,
2.75501E+17,Plane#0324,2021-05-13,I think the default bindings for emacs are not very good but emacs is very customizable (:,,
4.1228E+17,xgqt#8370,2021-05-13,"btw there is a pkg called which key that will show you possible binding ""completions""",,
4.1228E+17,xgqt#8370,2021-05-13,,https://cdn.discordapp.com/attachments/618895179343986688/842449623221141504/unknown.png,
2.75501E+17,Plane#0324,2021-05-13,And I think most people reuse various configurations other people have made for emacs,,
4.1228E+17,xgqt#8370,2021-05-13,I made all my own (additional ones I mean),,
2.75501E+17,Plane#0324,2021-05-13,Yay,,
4.1228E+17,xgqt#8370,2021-05-13,also it is pretty common to use C-c something,,
4.1228E+17,xgqt#8370,2021-05-13,come of those are left up to the user,,
2.75501E+17,Plane#0324,2021-05-13,I use vim but my bindings are all different too lol,,
4.1228E+17,xgqt#8370,2021-05-13,spaking of vim,,
4.1228E+17,xgqt#8370,2021-05-13,are there vim bindings for drracket?,,
4.83487E+17,jest#6646,2021-05-13,"yep, theres a package for it lol",,
4.83487E+17,jest#6646,2021-05-13,https://github.com/takikawa/drracket-vim-tool,,
4.83487E+17,jest#6646,2021-05-13,i dont use it anymore because sometimes it hitches like crazy .. and also i use `ctrl+[` to escape but its not the default and im too lazy to look into configuring it lol,,
4.1228E+17,xgqt#8370,2021-05-13,i see,,
8.14743E+16,jimpjorps#0001,2021-05-13,every time I've tried to use emacs or vim I get frustrated after like five minutes and retreat back to the safety of sublime text or vscode,,
8.14743E+16,jimpjorps#0001,2021-05-13,I'm too set in my ways to learn them at this point,,
4.83487E+17,jest#6646,2021-05-13,the same can be said for everything else lol,,
4.83487E+17,jest#6646,2021-05-13,if the defaults arent sane,,
4.1228E+17,xgqt#8370,2021-05-13,try spacemacs or doom emacs,,
4.1228E+17,xgqt#8370,2021-05-13,at this point I cannot imagine myself using a proprietery text editor/IDE,,
4.1228E+17,xgqt#8370,2021-05-13,"yes, vscode binary distrbuted by MS is proprietry",,
4.1228E+17,xgqt#8370,2021-05-13,(and I dont think i need to remind anybody that sublime is too),,
8.14743E+16,jimpjorps#0001,2021-05-13,"it is not a race in which I have a horse, to use the phrase",,
9.9326E+16,Runi#1730,2021-05-13,isn't it being open-source under MIT license very much the opposite of being proprietary lol,,
9.9326E+16,Runi#1730,2021-05-13,i guess if you want to build it yourself instead of using the MS distribution that's fine,,
4.1228E+17,xgqt#8370,2021-05-13,no no no,,
4.1228E+17,xgqt#8370,2021-05-13,"the source is MIT, YES",,
4.1228E+17,xgqt#8370,2021-05-13,BUT,,
4.1228E+17,xgqt#8370,2021-05-13,the bianries are closed source,,
9.9326E+16,Runi#1730,2021-05-13,"right, hence the second message",,
4.1228E+17,xgqt#8370,2021-05-13,BECAUSE they have proprietary additions,,
4.1228E+17,xgqt#8370,2021-05-13,"yes, but it still has ""bad stuff""",,
4.1228E+17,xgqt#8370,2021-05-13,vscodium project strips that,,
8.14743E+16,jimpjorps#0001,2021-05-13,"there is vscodium that strips out the stuff that calls home and uses an alternative addon store, at least",,
9.9326E+16,Runi#1730,2021-05-13,"ahh interesting, should look into that",,
4.1228E+17,xgqt#8370,2021-05-13,in fact they have to use alternate store,,
2.75501E+17,Plane#0324,2021-05-13,I just use vim because I‚Äôve been using it for decades and I‚Äôm happy enough (:,,
2.75501E+17,Plane#0324,2021-05-13,I use other tools when I have a reason to,,
2.75501E+17,Plane#0324,2021-05-13,I don‚Äôt want to invest a lot of time in learning another editor atm though,,
3.8949E+17,oats#4359,2021-05-13,getting interested in lisp was the thing that pulled me over to emacs from vim üòâ,,
3.8949E+17,oats#4359,2021-05-13,"and you can actually take vim with you, evil-mode is quite nice",,‚òùÔ∏è (1)
2.75501E+17,Plane#0324,2021-05-13,"ooh, `raco cross` sounds neat",,
3.8949E+17,oats#4359,2021-05-14,"so for a while, in lua, I used a cool way of doing a plugin system by loading all the .lua files in a directory and mapping the file name  (""foo"" for ""foo.lua"", say) to any code/data that the plugin file exported in a global hashmap (table). This worked quite nicely since lua has dynamic code loading and first-class namespacing in the form of tables. I'd like to try to do something similar in racket, but I'm having trouble finding a nice way to go about it. Could I get any pointers that might help with this, or would this be an entirely unidiomatic thing in racket?",,
6.87833E+17,grey#8674,2021-05-14,"It is possible to intercept imports, via a `require` transformer, if I remember correctly. This way, you can build a macro that maps symbols to bindings and use it like `(foo bar)` to get `foo.bar`. (You could use some other syntax for the lookup.)",,
6.87833E+17,grey#8674,2021-05-14,"However, it may be difficult to handle all the phase levels, since each phase has its own set of bindings. I‚Äôm not sure, though.",,
3.8949E+17,oats#4359,2021-05-14,"hmm, I'm having a hard time following. I probably need to do more reading up on the module system in general",,
2.64024E+17,Eutro#0016,2021-05-14,You can use `(namespace-mapped-symbols [namespace])` to get all the symbols in a namespace,,
3.8949E+17,oats#4359,2021-05-14,oh we do have first-class namespaces?,,
2.64024E+17,Eutro#0016,2021-05-14,of course,,
3.8949E+17,oats#4359,2021-05-14,reading up on it now üôÇ,,
6.87833E+17,grey#8674,2021-05-14,Sorry! I only ever work with modules and static things.,,
4.66395E+17,oaktownsam#0815,2021-05-14,"I would ""keep it simple"" and just loop through some file names and use `dynamic-require` with a known exported (`provide`d in Racket) identifier.",,
2.64024E+17,Eutro#0016,2021-05-14,That's probably what I would do too,,
3.8949E+17,oats#4359,2021-05-14,"yeah, in my lua system each plugin had to export a function called ""main""",,
3.8949E+17,oats#4359,2021-05-14,"I'll look at dynamic-require too, thanks üôÇ",,
4.66395E+17,oaktownsam#0815,2021-05-14,"`dynamic-require` is generally the easiest way to do any kind of dynamic loading.  The ""hardest"" part is getting the `require` spec for it correct.",,
3.8949E+17,oats#4359,2021-05-14,ughhh require gets so complicated lol,,
4.66395E+17,oaktownsam#0815,2021-05-14,"Here's a moderate level complexity plugin system that I use for the keyring library.  The user can specify a which keyring backend they want with a URL.  The url specifies a backend name and expects a module with that name to be present.  The url also specifies configuration settings that get used as arguments to the `make-keyring` function which should produce a valid keyring for that backend.

https://github.com/samdphillips/racket-keyring/blob/master/keyring-lib/private/backends.rkt",,plusone (1)
1.55481E+17,Skallos#0001,2021-05-14,Can someone point to me resources to put sound and music in universe/world programs in Racket?,,
4.62028E+17,StephenD#5938,2021-05-15,"This is all I have https://github.com/racket/racket/wiki/Music
I‚Äôve not tried any of it.",,
4.61981E+17,Gavinok#4195,2021-05-15,Figure it's worth mentioning that you could always use the racket language server,,
4.83487E+17,jest#6646,2021-05-16,"`(string-replace ""test foo bar"" ""foo"" """")` gives `test  bar` with double splaces",,
4.83487E+17,jest#6646,2021-05-16,how would i make it so i replace it with an just nothing ? essentially deleting it and not putting the extra space,,
4.83487E+17,jest#6646,2021-05-16,`(string-normalize-spaces)` is what i need but im doing a string-replace on an entire file,,
4.83487E+17,jest#6646,2021-05-16,so  its going to normalize spaces that shouldnt be normalized,,
4.83487E+17,jest#6646,2021-05-16,"```scheme
(define res """")
(define n2 (for ([retl portpaths]) ; portpaths is a 600 length vector of (String List<String>) . It seems most of the lists of length 1 so im just doing (caadr below in the else clause
             (define sub (cond [(empty? (cadr retl)) """"]
                               [else (caadr retl)]))
             ;todo use regex to pattern match the string search isntead of direct?
             ; (println (list (car retl) sub))
             (set! res (string-replace file (car retl) sub))
             #f
             ))
(println res)
```
also it seems like set! isnt working ? its not setting r because when i print it, nothings really changed.. oh wait.. it is doing something when compare the final strings ü§î , but its not replacing everything..",,
4.83487E+17,jest#6646,2021-05-16,ohhhhhh,,
4.83487E+17,jest#6646,2021-05-16,string-replace needs to point to the mutable variable,,
4.83487E+17,jest#6646,2021-05-16,"allright, neverrmind, got all things above workin now",,
4.83487E+17,jest#6646,2021-05-16,however,,
4.83487E+17,jest#6646,2021-05-16,"```
""fS"" = (/some/qewrty{key= """"}

(1, 2, 3) = ""{
fS
}""
```
anyone know how to regex anything inside the `{}` brackets that comes after a letter?",,
3.78377E+17,wooloowoo#6187,2021-05-16,something like `\{[^}]*[[:alpha:]](.)[^{]*\}` ought to work,,
3.78377E+17,wooloowoo#6187,2021-05-16,it will get confused if there're any nested curly braces but that's sort of an inherent limitation of regexes,,
4.83487E+17,jest#6646,2021-05-16,"how would i use this in racket ? ```scheme
(string-replace ""hello\"" = {/some/{key = 1 })"" (regexp ""{[^}]*[[:alpha:]](.)[^{]*}"") """")
``` is not working",,
8.14743E+16,jimpjorps#0001,2021-05-16,"that uses one of the perl-style matches so it'd be `pregexp` instead of `regexp`, but beyond that I'm dumb at regex so I don't have any advice on how to build the actual regex",,
2.75501E+17,Plane#0324,2021-05-16,"```scheme
(string-replace ""hello\"" = {/some/{key = 1 })"" #px""\\{[^}]*[[:alpha:]](.)[^{]*\\}"" """")
```",,üëç (1)
4.83487E+17,jest#6646,2021-05-16,thanks mates,,
4.83487E+17,jest#6646,2021-05-16,"is there a version of a for loop that reads a string port line by line and stops till eof
```scheme
      (for ([line (read-line 'returnline-feed)])
                                (println line))
```
or do you guys just use recursion for this?",,
2.75501E+17,Plane#0324,2021-05-16,you might try `(port->lines)`,,
2.75501E+17,Plane#0324,2021-05-16,but otherwise there is `in-lines`,,
2.75501E+17,Plane#0324,2021-05-16,"```scheme
(for/list ([s (in-lines)])
  (string-upcase s))
```",,
4.83487E+17,jest#6646,2021-05-16,thanks,,
4.83487E+17,jest#6646,2021-05-16,is there a way to write `(not (string=? a b))` more ergonomically? like a  `!=` operator,,
2.75501E+17,Plane#0324,2021-05-16,"```scheme
#lang sweet-exp racket/base

(define != (compose not equal?))

(define a ""hello"")
(define b ""world"")

(if {a != b}
    'not-equal
    'equal)
```",,
4.83487E+17,jest#6646,2021-05-16,anyone know how to write a file with the line endings of unix instead of pc ?,,
4.83487E+17,jest#6646,2021-05-16,http://www.cs.toronto.edu/~krueger/csc209h/tut/line-endings.html,,
4.83487E+17,jest#6646,2021-05-16,"ahh, racket keeps using unix file endings",,
4.83487E+17,jest#6646,2021-05-16,whenever i save and run the file,,
4.83487E+17,jest#6646,2021-05-16,"when i compare the two files in byomd compare , it says the file that racket wrote is using mixed  line endings interestingly. nvm fixed it now",,
3.78377E+17,wooloowoo#6187,2021-05-16,ah you need to replace the first group specifically as well,,
2.74358E+17,jesscxc#4846,2021-05-16,Racket is so cool ü•∞ü•∞ü•∞,,üíØ (1)
2.64024E+17,Eutro#0016,2021-05-16,certified Lisp moment,,"racket (2),lisp (1)"
4.83487E+17,jest#6646,2021-05-16,"trying to look for the built in that zips two lists together, e.g takes the car of two lists and create pairs.. forogt what its called
```
(?? '(1 2 3) '(4 5 6))
'((1 4) (2 5) (3 6))
```",,
4.83487E+17,jest#6646,2021-05-16,might be mixing this up with standard ml lol... midly recall... ill just use map,,
2.75501E+17,Plane#0324,2021-05-16,Yes map,,
8.14743E+16,jimpjorps#0001,2021-05-16,"yeah I don't think racket has a built-in for that, maybe one of the SRFIs has it but I haven't looked",,
2.75501E+17,Plane#0324,2021-05-16,Oops did I misread?,,
2.75501E+17,Plane#0324,2021-05-16,There is an algorithms package with some nice functions including zip,,
2.75501E+17,Plane#0324,2021-05-16,"Besides zip I also like adjacent-map in that package, very handy",,
2.75501E+17,Plane#0324,2021-05-16,And scanl,,
2.75501E+17,Plane#0324,2021-05-16,but @jest you can use `(map list l1 l2)`,,
2.75501E+17,Plane#0324,2021-05-16,"```scheme
> (map list '(1 2 3) '(4 5 6))
'((1 4) (2 5) (3 6))
```",,
2.75501E+17,Plane#0324,2021-05-16,you don't really need a separate zip function because `map` takes multiple lists in racket,,
2.75501E+17,Plane#0324,2021-05-16,"or with a comprehension:
```scheme
> (for/list ([i '(1 2 3)]
             [j '(4 5 6)])
    (list i j))
'((1 4) (2 5) (3 6))
```",,
2.75501E+17,Plane#0324,2021-05-16,"you did say ""pairs"" so if you want that instead you can use `cons` rather than `list`",,
2.66505E+17,notjack#9941,2021-05-16,!rkt eval `(map list '(1 2 3) '(4 5 6))`,,
8.02004E+17,r16#4581,2021-05-16,((1 4) (2 5) (3 6)),,
4.66395E+17,oaktownsam#0815,2021-05-16,!rkt eval (map list '(1 2 3) '(4 5 6) '(7 8 9)),,
8.02004E+17,r16#4581,2021-05-16,((1 4 7) (2 5 8) (3 6 9)),,
2.66505E+17,notjack#9941,2021-05-16,"I wish `map` only worked on one list, took the list argument first, and we had a separate `zip` function that does what `map` currently does",,
3.46868E+17,djeis#0042,2021-05-16,"Why list first, out of curiosity?",,
4.83487E+17,jest#6646,2021-05-17,what is the `(require racket/path)` of `(make-directory*)` ?,,
4.83487E+17,jest#6646,2021-05-17,its not path.. idk what it is,,
4.83487E+17,jest#6646,2021-05-17,file!,,
2.75501E+17,Plane#0324,2021-05-17,"i tend to ask my editor's help, so in drracket i would type in `(make-directory*)` and hit f1, which brings up the racket docs",https://cdn.discordapp.com/attachments/618895179343986688/843714061475774494/unknown.png,
2.75501E+17,Plane#0324,2021-05-17,in vim i would hit K and get the same page basically,,
2.75501E+17,Plane#0324,2021-05-17,"that or if i'm using the docs a lot, i might just leave them open in a browser",,
4.83487E+17,jest#6646,2021-05-17,yeah i keep forgetting to search lol. im at the docs of the function and im scrolling up and down to find it,,
4.83487E+17,jest#6646,2021-05-17,"so im repeatedly using string-replace

```scheme
(define res (string-copy initial)
(for [(it ls)]) ; this list is 600long
  (set! res (string-replace res it with))) ;search through the entire string which is 25k long or more

```
The string is like over 25k characters long per file. how would one optimize this :0 ? what is taking up all the time? its not the `(string-replace)` returning a new string right?",,
2.75501E+17,Plane#0324,2021-05-17,i'm not sure exactly how to help with optimizing it since i don't have your data or a complete working example,,
2.75501E+17,Plane#0324,2021-05-17,"you could rewrite it without mutation if you wanted though:
```scheme
(for/fold ([res initial])
          ([it ls])
  (string-replace res it with))
```",,‚òùÔ∏è (1)
4.61981E+17,Gavinok#4195,2021-05-17,When exactly would you guys use keywords?,,
2.66505E+17,notjack#9941,2021-05-17,"for newer racket APIs, when you define a data type and some functions that operate on it, the convention is to make those functions take the argument of that datatype first. Like how all the `hash-xxx` functions take the hash first.",,
2.66505E+17,notjack#9941,2021-05-17,usually for optional arguments. I tend to find that I either want mandatory positional arguments or optional keyword arguments.,,
3.46868E+17,djeis#0042,2021-05-17,ü§î I suppose that's fair.,,
3.46868E+17,djeis#0042,2021-05-17,Be an unconventional convention in that particular case tho.,,
3.5323E+17,Alex Knauth#4895,2021-05-17,"Some situations:
when there are multiple arguments without obvious order
when there are optional arguments with good names
when you're adding an optional argument to an existing function",,plusone (3)
3.46868E+17,djeis#0042,2021-05-17,And I'm sure you know what the category theorists would say üòõ,,
2.66505E+17,notjack#9941,2021-05-17,I also use keyword arguments when grouping together data where the order doesn't have to matter and there's more than two or three pieces of data,,
2.66505E+17,notjack#9941,2021-05-17,the list APIs don't really have a consistent convention at all. `map` and `filter` take the list last but `take` and `drop` take the list first.,,
3.46868E+17,djeis#0042,2021-05-17,"ü§î yea I'd prefer if take and drop took the list last, but that's my perspective as primarily a clojurian and CLer.",,
3.46868E+17,djeis#0042,2021-05-17,And tbh the convention doesn't translate over quite as cleanly as the names might imply.,,
3.5323E+17,Alex Knauth#4895,2021-05-17,"Racket just seems to have one convention for ""normal"" functions and the opposite convention for ""higher-order"" functions",,
2.66505E+17,notjack#9941,2021-05-17,`hash-update` is higher order,,
2.66505E+17,notjack#9941,2021-05-17,"I think it's just that racketeers have organically created the opposite convention specifically for higher order functions that look like `map` `filter` or `fold`, because they're just copying what those functions look like on lists",,
3.5323E+17,Alex Knauth#4895,2021-05-17,"For a few higher-order functions I've implemented recently, I decided to make them curried like `((map f) lst)` or `((filter p?) lst)` or `((foldr comb base) lst)` or `((sort <?) lst)`. This isn't the standard Racket convention but in some ways it might help some ambiguities in order with a separation between ""configuration arguments"" and the main argument",,
4.61981E+17,Gavinok#4195,2021-05-17,"hmm what would be a good way to represent something like enum? I want to allow the user to specify if a value is representing an hour, minute or second?",,
3.5323E+17,Alex Knauth#4895,2021-05-17,"of course a possible alternative convention is making every ""configuration argument"" a keyword argument so that order doesn't matter",,
3.5323E+17,Alex Knauth#4895,2021-05-17,If the list functions used that they would look like `(map lst #:on-element f)` or `(filter lst #:keep-element? p?)` or `(foldr lst #:combine comb #:base base)` or `(sort lst #:order <?)`,,
2.66505E+17,notjack#9941,2021-05-17,I would make a data type representing a duration of time,,
2.66505E+17,notjack#9941,2021-05-17,"```scheme
(struct duration (seconds) #:transparent)

(define (seconds n)
  (duration n))

(define (milliseconds n)
  (duration (/ n 1000)))

(define (minutes n)
  (duration (* n 60)))

(define (hours n)
  (duration (* n 3600)))
```",,
4.61981E+17,Gavinok#4195,2021-05-17,I guess that would work thanks,,
4.66395E+17,oaktownsam#0815,2021-05-18,FWIW there is a duration type in gregor,,plusone (1)
4.66395E+17,oaktownsam#0815,2021-05-18,https://docs.racket-lang.org/gregor/period.html,,
2.75501E+17,Plane#0324,2021-05-18,one use case where i've avoided racket is when i want to use low-level integer types,,
2.75501E+17,Plane#0324,2021-05-18,so just to give an example,,
2.75501E+17,Plane#0324,2021-05-18,"a certain old game uses microsoft's `rand()`, which is a low quality pseudo-rng",,
2.75501E+17,Plane#0324,2021-05-18,"it's a simple LCG, which is LCG(2^31,214013,2531011), which looks like:",,
2.75501E+17,Plane#0324,2021-05-18,"```c
uint32_t seed;

int rand() {
    seed = seed * 214013 + 2531011;
    return (seed >> 16) & 0x7fff;
}
```",,
2.75501E+17,Plane#0324,2021-05-18,"but if i want to get that same sequence of numbers to model what the game does *in racket*, it is not as trivial",,
2.75501E+17,Plane#0324,2021-05-18,(the same game uses single-precision floating point quite a bit as well),,
2.75501E+17,Plane#0324,2021-05-18,"or another example, if i wanted to try to implement xoroshiro128++: https://prng.di.unimi.it/xoshiro128plusplus.c",,
2.75501E+17,Plane#0324,2021-05-18,"my fixnums are missing a couple bits off the top, i think",,
2.75501E+17,Plane#0324,2021-05-18,"so for that first example, since i'm on a 64-bit system i can use fixnums, they're larger than 32-bit, so i can just add a bitwise and, i think:
```scheme
(require threading)

(define seed 0)

(define (rand)
  (set! seed (~> seed
                 (* 214013)
                 (+ 2531011)
                 (bitwise-and #xFFFFFFFF)))
  (~> seed
      (arithmetic-shift -16)
      (bitwise-and #x7FFF)))
```",,
2.75501E+17,Plane#0324,2021-05-18,is that sort of the standard approach?,,
2.75501E+17,Plane#0324,2021-05-18,"(i mean, not writing the function with a threading macro, but adding `bitwise-and`)",,
2.75501E+17,Plane#0324,2021-05-18,i guess i'm just making the numeric properties i want explicit instead of using a type to do it for me,,
4.66395E+17,oaktownsam#0815,2021-05-18,Yeah that's what I would do,,
2.75501E+17,Plane#0324,2021-05-18,and i guess if i want to do single-precision floating point ops i can use bc for now?,,
2.75501E+17,Plane#0324,2021-05-18,looks like `(single-flonum-available?)` is `#t` on bc,,
2.75501E+17,Plane#0324,2021-05-18,"that's really the only time i've wanted them, though, when i'm trying to reproduce the exact numbers produced by other software",,
2.75501E+17,Plane#0324,2021-05-18,Ok I might try implementing some prngs (:  I was considering doing some of this with ffi,,
2.75501E+17,Plane#0324,2021-05-18,i'm curious how ops with 64-bit state perform since those will go outside of the fixnum range sometimes,,
1.56786E+17,williewillus#8490,2021-05-18,do any memory profiling tools exist for racket?,,
1.56786E+17,williewillus#8490,2021-05-18,"r16 has been running for almost 5 days now (yay, finally have a stable-ish uptime), but it's also consuming quite a bit of memory",,
1.56786E+17,williewillus#8490,2021-05-18,it would be nice to dump an object graph and show what's holding on to what,,
1.56786E+17,williewillus#8490,2021-05-18,dump-memory-stats doesn't really cut it since it's very spammy/noisy and I have no idea what the fields mean,,
1.56786E+17,williewillus#8490,2021-05-18,!rkt stats,,
8.02004E+17,r16#4581,2021-05-18,"Uptime (dd:hh:mm:ss): 04:22:42:50
Bytes in use: 681199940",,
2.66505E+17,notjack#9941,2021-05-18,"I think that's probably the best that currently exists, but you can always ask mflatt and he might just make a heap dump tool out of procrastination or something",,üëç (1)
1.56786E+17,williewillus#8490,2021-05-18,is there at least docs on what the fields mean?,,
2.66505E+17,notjack#9941,2021-05-18,@samth might know,,
4.66395E+17,oaktownsam#0815,2021-05-18,"This is from memory for `(dump-memory-stats)`
The first field is the kind of thing 
The `|` separates before/after GC
I think the first field is number of that thing and the second is the amount of space those things are using.",,
4.66395E+17,oaktownsam#0815,2021-05-19,Actually I'm pretty sure the after GC is the first ones and the before is after the `|`,,
4.61981E+17,Gavinok#4195,2021-05-19,Do most of you guys use Drracket? or do you use different editors? I could never really get into drracket as a fairly hardcore vim fan. I was wondering how many out there use other options? I just rely on the lsp and a simple repl for my current work.,,
4.83487E+17,jest#6646,2021-05-19,@Gavinok you can use vscode with the magic racket extension along with https://github.com/jeapostrophe/racket-langserver racket-langserver,,
4.83487E+17,jest#6646,2021-05-19,i think most people here use emacs though,,
4.83487E+17,jest#6646,2021-05-19,as an alternative to dr racket,,
4.61981E+17,Gavinok#4195,2021-05-19,Fair I have given emacs a go with racket a few times and it is pretty good,,
4.61981E+17,Gavinok#4195,2021-05-19,bless the language server. it is pretty much the only thing that keeps me using racket with vim,,
4.83487E+17,jest#6646,2021-05-19,i use vscode but occasionally i dont know where the error is and have to open up racket so it can jump to the error... the most annoying thing about racket is it seems the error messages dont really tell me what line number it is sometimes which ive been spoiled by rust lol,,
4.61981E+17,Gavinok#4195,2021-05-19,I have seen a pattern of that with lisps. Many seem to make jumping to the proper source of the error a pain.,,
8.14743E+16,jimpjorps#0001,2021-05-19,I use drracket because I use the debugger very frequently,,‚òùÔ∏è (1)
4.61981E+17,Gavinok#4195,2021-05-19,Could just be me since I am still a beginner when it comes to lisps,,
4.61981E+17,Gavinok#4195,2021-05-19,are there no external forms of debugging (besides display/write)?,,
4.83487E+17,jest#6646,2021-05-19,"i hear most people dont use the debugger, but it has saved me a bunch of times when my scripts get sufficiently large",,
8.14743E+16,jimpjorps#0001,2021-05-19,if drracket had parinfer it'd be basically perfect for me,,
4.61981E+17,Gavinok#4195,2021-05-19,right now drracket and the lsp is still single file only right?,,
4.83487E+17,jest#6646,2021-05-19,"should port the debugger to vscode, drracket ui has very noticable lag",,
4.61981E+17,Gavinok#4195,2021-05-19,would be nice to make it more external,,
4.83487E+17,jest#6646,2021-05-19,"single file as in not supporting ""projects""? i think still not so*",,
4.61981E+17,Gavinok#4195,2021-05-19,I would love to see more terminal support from racket,,
4.61981E+17,Gavinok#4195,2021-05-19,ya that was what I had in mind,,
4.61981E+17,Gavinok#4195,2021-05-19,Like a quicker way to look at the docs rather than opening my browser.,,
4.83487E+17,jest#6646,2021-05-19,"think vscode atm spits out the function signature is all, forgot if it did documentation or not",,
4.61981E+17,Gavinok#4195,2021-05-19,Oh just found this after thinking about it https://github.com/DHMike57/vrod,,
4.83487E+17,jest#6646,2021-05-19,woahh,,
4.61981E+17,Gavinok#4195,2021-05-19,I will have to look into how it works. Would be nice to abstract it into a package that anyone could call from the cli and use with whatever editor they chose,,
4.61981E+17,Gavinok#4195,2021-05-19,ed fans rejoice,,
2.75501E+17,Plane#0324,2021-05-19,I‚Äôm using vim mostly atm,,
4.66395E+17,oaktownsam#0815,2021-05-19,Racket-LSP supports completion similar to DrRacket so you can use it with vim omnicompleter IIRC.,,
4.61981E+17,Gavinok#4195,2021-05-19,Ya I use that at the moment. Docs is really the only standout thing it lacks. It just gives me a link instead of the actual documentation,,
7.73175E+17,meowüé∫#2842,2021-05-19,You should know that Freenode got hijacked and we lost #racket,,
7.73175E+17,meowüé∫#2842,2021-05-19,Freenode is permanently taken over by hostile actors.,,
7.73175E+17,meowüé∫#2842,2021-05-19,/PSA,,üò≠ (1)
4.66395E+17,oaktownsam#0815,2021-05-19,ah yeah.  In the older racket vim (non LSP) there was a binding for `K` to run `raco docs $identifier` which was useful,,
4.66395E+17,oaktownsam#0815,2021-05-19,ahh that's why my other IRC friends are talking about freenode.,,
4.66395E+17,oaktownsam#0815,2021-05-19,I always like slashnet better.  (although really I like the two channels I am in on slashnet),,
8.14743E+16,jimpjorps#0001,2021-05-19,"yeah, apparently someone who shouldn't have had the authority to do it sold the network to some asshole",,
8.14743E+16,jimpjorps#0001,2021-05-19,so all the volunteer staff quit in protest,,
4.66395E+17,oaktownsam#0815,2021-05-19,`#scheme` is still running?,,
7.73175E+17,meowüé∫#2842,2021-05-19,I doubt it.,,
7.73175E+17,meowüé∫#2842,2021-05-19,The TLS certificate was replaced with an unsigned one so I don't want to reconnect.,,
4.66395E+17,oaktownsam#0815,2021-05-19,Ah,,
4.66395E+17,oaktownsam#0815,2021-05-19,I'm in both and folks are there.,,
7.73175E+17,meowüé∫#2842,2021-05-19,Mmm,,
7.73175E+17,meowüé∫#2842,2021-05-19,https://gist.github.com/joepie91/df80d8d36cd9d1bde46ba018af497409/,,
4.66395E+17,oaktownsam#0815,2021-05-19,Of course I don't think there has been any ops in the `#racket` for a while,,
7.73175E+17,meowüé∫#2842,2021-05-19,What I'm worrying about is that they're inevitably going to get their hands on the NickServ DB.,,
4.66395E+17,oaktownsam#0815,2021-05-19,https://twitter.com/TwitchiH/status/1395059499988357120,,
4.66395E+17,oaktownsam#0815,2021-05-19,That was my concern too,,
4.66395E+17,oaktownsam#0815,2021-05-19,More about passwords mostly,,
4.66395E+17,oaktownsam#0815,2021-05-19,"As far as `#racket` I think the closest to a ""core"" racketeer on there now is Paulo",,
4.66395E+17,oaktownsam#0815,2021-05-19,"I don't know if the main website should direct people elsewhere than the freenode channel if it could be considered ""unsafe"".  It does feel like a lot of drama, but I don't know any of the folks involved in the takeover or freenode resigning staff.",,
7.73175E+17,meowüé∫#2842,2021-05-19,I'd say it's safe to say FN is unsafe at least until the dust settles.,,
9.9326E+16,Runi#1730,2021-05-19,there is signature help in the langserver but it doesn't display on hover,,
9.9326E+16,Runi#1730,2021-05-19,"it should display when you press space, if enabled in your editor",,
2.75501E+17,Plane#0324,2021-05-20,i still have `K` pop up docs in a web browser,,
2.75501E+17,Plane#0324,2021-05-20,that works pretty well for me,,
2.75501E+17,Plane#0324,2021-05-20,actually i'm not sure 100% what i'm doing but i do like these little pop-ups,,
2.75501E+17,Plane#0324,2021-05-20,,https://cdn.discordapp.com/attachments/618895179343986688/844808412697198612/unknown.png,
2.75501E+17,Plane#0324,2021-05-20,my favorite things with the LSP so far are all the warnings and errors it highlights as i'm editing,,‚ù§Ô∏è (3)
2.75501E+17,Plane#0324,2021-05-20,"it makes it really obvious when i'm using something but don't have the right `require`, or if i'm `require`ing something that i'm not using anymore, or if i've got a syntax error somewhere etc",,
2.75501E+17,Plane#0324,2021-05-20,"i just bound `:LspSignatureHelp` to `L` in vim, that works well for me i think (:",,
4.66395E+17,oaktownsam#0815,2021-05-20,Something is broken in how neovim does signature help.  It errors on the processing the response from racket-lsp,,
2.75501E+17,Plane#0324,2021-05-20,frown,,
4.66395E+17,oaktownsam#0815,2021-05-20,Yes the errors highlights are great.  As I'm coding I think that's the part of DrRacket I was missing the most.,,
9.9326E+16,Runi#1730,2021-05-20,what's the error?,,
4.66395E+17,oaktownsam#0815,2021-05-20,I think it's a lua parsing thing.  Give me a second to check,,
4.66395E+17,oaktownsam#0815,2021-05-20,,https://cdn.discordapp.com/attachments/618895179343986688/844818922037575680/Screen_Shot_2021-05-19_at_11.08.26_PM.png,
9.9326E+16,Runi#1730,2021-05-20,ah seems like that LSP client doesn't support the current format for signature help responses,,
9.9326E+16,Runi#1730,2021-05-20,this is probably an instance of not respecting the given capabilities üôÉ,,
9.9326E+16,Runi#1730,2021-05-20,(on the langserver's end that is),,
9.9326E+16,Runi#1730,2021-05-20,though actually the spec doesn't even allow for just a text response... so I'm not sure whose fault that bug is,,
4.66395E+17,oaktownsam#0815,2021-05-20,It looks like it works in the LSP integration that @Plane is using so I'm going to say it's probably neovim's fault,,
9.9326E+16,Runi#1730,2021-05-20,I checked the source at the lsp/util.lua file mentioned in the stack trace & it seems to be handling the format correctly,,
9.9326E+16,Runi#1730,2021-05-20,so idunno what exactly is going on there lol,,
9.9326E+16,Runi#1730,2021-05-20,try updating maybe,,
2.75501E+17,Plane#0324,2021-05-20,i'm using plain ol' vim,,
2.75501E+17,Plane#0324,2021-05-20,"i never got around to trying out neovim (at least, not for more than a minute or two)",,
4.66395E+17,oaktownsam#0815,2021-05-20,Just updated to the latest nightly and still there.  Maybe I'll do more lua to hunt down what is going on.,,
2.75501E+17,Plane#0324,2021-05-20,i feel like there should be a `for/count` similar to `for/sum`,,plusone (1)
2.75501E+17,Plane#0324,2021-05-20,i made one but i snuck it into my local copy of `racket/collects/racket/private/for.rkt` because `define-for-variants` isn't provided,,
2.75501E+17,Plane#0324,2021-05-20,"```
diff --git a/racket/collects/racket/private/for.rkt b/racket/collects/racket/private/for.rkt
index 6c40547f1f..9ed62855b4 100644
--- a/racket/collects/racket/private/for.rkt
+++ b/racket/collects/racket/private/for.rkt
@@ -29,6 +29,7 @@
              for/first for*/first
              for/last for*/last
              for/sum for*/sum
+             for/count for*/count
              for/product for*/product
              for/hash for*/hash
              for/hasheq for*/hasheq
@@ -2073,6 +2074,12 @@
     (lambda (rhs) rhs)
     (lambda (x) #`(+ result #,x)))

+  (define-for-variants (for/count for*/count)
+    ([result 0])
+    (lambda (x) x)
+    (lambda (rhs) rhs)
+    (lambda (x) #`(+ result (if #,x 1 0))))
+
   (define-for-variants (for/product for*/product)
     ([result 1])
     (lambda (x) x)
```",,
2.66505E+17,notjack#9941,2021-05-20,yes please,,
2.66505E+17,notjack#9941,2021-05-20,"if you're using rebellion but still want to use for loops instead of transducers, you can use `for/reducer` or `for*/reducer`:
```scheme
(for/reducer into-count
             ([x seq])
  whatever ...)
```",,
2.75501E+17,Plane#0324,2021-05-20,neat!,,
2.66505E+17,notjack#9941,2021-05-20,"there is also `make-reducer-based-for-comprehensions` to let you define `for/count` in terms of `into-count`
```scheme
(require rebellion/streaming/reducer)

(define-syntaxes (for/count for*/count)
  (make-reducer-based-for-comprehensions #'into-count))

(for/count ([x seq])
  whatever ...)
```",,üòç (1)
2.75501E+17,Plane#0324,2021-05-20,ooh that's fancy,,
2.75501E+17,Plane#0324,2021-05-20,i was having trouble figuring out the easiest way to define it for myself without futzing with the private racket files,,
2.75501E+17,Plane#0324,2021-05-20,that seems like a really nice way to do it,,
2.66505E+17,notjack#9941,2021-05-20,yeah I'm biased but it's definitely my favorite way to make custom `for` forms :p,,
2.75501E+17,Plane#0324,2021-05-20,"one thing i'm using drracket for, rather than vim, is the macro stepper",,plusone (2)
6.36577E+17,kosengan#6044,2021-05-20,"hey channel üëã  need little help !
can you someone tell me what Matthew Flatt is saying from 33:55 to 34:10 ?
https://youtu.be/dnz6y5U0tFs?t=2036
I tried listening it few times and also looked at the YouTube captions. I still don't understand. It's important for me as I'm interested in WebAssembly+Racket
thanks in advance üçâ",,
2.75501E+17,Plane#0324,2021-05-20,"> We're in much better shape to build further VMs, and Sam's group is already doing this, they're doing Pycket, and we'll continue on that path.  Every time I talk about Racket-on-Chez, someone says, ""Oh, WebAssembly?""  And yes, someone should do that.",,
2.75501E+17,Plane#0324,2021-05-20,@kosengan that's what i hear,,üëç (1)
8.14743E+16,jimpjorps#0001,2021-05-20,"yeah, same here, I didn't recognize ""Pycket"" but otherwise I agree",,üëç (1)
6.36577E+17,kosengan#6044,2021-05-20,thanks!,,
6.36577E+17,kosengan#6044,2021-05-20,"yes, I get it thanks!",,
6.46114E+17,samth#3420,2021-05-20,@williewillus `dump-memory-stats` is what you want to use.,,
1.56786E+17,williewillus#8490,2021-05-20,"I'm wondering if there's something a bit higher level
that encodes e.g. what objects hold on to other objects so you can e.g. find retained sets, group things by type, etc.",,
1.56786E+17,williewillus#8490,2021-05-20,basically I'm spoiled by java memory profilers,,
1.56786E+17,williewillus#8490,2021-05-20,dump-memory-stats is very raw and not really much use if you're debugging a leak,,
4.61981E+17,Gavinok#4195,2021-05-21,Ya can confirm this,,
6.46114E+17,samth#3420,2021-05-21,"`dump-memory-stats` can do that, although it is somewhat low-level. You can get a backtrace for any object, or for all the objects of a given type, or a sample of those objects, or objects that match a predicate.",,
6.46114E+17,samth#3420,2021-05-21,Try `(dump-memory-stats 'help 'only)` for some usage information,,
6.46114E+17,samth#3420,2021-05-21,I agree that the documentation/help is not that great,,
2.75501E+17,Plane#0324,2021-05-21,oh! it takes arguments,,
2.75501E+17,Plane#0324,2021-05-21,i actually wanted to try to debug racket cs to see if i can help with the memory problems i've been having but i got a bit lost,,
1.56786E+17,williewillus#8490,2021-05-21,Nice,,
1.56786E+17,williewillus#8490,2021-05-21,I might make a tool on top of it to present the info then,,
6.46114E+17,samth#3420,2021-05-21,@williewillus I forgot that I made one of those -- see the `object-backtrace` package,,
6.46114E+17,samth#3420,2021-05-21,"@Plane I would love to help you debug that. As a first step, you probably want to see if `(dump-memory-stats (list 'struct 'critical-winder) 'every 100 'only)` prints useful things",,
6.46114E+17,samth#3420,2021-05-21,(that should print the backtrace for 1/100 of the `critical-winder` values),,
2.75501E+17,Plane#0324,2021-05-21,"it's working on it lol
```
Begin Dump
Current memory use: 4360151336
Begin Traces
```",,
2.75501E+17,Plane#0324,2021-05-21,i think i should try running it when it's using a little bit less memory,,
2.75501E+17,Plane#0324,2021-05-21,it spiked up over 20GB without producing any output after that line,,
2.75501E+17,Plane#0324,2021-05-21,"i did ```scheme
        (begin
          (dump-memory-stats)
          (dump-memory-stats (list 'struct 'critical-winder) 'every 100 'only))
```
and i got
```
(...)
 #<critical-winder>     1,291,418   41,325,376  |  1,291,418   41,325,376
 pair                   3,562,316   56,997,056  |  3,678,084   58,849,344
 code                      72,310   62,788,912  |     72,316   62,790,032
 procedure              2,852,170   96,945,328  |  2,857,673   97,129,760
 total                  9,692,343  370,851,064  |  9,861,405  377,623,480
End RacketCS
End Dump
Begin Dump
Current memory use: 629243696
Begin Traces
invalid memory reference.  Some debugging context lost
  context...:
   /home/crystal/.racket/8.1/pkgs/racket-langserver/main.rkt:54:0: main-loop
   body of (submod ""/home/crystal/.racket/8.1/pkgs/racket-langserver/main.rkt"" main)
mutex-release: thread does not own mutex 907248
  context...:
   /home/crystal/.racket/8.1/pkgs/racket-langserver/main.rkt:54:0: main-loop
```",,
2.64024E+17,Eutro#0016,2021-05-21,uh oh,,
6.46114E+17,samth#3420,2021-05-21,ok that seems unfortunate,,
6.46114E+17,samth#3420,2021-05-21,@Plane you could try with a number much larger than 100,,
6.46114E+17,samth#3420,2021-05-21,"it says there are 1.2 million, so you could try 100000",,
6.46114E+17,samth#3420,2021-05-21,that should produce 12 backtraces,,
2.75501E+17,Plane#0324,2021-05-21,it seems like it outputs the traces to a different port,,
6.46114E+17,samth#3420,2021-05-21,"yes, i think it prints to stderr of the original racket process",,
2.75501E+17,Plane#0324,2021-05-21,i kept seeing no output in the file i was redirecting to,,
2.75501E+17,Plane#0324,2021-05-21,after `Begin Traces`,,
2.75501E+17,Plane#0324,2021-05-21,but it was sending it somewhere else the whole time,,
6.46114E+17,samth#3420,2021-05-21,"I thought it printed everything there, but maybe not",,
2.75501E+17,Plane#0324,2021-05-21,"```
*crystal@wings:/tmp$ sort baq.5298 | uniq -c | sort -rn
1727997   PREV)
1727997   .
1727996  <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap> #<procedure swap> ()]
 449099 *== #[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap> #<procedure swap> ()]
 449098  <- DITTO
      2  <- (PREV)
      2  #[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap> #<procedure swap> ()]
```",,
2.75501E+17,Plane#0324,2021-05-21,i have a lot of lines like that,,
2.75501E+17,Plane#0324,2021-05-21,"```
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap> #<procedure swap> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap> #<procedure swap> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap> #<procedure swap> ()]
  .
  PREV)
(...)
```",,
2.75501E+17,Plane#0324,2021-05-21,"anyway, i got it to output something!  lol",,
6.46114E+17,samth#3420,2021-05-21,well that's slightly less informative than I hoped but definitely worth adding to the bug report,,
6.46114E+17,samth#3420,2021-05-21,"aha, that's actually very informative",,
6.46114E+17,samth#3420,2021-05-21,the `swap` procedure is almost certainly in the implementations of `fluid-let` and `parameterize` in Chez Scheme,,
6.46114E+17,samth#3420,2021-05-21,for ex: https://github.com/racket/ChezScheme/blob/master/s/syntax.ss#L8319,,
6.46114E+17,samth#3420,2021-05-21,one possibility for further debugging is to try to name the procedure based on the source location so that we can figure out where it's from,,
6.46114E+17,samth#3420,2021-05-21,"@Plane if you want to debug further, probably you'd need to build racket from source",,
2.75501E+17,Plane#0324,2021-05-21,"```
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap-in-fluid-let> #<procedure swap-in-fluid-let> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap-in-fluid-let> #<procedure swap-in-fluid-let> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap-in-fluid-let> #<procedure swap-in-fluid-let> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap-in-fluid-let> #<procedure swap-in-fluid-let> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap-in-fluid-let> #<procedure swap-in-fluid-let> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure swap-in-fluid-let> #<procedure swap-in-fluid-let> ()]
  .
  PREV)
```",,
2.75501E+17,Plane#0324,2021-05-21,"```scheme
(define-syntax fluid-let
  (lambda (x)
    (syntax-case x ()
      [(_ () e1 e2 ...) #'(let () e1 e2 ...)]
      [(_ ((x v) ...) e1 e2 ...)
       (andmap identifier? #'(x ...))
       (with-syntax ([(y ...) (generate-temporaries #'(x ...))]
                     [(t ...) (generate-temporaries #'(x ...))])
         #'(let ([y v] ...)
             (let ([swap-in-fluid-let (lambda ()
                           (let ([t x] ...)
                             (set! x y)
                             ...
                             (set! y t)
                             ...))])
               (dynamic-wind #t swap-in-fluid-let (lambda () e1 e2 ...) swap-in-fluid-let))))])))
```",,
2.75501E+17,Plane#0324,2021-05-21,i renamed that,,
2.75501E+17,Plane#0324,2021-05-21,and it showed up in the stack trace,,
6.46114E+17,samth#3420,2021-05-21,@Plane did the other swap show up,,
2.75501E+17,Plane#0324,2021-05-21,only this one,,
6.46114E+17,samth#3420,2021-05-21,"also, even better would be to add to that `with-syntax` the following line: `[(swap-in-fluid-let) (generate-temporaries (car (syntax-e #'(x ...)))]`",,
6.46114E+17,samth#3420,2021-05-21,that should name it based on what variable is being used with `fluid-let`,,
6.46114E+17,samth#3420,2021-05-21,"the other interesting thing here is that Racket doesn't use `fluid-let`, so this is somewhere in the Chez source itself",,
6.46114E+17,samth#3420,2021-05-21,it is likely caused by the fact that `(fluid-let ([x ...]) (f))` is not a tail call to `f`,,
2.75501E+17,Plane#0324,2021-05-21,it doesn't like `syntax-e`,,
2.75501E+17,Plane#0324,2021-05-21,"```
Warning: undeclared variable reference to syntax-e at line 8122, char 71 of syntax.ss
```",,
6.46114E+17,samth#3420,2021-05-21,@Plane just try omitting it,,
6.46114E+17,samth#3420,2021-05-21,also mentioning me will cause me to respond faster :),,
2.75501E+17,Plane#0324,2021-05-21,oh i can do that,,
2.75501E+17,Plane#0324,2021-05-21,what is `syntax-e` anyway?  i was just looking at the docs but i'm not very clear on it,,
6.46114E+17,samth#3420,2021-05-21,`syntax-e` produced the value inside a syntax object,,
6.46114E+17,samth#3420,2021-05-21,"if you have the syntax object `#'foo`, which is an identifier named `foo`, then `(syntax-e #'foo)` will produce the symbol `'foo`",,
6.46114E+17,samth#3420,2021-05-21,the same for syntax-lists,,
6.46114E+17,samth#3420,2021-05-21,"but I think in Chez, lists aren't made into syntax objects so just `car` will work",,
6.46114E+17,samth#3420,2021-05-21,but I'm not certain,,
6.46114E+17,samth#3420,2021-05-21,"@Plane sorry, that code has a bug, you need to put `(list ...)` around the `car`",,
6.46114E+17,samth#3420,2021-05-21,"no, that doesn't work either. hmmm",,
6.46114E+17,samth#3420,2021-05-21,"@Plane ok, I think I have the right code:  `[swap (datum->syntax-object #'here (car (syntax-object->datum #'(x ...))))]`",,
6.46114E+17,samth#3420,2021-05-21,I think that will name it after the first variable in `fluid-let`,,
6.46114E+17,samth#3420,2021-05-21,"@Plane that compiles for me, at least, so let me know if it works for you/gives you additional information",,
2.75501E+17,Plane#0324,2021-05-21,it's building (:,,
6.46114E+17,samth#3420,2021-05-21,@Plane yay,,
6.46114E+17,samth#3420,2021-05-21,@Plane Matthew also suggests trying removing the first `#;` in `racket/src/cs/rumble/error.ss` and seeing if that prints a lot of (potentially informative) things,,
2.75501E+17,Plane#0324,2021-05-21,"i did this but not matthew's suggestion yet, and now the stack frames look like
```
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure handler-stack> #<procedure handler-stack> ()]
  .
  PREV)
```",,
6.46114E+17,samth#3420,2021-05-21,"Ok, great. Can you now try Matthew's suggestion and I'll look for where `handler-stack` appears",,
6.46114E+17,samth#3420,2021-05-21,"@Plane the `handler-stack` result actually makes Matthew's suggestion much more likely to be right, since he thought it might be an error raised in error handling",,
6.46114E+17,samth#3420,2021-05-21,and `handler-stack` is part of the error handling,,
2.75501E+17,Plane#0324,2021-05-21,"`racket-langserver` just outputs this over and over as soon as it starts:
```
""invalid memory reference.  Some debugging context lost""
```",,
6.46114E+17,samth#3420,2021-05-21,"ok, that's unfortunate",,
6.46114E+17,samth#3420,2021-05-21,@Plane I think mflatt is going to try running it,,
2.75501E+17,Plane#0324,2021-05-21,"this program also outputs the invalid memory reference thing
```
#lang racket/base

(require racket/gui)
```",,
2.75501E+17,Plane#0324,2021-05-21,@samth i thought of something else,,
2.75501E+17,Plane#0324,2021-05-21,the langserver has a dependency on the gui,,
2.75501E+17,Plane#0324,2021-05-21,i'm running an x server,,
2.75501E+17,Plane#0324,2021-05-21,https://sourceforge.net/projects/vcxsrv/,,
2.75501E+17,Plane#0324,2021-05-21,"which i was invoking outside of wsl2 with `""C:\Program Files\VcXsrv\vcxsrv.exe"" :0 -ac -terminate -lesspointer -multiwindow -clipboard -wgl -dpi auto `",,
2.75501E+17,Plane#0324,2021-05-21,that lets the langserver run since it has a dependency on `racket/gui`,,
2.75501E+17,Plane#0324,2021-05-21,maybe this is a configuration few racketeers have used üëÄ,,
2.75501E+17,Plane#0324,2021-05-21,"let me try rebuilding, maybe i messed something up here . . .",,
2.75501E+17,Plane#0324,2021-05-21,"oh, the printf actually prevented the langserver from reaching the point where the dump would occur",,
2.75501E+17,Plane#0324,2021-05-21,because the langserver talks to the calling program with stdout,,
2.75501E+17,Plane#0324,2021-05-21,lemme make it output to stderr . . .,,
2.75501E+17,Plane#0324,2021-05-21,"@samth ok i edited the line matthew asked me to uncomment, i changed it to `fprintf` to the current error port, and now the program runs to the point where i can get some debug output",,
2.75501E+17,Plane#0324,2021-05-21,"```
(...)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure handler-stack> #<procedure handler-stack> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure handler-stack> #<procedure handler-stack> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure handler-stack> #<procedure handler-stack> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure handler-stack> #<procedure handler-stack> ()]
  .
  PREV)
 <- (#[#{critical-winder qnbz1n5f3x1ldovscan3nu-2} #<procedure handler-stack> #<procedure handler-stack> ()]
  .
  PREV)
 <- #<system continuation in dynamic-wind>
 <- #<system continuation in winder-dummy>
 <- #<system continuation in dynamic-wind>
 <- #<system continuation in winder-dummy>
 <- #<system continuation in dynamic-wind>
 <- #<system continuation in winder-dummy>
 <- #<system continuation in dynamic-wind>
 <- #<system continuation in winder-dummy>
 <- #<system continuation in dynamic-wind>
 <- #<system continuation in winder-dummy>
 <- #<system continuation in dynamic-wind>
 <- #<system continuation in winder-dummy>
(...)
```",,
2.75501E+17,Plane#0324,2021-05-21,now there are a lot of those,,
2.75501E+17,Plane#0324,2021-05-21,nothing else,,
2.75501E+17,Plane#0324,2021-05-21,"```
(...)
 <- #<system continuation in winder-dummy>
 <- #<system continuation in dynamic-wind>
 <- #<system continuation in winder-dummy>
 <- #<system continuation in dynamic-wind>
 <- #<thread 1>
 <- (PREV #<thread 0>)
```",,
6.46114E+17,samth#3420,2021-05-21,@Plane does the printf ever happen?,,
6.36577E+17,kosengan#6044,2021-05-21,"**Instead having Racket to rely on Chez Scheme, why not make the Racket Compiler faster?**
couple of examples, 
- initially rustlang's compiler was written in OCaml and alter shifted to self-osting compiler written in Rust.
- Nimlang was written in Pascal and later got written in nimlang itself

having a language's compiler written in the language itself is not necessary but a major leverage for the language and its ecosystem",,
2.66505E+17,notjack#9941,2021-05-21,"moving the racket compiler to chez scheme allowed _more_ of it to be rewritten in racket, actually. the previous compiler was mostly C code.",,plusone (3)
6.87833E+17,grey#8674,2021-05-22,"Also, the way Racket is built is a little different from most languages. Much of `#lang racket` is actually implemented in terms of libraries and macros that build on a smaller kernel language. The part of the implementation that corresponds to the ‚Äúcore compiler‚Äù is only part of the picture.",,plusone (2)
4.1228E+17,xgqt#8370,2021-05-22,chez that racket uses is heavily modified,,
4.1228E+17,xgqt#8370,2021-05-22,cisco chez != racket chez,,
4.1228E+17,xgqt#8370,2021-05-22,"speaking of scheme and racket
I was wondering if racket code can be transpiled to scheme (one of RnRS standards)",,
2.75501E+17,Plane#0324,2021-05-22,"oh it does but the only thing it prints out is 
```
""invalid memory reference.  Some debugging context lost""
```",,
2.34164E+17,python#3213,2021-05-22,"Not really, racket has more powerful continuations than rnrs",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-22,delimited ones? I thought you can emulate them with call/cc and some state,,
2.34164E+17,python#3213,2021-05-22,i just remember that there's something about racket' continuations that makes them more than normal continuations,,
2.34164E+17,python#3213,2021-05-22,"i don't know the details though, sorry",,
1.56786E+17,williewillus#8490,2021-05-22,My impression from reading the reports was that the difference weren't that big? At least such that changes can be exchanged between them and upstream,,
4.66395E+17,oaktownsam#0815,2021-05-22,"technically it is already ""transpiled"" to chez",,
4.66395E+17,oaktownsam#0815,2021-05-22,so yes you could.,,
4.66395E+17,oaktownsam#0815,2021-05-22,"I think for delimited continuations you would have to do a `call/cc` and `set!` trick, but iirc that may leak memory?

If you did a CPS transform it could possibly be avoided.",,
4.66395E+17,oaktownsam#0815,2021-05-22,"Or if you target a ""VM"" written in R5RS",,
4.1228E+17,xgqt#8370,2021-05-22,"but not in source-to-source way, right? can I transpile a racket source files to scheme that could be ran with, say, chicken?",,
4.66395E+17,oaktownsam#0815,2021-05-22,Racket compiles to linklets which are just sexps.  The linklets are then transformed into Chez code.  Then chez compiles it (linked to rumble the Racket runtime library in chez.),,
4.66395E+17,oaktownsam#0815,2021-05-22,iirc linklets are just the kernel syntax + some module (import/export names) syntax,,
2.64024E+17,Eutro#0016,2021-05-22,are there any articles on this? I'd be interested,,
4.66395E+17,oaktownsam#0815,2021-05-22,"This is the only big one I know 
https://docs.racket-lang.org/reference/linklets.html",,
4.66395E+17,oaktownsam#0815,2021-05-22,There may be some references in the dev mailing list or in the Pycket paper too.,,
2.64024E+17,Eutro#0016,2021-05-22,Thanks,,
4.66395E+17,oaktownsam#0815,2021-05-22,"```
raco setup: undeclared dependency detected
raco setup:   for package: ""metric""
raco setup:   on package for build:
raco setup:    ""racket-doc""
```

**Add build-dep**

```
raco setup: unused dependency detected
  for package: ""metric""
  on package:
   ""racket-doc""
```",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-22,is linklets new thing?,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-22,"I remember asking racket devs about viability of porting racket to jvm by somehow substituting chez, and they said forget it",,
4.66395E+17,oaktownsam#0815,2021-05-22,"I think they came out of the macro system rewrite and the Pycket implementation, then became a big part of the chez backend implementation",,
4.66395E+17,oaktownsam#0815,2021-05-22,"a ""big part"" of making the chez implementation easier",,
6.87833E+17,grey#8674,2021-05-22,"Racket‚Äôs continuation marks might be difficult to simulate, compared to simulating delimited continuations.",,
6.87833E+17,grey#8674,2021-05-22,Racket‚Äôs tail calls and continuations would be very very difficult to support with the JVM.,,
4.66395E+17,oaktownsam#0815,2021-05-23,For Java you have a choice of just using the JVM or using the JVM and wanting all of the libraries.  The former is pretty boring and the latter seems to be better suited using something that already exists like Clojure.,,
2.34164E+17,python#3213,2021-05-23,the former is more like Kawa and the latter is Clojure correct?,,
4.66395E+17,oaktownsam#0815,2021-05-23,Kawa is pretty into interop too.,,
2.34164E+17,python#3213,2021-05-23,üëå,,
4.66395E+17,oaktownsam#0815,2021-05-23,There is a paper co-authored by @jeapostrophe about simulating continuation marks similar to CPS.,,
4.66395E+17,oaktownsam#0815,2021-05-23,https://jeapostrophe.github.io/home/static/students/2012-ms-kgermane.pdf,,
4.66395E+17,oaktownsam#0815,2021-05-23,I think it's that one.,,racketflat (1)
2.34164E+17,python#3213,2021-05-23,looks neat,,
2.34164E+17,python#3213,2021-05-23,i really don't understand continuation marks,,
2.34164E+17,python#3213,2021-05-23,is it a form of delimited continuation or more advanced?,,
4.66395E+17,oaktownsam#0815,2021-05-23,should have looked before posting.  This is the thesis about the transform that the paper I read has a shorter version of.,,
4.66395E+17,oaktownsam#0815,2021-05-23,It's probably a better reference anyway.,,
4.66395E+17,oaktownsam#0815,2021-05-23,"Continuation marks are a way of storing information in the call stack.  They are related to continuations, but are not continuations.",,üëå (1)
4.66395E+17,oaktownsam#0815,2021-05-23,Parameters (and other forms of dynamic scope) can be implemented using continuation marks,,
4.66395E+17,oaktownsam#0815,2021-05-23,"John Clements PHD work was about  Continuation Marks https://www.brinckerhoff.org/clements/papers/dissertation.pdf
The introduction has some motivating examples.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-23,what's special about racket's tail calls though ü§î,,
2.64024E+17,Eutro#0016,2021-05-23,They don't consume the stack,,
2.64024E+17,Eutro#0016,2021-05-23,because Racket has tail call optimisation,,
2.64024E+17,Eutro#0016,2021-05-23,JVMs don't,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-23,well that's just regular tco,,
2.64024E+17,Eutro#0016,2021-05-23,which the JVM doesn't have,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-23,you don't necessarily need it be supported by jvm,,
2.64024E+17,Eutro#0016,2021-05-23,"of course, there's workarounds",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-23,"why ""workarounds"", why not just ""implementation patterns""?",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-23,assembly doesn't support tco either (at least afaik). Does compiling to machine code also counts as a workaround,,
6.87833E+17,grey#8674,2021-05-23,"In assembly, TCO is implemented by a jump instruction",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-23,"right, it's more than just a function call, so it's a workaround as Eutro puts it",,
6.87833E+17,grey#8674,2021-05-23,"Actually, it‚Äôs less than a function call. In assembly, you just overwrite the current stack frame, then goto the start of the function.",,
6.87833E+17,grey#8674,2021-05-23,"To get it to work on the JVM, you could try translating tail recursive functions into loops, but that won‚Äôt always work, especially for something like a program written in CPS.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-23,"why only translate recurisve functions? Trampoline can handle all tail calls, not just recursive ones",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-23,"and CPS transformation I think is practically a given, for implementing call/cc",,
2.64024E+17,Eutro#0016,2021-05-23,"You could of course just trampoline the whole thing, that's probably the only way to get continuations to work anyway",,
2.36947E+17,jeapostrophe#4261,2021-05-23,Trampolines are a way to get tco in environments without access to jumps and frame overwriting,,
2.36947E+17,jeapostrophe#4261,2021-05-23,First class continuations are typically implemented on such platforms by ignoring their stack mechanisms and using heap space,,
2.36947E+17,jeapostrophe#4261,2021-05-23,PLT has another paper about a different technique though https://dl.acm.org/doi/10.1145/1090189.1086393,,
2.36947E+17,jeapostrophe#4261,2021-05-23,And https://www2.ccs.neu.edu/racket/pubs/stackhack4.html as an addendum,,
2.36947E+17,jeapostrophe#4261,2021-05-23,Basically it works by adding exception handlers at every continuation (like how the stepper annotates the program text) and then throwing an exception to capture them and expose them to a closure,,
2.36947E+17,jeapostrophe#4261,2021-05-23,The stateless web server language uses this technique to make serializable continuations,,
2.36947E+17,jeapostrophe#4261,2021-05-23,http://jeapostrophe.github.io/home/static/icfp065-mccarthy.pdf is about that,,
2.36947E+17,jeapostrophe#4261,2021-05-23,Although there‚Äôs a sequel that extends it a bit more to what the current implementation is,,
2.36947E+17,jeapostrophe#4261,2021-05-23,There are papers about how Racket implements marks https://www.cs.utah.edu/plt/publications/pldi20-fd.pdf and delimited control http://dl.acm.org/authorize?902688,,
6.88091E+17,mflatt#6350,2021-05-23,"And here's a talk I gave (VMIL'20) that's generally about implementing control things on top of other control things: https://www.youtube.com/watch?v=qqHmNYKrusg  For example, code to implement continuation marks in terms of plain `call/cc` is shown around the 25-minute mark.",,üëÄ (1)
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-23,"https://youtu.be/qqHmNYKrusg?t=1216 why does it need to add a table on any non-tail call, and not just on parameterize / with-mark form?",,
6.88091E+17,mflatt#6350,2021-05-23,"You need some way of knowing whether the first table is for the current continuation frame, and the simple CPS model accomplishes that by having the first table always be for the current continuation. But the implementation on `call/cc ` later is closer to what you suggest, where a table is paired with the continuation that it applies to (which makes sense if you can compare continuations for equality, at least).",,
2.74358E+17,jesscxc#4846,2021-05-23,"this page looks interesting for Racket papers/research:
https://racket-lang.org/learning.html",,racket (4)
6.36577E+17,kosengan#6044,2021-05-23,would be interested to know the current status on how much the compiler is efficient when compared to Common Lisp? which is known to be more better suited for production where efficiency is in demand,,
2.66505E+17,notjack#9941,2021-05-23,probably depends what you're doing and how you're doing it,,plusone (1)
6.36577E+17,kosengan#6044,2021-05-24,"how much  of good is there n Racket to fit in the ""C"" of the picture? 
or is it just completely a new type called ""D"" by being the  Language-Oriented programming language?

*source: Land of Lisp by Conrad Barski*",https://cdn.discordapp.com/attachments/618895179343986688/846344048267886602/unknown.png,
2.74358E+17,jesscxc#4846,2021-05-24,"Clojure may be similar to that C example; it's not directly descended from other Lisps, so Rich Hickey (the original creator) was free from a lot of historical accidents, and originally runs on Java, so fast and huge libraries",,üëç (1)
2.74358E+17,jesscxc#4846,2021-05-24,"Racket is something pretty unique from what I've seen, as it focuses a lot on being a programmable language",,
2.74358E+17,jesscxc#4846,2021-05-24,these days (early 2020's) Clojure is probably the biggest for commercial production,,clojure (1)
3.46868E+17,djeis#0042,2021-05-24,"Clojure's got a lot going for it, and it's a beautiful language, but idk if I'd grant it the same level of raw practical power that CL pulls off. Depends on what I need it for, I suppose.",,
2.74358E+17,jesscxc#4846,2021-05-24,what do you think of the speed?,,
3.46868E+17,djeis#0042,2021-05-24,:blobshrug: reasonable for web servers.,,
2.74358E+17,jesscxc#4846,2021-05-24,hmm,,
2.74358E+17,jesscxc#4846,2021-05-24,"I've seen some stuff with Common Lisp for quantum programming, IIRC",,
3.46868E+17,djeis#0042,2021-05-24,"Which is to say, fast enough on average hardware for most computing tasks.",,yea (1)
3.46868E+17,djeis#0042,2021-05-24,"There's a couple companies that are using CL in their custom code for QC, yea.",,dance_party (1)
3.46868E+17,djeis#0042,2021-05-24,dwave wrote their compiler in it.,,
3.46868E+17,djeis#0042,2021-05-24,"CL is... weird, for a lot of reasons üòÖ",,
2.74358E+17,jesscxc#4846,2021-05-24,a mishmash all the way down from my studies of it :p,,
3.46868E+17,djeis#0042,2021-05-24,It's a language where it's reasonable for a small dev team using CL to spend a couple weekends re-implementing something like the clojure stdlib.,,
2.74358E+17,jesscxc#4846,2021-05-24,which can be beautiful in its own way ‚ù§Ô∏è,,
3.46868E+17,djeis#0042,2021-05-24,Reasonable both because they could get a lot of value out of such a thing and because it wouldn't be very difficult üòÖ,,
3.46868E+17,djeis#0042,2021-05-24,You end up with a lot of skyscraper-sized sandcastles.,,
3.46868E+17,djeis#0042,2021-05-24,"Awesome looking and technically impressive projects maintained by shockingly small dev teams that nonetheless seem to fall apart the moment you look at them wrong, because you're using them in a way the original dev didn't intend.",,
6.46114E+17,samth#3420,2021-05-24,@kosengan Racket's ambition is to be the C in the picture,,
6.46114E+17,samth#3420,2021-05-24,"of course, one has never fully achieved one's ambitions, at least not yet",,
6.36577E+17,kosengan#6044,2021-05-24,"imo, Clojure is well designed, have a good community and a great tooling
but it is more of a DSL that chose to go with lisp feel and flavour
A DSL made with three things in mind: Datomic, EDN and JVM
for people who have the itch for that native/pure lisp feel its hard to see 
we are in the scenario where there is even a great debate on whether scheme is an acceptable lisp: https://wiki.c2.com/?IsSchemeLisp
I wonder the kind of treatment that clojure will get in the same circle
it's more of a wider opinion regarding clojure:
https://twitter.com/RAnForr784/status/1389300523648573441",,
2.64024E+17,Eutro#0016,2021-05-24,"What makes a lisp a lisp? Clojure has parenthesised prefix expressions and the source is in lists and symbols, what else is there really to it?",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-24,"if I see many parens and prefix notation, I'll call it a lisp. And you cannot stop me",,üòé (4)
1.56786E+17,williewillus#8490,2021-05-24,"CL people and clinging onto cons cells as the defining quality of a lisp, name a better duo",,üòÜ (2)
2.75501E+17,Plane#0324,2021-05-24,"personally, i think i would try to avoid this sort of classification because i don't really gain anything from deciding if a language is a lisp or not, and socially i think it stands to potentially alienate or otherwise make people unhappy",,üíØ (1)
2.75501E+17,Plane#0324,2021-05-24,"i like racket, it's a good racket for sure",,racketflat (5)
2.81975E+17,Aeva#1234,2021-05-24,"it is aesthetically important for a lisp to have the `car` and `cdr` instructions, to mystify newcomers",,
2.81975E+17,Aeva#1234,2021-05-24,(they don't actually have to do anything though),,
3.5323E+17,Alex Knauth#4895,2021-05-24,`first` and `rest` are better,,
3.5323E+17,Alex Knauth#4895,2021-05-24,`head` and `tail` are better,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-24,how would you call cdr if it's not a list though?,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-24,`second` is more appropriate to `cadr` than to `cdr`,,
3.5323E+17,Alex Knauth#4895,2021-05-24,"My answer to that is I'd rather do what Beginning Student Language does (which is similar to what Clojure does), and make cons-pairs only used as part of lists",,üíØ (1)
2.81975E+17,Aeva#1234,2021-05-24,"oh there's no argument there, first / rest / head / tail /etc are absolutely *better*",,
2.81975E+17,Aeva#1234,2021-05-24,it just lacks the esoteric charm of writing nonsense like `cadadadaadar`,,dance_party (1)
2.66505E+17,notjack#9941,2021-05-24,"üí≠ embedding Brainfuck programs in Racket between c and r, e.g. `c[->+<]r`",,"üòé (4),üòÄ (1)"
2.64024E+17,Eutro#0016,2021-05-24,when's this new DSL coming out?,,
2.66505E+17,notjack#9941,2021-05-24,"when the planets align and open a gateway to hell, where this DSL is currently imprisoned",,ü§£ (3)
6.36577E+17,kosengan#6044,2021-05-24,"for me its:
- s-expressions/cons/car/cdr
- macros
- homoiconicity
-  language written in language itself",,
3.5323E+17,Alex Knauth#4895,2021-05-24,"I don't think the names `cons`, `car`, or `cdr` are important",,plusone (4)
2.66505E+17,notjack#9941,2021-05-24,and there's a _lot_ of lisps not implemented in lisp,,
6.36577E+17,kosengan#6044,2021-05-24,"yeah, its not the names but the functionality",,
4.66395E+17,oaktownsam#0815,2021-05-24,literally was typing this,,
3.5323E+17,Alex Knauth#4895,2021-05-24,"Beginning Student Language and Clojure both have `cons`, `first`, and `rest` behaving mostly like `cons`, `car`, and `cdr`, but with some extra type enforcement to make sure they're proper lists",,
3.5323E+17,Alex Knauth#4895,2021-05-24,"That doesn't make them ""not lisps""",,
2.66505E+17,notjack#9941,2021-05-24,also like. I can't remember the last time I wrote manual list manipulation code like that in racket. I just transduce or use for loops nowadays.,,
3.5323E+17,Alex Knauth#4895,2021-05-24,"I think it's important that even most of the loops here are expression-based, not mutation/side-effect-based",,
3.5323E+17,Alex Knauth#4895,2021-05-24,"Though that's a generally-important thing for functional programming, not specific to lisps",,plusone (1)
4.66395E+17,oaktownsam#0815,2021-05-24,I think I have recently (can't quite remember) but I think I was helping someone with a homework üòÑ,,üòÜ (1)
6.36577E+17,kosengan#6044,2021-05-24,"I'm saying in the POV of giving a ""complete lisp"" feel
- something that you get from Common Lisp/Scheme 
- that also let you be productive - it could be building web/mobile apps,  games, system utilities, ML models etc.,
I myself know some of them that are somewhat niche
- http://lush.sourceforge.net/
- https://fennel-lang.org/
- https://janet-lang.org/
- https://joker-lang.org/",,
2.66505E+17,notjack#9941,2021-05-24,scheme doesn't really give you a lot of that. until r6rs there wasn't even a module system.,,
2.66505E+17,notjack#9941,2021-05-25,"Really I just think of s-expressions as the only truly essential thing for something to be a lisp. Macros, homoiconicity, even linked lists - if a language had s-expressions but not those, I wouldn't describe it as not a lisp to people. I'd say ""it's a lisp, _but_...""",,plusone (1)
2.66505E+17,notjack#9941,2021-05-25,like there's lots of weird little embedded lisps and schemes that don't actually have macro systems,,
4.66395E+17,oaktownsam#0815,2021-05-25,Yeah I've seen some that fairly directly compile to C or some such and don't have higher order functions or user defined macros.,,
4.66395E+17,oaktownsam#0815,2021-05-25,Also those you are supposed to hack on the compiler so you add any macros in the host lang.,,
6.36577E+17,kosengan#6044,2021-05-25,"only if they don't do anything against s-expressions
https://youtu.be/dnz6y5U0tFs?t=2207",,
2.66505E+17,notjack#9941,2021-05-25,`#lang racket` isn't going away and will remain s-expression based,,racket (1)
4.66395E+17,oaktownsam#0815,2021-05-25,There will still be sexps inside.  There is code from old PLT scheme still kicking around in the Core distro.,,
4.66395E+17,oaktownsam#0815,2021-05-25,Actually a great point `#lang racket` cannot change syntactically,,racket (2)
6.36577E+17,kosengan#6044,2021-05-25,"https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format
Does WebAssembly count as a Lisp in this sense?",,
2.66505E+17,notjack#9941,2021-05-25,"no, because people don't really write wasm directly most of the time. I think for something to be a lisp it has to be primarily meant for humans to write and read, not machines to generate",,
2.66505E+17,notjack#9941,2021-05-25,"lisps are programming languages, not instruction set architectures",,
6.36577E+17,kosengan#6044,2021-05-25,"I consider s-expressions as more of a feature than a mere syntax/aesthetics
Matthew Flatt's point that removing s-expressions can help Racket becoming more beginner friendly and drive more adoption is not a bad idea
But that at the same time, it will put an end to mainstream adoption of Lisp
given that, by learning Lisp - you are not learning just an another language but you are learning some key parts of computer development itself
additionally it will largely influence how you learn any other programming language
a language with s-expressions (Racket)is actually fine as a first programming language",,
6.36577E+17,kosengan#6044,2021-05-25,"yes, makes sense; thought the same but just want to get it right üôÇ",,
4.66395E+17,oaktownsam#0815,2021-05-25,"You may have misunderstood.  For the most part how `#lang racket` works now cannot change, because that would break compatibility.",,racket (1)
6.36577E+17,kosengan#6044,2021-05-25,yep!,,
2.66505E+17,notjack#9941,2021-05-25,"yeah, what mflatt was talking about was introducing a new `#lang rhombus`",,
2.66505E+17,notjack#9941,2021-05-25,"racket isn't really driving mainstream adoption of lisp in the first place, clojure is more widely used by an order of magnitude. So I doubt any decisions about rhombus's surface syntax will have much effect on overall mainstream adoption of lisp.",,
4.66395E+17,oaktownsam#0815,2021-05-25,"The whole Rhombus experiment may go nowhere, or the semantic difference between the Racket implementation layer and the Rhombus language layer may become just as hard to deal with as the old C implementation and Racket language.

I think it is important for the people pushing the boundary to test and experiment on this.",,plusone (1)
6.36577E+17,kosengan#6044,2021-05-25,https://bootstrapworld.org/ is one of the examples of how got those thoughts,,üëç (1)
6.36577E+17,kosengan#6044,2021-05-25,"shortly in the same talk, mflatt mentions bringing Racket to WebAssembly
is there any interest in the community on that front?",,
2.66505E+17,notjack#9941,2021-05-25,"yes, there's lots of interest. Interest is different from having the time and energy to actually follow through on all the implementation work though.",,
3.29023E+17,nixin72#3554,2021-05-25,"From a ballpark point of view, this website has Clojure as the 35th most used language on GitHub and Racket as the 114th https://tjpalmer.github.io/languish/",,racket (2)
4.66395E+17,oaktownsam#0815,2021-05-25,Scheme is 59th on that list so ü§®,,
3.29023E+17,nixin72#3554,2021-05-25,So?,,
6.36577E+17,kosengan#6044,2021-05-25,Clojure would be a good choice but I can't wrap my head around how that can be done,,
2.66505E+17,notjack#9941,2021-05-25,good choice for what?,,
3.29023E+17,nixin72#3554,2021-05-25,Compiling Clojure to WASM?,,
6.36577E+17,kosengan#6044,2021-05-25,Clojure as a good choice for WebAssembly language,,
2.66505E+17,notjack#9941,2021-05-25,"yeah there's clojurescript for that specifically, right?",,
6.36577E+17,kosengan#6044,2021-05-25,Rust seems primary and C# is next good language after Rust,,
3.29023E+17,nixin72#3554,2021-05-25,ClojureScript just compiles to JS,,
6.36577E+17,kosengan#6044,2021-05-25,and then golang is good,,
6.36577E+17,kosengan#6044,2021-05-25,"yes, the point of Clojurescript is just about Javascript",,
3.29023E+17,nixin72#3554,2021-05-25,"I mean, not really. It's to have Clojure running in a browser and JavaScript happens to be a necessity for that.",,
2.66505E+17,notjack#9941,2021-05-25,"or at least, it was necessary at the time clojurescript was made",,
3.29023E+17,nixin72#3554,2021-05-25,Yea,,
6.36577E+17,kosengan#6044,2021-05-25,"the whole point of WebAssembly is being able to write apps in languages like C++, Rust, golang, C# etc",,
2.66505E+17,notjack#9941,2021-05-25,web apps,,
6.36577E+17,kosengan#6044,2021-05-25,so doing that in cljs doesn't count much,,
3.29023E+17,nixin72#3554,2021-05-25,"And WASM still can't do everything JS can, and requires JS to get it going, so ClojureScript compiling to JS I'd say is still good for the developer experience",,
6.36577E+17,kosengan#6044,2021-05-25,"maybe more, there is huge effort in  bringing WebAssembly outside the browser",,
3.29023E+17,nixin72#3554,2021-05-25,"Yea, I don't really see the value in WASM outside the browser personally besides that it's a common target that everyone wants to be able to compile to. But WASM is still slower than compiling to native.",,
6.36577E+17,kosengan#6044,2021-05-25,"since things are very early with wasm,
- its hard to seen the value of having wasm outside the browser 
- its efficiency questionable",,
4.66395E+17,oaktownsam#0815,2021-05-25,Because the WASM environment is very spare it's easier to optimize the heck out of what it does compared to javascript.,,
4.66395E+17,oaktownsam#0815,2021-05-25,Also it's a better target than the asm.js hacks,,
3.29023E+17,nixin72#3554,2021-05-25,"Yea, and compared to JS, that makes sense. It makes sense in the context of the browser because everything needs to be compared to JS. But as soon as you leave that, you're looking at a real questionable choice if you wanna compile Rust or C++ or whatever to WASM only to have it run outside a browser. It makes very little sense.",,
6.36577E+17,kosengan#6044,2021-05-25,"it's not that simple straight away
https://clojurescript.org/about/differences#:~:text=true%20in%20ClojureScript).-,Compilation%20and%20Class%20Generation,compilation%20via%20Google%20Closure%20compiler",,
4.66395E+17,oaktownsam#0815,2021-05-25,I've seen one useful thing (https://vector.dev) that uses WASM outside of a browser.  But I think they are probably going to move away from it because they built a DSL that fits better.,,üëç (1)
3.29023E+17,nixin72#3554,2021-05-25,"I'll check it out later, I really should be going to sleep and made the mistake of joining this conversation cause I wanted to add something üòÇ should've waited until morning to read the chat",,üòÜ (1)
6.36577E+17,kosengan#6044,2021-05-25,you need sleep more than lisp,,plusone (1)
3.29023E+17,nixin72#3554,2021-05-25,It's now nearly 1am... Goodnight y'all!,,
2.75501E+17,Plane#0324,2021-05-25,i think it'd be nice to make a game that runs on your desktop or in a browser equally well,,
2.75501E+17,Plane#0324,2021-05-25,"which is not impossible currently, but i do think that is one reason wasm on the desktop could be nice",,
2.75501E+17,Plane#0324,2021-05-25,yay i wrote my first scribble,,üéâ (4)
2.74358E+17,jesscxc#4846,2021-05-25,Interesting. Are there any ideas about other syntaxes that may be better?,,
2.74358E+17,jesscxc#4846,2021-05-25,"eg, I think it's nice to have what version of the language/library (eg something like (as a kind of example) `.metadata language Racket (version 8.1)`))",,
4.66395E+17,oaktownsam#0815,2021-05-25,"Most of the ""Racket Guarantee"" is that nothing in the stable language will be removed, but something are added.  I think there has been some removals in the past few years, but the devs really made sure it was functions/apis that weren't being used.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-25,"do you think racket will ever officially support r7rs, or will it always be left for unaffiliated community members to take care of?",,
4.66395E+17,oaktownsam#0815,2021-05-25,I don't think it will unless a core dev really wants it.  My $0.02 is that even if R7RS is supported it doesn't guarantee cross-compatibility.,,
8.14743E+16,jimpjorps#0001,2021-05-25,racket's diverged sufficiently from scheme that I don't think official r7rs compliance fits in their goals any more,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-25,"> diverged 

but I mean it's the whole racket's idea as a language framework, to be easily adaptable for different language. I don't think compliance should be part of mainstream racket #lang, but bringing it as a separate lang shouldn't be too hard (especially considering it was already done by lexi for r7rs-small; I don't know if / how large can change things to make it significantly harder)",,
8.14743E+16,jimpjorps#0001,2021-05-25,"well that's what I mean, you can implement r7rs in it but that's out of scope for what the racket project is currently doing",,
8.14743E+16,jimpjorps#0001,2021-05-25,they can happily leave that to third parties,,
4.66395E+17,oaktownsam#0815,2021-05-25,"So with R7RS small already there ""all you have to do"" is make implementations for each of the Large dockets/libraries and get them to show up at the correct module R7RS module paths.

Last I remember though it was non-trivial to get the module paths to work out properly.",,
4.66395E+17,oaktownsam#0815,2021-05-25,I recall looking at porting the first large docket a couple years ago and the effort was not worth it for me.,,
2.74358E+17,jesscxc#4846,2021-05-25,"I meant more for new languages, a possibly-different syntax than `#lang` (eg in CodeSpells (Racket-based game), a syntax that may be more beginner-friendly)",,
2.14881E+17,Moinate#6061,2021-05-25,it might be a long list of the versions of everything that got included,,
4.66395E+17,oaktownsam#0815,2021-05-25,"Oh yeah.  I got hung up editing my message I forgot to say:
Part of the Rhombus project is looking at other syntaxes.  Some of the constraints they want to address are ease of use for beginners, but also still have the ability to use powerful macros.",,
4.66395E+17,oaktownsam#0815,2021-05-25,"Here is all of the information you may ever want on Rhombus (a lot of action is in the issues):
https://github.com/racket/rhombus-brainstorming",,
3.5323E+17,Alex Knauth#4895,2021-05-25,"Since I don't like some of the existing syntax proposals in rhombus-brainstorming as much as I like s-expressions:
https://github.com/cwebber/racket2-rfcs/blob/wraith/wraith/wraith.md",,
2.66505E+17,notjack#9941,2021-05-25,very sad there isn't a `let x = y` syntax built in there,,
3.5323E+17,Alex Knauth#4895,2021-05-25,"if someone wanted to they could
```
define-simple-macro
  let x:id (~datum =) e:expr
  define x e
```",,
3.5323E+17,Alex Knauth#4895,2021-05-25,"but this is just a syntax proposal, not a ""which macros are in the standard library"" proposal",,
8.14743E+16,jimpjorps#0001,2021-05-25,"I've been playing with F# recently and I think ""F# syntax without the requirement to be cross-compatible with other .NET languages"" is a model worth considering",,
3.5323E+17,Alex Knauth#4895,2021-05-25,"And it can be used as an alternative reader language, taking a module-language argument in the name way `#lang s-exp` does",,
3.5323E+17,Alex Knauth#4895,2021-05-25,"And I don't want something as simple as an alternative reader language to have `let x = y` syntax built in. Names like `let` should not be special. Symbols like `=` should not be special. It's all still s-expressions, and there should be a 1-to-1 correspondence between ""well-indented"" s-expressions and Wraith expressions",,
2.66505E+17,notjack#9941,2021-05-25,"what I mean is, I think syntax proposals and standard library macro proposals ought to be considered together more",,
2.66505E+17,notjack#9941,2021-05-25,"like it doesn't feel useful to see a syntax proposal that assumes the racket standard library, completely unchanged",,
3.5323E+17,Alex Knauth#4895,2021-05-25,"Speaking of which, the line-and-column counters in the standard library (and in editors such as DrRacket)... I think they should be updated to consider duospace fonts. Like Chinese characters and wide mathematical symbols taking 2 columns instead of 1",,plusone (1)
4.66395E+17,oaktownsam#0815,2021-05-25,For any and all Ubuntu users the Racket PPA has been updated to v8.1,,
2.75501E+17,Plane#0324,2021-05-25,on this topic,,
2.75501E+17,Plane#0324,2021-05-25,i typed üëÄ,,üëÄ (1)
2.75501E+17,Plane#0324,2021-05-25,"(btw, i didn't end that sentence, there is a bug with japanese input in discord that triggers when you type an emoji and doesn't let you finish your input)",,
2.75501E+17,Plane#0324,2021-05-25,i typed üëÄ in drracket and it immediately crashed,,
2.75501E+17,Plane#0324,2021-05-25,"it doesn't crash when i paste it in, though . . .",,
2.75501E+17,Plane#0324,2021-05-25,"whew, opened an issue",,
8.09146E+17,darren#6252,2021-05-26,"hi, 
i am looking for a function that receives a list and an element and returns a new list by adding an element to the given list? in Clojure, `conj` works so, but could not find the equivalent in racket. 
or should i wrap the element in a list like this?
`(append '(1 2 3) (list 4))`",,
2.64024E+17,Eutro#0016,2021-05-26,"In Clojure `conj` just puts it anywhere convenient for the data structure, prepending for a list and appending for a vector",,
2.64024E+17,Eutro#0016,2021-05-26,`cons` will _prepend_ a value for you,,
2.64024E+17,Eutro#0016,2021-05-26,!rkt eval `(cons 1 '(2 3 4))`,,
8.02004E+17,r16#4581,2021-05-26,(1 2 3 4),,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-26,yeah appending elements to end is not something that you commonly do with linked lists in FP,,
8.09146E+17,darren#6252,2021-05-26,I got it. Thanks!,,
2.75501E+17,Plane#0324,2021-05-26,"wow, the bug with üëÄ is already fixed!  thank you @mflatt",,
2.75501E+17,Plane#0324,2021-05-26,i also haven't run into the memory problem in drracket on windows since the glib change,,
2.75501E+17,Plane#0324,2021-05-26,i think i would have normally run into it by now,,üéâ (1)
4.1228E+17,xgqt#8370,2021-05-26,glib?,,
2.75501E+17,Plane#0324,2021-05-26,a bugfix https://github.com/racket/racket/commit/18a95c3ae695da4da236a54e3809465008d5233f,,
4.1228E+17,xgqt#8370,2021-05-26,"ok, so I think it really is about Glib, as in ""GTK library""",,
4.90866E+17,JOST GRANT#1516,2021-05-26,"I mean , I understand why people want this ... but these 's-exps without the parens' efforts have been around ""forever"" and never seem to go anywhere. I'm of two-minds with it -- but think the value-proposition isn't strong enough to have a hard appeal to non-lispers and lispers are fine with the syntax as-is overwhelmingly . :^P",,
8.14743E+16,jimpjorps#0001,2021-05-26,"huh, looks like that might have fixed the problem I ran into occasionally where I'd make an infinite loop by accident and it'd manage to take down drracket and eventually the entire system in the process unless I killed the task in taskmanager",,
3.5323E+17,Alex Knauth#4895,2021-05-26,"I think most of the 's-exps without the parens' proposals make the mistake of alienating lispers too much by splitting it into 2 sets of rules: one set of rules for stuff in parens, and a completely different set of rules for stuff outside of parens. That split prevents you from wrapping a non-parenthesized expression in parentheses without changing the meaning of the expression",,
3.5323E+17,Alex Knauth#4895,2021-05-26,And I think this also alienates non-lispers by making them use parentheses everywhere inside somewhere where they use parentheses even once.,,
3.5323E+17,Alex Knauth#4895,2021-05-26,"Some of them also make the programmer put too much vertical space in order to ""avoid"" using parentheses in places it's perfectly natural to use parentheses in",,
3.5323E+17,Alex Knauth#4895,2021-05-26,"Because the split between those 2 sets of rules makes parentheses ""destructive"" to use, and I don't think they should be. There are many places parens would be natural",,
4.90866E+17,JOST GRANT#1516,2021-05-26,"@Alex Knauth Well for me, I feel like it could be 'mostly solved' without any actual language semantic changes -- like having an editor theme that makes parens ""barely visible"" goes a loooong way from my experience. lol",,
8.14743E+16,jimpjorps#0001,2021-05-26,"yeah, parinfer + s-expr highlighting + lightweight parens helped me out a lot over that initial hurdle of ""wow so many parentheses""",,
3.5323E+17,Alex Knauth#4895,2021-05-26,"Making parens ""barely visible"" might look visually pleasing to some people, but beginning lisp programmers wouldn't be using that and wouldn't want to use that. It would make it harder for them to program in some situations",,
3.5323E+17,Alex Knauth#4895,2021-05-26,"Parinfer can help, but parinfer (at least how I'm using) is kinda janky",,
4.90866E+17,JOST GRANT#1516,2021-05-26,"@Alex Knauth Well not saying it's the perfect solution by any means, but seems like the least-friction to onboard people",,
3.5323E+17,Alex Knauth#4895,2021-05-26,Parinfer was one of the inspirations for Wraith actually,,
2.75501E+17,Plane#0324,2021-05-26,i need parens to be visible because my eyes aren't super great,,
8.14743E+16,jimpjorps#0001,2021-05-26,"my experience is that racket is the first ""real"" language I've been able to sit down and learn, after like one semester of C++ in college years ago and a little bit of Matlab I picked up over the years",,racketflat (1)
8.14743E+16,jimpjorps#0001,2021-05-26,I've tried things like Python and Ruby in the past but I could never really get them to stick in my mind,,
2.75501E+17,Plane#0324,2021-05-26,plus rainbow parens are super pretty,,üëç (1)
8.14743E+16,jimpjorps#0001,2021-05-26,"and I think s-expressions are part of why racket came so much easier for me, the syntax for everything is the same no matter what",,
4.90866E+17,JOST GRANT#1516,2021-05-26,"Overall I'm pretty pessimistic about ""mainstream s-exp Lisp"" adoption; Parens or not at this point, which depresses me because I learned programming in Emacs-Lisp so it's not an inherent deterrent for some people -- but there's just so many freaking hurdles man to get to ""mainstream"" and it's hard for me to understand how much of it's ""real"" and how much of it's social. But even if it's like 90% social, network-effect & perception matters and I don't know how possible it's gonna be to right the ship ...",,
8.14743E+16,jimpjorps#0001,2021-05-26,"it really just seems like institutional inertia, people like what they know and barring that they like what's popular",,
8.14743E+16,jimpjorps#0001,2021-05-26,and everything else is weird,,
8.14743E+16,jimpjorps#0001,2021-05-26,up until it suddenly isn't,,
3.5323E+17,Alex Knauth#4895,2021-05-26,"Parinfer is good at inferring parentheses at the ends of lines, and Wraith adds some inference for parentheses at the beginnings of some expressions to complement that",,
2.75501E+17,Plane#0324,2021-05-26,"well there *is* an advantage to sticking with what you know, it saves effort.  i think a lot of people are aware they have a budget of time, effort, and energy to put into learning things and choose how they want to spend that budget",,
8.14743E+16,jimpjorps#0001,2021-05-26,yeah,,
8.14743E+16,jimpjorps#0001,2021-05-26,it's not totally unreasonable,,
4.90866E+17,JOST GRANT#1516,2021-05-26,"@jimpjorps Yeah, but at a certain point there's so much intertia / pressure where things become impossible to move; I think what really made this resonate with me in-terms of Lisp is all the hype Clojure had and like ... look at it now. It exists, but not really; And certainly not growing substantially if at all. If anything, probably slowly shrinking",,
4.90866E+17,JOST GRANT#1516,2021-05-26,"Honestly I think THE real mainstream ""play"" nowadays would be to make a Lisp around WASM and just have shove HTML & CSS into it. Like say,""Oh, you only have to learn S-Exps and you'll understand the backend, the frontend, and all the logic""",,
8.14743E+16,jimpjorps#0001,2021-05-26,"like plane said, most people just want to use their limited time to Do Work and they don't want to have to dip outside their comfort area for it",,
8.14743E+16,jimpjorps#0001,2021-05-26,"which is why there are still people using PHP, for example",,
4.90866E+17,JOST GRANT#1516,2021-05-26,Guess something like https://github.com/google/schism exists :^P,,
2.75501E+17,Plane#0324,2021-05-26,languages with big mainstream adoption usually have an industry force behind them,,
8.14743E+16,jimpjorps#0001,2021-05-26,yeah,,
4.90866E+17,JOST GRANT#1516,2021-05-26,"I think that's true to an extent; But these languages aren't also really risky .... Java is boring, C# is boring++, Javascript is a bit more wild, Typescript now is a bit more constrained; But they all orbit ""about the same place"" , etc, etc",,
8.14743E+16,jimpjorps#0001,2021-05-26,"then there's things like Rust or Kotlin where everyone's like ""oh these are fantastic, I love it, this is fun, I'd love to use it for work"" and then nothing really happens past wishful thinking because most places are too wedded to C++ or Java to uproot it",,
4.90866E+17,JOST GRANT#1516,2021-05-26,Was literally about to mention Rust; lol. I don't even find Rust too radical; The memory-safety model is novel and has some interesting consequences but it's pretty easy to pick up and doesn't require a completely different mode of thinking if you have so non-trivial RAII x C++ experience imo -- if anything I'd argue the modern-tooling is a bigger game-changer for people coming from this space. lol,,
4.90866E+17,JOST GRANT#1516,2021-05-26,"And I'd count Kotlin as nicer ""boring++"" tbh. lol",,
8.14743E+16,jimpjorps#0001,2021-05-26,yeah,,
8.14743E+16,jimpjorps#0001,2021-05-26,"even the little incremental improvements end up on the ""maybe someday"" list",,
4.90866E+17,JOST GRANT#1516,2021-05-26,"My point is, what's popular isn't typically ""too radical"" and/or out there because these companies don't want to *risk* large amount of capital into to technologies that has a good chance of not catching on. So you end up staying pretty close to the center of what's popular with very slight deviations",,
8.14743E+16,jimpjorps#0001,2021-05-26,even like Python 2 to Python 3 is a famous exercise in inertia,,
4.90866E+17,JOST GRANT#1516,2021-05-26,@jimpjorps I'm a passive fan of Scala; And the recent release of Scala3 has been racked with REAL fear-uncertainty-and-doubt (lol) about whether they'd be in a similar situation. Especially since the difference between Scala2/Scala3 & Python2/Python3 is MUCH more significant. Scala3 is a new lang in a lot of ways.,,
4.90866E+17,JOST GRANT#1516,2021-05-26,Luckily they've done some impressive work to makes this in-theory a nonissue,,
2.81975E+17,Aeva#1234,2021-05-26,seems like it would have a better payoff (albeit a lot more work) to make a good frontend for a popular language than it would be to invent a new one,,
4.90866E+17,JOST GRANT#1516,2021-05-26,@Aeva For which lang; Scala or Racket?,,
2.81975E+17,Aeva#1234,2021-05-26,"racket, idk anything about scala",,
3.5323E+17,Alex Knauth#4895,2021-05-26,"but what makes a ""good frontend"" for Racket? That's what I want Wraith to become, I guess, without straying too far from the benefits of s-expressions",,
2.81975E+17,Aeva#1234,2021-05-26,"I should clarify: I don't mean to say that racket the language itself is not a good language in its own right, or that it should be replaced",,
4.90866E+17,JOST GRANT#1516,2021-05-26,I mean I think the issue is having a frontend for an already popular language; Is that people have expectations -- and that Racket then just becomes a new host-language that say Python could transpile to. It kinda diminishes the value of said host-lang because people will always compare it to what's being hosted.,,
2.81975E+17,Aeva#1234,2021-05-26,"oh yeah, compatibility would be a beast",,
8.14743E+16,jimpjorps#0001,2021-05-26,people aren't really busting down the doors to use Hy,,
4.90866E+17,JOST GRANT#1516,2021-05-26,"It's not even compatibility to me; When I'm using Python for example I don't care what it's hosted on (there's many different implementations) -- but whatever is implementing it, HAS to behave like Python or I assume the implementation and/or target it's being hosted on stinks. If you say ""Python now runs on Racket"" (or whatever existing language) people will expect things to work 1:1 and don't know how realistic of an expectation that is ... because the ecosystems and ethos in-general are very different",,
4.90866E+17,JOST GRANT#1516,2021-05-26,@Aeva Also keep in mind a majority (afaict) of the spearheads of Racket are academics; So the value-proposition may be and often is different than being mainstream-at-any-costs,,
2.81975E+17,Aeva#1234,2021-05-26,"I don't think python would be a good choice to translate to racket under the hood, because you can just link to the dll via the ffi",,
2.66505E+17,notjack#9941,2021-05-26,"yeah the vibe I got from when non-s-exp syntax was first brought up at racketcon wasn't ""this is so we can be mainstream"" it was ""I am sick of having to explain s-exps to my students""",,
3.5323E+17,Alex Knauth#4895,2021-05-26,Okay but trees are still awesome,,
4.90866E+17,JOST GRANT#1516,2021-05-26,@Aeva Well using that as an example of 'one of the most mainstream languages'; Think that pattern applies to most if-not-all langs I can think of with any mindshare,,
2.66505E+17,notjack#9941,2021-05-26,trees are indeed very awesome,,
3.5323E+17,Alex Knauth#4895,2021-05-26,And s-exps as arbitrary-arity trees is a powerful idea,,
4.90866E+17,JOST GRANT#1516,2021-05-26,"Well one of the most mainstream, that happen to also be regarded as one of the most user-friendly",,
2.75501E+17,Plane#0324,2021-05-26,"is the phrase ""mainstream at any cost"" a reference to haskell's slogan ""avoid success at all costs""?",,
8.14743E+16,jimpjorps#0001,2021-05-26,"a student's reaction to lisp-like syntax is extremely biased based on whether or not they've ever seen written code before, it's funny to see complete novices plugging away at it without a second thought while people with a little bit of python or java under their belts are grabbing their temples in pain",,
4.90866E+17,JOST GRANT#1516,2021-05-26,"@notjack There's always Dylan; loool (Non-ironically have been looking into it more -- and besides being a bit verbose, I do really like it)",,
2.75501E+17,Plane#0324,2021-05-26,i thought dylan looked pretty neat!  but i haven't used it,,
3.5323E+17,Alex Knauth#4895,2021-05-26,"I don't want to lose any of that simplicity by switching to ""shrubbery"", I think Wraith is better because it's closer to the simplicity of s-exps as arbitrary-arity trees",,
2.75501E+17,Plane#0324,2021-05-26,one of the things i liked a lot about shrubbery was `|` syntax,,
2.81975E+17,Aeva#1234,2021-05-26,"you know, I think maybe we're approaching this all wrong.  what if we added more parenthesis",,üòè (1)
2.81975E+17,Aeva#1234,2021-05-26,we've got all these lovely unicode brackets that nobody is even using http://xahlee.info/comp/unicode_matching_brackets.html,,
3.5323E+17,Alex Knauth#4895,2021-05-26,not on standard keyboards,,
2.66505E+17,notjack#9941,2021-05-26,„Äé this set of brackets I primarily associate with JRPGs and tbh I want that vibe in a programming language „Äè,,‚ù§Ô∏è (1)
2.75501E+17,Plane#0324,2021-05-26,lol,,
4.90866E+17,JOST GRANT#1516,2021-05-26,"@Plane Housel (main and often sole compiler dev) has been working on moving everything to LLVM Bitcode and has been doing some cool stuff with the debugger. It's really crusty around the edges, really two part-time hobby devs for about 15 years; But there is a LOT OF REALLY COOL STUFF opendylan inherited when they were opensourced , including DUIM basically a more modern CLIM in Dylan, Deuce an emacs-like editor built on it, an IDE (that needs a lot work ... but hey, it boots (well in windows lol))).",,
2.66505E+17,notjack#9941,2021-05-26,"with ctrl-c and ctrl-v, _anything_ is on a standard keyboard üòâ",,
3.5323E+17,Alex Knauth#4895,2021-05-26,even images of Rockets... yeah I've seen that demo in class,,
2.81975E+17,Aeva#1234,2021-05-26,same,,
2.75501E+17,Plane#0324,2021-05-26,the first thing i think of when i see „Äé„Äè is book titles,,
8.14743E+16,jimpjorps#0001,2021-05-26,,https://cdn.discordapp.com/attachments/618895179343986688/847222007946280991/space-cadet_keyboard_6.png,
2.81975E+17,Aeva#1234,2021-05-26,aaaah you beat me to it,,
3.5323E+17,Alex Knauth#4895,2021-05-26,but it's not very convenient for such a ubiquitous structure marker,,
4.90866E+17,JOST GRANT#1516,2021-05-26,Wish Symbolics styled Lisp-Machine keyboards were still around; Where you had all those crazy math-notation symbols under a hyper-key or whatever,,
4.90866E+17,JOST GRANT#1516,2021-05-26,So hard to type non-standard chars on a modern us qwerty keyboard,,
2.81975E+17,Aeva#1234,2021-05-26,people use the lambda symbol all the time and that isn't on standard keyboards either,,
2.66505E+17,notjack#9941,2021-05-26,and it's used pretty often too,,
3.5323E+17,Alex Knauth#4895,2021-05-26,but Œª isn't ever the *only option* for that... people that don't know how can always use `fn` or `lambda`,,
6.87833E+17,grey#8674,2021-05-26,Agda programmers use *heavy* mathematical notation and don‚Äôt have trouble with input because of good editor support.,,
4.90866E+17,JOST GRANT#1516,2021-05-26,Lamb baaaah üêë da (disappointed there's no lamb emote) lool,,
8.14743E+16,jimpjorps#0001,2021-05-26,,https://cdn.discordapp.com/attachments/618895179343986688/847222621203857458/unknown.png,
2.75501E+17,Plane#0324,2021-05-26,i can type all of those with japanese input hehe,,
4.90866E+17,JOST GRANT#1516,2021-05-26,If we really cared about it; Custom keyboards are a big-enough niche where a company could / would easily put one out tbh,,
2.75501E+17,Plane#0324,2021-05-26,"`ramuda` is Œª, `subete` is ‚àÄ, `mataha` is ‚à® etc",,
8.14743E+16,jimpjorps#0001,2021-05-26,oh huh I didn't even think about the last two,,
2.66505E+17,notjack#9941,2021-05-26,"[shameless self-plug] y'know, tools like `resyntax` make unicode symbols in source more practical since you can have the editor suggest rewriting their non-unicode aliases to the unicode symbols",,üëç (2)
2.81975E+17,Aeva#1234,2021-05-26,"i'm sure if dr racket made it easy it would be fine.  i am not at all worried about the resilliance of users of emacs, the other lisp editor.",,
4.90866E+17,JOST GRANT#1516,2021-05-26,Okay dinner time; Talk to y'all later. o/,,üëã (3)
6.87833E+17,grey#8674,2021-05-26,"For years now, I‚Äôve been meaning to update the list of LaTeX shorthands for DrRacket to be more complete.",,
2.75501E+17,Plane#0324,2021-05-26,"uh huh, they are mostly pretty intuitive i think but it might depend on your input method's dictionary",,
8.14743E+16,jimpjorps#0001,2021-05-26,for vscode https://github.com/gatapia/unicode-math-vscode is pretty good for arbitrary characters that have latex commands,,üëç (1)
2.75501E+17,Plane#0324,2021-05-26,ooh that seems nice,,
2.75501E+17,Plane#0324,2021-05-26,gosh i still recognize pitfall harry lol,,
2.75501E+17,Plane#0324,2021-05-26,brain still mostly working decades later,,
8.14743E+16,jimpjorps#0001,2021-05-26,god my vscode extensions list is a mess,,
8.14743E+16,jimpjorps#0001,2021-05-26,all the random shit I've tried,,
4.66395E+17,oaktownsam#0815,2021-05-26,Ok @Alex Knauth has convinced me to read the Wraith proposal again.,,
4.66395E+17,oaktownsam#0815,2021-05-26,I actually would be fine with a syntax with { } and semicolons though,,
2.75501E+17,Plane#0324,2021-05-26,"syntax isn't *unimportant*, but ultimately it doesn't matter that much to me as long as it doesn't get in my way",,
2.75501E+17,Plane#0324,2021-05-26,"or confuse me horribly, which is also a thing",,
2.75501E+17,Plane#0324,2021-05-26,i joined the racket slack but i can't make the text as big as discord,,
2.75501E+17,Plane#0324,2021-05-26,it looks like i can do custom css though,,
7.3854E+17,theca#7939,2021-05-26,can someone try to explain the purpose and/or point of making pairs and mutable pairs separate datatypes,,
2.66505E+17,notjack#9941,2021-05-26,I think there's a racket blog post about this from when they first made that transition,,
2.66505E+17,notjack#9941,2021-05-26,found it! https://blog.racket-lang.org/2007/11/getting-rid-of-set-car-and-set-cdr.html,,
2.66505E+17,notjack#9941,2021-05-26,"key paragraphs:

> The designers of PLT Scheme long ago recognized the problems of mutable pairs, and we introduced functions like `cons-immutable` and `list-immutable` to support programming with immutable lists. These additions solved some problems ‚Äî but only in the cases where we were careful to use immutable lists. The R6RS editors also recognized the problems of mutable pairs, so that `set-car!` and `set-cdr!` were banished to their own library ‚Äî but programmers are still free to use that library.
> 
> While these are worthwhile steps for many reasons, they do not solve the underlying problem. Library implementors who deal in lists must still either set up elaborate guards against mutation, pretend that the problem doesn‚Äôt matter, or require the use of a special immutable-list datatype that is incompatible with libraries whose authors set up elaborate guards or ignore the problem.",,
7.3854E+17,theca#7939,2021-05-26,perhaps understandable,,
7.3854E+17,theca#7939,2021-05-26,"im tryna write scheme, and im grateful that racket lets you silver tape rnrs libraries on so you can do that",,
2.75501E+17,Plane#0324,2021-05-26,"#`'#, is a little intimidating",,plusone (2)
3.5323E+17,Alex Knauth#4895,2021-05-26,"at least it hasn't grown to ``#`'#,#'#,``, not yet anyway",,
2.75501E+17,Plane#0324,2021-05-26,lol,,
2.75501E+17,Plane#0324,2021-05-26,i'm trying to understand what i'm doing instead of just imitating stuff that works,,
2.75501E+17,Plane#0324,2021-05-26,i have this function,,
2.75501E+17,Plane#0324,2021-05-26,"```scheme
(define-syntax (get-struct-field-names stx)
  (syntax-case stx ()
    [(_ id) #`'#,(struct-field-info-list
                  (syntax-local-value #'id))]))
```",,
2.75501E+17,Plane#0324,2021-05-26,i've unpacked it mentally to `(quasisyntax (quote (unsyntax ...`,,
2.75501E+17,Plane#0324,2021-05-26,now i'm just trying to figure out why i'm actually doing that,,
2.75501E+17,Plane#0324,2021-05-26,i know it's analogous to quasiquote and unquote (but i actually almost never use those!),,
3.5323E+17,Alex Knauth#4895,2021-05-26,Think about what `(list 'quote (struct-field-info-list ....))` would do,,
2.66505E+17,notjack#9941,2021-05-26,"`(struct-field-info-list ...)` produces a list of symbols. But `get-struct-field-names` is a macro, and macros need to return syntax objects. So ``#`'#,list-of-symbols`` is a way to turn a list of symbols like `(list 'foo 'bar 'baz)` into the syntax object representing the expression `'(foo bar baz)`",,
2.75501E+17,Plane#0324,2021-05-26,oh! something just clicked,,
2.75501E+17,Plane#0324,2021-05-26,i didn't understand what `quote` was doing there,,
2.66505E+17,notjack#9941,2021-05-26,"yeah, with the quote, this code:
```scheme
(struct foo (a b c))
(get-struct-field-names foo)
```
expands into
```scheme
(struct foo (a b c))
'(a b c)
```
but without the quote it expands into
```scheme
(struct foo (a b c))
(a b c)
```
which doesn't compile because it thinks you're trying to call a function named `a`",,
2.66505E+17,notjack#9941,2021-05-26,"fwiw I think that's a confusing way to write that macro. I'd rather write it like this:
```scheme
(define-syntax-parse-rule (get-struct-field-names id:id)
  #:with (field-id ...) (struct-field-info-list (syntax-local-value #'id))
  '(field-id ...))
```",,
2.75501E+17,Plane#0324,2021-05-26,i managed to write a working macro without understanding why it worked,,
2.75501E+17,Plane#0324,2021-05-26,i'm not familiar with `define-syntax-parse-rule` at all yet,,
2.75501E+17,Plane#0324,2021-05-26,"but the `:id` gives me some error checking for free, right?",,
2.75501E+17,Plane#0324,2021-05-26,"the syntax does seem pretty intuitive though, i can understand it even though i haven't used it yet",,
2.66505E+17,notjack#9941,2021-05-26,"yeah, it's just like `define-syntax-rule` except it gives you syntax classes (the `:id` part) and it lets you use some keywords to do certain things. like `#:with <pattern> <expr>` is short for wrapping the macro body in `with-syntax`",,
2.75501E+17,Plane#0324,2021-05-26,ah!  i just learned a little bit about syntax classes,,
2.75501E+17,Plane#0324,2021-05-26,i want to rework some of my macros using them,,
2.75501E+17,Plane#0324,2021-05-26,it's going to take me a little time to learn this macro system (:,,
2.75501E+17,Plane#0324,2021-05-26,thank you both @notjack @Alex Knauth,,üíñ (2)
2.75501E+17,Plane#0324,2021-05-26,"i'm basically learning by doing, so i'm producing some code that may not be 100% perfect lol",,
2.66505E+17,notjack#9941,2021-05-26,"the two most useful syntax classes are `:id` and `:expr`. the former matches identifiers, the latter matches everything except keywords. that's useful because if your macro has optional keyword arguments, you can use `:expr` to make sure that if people use your keyword argument wrong it doesn't accidentally get interpreted as an expression instead.",,
2.66505E+17,notjack#9941,2021-05-26,oh and `~seq` is a _really_ useful feature,,
2.66505E+17,notjack#9941,2021-05-26,"example:
```scheme
(define-syntax-parse-rule (assoc-list (~seq key:expr value:expr) ...)
  (list (cons key value) ...))

(assoc-list 'foo 1 'bar 2 'baz 3)
;; the above is equal to '((foo . 1) (bar . 2) (baz . 3))
```",,
2.75501E+17,Plane#0324,2021-05-26,but if you were to give it an odd number of arguments,,
2.66505E+17,notjack#9941,2021-05-26,it would be a parse error,,
2.75501E+17,Plane#0324,2021-05-26,it would frown,,
2.66505E+17,notjack#9941,2021-05-26,not sure what the message would be,,
2.66505E+17,notjack#9941,2021-05-26,lets find out!,,
2.66505E+17,notjack#9941,2021-05-26,"!rkt eval
```scheme
(define-syntax-parse-rule (assoc-list (~seq key:expr value:expr) ...)
  (list (cons key value) ...))

(assoc-list 'foo 1 'bar 2 'baz)
```",,
8.02004E+17,r16#4581,2021-05-26,":warning: stderr:
eval:1:65: ...: ellipses not allowed as an expression
  in: ...
  context...:
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:697:9: loop",,
2.66505E+17,notjack#9941,2021-05-26,oops,,
2.66505E+17,notjack#9941,2021-05-26,right,,
2.66505E+17,notjack#9941,2021-05-26,"!rkt eval
```scheme
(require syntax/parse/define)

(define-syntax-parse-rule (assoc-list (~seq key:expr value:expr) ...)
  (list (cons key value) ...))

(assoc-list 'foo 1 'bar 2 'baz 3)
```",,
8.02004E+17,r16#4581,2021-05-26,((foo . 1) (bar . 2) (baz . 3)),,
2.66505E+17,notjack#9941,2021-05-26,"!rkt eval
```scheme
(require syntax/parse/define)

(define-syntax-parse-rule (assoc-list (~seq key:expr value:expr) ...)
  (list (cons key value) ...))

(assoc-list 'foo 1 'bar 2 'baz)
```",,
8.02004E+17,r16#4581,2021-05-26,":warning: stderr:
eval:6.0: assoc-list: expected more terms starting with expression
  at: ()
  within: (assoc-list (quote foo) 1 (quote bar) 2 (quote baz))
  in: (assoc-list (quote foo) 1 (quote bar) 2 (quote baz))
  context...:
   /usr/local/racket/collects/syntax/parse/private/runtime-report.rkt:731:0: error/report
   /usr/local/racket/collects/syntax/parse/private/runtime-report.rkt:28:0: call-current-failure-handler
   /usr/local/racket/collects/syntax/parse/define.rkt:14:9",,
4.66395E+17,oaktownsam#0815,2021-05-27,It's probably been covered but if possible you probably want to avoid quasisyntax.  It's almost always easier to figure out what you did 3 months later when it isn't there.,,
2.75501E+17,Plane#0324,2021-05-27,oh i see,,
2.75501E+17,Plane#0324,2021-05-27,i only recently discovered `syntax-parse`,,
4.66395E+17,oaktownsam#0815,2021-05-27,I have similar feelings about quasiquote,,
2.75501E+17,Plane#0324,2021-05-27,i've heard that expressed about quasiquote but i just haven't really run into a case where i wanted to use it,,
2.66505E+17,notjack#9941,2021-05-27,"yeah, `#:with` and `with-syntax` are your friend",,
2.75501E+17,Plane#0324,2021-05-27,at least so far there's always been another way for me to write things,,
2.75501E+17,Plane#0324,2021-05-27,ok those two are new to me,,
2.66505E+17,notjack#9941,2021-05-27,"`with-syntax` is like `let`, except instead of declaring variables, it declares template variables, which get inserted into quoted syntax objects",,
4.66395E+17,oaktownsam#0815,2021-05-27,Using pattern variables is definitely tricky at first,,
4.66395E+17,oaktownsam#0815,2021-05-27,"!rkt eval
```
(syntax-case #'(a b c d) () [(w x y z) w])
```",,
8.02004E+17,r16#4581,2021-05-27,":warning: stderr:
eval:2:39: w: pattern variable cannot be used outside of a template
  in: w",,
4.66395E+17,oaktownsam#0815,2021-05-27,"!rkt eval
```
(syntax-case #'(a b c d) () [(w x y z) #'w])
```",,
8.02004E+17,r16#4581,2021-05-27,#<syntax:eval:2:16 a>,,
2.66505E+17,notjack#9941,2021-05-27,"like, just how you'd break up a complex expression with let:
```scheme
;; instead of
(f (g a b) (h c d))
;; you can write
(let ([x (g a b)]
      [y (h c d)])
  (f x y))
```
you can break up a complex syntax object with `with-syntax`:
```scheme
;; instead of
#`(foo #,(do-something) #,(do-other-thing))
;; you can write
(with-syntax ([x (do-something)]
              [y (do-other-thing)])
  #'(foo x y))
```",,
2.75501E+17,Plane#0324,2021-05-27,ohh that helps a lot,,
4.66395E+17,oaktownsam#0815,2021-05-27,"Also it is a ""mini-matcher"" so you could write things like:
```scheme
(define-syntax my-let
  (lambda (stx)
    (syntax-case stx ()
      [(_ bindings body ...)
       (with-syntax ([((var expr) ...) #'bindings])
         #'((lambda (var ...) body ...) expr ...))])))
```",,
4.66395E+17,oaktownsam#0815,2021-05-27,"(Note: that is not a great macro because it would be 100x better in syntax-parse, because it would have better error reporting etc.)",,
2.66505E+17,notjack#9941,2021-05-27,"yeah you can do this:
```scheme
(with-syntax ([(x ...) (list #'a #'b #'c)])
  #'(f x ...))
;; the above evaluates to #'(f a b c)
```",,
2.66505E+17,notjack#9941,2021-05-27,"that is, each `with-syntax` clause is a `[pattern expr]` pair, and the `pattern` doesn't have to just be an identifier. it can use ellipses, parens, etc. the same kind of pattern you'd have in `syntax-rules` / `syntax-case` / `syntax-parse`.",,
2.75501E+17,Plane#0324,2021-05-27,"so, as a newcomer, i think one of the intimidating things is that there's more than one way to do things, but it isn't immediately obvious that there's a hierarchy, like ""the community believes X is best, Y is ok but slightly older and not quite as clear, and Z is the really old way we don't want you to do it""",,
2.75501E+17,Plane#0324,2021-05-27,and it can be a little tricky to keep track of which is which,,
2.75501E+17,Plane#0324,2021-05-27,`syntax-parse` does seem very neat though!,,
2.66505E+17,notjack#9941,2021-05-27,oh absolutely,,
2.66505E+17,notjack#9941,2021-05-27,"we only need one macro system, not three",,
2.75501E+17,Plane#0324,2021-05-27,"when you start reading about macros in the racket guide, it starts by introducing `syntax-rules`",,
2.66505E+17,notjack#9941,2021-05-27,yup. somebody please fix that.,,
2.75501E+17,Plane#0324,2021-05-27,soooo that's what i started with.  :D,,
4.66395E+17,oaktownsam#0815,2021-05-27,For simple macros though `syntax-rules` is good though,,
4.66395E+17,oaktownsam#0815,2021-05-27,"I think it's subjective, but I would rate `syntax-parse` > `syntax-rules` > `syntax-case`",,plusone (1)
4.66395E+17,oaktownsam#0815,2021-05-27,There is pretty much no reason to have `syntax-case` anymore I think since you can do everything it does better in `syntax-parse`,,
2.66505E+17,notjack#9941,2021-05-27,"yeah, I've considered writing resyntax rules to just suggest replacing `syntax-case` with `syntax-parse`",,
4.66395E+17,oaktownsam#0815,2021-05-27,"@Plane for learning macros you might like this set of tutorials:
http://rmculpepper.github.io/malr/index.html",,
4.66395E+17,oaktownsam#0815,2021-05-27,by the author of the macro stepper and `syntax-parse`,,
4.66395E+17,oaktownsam#0815,2021-05-27,"They are pretty close.  I think the only ""hard"" part would be `syntax-case` macros that use a guard clause.",,
2.66505E+17,notjack#9941,2021-05-27,some data about what guard clauses typically look like would help,,
2.66505E+17,notjack#9941,2021-05-27,"if many of them could be replaced with syntax classes, that'd be pretty great",,
4.66395E+17,oaktownsam#0815,2021-05-27,"I think the most common would be something like
`[(_ v e body ...) (identifier? v) #'(the stuff ....)]`",,
2.75501E+17,Plane#0324,2021-05-27,oh!  i haven't seen that yet,,
4.66395E+17,oaktownsam#0815,2021-05-27,otherwise you could just use the `#:when` pattern directive,,
2.75501E+17,Plane#0324,2021-05-27,the racket guide links to greg hendershott's *fear of macros*,,
2.75501E+17,Plane#0324,2021-05-27,in the third paragraph here https://docs.racket-lang.org/guide/macros.html,,
4.66395E+17,oaktownsam#0815,2021-05-27,I think Ryan's guide is newish?,,
2.75501E+17,Plane#0324,2021-05-27,would it make sense to add a link to ryan culpepper's guide there too?,,
2.75501E+17,Plane#0324,2021-05-27,i'm one step closer to understanding how `struct-define` works!,,
2.75501E+17,Plane#0324,2021-05-27,i think the best thing i can do now is read the docs on `syntax-parse`,,
2.75501E+17,Plane#0324,2021-05-27,"the ""pattern directives"" section seems to have some goodies",,
2.66505E+17,notjack#9941,2021-05-27,there's an examples section too that's really handy,,
2.66505E+17,notjack#9941,2021-05-27,https://docs.racket-lang.org/syntax/stxparse-examples.html,,
2.75501E+17,Plane#0324,2021-05-27,"ok so, when someone writes `(define-syntax foo (syntax-rules ()))`",,
2.75501E+17,Plane#0324,2021-05-27,"that is a macro, but with no cases, so it can never match any cases and returns a syntax error if used?",,
2.75501E+17,Plane#0324,2021-05-27,so i guess you would do that to give people an error message if they use `foo` in the wrong spot,,
2.66505E+17,notjack#9941,2021-05-27,yup,,
2.66505E+17,notjack#9941,2021-05-27,"though for making macros that give errors like that, I usually just do this:
```scheme
(define-syntax (foo stx)
  (raise-syntax-error #false ""cannot use foo outside of a bar form"" stx))
```",,plusone (1)
2.75501E+17,Plane#0324,2021-05-27,"that does look friendlier than ""bad syntax""",,
2.75501E+17,Plane#0324,2021-05-27,"oh gosh, `struct-define` doesn't use `struct-field-info-list` (which i gather was added fairly recently?), it goes through the list of bindings like `point-x` and `point-y`, then chops out the `point-` part to get the list of field names",,
2.75501E+17,Plane#0324,2021-05-27,that's exciting,,
2.75501E+17,Plane#0324,2021-05-27,i converted it to use `struct-field-info-list` instead,,
2.75501E+17,Plane#0324,2021-05-27,so this part right here,,
2.75501E+17,Plane#0324,2021-05-27,"```scheme
     (for/list ([field-name (in-list field-names)]
                [field-ref (in-list (list-ref si 3))]
                [field-set (in-list (list-ref si 4))])
       (define field-name-stx (datum->syntax stx field-name))
       (list field-name-stx field-ref field-set))
```",,
2.75501E+17,Plane#0324,2021-05-27,i have to pass it through `datum->syntax` to make it happy,,
2.75501E+17,Plane#0324,2021-05-27,is there any kind of naming convention i can use here for `field-name` and `field-name-stx`?  i just made up this `-stx` convention and i'm not sure if it's good,,
4.66395E+17,oaktownsam#0815,2021-05-27,`-stx` is almost a convention so it is a quite good choice,,
2.75501E+17,Plane#0324,2021-05-27,yay,,
2.64024E+17,Eutro#0016,2021-05-27,stx and stones may break my bones,,"ü•¢ (3),ü™® (3),üíÄ (3)"
2.75501E+17,Plane#0324,2021-05-27,lol,,
2.75501E+17,Plane#0324,2021-05-27,<https://github.com/plane/struct-define/commit/1004a37d68ddb3d22fd2fca5b43590627d4d784e>,,
2.75501E+17,Plane#0324,2021-05-27,"now, that might not be a super useful change, but it's pretty useful to me because now i understand how this thing works! (:",,
2.75501E+17,Plane#0324,2021-05-27,"i don't know if i should submit a pull request because, from a user's perspective, it just increases the minimum required version of `base` to use the package",,
2.66505E+17,notjack#9941,2021-05-27,yeah I'd suggest doing it,,
2.66505E+17,notjack#9941,2021-05-27,"for one thing, the old way of associating field names and accessor names is, if I remember correctly, broken",,
2.66505E+17,notjack#9941,2021-05-27,there was some github issue thread about it,,
2.66505E+17,notjack#9941,2021-05-27,it's unhygienic in a bad way,,
2.75501E+17,Plane#0324,2021-05-27,i also added a `#:prefix` keyword arg to `struct-define`,,
2.75501E+17,Plane#0324,2021-05-27,"```scheme
> (struct point (x y) #:transparent)
> (define p (point 2 3))
> (let ()
    (struct-define point p)
    (+ x y))
5
> (let ()
    (struct-define point p #:prefix)
    (+ p.x p.y))
5
```",,
2.75501E+17,Plane#0324,2021-05-27,next maybe a separator argument so you can choose something other than `.`?,,
2.75501E+17,Plane#0324,2021-05-27,i added it,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-27,this video was quite insightful. Why is it unlisted? What other good stuff are you hiding from us? üò¶,,
2.75501E+17,Plane#0324,2021-05-27,"```scheme
> (with (p : point
         q : point)
    (+ p.x q.x))
5
> (define/with (distance p q)
    p : point
    q : point
    (sqrt
     (+ (sqr {p.x - q.x})
        (sqr {p.y - q.y}))))
> (distance (point 2 3)
            (point 3 4))
1.4142135623730951
```
whee",,üéâ (2)
3.5323E+17,Alex Knauth#4895,2021-05-27,"For syntax-case `[(_ v e body ...) (identifier? v) #'(the stuff ....)]`, the obvious transformation would be syntax-parse `[(_ v e body ...) #:when (identifier? v) #'(the stuff ....)]`... using syntax classes like `[(_ v:id e body ...) #'(the stuff ....)]` would be icing on top of the cake",,plusone (1)
4.90866E+17,JOST GRANT#1516,2021-05-27,"Is Pict3D still the ""best"" option to dip into 3D development , right now? Been looking around and sadly there doesn't look like much in this space.",,
2.14881E+17,Moinate#6061,2021-05-27,you might want to say a little more about what you want to do to get good recs.,,
2.14881E+17,Moinate#6061,2021-05-27,"answers might be different if you're trying to do something with an externally generated mesh? actually i don't even know what you'd do in this case, but tell us the story of what you're thinking",,
4.90866E+17,JOST GRANT#1516,2021-05-27,"Really anything sitting on-top of just basic opengl  / vulkan bindings (do know these exist); I know next-to-nothing about 3D development and kinda want a low-barrier-to-entry to maybe start doing some basic ""demos"" ((think 'games' might be pushing it)) lol",,
4.90866E+17,JOST GRANT#1516,2021-05-27,Somewhat considering making Godot bindings; But haven't really messed with Godot enough to know if this is actually a 'good option' to peruse.,,
4.90866E+17,JOST GRANT#1516,2021-05-27,Completely unrelated; But is swindle still usable or should I just try to use something like Guile's GOOP nowadays if I want to dig into OO non-trivially?,,
2.14881E+17,Moinate#6061,2021-05-27,"I've made ""basic demo"" level animations using `pict3d/universe` and the barrier to entry is lots lower than straight OpenGL. I dont know about other options.",,
4.90866E+17,JOST GRANT#1516,2021-05-27,"@Moinate Yeah, that's been my intuition with barely playing around with it; I'm worried about concept overload and basically me going ""too hard"" and giving up real quick (which is where I'm at I think right now with OpenGL & Vulkan proper). lol  Only thing thing that has me 'on edge' is that it hasn't been touched in like 4 years at this point. Seems like it's still bootable / fine but worried about some incompatible change at somepoint that I'm not going to know how to rectify. :^P",,
2.14881E+17,Moinate#6061,2021-05-27,for beginner sketching out games and stuff i wouldn't worry about making sure it will run forever,,
4.90866E+17,JOST GRANT#1516,2021-05-27,"Guess that's fair; lool

By nature, I'm* overly cautious with this kind of stuff. But I guess I **actually** cared about things working long-term I'd be more boring and do all-in on Java or something.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-27,"idk, proper 3D looks to me the kind of scenario where you pick lib/framework first and adapt with the language, rather than pick language first and look for libs",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-05-27,"personally if I wanted to do something serious in 3D with racket, I'd probably go with fully wrapping out raylib",,
4.90866E+17,JOST GRANT#1516,2021-05-27,"@Techno Chess, Atomic variation Well, I think it depends how low-level and/or tied to an ecosystem you want to be. Raylib bindings though, I didn't even think about. That'd be pretty neat; Yeah.",,
4.66395E+17,oaktownsam#0815,2021-05-27,The vulkan bindings are a bit rough and you would probably end up learning a lot of Racket FFI and Vulkan if you used them.,,
4.66395E+17,oaktownsam#0815,2021-05-27,"I think swindle still works, but you'll probably see some friction if you are trying to get it to work in the rest of the Racket environment.

Most OO in Racket now is single dispatch with two flavors:
1. `racket/class` which is comparable to Python or Java OOP
2. `racket/generic` which is similar to CLOS generic functions attached to structs",,
4.66395E+17,oaktownsam#0815,2021-05-27,If you really really want CLOS style OO then I think Swindle is the most complete option.,,
4.90866E+17,JOST GRANT#1516,2021-05-27,"Okay, will keep that in mind re: Swindle; I mostly want to use it as a learning experience for a CLOS-like system since I have VERY-VERY limited experience with 'CLOS proper' in CL & have pretty much decided to go all-in on Racket until the end of the year -- so probably won't use it for anything 'real' and/or important; So ""shouldn't be an issue?"" lol",,
4.90866E+17,JOST GRANT#1516,2021-05-27,"@oaktownsam I mean , my long-long-loooong term-goal right now is to modernize and expand https://github.com/jsgrant/katamari which is a bunch of Dylan bindings for various gamedev tech so I'm going to have to learn it at somepoint nontrivially anyways, I suspect. I just don't want to overwhelm myself more than I already am. lol",,
4.90866E+17,JOST GRANT#1516,2021-05-27,"I'm pretty strong-armed ""slow and steady"" at this point; For better-or-worse",,plusone (1)
2.29708E+17,wiggles#9999,2021-05-28,https://twitter.com/ladyaeva/status/1398134440245743622,,
2.66505E+17,notjack#9941,2021-05-28,@wiggles mentioned in #show-and-tell already üòâ,,
2.81975E+17,Aeva#1234,2021-05-28,üòÑ,,
9.9326E+16,Runi#1730,2021-05-28,i find the naming convention for racket packages so entertaining,,
9.9326E+16,Runi#1730,2021-05-28,snake oil is a very clever name for that package lol,,üíØ (6)
2.81975E+17,Aeva#1234,2021-05-28,^_^,,
5.39603E+17,spacey üåå#7238,2021-05-28,https://alex-hhh.github.io/2020/10/world-map-using-plot.html,,‚ù§Ô∏è (4)
5.39603E+17,spacey üåå#7238,2021-05-28,love this! ü•∞,,
5.39603E+17,spacey üåå#7238,2021-05-28,basically a bit of code that lets you create an interactive 3D globe :),,
2.42657E+17,Darkell#6390,2021-05-28,"is there any reference place that would give me an example on how to structure my code?
don't want to end up with one big spaghetti üôÇ",,
8.14743E+16,jimpjorps#0001,2021-05-28,the style guide has some suggestions https://docs.racket-lang.org/style/Units_of_Code.html,,
2.42657E+17,Darkell#6390,2021-05-28,"> can't google
sorry for the dumb question! üò¶",,
1.93202E+17,rocketnia#4517,2021-05-28,"navigating the Racket documentation can be its own specialized skill sometimes, so there's no problem with asking :)",,"racketflat (4),plusone (4)"
8.14743E+16,jimpjorps#0001,2021-05-28,"despite its quirks I have to say that Racket's documentation is far and away the best I've come across so far, I'm trying some stuff in Julia right now and their documentation is *okay* but it lacks a lot of the good explanations of edge cases and useful examples",,
6.87833E+17,grey#8674,2021-05-28,"One of my favorite things about the Racket docs is that it includes both the detail-heavy technical reference parts, and great tutorial-style introductions to the APIs.",,
1.30231E+17,sarna#3904,2021-05-28,"I wish some libraries/modules had big examples, instead of just per-function documentation",,
1.30231E+17,sarna#3904,2021-05-28,"most of the time I need to use the entire thing or just a couple functions, I don't want to browse through them all",,
1.30231E+17,sarna#3904,2021-05-28,I mean most of them do - but I remember a couple that didn't have any,,
8.09146E+17,darren#6252,2021-05-28,"A question here. When importing packages, is it a convention not to make an alias? For example, Clojure has `:as` and Haskell has `qualified`, but I haven't seen something similar to them in Racket.",,
8.09146E+17,darren#6252,2021-05-28,"And without using aliases, is it possible to trace back to where an imported function originates from?",,
8.14743E+16,jimpjorps#0001,2021-05-28,"for the first question, there's `rename-in` and `prefix-in` as syntax in `require` https://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._rename-in%29%29",,
9.9326E+16,Runi#1730,2021-05-28,only with a tool capable of expansion,,
9.9326E+16,Runi#1730,2021-05-28,this is a key motivator for this suggestion for racket 2.0 (rhombus): https://github.com/racket/rhombus-brainstorming/issues/159,,
8.09146E+17,darren#6252,2021-05-28,"Ah, there is `prefix-in` which does the same thing. Thanks.",,
8.09146E+17,darren#6252,2021-05-28,Good to know.,,
2.75501E+17,Plane#0324,2021-05-29,greg hendershott's *fear of macros* is a nice tutorial,,"racket (2),üíØ (2),üôÄ (2)"
2.75501E+17,Plane#0324,2021-05-29,i find it very easy to follow,,
4.66395E+17,oaktownsam#0815,2021-05-30,"How does this make you feel?
```scheme
#@[derive serialize deserialize]
#@[provide]
(struct point (x y))
```",,"üòº (4),üòø (1),üòª (3),üôÄ (3),üò≥ (3)"
2.64024E+17,Eutro#0016,2021-05-30,Rusty,,
4.66395E+17,oaktownsam#0815,2021-05-30,"Here's a java-esque one
```scheme
#@[GET]
#@[Path ""/hello""]
(define (hello #@[PathParam ""name""] name)
  (~a ""hello "" name)
```",,
2.66505E+17,notjack#9941,2021-05-30,hell yes,,
4.66395E+17,oaktownsam#0815,2021-05-30,"Here's what I've come up with so far.  Attributes are syntax properties.  How to connect those properties to doing things is the next bit probably having something to do with (handwaving) some syntax hackery.
https://gist.github.com/samdphillips/ab4760129c862b2ff3394cb80c600d65",,
4.66395E+17,oaktownsam#0815,2021-05-30,My current thoughts are around how to engineer it without `struct` or `define` having special knowledge about attributes,,
4.66395E+17,oaktownsam#0815,2021-05-30,It's probably going to be a special `#%module-begin` pass that does the magic.,,üòç (2)
2.64024E+17,Eutro#0016,2021-05-30,magic modbeg,,
2.66505E+17,notjack#9941,2021-05-30,"@oaktownsam I made a prototype system for ""decorators"" that could work for attaching the attributes to the annotated forms",,
2.66505E+17,notjack#9941,2021-05-30,https://github.com/jackfirth/decorator,,
4.66395E+17,oaktownsam#0815,2021-05-30,I'll look,,
2.66505E+17,notjack#9941,2021-05-30,"it uses local expansion to process code like this:
```scheme
(decorate add-logging)
(decorate add-tracing)
(decorate add-static-arity)
(define (f x y z)
  (+ x y z))
```",,
2.66505E+17,notjack#9941,2021-05-30,"where each ""decorator"" is a macro that's used to process the decorated definition",,plusone (1)
1.30231E+17,sarna#3904,2021-05-30,wait you can do that?,,
1.30231E+17,sarna#3904,2021-05-30,"I thought all macros were limited to the scope they're in, and you have to use #lang if you want to do something more",,
4.66395E+17,oaktownsam#0815,2021-05-30,In @notjack 's `decorator` there is an outer macro which lets you play with the structure of the stuff inside it.,,
4.66395E+17,oaktownsam#0815,2021-05-30,Conceptually there is a bit of syntax called `#%module-begin` that surrounds the contents of the module and you can do all sorts of stuff with that too,,
1.30231E+17,sarna#3904,2021-05-30,ohhh,,
1.30231E+17,sarna#3904,2021-05-30,but don't I need #lang to mess with that?,,
1.30231E+17,sarna#3904,2021-05-30,racket docs are you okay,https://cdn.discordapp.com/attachments/618895179343986688/848655420927377418/image0.png,
4.66395E+17,oaktownsam#0815,2021-05-30,Yes the module the `#lang` uses needs to `provide` `#%module-begin` either a custom one or the Racket one.,,
1.30231E+17,sarna#3904,2021-05-30,I see,,
2.75501E+17,Plane#0324,2021-05-30,"i like that 404 page, it's cute",,
2.75501E+17,Plane#0324,2021-05-30,did you get a 404 on a page that should have loaded?,,
2.75501E+17,Plane#0324,2021-05-30,,https://cdn.discordapp.com/attachments/618895179343986688/848660238797635594/unknown.png,
1.30231E+17,sarna#3904,2021-05-30,"I don't really know, but I find those `(*(+(*)+(` really confusing",,
2.75501E+17,Plane#0324,2021-05-30,ohh yeah,,
1.30231E+17,sarna#3904,2021-05-30,are they supposed to be there?,,
2.75501E+17,Plane#0324,2021-05-30,if you stare at it for a minute you can see it probably,,
2.75501E+17,Plane#0324,2021-05-30,yeah `(*)` is 1,,
1.30231E+17,sarna#3904,2021-05-30,is that what errors look like in racket? lmao,,
2.75501E+17,Plane#0324,2021-05-30,so,,
1.30231E+17,sarna#3904,2021-05-30,oh nooo,,
2.75501E+17,Plane#0324,2021-05-30,((4 * 5 * 5) + 1) * 4,,
1.30231E+17,sarna#3904,2021-05-30,noo it's a 404 joke?,,
1.30231E+17,sarna#3904,2021-05-30,damn,,
2.75501E+17,Plane#0324,2021-05-30,lol,,
1.30231E+17,sarna#3904,2021-05-30,I got played like a tambourine,,
1.30231E+17,sarna#3904,2021-05-30,thanks :meowblush:,,
7.73175E+17,meowüé∫#2842,2021-05-31,:meow:,,
2.75501E+17,Plane#0324,2021-06-01,"oops, i made a recursive macro without a proper base case",,
2.75501E+17,Plane#0324,2021-06-01,and now the macro expander is non-responsive üëÄ,,
2.75501E+17,Plane#0324,2021-06-01,yay,,
2.75501E+17,Plane#0324,2021-06-01,"```scheme
> (struct point (x y) #:transparent)
> (define p (point 2 3))
> (define q (point 4 5))
> (define z '(1 2 3 (4 5)))
> (with (p : point
         q : point
         z : (list a b c (list d e)))
    (+ p.x q.y c d))
14
```",,
1.30231E+17,sarna#3904,2021-06-01,"me: mom can we have THE DOT
mom: we have THE DOT at home
THE DOT at home:",,
1.30231E+17,sarna#3904,2021-06-01,"(https://dierk.gitbooks.io/fregegoodness/content/src/docs/asciidoc/dot_notation.html, original video unavailable :()",,
1.30231E+17,sarna#3904,2021-06-01,"it's extremely cool though, would autocompletion work with that?",,
2.75501E+17,Plane#0324,2021-06-01,yes autocompletion does work with it (:,,
2.75501E+17,Plane#0324,2021-06-01,,https://cdn.discordapp.com/attachments/618895179343986688/849206814527586304/unknown.png,
2.75501E+17,Plane#0324,2021-06-01,i'm just having fun learning macros right now,,
2.75501E+17,Plane#0324,2021-06-01,i may have to make my first #lang soon!,,
1.30231E+17,sarna#3904,2021-06-01,wooooo that's so awesome :meowsmile: :meowsmile: :meowsmile:,,
5.28309E+17,itmuckel#5913,2021-06-01,"oh man, that would be so cool to have",,
5.28309E+17,itmuckel#5913,2021-06-01,although I get used to match-define and match-let. I think match-let would be even clearer in your example,,
5.28309E+17,itmuckel#5913,2021-06-01,Anyway great work and would be a nice addition to the language to have that everywhere.,,
2.75501E+17,Plane#0324,2021-06-01,match-define is really nice,,
2.75501E+17,Plane#0324,2021-06-01,i'm writing an infix macro as practice rn,,
2.75501E+17,Plane#0324,2021-06-01,"```scheme
> (infix-parse 2 < 3 + 5 * 4 - 20 < 4)
#t
```",,
2.75501E+17,Plane#0324,2021-06-01,operator precedence is a scary thing,,
5.28309E+17,itmuckel#5913,2021-06-01,"Well, that's the only real disadvantage I see in Lisps. Uniform syntax is nice, but when you do a lot of calculations, things get very hard to read. Although that monstrum you wrote there needs a few parens üòÑ",,
2.75501E+17,Plane#0324,2021-06-01,oh yeah i'm just testing it out,,
2.75501E+17,Plane#0324,2021-06-01,"i actually don't really want to have infix syntax with precedence that much, although i think it's nice to have a simple binary infix syntax for some things like inequalities",,
8.14743E+16,jimpjorps#0001,2021-06-01,"yeah, I always do infix for inequalities in racket just because I'm paranoid I'll get the direction wrong",,
8.14743E+16,jimpjorps#0001,2021-06-01,that's the one place I still feel like I have to do it on my fingers,,
8.14743E+16,jimpjorps#0001,2021-06-01,I've had an HP calculator on my desk at work forever so I'm at least used to thinking in the polish notation way for arithmetic,,
2.75501E+17,Plane#0324,2021-06-01,for basic arithmetic i never felt prefix notation was counterintuitive,,
2.75501E+17,Plane#0324,2021-06-01,plus if i use racket as a calculator i can do `(+ 1 2 3 4 5 6)` which is easier than typing `1 + 2 + 3 + 4 + 5 + 6` lol,,
2.75501E+17,Plane#0324,2021-06-01,but for certain operations it's cumbersome or counterintuitive,,
5.28309E+17,itmuckel#5913,2021-06-01,"Yeah, but as soon as you have more ""complicated"" stuff involving complicated expressions it is easier to digest `(super-long-and-complicated-expression - super-long-and-complicated-expression2 / 2)` than `(- (super-long-and-complicated-expression (/ super-long-and-complicated-expression2 2))`",,
5.28309E+17,itmuckel#5913,2021-06-01,(imagine more parens instead of super-long-and-complicated-expression^^),,
2.75501E+17,Plane#0324,2021-06-01,yeah i agree sometimes it's definitely awkward,,
4.66395E+17,oaktownsam#0815,2021-06-01,As with many things it becomes easier with practice.,,
8.14743E+16,jimpjorps#0001,2021-06-01,just open your crown chakra and feel the parentheses' aura,,
2.75501E+17,Plane#0324,2021-06-01,something forthy could be fun too for sure,,
7.73175E+17,meowüé∫#2842,2021-06-01,:meowblushcool:,,
1.30231E+17,sarna#3904,2021-06-01,move past the desire of having infix operators,,üëç (1)
5.28309E+17,itmuckel#5913,2021-06-01,I'd still say that they are more practical in some contexts (like calculating stuff),,
5.28309E+17,itmuckel#5913,2021-06-01,Also I'm a huge fan of the threading operator (~> source f1 f2 f3) instead of writing everything prefixed,,
5.28309E+17,itmuckel#5913,2021-06-01,(or is threading style suffixed?),,
2.75501E+17,Plane#0324,2021-06-01,"i like the threading macro too, it's like a unix pipe where you start with some data and then it flows through some functions",,
2.75501E+17,Plane#0324,2021-06-01,but it's basically just function composition that goes in the opposite direction,,
2.75501E+17,Plane#0324,2021-06-01,"as far as where the ""hole"" is, for `~>` it's at the start and `~>>` it's at the end",,
2.75501E+17,Plane#0324,2021-06-01,although it's often better to mark it explicitly if you need to think about that,,
8.14743E+16,jimpjorps#0001,2021-06-01,it's really useful for any kind of data processing where you have to do a bunch of steps in series and spit out a slice of interest at the end,,
8.14743E+16,jimpjorps#0001,2021-06-01,makes it easy to change the order of steps or insert new ones without worrying about parentheses,,
2.75501E+17,Plane#0324,2021-06-01,i'm really used to thinking that way after years of doing random things in unix shells lol,,
2.75501E+17,Plane#0324,2021-06-01,it's very intuitive to me,,
8.14743E+16,jimpjorps#0001,2021-06-01,it's pretty much the same way you work at any kind of interactive prompt or REPL too,,
8.14743E+16,jimpjorps#0001,2021-06-01,keep using `ans` or `it` or whatever as an argument for the next command,,
5.28309E+17,itmuckel#5913,2021-06-01,Yes and also the order of processing like @jimpjorps  said. I first saw this in F# as the `|>` operator and for me it's just the most natural way to write functional code,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-01,not a fan of threading; it leaves me confused. I tend to just use `let*` instead,,
2.75501E+17,Plane#0324,2021-06-01,"i think that `f(g(h(x)))` makes me read things inside-out, it works on a small scale but the cognitive load of reading goes up very quickly",,
1.30231E+17,sarna#3904,2021-06-01,don't you have problems with thinking of all the names for intermediate values?,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-01,"no, I can reuse same one",,
8.14743E+16,jimpjorps#0001,2021-06-01,you can just keep overloading the same name over and over if you don't need to carry it more than one step,,
1.30231E+17,sarna#3904,2021-06-01,"ah, clever",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-01,especially when all intermediate values are same type like list,,
1.30231E+17,sarna#3904,2021-06-01,yeah that makes sense actually,,
8.14743E+16,jimpjorps#0001,2021-06-01,which then is pretty much just threading but presented differently,,
2.75501E+17,Plane#0324,2021-06-01,yes i do like that,,
1.30231E+17,sarna#3904,2021-06-01,"scheme, but even more verbose? :meowblushcool:",,
2.75501E+17,Plane#0324,2021-06-01,"i wrote something like that today but rewrote it as threading because it was much more concise, and so easier to fit in my brain at once",,
8.14743E+16,jimpjorps#0001,2021-06-01,"something like ```scheme
> (let* ([x 1]
       [x (add1 x)]
       [x (cons x '(2))])
  x)
'(2 2)
```",,
8.14743E+16,jimpjorps#0001,2021-06-01,"which is similar to ```scheme
(~> 1
    (add1 _)
    (cons _ '(2)))
```",,
1.30231E+17,sarna#3904,2021-06-01,can you use holes in ~>?,,
8.14743E+16,jimpjorps#0001,2021-06-01,yeah,,
1.30231E+17,sarna#3904,2021-06-01,neat,,
1.30231E+17,sarna#3904,2021-06-01,without them I never know if it's the first one or the last one,,
1.30231E+17,sarna#3904,2021-06-01,also - racket why have positional arguments basically everywhere :meowwarp: it's 2021,,
8.14743E+16,jimpjorps#0001,2021-06-01,"`~>` is the first, `~>>` is the last, and I think of it as seeing that the `~>>` one points farther",,
1.30231E+17,sarna#3904,2021-06-01,"good mnemonic, I'll steal it :meowblushcool:",,
2.75501E+17,Plane#0324,2021-06-01,oh yeah it made intuitive sense to me the first time i saw it,,
2.75501E+17,Plane#0324,2021-06-01,~>> is like over here ~>>,,
2.75501E+17,Plane#0324,2021-06-01,~> is only over here,,
5.28309E+17,itmuckel#5913,2021-06-01,Just use `_` and don't worry about it üòâ,,
2.75501E+17,Plane#0324,2021-06-01,does everyone here like the `#:` syntax for kwargs?  anyone use the `:` styles?,,
1.30231E+17,sarna#3904,2021-06-01,"wait, there's something else than `#:` available?",,
5.28309E+17,itmuckel#5913,2021-06-01,"Oh, didn't know that `:` is also possible. Nice. Although I see #: everywhere",,
2.75501E+17,Plane#0324,2021-06-01,https://docs.racket-lang.org/colon-kw/index.html,,
2.75501E+17,Plane#0324,2021-06-01,it's like in other schemes,,
1.30231E+17,sarna#3904,2021-06-01,I'd prefer named arguments like in jane street's ocaml,,
1.30231E+17,sarna#3904,2021-06-01,lol but it's a whole lang,,
1.30231E+17,sarna#3904,2021-06-01,can you stack langs on top of each other? #lang typed-racket colon-kw at-expr,,
3.5323E+17,Alex Knauth#4895,2021-06-01,"well you need to worry about order, like `#lang colon-kw typed/racket` would work but `#lang typed/racket colon-kw` wouldn't",,
1.30231E+17,sarna#3904,2021-06-01,oh :mew:,,
8.14743E+16,jimpjorps#0001,2021-06-01,"yeah, `#lang at-exp colon-kw typed/racket` at least shows up as a valid lang declaration for me right now",,
2.66505E+17,notjack#9941,2021-06-01,my big position on these is that there should be a protocol for source files to pass structured arguments to a `#lang`'s reader,,
2.66505E+17,notjack#9941,2021-06-01,so you could make things like `colon-kw` not require a whole separate meta language,,plusone (2)
2.75501E+17,Plane#0324,2021-06-02,"woah, resyntax builds a binary outside the `pkgs` directory",,
2.75501E+17,Plane#0324,2021-06-02,i guess that's because racket on windows doesn't use a `bin` subdirectory,,
2.75501E+17,Plane#0324,2021-06-02,"```scheme
crystal@wings:~$ git/racket/racket/bin/resyntax --help
usage: resyntax [ <option> ... ] <command> [<leftover-args>] ...

<option> is one of

  --help, -h
     Show this help
  --
     Do not treat any remaining argument as a switch (at this level)

 Multiple single-letter switches can be combined after
 one `-`. For example, `-h-` is the same as `-h --`.
```
there's no `--file` üëÄ",,
2.75501E+17,Plane#0324,2021-06-02,ohh `analyze`,,
2.75501E+17,Plane#0324,2021-06-02,yay,,
2.66505E+17,notjack#9941,2021-06-02,sorry about that help text üòÖ,,
2.75501E+17,Plane#0324,2021-06-02,it's ok i was lost for a minute but i figured it out (:,,
2.66505E+17,notjack#9941,2021-06-02,https://github.com/jackfirth/resyntax/issues/140,,
2.75501E+17,Plane#0324,2021-06-02,i accidentally skimmed over the key part of the docs,,
2.75501E+17,Plane#0324,2021-06-02,"my eye jumped straight to `--file <file-path>` and i was like ""ok i'll try it!""",,
2.75501E+17,Plane#0324,2021-06-02,i needed to read more carefully,,
2.66505E+17,notjack#9941,2021-06-02,"maybe I'll eventually set it up so that if you forget the `analyze` / `fix` subcommand, it gives you an error message that includes a hint about that",,
2.75501E+17,Plane#0324,2021-06-02,"so when `resyntax --file myfile.rkt` didn't work, i tried `--help` and then opened the source to figure it out.  even though the answer was staring me in the face the whole time lol",,
2.75501E+17,Plane#0324,2021-06-02,"maybe if the docs had a sort of ""hello world"" type example it could help people like me who didn't read very carefully",,
2.75501E+17,Plane#0324,2021-06-02,"```scheme
#lang racket/base

(if ""Hello, world!"" #t #f)
```
and
```
$ resyntax analyze --file hello.rkt
```
:D",,
2.66505E+17,notjack#9941,2021-06-02,üòâ,https://cdn.discordapp.com/attachments/618895179343986688/849551687961935882/Screen_Shot_2021-06-02_at_12.34.48_AM.png,
2.75501E+17,Plane#0324,2021-06-02,oh!,,
2.66505E+17,notjack#9941,2021-06-02,"though maybe that would be easier to read if the `resyntax fix --file my-program.rkt` command was in its own codeblock, rather than inline in the prose",,
2.75501E+17,Plane#0324,2021-06-02,ahh somehow i had skipped straight to the command-line interface page,,
2.75501E+17,Plane#0324,2021-06-02,darn reading out of order,,
2.75501E+17,Plane#0324,2021-06-02,this is actually interesting:,,
2.75501E+17,Plane#0324,2021-06-02,,https://cdn.discordapp.com/attachments/618895179343986688/849552313408684042/unknown.png,
2.75501E+17,Plane#0324,2021-06-02,i didn't realize that meant there was a parent node to section #1,,
2.75501E+17,Plane#0324,2021-06-02,"i was thinking ""this is all the docs!"" when i was looking at section #1",,
2.75501E+17,Plane#0324,2021-06-02,"well, interesting to me at least, analyzing my mental errors üëÄ",,
2.75501E+17,Plane#0324,2021-06-02,i probably skimmed over it without realizing!,,
2.75501E+17,Plane#0324,2021-06-02,i need to be a lot more disciplined with actually engaging with the docs and reading them,,
2.75501E+17,Plane#0324,2021-06-02,thanks for being patient with me @notjack,,
2.66505E+17,notjack#9941,2021-06-02,"heh no problem ‚ù§Ô∏è and to be clear, there's definitely room for improving the docs and error messages, so don't put it all on yourself",,
2.75501E+17,Plane#0324,2021-06-02,i think there is something to the idea of optimizing docs somewhat for people who are skimming and maybe not reading very carefully,,
2.75501E+17,Plane#0324,2021-06-02,"since i think people do tend to read docs out-of-order, not like a book",,üíØ (1)
1.30231E+17,sarna#3904,2021-06-02,"have you heard of our lord and savior, `natural-cli`? you can still use racket's `command-line` as usual, and yet you get subcommands and nice help text",,
1.30231E+17,sarna#3904,2021-06-02,https://docs.racket-lang.org/natural-cli/index.html,,
2.75501E+17,Plane#0324,2021-06-02,this morning i found myself writing code two phases in the past for the first time,,
2.75501E+17,Plane#0324,2021-06-02,"i guess what i can do is decompose this into modules so each module goes no further than one phase in the past, and then require with `for-syntax`",,
2.75501E+17,Plane#0324,2021-06-02,i'm starting to really get the hang of this macro system and it's getting really fun :D,,üíØ (3)
7.14999E+17,gingerydoo#7461,2021-06-02,"The quasi-religious awakening of Lisp programming soon follows, so I hear",,
2.75501E+17,Plane#0324,2021-06-02,"i noticed if i copy code from the macro stepper with üîí in it (which apparently signifies ""armed"" syntax), and i paste it into a drracket source file, it pops up a fun error message at the bottom of the drracket window:
```
read-bytes: cannot load snip-class reader, snipclass name has only one library path, but text mode requested: #""(lib \""lock.rkt\"" \""macro-debugger\"" \""syntax-browser\"" \""icons\"")""
```",,
6.46114E+17,samth#3420,2021-06-02,@Plane you should report that as a bug in the macro stepper,,
6.46114E+17,samth#3420,2021-06-02,https://github.com/racket/macro-debugger/issues/,,
2.75501E+17,Plane#0324,2021-06-02,ok will do! thank you,,
2.75501E+17,Plane#0324,2021-06-02,i posted the issue! (:,,
5.34547E+17,nullchinchilla#3746,2021-06-02,"so i'm using typed racket, and defining a structure like 

```racket
(struct (a) foo ((bar : a)))
```",,
5.34547E+17,nullchinchilla#3746,2021-06-02,but then `foo?` is non-parametric:,,
5.34547E+17,nullchinchilla#3746,2021-06-02,"```
> foo?
- : (-> Any Boolean : (foo Any))
```",,
5.34547E+17,nullchinchilla#3746,2021-06-02,Can this limitation be somehow worked around?,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-02,"ü§î I'm not convinced parametric result would even be sensible here, since if it was say `a` instead of Any it wouldn't be lexicaly bound to anything",,
3.5323E+17,Alex Knauth#4895,2021-06-02,"at least you can do
```
(: fooof? (All (a) (-> (-> Any Boolean : a) (-> Any Boolean : (foo a)))))
(define ((fooof? a?) v)
  (and (foo? v) (a? (foo-bar v))))
```
so that
```
> (fooof? number?)
- : (-> Any Boolean : (foo Number))
#<procedure>
```",,
7.73175E+17,meowüé∫#2842,2021-06-02,fooooooof,,
6.87833E+17,grey#8674,2021-06-02,That‚Äôd be a good name for a programming language. Guaranteed to be at the top of the search engine results.,,
7.73175E+17,meowüé∫#2842,2021-06-02,Hehe,,
7.73175E+17,meowüé∫#2842,2021-06-02,"There's already something called a ""foof loop""",,
7.73175E+17,meowüé∫#2842,2021-06-02,R5RS Scheme implementation (loosely) of CL `loop` macro.,,
6.87833E+17,grey#8674,2021-06-02,"Hm... I need an emoji for ‚ÄúThe More You Know‚Äù, though, that reference would probably be lost on anyone outside the US.",,
7.73175E+17,meowüé∫#2842,2021-06-02,http://mumble.net/~campbell/tmp/foof-loop.txt,,
4.40139E+17,Parnikkapore#2806,2021-06-02,^ I¬†for¬†one¬†know¬†that¬†phrase¬†independently¬†of¬†the¬†show¬†or¬†whatever¬†it¬†is,,
6.87833E+17,grey#8674,2021-06-02,(I‚Äôm probably too young to have grown up with it; I learned it from the internet.),,
6.87833E+17,grey#8674,2021-06-02,Looks a little like an ancestor of Racket‚Äôs `for` forms. My favorite part is that the name gets funnier each time I read it.,,
3.5323E+17,Alex Knauth#4895,2021-06-02,"I mean, I intended fooof as in ""foo of""",,
4.66395E+17,oaktownsam#0815,2021-06-02,https://giphy.com/gifs/the-more-you-know-83QtfwKWdmSEo,,üëç (1)
4.66395E+17,oaktownsam#0815,2021-06-02,"There would be some character from a popular NBC show (like Will Smith or something) saying ""Hey if you show people respect they'll respect you.""  And then it would cut to that graphic.",,
4.66395E+17,oaktownsam#0815,2021-06-02,It was during ad breaks iirc,,
4.66395E+17,oaktownsam#0815,2021-06-02,90's Conan O'Brien Show parodied it a bit I think.,,
2.75501E+17,Plane#0324,2021-06-02,it reminds me of the old F00F bug,,
7.73175E+17,meowüé∫#2842,2021-06-02,one F away from oof,,
4.66395E+17,oaktownsam#0815,2021-06-02,https://www.youtube.com/watch?v=5QiUDsUY2Tw,,
1.38781E+17,Christopher_#8382,2021-06-02,hullooo,,
6.46114E+17,samth#3420,2021-06-02,"Racket's for forms were inspired by the ""eager comprehensions"" in SRFI 42",,üëç (2)
2.75501E+17,Plane#0324,2021-06-04,this is a lot of `for-meta` <https://github.com/AlexKnauth/afl/blob/master/afl/reader.rkt>,,
2.75501E+17,Plane#0324,2021-06-04,oh!,,
2.75501E+17,Plane#0324,2021-06-04,`require-a-lot`,,meowleft (2)
2.75501E+17,Plane#0324,2021-06-04,<https://github.com/AlexKnauth/debug/blob/master/debug/reader.rkt>,,
6.87833E+17,grey#8674,2021-06-04,I wonder why there are so many...,,
3.5323E+17,Alex Knauth#4895,2021-06-04,Because weirdness of trying to be hygienic,,
7.73175E+17,meowüé∫#2842,2021-06-04,@Alex Knauth It would be nice if it supported a rest argument like `cut`'s `<...>`.,,
7.73175E+17,meowüé∫#2842,2021-06-04,Maybe something like `%1 %2 %%`,,
7.73175E+17,meowüé∫#2842,2021-06-04,"Varargs, essentially.",,
5.34547E+17,nullchinchilla#3746,2021-06-04,"DrRacket scrolling and typing is quite laggy in GTK3 and much faster with PLT_GTK2=1. Is this a known issue or something weird going on on my end?

Also, in GTK2 *selecting* large amounts of text is horribly laggy so I can't use that either",,
7.73175E+17,meowüé∫#2842,2021-06-04,That's strange. I haven't heard of that issue. DrRacket is known to be a tad slow but it shouldn't be that bad.,,
5.34547E+17,nullchinchilla#3746,2021-06-04,I've experienced it for years on multiple systems actually. DrRacket seems to be *much* slower on Linux/GTK3 than on any other system,,
4.62028E+17,StephenD#5938,2021-06-04,My recollection from threads on the slack is that some display settings can have a big impact. I‚Äôve used DrRacket on Raspberry pi 4 /raspberry pi os and it is perfectly usable.,,
8.14743E+16,jimpjorps#0001,2021-06-04,"yeah, same here, I've used it on my rpi4 and an Intel NUC running Ubuntu and neither had any particular problems I noticed",,
2.75501E+17,Plane#0324,2021-06-04,"there have been some issues with drracker's scrolling in the past, although i think there's been progress made with that",,
2.75501E+17,Plane#0324,2021-06-04,"just to double-check, are you using a recent version of racket?",,
2.75501E+17,Plane#0324,2021-06-04,if you're having problems with drracket it could be good to open an issue on github,,
2.75501E+17,Plane#0324,2021-06-04,there might be an issue other people aren't experiencing so they don't realize it needs fixing,,
5.34547E+17,nullchinchilla#3746,2021-06-04,yup,,
2.75501E+17,Plane#0324,2021-06-04,@nullchinchilla can you try running drracket with `PLT_DISPLAY_BACKING_SCALE=1`?  https://github.com/racket/drracket/issues/184,,
5.34547E+17,nullchinchilla#3746,2021-06-04,This makes it *much* better,,
5.34547E+17,nullchinchilla#3746,2021-06-04,"My display has a 1.25x scaling factor, so that's probably why",,
5.34547E+17,nullchinchilla#3746,2021-06-04,It seems strange that this can cause such a performance problem,,
2.75501E+17,Plane#0324,2021-06-04,"yes, i'm guessing it might become more of an issue over time since people are moving to higher resolution displays",,
2.75501E+17,Plane#0324,2021-06-04,i didn't know about this issue until i started looking based on your messages,,
2.75501E+17,Plane#0324,2021-06-04,"and it only occurs with gtk3, not with gtk2?",,
2.75501E+17,Plane#0324,2021-06-04,i didn't see that mentioned in the github issue,,
6.46114E+17,samth#3420,2021-06-04,I think fractional scaling & gtk doesn't seem to be a fully-baked combination (I've had problems with other apps too),,
8.14743E+16,jimpjorps#0001,2021-06-04,I remember when setting up the set-top box Ubuntu's system config app really tries to discourage you from using fractional scaling ratios,,
2.75501E+17,Plane#0324,2021-06-04,"oh, erm",,
2.75501E+17,Plane#0324,2021-06-04,"it looks like gtk's solution for fractional scaling is to have apps use a higher integer scaling factor, then scale back down",,
2.75501E+17,Plane#0324,2021-06-04,https://wiki.gnome.org/Initiatives/FracionalScaling,,
2.75501E+17,Plane#0324,2021-06-04,"> The way this will work is that we ask applications to scale up by 3, and then the compositor scales down by 2 on the way to the framebuffer. E.g. for an 800x600 window, the application will send 2400x1800 pixels, and the compositor will send 1200x900 pixels to the framebuffer.",,
8.14743E+16,jimpjorps#0001,2021-06-04,ha I can see why 1.25x would be such a performance hit then,,
8.14743E+16,jimpjorps#0001,2021-06-04,that'd have to be up  by 5 then down by 4,,
2.75501E+17,Plane#0324,2021-06-04,welp,,
2.75501E+17,Plane#0324,2021-06-04,rendering 25x as much does sound like a bit much üëÄ,,
8.14743E+16,jimpjorps#0001,2021-06-04,"wonder if it has any sanity checks on it, like what would it try to do if you set a scaling factor of 101%",,
5.34547E+17,nullchinchilla#3746,2021-06-04,I didn't use GTK's fractional scaling though,,
5.34547E+17,nullchinchilla#3746,2021-06-04,Just 1.25x text scaling,,
5.34547E+17,nullchinchilla#3746,2021-06-04,which many apps (like firefox) use to internally do fractional scaling of UI elements too,,
5.34547E+17,nullchinchilla#3746,2021-06-04,"I think it's ""wrong"" (at least unexpected) if drracket uses GTK's well-known-to-be-terrible built-in fractional scaling",,
2.75501E+17,Plane#0324,2021-06-04,i see i see,,
5.34547E+17,nullchinchilla#3746,2021-06-05,"I wonder whether there's a way to turn off the ""JIT"" (which I understand is actually an AOT) in Racket CS, to improve startup latency?",,
1.30231E+17,sarna#3904,2021-06-05,@nullchinchilla IIRC that's just how Chez works,,
5.34547E+17,nullchinchilla#3746,2021-06-05,"I actually am a little confused on what exactly does ""racket on chez scheme"" mean. Is racket translated into chez scheme and run in chez scheme, or is the C-based racket interpreter+JIT rewritten in chez?",,
1.30231E+17,sarna#3904,2021-06-05,"please correct me if I'm wrong, but Racket BC had a JIT, CS doesn't have it",,
1.30231E+17,sarna#3904,2021-06-05,"and as far as I know, Chez always AOTs stuff and then runs it",,
1.30231E+17,sarna#3904,2021-06-05,"""Racket on Chez"" is modified Chez Scheme (and its runtime) + a layer of Racket on top of it",,
1.30231E+17,sarna#3904,2021-06-05,so the VM is the Chez VM,,
2.75501E+17,Plane#0324,2021-06-05,there's some good discussion in this post https://blog.racket-lang.org/2018/01/racket-on-chez-status.html,,
7.73175E+17,meowüé∫#2842,2021-06-05,"A layer thicker than Chez itself, mind you. üòõ",,üòã (2)
7.73175E+17,meowüé∫#2842,2021-06-05,Although I think it shrank quite a bit now that a lot of kernel-level functionality is delegated down to Chez.,,
7.73175E+17,meowüé∫#2842,2021-06-05,My biggest complaint about Chez is that it's showing that it used to be proprietary software developed mostly by one person (+ a rolling door of junior developers).,,
7.73175E+17,meowüé∫#2842,2021-06-05,The code is rather opaque and it's very difficult to navigate the whole thing.,,
7.73175E+17,meowüé∫#2842,2021-06-05,"There are a lot of interesting things down there that are completely undocumented, such as a full-blown object system that's completely unused, waiting in the test suite directory.",,üòé (2)
7.73175E+17,meowüé∫#2842,2021-06-05,The project structure and filenames are also hard to decipher.,,plusone (1)
7.73175E+17,meowüé∫#2842,2021-06-05,"I mean, look at these: https://github.com/cisco/ChezScheme/tree/main/mats",,
7.73175E+17,meowüé∫#2842,2021-06-05,"Anyway, this is getting off-topic. üòÖ",,
2.66505E+17,notjack#9941,2021-06-05,wh,,
2.66505E+17,notjack#9941,2021-06-05,what,,
7.73175E+17,meowüé∫#2842,2021-06-05,That's right!,,
7.73175E+17,meowüé∫#2842,2021-06-05,Someone wrote a blogpost about it after I pointed it out to them.,,
7.73175E+17,meowüé∫#2842,2021-06-05,https://github.com/cisco/ChezScheme/blob/main/mats/oop.ss,,
2.66505E+17,notjack#9941,2021-06-05,"I would ask ""why"" but it's always the same story: thought it would be a good idea at the time, got enthusiastic about implementation instead of paying attention to design and use cases, it got used a little, then interest waned and deleting stuff that's not _totally_ unused is so so hard",,
7.73175E+17,meowüé∫#2842,2021-06-05,They also forked it so it could get packaged for Akku: https://github.com/vidjuheffex/chez-soop,,
7.73175E+17,meowüé∫#2842,2021-06-05,https://call-with.cc/hop/post?title=have-some-soop,,
2.66505E+17,notjack#9941,2021-06-05,I love that blog post title heh,,
7.73175E+17,meowüé∫#2842,2021-06-05,"I know, right? üòÅ",,
2.75501E+17,Plane#0324,2021-06-05,yes i found the code base a little intimidating,,
1.30231E+17,sarna#3904,2021-06-05,"the other high performance implementation, gambit, has some crazy code in it too",,
1.30231E+17,sarna#3904,2021-06-05,and its site still doesn't work http://gambitscheme.org/,,
1.30231E+17,sarna#3904,2021-06-05,"(also developed mostly by one person, Mark Feeley)",,
7.73175E+17,meowüé∫#2842,2021-06-05,"Yeah, that's the problem with passion projects.",,
7.73175E+17,meowüé∫#2842,2021-06-05,One person devotes their life to a single piece of software and they become the sole point of breaking.,,
7.73175E+17,meowüé∫#2842,2021-06-05,"Can you guess why Larceny, formerly considered one of the best implementations (due to its extremely broad standard and SRFI support) is no longer developed or maintained?",,
7.73175E+17,meowüé∫#2842,2021-06-05,It's because Prof Will Clinger retired to a ranch in Texas and abandoned everything (including his personal website).,,
7.73175E+17,meowüé∫#2842,2021-06-05,The bus factor is the bane of many splendid projects people rely on especially as the authors get older.,,
8.14743E+16,jimpjorps#0001,2021-06-05,"yeah, there's a famous situation of that in music engraving software, there was a program called SCORE originally developed in the 80s by one guy at Stanford that a lot of professionals swore by for decades",,
8.14743E+16,jimpjorps#0001,2021-06-05,"some time in the mid-2000s he decided to stop selling or supporting the original version, got like a quarter into rewriting it for Windows, and then died",,
8.14743E+16,jimpjorps#0001,2021-06-05,without any contingency plans for continuing new development or anything in his will about who'd inherit the source code or anything,,
8.14743E+16,jimpjorps#0001,2021-06-05,so now it's just frozen in time forever and most of the people who'd been using it for 20+ years just had to start over with something new because you couldn't get original SCORE any more in any way and his family refused to let anyone take over or even look at the code for WinScore,,
4.66395E+17,oaktownsam#0815,2021-06-05,"Dreadfully offtopic, but this reminds me of the time I asked Don Knuth if he had a plan for TAOCP if he died.",,
2.66505E+17,notjack#9941,2021-06-05,"oh wow, how did he respond?",,
4.66395E+17,oaktownsam#0815,2021-06-05,"Quite possibly I was trying to frame it in a way that wasn't that blunt, and so he didn't understand.",,
4.66395E+17,oaktownsam#0815,2021-06-05,It was a random meeting during of all things a Linux Conference party in 2004ish and I think Google was giving him some award.  He was dressed in his academic robes.  It was quite surreal.,,üßê (2)
8.14743E+16,jimpjorps#0001,2021-06-05,he has plans for TeX and Metafont afaik so I doubt he hasn't thought about it,,
6.87833E+17,grey#8674,2021-06-06,"The TeX implementations that most people use nowadays are forks or completely different implementations, so there‚Äôs no direct dependency on Knuth anymore.",,
2.75501E+17,Plane#0324,2021-06-06,i made my first #lang,,
2.75501E+17,Plane#0324,2021-06-06,it's called #lang fail-randomly and it has a 1% chance of not compiling one of the lines in the source file,,mew (6)
1.30231E+17,sarna#3904,2021-06-06,"I wonder what becomes of LuaJIT, now that Mike Pall said he's not interested in maintaining it anymore",,
1.30231E+17,sarna#3904,2021-06-06,I heard it has some crazy hand-rolled assembly code in it and pretty much nobody knows what's going on there,,
7.73175E+17,meowüé∫#2842,2021-06-06,"The more I think about it, the more examples I can think of. Ardour for example.",,
7.73175E+17,meowüé∫#2842,2021-06-06,https://xkcd.com/2347/,,
4.62028E+17,StephenD#5938,2021-06-06,It's the thing that worries me most about open source - how it is effectively abusive to creators of OSS.,,
7.73175E+17,meowüé∫#2842,2021-06-06,"There's also an entitlement problem. A developer makes a controversial decision in their project, someone upset about it rants about it on Orange Website, the issue tracker is flooded with toxic and abusive messages by people who have no relation to the software but have strong opinions they feel must be heard.",,
4.62028E+17,StephenD#5938,2021-06-06,"Agreed, but I was more thinking of OSS developers wanting to buy stuff, go on holidays, have a home, and eat like the rest of us who get paid for their work.",,‚ù§Ô∏è (1)
4.62028E+17,StephenD#5938,2021-06-06,"I feel like this is a good time to mention community members can sponsor Racket:  
* https://github.com/sponsors/racket  - a variety of tiers available for monthly sponsorship.
* Tax-deductible donation via the  Software Freedom Conservancy https://racket-lang.org/sfc.html - one-off donation or configure recurring payments.",,‚ù§Ô∏è (2)
7.73175E+17,meowüé∫#2842,2021-06-06,"Oh yeah, there's also the problem of associating FOSS with gratis products. People get upset when they're asked to pay for free software.",,
7.73175E+17,meowüé∫#2842,2021-06-06,"When you open the source but charge for binaries, someone immediately forks it, builds it and gives it out for free.",,üòî (1)
7.73175E+17,meowüé∫#2842,2021-06-06,Ardour has this problem.,,
7.73175E+17,meowüé∫#2842,2021-06-06,Aseprite had to switch from GPL to source-available because of this.,,
7.73175E+17,meowüé∫#2842,2021-06-06,The software we develop at work is FOSS so we are selling LTS builds (snapshots and nightlies are always available) and support packages to companies.,,
7.73175E+17,meowüé∫#2842,2021-06-06,It wouldn't've worked if our target demographic were end-users.,,
4.62028E+17,StephenD#5938,2021-06-06,Sounds like a good model,,
4.1228E+17,xgqt#8370,2021-06-06,"zrythm still rolls with libre but paid,
works for them",,
7.73175E+17,meowüé∫#2842,2021-06-06,How much do they make a year?,,
4.1228E+17,xgqt#8370,2021-06-06,"ask them, dunno if they publish it
but they are alive",,
7.73175E+17,meowüé∫#2842,2021-06-06,"I mean, Ardour is the same. The sole developer is barely surviving though.",,
7.73175E+17,meowüé∫#2842,2021-06-06,I'll be convinced if they're full-time developers who make average software developer salary.,,
4.62028E+17,StephenD#5938,2021-06-06,What is ardour?,,
7.73175E+17,meowüé∫#2842,2021-06-06,A digital audio workstation,,
4.62028E+17,StephenD#5938,2021-06-06,That‚Äôs a massive undertaking,,
7.73175E+17,meowüé∫#2842,2021-06-06,It's a huge project and most of its users simply rely on distro packagers to get it for free.,,
4.62028E+17,StephenD#5938,2021-06-06,That‚Äôs terribly sad considering what the very same users will pay for instruments and hardware,,
7.73175E+17,meowüé∫#2842,2021-06-06,Or pay for proprietary software instead.,,
4.62028E+17,StephenD#5938,2021-06-06,https://www.reddit.com/r/Racket/comments/ntjipk/support_racket/?utm_source=share&utm_medium=ios_app&utm_name=iossmf,,
7.73175E+17,meowüé∫#2842,2021-06-06,Very few donation-based projects actually make enough. I can only think of large projects like Mastodon whose sole full-time developer makes ~$60k a year.,,
7.73175E+17,meowüé∫#2842,2021-06-06,"Other than that, it's almost always corporate/university/foundation-funded projects that make enough.",,
4.1228E+17,xgqt#8370,2021-06-06,"I was about to say llvm, but you excluded foundations",,
7.73175E+17,meowüé∫#2842,2021-06-06,LLVM is also sponsored by Apple and Google.,,
7.73175E+17,meowüé∫#2842,2021-06-06,"Also IBM, Intel, Facebook, Sony, and Qualcomm it seems: https://foundation.llvm.org/docs/sponsors/",,
4.62028E+17,StephenD#5938,2021-06-06,"Maybe we should move this to #off-topic 
Sponsor Racket!",,
7.73175E+17,meowüé∫#2842,2021-06-06,"Sorry, you're right.",,
4.62028E+17,StephenD#5938,2021-06-06,No need to be sorry- it was me too. It just occurred to me!,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-06,"On one hand that's sad. But on the other hand, I think this is a necessary ""natural selection"" force for weeding out hard to maintain projects, and funneling developers into working on smaller amount but more maintainable, better internally designed and polished implementations",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-06,"personally, I don't mind contributing to OSS, but it has to be.. enjoyable in some sense. After a day of messing around in old proprietary convoluted headache that was mostly caused by business-side decisions / schedule, last thing I want to do is spend my evening messing around in old os convoluted headache that doesn't really have that excuse for being rushed due to external forces. No, I want to spend my free time on some beautiful software.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-06,"and the ""convoluted headache"" I think is one of major reasons why some projects struggle with such bus factor",,
2.75501E+17,Plane#0324,2021-06-06,"one thing that really impresses me about racket is just how actively developed it is.  as i've learned about racket and watched talks, read papers and so forth, i've kind of gotten a picture of how the language has evolved and when different features were added, and it's really cool to see how different the language was 10 or 20 years ago.  and on top of that, mflatt is a bug-fixing machine.  i've posted a few issues about rough edges i ran into, and he squishes those bugs so fast",,‚ù§Ô∏è (4)
1.30231E+17,sarna#3904,2021-06-07,someone asked about docstrings in racket - I've found a project that seems to add them https://docs.racket-lang.org/mcfly/,,
1.30231E+17,sarna#3904,2021-06-07,but I don't know how usable it is,,
5.34547E+17,nullchinchilla#3746,2021-06-07,Is there some sort of tracing functionality in `racklog`? I'm trying to track down an infinite loop and it'd be nice to see what the solver's trying to calculate,,
2.14881E+17,Moinate#6061,2021-06-07,"~~if you mean can you print out log entries at a certain level of importance, yes~~",,
5.34547E+17,nullchinchilla#3746,2021-06-07,"(note that `racklog` is the embedded prolog implementation, not the logging stuff)",,
5.34547E+17,nullchinchilla#3746,2021-06-07,https://docs.racket-lang.org/racklog/index.html,,üëÄ (1)
4.66395E+17,oaktownsam#0815,2021-06-07,"It doesn't look like there is a trace facility, but you may be able to wrap a racket function into a dummy goal that would print?  @jeapostrophe may know of a good way.",,
2.36947E+17,jeapostrophe#4261,2021-06-07,I don't know a good way to do that,,
2.85967E+17,doot^2#3954,2021-06-07,would this sort of thing help? https://docs.racket-lang.org/reference/debugging.html,,
4.62028E+17,StephenD#5938,2021-06-07,https://benknoble.github.io//racket-slack-archive/,,
2.75501E+17,Plane#0324,2021-06-07,oh thanks for posting that,,
2.66505E+17,notjack#9941,2021-06-07,"üí≠ ""static continuations"" should be a thing",,üëÄ (1)
6.46114E+17,samth#3420,2021-06-07,the originators of `shift`/`reset` described them as static,,ü§î (1)
6.87833E+17,grey#8674,2021-06-07,"Like, stuff that can be CPSed?",,
2.66505E+17,notjack#9941,2021-06-07,"Stuff that can be ANF'd, actually",,
2.66505E+17,notjack#9941,2021-06-07,but yeah,,
2.66505E+17,notjack#9941,2021-06-07,and stuff that doesn't escape a lambda,,
1.35871E+17,Drakonis#1712,2021-06-07,"hmm, xiden...",,
1.35871E+17,Drakonis#1712,2021-06-07,"welp this looks pretty great, but it is still a long way from taking on guix, needs more init and cron in racket",,
1.35871E+17,Drakonis#1712,2021-06-07,also default to rash as the default shell,,
1.35871E+17,Drakonis#1712,2021-06-07,racket all the things they say,,
5.24323E+17,Ben Kenobi#5683,2021-06-08,"In case you missed it/aren't on Slack: The latest version of the archive is up-and-running at https://benknoble.github.io/racket-slack-archive/ (extends through roughly 2021-06-07). The site is now built using a mix of Racket (data processing) and Jekyll/Ruby (site-generation). I have some todos to make a nicer experience, and help is welcome. (Also if anyone wants to start working porting the Jekyll + Ruby stuff to Racket, feel free.)",,üëç (3)
2.66505E+17,notjack#9941,2021-06-08,I wish racket's language creation facilities had better tools for language authors to set up syntax highlighting,,
6.46114E+17,samth#3420,2021-06-08,@notjack in the sense of providing a separate lexer for syntax-coloring?,,
6.46114E+17,samth#3420,2021-06-08,or in the sense of keyword highlighting?,,
2.66505E+17,notjack#9941,2021-06-08,"@samth separate lexer, ideally in a way that can be hooked up to more editors than just drracket",,
2.66505E+17,notjack#9941,2021-06-08,like TextMate grammars,,
6.46114E+17,samth#3420,2021-06-08,"that already exists, although it's in Racket so it's less easy to access from other editors",,
6.46114E+17,samth#3420,2021-06-08,but that's a sort of fundamental tradeoff,,
2.66505E+17,notjack#9941,2021-06-08,the drracket coloring lexer stuff does exist but it's definitely not a particularly good tool and getting it to work in other editors is a nonstarter,,
6.46114E+17,samth#3420,2021-06-08,"I agree that it could be improved in an internal-to-racket sense but it's hard for me at least to imagine what a Racket-y way of providing something that other editors could use would work, since there isn't even a standard there",,
2.66505E+17,notjack#9941,2021-06-08,"there's a pseudo-standard, actually. TextMate grammars are used widely across many editors and seem like they could work as a common format. maybe a way for a `#lang` to specify such a grammar in a `lexer` submodule, similar to the `reader` submodule?",,
2.66505E+17,notjack#9941,2021-06-08,"the in-development Semantic Highlighting extension to the language server protocol is building on top of textmate grammars, I think",,
2.66505E+17,notjack#9941,2021-06-08,cc @Runi,,
1.32971E+17,thornAvery#3077,2021-06-09,what would people reccomend as a library for drawing SVG images?,,
2.66505E+17,notjack#9941,2021-06-09,there's `rsvg` but I haven't used it,,
2.66505E+17,notjack#9941,2021-06-09,https://docs.racket-lang.org/rsvg/index.html,,
2.66505E+17,notjack#9941,2021-06-09,doesn't give you much other than drawing,,
6.46114E+17,samth#3420,2021-06-09,@thornAvery you can just create `pict`s using the `racket/draw` library and then export them as SVGs,,
5.24323E+17,Ben Kenobi#5683,2021-06-09,"Update on the project to host an archive of the Racket Slack: I have been
directed to some privacy issues with the current proof-of-concept. Until these
issues are resolved, I have made the repository private and taken down the site.

If you have a copy of the archive files or site, I must ask that you refrain
from using them publicly until those impacted have a chance to decide what to
do.

If you wish to participate in the discussion, please join the Racket Slack [1,2]
and use the channel #deleted-channel-archive. You can also reach out privately to me and
Sam Tobin-Hochstadt, as we have become the organizers behind the archive. So
that I remain accountable and transparent, I would prefer any private
communication with me to include Sam.

The crux of the issue is data privacy: What data is in the archive? What are we
doing with private data? How are we using data from the archive? How are we
going to explain that to people? What will opt-in/opt-out look like? &c. More
details in Slack.

[1] https://racket.slack.com/
[2] https://racket-slack.herokuapp.com/",,
2.14881E+17,Moinate#6061,2021-06-09,"ugh, good idea though, hope you can figure it out",,üëç (1)
6.36577E+17,kosengan#6044,2021-06-09,"I am thinking building a  graph database just for fun and learning
should I do it in racket or in scheme(chicken) or other lisp like  Common Lisp?
would be helpful if I can also know why for choosing any of them üôÇ",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-09,"ü§∑‚Äç‚ôÄÔ∏è if it's a toy, use whatever language you like more",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-09,"I know CL has mature graph dbs, so I guess if you choose CL you have where to draw inspiration from, but other than that idk",,
8.14743E+16,jimpjorps#0001,2021-06-09,"I think racket's easier to get set up and has better user documentation, if that's a consideration",,
8.14743E+16,jimpjorps#0001,2021-06-09,"otherwise I dunno, whichever one you vibe with",,
2.14881E+17,Moinate#6061,2021-06-09,"yeah, in my opinion CL is hard for beginners unless you have somebody to get you started, show you the right packages to use, show you which idioms to use and which are ummm retro straight from the 60s and should be avoided.",,
1.35871E+17,Drakonis#1712,2021-06-09,@gingerydoo so why call it xiden anyways? the name doesnt seem very searchable,,
7.14999E+17,gingerydoo#7461,2021-06-09,"I normally choose names based on current competition in search rankings, so we're probably defining ""searchable"" differently. I imagine the results would change since I first checked anyway. What was your difficulty?",,
1.35871E+17,Drakonis#1712,2021-06-09,"basically, its colliding with some political stuff right now",,
1.35871E+17,Drakonis#1712,2021-06-09,derogatory political names,,
7.14999E+17,gingerydoo#7461,2021-06-09,"*Sigh*, yes, which is my luck for you, I guess. Those stories popped up after I chose the name.",,
7.14999E+17,gingerydoo#7461,2021-06-09,I figured the name was unusual enough for that not to happen.,,
1.35871E+17,Drakonis#1712,2021-06-09,"by the way, seeing that you updated the project readme to say that it is racket's answer to guix, perhaps it is worth looking into ways to build an operating system with it?",,
1.35871E+17,Drakonis#1712,2021-06-09,"racket all the way down, yeah?",,
7.14999E+17,gingerydoo#7461,2021-06-09,Absolutely. Self-hosting follows once the interface is stabilized. üôÇ,,
1.35871E+17,Drakonis#1712,2021-06-09,init and cron in racket will be v. fun.,,
7.14999E+17,gingerydoo#7461,2021-06-09,From there I can work it into LFS.,,
1.35871E+17,Drakonis#1712,2021-06-09,"hmm, i did mean using it to manage an entire operating system, like guix does",,
1.35871E+17,Drakonis#1712,2021-06-09,its a very fun thing anyways,,
7.14999E+17,gingerydoo#7461,2021-06-09,"Yes. Right now I'm focused on distributing a fixed `libcrypto` for all platforms on `x86_64`, so it will be a bit.",,
1.35871E+17,Drakonis#1712,2021-06-09,i see,,
7.14999E+17,gingerydoo#7461,2021-06-09,(Mac support hurts),,
1.35871E+17,Drakonis#1712,2021-06-09,"ah yes, macs.",,
2.66505E+17,notjack#9941,2021-06-09,"on the bright side at least ""racket xiden"" is an easy way to disambiguate the search",,
1.35871E+17,Drakonis#1712,2021-06-09,"if i were you, i'd just sidestep that and start on the OS part",,
1.35871E+17,Drakonis#1712,2021-06-09,sure,,
1.35871E+17,Drakonis#1712,2021-06-09,since racket has a large range of libraries,,
1.35871E+17,Drakonis#1712,2021-06-09,rash as the default shell anyone :V?,,
7.14999E+17,gingerydoo#7461,2021-06-09,Potentially. Time will tell. üôÇ,,
1.35871E+17,Drakonis#1712,2021-06-09,of course.,,
1.35871E+17,Drakonis#1712,2021-06-09,do you hang out anywhere else or is it just discord?,,
1.35871E+17,Drakonis#1712,2021-06-09,"its a dumb question, really.",,
1.35871E+17,Drakonis#1712,2021-06-09,i'm a irc rat,,
7.14999E+17,gingerydoo#7461,2021-06-09,E-mail and Signal.,,
1.35871E+17,Drakonis#1712,2021-06-09,"oh, i see.",,
1.35871E+17,Drakonis#1712,2021-06-09,"well, alright",,
7.14999E+17,gingerydoo#7461,2021-06-09,"A Mastodon instance is in the future, but I haven't put up the notification system yet.",,
1.35871E+17,Drakonis#1712,2021-06-09,i have been sitting on #xiden on libera but eh,,
7.14999E+17,gingerydoo#7461,2021-06-09,libera?,,
1.35871E+17,Drakonis#1712,2021-06-09,"libera.chat, the place where everyone fled when freenode got taken over",,
7.14999E+17,gingerydoo#7461,2021-06-09,"Did someone set up a chat for my project, or the political controversy?",,
1.35871E+17,Drakonis#1712,2021-06-09,oh i did that myself lol,,
1.35871E+17,Drakonis#1712,2021-06-09,but i dont think its necessary yet,,
1.35871E+17,Drakonis#1712,2021-06-09,"its the chat for the project, not the political controversy",,
1.35871E+17,Drakonis#1712,2021-06-09,thankfully none of that on libera,,
1.35871E+17,Drakonis#1712,2021-06-09,i'm just idling there atm,,
1.35871E+17,Drakonis#1712,2021-06-09,its just me,,
7.14999E+17,gingerydoo#7461,2021-06-09,Gotcha. I'm only monitoring here and GitHub issues on that front.,,
1.35871E+17,Drakonis#1712,2021-06-09,i've been keeping an eye out for xiden in the past two months since i've discovered it in a lark,,
7.14999E+17,gingerydoo#7461,2021-06-09,Thank you for the interest!,,
2.66505E+17,notjack#9941,2021-06-09,btw thanks for putting in the work to actually build stuff in the racket package management space. it's an area with a lot of community desire but few coordinated efforts.,,
7.14999E+17,gingerydoo#7461,2021-06-09,Happy to do it. It's a fascinating problem space.,,
1.35871E+17,Drakonis#1712,2021-06-09,"i'm squarely in the ""use racket to manage anything"" space",,
7.14999E+17,gingerydoo#7461,2021-06-09,"That was part of the motivation. I wanted to see Racket appear in more ""cross-ecosystem"" work, if that makes sense.",,üíØ (1)
1.35871E+17,Drakonis#1712,2021-06-09,nix is pretty decent but it hasnt aged all that well and guix is pretty great but it still needs work on a few sharp edges,,
2.66505E+17,notjack#9941,2021-06-09,yeah I really like the idea of pushing racket into the platform tooling space,,
7.14999E+17,gingerydoo#7461,2021-06-09,"I felt that Guix was brilliant, it just had more abstractions than I thought were necessary.",,
1.35871E+17,Drakonis#1712,2021-06-09,"i enjoy that they roll their own build systems, bootstrap things and have importers",,
7.14999E+17,gingerydoo#7461,2021-06-09,But I need more experiments to know if that's a fair assessment.,,
1.35871E+17,Drakonis#1712,2021-06-09,"also standards, which is something that nix lacks",,
2.66505E+17,notjack#9941,2021-06-09,the `#lang` mechanism seems like a way better alternative to all these dang untyped schema-less editor-unsupported yaml-based config languages,,"üíØ (3),üëç (2),üëÄ (2)"
7.14999E+17,gingerydoo#7461,2021-06-09,Yes.,,
7.14999E+17,gingerydoo#7461,2021-06-09,Absolutely yes.,,
1.35871E+17,Drakonis#1712,2021-06-09,guix is very brilliant and it has various abstractions that are very fun,,
1.35871E+17,Drakonis#1712,2021-06-09,in particular the ability to use scheme for modelling complex situations for their init and cron,,
4.1228E+17,xgqt#8370,2021-06-09,are you talking about languages used in package managers? both guix and nix are very far from yaml,,
1.35871E+17,Drakonis#1712,2021-06-09,both are essentially maintained by guix at this point,,
7.14999E+17,gingerydoo#7461,2021-06-09,"Once Xiden gets to the point that it can bundle into in a GNU/Linux distribution, the scope of work will explode.",,
1.35871E+17,Drakonis#1712,2021-06-09,also it runs on hurd which is pretty great.,,
2.66505E+17,notjack#9941,2021-06-09,"not those specific ones, no",,
2.66505E+17,notjack#9941,2021-06-09,hell I usually write all my build tooling in bazel so it's a python-like syntax I'm used to for platform config,,
1.35871E+17,Drakonis#1712,2021-06-09,"then comes the part where it can actually manage a whole system, now that's where the fun parts begin",,
1.35871E+17,Drakonis#1712,2021-06-09,"use racket to replace build systems, its fun i tell you",,
2.66505E+17,notjack#9941,2021-06-09,the module system and phase separation make for really interesting build system building blocks,,üëç (1)
1.35871E+17,Drakonis#1712,2021-06-09,yes.,,
2.66505E+17,notjack#9941,2021-06-09,a core feature I really want there is for racket to be better about tracking how dependencies and submodules interact,,
1.35871E+17,Drakonis#1712,2021-06-09,https://git.savannah.gnu.org/cgit/guix.git/tree/ and https://guix.gnu.org/en/manual/devel/en/guix.html,,
1.35871E+17,Drakonis#1712,2021-06-09,"now yes, that'd be good.",,
2.66505E+17,notjack#9941,2021-06-09,it's absurd that we have to manually split code into lib doc and test packages when we could just write lib doc and test submodules instead,,
1.35871E+17,Drakonis#1712,2021-06-09,https://guix.gnu.org/en/manual/devel/en/guix.html#Programming-Interface this part is relevant to this topic,,
6.46114E+17,samth#3420,2021-06-09,@notjack I think you would still want to split packages even if you had better dependency tracking,,
7.14999E+17,gingerydoo#7461,2021-06-09,"Xiden follows Guix's concept of package inputs and outputs, so tracking is a matter of logging user-selected outputs. Would you expect more than that?",,
2.66505E+17,notjack#9941,2021-06-09,"@samth it's not just dep tracking. I want to be able to selectively compile racket source code such that specific submodules can be omitted, so I can compile libraries without installing their test-only deps.",,
6.46114E+17,samth#3420,2021-06-09,I think selective compilation would be good but that having some code installed where parts of it don't work because their dependencies aren't installed seems bad,,
7.14999E+17,gingerydoo#7461,2021-06-09,"I get that. My only nitpick is that when I install `racket-minimal` and then install a well-known `-lib` package, I don't want to install the rest of the world. `rackunit-lib` pulls in way more than I want to install.",,
7.14999E+17,gingerydoo#7461,2021-06-09,Which is fine. It's a fantastic library. But I understand the desire to prune out more.,,
2.66505E+17,notjack#9941,2021-06-09,"yeah I'd rather see you be able to just say ""install rackunit, and this is a docker image: nobody's going to be rendering docs or running tests, so you can just skip compiling those submodules or following any of those edges in the dep graph""",,üëç (1)
2.66505E+17,notjack#9941,2021-06-09,we already have this for precompiled deps. you can skip downloading bytecode for things you don't need. we just haven't pushed that logic further towards the input end of the build process.,,
2.66505E+17,notjack#9941,2021-06-09,and we're paying the price for it with extra config and filesystem indirection,,
7.14999E+17,gingerydoo#7461,2021-06-09,"Does `raco pkg` have a good spot for input overriding, s.t. you can say ""If I encounter this checksum, replace the artifact I'm about to use with the one the user wants""?",,
7.14999E+17,gingerydoo#7461,2021-06-09,#NAME?,,
6.46114E+17,samth#3420,2021-06-09,"@gingerydoo there isn't something like that now, but it seems like something that would be good",,
7.14999E+17,gingerydoo#7461,2021-06-09,"I'm unsure if it's the best solution. I just remember that there was a lot of backwards compatibility to protect, so I'm spitballing.",,
2.66505E+17,notjack#9941,2021-06-09,"I'd also like a way to say ""this module is a test-only library"" and have the module system enforce that you don't use it outside `test` submodules (or other test-only libraries)",,ü§î (1)
7.14999E+17,gingerydoo#7461,2021-06-09,That sounds tricky. Would that be solved in terms of the module resolver?,,
2.66505E+17,notjack#9941,2021-06-09,"No clue, honestly. Just daydreaming.",,
7.14999E+17,gingerydoo#7461,2021-06-09,Gotcha,,
1.35871E+17,Drakonis#1712,2021-06-09,ah input overriding is a very pleasant thing,,
1.35871E+17,Drakonis#1712,2021-06-09,i'd use it for dealing with notably obnoxious software such as nvidia's libraries,,
6.46114E+17,samth#3420,2021-06-09,@notjack I think the difference between source and compiled forms is important here -- my feeling is that installing source code on your system that doesn't work is bad,,
2.66505E+17,notjack#9941,2021-06-09,"what does ""installing source code on your system"" mean?",,
2.66505E+17,notjack#9941,2021-06-09,"(not a sarcastic question, I'm not sure what issue you're talking about)",,
2.75501E+17,Plane#0324,2021-06-09,"I had something slightly similar happen once, when a terrorist group adopted the same name as a character in a game I made years beforehand, and suddenly I got lots of angry messages",,üò¨ (3)
1.35871E+17,Drakonis#1712,2021-06-09,"ah yes, must be isis right?",,
1.35871E+17,Drakonis#1712,2021-06-09,i've seen this happen a few times before,,
2.66505E+17,notjack#9941,2021-06-09,see also the show Archer,,
1.35871E+17,Drakonis#1712,2021-06-09,^,,
1.35871E+17,Drakonis#1712,2021-06-09,that's the example i was going for,,
7.14999E+17,gingerydoo#7461,2021-06-09,"An old client of mine was hosting his blog using an Indian provider, which was the subject of a Pakistani infiltration op. That was not a support ticket I ever thought I'd run into.",,
7.14999E+17,gingerydoo#7461,2021-06-09,"""Hey Sage, uhhh, look at the site.""",,
7.14999E+17,gingerydoo#7461,2021-06-09,"Thankfully the hack was due to bad file permissions that only led to an unwanted `index.html`, but _what an index.html it was._",,
1.35871E+17,Drakonis#1712,2021-06-09,oof,,
7.14999E+17,gingerydoo#7461,2021-06-09,"I'm unsure if I want to change Xiden's name again though. It was originally `zcpkg`, which I scrapped for being unpronounceable.",,
7.14999E+17,gingerydoo#7461,2021-06-09,Although I am tempted.,,
1.30231E+17,sarna#3904,2021-06-09,"just make the pronunciation up, isn't this how english works? :meowsmile:",,meowblushcool (1)
1.35871E+17,Drakonis#1712,2021-06-09,"guix is guile nix, but how can do something like that but for racket?",,
7.14999E+17,gingerydoo#7461,2021-06-09,I'm used to people intentionally misspelling things to dodge trademark suits.,,
8.14743E+16,jimpjorps#0001,2021-06-09,raxit,,
8.14743E+16,jimpjorps#0001,2021-06-09,"could always just flip the name around, nedix",,
7.14999E+17,gingerydoo#7461,2021-06-09,"I could, but it sounds like a pharma startup by Ned Flanders. üòÑ",,
7.14999E+17,gingerydoo#7461,2021-06-09,Which isn't bad.,,
1.35871E+17,Drakonis#1712,2021-06-09,"a little closer to all the people who like to do those ""brexit"" looking names lol",,
1.35871E+17,Drakonis#1712,2021-06-09,"all names are ruined, restart civilization",,
2.66505E+17,notjack#9941,2021-06-09,names were a mistake. things were not meant to be perceived.,,üòÇ (1)
7.14999E+17,gingerydoo#7461,2021-06-09,(Question: Should any of this move to #off-topic?),,
1.35871E+17,Drakonis#1712,2021-06-09,yes,,
1.35871E+17,Drakonis#1712,2021-06-09,should we?,,
2.66505E+17,notjack#9941,2021-06-09,sounds like a good idea,,
1.35871E+17,Drakonis#1712,2021-06-09,i should definitely go pick up racket,,
1.35871E+17,Drakonis#1712,2021-06-09,i have briefly messed with guile but i'm not good enough at it atm,,
2.66505E+17,notjack#9941,2021-06-09,racket is a neat language(s),,
1.35871E+17,Drakonis#1712,2021-06-09,yes,,
1.35871E+17,Drakonis#1712,2021-06-09,is there a racket that makes it basically just a fancy scheme?,,
1.35871E+17,Drakonis#1712,2021-06-09,go back to being just scheme without the imperative constructs?,,
8.14743E+16,jimpjorps#0001,2021-06-09,there's #lang r5rs,,üëç (1)
1.35871E+17,Drakonis#1712,2021-06-09,fun!,,
8.14743E+16,jimpjorps#0001,2021-06-09,for whatever reason racket is the language that's made a lot of intermediate+ programming concepts finally click for me,,
8.14743E+16,jimpjorps#0001,2021-06-09,I've been able to go back to languages I completely bounced off of several years ago,,
1.30231E+17,sarna#3904,2021-06-09,hey @notjack do you know any examples of racket `#langs` that could replace the yaml-abominations like terraform?,,
1.35871E+17,Drakonis#1712,2021-06-09,yes please do that,,
1.35871E+17,Drakonis#1712,2021-06-09,also yes please do that,,
7.14999E+17,gingerydoo#7461,2021-06-09,One of the best perks to Racket is that you can switch what you focus on without a jarring switch in tooling.,,
6.46114E+17,samth#3420,2021-06-09,"@notjack What I mean is that if you install ""typed-racket"" it installs a bunch of scribble docs.  I could imagine that you might install that with a ""--lib-only"" flag that wouldn't install the documentation dependencies, but then what happens if you go open one of those files and then try to run it?",,
1.30231E+17,sarna#3904,2021-06-09,but the tooling kinda sucks :(,,
7.14999E+17,gingerydoo#7461,2021-06-09,How so?,,
1.35871E+17,Drakonis#1712,2021-06-09,also i'd like to point out that guix has a command for deploying things,,
1.35871E+17,Drakonis#1712,2021-06-09,i'd kill for something that let me deploy and manage remote systems but in racket,,
1.30231E+17,sarna#3904,2021-06-09,"I mean there's no really good editor support besides dr racket
emacs is nice but it's not quite there yet, especially for custom `#lang`s",,
1.30231E+17,sarna#3904,2021-06-09,people are working on that though üëÄ,,
7.14999E+17,gingerydoo#7461,2021-06-09,You've used `racket-mode` right?,,
6.46114E+17,samth#3420,2021-06-09,"@notjack if you only download/install the source files that are needed for the library, then you don't have that problem so much, but that's in tension with your desire to use submodules",,
2.66505E+17,notjack#9941,2021-06-09,"editor popup saying ""you're trying to run a `doc` submodule but this package's documentation dependencies haven't been installed, would you like to install them now?""",,
1.30231E+17,sarna#3904,2021-06-09,"yeah I'm using it, it's pretty great! but it's janky at times. or maybe it's just me",,
2.66505E+17,notjack#9941,2021-06-09,this used to be my go-to example for that kind of thing but unfortunately it seems to have bitrotted https://pkgs.racket-lang.org/package/aws-cloudformation-template,,
7.14999E+17,gingerydoo#7461,2021-06-09,The only issue I've encountered is when `racket-mode` launches Racket s.t. the program behaves differently than using the CLI launcher. But that's fairly rare.,,
7.14999E+17,gingerydoo#7461,2021-06-09,And I mean differences beyond an interactive context.,,
7.14999E+17,gingerydoo#7461,2021-06-09,(e.g. `ffi-obj` fails only in `racket-mode` for a complete path to a lib),,
1.35871E+17,Drakonis#1712,2021-06-09,"real quick question regarding xiden's launchers, i have a burning desire to run things that require the fhs to work",,
1.35871E+17,Drakonis#1712,2021-06-09,"launchers should make it easy to achieve that, right?",,
7.14999E+17,gingerydoo#7461,2021-06-09,fhs?,,
1.35871E+17,Drakonis#1712,2021-06-09,the file hierarchy standard,,
1.35871E+17,Drakonis#1712,2021-06-09,how the directories are expected to be structured,,
6.46114E+17,samth#3420,2021-06-09,@gingerydoo that sounds like a bug to me,,
7.14999E+17,gingerydoo#7461,2021-06-09,I didn't raise the issue because it did not persist beyond a reboot. Cache related?,,
7.14999E+17,gingerydoo#7461,2021-06-09,"@Drakonis In theory, yes. All `#lang xiden/launcher` does is make Xiden subservient to your `(module+ main)`, so that you can supplant your own CLI or extend Xiden's. You can use that to insist on a FHS-compliant root.",,
6.46114E+17,samth#3420,2021-06-09,"There is lots of annoying state in the ffi for sadly-fundamental reasons, so that could be. Also racket-mode doesn't re-launch racket every time",,
1.35871E+17,Drakonis#1712,2021-06-09,i see.,,
1.35871E+17,Drakonis#1712,2021-06-09,"basically, if i want to use xiden to manage my whole system like guix system and nixos, i'd need that to launch fhs applications without needing to resort to copious amounts of cheating",,
7.14999E+17,gingerydoo#7461,2021-06-09,That would explain it. I was iterating on a `.so` that was changing exported symbols.,,
1.35871E+17,Drakonis#1712,2021-06-09,"also launching environments containing sets of packages, ie: python libraries",,
6.46114E+17,samth#3420,2021-06-09,"Yes, that is unlikely to work with the way racket-mode is architected",,üëç (1)
7.14999E+17,gingerydoo#7461,2021-06-09,"What's an example of a ""cheat"" in this context?",,
1.35871E+17,Drakonis#1712,2021-06-09,patchelf and wrappers,,
1.35871E+17,Drakonis#1712,2021-06-09,let me point you to an example,,
7.14999E+17,gingerydoo#7461,2021-06-09,patchelf is interesting. I can see it being a little scary at times.,,
1.35871E+17,Drakonis#1712,2021-06-09,wrappers are used for getting packages into scope,,
1.30231E+17,sarna#3904,2021-06-09,thanks! I can't render the docs for it though :(,,
2.66505E+17,notjack#9941,2021-06-09,yeah üò¶ not sure what has to be done to fix that. looks like turnstile changed in a way that broke it at some point?,,
1.35871E+17,Drakonis#1712,2021-06-09,https://github.com/NixOS/nixpkgs/tree/master/pkgs/build-support this whole section i think,,
1.35871E+17,Drakonis#1712,2021-06-09,there's a appimage builder that's used for executing appimages,,
1.30231E+17,sarna#3904,2021-06-09,"I've had some weird issues with indentation, but it could be my general emacs config and not racket-mode.
I also had issues with looking up docs, I resolved them after messing around with the config for a couple days though",,
1.35871E+17,Drakonis#1712,2021-06-09,nixpkgs has a very silly amount of shell scripting to make things work as they should,,
7.14999E+17,gingerydoo#7461,2021-06-09,"I had to re-learn indentation. At first I expected it to still be a shift by a fixed number of columns. Since Lisp indentation rules are form-dependent, I was wondering why my `test-custom-case` form was not indenting the same way `test-case` would üò¶",,
7.14999E+17,gingerydoo#7461,2021-06-09,"But `C-x C-e` is, as far as I'm concerned, a superpower. üôÇ",,
1.35871E+17,Drakonis#1712,2021-06-09,"@gingerydoo you've used nix before, yeah?",,
1.30231E+17,sarna#3904,2021-06-09,"yeah it's weird stuff! I'm trying to use parinfer at the moment to ease the editing a bit, but I get a whole different bunch of problems now",,
1.30231E+17,sarna#3904,2021-06-09,(I use doom emacs),,
7.14999E+17,gingerydoo#7461,2021-06-09,Barely. Most of my knowledge of this form of dependency management came from studying Guix.,,
1.35871E+17,Drakonis#1712,2021-06-09,i see,,
7.14999E+17,gingerydoo#7461,2021-06-09,Some of Nix's decisions spooked me a bit.,,
1.35871E+17,Drakonis#1712,2021-06-09,https://nixos.org/manual/nixpkgs/stable/#chap-language-support so basically,,
1.35871E+17,Drakonis#1712,2021-06-09,"the whole ""withPackages"" thing is what i want to avoid by using launchers",,
1.35871E+17,Drakonis#1712,2021-06-09,there's some pretty heavy technical debt going on with nix,,
7.14999E+17,gingerydoo#7461,2021-06-09,Interesting. I wonder why. The overarching premise remains pretty lean.,,
1.35871E+17,Drakonis#1712,2021-06-09,"language design, community, nixpkgs itself being very messy",,
1.35871E+17,Drakonis#1712,2021-06-09,its not ergonomic,,
6.46114E+17,samth#3420,2021-06-09,It still feels to me like Guix and Nix are fairly hard to square with the way I use Racket (or Python or Ruby) where I expect to be able to `(require foo)` and have it work at the repl.,,plusone (2)
1.30231E+17,sarna#3904,2021-06-09,it's C++ and bash after all haha,,
1.35871E+17,Drakonis#1712,2021-06-09,nixpkgs is bash and nixlang with a dash of perl in the inner components,,
1.35871E+17,Drakonis#1712,2021-06-09,its very horrible,,
1.35871E+17,Drakonis#1712,2021-06-09,also no standards at all,,
7.14999E+17,gingerydoo#7461,2021-06-09,"It is. Starting a project like it often means abandoning collections, which is a huge handicap.",,
1.35871E+17,Drakonis#1712,2021-06-09,collections?,,
7.14999E+17,gingerydoo#7461,2021-06-09,"Racket groups modules into collections, which provides the most concise way to require dependencies. (EDIT: grammar)",,
1.35871E+17,Drakonis#1712,2021-06-09,ah i see,,
6.46114E+17,samth#3420,2021-06-09,But it's not about collections. It's that I can't just start doing stuff dynamically without upfront declaring what files my programs depend on.,,
1.35871E+17,Drakonis#1712,2021-06-09,"also if there's going to be system management with xiden, do user level management as well",,
1.35871E+17,Drakonis#1712,2021-06-09,"anyhow, i'll stop taking your time, i have some work of my own to to do right now",,üëç (1)
6.46114E+17,samth#3420,2021-06-09,"for example, if I want to start using openssl via the FFI I have to set that up ahead of time",,
1.35871E+17,Drakonis#1712,2021-06-09,"i did get very excited though, either way, toots.",,
7.14999E+17,gingerydoo#7461,2021-06-09,"I ran into that issue re: integrity information and signatures. In that if I declare a dependency, I need to know both to use all security checks. I ended up using an archaeology metaphor where one ""digs"" for needed information in response to requesting a dependency.",,
7.14999E+17,gingerydoo#7461,2021-06-09,"Put another way, there's a small version of `unlike-assets` in Xiden.",,
7.14999E+17,gingerydoo#7461,2021-06-09,"In the REPL,  `require` use is initially file level, but there are ways to use Xiden s.t. you load a require transformer with your idioms in advance of the dependency you care about.",,
7.14999E+17,gingerydoo#7461,2021-06-09,https://github.com/zyrolasting/xiden/blob/master/examples/01-differing-versions/program.rkt,,
7.14999E+17,gingerydoo#7461,2021-06-09,"It's still an extra step, granted. I'd love to flatten that more.",,
6.46114E+17,samth#3420,2021-06-09,"I'm not sure about xiden, but for nix/guix it seems to be oriented towards a C-style model where programs have a static set of dependencies and are compiled into binaries that then have some files they depend on.",,
6.46114E+17,samth#3420,2021-06-09,"whereas the model of ""I start up DrRacket and then I get to run whatever I want"" seems opposed to that",,
7.14999E+17,gingerydoo#7461,2021-06-09,"Yes, IIRC, Nix embeds message digests directly into artifacts. That impacts the workflow a bit.",,
7.14999E+17,gingerydoo#7461,2021-06-09,"I viewed the issue in terms of giving the Racket module resolver what it needs, which is why I focused my interpretation on collections. Collections remain the fastest way to pull in what I'm thinking of post-installation. The Nix/Guix/Xiden model is more about pulling in dependencies outside of Racket's understanding of them.",,
4.66395E+17,oaktownsam#0815,2021-06-09,HCL is not so bad...,,
2.66505E+17,notjack#9941,2021-06-09,I have a global namespace. I can't fix diamond dependencies so I sandbox things. Now I have local namespaces. I can't use my system interactively so I add unique identifiers. Now I have a global namespace. I can't fix diamond dependencies so I sandb-,,meowsmile (3)
7.14999E+17,gingerydoo#7461,2021-06-09,"This one is super hard. I ended up creating an abstraction for ""name canons"" so a user can override what names or identifiers are canonical for a given transaction.",,
7.14999E+17,gingerydoo#7461,2021-06-09,No idea how that will play out.,,
2.66505E+17,notjack#9941,2021-06-09,my honest suggestion is just bite the bullet and make URLs,,
2.66505E+17,notjack#9941,2021-06-09,these schemes all turn into them eventually,,üëå (1)
7.14999E+17,gingerydoo#7461,2021-06-09,"Yes, that will be the case for catalogs.",,üëç (1)
2.75501E+17,Plane#0324,2021-06-09,success!  i managed to refactor my infix parser,,
2.75501E+17,Plane#0324,2021-06-09,"```scheme
(begin-for-syntax
  (define-operator-classes infix:
     binary    op-or         (or)
     binary    op-and        (and)
     unary     op-not        (not)
     variadic  op-equal      (eq? eqv? equal? = not-eq? not-eqv? not-equal? !=)
     variadic  op-inequality (< <= > >=)
     binary    op-add-sub    (+ -)
     binary    op-mul-div    (* / modulo quotient remainder // % quotient/remainder)
     binary    op-expt       (^ expt)))

(define-syntax-parser infix:
  #:track-literals
  [(_ (~parens e e0 ...+))   #'(infix: e e0 ...)]
  [(_ op:op-or-expr)         #'op.result]
  [(_ op:op-and-expr)        #'op.result]
  [(_ op:op-not-expr)        #'op.result]
  [(_ op:op-equal-expr)      #'op.result]
  [(_ op:op-inequality-expr) #'op.result]
  [(_ op:op-add-sub-expr)    #'op.result]
  [(_ op:op-mul-div-expr)    #'op.result]
  [(_ op:op-expt-expr)       #'op.result]    
  [(_ f xs ...+)             #'(f xs ...)]
  [(_ x)                     #'x])
```",,
2.75501E+17,Plane#0324,2021-06-09,"it's getting closer to ""i can tell what it's doing when i look at it""",,racketflat (1)
2.66505E+17,notjack#9941,2021-06-09,"that reminds me: I want something like that in `rebellion/base/comparator`, would you be interested in working on that?",,
2.75501E+17,Plane#0324,2021-06-09,"oh!  i am interested but i have a call, let me get back to you",,üëç (1)
1.93202E+17,rocketnia#4517,2021-06-09,"I read ""untyped schema-less editor-unsupported"" and thought for sure you were going to end wiith ""Racket #langs"" üòÖ",,üòÜ (1)
2.75501E+17,Plane#0324,2021-06-09,"maybe fancier üëÄ
```scheme
(define-infix-parser infix:
  #:operator-classes 
     binary    op-or         (or)
     binary    op-and        (and)
     unary     op-not        (not)
     variadic  op-equal      (eq? eqv? equal? = not-eq? not-eqv? not-equal? !=)
     variadic  op-inequality (< <= > >=)
     binary    op-add-sub    (+ -)
     binary    op-mul-div    (* / modulo quotient remainder // % quotient/remainder)
     binary    op-expt       (^ expt)
  #:precedence
     op-or
     op-and
     op-not
     op-equal
     op-inequality
     op-add-sub
     op-mul-div
     op-expt)
```",,
2.75501E+17,Plane#0324,2021-06-09,so now maybe other people could use it to make their own infix parsers <https://github.com/plane/infix-parse/blob/master/private/infix.rkt>,,
2.75501E+17,Plane#0324,2021-06-09,"(right now everyone is thinking ""where are all the parentheses?? give them back"")",,
2.75501E+17,Plane#0324,2021-06-09,or is it redundant having the operator classes and precedence declared separately?  maybe it should just be based on the order you define the classes in?,,
2.75501E+17,Plane#0324,2021-06-09,i thought this way it would make sense to a reader because there's a section explicitly labeled 'precedence',,
2.75501E+17,Plane#0324,2021-06-09,then it would look something like this,,
2.75501E+17,Plane#0324,2021-06-09,"```scheme
(define-infix-parser infix:
  binary    (or)
  binary    (and)
  unary     (not)
  variadic  (eq? eqv? equal? = not-eq? not-eqv? not-equal? !=)
  variadic  (< <= > >=)
  binary    (+ -)
  binary    (* / modulo quotient remainder // % quotient/remainder)
  binary    (^ expt))
```",,
2.14881E+17,Moinate#6061,2021-06-09,"i like the separate declaration of precedence, fwiw",,
2.14881E+17,Moinate#6061,2021-06-09,"if nobody can add more operators without editing the defintiion, i guess it doesn't matter and you could remove a ""level of indirection"" in the definition just put a comment indicating they are listed from lowest to highest precedence. the second one does look ""cleaner""",,
2.75501E+17,Plane#0324,2021-06-09,i was making the latter `define-simple-infix-parser` and making it expand to the former,,üòÑ (1)
2.14881E+17,Moinate#6061,2021-06-09,clever,,
2.66505E+17,notjack#9941,2021-06-09,"hmm, so looking at this `a <= b == c <= d` wouldn't be allowed right? you'd have to group on both sides of the `==`?",,
2.75501E+17,Plane#0324,2021-06-09,yes you would have to group,,
2.75501E+17,Plane#0324,2021-06-09,umm well there is no `==` but,,
2.75501E+17,Plane#0324,2021-06-09,assuming you meant `=`,,
2.66505E+17,notjack#9941,2021-06-09,oops yes that lol,,
2.75501E+17,Plane#0324,2021-06-09,"i was trying to come up with something reasonably intuitive, and i tried to leave out some gotchas in other languages like bitwise operations",,
2.66505E+17,notjack#9941,2021-06-09,yeah bitwise operators are rough,,
2.66505E+17,notjack#9941,2021-06-09,names for those are definitely better than symbols,,
2.75501E+17,Plane#0324,2021-06-09,but i was also just trying to come up with something i could generalize so you could define your own infix parser (although i don't know if people will actually need this - my ultimate purpose is just teaching myself the macro system! lol),,
2.75501E+17,Plane#0324,2021-06-09,gosh i've learned a lot already in this little project,,
2.75501E+17,Plane#0324,2021-06-09,now that i'm used to `syntax-parse` i'm going to try to use it for everything if i can,,üéâ (1)
2.66505E+17,notjack#9941,2021-06-09,"@Plane if you'd like to learn some more corners of racket's macro system, like `#%app` macros, `'paren-shape`, and `syntax-local-value`, you might like this blog post https://lexi-lambda.github.io/blog/2017/08/12/user-programmable-infix-operators-in-racket/",,
2.75501E+17,Plane#0324,2021-06-09,Thank you!,,
2.14881E+17,Moinate#6061,2021-06-09,notjack said he did not like quasiquote (or syntax quasiquote)...  is there a better way to stuff the value of a variable that exists during macro expansion into a syntax template?,,
2.14881E+17,Moinate#6061,2021-06-09,trying to figure out how to even type #` in discord,,
2.34164E+17,python#3213,2021-06-09,`?,,
2.14881E+17,Moinate#6061,2021-06-09,can you typeset it?,,
2.34164E+17,python#3213,2021-06-09,type what?,,
2.14881E+17,Moinate#6061,2021-06-09,"never mind on the original question, i figured out i had just gone around in a circle",,
2.75501E+17,Plane#0324,2021-06-09,can you give an example?  i have been using `#:with`,,
2.14881E+17,Moinate#6061,2021-06-09,"idk how i got it wrong the first time, I thought I had to do #`(quote #,variable) and that #'(quote variable) did not work, but it totally does",,
2.66505E+17,notjack#9941,2021-06-09,"using `#:with`, `with-syntax`, and `define/with-syntax` are what I usually do",,
2.66505E+17,notjack#9941,2021-06-09,"not always though, I use quasiquotation sometimes",,
2.75501E+17,Plane#0324,2021-06-09,"i learned about `~@` today, it's kind of like `~seq` but in a template",,
2.75501E+17,Plane#0324,2021-06-10,"it was the answer to my question, ""how do i group together multiple things in a template, so i can put `...` after them, without enclosing them in parens?""",,üò≤ (1)
2.66505E+17,notjack#9941,2021-06-10,yeah it's really really useful,,
2.66505E+17,notjack#9941,2021-06-10,patterns like `(foo (~@ key value) ...)` are common,,
1.30231E+17,sarna#3904,2021-06-10,you can't have variables in it :(,,
7.14999E+17,gingerydoo#7461,2021-06-10,"I'm sure the answer is ""yes"", but this is a new topic for me and I'm ignorant of the options.

Is there a `#lang` for program design specifications (think UML), that will raise errors and warnings in response to design-level problems?

My use case is that I spend probably 60% of my time not just writing code, but _rewriting_ code once I realize I made a design mistake. I'd like to get some of that time back.",,
7.14999E+17,gingerydoo#7461,2021-06-10,The online docs show options more focused on validating implementation-level concerns.,,
7.14999E+17,gingerydoo#7461,2021-06-10,"Doh, maybe this should have gone in #help. Sorry about that.",,
1.30231E+17,sarna#3904,2021-06-10,"what would qualify as a ""design-level problem""? I think it would be really hard to build a general solution for this ü§î",,
7.14999E+17,gingerydoo#7461,2021-06-10,"Possibly, but I know it would be feasible to create metrics for afferent and efferent coupling.",,
7.14999E+17,gingerydoo#7461,2021-06-10,"Example: If 87 modules depend on the same single module for a shared runtime configuration, I might want the `#lang` to raise a warning that dependency cycles with that module are likely given the _use case_ of the module (The dependency relationship alone is not enough evidence to suspect anything).

Granted, that's totally empirical. But it's also something you can jot down into the `#lang`'s logic so that it can remind you that mistake X seems to pop up for programs structured according to pattern Y.",,
7.14999E+17,gingerydoo#7461,2021-06-10,"For that reason I'd be satisfied with a `#lang` that does very little by default, but is easy to extend in that way.",,
1.30231E+17,sarna#3904,2021-06-10,"oh I see ü§î I haven't seen anything like this before, in racket or outside its ecosystem",,
7.14999E+17,gingerydoo#7461,2021-06-10,Only tools I've seen for this are graphical.,,
7.14999E+17,gingerydoo#7461,2021-06-10,UML was also a bit clunky. I'd prefer to use a textual DSL for the kind of thing it handles.,,
7.14999E+17,gingerydoo#7461,2021-06-10,"You know what, this might be interesting. Let me spitball for a sec.

```
#lang design

(racket-module ""rc""
  (provides a b c))

(racket-module ""cli""
  (dependencies ""rc"")
  (invokes ""python""))

(subprocess ""python"")
```",,
7.14999E+17,gingerydoo#7461,2021-06-10,"My thinking is that forms like `racket-module` is understood as ""The program contains a Racket module"" and `subprocess` indicates a host-level executable that the program will run as a subprocess.",,
7.14999E+17,gingerydoo#7461,2021-06-10,"A possible warning from this program might be `Module ""cli"" invokes subprocess ""python"", but no version information is defined, and there is no guarentee of availability on end-user systems`",,
7.14999E+17,gingerydoo#7461,2021-06-10,"I'd have to be careful here because one could easily spend more time writing code in this DSL than the actual program, but something like this would be handy if I'm considering a few possible directions to handle a scenario and I want to be reminded of landmines.",,
7.14999E+17,gingerydoo#7461,2021-06-10,@notjack's message yesterday is a perfect example because it's the kind of thing no one notices when neck deep in code. https://discordapp.com/channels/571040468092321801/618895179343986688/852289055940018216,,
1.30231E+17,sarna#3904,2021-06-10,yeah it'd be awesome for keeping track of the big picture somewhere,,
1.30231E+17,sarna#3904,2021-06-10,"a little off topic, but since you're here - @gingerydoo does `natural-cli` support subcommand aliases? I've been thinking of making a concourse-like CLI with it, where you'd have both long and short version of commands. `get-config` could be shortened to `gc` for example
but no idea how to do it honestly",,
2.66505E+17,notjack#9941,2021-06-10,aww thanks ‚ù§Ô∏è,,üíØ (1)
7.14999E+17,gingerydoo#7461,2021-06-10,"Have you tried creating a symbolic link to the subcommand? Since `natural-cli` is shamelessly file-oriented, you can exploit the subcommand machinery that way.",,
7.14999E+17,gingerydoo#7461,2021-06-10,Put another way: `natural-cli` does not have an abstraction for aliases. It just uses a file naming convention.,,
7.14999E+17,gingerydoo#7461,2021-06-10,"e.g.
```
natural-cli mkmodule app.rkt
natural-cli mkmodule app_get-config.rkt
ln -s app_get-config.rkt app_gc.rkt
racket app.rkt gc
```",,
7.14999E+17,gingerydoo#7461,2021-06-10,Obviously this won't help if you want to invoke a subcommand by unambiguous prefix. I'm open to adding that feature if needed.,,
1.30231E+17,sarna#3904,2021-06-10,oh that's genius!,,
1.30231E+17,sarna#3904,2021-06-10,what will `--help` do though?,,
7.14999E+17,gingerydoo#7461,2021-06-10,"Appreciate the kindness, but I might need to adjust `--help`. It will correctly show the symlinked name, but on a new line.",,
1.30231E+17,sarna#3904,2021-06-10,"I don't like this much, it's more annoying than useful for me",,
1.30231E+17,sarna#3904,2021-06-10,"ah, I'm worried that the sorting will get messed up",,
7.14999E+17,gingerydoo#7461,2021-06-10,"It's not that hard to combine the alias into an existing line, so I'll put that in for you.",,
7.14999E+17,gingerydoo#7461,2021-06-10,Do you think it's better to sort the names from short to long?,,
1.30231E+17,sarna#3904,2021-06-10,just for me? :meowblush:,,meowblush (1)
1.30231E+17,sarna#3904,2021-06-10,I'd put the long one first,,
7.14999E+17,gingerydoo#7461,2021-06-10,Just for you. üôÇ,,meowblushcool (2)
1.30231E+17,sarna#3904,2021-06-10,I think fly (concourse cli) shows you the long commands if you do `--help` and short ones when you do `-h`,,
1.30231E+17,sarna#3904,2021-06-10,"the version I prefer though is
`long-name <description> (aliases: <aliases>)`",,
7.14999E+17,gingerydoo#7461,2021-06-10,"ü§î I could do that, but it's an increase in scope, since Racket reserves the flag. I'd have to interject logic in advance of `command-line`, etc.",,
7.14999E+17,gingerydoo#7461,2021-06-10,I'll focus on consolidating the aliases first.,,
1.30231E+17,sarna#3904,2021-06-10,"yeah I don't think it's worth it tbh, I'd rather put that info right after command's description",,
1.30231E+17,sarna#3904,2021-06-10,"or even something like this:
```
some-command : do some stuff
sc : alias for some-command
```
if it's sorted it'd be :chefs_kiss:",,
1.35871E+17,Drakonis#1712,2021-06-10,:chefkiss:,,
1.35871E+17,Drakonis#1712,2021-06-10,ah i wish i had nitro,,
8.14743E+16,jimpjorps#0001,2021-06-10,:chef:,,
8.14743E+16,jimpjorps#0001,2021-06-10,there you go,,
1.35871E+17,Drakonis#1712,2021-06-10,that's the one,,
1.35871E+17,Drakonis#1712,2021-06-10,of course i recognized that lmao,,
1.35871E+17,Drakonis#1712,2021-06-10,psst i'm going to sneak racket into my dayjob,,
7.14999E+17,gingerydoo#7461,2021-06-10,I don't even sneak. Racket jobs are starting to pop up. üôÇ,,
7.14999E+17,gingerydoo#7461,2021-06-10,"Very few, granted. I was lucky.",,
6.46114E+17,samth#3420,2021-06-10,"@gingerydoo wait, you have a job working on Racket?",,
7.14999E+17,gingerydoo#7461,2021-06-10,"Not ON Racket, WITH Racket.",,
6.46114E+17,samth#3420,2021-06-10,right that's what I meant,,
7.14999E+17,gingerydoo#7461,2021-06-10,"Yes. there's things I can say and things I can't, but lemme fetch a link real quick.",,
7.14999E+17,gingerydoo#7461,2021-06-10,@samth  Felleisen forwarded a Redex position at MIT on Dec. 18th 2020 to the `racket-dev` list. That's what I got.,,
7.14999E+17,gingerydoo#7461,2021-06-10,"Subject ""[racket-dev] MIT position in Redex""",,
7.14999E+17,gingerydoo#7461,2021-06-10,https://groups.google.com/forum/?utm_medium=email&utm_source=footer#!msg/racket-dev/NNH7lL-aevU/DX8ebzOXAwAJ,,
7.14999E+17,gingerydoo#7461,2021-06-10,I also try to encourage startup founders in Atlanta to consider Racket.,,plusone (1)
1.35871E+17,Drakonis#1712,2021-06-10,i want to use racket for infra work,,
1.35871E+17,Drakonis#1712,2021-06-10,also bring back the lisp machine,,
7.14999E+17,gingerydoo#7461,2021-06-10,"(MODS: Note that since the link includes publicly-accessible emails in the community, I'm assuming it's okay to share it here. If this is too much of a privacy issue, please delete it now)",,
6.46114E+17,samth#3420,2021-06-10,Looks like a cool job,,
7.14999E+17,gingerydoo#7461,2021-06-10,"Oh, it is!",,
1.30231E+17,sarna#3904,2021-06-10,"I'm writing my own tooling in Racket at work, but I doubt it will ever be officially embraced - ops people don't really like weird programming stuff",,
1.30231E+17,sarna#3904,2021-06-10,bash and python is where it's at :meowwarp:,,
1.35871E+17,Drakonis#1712,2021-06-10,rash heyo,,
7.14999E+17,gingerydoo#7461,2021-06-10,"@sarna `natural-cli` uses itself, so I tried making aliases against its own commands. This what you mean?",https://cdn.discordapp.com/attachments/618895179343986688/852658528891568148/unknown.png,
7.14999E+17,gingerydoo#7461,2021-06-10,File system in this case:,https://cdn.discordapp.com/attachments/618895179343986688/852659149221265429/unknown.png,
2.75501E+17,Plane#0324,2021-06-11,,https://cdn.discordapp.com/attachments/618895179343986688/852879231822069801/unknown.png,racketflat (4)
2.75501E+17,Plane#0324,2021-06-11,"```scheme
  (start-up-on-day  6 11 ""King Kamehameha Day"")
```",,
1.35871E+17,Drakonis#1712,2021-06-11,noice,,
2.75501E+17,Plane#0324,2021-06-11,"so i was thinking, the actual `f""whatever""` syntax in racket would probably not break very many programs",,
2.75501E+17,Plane#0324,2021-06-11,i doubt people often have a binding `f` which they want to use before a string literal without a space in between,,
2.75501E+17,Plane#0324,2021-06-11,"it's not very rackety, but `#""` is taken",,
2.66505E+17,notjack#9941,2021-06-11,"I'd like a thing where `foo""whatever""` reads as `(#%string foo ""whatever"")`",,
2.75501E+17,Plane#0324,2021-06-11,"i was thinking about alternative syntaxes though which might be more rackety than just `f""`",,
2.75501E+17,Plane#0324,2021-06-11,oh i see,,
2.34164E+17,python#3213,2021-06-11,are you trying to make fstrings in racket?,,
2.75501E+17,Plane#0324,2021-06-11,oh yeah i was thinking it wouldn't be a very big project,,
2.34164E+17,python#3213,2021-06-11,"i was gonna try that a while ago, but i had other stuff to do",,
2.34164E+17,python#3213,2021-06-11,"my idea was to use `#fmt""whatever""` as the syntax",,
2.75501E+17,Plane#0324,2021-06-11,"even though the reader allows leaving out whitespace before a string, i don't think people generally *do* that in racket",,
2.75501E+17,Plane#0324,2021-06-11,"so `foo""whatever""` would probably not break any existing code",,
2.34164E+17,python#3213,2021-06-11,okay,,
2.75501E+17,Plane#0324,2021-06-11,`#fmt` is nice,,
2.34164E+17,python#3213,2021-06-11,"i just thought #fmt"" because it would be more consistent with other reader syntax stuff",,
2.75501E+17,Plane#0324,2021-06-11,yes it seems rackety,,
2.66505E+17,notjack#9941,2021-06-11,"maybe `#whatever""hello world""`?",,
2.66505E+17,notjack#9941,2021-06-11,where `whatever` can be any identifier,,
2.66505E+17,notjack#9941,2021-06-11,so it expands like a macro,,
2.66505E+17,notjack#9941,2021-06-11,"lets me do things like `#url""http://foo""` to parse and validate a regexp at compile time using a `url` macro",,
2.75501E+17,Plane#0324,2021-06-11,what exactly would `#%string` be,,
2.66505E+17,notjack#9941,2021-06-11,¬Ø\_(„ÉÑ)_/¬Ø,,
2.34164E+17,python#3213,2021-06-11,ooh that would be neat,,
2.34164E+17,python#3213,2021-06-11,like js's string tags,,
2.75501E+17,Plane#0324,2021-06-11,yeah i like this syntax,,
2.75501E+17,Plane#0324,2021-06-11,in python `{{` and `}}` let you insert literal curly braces,,
2.34164E+17,python#3213,2021-06-11,yeah,,
2.34164E+17,python#3213,2021-06-11,rust too,,
2.75501E+17,Plane#0324,2021-06-11,so that convention has some value from familiarity,,
2.75501E+17,Plane#0324,2021-06-11,i don't really know any other details about f-strings,,
2.75501E+17,Plane#0324,2021-06-11,remembering the difference between `display` `write` and `print` has been a bit of an ongoing challenge for me in racket,,
2.75501E+17,Plane#0324,2021-06-11,i have looked those up quite a few times lol,,
2.66505E+17,notjack#9941,2021-06-11,yeah that's,,
2.66505E+17,notjack#9941,2021-06-11,a bit of a mess,,
2.75501E+17,Plane#0324,2021-06-11,"someday i may write a little ""getting started in racket"" type guide of my own",,
2.75501E+17,Plane#0324,2021-06-11,my goal if i do that will be to narrow down a lot of the choices you're presented with when you're learning,,
2.66505E+17,notjack#9941,2021-06-11,"a useful rule to know is that for any struct you make, if you want to customize how it prints, it should look like `#<stuff...>` when printed in `write` mode",,
2.34164E+17,python#3213,2021-06-11,right at the top of this page https://docs.racket-lang.org/reference/printing.html,,
2.66505E+17,notjack#9941,2021-06-11,"(because that's how unreadable values should `write`, and the only structs which are readable are prefab structs, which you can't customize the printed form of anyway)",,
2.66505E+17,notjack#9941,2021-06-11,that page does not offer a very good explanation IMO,,
2.34164E+17,python#3213,2021-06-11,i suppose,,
2.75501E+17,Plane#0324,2021-06-11,yes i keep looking it up here,,
2.75501E+17,Plane#0324,2021-06-11,but also,,
2.75501E+17,Plane#0324,2021-06-11,https://docs.racket-lang.org/guide/read-write.html,,
2.75501E+17,Plane#0324,2021-06-11,here is the other place,,
2.34164E+17,python#3213,2021-06-11,"in my mind, write is for serialization, display is for user presenting",,
2.34164E+17,python#3213,2021-06-11,"print is do whatever it wants, so i don't really use it",,
2.66505E+17,notjack#9941,2021-06-11,"the confusing part is that print is _also_ for user presenting, except strings are quoted. the REPL-printed form of your data type is most definitely user presenting.",,
2.66505E+17,notjack#9941,2021-06-11,it's what renders in docs and it's what people see when playing around with your library in the REPL,,
2.66505E+17,notjack#9941,2021-06-11,I think the reference docs for `gen:custom-write` should link to this,,
2.66505E+17,notjack#9941,2021-06-11,I've literally never found that page before,,
2.75501E+17,Plane#0324,2021-06-11,that's the page which made it make the most sense to me,,
2.75501E+17,Plane#0324,2021-06-11,the problem is i haven't quite committed it to memory . . . lol,,
2.75501E+17,Plane#0324,2021-06-11,"the other thing is, ~a ~v ... and ~s?  are not very mnemonic for me",,
2.66505E+17,notjack#9941,2021-06-11,oh yes those names are awful,,
2.75501E+17,Plane#0324,2021-06-11,"so i'm trying to memorize two sets of three things, and the correspondences between them",,
2.75501E+17,Plane#0324,2021-06-11,"now, if i were actually trying to memorize this stuff",,
2.75501E+17,Plane#0324,2021-06-11,"i'd treat it like learning a foreign language, make flash cards etc",,
2.75501E+17,Plane#0324,2021-06-11,but umm,,
2.66505E+17,notjack#9941,2021-06-11,"should have just been `write-to-string`, `print-to-string`, `display-to-string`, etc.",,
2.75501E+17,Plane#0324,2021-06-11,maybe they could have friendlier names that make it less effort to learn,,
2.75501E+17,Plane#0324,2021-06-11,"like, keep `~a` but add longer names for them as well?",,
2.75501E+17,Plane#0324,2021-06-11,i don't know,,
2.75501E+17,Plane#0324,2021-06-11,i think the `~a` and friends have a long history in lisp,,
2.75501E+17,Plane#0324,2021-06-11,"for `~a` the best mnemonic i came up with was ""it's displAAAAAy""",,
2.66505E+17,notjack#9941,2021-06-11,ok that's great,,
2.66505E+17,notjack#9941,2021-06-11,lol,,
2.75501E+17,Plane#0324,2021-06-11,but when it comes to ~s and ~v i'm basically just like shrug,,
2.75501E+17,Plane#0324,2021-06-11,i have no clue,,
2.75501E+17,Plane#0324,2021-06-11,i just imagine they mean something like 'string' and 'value' but that doesn't really tell me anything,,
2.66505E+17,notjack#9941,2021-06-11,yeah it's very confusing,,
2.66505E+17,notjack#9941,2021-06-11,a section in the docs giving guidance on implementing `gen:custom-write` is something I've wanted to write for a while,,
2.75501E+17,Plane#0324,2021-06-11,"i would be willing to contribute to improving the racket docs, but i feel like there's a lot of stuff i should focus on learning before i really volunteer for that",,
2.75501E+17,Plane#0324,2021-06-11,i do like the racket docs a lot but there are rough edges,,
2.75501E+17,Plane#0324,2021-06-11,"i've also noticed there are examples which seem like they were written a long time ago, and might not be written that way today",,
2.75501E+17,Plane#0324,2021-06-11,for example in the scribble docs https://docs.racket-lang.org/scribble/reader-internals.html?q=datum-%3Esyntax-object#%28part._.Syntax_.Properties%29,,
4.66395E+17,oaktownsam#0815,2021-06-11,The tilde names come from CL iirc.  And they are awful.,,
2.75501E+17,Plane#0324,2021-06-11,there's a call to `datum->syntax-object` which dates it a bit lol,,
2.75501E+17,Plane#0324,2021-06-11,"in my adventures with CL and scheme/racket, i definitely feel a lot more at home on the scheme/racket side of things",,
2.66505E+17,notjack#9941,2021-06-11,"tips like:
- use the `#<...>` format with `write` mode
- do the same thing in `display` and `print` mode unless you sometimes want to prioritize accurate output and other times you want to prioritize cleaner and simpler output. in that case, do the former in `print` mode and the latter in `display` mode.
- set `prop:custom-print-quotable` to `'never`. your structs are never going to be quotable. if they were quotable they would work with `read` and `write`, and user structs can't do that.",,
2.75501E+17,Plane#0324,2021-06-11,you should save this so you don't forget it for later!,,
2.66505E+17,notjack#9941,2021-06-11,yes heh,,
2.66505E+17,notjack#9941,2021-06-11,should add it to the scribble docs for `gen:custom-write`,,
2.75501E+17,Plane#0324,2021-06-11,i think cl has ~a and ~s,,
2.75501E+17,Plane#0324,2021-06-11,and ~v?,,
2.75501E+17,Plane#0324,2021-06-11,it must stand for value . . .,,
2.75501E+17,Plane#0324,2021-06-11,"oops, i should put off the archaeology for another day",,
2.75501E+17,Plane#0324,2021-06-11,what do you think of `write->string` `print->string` `display->string`,,
2.66505E+17,notjack#9941,2021-06-11,"nah, the `a->b` pattern looks weird when `a` and `b` aren't nouns",,
2.75501E+17,Plane#0324,2021-06-11,ah so that violates the semantics of `->` since it's not converting from the left hand side,,
2.66505E+17,notjack#9941,2021-06-11,I dunno if it violates semantics so much as it looks grammatically weird to me compared to the other uses of the convention,,
2.75501E+17,Plane#0324,2021-06-11,"i had been reading `->` as ""to"" mentally",,
2.66505E+17,notjack#9941,2021-06-11,I read `a->b` as `convert-a-to-b`,,
2.66505E+17,notjack#9941,2021-06-11,approximately,,
2.34164E+17,python#3213,2021-06-11,it's kind of like in python str() vs repr() right?,,
2.66505E+17,notjack#9941,2021-06-11,it's similar yeah,,
2.75501E+17,Plane#0324,2021-06-11,"i like the `#fmt""whatever""` syntax",,
2.75501E+17,Plane#0324,2021-06-11,i had been thinking that the format function would be a syntax parameter but this seems neater,,
2.75501E+17,Plane#0324,2021-06-11,"it kinda feels like there should be a built-in function like this instead of `format`:
```scheme
#lang racket/base

(require (rename-in racket/format
                    (~a display-to-string))
         racket/string)

(define (format* . args)
  (string-append*
   (map display-to-string
        args)))

(format* ""hello "" 3 "" blah blah "" (+ 4 5))       ;; => ""hello 3 blah blah 9""
```",,
2.66505E+17,notjack#9941,2021-06-11,`~a` does that,,
2.66505E+17,notjack#9941,2021-06-11,I think,,
2.75501E+17,Plane#0324,2021-06-11,does it?,,
2.75501E+17,Plane#0324,2021-06-11,ooh,,
2.75501E+17,Plane#0324,2021-06-11,that's good,,
2.66505E+17,notjack#9941,2021-06-11,"!rkt eval
```scheme
(require racket/format)
(~a ""hello "" 3 ""blah blah "" (+ 4 5))
```",,
8.02004E+17,r16#4581,2021-06-11,hello 3blah blah 9,,
2.75501E+17,Plane#0324,2021-06-11,i felt like there had to be a built-in that did that,,
2.75501E+17,Plane#0324,2021-06-11,"(""built-in"" maybe is the wrong term but i mean ""included in racket"")",,
2.75501E+17,Plane#0324,2021-06-11,it felt like i was reinventing something i didn't need to,,
2.75501E+17,Plane#0324,2021-06-11,"and for at-exp, is `@""{""` the simplest way to insert a literal `{`?",,
2.66505E+17,notjack#9941,2021-06-11,I think `{` isn't interpreted specially _unless_ an `@` is right before it,,
2.66505E+17,notjack#9941,2021-06-11,so you can just write `{` without worrying I think?,,
2.75501E+17,Plane#0324,2021-06-11,"```scheme
missing closing `}`

Interactions disabled.
```
:(",,
2.75501E+17,Plane#0324,2021-06-11,gosh just using ~a feels simpler than using special syntax,,
8.14743E+16,jimpjorps#0001,2021-06-11,"yeah, Julia does this, I like their implementation of it https://docs.julialang.org/en/v1/manual/metaprogramming/#Non-Standard-String-Literals",,
1.93202E+17,rocketnia#4517,2021-06-11,I think that's right.,,
1.93202E+17,rocketnia#4517,2021-06-11,"It seems like ideally, user-defined types could be readable and quotable. It's in the language-oriented spirit, and it allows us to understand and maintain the reader syntax as an assemblage of components rather than a single monolith.

In practice, Racket doesn't seem to have extension systems to make this easy. The `syntax` and `quasiquote` DSLs each traverse through some hardcoded set of supported quotable data types, so the entire DSLs have to be reimplemented when adding a new data type to the mix. The same kind of thing seems to be true for the syntax highlighters and auto-intenters.

So I think the advice to always print in the format of an unreadable value is great practical advice. But I hope that changes.",,
1.93202E+17,rocketnia#4517,2021-06-11,".
Perhaps coincidentally, I think even once more extensibility is in place, it will still be quite applicable advice for a different reason.

In an ecosystem with many differently extended reader syntaxes, the person defining the data type is hardly in the position to make assumptions about what reader syntax is in use by the caller. An interface of the form ""please write yourself in the language I'm thinking of"" seems a little hopeless, while an interface like ""I've already tried to write you in a readable way, but the language I'm using doesn't seem to have a representation for you, so please describe yourself in whatever unreadable way you like"" seems a lot more workable. So in the end, the author of the data type still only implements an unreadable version of the syntax. If the syntax also has a readable representation in some languages, that's up to the caller to figure out (e.g., by using a language-specific writer).",,
2.75501E+17,Plane#0324,2021-06-12,i like that too!,,
2.34164E+17,python#3213,2021-06-12,also a bit similar to c++ user-defined literals https://en.cppreference.com/w/cpp/language/user_literal,,
1.30231E+17,sarna#3904,2021-06-12,"yea that'd do! but in this case sorting works out accidentally, right?",,
1.30231E+17,sarna#3904,2021-06-12,"I don't know what the right tradeoff would be:
- aliases in the same line as main command's help
  - more convenient
  - help line length becomes more unpredictable
- each alias on its own line
  - clutters things up a bit
  - more easily programmable (I think?), more predictable",,
2.75501E+17,Plane#0324,2021-06-13,"finally reading the bf chapter in beautiful racket, and learning about `#lang brag`",,‚ù§Ô∏è (1)
2.75501E+17,Plane#0324,2021-06-13,(and `ragg`),,
2.75501E+17,Plane#0324,2021-06-13,also learned how to do readtable stuff.  fun!,,
2.75501E+17,Plane#0324,2021-06-13,"i didn't expect this
```scheme
> (case eof
    [(eof) #t]
    [else #f])
#f
```",,
2.75501E+17,Plane#0324,2021-06-13,i think `case` is tricky,,
2.75501E+17,Plane#0324,2021-06-13,"i guess it doesn't work because `eof` is not self-quoting, whereas it would work for `1` or `#\c` because those are self-quoting",,
2.75501E+17,Plane#0324,2021-06-13,"this works
```scheme
#lang reader ""magic-string-reader.rkt""

(require syntax/parse/define)

(define-syntax-parse-rule (#%string-literal-abc s)
  (string-append s s))

(module+ test
  (require rackunit)
  (check-equal? #abc""def"" ""defdef""))
```",,üëç (1)
2.75501E+17,Plane#0324,2021-06-13,although i don't think i've implemented it quite right.  lol,,
2.75501E+17,Plane#0324,2021-06-13,"it works in this module, but i get an unexpected error if i try one that isn't defined, like `#xyz""xyz""`",,
2.75501E+17,Plane#0324,2021-06-13,"i thought it would just say `#%string-literal-xyz` is undefined in that case, but instead i get something far more exciting",,
2.75501E+17,Plane#0324,2021-06-13,"```
#%app: identifier's binding is ambiguous
  context...:
   #(-85772 module magic-string-readtable)
   #(-85770 module magic-string-readtable) #(-85768 module)
   #(-85767 module) #(91817 module) #(91820 module test-magic-strings)
  matching binding...:
   #(new-app #<module-path-index:""kw.rkt"" ""pre-base.rkt"" ""private/base.rkt"" racket/base> 0)
   #(-85772 module magic-string-readtable)
   #(-85770 module magic-string-readtable) #(-85768 module)
   #(-85767 module)
  matching binding...:
   #(new-app #<module-path-index:""kw.rkt"" ""pre-base.rkt"" ""private/base.rkt"" racket/base> 0)
   #(-85770 module magic-string-readtable) #(-85767 module)
  matching binding...:
   #(new-app #<module-path-index:""kw.rkt"" ""pre-base.rkt"" ""private/base.rkt"" racket/base> 0)
   #(91817 module) #(91820 module test-magic-strings) in: #%app
```",,
2.75501E+17,Plane#0324,2021-06-13,üëÄ,,
2.75501E+17,Plane#0324,2021-06-13,also it doesn't work at all in the repl,,
2.75501E+17,Plane#0324,2021-06-13,progress though (:,,
2.75501E+17,Plane#0324,2021-06-13,"```scheme
(define-syntax-parse-rule (#%string-literal-f s)
  ""i ate your string, sorry"")

#f""this is a format string {foo} {bar}""

; ==> ""i ate your string, sorry""
```",,
7.14999E+17,gingerydoo#7461,2021-06-13,"No, I sort them explicitly in my changes. I can always join the aliases on one line and align the descriptions based on the longest comma-separated list.",,
7.14999E+17,gingerydoo#7461,2021-06-13,But the only thing I don't like is that you'd more quickly hit the right edge of a terminal emulator,,
1.30231E+17,sarna#3904,2021-06-13,"woo, cool!",,
1.30231E+17,sarna#3904,2021-06-13,yeah that's my concern as well,,
7.14999E+17,gingerydoo#7461,2021-06-13,I'll just open a PR with what I've got later today.,,
7.14999E+17,gingerydoo#7461,2021-06-13,Give it a try and let me know if it works for you?,,
1.30231E+17,sarna#3904,2021-06-13,"sure, thanks a ton for working on it :meowblush:",,
7.14999E+17,gingerydoo#7461,2021-06-13,"https://github.com/zyrolasting/natural-cli/pull/1

You bet. Give that a try when you are ready and I'll fix up any problems.",,meowblushcool (1)
2.75501E+17,Plane#0324,2021-06-13,"ok after i slept i figured my code's problem out right away!  i wasn't calling `strip-context` on my syntax object, so it was getting an extra one of those colors from mflatt's talk",,
2.75501E+17,Plane#0324,2021-06-14,so this thing works <https://github.com/plane/magic-string/blob/master/readtable.rkt>,,
2.75501E+17,Plane#0324,2021-06-14,"it's supposed to expand julia-style non-standard string literals, so that you can write custom macros for stuff like `#fmt""some string {foo} {bar}""`",,
2.75501E+17,Plane#0324,2021-06-14,"so ```scheme
#foo""this is a format string {foo} {bar}""
#foo""this is a format string {foo} {bar}""opts
```
expands to 
```scheme
(#%string-literal-foo ""this is a format string {foo} {bar}"")
(#%string-literal-foo ""this is a format string {foo} {bar}"" #:opts ""opts"")
```",,
2.75501E+17,Plane#0324,2021-06-14,"i haven't actually written a macro like python's f-strings yet but i could build that on top of this (:  i'm still learning how you piece a `#lang` together, though",,
2.75501E+17,Plane#0324,2021-06-14,and i think the goal of this would be to create a meta-language eventually,,
2.66505E+17,notjack#9941,2021-06-14,that is really cool :D,,
4.32953E+17,vaeng#4889,2021-06-14,"hey there, I'm new to racket, but I have some experience with clojure. My question is hard to google for me, because I don't know how the things are called. I want to transform the input variables of my function directly in the method head. like i get a list as input, but would like to split it up into first and rest and name the parts. do I have to make a local define, or is there a nicer way?",,
1.30231E+17,sarna#3904,2021-06-14,hiya üëã you mean like this? https://docs.racket-lang.org/reference/match.html#%28form._%28%28lib._racket%2Fmatch..rkt%29._match-define%29%29,,plusone (1)
1.30231E+17,sarna#3904,2021-06-14,"oh it doesn't define functions, it defines variables :meowwarp: sorry",,
4.32953E+17,vaeng#4889,2021-06-14,"Yes, but it helps. I don't need to define each of the elements in a list this way in an extra line",,
1.30231E+17,sarna#3904,2021-06-14,"ah, okay then",,
1.30231E+17,sarna#3904,2021-06-14,there's also match-lambda but I've never used it,,
4.32953E+17,vaeng#4889,2021-06-14,"https://clojure.org/guides/destructuring#_where_to_destructure argument destructuring is what I was searching for, it's pretty neat. I did not know if it's a clojure thing or a lisp thing",,
2.75501E+17,Plane#0324,2021-06-14,yeah you should look at the various `match` forms,,salute (1)
2.75501E+17,Plane#0324,2021-06-14,(there's a lot of them!  i haven't used most though),,
8.14743E+16,jimpjorps#0001,2021-06-14,"there's `define/match` too, like to define that `print-coordinates` function in the clojure guide example you could do ```scheme
(define/match (print-coordinates-racket point)
  [((list x y z)) (~a ""x: "" x "", y: "" y "", z: "" z)])```",,plusone (2)
8.14743E+16,jimpjorps#0001,2021-06-14,I think that's the closest you can get to clojure destructuring,,
1.30231E+17,sarna#3904,2021-06-14,"ah, `define/match` vs `match-define`",,
1.30231E+17,sarna#3904,2021-06-14,*hiss* :meowwarp:,,
8.14743E+16,jimpjorps#0001,2021-06-14,it's a mess,,
8.14743E+16,jimpjorps#0001,2021-06-14,"one difference is that match is more picky about exactness of the pattern than clojure destructuring, like it won't automatically ignore additional values or assign nil to missing ones",,
5.24323E+17,Ben Kenobi#5683,2021-06-14,"^and, unlike Clojure, match doesn't give you multiple arities. You do that in other ways (for some cases). But you can have multiple match clauses √† la ML.",,
4.66395E+17,oaktownsam#0815,2021-06-14,Does rackjure have anything closer to what clojure provides in that regard?,,
8.14743E+16,jimpjorps#0001,2021-06-14,"```scheme
(define/match (my-matcher lst)
  [('()) (~a ""This list is empty"")]
  [((list head)) (~a ""This list only has one element, "" head)]
  [((list-rest head tail)) (~a ""This list has a head of "" head "" and a tail of "" tail)]
  [(x) (~a ""Whatever "" x "" is, it's not a list"")])
```",,
8.14743E+16,jimpjorps#0001,2021-06-14,"nah, doesn't look like it",,
5.24323E+17,Ben Kenobi#5683,2021-06-14,"""destructuring bind in the guide"" takes you to https://docs.racket-lang.org/guide/match.html?q=destructure#%28idx._%28gentag._2._%28lib._scribblings%2Fguide%2Fguide..scrbl%29%29%29 which is `match`",,
2.14881E+17,Moinate#6061,2021-06-14,"Probably most helpful if people post what they're thinking of doing. I'm not even sure a generic ""fill in #f for the missing values"" is desirable. Seems like it really depends on the situation.",,
7.14999E+17,gingerydoo#7461,2021-06-14,"I've got a hard judgement call to make: Keep supporting an OpenSSL derivative across platforms, or replace it with pure-Racket implementations of ciphers and CHFs.",,üò¨ (1)
7.14999E+17,gingerydoo#7461,2021-06-14,Both options seem to suck.,,
7.14999E+17,gingerydoo#7461,2021-06-14,Within the context of the latter option: Has there been any research on securing Racket-accessible memory using C?,,
6.46114E+17,samth#3420,2021-06-14,@gingerydoo I would strongly encourage the OpenSSL approach; I don't think there's a reasonable short-term path to doing secure crypto in Racket.,,
7.14999E+17,gingerydoo#7461,2021-06-14,That's my feeling. I'm aware there's a lot of landmines in crypto that would discourage hand-rolling in most cases.,,
7.14999E+17,gingerydoo#7461,2021-06-14,What are the most pressing impediments in Racket today?,,
6.46114E+17,samth#3420,2021-06-14,"@gingerydoo By far the most important is that there isn't existing, reviewed crypto implementations in Racket today, and there isn't currently the expertise to create them. Additionally, Racket isn't set up to either protect memory or avoid timing or other side channel attacks, and no one has yet put effort into even figuring out what would need to change.",,üëç (1)
7.14999E+17,gingerydoo#7461,2021-06-14,Gotcha.,,
2.75501E+17,Plane#0324,2021-06-15,lol,https://cdn.discordapp.com/attachments/618895179343986688/854336500011368478/unknown.png,
2.75501E+17,Plane#0324,2021-06-15,"```scheme
  (define A-VERY-BIG-NUMBER 1e50)
```",,
2.75501E+17,Plane#0324,2021-06-15,they weren't kidding,,
4.40139E+17,Parnikkapore#2806,2021-06-15,`#define inf 999999999` is all over my C code lol,,"ü§î (2),üòï (1)"
2.34164E+17,python#3213,2021-06-15,Not just int max?,,
3.09364E+17,asajjventress#6178,2021-06-15,"Racket (or Lisp dialects in general) is a cruel mistress.  It has a strict learning curve that makes you want to give up, but you're better for it at the end of the day.",,
2.66505E+17,notjack#9941,2021-06-15,making that curve a little shallower would be a good thing to do,,
2.75501E+17,Plane#0324,2021-06-15,i think some of the learning curve comes from being different from other stuff people learned,,
2.75501E+17,Plane#0324,2021-06-15,not all of it!  but some,,
2.75501E+17,Plane#0324,2021-06-15,"like how learning spanish is not so difficult for a french speaker, but much more difficult for a korean speaker, because it's more different from what they already know",,
3.09364E+17,asajjventress#6178,2021-06-15,"^True
Racket was really the first Lisp I learned decently, so thats definitely a learning curve!  The main problems that I had in the beginning were understanding the notation in the documentation and the lack of examples or explanations for certain things.
Ive mastered the former, but still have problems with the latter",,
8.14743E+16,jimpjorps#0001,2021-06-15,"from me comparing my experiences with it to my friends who program for a living, it feels like they struggle more with lisp dialects than I do, partially since they have more to unlearn from their experience primarily using imperative languages",,
8.14743E+16,jimpjorps#0001,2021-06-15,"it's hard to reorient from thinking about problems in terms of assembling steps to in terms of describing results, if that makes sense",,
3.09364E+17,asajjventress#6178,2021-06-15,"All of the parenthesis dont help, üòÜ",,
8.14743E+16,jimpjorps#0001,2021-06-15,meanwhile I try to do something in C++ and I feel like I'm programming wearing a baseball mitt,,
2.75501E+17,Plane#0324,2021-06-15,i did c++ professionally for a solid chunk of my career and i still feel that way lol,,
3.09364E+17,asajjventress#6178,2021-06-15,"That being said, having (), [], {} makes the code WAYYYY more readable.  If I ever create a Lisp dialect, Im stealing this feature",,üíØ (4)
2.14881E+17,Moinate#6061,2021-06-15,"and it's good to call out particular parts that are bad, maybe someone will fix them or know a good guide that explains it better",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-15,"idk, maybe that's just me, but I prefer just regular `()` (though I do use `[]` where conventional in my racket code, trying to adhere to the language style and all). Somehow when its all parens I get blind to them and it's as if I'm reading whitespace-significant code, but unlike whitespace code, parens give me flexibility to edit stuff",,plusone (1)
3.29023E+17,nixin72#3554,2021-06-15,Strong words calling Racket a cruel mistress coming Asajj Ventress üòÇ,,
3.29023E+17,nixin72#3554,2021-06-15,"But yea, learning Lisp can be tough coming from other languages, I find regular use of [] and {} really helps clear things up. I know it's not ""Rackety"", but I even do 
```scheme
(define [func-name args]
  ...)
```
√Ä la Clojure and make liberal use of `[]` anywhere else I find it helps.",,
4.40139E+17,Parnikkapore#2806,2021-06-15,"If I were to write a style guide, I'd use [] for anything that's semantically a list and not a function call",,
4.40139E+17,Parnikkapore#2806,2021-06-15,Wasn't aware of limits.h constants at the time.,,üëå (1)
3.29023E+17,nixin72#3554,2021-06-15,"I wish `let` in Racket was like Clojure 
```clj
(let [x 10 y 20]
  (println (+ x y))
```",,
2.14881E+17,Moinate#6061,2021-06-15,"@nixin72 I'm sure there's more to it than this but...
```
#lang racket
(require syntax/parse/define)
(define-syntax-parse-rule (let-clojure [(~seq var:id val) ...] body ...)
  (let [(var val) ...]
    body ...))
(let-clojure [x 10 y 20]
  (println (+ x y)))
```",,
3.29023E+17,nixin72#3554,2021-06-15,"Yea, I can define a macro, but honestly what I want is just anywhere that an alist is used, like `let` or `for` or whatever else, a plist was used instead. (Or maybe the other way around, I always mix those up)",,
2.14881E+17,Moinate#6061,2021-06-15,"I can see how you might get tired of patching things up to be the way you want.
not a fan of the pairings with no separators myself, tho",,
2.14881E+17,Moinate#6061,2021-06-15,is it just the extra parens that are annoying?,,
2.75501E+17,Plane#0324,2021-06-15,you could make a macro that rewrites `let` `define` and friends if `[]` is used,,
2.75501E+17,Plane#0324,2021-06-15,or umm maybe in this case it would just be let,,
2.75501E+17,Plane#0324,2021-06-15,"but you know what i mean, whichever forms are relevant",,
2.14881E+17,Moinate#6061,2021-06-15,are you going to make the bracket pair-listifying ? that's a cool idea.,,
3.29023E+17,nixin72#3554,2021-06-15,Ohh really? That's pretty neat,,
2.14881E+17,Moinate#6061,2021-06-15,"i mean, kind of scary but ... i know Plane has been into the readtables so it doesn't surprise me that its doable",,
3.29023E+17,nixin72#3554,2021-06-15,"The issue is for me, there's enough little things about Racket that bug me here and there that if I spent all my time making little macros or wrapper functions or whatever around the things that I don't like, I'd never get anything done.",,
2.14881E+17,Moinate#6061,2021-06-15,"yeah well, it's just play fun for us, but sometimes you find inspiration to do some cool hacking from what other people dont like",,
3.29023E+17,nixin72#3554,2021-06-15,"And the awesome thing about Racket is you *can* do that, the flexibility is amazing. You can jump down the rabbit hole and redefine everything, and doing that for hobby projects and stuff can be super fun. But from a pragmatic point of view, I find that when I try to do real things in Racket I let myself get distracted by these small things and trying to fix them. It's like Emacs. I spend too much time bikeshedding by configuring my editor instead of actually working. I've switched to Vim the past couple weeks and found myself more productive because there's more sane defaults and less small stuff I want to fix.",,
2.14881E+17,Moinate#6061,2021-06-15,"""it's like emacs"" LOL!",,
2.14881E+17,Moinate#6061,2021-06-15,i guess just pretending it's java isn't doing it for your productivity,,
3.29023E+17,nixin72#3554,2021-06-15,"Well, considering Racket is already a monumental step up from Java, no üòÇ",,
3.29023E+17,nixin72#3554,2021-06-15,"(ironically my lisp of choice for just getting shit done is Clojure, which I love)",,
3.29023E+17,nixin72#3554,2021-06-15,"I say ""my lisp of choice"" but really it's just my language of choice",,
2.75501E+17,Plane#0324,2021-06-15,"```scheme
#lang racket/base

(require
  (rename-in racket/base (let -let))
  syntax/parse/define
  (for-syntax racket/base
              syntax/parse/class/paren-shape))

(define-syntax-parser let
  [(_ (~brackets (~seq id:id expr:expr) ...) body ...+)
   #'(-let ((id expr) ...)
        body ...)]
  [(_ ((id:id expr:expr) ...) body ...+)
   #'(-let ((id expr) ...)
        body ...)])
  
(module+ test
  (require rackunit)
  (check-equal?
   (let [x 3 y 4]
     (+ x y))
   (let ([x 3] [y 4])
     (+ x y))))
```",,
2.75501E+17,Plane#0324,2021-06-15,hehe,,
2.75501E+17,Plane#0324,2021-06-15,not exactly complete but as a proof-of-concept (:,,
2.14881E+17,Moinate#6061,2021-06-15,"wonder if theres a way to just say ""default to `-let` for the rest of this""",,
2.75501E+17,Plane#0324,2021-06-15,https://github.com/plane/square-let,,
2.14881E+17,Moinate#6061,2021-06-15,Since they all follow the same pattern I think there's another level of abstraction to create. (Lol?),,
2.75501E+17,Plane#0324,2021-06-15,probably!,,
2.14881E+17,Moinate#6061,2021-06-15,"I think this is actually a case where you need to partially expand a parse tree from the outside, because that position of `let` is not macroexpanded (apparently). Interesting. Gets ugly enough to give up, though.",,
1.33911E+17,MisterMentat#0331,2021-06-15,Just wait. You‚Äôll go down the dark path of configuring Vim with VimScript soon enough. And you‚Äôll cry and run back to Elisp.,,
3.29023E+17,nixin72#3554,2021-06-15,"Well I'm using neovim, so worst case I can use Lua. But I've touched my init.vim way less so far than I usually play with my Emacs config hahah",,
1.30231E+17,sarna#3904,2021-06-16,you can use fennel :meowsmile:,,üòç (1)
4.66395E+17,oaktownsam#0815,2021-06-16,There was a talk about neovim with fennel at Racketfest,,
4.66395E+17,oaktownsam#0815,2021-06-16,https://www.youtube.com/watch?v=mvjSAncjSKQ&t=244s,,
4.66395E+17,oaktownsam#0815,2021-06-16,"I actually don't think there was much talk about fennel, but I believe Conjure uses it.",,
2.64024E+17,Eutro#0016,2021-06-16,"I can't help but read ""Conjure"" as ""Clojure"" every time",,
5.24323E+17,Ben Kenobi#5683,2021-06-16,"Re: square brackets, using https://docs.racket-lang.org/delimit-app/index.html you can make them do whatever you want. The downside AFAICT is that you now how to use parens for anything you want to be normal? ie it‚Äôs not clear to me if cond with [] around clauses will still work.",,
4.1228E+17,xgqt#8370,2021-06-16,"I use Emacs and I feel jealous of this tool, seems amazing üëå",,
4.62028E+17,StephenD#5938,2021-06-16,"‚ÄúHave you ever had a wish/idea about something I could feature/present in Racket News? Now it's a great time to let me know. https://github.com/pmatos/racket-news/issues/new?title=I%20have%20an%20idea
‚Äù - @pocmatos on Twitter",,
4.62028E+17,StephenD#5938,2021-06-16,Btw a new Racket News has just dropped,,
2.66505E+17,notjack#9941,2021-06-16,Thing I want: contracts that are allowed to normalize inputs,,
2.66505E+17,notjack#9941,2021-06-16,"for example, I want to be able to define a struct wrapping a list of numbers that accepts any `(sequence/c number?)` in the constructor but always produces a `(listof number?)` on field access",,
2.66505E+17,notjack#9941,2021-06-16,"they're not chaperone contracts, because they don't always produce `equal?` values when they're applied, but they provide more guarantees than impersonator contracts:
- wrapping twice is the same as wrapping once
- if you apply it to values in ""normal form"" it won't produce impersonators",,
6.46114E+17,samth#3420,2021-06-16,@notjack for structs you can do that with guards,,
6.46114E+17,samth#3420,2021-06-16,for contracts in general you can just write impersonator contracts -- it won't enforce those properties but you probably don't actually want to enforce them,,
2.66505E+17,notjack#9941,2021-06-16,what I want is to have them be contracts that `struct-guard/c` allows,,
2.66505E+17,notjack#9941,2021-06-16,"although, does `struct-guard/c` allow impersonator contracts? I thought it only allowed chaperones but reading the docs I don't see that restriction mentioned",,
2.66505E+17,notjack#9941,2021-06-16,if it does then great! I can just make these be ordinary impersonator contracts,,
2.66505E+17,notjack#9941,2021-06-16,"yup just checked, `(struct-guard/c (new-‚àÄ/c))` works so impersonator contracts in struct guards are fine and dandy",,üëç (1)
2.66505E+17,notjack#9941,2021-06-16,"I did it!
```scheme
(struct numbers (list)
  #:transparent
  #:guard (struct-guard/c (sequence-as-list/c number?)))

(numbers (set 1 2 3))
; produces (numbers '(1 2 3))
```",,
2.66505E+17,notjack#9941,2021-06-16,"this is the definition of `sequence-as-list/c`:
```scheme
(define (sequence-as-list/c elem-contract)
  (normalized/c (sequence/c elem-contract)
                (listof elem-contract)
                sequence->list))
```",,
3.78377E+17,wooloowoo#6187,2021-06-17,anyone know of any perfect hash function libraries for Racket?,,
7.14999E+17,gingerydoo#7461,2021-06-17,Perfect?,,
2.75501E+17,Plane#0324,2021-06-17,there is a wikipedia page for *perfect hash function* that seems to have a summary: <https://en.wikipedia.org/wiki/Perfect_hash_function>,,
7.14999E+17,gingerydoo#7461,2021-06-17,"ah, thanks",,
2.75501E+17,Plane#0324,2021-06-17,"the ""with no collisions"" bit seems to be the ""perfect"" part",,
7.14999E+17,gingerydoo#7461,2021-06-17,Closest I can think of is to try https://docs.racket-lang.org/crypto/digest.html?q=crypto,,
2.75501E+17,Plane#0324,2021-06-17,so all lookups are O(1) basically,,
7.14999E+17,gingerydoo#7461,2021-06-17,"Ohhh, so we're not talking about cryptographic hashes, we're talking about the hash function for a hash table implementation?",,
7.14999E+17,gingerydoo#7461,2021-06-17,Yep. Disregard. üôÇ,,
2.66505E+17,notjack#9941,2021-06-17,a perfect hash function is a serializer,,
4.66395E+17,oaktownsam#0815,2021-06-17,"Technically you could use a crypto hash function for a hash table, but it could be slow at scale.",,
2.66505E+17,notjack#9941,2021-06-17,@oaktownsam fun fact: this is actually a useful thing to do for collections in webservers that user requests might insert stuff into,,
2.66505E+17,notjack#9941,2021-06-17,prevents hash flooding denial-of-service attacks,,
4.66395E+17,oaktownsam#0815,2021-06-17,Yeah that is a nice feature of crypto hashes.  Real big hash space and good distribution.,,
2.75501E+17,Plane#0324,2021-06-17,i wish lambdas were neatly serializable,,
2.75501E+17,Plane#0324,2021-06-17,i think it's cool the webserver has `serial-lambda` but,,
2.75501E+17,Plane#0324,2021-06-17,it does come with a set of caveats and it isn't just something that you get for free,,
7.73175E+17,meowüé∫#2842,2021-06-17,"It's an expensive thing to do, after all. Same with serialised continuations.",,
7.73175E+17,meowüé∫#2842,2021-06-17,Closures contain a lot of stuff.,,
7.73175E+17,meowüé∫#2842,2021-06-17,Maybe first-class environments would've been helpful.,,
7.73175E+17,meowüé∫#2842,2021-06-17,Wait... Are serialised environments just world images? ü§î,,
4.66395E+17,oaktownsam#0815,2021-06-17,"serialized environments would help, but I think you get a similar problem of how much you need to actually serialize",,
4.66395E+17,oaktownsam#0815,2021-06-17,I guess even Pharo/Squeak images don't try to write open file handles to the image file.,,
1.30231E+17,sarna#3904,2021-06-18,"what will happen if I invoke a continuation after some time and the files are closed, timeouts are expired, db connection is dropped? üëÄ",,
4.66395E+17,oaktownsam#0815,2021-06-18,`(define (launch-the-missiles!) ...)`,,
4.66395E+17,oaktownsam#0815,2021-06-18,A Delorean appears to take you back to 1985 and restore the timeline,,
1.30231E+17,sarna#3904,2021-06-18,:mew:,,
1.30231E+17,sarna#3904,2021-06-18,really?,,
4.66395E+17,oaktownsam#0815,2021-06-18,IIRC you end up with a lot of errors about resources being closed already.,,
1.30231E+17,sarna#3904,2021-06-18,oh that's not very cool,,
1.30231E+17,sarna#3904,2021-06-18,can I somehow restore the state if stuff like this happens?,,
4.66395E+17,oaktownsam#0815,2021-06-18,You can with `dynamic-wind`,,
4.66395E+17,oaktownsam#0815,2021-06-18,It's generally better practice to not mix side-effecting things with continuations.,,
4.66395E+17,oaktownsam#0815,2021-06-18,You could use `dynamic-wind` but it is going to probably be quite painful.,,
1.30231E+17,sarna#3904,2021-06-18,oh :( so it's not all so beautiful,,
4.66395E+17,oaktownsam#0815,2021-06-18,"Here's a simple example of what happens:
```
(define k #f)

(define (run)
  (call-with-input-file ""some-file-on-your-system""
    (lambda (i)     
      (call/cc
       (lambda (nk)
         (set! k nk)))
      (displayln (read-string 4 i)))))

(run)
(k)
```",,
4.66395E+17,oaktownsam#0815,2021-06-18,and here is the error you get,https://cdn.discordapp.com/attachments/618895179343986688/855336549885804574/unknown.png,
1.30231E+17,sarna#3904,2021-06-18,I experienced stuff like this in ruby when stuff was magically concurrent :(,,
1.30231E+17,sarna#3904,2021-06-18,added a good old sleep for five seconds before closing the file..,,
4.66395E+17,oaktownsam#0815,2021-06-18,"I very rarely directly use continuations.  The closest I get are maybe generators.  Almost all resource (files etc) using code I've written looks like below.  If you keep all of you crazy flow control within the bounds of the `... body ...` everything will work fine.
```
;; pretend call-with-resource procedure acquires the resource executes 
;; the argument procedure and then releases the resource
(call-with-resource the-resource (lambda (r) ... body ...))
```",,
1.30231E+17,sarna#3904,2021-06-18,"it's like python's `with`, right?",,
4.66395E+17,oaktownsam#0815,2021-06-18,Yep.,,
4.66395E+17,oaktownsam#0815,2021-06-18,"There are a whole bunch of different ones.  There is a nice package for managing resources uniformly.
https://docs.racket-lang.org/disposable/index.html",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,"I've read people were thoroughly unhappy with dynamic wind when it got introduced, because it made call/cc much more heavyweight to implement and less useful as a control abstraction due to performance",,
1.30231E+17,sarna#3904,2021-06-18,they said you couldn't have rust in racket,,
1.30231E+17,sarna#3904,2021-06-18,"isn't it the good old ""lisp programmers know the value of everything and the cost of nothing""? :meowsmile:",,
1.93202E+17,rocketnia#4517,2021-06-18,"whoa, I didn't know that, and it makes sense",,
1.93202E+17,rocketnia#4517,2021-06-18,"Arc didn't have a full-powered `dynamic-wind` (just something one-sided like Common Lisp's `unwind-protect`), and I always felt it didn't have a complete implementation of continuations because of that omission",,
1.93202E+17,rocketnia#4517,2021-06-18,"Ruby is in the same position, or was the last time I looked",,
2.75501E+17,Plane#0324,2021-06-18,"do you often use `dynamic-wind`?  i haven't actually used it yet, outside of a tutorial with some toy examples.  it does seem neat",,
2.75501E+17,Plane#0324,2021-06-18,i would guess it's useful with side effecting code,,
1.93202E+17,rocketnia#4517,2021-06-18,"I haven't used it; my continuation experiments were all in the BC era, and they weren't very performant, so I usually avoided continuations before I had to use `dynamic-wind`",,
1.93202E+17,rocketnia#4517,2021-06-18,I just like the thought of `dynamic-wind` essentially letting programs treat parts of the heap or the outside world as decentralized pieces of the stack; they update as the stack updates,,
2.75501E+17,Plane#0324,2021-06-18,i'm likely to continue not using it (which is not to say i don't think it's neat),,
6.87833E+17,grey#8674,2021-06-18,"I get the impression that `dynamic-wind` would be most useful when not used directly, but abstracted over as part of some framework that uses continuations to do ‚Äúfancy stuff‚Äù.",,
1.93202E+17,rocketnia#4517,2021-06-18,"when it's just used to modify a mutable box and then restore it to its old value again, that's more or less `parameterize`. I think that was a use case that sold me on it back when I was using Arc",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,"""fancy stuff"" I think mostly boils down to not leaking opened resources and dynamic parameters, both of which are more language / library concern than general user code",,plusone (1)
2.64024E+17,Eutro#0016,2021-06-18,`(map dynamic-wind ...)` anyone?,,
2.64024E+17,Eutro#0016,2021-06-18,I think continuations are hilarious but also something I just don't find the need for ever,,
6.87833E+17,grey#8674,2021-06-18,"To be more specific, I wouldn‚Äôt want to write `dynamic-wind` invocations by hand, rather, they ought to be derived from some procedure or form that declares some resources that I want to use in some expression.",,
2.75501E+17,Plane#0324,2021-06-18,`prompt` and `abort` are pretty nifty and easy to use.  although you might not really need them usually,,
6.87833E+17,grey#8674,2021-06-18,You never use exceptions? üòõ,,
2.75501E+17,Plane#0324,2021-06-18,i like that they're easy to use when you do want them,,
1.30231E+17,sarna#3904,2021-06-18,"you can have exceptions without continuations though, no?",,
2.64024E+17,Eutro#0016,2021-06-18,"Racket can implement exceptions however it wants, I wouldn't call it using continuations",,
2.64024E+17,Eutro#0016,2021-06-18,"I don't use them for control flow, even in Racket",,
6.87833E+17,grey#8674,2021-06-18,"Yes, but, fundamentally, exceptions are just a special case of continuations.",,
2.64024E+17,Eutro#0016,2021-06-18,"fundamentally, loops are just a special case of continuations too",,
1.30231E+17,sarna#3904,2021-06-18,"all the ""cool"" stuff racket has I found to be quite expensive computationally or hard to use correctly
continuations, creating new languages (and stuff like overriding %#app), contracts (which you can't turn off)",,
1.30231E+17,sarna#3904,2021-06-18,fundamentally we're all executing machine code,,
2.64024E+17,Eutro#0016,2021-06-18,"lots of things _can_ be implemented with continuations, I just haven't had to implement anything with them",,
1.30231E+17,sarna#3904,2021-06-18,"yeah I mean they're a nice abstraction that enabled you to make all sorts of stuff with it (like exceptions) but you don't have to like, use them",,
1.30231E+17,sarna#3904,2021-06-18,"or have them in your language, or know that they're a thing",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,"> contracts (which you can't turn off)
oh yeah I found this quite annoying too",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,in some way it pushed me to use typed racket instead,,
6.87833E+17,grey#8674,2021-06-18,"I believe that having continuations in a language is important because it means that, if you need a special control abstraction, you simply implement it as a library, not wait for the language to be extended to include it.

For example, if your language has continuations, then you can add green threads as a library, or `async/await`, or generators, and so on. It frees programmers from being needlessly restricted by decisions made by the language implementors.",,
6.87833E+17,grey#8674,2021-06-18,"(Also, there are ways to make it easier to build and use new things using continuations. Algebraic effect handlers look a lot like a tidy interface for working with continuations.)",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,"one point to consider though is the type of continuations. The call/cc has been bashed quite heavily by some (eg Oleg), and I think it's not sufficient to implement all control features like exceptions; you need delimited continuations",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,"at least that's my layman understanding, I don't use continuations much either",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,and when I do it's mostly for escape / early return,,
1.30231E+17,sarna#3904,2021-06-18,does using it turn off contracts? lol,,
6.87833E+17,grey#8674,2021-06-18,"Yes, delimited continuations are the way to go. Racket‚Äôs continuations are delimited (including `call/cc`, but it‚Äôs still not *composable*).",,
7.73175E+17,meowüé∫#2842,2021-06-18,Delimited continuations are more narrow in scope than full continuations.,,
7.73175E+17,meowüé∫#2842,2021-06-18,The problem with full continuation is that they're overkill for a lot of things.,,
7.73175E+17,meowüé∫#2842,2021-06-18,You can implement delimited continuations with full continuations.,,
1.30231E+17,sarna#3904,2021-06-18,"on the one hand yes, on the other hand - will one async/await implementation be compatible with other async/await implementations? OCaml has this problem - they have two incompatible concurrency libraries. it places burden on library writers who have to export two modules, one for the first library and one for the second",,
6.87833E+17,grey#8674,2021-06-18,Delimited continuations are actually the more powerful flavor.,,
1.30231E+17,sarna#3904,2021-06-18,I remember that some knobs need to be present so it's performant,,
7.73175E+17,meowüé∫#2842,2021-06-18,"Well, full continuations are obviously less efficient.",,
7.73175E+17,meowüé∫#2842,2021-06-18,But they're wider in scope.,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,"I mean you don't need contracts when you have static types, and they're not being checked at runtime unless you're interacting with untyped modules",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,afaik,,
6.87833E+17,grey#8674,2021-06-18,Racket‚Äôs system of continuations are designed so that you can have many control abstractions ‚Äî possibly similar ones ‚Äî and they will generally behave well together. There may be some caveats.,,
7.73175E+17,meowüé∫#2842,2021-06-18,"```Scheme
(define pstack '())

(define (reset th)
  (call/cc
    (lambda (k)
       (set! pstack (cons k pstack))
       (go th))))

(define (shift f)
  (call/cc
    (lambda (k)
      (go 
    (lambda () 
      (f 
        (lambda (v)
          (call/cc (lambda (k1)
             (set! pstack (cons k1 pstack))
             (k v))))))))))
```
Courtesy of Oleg Kiselyov.",,
1.30231E+17,sarna#3904,2021-06-18,"how they are turning them off, if there's no mechanism to turn them off?",,
6.87833E+17,grey#8674,2021-06-18,Don‚Äôt add contracts in the first place.,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,I'm not sure what you mean,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,contracts happen at runtime,,
1.30231E+17,sarna#3904,2021-06-18,"oh, that's cool! so it actually prevents this situation from happening, nice",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,static typing checks happen at compiletime,,
1.30231E+17,sarna#3904,2021-06-18,but they're there in stdlib,,
6.87833E+17,grey#8674,2021-06-18,There are unsafe stdlib modules that don‚Äôt have contracts attached. Type Racket will use these instead.,,
1.30231E+17,sarna#3904,2021-06-18,"yes. but contracts are there in the existing code
is there an entirely typed version of stdlib that has no contracts?",,
1.30231E+17,sarna#3904,2021-06-18,"got it, thanks",,
7.73175E+17,meowüé∫#2842,2021-06-18,Manually edit remove contract `provide`s. üòù,,meowwarp (1)
1.30231E+17,sarna#3904,2021-06-18,"me: *looks at Oleg's website again*
> Experience shows that call/cc makes a poor trade-off between generality and performance. Implementing exceptions and all other control facilities as library functions in terms of call/cc turns out a bad idea.
:meowwarp:",,
7.73175E+17,meowüé∫#2842,2021-06-18,"Yeah, `call/cc` is very powerful but it's not worth the performance tradeoff.",,
7.73175E+17,meowüé∫#2842,2021-06-18,Also you can simply ignore Typed Racket's contracts with McCarthy's `live-free-or-die`.,,ü§î (1)
6.87833E+17,grey#8674,2021-06-18,"There‚Äôs an option to `contract-out` called `#:unprotected-submodule`, which lets you provide a submodule that provides all the same bindings, but without contracts. Generally, this is not a good idea, but it is an option when performance is important.",,
1.30231E+17,sarna#3904,2021-06-18,why have feature if using feature is bad idea :mew:,,
7.73175E+17,meowüé∫#2842,2021-06-18,"```Scheme
(require live-free-or-die)
(Doctor-Tobin-Hochstadt:Tear-down-this-wall!)
(require ""some-typed-code.rkt"")
;; type unsafe code here
```",,
1.30231E+17,sarna#3904,2021-06-18,"oh, so I can remove them from existing modules? TIL, that's very useful. thanks!",,
6.87833E+17,grey#8674,2021-06-18,"It doesn‚Äôt let you remove contracts from someone else‚Äôs module, they have to have included that option.",,
7.73175E+17,meowüé∫#2842,2021-06-18,"Iunno, probably historic reasons.",,
1.30231E+17,sarna#3904,2021-06-18,"@gingerydoo I think you complained about this some time ago, you have your answer üëÜ",,
1.30231E+17,sarna#3904,2021-06-18,oh shoot! I misunderstood :meow: :meowleft:,,
7.73175E+17,meowüé∫#2842,2021-06-18,Maybe they'll replace the mandate to have `call/cc` with delimited continuations in R7RS Large.,,
1.30231E+17,sarna#3904,2021-06-18,it's presented as a selling point of scheme all the time on the forums lol,,
7.73175E+17,meowüé∫#2842,2021-06-18,"Well, there's no doubt that it's extremely powerful.",,
1.30231E+17,sarna#3904,2021-06-18,"are delimited continuations acceptable, perf-wise?",,
7.73175E+17,meowüé∫#2842,2021-06-18,It lets you implement a lot of things people assume must be a feature of the core language.,,
7.73175E+17,meowüé∫#2842,2021-06-18,But in general people tend to assume Scheme isn't too concerned with performance anyway.,,
6.87833E+17,grey#8674,2021-06-18,"Racket‚Äôs delimited continuations are strictly more powerful than `call/cc`, and the implementation is actually pretty optimized. It‚Äôs a ‚Äúpay for what you use‚Äù thing where special manipulations of the call stack only happen when necessary.",,
1.30231E+17,sarna#3904,2021-06-18,hmm that's interesting,,
7.73175E+17,meowüé∫#2842,2021-06-18,"Oh wait, I'm talking about `shift`/`reset`, not the prompt based continuation model.",,
6.87833E+17,grey#8674,2021-06-18,"Racket‚Äôs exceptions, threads, and parameters are all implemented using continuations.",,
1.30231E+17,sarna#3904,2021-06-18,"I have an aversion to stuff that looks super nice on paper but falls apart in ""let's actually deploy it"" type situations, I think I'm overly cautious because of that",,
7.73175E+17,meowüé∫#2842,2021-06-18,"Prompt-based model is unique to Racket, isn't it?",,
1.30231E+17,sarna#3904,2021-06-18,so racket is not using chez scheme's exceptions? neato!,,
6.87833E+17,grey#8674,2021-06-18,"I‚Äôm pretty sure that Racket has the best multi-prompt continuations, but there are other implementations. If I remember correctly, Alexis King wrote an extension to GHC Haskell that adds prompt-based continuations, specifically because it would greatly improve the performance of important libraries.",,
7.73175E+17,meowüé∫#2842,2021-06-18,Ooh,,
1.30231E+17,sarna#3904,2021-06-18,"are continuations harder to misuse in haskell, when you have side-effects isolated by the type system? üëÄ",,
1.30231E+17,sarna#3904,2021-06-18,whoa if you type `s/foo/bar` on discord and hit send it actually edits your message,,meowblushcool (2)
1.30231E+17,sarna#3904,2021-06-18,that's a sick feature mr discord man,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,wild. What other cool features is it hiding ü§î,,
2.75501E+17,Plane#0324,2021-06-18,haskell has `Codensity` which . . . i do not understand,,
6.87833E+17,grey#8674,2021-06-18,"Yes, type systems ‚Äî in particular, ones that can track control effects ‚Äî make it easier to ensure that continuations are used correctly. Typed Racket has special types for some parts of the continuations system, but they‚Äôre intentionally not very precise because type systems and continuations have historically been hard to get right. Some of the most recent work on types for continuations can be seen in the Haskell/ML world and in experimental research languages.",,
6.87833E+17,grey#8674,2021-06-18,"The Haskell world has a (bad) habit of taking cool stuff from advanced computer science theory and research, then implementing needlessly confusing libraries based on it.",,
1.30231E+17,sarna#3904,2021-06-18,I see. I think multicore OCaml is supposed to get an effect system üëÄ,,
1.30231E+17,sarna#3904,2021-06-18,as a tef tweet:,https://cdn.discordapp.com/attachments/618895179343986688/855412094445944832/image0.jpg,"‚ù§Ô∏è (2),ü§î (1)"
6.87833E+17,grey#8674,2021-06-18,"Unfortunately, the more powerful that a tool is, the greater the potential for abuse is.",,
1.30231E+17,sarna#3904,2021-06-18,my personal goal with racket would be to make programming simple in this positive sense,,üëç (2)
1.30231E+17,sarna#3904,2021-06-18,"yup! sharp tools, hehe",,
1.30231E+17,sarna#3904,2021-06-18,"I don't think dumb tools is the answer though
IMHO a combination of sharp tools, focus on readability & simplicity (how simple it is to understand, not how simple the implementation is) & good docs is the way to go",,
6.87833E+17,grey#8674,2021-06-18,"I think that, when you have really powerful tools, it‚Äôs really important to have a culture that emphasizes using them wisely and building things that are easy to use and understand.",,plusone (1)
1.30231E+17,sarna#3904,2021-06-18,I couldn't say it better üôè,,
7.73175E+17,meowüé∫#2842,2021-06-18,Very well said.,,
6.46114E+17,samth#3420,2021-06-18,"@kelly I think that's well said, but I mostly disagree with tef, because I think the people who create those ""needlessly confusing"" libraries believe that they _are_ building things that are easier to use and understand than the alternatives. Maybe they're right and maybe they're wrong, but that's definitely their goal.",,plusone (1)
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,I suppose it depends abit on novelty factor though. I know I overused macros everywhere when I had recently learned about it üòÑ,,
2.00548E+17,Efi#0041,2021-06-18,hello~,,üëã (3)
2.75501E+17,Plane#0324,2021-06-18,welcome! (:,,"üêæ (1),üè≥Ô∏è‚Äçüåà (2)"
4.40139E+17,Parnikkapore#2806,2021-06-18,It turns out that I didn't need to leave the giddy feeling of the SICPy syntax behind when porting `brpc-conn` to a struct - `#:property prop:procedure` is a thing üòÅ,,
7.14999E+17,gingerydoo#7461,2021-06-18,"Racket `struct`s are super feature-rich. Generics are fun too, but you need to memorize a new definition of ""generic"". üòÑ",,
5.39603E+17,spacey üåå#7238,2021-06-18,"at least in java land, you have to be a part of the rube goldberg problem because you're building on top of rube goldberg-esque frameworks",,
5.39603E+17,spacey üåå#7238,2021-06-18,"also, i don't like the implied condescension to programmers at large in that tweet. people don't just complicate things because they're masochists",,
1.30231E+17,sarna#3904,2021-06-18,"haha yeah
in java/c# I'm especially not fond of reflection-based DI frameworks. they're not compiletime enough to catch errors then, and not runtime enough for you to debug it easily. it's a nightmare for me",,üíØ (1)
1.30231E+17,sarna#3904,2021-06-18,tef is a very tired person,,üò´ (1)
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,"ü§î I'm fairly happy with java's spring boot. Messing up configuration makes it abort the app asap after launching, so it's compiletime-y enough so to say",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,happy enough to write it for a living anyways. Not all of us are lucky enough to land scheme or racket jobs,,
4.90866E+17,JOST GRANT#1516,2021-06-18,Truly think objects get such a bad rap; You can overuse any paradigm to the point of madness.,,
1.30231E+17,sarna#3904,2021-06-18,but objects really do fall apart when you have multiple threads running,,
1.30231E+17,sarna#3904,2021-06-18,"at work people casually say stuff like ""ah yeah so it's a data race too""",,
4.90866E+17,JOST GRANT#1516,2021-06-18,I mean I don't have a lot of domain experience but object-access is pretty trivial in Java from the little I've played with in multiple threads. :^P,,
2.64024E+17,Eutro#0016,2021-06-18,wait I have to see this,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,FP solves race conditions with stale data problem instead ü§∑‚Äç‚ôÄÔ∏è,,
4.66395E+17,oaktownsam#0815,2021-06-18,Unless you're a wizard there probably should only be one thread running through an object.,,
4.66395E+17,oaktownsam#0815,2021-06-18,(excepting the interface),,
1.30231E+17,sarna#3904,2021-06-18,yea but how do you ensure stuff is correct?,,
4.90866E+17,JOST GRANT#1516,2021-06-18,Also want to make clear my point is not so much talking about specific implementation or to say OO and FP are essentially equivalent and don't have serious advantages and disadvantages compared to eachother; It's the cult-of-personality around FP  I've seen develop. I have a friend who doesn't even know how to program -- but sent me a video about how bad OO is because it's such a meme at this point even to third-parties outside of 'this world'. lol,,
4.66395E+17,oaktownsam#0815,2021-06-18,(and the interface should be some sort of communication/synchronization layer),,
1.30231E+17,sarna#3904,2021-06-18,"yea I also hate the ""FP will save us from all the problems"" and ""OO is the source of all evil"" memes",,
1.30231E+17,sarna#3904,2021-06-18,but it's not like it wouldn't help a bit,,
4.90866E+17,JOST GRANT#1516,2021-06-18,That was more the vibe I got from that tweet; ie: why I responded like that. lol,,
1.30231E+17,sarna#3904,2021-06-18,for more context,https://cdn.discordapp.com/attachments/618895179343986688/855521455227142164/image0.jpg,üôÑ (1)
7.73175E+17,meowüé∫#2842,2021-06-18,https://docs.racket-lang.org/live-free-or-die/index.html,,
7.73175E+17,meowüé∫#2842,2021-06-18,https://pkgd.racket-lang.org/pkgn/search?tags=crashing,,
4.90866E+17,JOST GRANT#1516,2021-06-18,"I think a pure-OO or pure-FP language is always going to be pushing on the limits of the paradigm and yeah, you end up having to make sacrifices if you try to go 100% in one direction or another. I mean, I probably even side more FP over OO with my fondness for Scala. And re-introduction to Scheme(s). But like Scala and even Scheme (TinyCLOS x Swindle) see a lot of value in trying to balance both.",,
7.73175E+17,meowüé∫#2842,2021-06-18,(it's just `(require typed-racket/utils/tc-utils) (begin-for-syntax (set-box! typed-context? #t))` with an amusing name),,
1.30231E+17,sarna#3904,2021-06-18,IMO the level of FP that Scheme and OCaml offer is the optimal balance,,
1.30231E+17,sarna#3904,2021-06-18,"but it's just like, my opinion",,
4.90866E+17,JOST GRANT#1516,2021-06-18,I actually really like Dylan a bunch; And that's pretty-dang-OO at it's core but there's a fair amount lifted from Scheme (and hopefully more will be with time).,,
2.66505E+17,notjack#9941,2021-06-18,my continuation hot take is that I think they're a better tool than exceptions for implementing unit testing frameworks,,üî• (2)
4.90866E+17,JOST GRANT#1516,2021-06-18,Honestly if you haven't ever tried it; And you like OCaml I'd say try Scala3. Pretty similar ethos afaict,,
2.66505E+17,notjack#9941,2021-06-18,"if you make ""failing a test"" a continuation jump instead of throwing an exception, it makes it possible for this to work:
```scheme
(test
  (with-handlers ([(lambda (_) #true) void)
    (fail)))
```",,
1.30231E+17,sarna#3904,2021-06-18,unit testing framework when,,
8.14743E+16,jimpjorps#0001,2021-06-18,lately I've been plugging away at F# and I kind of like the way it lets you mix and match paradigms fairly fluently,,
1.30231E+17,sarna#3904,2021-06-18,"JVM is a heavy beast, and I don't really like Scala's C++y approach of pulling whatever they can into the language",,
4.90866E+17,JOST GRANT#1516,2021-06-18,((Even though it's not popular an essentially dead; A non-trivial reason for me picking up Racket is due to Swindle (the tinyCLOS implementation) because I find these sytems especially in the context of a MOP really interesting)),,
1.30231E+17,sarna#3904,2021-06-18,"enough language opinions for today, it's not good for my brain lol",,
1.30231E+17,sarna#3904,2021-06-18,ya heard of Raku? they have a sick object model if you're into that,,
4.90866E+17,JOST GRANT#1516,2021-06-18,With all the recent stuff on the JVM; Namely ZGC & Graal I've been wondering if Kawa (Scheme) willl get any significant boost.,,
1.30231E+17,sarna#3904,2021-06-18,~~please make it happen so all the libraries I import are yours~~,,"‚ù§Ô∏è (1),üòâ (1)"
4.90866E+17,JOST GRANT#1516,2021-06-18,"I HATE that Kawa is written in Java; Think like all the dominate Lisps-on-the-JVM are... ABCL, Clojure, etc",,
2.66505E+17,notjack#9941,2021-06-18,that `disposable` one mentioned earlier is also mine üòÖ,,meowblushcool (1)
4.90866E+17,JOST GRANT#1516,2021-06-18,"Even Scala is written 'in Scala'. Just target the bitcode or something, idk lool",,
4.90866E+17,JOST GRANT#1516,2021-06-18,"That's Perl's descendant, right?",,
4.66395E+17,oaktownsam#0815,2021-06-18,I didn't want to name drop üòõ,,üòÜ (1)
1.30231E+17,sarna#3904,2021-06-18,"Perl's sister language, yes",,
1.30231E+17,sarna#3904,2021-06-18,@JOST GRANT https://vrurg.github.io/arfb.html,,
1.30231E+17,sarna#3904,2021-06-18,I won't offtop more tho :mew:,,
4.90866E+17,JOST GRANT#1516,2021-06-18,Literally forgot we weren't in offtopic; oops. loool,,
5.24323E+17,Ben Kenobi#5683,2021-06-18,"I could probably answer this by doing some experiments, but can collection names contain `/` (esp. in a single-collection package)? That is, can I put `(define collection one/two)` in `info.rkt` , and (assuming `three.rkt` is a module) do things like `(require one/two/three)`? https://docs.racket-lang.org/pkg/getting-started.html#%28part._working-new-pkgs%29 makes it look like the answer is yes.",,
5.24323E+17,Ben Kenobi#5683,2021-06-18,"Also: when working on a package, do you usually `(require ""relative.rkt"")` or `(require mycollect/module)`?",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-18,I used to create packages for sole purpose to be able to use the latter,,
2.66505E+17,notjack#9941,2021-06-18,"good question, I think that works but I've never tried it",,üëç (1)
2.66505E+17,notjack#9941,2021-06-18,I always recommend using the absolute collection path wherever possible,,üëç (2)
5.24323E+17,Ben Kenobi#5683,2021-06-18,I'll hopefully get around to experimenting after I finish hacking on the dracula drracket theme‚Ä¶,,
5.24323E+17,Ben Kenobi#5683,2021-06-18,"Anyone know if I can get drracket to hot-reload a theme installed locally? (I did `raco pkg install --clone <dir> theme`, so it shows up in the preferences. Restarting after changing files is a bit slow.)",,
2.14881E+17,Moinate#6061,2021-06-19,"Are `define/match` and `define/syntax-parse` really not parallel constructions? Ugh. Warts.
`match-define` matches up with `define/syntax-parse`
`define/match` matches up with nothing, probably should be `define/syntax-parser` which does not exist 
Oh well, but üí©.",,
1.56786E+17,williewillus#8490,2021-06-19,"Re above 
Idk why people find the jvm so bad
For a hosted, GCed environment it probably provides one of the best",,
1.56786E+17,williewillus#8490,2021-06-19,The GC is probably the best engineered GC in the world,,üëç (1)
1.56786E+17,williewillus#8490,2021-06-19,"The tooling could be better though
Gradle can go die in a fire",,
1.30231E+17,sarna#3904,2021-06-19,it has a lot of historical baggage and thus it's hard to navigate all the traps/quirks,,
1.30231E+17,sarna#3904,2021-06-19,"it's not just a java thing, it's an old language that's been used a lot thing",,
1.56786E+17,williewillus#8490,2021-06-19,"In java? Sure but at the VM level? I can't think of many warts besides no value types
Which they're fixing",,
1.30231E+17,sarna#3904,2021-06-19,"I mean stuff like ""help, my memory usage randomly explodes""
""oh you just need to set -XXSomeObscureOption to 200GB""",,
1.30231E+17,sarna#3904,2021-06-19,"at work they had an issue with major GC firing randomly, even if the node wasn't under high load",,
1.30231E+17,sarna#3904,2021-06-19,and major GCs were taking 10minutes +,,
1.30231E+17,sarna#3904,2021-06-19,effectively making the node offline,,
1.56786E+17,williewillus#8490,2021-06-19,Scale a system far enough and that happens to any GCed environment,,
1.30231E+17,sarna#3904,2021-06-19,turns out it came from some random library :meowwarp:,,
1.56786E+17,williewillus#8490,2021-06-19,We run into that with ocaml very often too,,
1.30231E+17,sarna#3904,2021-06-19,long GC pauses? I thought that was one of the thing OCaml was great at,,
1.56786E+17,williewillus#8490,2021-06-19,"There was also that one Discord blog post about Go
Which is even worse because Go doesn't let you tune",,
1.30231E+17,sarna#3904,2021-06-19,ya I remember this one,,
1.30231E+17,sarna#3904,2021-06-19,but sometimes too many knobs is as bad as almost no knobs,,
1.30231E+17,sarna#3904,2021-06-19,"(looking at you, linux)",,
1.56786E+17,williewillus#8490,2021-06-19,Only way to win is not play i.e. use a non GCed language,,
1.30231E+17,sarna#3904,2021-06-19,I heard you can have unpredictable destructor chains in C++ that create long ass pauses as well,,
1.30231E+17,sarna#3904,2021-06-19,so it's not something you can that easily escape I think,,
1.30231E+17,sarna#3904,2021-06-19,"people use java and ocaml for high frequency trading, so I guess anything is possible if you commit",,
1.30231E+17,sarna#3904,2021-06-19,but honestly I doubt it's as simple as using another lang,,
1.30231E+17,sarna#3904,2021-06-19,also related: racket on jvm when,,
2.64024E+17,Eutro#0016,2021-06-19,don't look at me,,
1.56786E+17,williewillus#8490,2021-06-19,!!budget-nitro wacko,,
8.02004E+17,r16#4581,2021-06-19,Trick budget-nitro doesn't exist!,,
1.56786E+17,williewillus#8490,2021-06-19,üòî,,
1.56786E+17,williewillus#8490,2021-06-19,I'd rather use clojure if on jvm,,üëç (1)
7.73175E+17,meowüé∫#2842,2021-06-19,I like Shenandoah.,,
2.55E+17,Roman B#8579,2021-06-19,"Hello, guys. Could you please recommend me books or courses to learn algorithms and data structures in Racket? I've recently finished the How to Code courses  (taught by Gregor Kiczales) and I loved the language, my brain can feel the pleasure while typing, damn. Thank you!",,
1.33911E+17,MisterMentat#0331,2021-06-19,"There‚Äôs Programming Algorithms in Lisp. It‚Äôs in CL, but it shouldn‚Äôt be too different",,
1.33911E+17,MisterMentat#0331,2021-06-19,Also it may or may not be too basic but How to Design Programs is excellent. It‚Äôs more about how to think about your data‚Äôs structure should influence the way you write and design programs and functions rather than algorithms per se.,,
1.33911E+17,MisterMentat#0331,2021-06-19,I don‚Äôt know what the suggestion for would be for a follow up to HtDP. I would be interested in others thoughts as well.,,
5.24323E+17,Ben Kenobi#5683,2021-06-19,It's worse than that: the syntaxes aren't even parallel in a match form vs. a syntax-parse form.,,
5.24323E+17,Ben Kenobi#5683,2021-06-19,"One thing might be to study work by Okasaki on functional data-structures, _e.g._, https://www.cs.cmu.edu/~rwh/theses/okasaki.pdf I _think_ it's more from an ML perspective, but it has been re-written in schemes (https://matt.might.net/articles/red-black-delete/)",,
4.66395E+17,oaktownsam#0815,2021-06-19,Because there aren't many Racket books I think any good general data structure book and knowing/improving your ability to translate from pseudocode/C/python to Racket are pretty useful.,,plusone (3)
7.73175E+17,meowüé∫#2842,2021-06-19,I recommend Beautiful Racket https://beautifulracket.com/,,üëÜ (2)
7.73175E+17,meowüé∫#2842,2021-06-19,You can find a list of most if not all Scheme books here: https://erkin.party/scheme/bibliography/,,
2.55E+17,Roman B#8579,2021-06-19,"Thank you, all",,
4.90866E+17,JOST GRANT#1516,2021-06-19,"I'm seeing a lot of sources comparing the performance of Racket to around that of Python; Is that ""approximately accurate"" ? Long-term I want to learn Graphics-Programming and feel like this would be a bottleneck trying to actually implement some of this stuff instead of just binding to it.",,
4.90866E+17,JOST GRANT#1516,2021-06-19,"I know stuff like Pict3D exists but I'm thinking something on the level of ""near complete / self-contained engine"" at somepoint in some theoretical future.",,
4.90866E+17,JOST GRANT#1516,2021-06-19,"Ooookay, nevermind; Not sure where these few offhand comments are coming from then*. Seems closer to within the ballpark of half-of-Java's performance ... which seems a LOT more reasonable. lol",,
4.90866E+17,JOST GRANT#1516,2021-06-19,"Guess that what I get for giving any credence to Hackernews comments; (Also reading back calling them ""sources"" loool).",,
1.56786E+17,williewillus#8490,2021-06-19,"python is pretty much bottom of the pile performance-wise, even for dynamic languages",,
1.56786E+17,williewillus#8490,2021-06-19,"because it does zero optimization at all, racket at least does some optimizations when compiling",,
1.56786E+17,williewillus#8490,2021-06-19,though I hear they're finally working on a lightweight JIT for python,,
4.90866E+17,JOST GRANT#1516,2021-06-19,"There's a few actually afaik; PYPY being probably the most prominent -- numba is more integrated and ""at one's option"" via an annotation more than always on (from my very limited experience) ... I wonder if they were maybe comparing the performance of these? Seems slightly more reasonable in that iirc it's 4x cpython performance on average",,
4.90866E+17,JOST GRANT#1516,2021-06-19,Even then still a notable gap from that I can tell on 'the benchmark game',,
1.56786E+17,williewillus#8490,2021-06-19,"yeah I looked at that as well
of the 3 faster python programs, one manually links to and calls pcre (C library), and the other two are parallelized where the racket program isn't",,
4.90866E+17,JOST GRANT#1516,2021-06-19,"I find benchmarks useful; But yeah, there's always going to be these misleading edgecases ... I guess it's very possible for someone who doesn't know about the implementation details and cherrypick those two outliers and go ""see! see!"" lool",,
4.90866E+17,JOST GRANT#1516,2021-06-19,"Which in retrospect is probably more likely what* they did, instead of comparing it to relatively non-mainstream JITs",,
4.62028E+17,StephenD#5938,2021-06-20,"Learning resources for graphics programming are normally in c or c++. 

If performance is a concern, Racket(or Python) is probably not a good choice. 

That said, you can do pretty cool things with the `plot`, `racket/draw`, `racket/gui`, `2htdp/image`, `pict` or `sgl` - and ‚Äòlearning by doing‚Äô is a great way to learn.",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2021-06-20,Performance maybe not a problem for Racket now?,,
4.62028E+17,StephenD#5938,2021-06-20,"Racket performance is good and getting better, but I believe it is below C/C++ for now üòÄ.

There is always‚Ä¶ https://docs.racket-lang.org/foreign/index.html",,
2.57159E+17,abcdef#2042,2021-06-20,hello!,,üëã (1)
4.62028E+17,StephenD#5938,2021-06-20,"Hello @abcdef üòÄ
#welcome to the Racket Discord!",,
2.75501E+17,Plane#0324,2021-06-20,Welcome! (:,,
4.40139E+17,Parnikkapore#2806,2021-06-20,Welcome!,,
4.90866E+17,JOST GRANT#1516,2021-06-20,"Understandable about educational-materials being limited; I expect I'm going to ""have"" to dip non-trivially into C++ at somepoint but my hope is to not `live there.` lool

re: Performance of Racket for such a task; Think it's more-than ""fast enough"" for my expectations which is something on the order of https://github.com/mrdoob/three.js/ and not like a AAA engine or anything.",,
4.90866E+17,JOST GRANT#1516,2021-06-20,Also haven't heard of SGL; Glad it exists! ... hate using non-kebab case in Lisps.,,ü§£ (1)
4.90866E+17,JOST GRANT#1516,2021-06-20,I wonder how limiting the garbage-collector would be under these constraints; Haven't really done anything thusfar that is populating a bunch of 'junk' lol,,
4.90866E+17,JOST GRANT#1516,2021-06-20,Not a big Java (lang) fan but honestly ZGC has made me REALLY optimistic about garbage-collection for low-level and/or in soft realtime systems. Like a few years ago I wouldn't think the kinda gains toted would be possible.,,
4.90866E+17,JOST GRANT#1516,2021-06-20,"Think it's at a ""highest potential pause-time"" of 500 microseconds... which is just absurd (in the best possible way.) lool",,
4.90866E+17,JOST GRANT#1516,2021-06-20,"Well maybe 'highest likely'. The average pause-time is now just 50 microseconds. So that's a potential 10x ""worst case"" but still fantastic.",,
8.56392E+17,themanager#9165,2021-06-21,Good morning.,,
8.56392E+17,themanager#9165,2021-06-21,"Folks, I wanted to ask a question regarding syntax object properties.
For example, imagine this simple code snippet:

```
#lang racket

(define (fn x)
    (if (syntax? x) (syntax-property x 'hello) ""nothing""))

(define stx (syntax (+ 1 2)))
(define stxx (syntax-property stx 'hello ""something""))
(fn stxx)
```

In the example above, I've created a syntax object, assigned it a syntax object property, and passed it to the function `fn`. And my question is, do syntax objects live in runtime? I mean, when I'm passing one to the function, does check if one has a property assigned on it happens at compile-time or at runtime?",,
3.5323E+17,Alex Knauth#4895,2021-06-21,"syntax objects live in runtime if you create them at runtime, yeah",,
3.5323E+17,Alex Knauth#4895,2021-06-21,"but if you create a syntax-object at compile time, with a syntax property, and that expression happens to produce another syntax-object at runtime, the syntax-property from the compile-time syntax won't transfer to the runtime object",,
8.56392E+17,themanager#9165,2021-06-21,Can you give an example?,,
3.5323E+17,Alex Knauth#4895,2021-06-21,"In this:
```
(define stx [syntax (+ 1 2)])
```
The compile-time syntax object `#'[syntax (+ 1 2)]` has a syntax property `'paren-shape` with a value `#\[`, but the runtime syntax-object value for `stx` does not.",,
8.56392E+17,themanager#9165,2021-06-21,"Alright, but what happens if I pass it to a function?",,
2.14881E+17,Moinate#6061,2021-06-21,"In your example, everything happens at run time.
You'll probably need to ask more questions about this, I can't tell yet what you need to know.
If I had to guess, it sounds like you're not sure about / aware of the different phases.
Unfortunately, that's something of a rabbit hole. You might get better results by describing a particular goal & asking how to get there. Or a particular observation & asking why it happens.
https://docs.racket-lang.org/guide/phases.html?q=phase",,
4.62028E+17,StephenD#5938,2021-06-21,‚ÄúHave you ever had a wish/idea about something I could feature/present in Racket News? Now it's a great time to let me know. https://github.com/pmatos/racket-news/issues/new?title=I%20have%20an%20idea ‚Äù - @pocmatos on Twitter,,
8.56392E+17,themanager#9165,2021-06-22,Thanks for the reply.,,
8.56392E+17,themanager#9165,2021-06-22,"Alright, this is why I asked the question regarding syntax object properties.

Recently, I've finished the very first and rawest version of my paper (https://arxiv.org/pdf/2106.08470.pdf), where I show how to express something I call ""static attributions"" using anonymous types parameterized by values (a special case of dependent ones). By a static attribution, I meant saving some properties/information about a particular expression and later retrieving and interpreting the saved information while being fully on the static level, i.e, at compile-time (I'll provide an example later). That's where its name comes: attribution ‚Äî because in type theory, it is usually done by merely attributing this information to an expression, static ‚Äî because on the static level, i.e at compile-time.

Before I ask anything, I want to be clear and, one more time, point out the fact that the purpose of this paper is not to show that they are expressible in general (since they indeed are, even in Racket), but to introduce an approach that uses types to express them, without any notion of a great macros system. I also model a simple type theory in the paper, thus formalizing the approach.

The thing is, it seems that there are almost no works that do something alike ‚Äî introduce a concept that does a similar thing but using other things than types ‚Äî which is indeed very unfortunate for me since a normal paper should contain a ""Related Work"" section (my paper currently lacks it) where similar approaches are discussed and compared. That's why I was extremely happy when I've heard about Racket's syntax object properties. They are not that similar (since they, as far as I understand, are a distinct concept and can live even in runtime), but when accompanied with Racket's phase distinction means, they allow us to express those static attributions that I've talked about.",,
8.56392E+17,themanager#9165,2021-06-22,"For instance, imagine this simple piece of pseudo-code (sorry if it is not that intuitive, I don't know how many functional programmers are here, so the pseudo-code is more inclined into an imperative style):

```
fn foo(x : Int) {
  if-has x equal_to : Int bind-as c in
    return c > 5
  else return x > 5
}

let x = set(1, equal_to, 1) 
let result_x = foo(x)

let result_1 = foo(1)
let result_2 = foo(2)
```

here, on the seventh line, informally, it asks a compiler to create an integer with the value of `1`, but about which it is also known that it has the property `equal_to` that is also `1`. Later, when we call `foo` with this integer, we can retrieve the compile-time property ‚Äî the code on the second line merely reads as ""if it is known that the expression used to construct the value of `x` has a compile-time property `equal_to` of the type `Int`, then bind its value to the identifier c and compile itself to the first branch or the second otherwise"".

Since everything must happen at compile-time (and these properties must not be present at runtime), we either have to perform some kind of a static analysis each time a function is called or do something else while ensuring that our properties are propagated normally. What I did is formalized the notion of function monomorphization, so every time a function is called, if there is no function specialization with the appropriate body, its new version is generated. The code above, before going to the runtime, is transformed into something like this:

```
fn foo_1(x : Int) {
  return 1 > 5
}

fn foo_2(x : Int) {
  return x > 5
}

let x = 1 
let result_x = foo_1(x)

let result_1 = foo_2(1)
let result_2 = foo_2(2)
```

I won't, on purpose, go deeper and explain how to use types to express this since this will lead to the description of the whole research paper.",,
8.56392E+17,themanager#9165,2021-06-22,"So, my question is, how to express something like this using Racket's syntax object properties and phase distinction without creating a language in Racket? The solution must not be the creation of a language since I want to focus on separate concepts and compare them with my approach since I want to include them in Related Work.",,
8.56392E+17,themanager#9165,2021-06-22,"Also, please, do not attempt to read the paper (if you are interested, of course). The text there is quite unclear and difficult, so if you have any questions ‚Äî ask me. I've published this version only for the ability of my colleagues (and others) to check its technical content (inference rules, for instance), while I will be finding out how to fill the Related Work section and explain everything in simple words.",,
5.24323E+17,Ben Kenobi#5683,2021-06-22,"re: functional, racket is a quite functional lisp, so I imagine most of the folks here (certainly the ones equipped to help you with your questions) can read functional programs.",,
5.24323E+17,Ben Kenobi#5683,2021-06-22,"As far as your question, the only insight I can offer is this: (with appropriate `require`s) all of racket can exist at any phase. My understanding is that phase 0 is the traditional runtime and phase 1 is the traditional compile-time. That means a syntax object can live at either phase. Where it gets interesting is that manipulating syntax objects at phase 1 is one way to implement macros, compilers, etc. (I'm not sure why you'd manipulate syntax at phase 0, unless maybe it's @notjack 's resyntax?) IIUC, certain parts of the language co-operate via syntax object properties (_e.g._, struct definitions and `match` forms). That might provide some inspiration for places to look.",,
8.14743E+16,jimpjorps#0001,2021-06-22,"this is probably a naive way of doing it, but playing with the syntax object properties procedures, ```scheme
(define (f x)
  (let ([equal-to-v (syntax-property x 'equal-to)])
    (if equal-to-v
        (~a x "" is also equal to "" equal-to-v)
        (~a x "" is just "" x ))))

(define x-with-syntax-property
  (syntax-property (syntax 10) 'equal-to 1))

(f x-with-syntax-property)
(f (syntax 10))
``` produces ```scheme
""#<syntax:3-unsaved-editor:10:27 10> is also equal to 1""
""#<syntax:3-unsaved-editor:13:11 10> is just #<syntax:3-unsaved-editor:13:11 10>""
```",,
8.14743E+16,jimpjorps#0001,2021-06-22,so it seems at least plausible you could marshal that info in a nice wrapped-up macro way,,
5.24323E+17,Ben Kenobi#5683,2021-06-22,"That looks close, but IIUC that's all runtime; @themanager seems to be talking about compile-time introspection. You would probably have to write macros for that, though possibly leveraging `typed/racket` would make that easier",,
8.14743E+16,jimpjorps#0001,2021-06-22,yeah,,
8.14743E+16,jimpjorps#0001,2021-06-22,that level of macro composition's above me but I'm pretty sure the parts are all there based on what you can do during runtime,,
5.24323E+17,Ben Kenobi#5683,2021-06-22,same^,,
6.46114E+17,samth#3420,2021-06-22,"@themanager I think you would be interested to read about turnstile and how it works: https://docs.racket-lang.org/turnstile/index.html, https://github.com/stchang/macrotypes",,
1.93202E+17,rocketnia#4517,2021-06-22,"In order to reproduce the example above in Racket, I think we would need at least a couple of adjustments:

- We would need the definition of `foo` to use a new variant of `define` so that `foo` would have a transformer binding. Calls to `foo` would look like function calls, but they would inspect the expression `x` at compile time to determine whether to compile to a call to `foo_1` or `foo_2`. Actually generating the definitions of `foo_1` and `foo_2` would involve some amount of code-walking, which might benefit from Racket's ability to do `local-expand` with a stop list.

- We would need the definition of `x` to use a new variant of `define` so that `x` would have a transformer binding. On its own, `x` would just behave like a variable reference, but when passed to `foo` (or something like it), `foo` could use `syntax-local-value` to find out the extra static information associated with `x`.

(These could both be different syntactic cases of the same `define` macro.)

Do you want an expression like `(vector-ref (vector x) 0)`, which is usually equivalent to `x`, to have the same static information as `x`? If so, then we probably to need to track special-case information for a wide variety of existing Racket forms and functions, and we need to hope that new definitions will have this new static information in mind, which more or less means we're implementing and presenting a new language.",,
1.93202E+17,rocketnia#4517,2021-06-22,".
Perhaps one of the existing languages in the Racket ecosystem already makes it practical to perform symbolic simplification of expressions like `(vector-ref (vector x) 0)` in its language or to track statically annotated values through them in some other way. My first thought is that Rosette might be able to do this, but I don't know what the approach could look like or whether all the building blocks exist for it to work. It seems possible Turnstile would have something for this too, especially Turnstile+, which does some amount of abstract interpretation to normalize expressions that have free type variables... but again, I'm not familiar enough with Turnstile or Turnstile+ to know how feasible this would be.",,
2.75501E+17,Plane#0324,2021-06-23,Has someone catalogued all the implicit begins in Racket?,,
2.66505E+17,notjack#9941,2021-06-23,resyntax gets close üòÖ,,
2.75501E+17,Plane#0324,2021-06-23,Oh really :o,,
2.66505E+17,notjack#9941,2021-06-23,https://github.com/jackfirth/resyntax/blob/master/default-recommendations/let-binding-suggestions.rkt#L46,,
2.75501E+17,Plane#0324,2021-06-23,I was thinking if I wanted to make a #lang without any implicit begins‚Ä¶,,
2.75501E+17,Plane#0324,2021-06-23,Thank you!,,
2.66505E+17,notjack#9941,2021-06-23,welcome üòÅ,,
8.56392E+17,themanager#9165,2021-06-24,Thanks for the replies. I'll try everything and write here about results later.,,
4.90866E+17,JOST GRANT#1516,2021-06-24,"So it looks like Racket / ChezScheme isn't image-based? Am I right on this, and I wonder if-so why this appears so common in the Scheme-realm while so uncommon in the Common-Lisp* land. lol",,
2.66505E+17,notjack#9941,2021-06-24,being image-based goes well with heavily dynamic implementations,,
2.66505E+17,notjack#9941,2021-06-24,which I think is more common in the common lisp world,,
2.66505E+17,notjack#9941,2021-06-24,it makes AOT compilation difficult,,
2.66505E+17,notjack#9941,2021-06-24,which schemes seem to do more often than lisps,,
4.90866E+17,JOST GRANT#1516,2021-06-24,"Doesn't this make stuff like in-instance , live-reloading more difficult? I've been eyeing up Racket largely to try to implement a basic voxel-styled sandbox on-top of it and a large bit of the appeal was the idea that you could do computercraft-like stuff in-game with a lot fewer barriers (ie: not having to work in a defined system / api).",,
2.66505E+17,notjack#9941,2021-06-24,"I think it does make it more difficult, yes, but not impossible",,
2.66505E+17,notjack#9941,2021-06-24,there's `racket-reloadable` for one thing https://github.com/tonyg/racket-reloadable,,
4.90866E+17,JOST GRANT#1516,2021-06-24,"Oh, cool will look into this! I mean ultimately I don't know how much of a given game-world you'd want to be able to swap out 'while running'  especially when it's likely to look a lot like a survival-sandbox but think there's a lot of the benefits for such a system to not have to strictly fit in a nice / neat 'player-facing api' (again thinking of the inherent limitations presented by something like computercraft). *",,
4.90866E+17,JOST GRANT#1516,2021-06-24,On the other side of that ... still really excited to mess around with defining #lang for certain domains / limited scopes. lool,,
4.66395E+17,oaktownsam#0815,2021-06-24,"Besides racket-reloadable something like a voxel sandbox you may want to have a kind of static part of the world, graphics state, etc. and a dynamic reloadable part that runs in a sandbox (or similar) and communicates to the static part using some sort of defined protocol.",,
4.90866E+17,JOST GRANT#1516,2021-06-24,"Yeah true,  agree there should be a degree of separation -- been thinking of how to model these things a fair bit the past week or two. I'm a fair bit away till I get to any real implementation, but don't want to start on the wrong foot.

My first 'tenable goal' is to wrap most of Raylib. Less concerned performance-wise about implementing everything in Racket than I was initially; But think it's going to be much easier / nicer to go from zero-to-somewhere that way & probably a more stable base with to get the low-level stuff ""right"" compared trying to implement everything from my VERY limited background.",,
7.73175E+17,meowüé∫#2842,2021-06-25,FWIW there are image-based Schemes out there if you're interested,,
7.73175E+17,meowüé∫#2842,2021-06-25,Scheme 48 and MIT/GNU Scheme first come to mind.,,
6.46114E+17,samth#3420,2021-06-25,"ChezScheme also used to be image based; I think modern OSs have gradually gotten more hostile to images (eg, with ASLR)",,
2.17712E+17,gomma#4017,2021-06-25,What are the limits of visual programming languages? Why isn‚Äôt Racket a visual programming language? Could it be?,,
2.17712E+17,gomma#4017,2021-06-25,Why do they seem relatively rare?,,
8.14743E+16,jimpjorps#0001,2021-06-25,"I imagine Racket isn't one because Scheme wasn't one, but s-expressions would lend themselves pretty well to the usual boxes-and-arrows metaphor",,
2.17712E+17,gomma#4017,2021-06-25,I love the boxes and arrows,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-25,I think in big part because it's faster to output text than mess around with mouse,,
8.14743E+16,jimpjorps#0001,2021-06-25,"yeah, I think the major issue is that they don't scale well",,
8.14743E+16,jimpjorps#0001,2021-06-25,the visual map gets a lot more complicated for bigger projects,,
2.17712E+17,gomma#4017,2021-06-25,Offer tools for handling that complication!,,
8.14743E+16,jimpjorps#0001,2021-06-25,so the main place you see visual tools is in domain-specific scripting like audio and systems simulations where you've got small self-contained relationships,,
2.17712E+17,gomma#4017,2021-06-25,So the vibe i‚Äôm getting is that there‚Äôs not really a limit ?,,
2.17712E+17,gomma#4017,2021-06-25,It‚Äôs really more of a preference thing?,,
2.17712E+17,gomma#4017,2021-06-25,The speed and simplicity of text?,,
1.62766E+17,Kehvarl#4720,2021-06-25,"I would be interested in seeing your design for a visual language based on Racket or Scheme.    My experience with them has mostly been that text is more expressive, flexible, and concise.  

I would enjoy seeing that proven wrong because the more approaches we have to solving problems, the easier it becomes to find better angles on each problem.",,
2.17712E+17,gomma#4017,2021-06-25,"Well, I was probably gonna do something more like Max but in my own way",,
2.17712E+17,gomma#4017,2021-06-25,"But I do think I have a fresh, insider *and* outsider take on it",,
2.64024E+17,Eutro#0016,2021-06-25,Reader extension that parses text from image files?,,
2.64024E+17,Eutro#0016,2021-06-25,I mean PNG images,,
8.14743E+16,jimpjorps#0001,2021-06-25,figuring out a way to make a visual language that plays well with typical productivity tools like source control and linters and such is a big hurdle too,,
2.17712E+17,gomma#4017,2021-06-25,true. I‚Äôll have to think about that,,
2.17712E+17,gomma#4017,2021-06-25,Max did a decent job I think,,
2.17712E+17,gomma#4017,2021-06-25,With linting and debugging and stuff,,
1.62766E+17,Kehvarl#4720,2021-06-25,"What if your files were based on SVG so the information going into source control could be treated like text?  You'd probably need some digraph features to handle connections between nodes/shapes.   And of course your IDE would have to abstract that all away. 

Although then your runtime would need to understand SVG, and who wants an xml parser as their runtime?",,
2.17712E+17,gomma#4017,2021-06-25,I‚Äôm fond of some recent attemps at making the visual and textual interwoven,,
8.14743E+16,jimpjorps#0001,2021-06-25,now I'm imagining some kind of Racket to TikZ interface,,
2.17712E+17,gomma#4017,2021-06-25,"So that every visual thing corresponds to a textual. It‚Äôs actually not just visual, it‚Äôs both visual and textual",,
2.17712E+17,gomma#4017,2021-06-25,https://kronoslang.io/,,
1.62766E+17,Kehvarl#4720,2021-06-25,"Wait, nevermind.   What I just described is disturbingly similar to Sharepoint state-machine workflows, and those are a real pain.",,
2.17712E+17,gomma#4017,2021-06-25,"^ a really awesome audio language that‚Äôs visual<->textual,",,
2.17712E+17,gomma#4017,2021-06-25,feels rather young tho,,
2.17712E+17,gomma#4017,2021-06-25,i remember running into issues and the debugging wasnt fun,,
2.17712E+17,gomma#4017,2021-06-25,"What i want to try is like category theory. Instead of boxes which carry all the information and cables which just connect boxes. The cables become the carriers, and the boxes becomes practically meaningless.

Weak identities everywhere. Indirect programming by relations and differences. Idk how to describe it but i feel like i see it in my brain",,
2.17712E+17,gomma#4017,2021-06-25,"Suprisingly feels well suited for certain musical things, like pitch and rhythm. Allowing the user to get the environment working the way they like.",,
2.17712E+17,gomma#4017,2021-06-25,"For example, Thinking about pitch in ‚Äúabsolute‚Äù terms is really just an initial object in a sort of category of pitchs",,
8.14743E+16,jimpjorps#0001,2021-06-25,"it‚Äôs been a while since I‚Äôve looked at it but Simulink is somewhat like that, a bunch of flows of input transformed by nodes on a graph",,
6.46114E+17,samth#3420,2021-06-25,@jimpjorps see metapict for a tikz-like library for Racket,,
8.14743E+16,jimpjorps#0001,2021-06-25,that's pretty neat,,
8.14743E+16,jimpjorps#0001,2021-06-25,"I've been using tikz semi-regularly for about a decade now, it's fun",,
2.17712E+17,gomma#4017,2021-06-25,i‚Äôll look into it,,
2.17712E+17,gomma#4017,2021-06-25,thank u,,
2.17712E+17,gomma#4017,2021-06-25,thank u all for responding üôè‚ù§Ô∏è,,
4.90866E+17,JOST GRANT#1516,2021-06-25,I've seen experiments to add 'visual blocks' in a few Schemes before; Visual programming I think is great when things are already pretty-dang abstracted but gets really convoluted to unmanageable when you have to do a lot of that low-level internal work yourself (in such a system). I have a few friends that stream on Twitch and they're not super technical by any means but all of them have felt fairly confident to use  https://www.instafluff.tv/ChatBlocks/ for example and it's great for that purpose.,,
4.90866E+17,JOST GRANT#1516,2021-06-25,Code-blocks also tends to map more directly to a textual paradigm; Which gives it legs I think a bit more than alternatives. I've seen enough node-based visual cdde screenshots to make me barf,,
4.90866E+17,JOST GRANT#1516,2021-06-25,Literal spargetti code at a point,,
8.14743E+16,jimpjorps#0001,2021-06-25,"yeah, labview and simulink are pretty good at generating dense meshes of nonsense",,
8.14743E+16,jimpjorps#0001,2021-06-25,,https://cdn.discordapp.com/attachments/618895179343986688/858034659383967744/nrjsxmfm912163998723206173.png,üòç (1)
4.90866E+17,JOST GRANT#1516,2021-06-25,"@jimpjorps yeah, looooool. It's possible too that that's a near ideal of that system ""at scale"" too and maybe the person who rigged that up really understands every part of that 'at a glance'. But certainly as a 3rd-party view that as waaaay more intimidating to jump into. And I can't imagine how hard it'd be as a complete beginner to programming. lol",,
8.14743E+16,jimpjorps#0001,2021-06-25,"part of it is that those languages don't emphasize refactoring or code reuse, so you start with something simple and slowly start plugging more blocks into it, copying stuff around, wedging stuff where it fits int the ad hoc arrangement on the page, and eventually you've ended up with something impossible to edit",,
4.90866E+17,JOST GRANT#1516,2021-06-25,I'd honestly be all-for something like https://developers.google.com/blockly for Racket though; Don't think it's going to be a one-size-fits-all solution like visual-programming advocates/enthusiasts claim but there's some narrow domains where it'd bring a lot of value I think. That loose idea for voxel-sandbox I brought up yesterday -- I think something like a turtle-graphics like visual-block system would be near ideal in that case.,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Well at a certain point it becomes near literal black-box abstraction; It becomes a ""square that does 'one' thing"" and if it does it deemed 'good enough' I think there's less motivation to dig deep to make sure you got it right.",,
8.14743E+16,jimpjorps#0001,2021-06-25,yeah,,
8.14743E+16,jimpjorps#0001,2021-06-25,"I remember seeing this recently, an attempt to bridge the gap between Scratch and a standard IDE with DrRacket https://www.youtube.com/watch?v=yJt0kKE9YxQ",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Certainly certain Lisps (and a lot of Smalltalks) are in the extreme-minority here I just find it a bit weird that there isn't a stronger niche in gamedev circles. I guess there's been a lot of momentum against 'anything but C/C++' for a long-time and many still map to this model and sorta-kinda cheated a lot of the advantages by shoving a scripting-language with much more dynamic features than what was present in the host-lang for a given engine ... and that 'works' I guess but the idea of a singular language for engine-code & game-logic seems very attractive to me as an outsider, so is the idea of recompile and boop magic happens without completely resetting state, etc. I'm hoping with the recent push of ZGC in Java-Land there's more of a focus on GC being viable in these spaces 'at that level' and with it people lusting for a single-language at both levels, and with it the usability of having a language with ""all these features"".",,
4.66395E+17,oaktownsam#0815,2021-06-25,There was a Racket paper at (I think) OOPSLA last year about adding visual syntax elements to DrRacket,,
4.66395E+17,oaktownsam#0815,2021-06-25,https://arxiv.org/pdf/2010.12695.pdf,,üíØ (1)
8.14743E+16,jimpjorps#0001,2021-06-25,stumbled across this just now while poking around on github and it looks interesting https://github.com/enso-org/enso,,
4.90866E+17,JOST GRANT#1516,2021-06-25,That's a pretty novel approach,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Ah yeah, formely luna-lang",,
2.17712E+17,gomma#4017,2021-06-25,"I feel like visual languages can be upgraded. The places where there are issues, there can be solutions",,
2.17712E+17,gomma#4017,2021-06-25,I have ideas myself,,
2.17712E+17,gomma#4017,2021-06-25,"Specifically with modularity, abstractions, etc.. But also with the basic box cable idea, flipping it on it‚Äôs head and making cables the main force.",,
2.17712E+17,gomma#4017,2021-06-25,I‚Äôll look into all these resources when i get home. Y‚Äôall are being very helpful ngl. i highly appreciate y‚Äôall,,"üíØ (1),salute (1),bowie (1)"
4.90866E+17,JOST GRANT#1516,2021-06-25,Unrelated; But going back to that voxel-engine I was talking about lastnight -- found https://github.com/oplS17projects/RacketCraft which I have no idea about the actual state of ... and can't find a license stated anywhere. But neat to see there's some loose goal parity out in the ether. lol,,
4.90866E+17,JOST GRANT#1516,2021-06-25,A bunch of cool student projects in that org though; Or at least start thereof. Not sure how far many of them got.,,
2.17712E+17,gomma#4017,2021-06-25,this looks very nice. Def will check it out,,
4.66395E+17,oaktownsam#0815,2021-06-25,I wonder if that is a course that @jeapostrophe works with.,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Seems to add up (both MA lool); Would make a lot of sense,",,
4.90866E+17,JOST GRANT#1516,2021-06-25,Also ... why can't we STILL not follow orgs on gh?!,,
4.90866E+17,JOST GRANT#1516,2021-06-25,_still still wants 'Organization READMEs' though as-well._,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"For a long-while there was a bug that if you made a whatever/whatever repo in your organization (so repo was the same name as org) like you'd do for a personal account-readme it'd pop up the ""woah, you discovered a secret"" message like it'd work in your org as-well. lool.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,What a fakeout,,
2.17712E+17,gomma#4017,2021-06-25,"i always preferred spatial organization. Black box abstractions help a lot. Imagine if a text file contained every single code used from scratch. Seems like labview and simulink is like that.
Max however isnt and i was very organized with it.

Very curious to use enso",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"I'm certainly no expert in these systems; I view them a curiosity but always happy to look alternative models. I need to look into Enso 'again' -- used it briefly when it was still luna and it was a lot ""prettier"" than the alternatives at bare minimum. lol",,
8.14743E+16,jimpjorps#0001,2021-06-25,"yeah, I'm playing with it now",,
8.14743E+16,jimpjorps#0001,2021-06-25,the hyper-minimal UI on the editor is in my way but it definitely feels familiar beyond that,,
8.14743E+16,jimpjorps#0001,2021-06-25,,https://cdn.discordapp.com/attachments/618895179343986688/858051661691486229/unknown.png,
4.90866E+17,JOST GRANT#1516,2021-06-25,Didn't even know it shipped a light-mode,,
2.17712E+17,gomma#4017,2021-06-25,ya that looks nice af,,
8.14743E+16,jimpjorps#0001,2021-06-25,"the text syntax for it reminds me of some of the Racket Rhombus proposals, to vaguely bring it back on topic",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Is there any formal update anywhere about Rhombus? Looks essentially dead at least as-per the proposal repo. I know there are somefactor of two forks out there with purposed syntax -- one is 'sapling' based via MFlatt's work and actually looks like a novel approach and one is ArneBob's Wraith syntax which is a prettier pretty/sweet-syntax afaict. Not sure if I'm really missing any more, or?",,
2.66505E+17,notjack#9941,2021-06-25,"I wouldn't call it dead, just lower priority than other things (like racket-on-chez)",,
1.81824E+17,Motive#9128,2021-06-25,"With mixed graphics/text programming, Im really interested in the stuff Baku is doing with glisp.",,
1.81824E+17,Motive#9128,2021-06-25,This looks super nice,,
1.81824E+17,Motive#9128,2021-06-25,"Back in the day I used Shake a lot for compositing, and it could switch between graphical and text form, which was nice for different needs.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"That's fair, I'm sure the Chez transition has been a tremendous amount of work / focus. I just remember hearing about it what feels like all the time when it was announced (namely people making a huge deal -- even though afaik it's not going to be the default / ""replace"" s-exp syntax on-the-whole) and this was when I was a lot further out of the Scheme / Racket world so I didn't exactly have my ear to the ground or anything. So I guess the absence and/or contrast to that  made it feel a lot ""more alive"" in the first-place so no big progress I guess equates to ""dead"" then. lool",,
4.90866E+17,JOST GRANT#1516,2021-06-25,Link? :^),,
4.90866E+17,JOST GRANT#1516,2021-06-25,Oh I VAGUELY recall this https://github.com/baku89/glisp,,
1.81824E+17,Motive#9128,2021-06-25,"Yeah, thats the same person.  I was tracking down one of the nicer examples.  What I really liked was the interplay between the forms without getting rid of either one completely",,
1.81824E+17,Motive#9128,2021-06-25,"I have no basis for this, but I feel that the most pragmatic approach.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"re: Rhombus and  ""the search for the s-exp-less Lisp"" it's grown on me; I've explored this space a tiny bit the past year or-so and Dylan I think is actually pretty nice experience, David A. Moon's ""Lunar"" (formely PLOT) I wish had a 'real' implementation (there's technically  https://github.com/polyform-lang/polyform  but don't know how complete it actually is (and/or compliant) plus if it's gonna be hosted ... muuuuch rather it be on a Lisp to start), & MFlatt's proposal looks pretty nice / promising to me.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,For me the attempts of 's-exps but without parens' don't go far enough; And think it's very easy to argue just freaking use them and get over it already. lol,,
8.14743E+16,jimpjorps#0001,2021-06-25,are there other languages that are as self-conscious about their syntax,,
8.14743E+16,jimpjorps#0001,2021-06-25,like is there worry that python indentation is scaring people away,,
8.14743E+16,jimpjorps#0001,2021-06-25,or curly braces in C-like languages,,
2.75501E+17,Plane#0324,2021-06-25,You can use sweet exps in Racket if you like them,,
2.66505E+17,notjack#9941,2021-06-25,@jimpjorps yes to both those examples,,
8.14743E+16,jimpjorps#0001,2021-06-25,fair enough,,
1.81824E+17,Motive#9128,2021-06-25,"I know some folks get strange about not having dot notation in Julia, which doesnt need it and is more powerful with its multidispatch.  That said, some folks probably dont realize that and think Julia is closer to non-oop languages.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"There are always going to be certain individuals in a language ecosystem that feels the syntax is limiting the adoption, or expressiveness, or intent, etc, etc -- the two languages you mention happen to have userbases literal magnitudes bigger than a given ""Lisp"" community. So those arguments don't feel like they hold as-much weight.

That being said, for better-or-worse s-exps are certainly ""different"" than everything else out there; And it's not just a trivial 'too many parens' the polish-notation adds another layer of separation from mainstream offerings. I think ultimately there's an argument to make that it's not a big-deal and you get used to it quickly, but I think there's also (and I think important) argument that these small things don't even get people in the door in the first-place",,
4.90866E+17,JOST GRANT#1516,2021-06-25,Like if people use Python for the syntax (and that's what made it popular) or people use Python  because it's popular and the syntax is unrelated to that sorta-kinda matters if you want to emulate certain aspects from that community.,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"At a certain point it doesn't matter just because of Network-Effect; Don't think many people are ""in love"" with C++'s syntax / semantics but it's used because it's what everyone uses in the domain they are interested in",,
7.73175E+17,meowüé∫#2842,2021-06-25,Yes and yes. This is also a problem with smaller languages as it's feared that they scare away newcomers.,,
7.73175E+17,meowüé∫#2842,2021-06-25,"I was getting into Erlang, for example, but the syntax put me off so much that I opted to go with Elixir instead.",,
7.73175E+17,meowüé∫#2842,2021-06-25,Prolog is another example where many people hate its syntax but others swear by it. (I personally like it.),,
4.90866E+17,JOST GRANT#1516,2021-06-25,Gotta be honest; It's not the braces that 'scare me off of C/C++' syntax wise. I hate the type being what leads a definition; Like `int whatever` just annoys me beyond compare for some reason. lool,,
7.73175E+17,meowüé∫#2842,2021-06-25,Static typing?,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Nah, just the semantics of leading a line with the type",,
7.73175E+17,meowüé∫#2842,2021-06-25,Nominal typing,,
7.73175E+17,meowüé∫#2842,2021-06-25,"No wait, *manifest* typing.",,
7.73175E+17,meowüé∫#2842,2021-06-25,"God, there are so many terms for typing.",,
7.73175E+17,meowüé∫#2842,2021-06-25,"Yes, this is the one I was thinking of: https://en.wikipedia.org/wiki/Manifest_typing",,
2.66505E+17,notjack#9941,2021-06-25,as in you prefer `var whatever: int` instead?,,
4.90866E+17,JOST GRANT#1516,2021-06-25,@notjack Exactly,,
2.66505E+17,notjack#9941,2021-06-25,gotcha,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Looks so much cleaner to me; It actually drives me nuts that ""I care"" at all. But for whatever reason it really does",,
7.73175E+17,meowüé∫#2842,2021-06-25,oh,,
7.73175E+17,meowüé∫#2842,2021-06-25,I thought you just didn't like declaring types.,,
4.90866E+17,JOST GRANT#1516,2021-06-25,No I have no issue with manually declaring types; Though think a lot of times it could be inferred to the degree ML does it and things be 'just fine'. lol,,
2.66505E+17,notjack#9941,2021-06-25,I like the colon-based approach too,,
8.14743E+16,jimpjorps#0001,2021-06-25,"yeah, of all the types I've seen I think the ML-style way makes the most sense to me",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Nim is pretty close to my example of a ""best possible, practical , traditional syntax"" for me; I wish it had a lot more dynamic features -- and I'd be a lot more inclined to use it. Maybe when the incremental-compiler lands and it can do much more in-depth hot-code-reloading. It sorta-kinda has a novel scripting-language by proxy of its macro vm but performance wise it's notably slower than python last I've heard so ehhh",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Nim even let's you declare pragmas / annotations at the end of a line via {.whatever.} syntax which I think is real neat (as in cool), neat (as in tidy), and novel approach",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"There was a short-short time last year when I was actively trying to ""sell out"" and become **boring** where I was considering trying to make a Kotlin analog for C# but then I poked around that ecosystem and they have zero problem with the syntax as-is (actually think it's really nice / clean), heavily reliant on xml, and their new gui framework they've been making such a big deal about has no official Linux support... I was like uhh",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"**Puts hands up, slowly backs out of the room* ** looool",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"But I mean, it just really highlighted to me the difference of values between communities.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"And fundamentally how different one's conception of ""the ideal"" is.",,
8.14743E+16,jimpjorps#0001,2021-06-25,"the .net ecosystem's a little weird because a lot of stuff like that is ""unofficial"" but that just means Microsoft doesn't develop it directly, it's been delegated to a foundation or project that's official in all but name",,
8.14743E+16,jimpjorps#0001,2021-06-25,and which is usually a stakeholder in the official spec or the library,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"When I saw FSharp was 'officially' part of the DotNet foundation I was a bit more enthusiastic that alternatives ""were possible"" but yeah you're working against a LOT of momentum in one direction. Also even though things like the DLR exists (the dynamic-language-runtime extension to the CLR) it looks like it's certainly not a big focus and for me 'dynamic' / runtime / late-binding / live-redefinition is ""the most magical"" stuff for me.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Racket , I guess obviously, became a much more attractive platform to piddle around with some trivial langdev stuff; And while (as entablished) maybe not as dynamic as some of the alternatives in Lisp-land it looks way more than sufficient for everything but a few edge-cases -- and even then the leap from Racket to say SBCL isn't ""that crazy"" if it ever comes to that. lol",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Also yah, for **true** crossplatform support in Racket! If you're going to be somefactor tied to an IDE (both ecosystems somewhat tout this) at least Dr.Racket runs on the 80% of my machines that VisualStudio doesn't * & don't have to resort to a third-party.",,
1.81824E+17,Motive#9128,2021-06-25,"Lucky you, C++ has `auto` now",,
1.81824E+17,Motive#9128,2021-06-25,"Despite having worked in C then C++ for 30 years now, I still prefer Pascal's syntax with its light use of `end`, no { } and name first typing.  I even like ^ as a pointer.",,
1.81824E+17,Motive#9128,2021-06-25,"Then again, that was my first real language, so I just chalk it up to that",,
1.81824E+17,Motive#9128,2021-06-25,"And I think folks are silly about the ( ) in Scheme/lisps.  But, then again, I hate (hate) LUAs syntax, as well as Pythons, so glass houses and all that",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-25,"you know if nothing else, racket good support for windows is very appealing",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-25,I think all lisp implementations targeting basically only linux are very arrogant,,
1.81824E+17,Motive#9128,2021-06-25,"Its definitely a bonus for me.  I also really like that Racket allows easy DSLs which can make building simple APIs for game designers easy, so, its then easy to build out simple AI, navigation, dialog etc.",,
2.36947E+17,jeapostrophe#4261,2021-06-25,I don‚Äôt know anything about it,,üëç (1)
4.90866E+17,JOST GRANT#1516,2021-06-25,"@Motive There was talk from CarlGay (one of the two maintainers of OpenDylan atm) about adding curly-brace syntax over the end syntax -- but I actually prefer end syntax tbh, yeah.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"now we just need a bot to TRANSFORM all the other declarations ... it could be called, um, auto bot. lol",,
4.90866E+17,JOST GRANT#1516,2021-06-25,Well tbf/tbh it's less of an issue to have Windows as a second-class citizen nowadays than Linux. WSL is likely going to be shipped in Win11 (due to android-support) and that's where most of the development time is happening anyways (on Linux). So I'm not going to begrudge people besides arguing it's good-design to be native crossplatform and should be an explicit goal,,plusone (1)
4.66395E+17,oaktownsam#0815,2021-06-25,"I don't see it as arrogant, but they are making a decision on the best allocation of their development resources.  Linux support is much easier than Windows.  One of the reasons Racket has some iOS support is that someone in the community initially started working on it.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"But at the same time ... don't think ""Crystal"" the static-compiled Ruby inspired language even has native Windows support; Aaaaannnnnd they decided to release as a 1.x for some reason. loool",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"And I think that's being more naive than outright arrogant and ""they can have our scraps"" territory; Because it's been on the roadmap for some time now but ... a lot of these languages / implementations it's often being helmed by like* 1 or 2 guys , parttime, so the focus is fractured",,plusone (1)
4.90866E+17,JOST GRANT#1516,2021-06-25,"We just need to make a pinephone distro / interface; That's the ""real answer"" loool",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"I saw there was partial android support for awhile from moby, but looks like it's mostly bitrotted",,
8.14743E+16,jimpjorps#0001,2021-06-25,"yeah I think it's probably a safe assumption that an audience that's interested in experimental programming languages has some form of UNIX available to them, either natively or on a server somewhere or through WSL",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Or that , at minimum, if you're into non-mainstream prog-langs doing one or two extra steps isn't likely going to be the deciding factor if you mess around with it or not.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,And* I'm all for an easy on-boarding and/or first-run experience; But it certainly matters in some situations over others and many not be the top priority given the size of a certain community.,,
8.14743E+16,jimpjorps#0001,2021-06-25,my first experience with Lisp was read about Lisp in a book > get interested > google it > run around in circles trying to find a guide to how to try Lisp on Windows without also having to learn Emacs at the same time > end up on Racket instead,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"My experience with programming in-general was like a decade to closer to 15 years ago now, I ""wanted to make games"" so start working my way through a C++ book, almost finished it, went to talk to people on irc and said I should switch to Python / Pygame was dumb enough to listen -- realized quickly it wasn't fast-enough to handle the hand-drawn ""sprites"" I wanted to make. Got quickly discouraged, decided ehhh I'll just go to art-school ultimately (was a naive sophomore in HS at the time) and gave up programming in-general for like 2-3 years. During initial attempt, I moved to Linux though and was casually living in that ecosystem -- eventually I started using Emacs , because the idea of an ""editor"" where I could play tetris, control my multimedia, and use irc from blew my mind. Quickly began to near obsessively 'rice' it in most of my free-time and my config quickly ballooned to iirc a lil over 10k lines over the next year or two. Then I eventually continued down that path and was living in Emacs + Stumpwm + Conkeror for like 90% of my day-to-day computing. Slowly edged into Common-Lisp but had more direct utility in ELisp. Eventually became the full-time caretaker for my grandfather for like 4 or-so years and had no time to basically do anything besides that. After there was about a year for me to reflect what I ""should do"" and that I was getting older, needed to ""grow up"" and trashed everything ... still one of the dumbest decisions of my life. Tried to be a boring Java with a side of Scala boy for like a year, was miserable (mainly because it was 3/4ths Java), then was going to try Python (with a side of Nim) less miserable but still longing ... and then Corona happened and now I don't care; I'm going all-in hedonistic tech-choices.  loool",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"So for me it really ""began"" and hopefully somefactor of 'ends' in a Lisp orbit.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Nowadays I'd probably honestly suggest Portacle for ""Lisp"" (assuming that meant Common-Lisp) over just plain Emacs; But yeah, it's hard to beat Dr.Racket (+ Sauron) for your first-experience in a Scheme/Lisp-focused editor.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,I've said the otherday that I can't believe Lispworks' IDE is even a product nowadays; compared to something like Dr.Racket -- which blows it out of the water,,
2.75501E+17,Plane#0324,2021-06-25,"That‚Äôs fun, I made lots of little games in the 80s and 90s myself (:",,
2.75501E+17,Plane#0324,2021-06-25,Back then it was maybe a little different since I got a lot of experience programming the hardware directly,,
2.75501E+17,Plane#0324,2021-06-25,I‚Äôve never used pygame,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"I mean, honestly I wish I cared more about Pixel-art because chances are I'd of been a lot more productive up until this point. Nowadays it would've been mostly irrelevant , even though I made such a big deal about it (hand-drawn ""sprites"") I almost never draw anymore. Realized the other day I probably have drawn to things since all the Covid-19 stuff and they will dumb little doodles -- not even close to finished.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"But it's amazing how something ""so little"" comparatively can discourage you when you're new to something.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"It's a pretty nice api; But clearly not optimized for performance -- heard it's better since the move to SDL2 but still would be shocked if it could handle ""what I really wanted"" with it. Hand-drawn, high-resolution sprites with realtime lighting and shadows",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"well , wanted at the time; Now I'm pretty sold on 3d (namely for asset resuse)",,
2.75501E+17,Plane#0324,2021-06-25,3d can definitely save a lot of work,,
2.64024E+17,Eutro#0016,2021-06-25,"Isn't ""clearly not optimised for performance"" just the whole of Python?",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Eh, Python is as-much of a ""glue language"" as it is a scripting-language at this point; So don't think it's a huge concern within the community (maybe sadly) because not many (as in next-to-no-one) is writing performance-critical code in Python in the first-place. There's some implementations like PYPY which are pretty solid; think it's like 3x the speed compared to the default & numba also has a JIT but that's more intended to be used (via annotations) for specific blocks and not the whole codebases afaict. Micropython is pretty light and fast afaict too. But none of these are official , nor is there a path to get them there and all of them have some limitation one way or another -- a lot of which seems to be due to not fully being able to cover the standard lib",,
4.90866E+17,JOST GRANT#1516,2021-06-25,Also tbf afaik the issue in Pygame is more how they do sprite-batching than the inherent speed of Python itself.,,
4.90866E+17,JOST GRANT#1516,2021-06-25,"Though obviously ""raw speed"" does allow you to be sloppier / make a bunch more calls a less-optimized language would struggle with.",,
4.90866E+17,JOST GRANT#1516,2021-06-25,"So it's not to say that isn't a factor; But like everything, the most obnoxious answer is the 'right one' ""everything's a tradeoff"". lol",,
5.24323E+17,Ben Kenobi#5683,2021-06-26,"Fwiw, people are using performance-critical code in python (tensorflow and all that), but it‚Äôs really C/C++ and bindings‚Ä¶ and yes, I would say performance-critical. From experience, it‚Äôs highly annoying when a simple model with complex data takes 12h on your laptop to build üôÇ i‚Äôve long wondered if we needed a new language to describe the models that could compile directly into the <pick your favorite systems lang/rust> needed to do it, and skip python altogether. But their is such an ecosystem around python that i dont see how to displace it",,
4.90866E+17,JOST GRANT#1516,2021-06-26,"Gotta head to work so won't see this for a few hours; But re: Python that's what I'm talking about Python is a 'glue language' because you might piece some of these highly-performant bits of C/C++ together but the chances you're implementing any of this heavy-lifting in Python itself (and getting anything close to acceptable) is pretty low.

But yeah, even non-performance critical if you write enough of a codebase in a language with 10-100x less performance it's going to start having a non-trivial cost at somepoint; Fully agree on that front. lol

Also, afaik Cython (the now default implementation) compiles down to C? I think stuff like the GIL is a lot more limiting than the given host language at this point; But no means an expert.",,
4.90866E+17,JOST GRANT#1516,2021-06-26,Okay be back in like 6-10 hours ... o/,,
3.5323E+17,Alex Knauth#4895,2021-06-26,Cython and CPython are 2 different things if I remember correctly,,
3.5323E+17,Alex Knauth#4895,2021-06-26,"and I think the difference is Cython is a compiler to C, while CPython is an interpreter written in C",,
2.34164E+17,python#3213,2021-06-26,You are correct,,
4.90866E+17,JOST GRANT#1516,2021-06-26,"With names that similar; I see why I mixed them up. loool -- re: CPython , I know it's an implementation detail and it shouldn't ""matter"" on some-level but it really bugs me when a language (even if hosted) is not written in itself. Pretty much all the ""JVM Lisps"" fall under this category too, sadly; ABCL, Kawa, & Clojure.",,
4.90866E+17,JOST GRANT#1516,2021-06-26,Maybe it's a dumb purist-thing; But for me it's a sign of maturity of the ecosystem and trust in the language itself.,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-26,ü§∑‚Äç‚ôÄÔ∏è I don't think this is indication of anything,,plusone (1)
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-26,java's jit implementation in java only just has been rolling out,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-06-26,even though java has been mature for quite long time,,
2.66505E+17,notjack#9941,2021-06-26,I also don't take it as a sign of anything,,
2.66505E+17,notjack#9941,2021-06-26,"for one thing, compilers are not a good representative for most software engineering problems",,
2.66505E+17,notjack#9941,2021-06-26,"taking racket-on-chez as an example, I think the benefit there isn't so much ""more of the compiler is written in racket/scheme"", I think it's ""less of it is written in C""",,
1.56786E+17,williewillus#8490,2021-06-26,"Idk I think it's fine
Clojure in particular takes a super practical stance on everything
Who cares if the backing impl is in java if clojure works and you can use it",,
1.56786E+17,williewillus#8490,2021-06-26,Though I do find it annoying that clj and cljs implementations of things aren't unified,,
1.56786E+17,williewillus#8490,2021-06-26,Sometimes,,
7.73175E+17,meowüé∫#2842,2021-06-26,Picolisp is written in pure x86-64 ASM to compensate for the absence of literally any other form of optimisation. It's one of the few languages that's purely interpreted. No JIT or anything.,,ü§Ø (1)
4.90866E+17,JOST GRANT#1516,2021-06-26,"@Techno Chess, Atomic variation @notjack  @williewillus Again, not claiming this is a reasonable take to have; Actively saying I think it is probably in reality a ""dumb purist-thing"" & ultimately it comes down to it  being an 'implementation detail' -- but it's just how my mind works. Actually, actively wish this purist bent I could train myself out of completely ... it's gotten better over time, but it's never gone away and really my life would be SO much easier if it wasn't a real factor. loool",,
7.73175E+17,meowüé∫#2842,2021-06-26,It's a very unorthodox design decision but I think it's an interesting tradeoff.,,
1.56786E+17,williewillus#8490,2021-06-26,"Not saying it's bad or useless to self host, I find it cool too",,
1.56786E+17,williewillus#8490,2021-06-26,Just might not be the most important objective,,
2.66505E+17,notjack#9941,2021-06-26,it does win style points,,meowblushcool (2)
4.90866E+17,JOST GRANT#1516,2021-06-26,"I mean, I certainly don't have enough domain-experience (in actuality very-very little ... like part of a MAL implementation that's about it loool) but have mixed feelings about this. I think it's a very narrow space, I agree if that's what you're getting at and ultimately  you tend to care a lot more about performance / optimization than you would elsewhere -- but besides that, idk.",,
2.66505E+17,notjack#9941,2021-06-26,"you also tend _not_ to care about IO all that much, beyond some basic filesystem ops, and you're doing work that is both 1) computationally expensive and 2) algorithmically complex",,
4.90866E+17,JOST GRANT#1516,2021-06-26,"I mean, I agree with that; But again this is more of a ""gut feeling"" thing and one's priorities often shift to weird places in those conditions. loooool",,
4.90866E+17,JOST GRANT#1516,2021-06-26,"I find it to be a very interesting space, and something I want to peruse more seriously at somepoint (probably after I feel like I'm not drowning learning gamedev / game-engine architecture loool) but yeah, certainly it's different enough where there's a lot more care , nuanced required than a* more pedestrian project.",,
4.1228E+17,xgqt#8370,2021-06-26,"Imo the best thing is transpiling to a other low lvl lang like for example cyclone does - it is both self hosting and a transpiler.
It is very good for consumers/packagers because they take the transpiled C code and compile it;
It is very good for developers because they develop on the higher level Scheme (R7RS) code.
Also because you don't have to ship a compiler, only a transpiler, you kindof have this a bit more high level optimization to do, leaving low-level to any C compiler (if you dont use specific extensions of course...)",,
4.90866E+17,JOST GRANT#1516,2021-06-26,"Oh re: gamedev, that reminds me is the incremental-gc still gonzo in the CS backend?",,
7.73175E+17,meowüé∫#2842,2021-06-26,"Transpiling to C lets you piggyback on optimisations of overengineered C compilers, makes your code highly portable for free and makes C FFI cheap and easy.",,
4.90866E+17,JOST GRANT#1516,2021-06-26,Mentioned Nim the other day (I think in here?) and this is the strategy that's made them a moderate success afaict. Basically make a C compiler do the heavy-lifting,,
7.73175E+17,meowüé∫#2842,2021-06-26,But at what cost...,,
4.90866E+17,JOST GRANT#1516,2021-06-26,https://tenor.com/view/thanos-infinity-war-everything-avengers-gif-14066494,,
4.90866E+17,JOST GRANT#1516,2021-06-26,Obligatory. lool,,
7.73175E+17,meowüé∫#2842,2021-06-26,"Hmm, are there any LLVM Scheme compilers out there?",,
4.1228E+17,xgqt#8370,2021-06-26,and the question arises - why Rust doesn't transpile to C?,,
4.1228E+17,xgqt#8370,2021-06-26,clasp is lisp on LLVM,,
7.73175E+17,meowüé∫#2842,2021-06-26,That's not Scheme. :meow:,,
4.1228E+17,xgqt#8370,2021-06-26,thats why I wrote lisp,,
1.56786E+17,williewillus#8490,2021-06-26,Because rust is already on llvm,,
1.56786E+17,williewillus#8490,2021-06-26,Going to C first would be pointless,,
4.1228E+17,xgqt#8370,2021-06-26,well if you use clang to compile transpiled C source you use LLVM ü§∑‚Äç‚ôÇÔ∏è,,
1.56786E+17,williewillus#8490,2021-06-26,And you lose fine control over your codegen,,
1.56786E+17,williewillus#8490,2021-06-26,Doing stuff like MIR opts wouldn't really be possible,,
4.1228E+17,xgqt#8370,2021-06-26,"I didnt say it had to also be using LLVM, they used to use OCaml, right?",,
1.56786E+17,williewillus#8490,2021-06-26,Yeah but that was bespoke codegen,,
1.56786E+17,williewillus#8490,2021-06-26,They didn't use C as a target,,
1.56786E+17,williewillus#8490,2021-06-26,Iirc,,
1.56786E+17,williewillus#8490,2021-06-26,"Either way it's advantageous to not go through C if you have the resources
Which rust does",,
7.73175E+17,meowüé∫#2842,2021-06-26,"The longer your tombstone diagram is, the more overhead and cruft accumulates during codegen.",,
1.56786E+17,williewillus#8490,2021-06-26,But going through C is a great leg up for smaller languages,,
4.90866E+17,JOST GRANT#1516,2021-06-26,Think it's pretty much dead though tbh,,
4.1228E+17,xgqt#8370,2021-06-26,?,https://cdn.discordapp.com/attachments/618895179343986688/858473967417163786/unknown.png,
4.90866E+17,JOST GRANT#1516,2021-06-26,Oh! Okay think I just found an old fork he had then; Very neat.,,
4.1228E+17,xgqt#8370,2021-06-26,repo in question: https://github.com/clasp-developers/clasp/commits/main,,
4.90866E+17,JOST GRANT#1516,2021-06-26,"Not exactly sure what the ""magic"" is over SBCL besides near seamless interop with C++ which may be enough for some people -- but glad to see it's still around / active!",,
4.90866E+17,JOST GRANT#1516,2021-06-26,Some of the deep-learning tensorflow styled stuff might be a LOT easier to wrap actually,,
4.90866E+17,JOST GRANT#1516,2021-06-26,"It's kinda  a shame to me how prominent LISP was in the formation of AI as a field and how besides the famous and evidently ""outdated"" by today's standards Norvig Book it has like ZERO mindshare nowadays.",,
4.1228E+17,xgqt#8370,2021-06-26,https://www.youtube.com/watch?v=dO0IgdSaNic,,
1.56786E+17,williewillus#8490,2021-06-26,"I mean if you count clojure (which should be counted), it's not that bad",,
1.56786E+17,williewillus#8490,2021-06-26,Also emacs lisp lol,,
4.90866E+17,JOST GRANT#1516,2021-06-26,`M-X Doctor` or whatever loool,,
4.90866E+17,JOST GRANT#1516,2021-06-26,"Yeah, I know Clojure has some nicities for the DL4J stuff iirc",,
4.90866E+17,JOST GRANT#1516,2021-06-26,"Still that's ""next to nothing"" compared to the mindshare of Python / C++ at this point though tbf.",,
4.90866E+17,JOST GRANT#1516,2021-06-26,0.10X Developers. looool,,
4.66395E+17,oaktownsam#0815,2021-06-26,"*whispers*: ""transpiling"" is compiling",,üíØ (5)
2.66505E+17,notjack#9941,2021-06-26,~~transpiling is when trans people use compilers~~,,"üòÇ (1),üòπ (4)"
4.90866E+17,JOST GRANT#1516,2021-06-26,"Fair; I still see ""compiling"" as mostly to-machine-code / bytecode in someway though. But fundamentally, yeah taking  input / a user-focused format and converting it to an output / machine-focused fits both definitions though at 'different levels'. Fundamentally it's just adding an IR to that process afaict",,
4.1228E+17,xgqt#8370,2021-06-26,"@oaktownsam well, I was taught that transpiling is source to source and compiling is to some binary blob",,
2.66505E+17,notjack#9941,2021-06-26,"for some folks, a binary blob _is_ the source",,
4.66395E+17,oaktownsam#0815,2021-06-26,For the machine,,
4.1228E+17,xgqt#8370,2021-06-26,thats not a person,,
4.66395E+17,oaktownsam#0815,2021-06-26,Compiling is taking something in one language and turning it into another language.,,
7.73175E+17,meowüé∫#2842,2021-06-26,"Frontend compilers that transpile to JS produce optimised and completely unreadable code, to the point that there was a legal debate about whether distributing compiled JS counts as distributing binary code.",,
7.73175E+17,meowüé∫#2842,2021-06-26,I think the consensus is that it does.,,
2.64024E+17,Eutro#0016,2021-06-27,"If you try hard enough you can read js code

The same applies to binary blobs",,üòÅ (2)
1.30231E+17,sarna#3904,2021-06-27,"crystal is on LLVM -> crystal is an acceptable ruby -> ruby is an acceptable lisp
:meowsmile:",,
1.30231E+17,sarna#3904,2021-06-27,"I wish racket sat on something that generated C or LLVM instructions, would be much easier to get WASM support for example",,
2.66505E+17,notjack#9941,2021-06-27,https://github.com/cisco/ChezScheme/issues/144#issuecomment-278354954,,
1.30231E+17,sarna#3904,2021-06-27,"""that's interesting"" from 4 years ago doesn't look that promising :meowblushcry:",,
2.66505E+17,notjack#9941,2021-06-27,lol yeah I wouldn't hold your breath,,
2.66505E+17,notjack#9941,2021-06-27,"seems more like the kind of thing where a motivated contributor would be welcomed gladly, but absent that it's not happening",,
1.30231E+17,sarna#3904,2021-06-27,> but the architecture is otherwise undocumented.,,
1.30231E+17,sarna#3904,2021-06-27,:meowwarp:,,
1.30231E+17,sarna#3904,2021-06-27,"dang it, I can't even procrastinate reading about it",,
4.1228E+17,xgqt#8370,2021-06-27,"... and then bundle copy of llvm with itself?
And then to build lang you have to build their copy of llvm.
Too many project followed this route",,
4.62028E+17,StephenD#5938,2021-06-27,https://github.com/pmatos/racket-binaryen,,
1.30231E+17,sarna#3904,2021-06-27,"I don't understand - can't you make llvm a dependency? or a C compiler, if you compile to C?",,
4.1228E+17,xgqt#8370,2021-06-27,@sarna you could but projects that depend on llvm tend to rely on specific copy,,
4.1228E+17,xgqt#8370,2021-06-27,wit c compiler its quite a different thing,,
1.30231E+17,sarna#3904,2021-06-27,"I've only ever installed llvm with my package manager if things didn't work, and that copy worked fine",,
1.30231E+17,sarna#3904,2021-06-27,maybe we've been using different langs ü§∑,,
4.1228E+17,xgqt#8370,2021-06-27,https://github.com/rust-lang/rust/blob/master/.gitmodules#L34,,
4.1228E+17,xgqt#8370,2021-06-27,on the c side: not a language but Firefox has to be compiled with clang - developers just stopped supporting gcc,,
4.1228E+17,xgqt#8370,2021-06-27,thought Julia shipped their own llvm - apparently they only download it during build if it is not found,,
1.30231E+17,sarna#3904,2021-06-27,yea rust is big & kinda weird so I'd kinda expect them to fork,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"OpenDylan ships their own LLVM; Don't think this is common-practice though, yeah.",,
4.90866E+17,JOST GRANT#1516,2021-06-27,"I mean maybe not ideal, but there could always be a Racket backend for something like https://github.com/schism-lang/schism -- also intuitively it feels like it wouldn't be too-too hard / impossible to just poop out WASM instructions in Chez itself if there was a real care / focus in this direction.",,
4.90866E+17,JOST GRANT#1516,2021-06-27,Afaik there's still some gotchas in WASM that make it non-ideal for GC-based langs though,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"And for me, I want direct DOM access as-well -- but think these things will hash* themselves out; And as WASM gets more popular there will be more a push generally in this direction",,
4.90866E+17,JOST GRANT#1516,2021-06-27,Think it's more of a social / mainstream-acceptance issue as-much as an engineering one at this point,,
1.30231E+17,sarna#3904,2021-06-27,"it sounds a bit far fetched to me
- schism hasn't seen a commit in a year
- adding another architecture to an optimizing compiler written mostly by one person is no small undertaking",,
7.73175E+17,meowüé∫#2842,2021-06-27,hire the one person,,
1.30231E+17,sarna#3904,2021-06-27,"buy cisco shares, become his employer",,
4.90866E+17,JOST GRANT#1516,2021-06-27,"@sarna I think ultimately it's a chicken-and-egg problem that's made worse by lack of opensource developers / time. I haven't looked at Chez's commit log but I'm sure like 90% of the commits come from Kent himself. Once and/or if WASM gets to 'critical mass' I think there will be more of a rallying call -- maybe saying it wouldn't be ""too-too hard"" is a bit of an understatment though I'll agree. lool",,
4.90866E+17,JOST GRANT#1516,2021-06-27,"Personally, at this point I'd much rather see RISC-V support though.",,
4.90866E+17,JOST GRANT#1516,2021-06-27,"Btw, I've still never understood the ""Ruby is an acceptable Lisp"" argument tbh.",,
4.90866E+17,JOST GRANT#1516,2021-06-27,Like it has (maybe ironically based on what's sold on the tin) functional programming constructs & it has macros?,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"Unless I'm missing something major, LOTS of languages nowadays would fit into that",,
1.81824E+17,Motive#9128,2021-06-27,How is Racket as an embedded language?,,
2.64024E+17,Eutro#0016,2021-06-27,Probably not the best,,
1.81824E+17,Motive#9128,2021-06-27,Good to know.  ARe there any Scheme/lisps that are better at being embedded?,,
7.73175E+17,meowüé∫#2842,2021-06-27,Depends on your resource constraints.,,
2.64024E+17,Eutro#0016,2021-06-27,Fennel probably because it compiles down to Lua,,
1.81824E+17,Motive#9128,2021-06-27,Im not a huge Lua fan,,
7.73175E+17,meowüé∫#2842,2021-06-27,Most Lisps aren't functional languages.,,
7.73175E+17,meowüé∫#2842,2021-06-27,"Most importantly, Ruby is expression-oriented.",,
7.73175E+17,meowüé∫#2842,2021-06-27,It borrows from CL's (and Smalltalk's) object model a lot.,,
7.73175E+17,meowüé∫#2842,2021-06-27,And it has `call/cc`.,,
2.64024E+17,Eutro#0016,2021-06-27,Are you telling me that most lisps are dysfunctional? üòî,,
7.73175E+17,meowüé∫#2842,2021-06-27,I'm not allowed to answer that question as a functional programmer. :meowleft:,,meowleft (1)
2.64024E+17,Eutro#0016,2021-06-27,what makes a language functional?,,
7.73175E+17,meowüé∫#2842,2021-06-27,There's no clear-cut line and this is a very contentious topic.,,
7.73175E+17,meowüé∫#2842,2021-06-27,"We can easily point at languages that everyone knows are functional (OCaml, Scheme, Erlang) or not functional (Fortran, C, Pascal), but the ones in between (JavaScript, Python) are very hazy.",,
8.14743E+16,jimpjorps#0001,2021-06-27,"I think the ""Ruby is an acceptable Lisp"" essay came from a period of time where FP was pretty much relegated to academia and OOP was ascendant, and the fact that a somewhat-popular new language had first-class functions and a way to kinda-sorta fake what macros do felt like a revelation to the tiny handful of people who were still sticking with FP professionally",,
7.73175E+17,meowüé∫#2842,2021-06-27,"Some functional programming features that come to mind are expression-orientedness, eschewing imperativeness in favour of declarative and layered code design, overwhelming preference of immutability, common use of higher-order functions and, common use of recursion and functions over ad hoc language constructs for program flow directives.",,
7.73175E+17,meowüé∫#2842,2021-06-27,"Scheme was possibly the first FP Lisp. Most Common Lisp code is highly mutable and imperative, although there are FP libraries for it nowadays.",,
1.81824E+17,Motive#9128,2021-06-27,I worked at a place that built an Immutable game library based on C# (first prototype was F#).  It was pretty neat.  Im in love with immutability for gameplay systems,,
7.73175E+17,meowüé∫#2842,2021-06-27,Some Scheme implementations (like CHICKEN) even mildly prefer imperative and mutable style.,,
7.73175E+17,meowüé∫#2842,2021-06-27,"Most Schemes embed well, but it depends entirely on your project constraints.",,
7.73175E+17,meowüé∫#2842,2021-06-27,"For example, TinyScheme has a very small resource footprint but it's very limited in its standard library.",,
1.81824E+17,Motive#9128,2021-06-27,"Its for a Roguelike.  I really like Scheme's style of building things, and want to really buckle down and build something non-trivial.  Which for me means a roguelike",,
7.73175E+17,meowüé∫#2842,2021-06-27,Nice,,
7.73175E+17,meowüé∫#2842,2021-06-27,Are you looking for an embedded scripting language in particular?,,
1.81824E+17,Motive#9128,2021-06-27,I want to see how well custom DSLs can make writing gameplay code nicer,,
7.73175E+17,meowüé∫#2842,2021-06-27,What's the host language?,,
1.81824E+17,Motive#9128,2021-06-27,"Not in particular no.  My original plan was to use Racket, but time after time Ive been running into issues with getting racket to run with the libraries I need.  Not all of those are Racket's fault, but they end up making racket unsuitable.  Since I can do a base C++ application trivial (its my day job) I figured I could embed something like Racket",,
1.81824E+17,Motive#9128,2021-06-27,"Host language would be C or C++, whatever works for what Im embedding",,
1.81824E+17,Motive#9128,2021-06-27,"(Technically itll be C++, but its easy enough to expose that to C like functions when necessary)",,
4.66395E+17,oaktownsam#0815,2021-06-27,Chibi is a popular embedded scheme choice.,,
7.73175E+17,meowüé∫#2842,2021-06-27,"Chibi is pretty good, especially as a middle-ground between TinyScheme and Guile.",,
1.81824E+17,Motive#9128,2021-06-27,"Cool, thanks!  I do like how Racket (via Chez if I understand things) will jit some functions",,
7.73175E+17,meowüé∫#2842,2021-06-27,Larger implementations like Guile tend to be used for embedded scripting though.,,
7.73175E+17,meowüé∫#2842,2021-06-27,Racket on Chez is AOT compiled. The previous implementations are the ones that are JIT compiled.,,
1.81824E+17,Motive#9128,2021-06-27,"Oh, gotcha.  Thats even better.  How does it deal with hitting like a require dynamically during runtime?  Does it just compile everything in a module, or?",,
1.81824E+17,Motive#9128,2021-06-27,Or does it read through all source for all requires,,
7.73175E+17,meowüé∫#2842,2021-06-27,That's an excellent question and I have no idea.,,
7.73175E+17,meowüé∫#2842,2021-06-27,I don't know much about Racket's linklet model.,,
7.73175E+17,meowüé∫#2842,2021-06-27,https://docs.racket-lang.org/reference/linklets.html,,
7.73175E+17,meowüé∫#2842,2021-06-27,But you can dynamically require modules normally with `dynamic-require`.,,
1.81824E+17,Motive#9128,2021-06-27,"Ahhh,",,
1.81824E+17,Motive#9128,2021-06-27,"Gotcha.  I _really_ want to use Racket, but I just keep hitting roadblocks and I was getting pretty disheartened.  Mayby Ill try out IronScheme with some C# engine.",,
7.73175E+17,meowüé∫#2842,2021-06-27,Feel free to tell us about your roadblocks. Maybe we can help you.,,
4.66395E+17,oaktownsam#0815,2021-06-27,I think `dynamic-require` would use compiled modules if available but if not it expands and runs directly (interpreted) ?  I'm very much not 100% sure on the second part of that.,,
7.73175E+17,meowüé∫#2842,2021-06-27,I'm not too well-versed about the deeper internals of Racket but there are a few people here who are.,,
7.73175E+17,meowüé∫#2842,2021-06-27,"If push comes to shove, you can always visit the Slack where some of the maintainers hang out.",,
1.81824E+17,Motive#9128,2021-06-27,"For sure, and I really appreciate it.",,
4.66395E+17,oaktownsam#0815,2021-06-27,"Maintainers are here too, but don't talk as much üòÑ",,
4.66395E+17,oaktownsam#0815,2021-06-27,I think they  notice stuff in #help more often,,
1.81824E+17,Motive#9128,2021-06-27,"Like, I build SFML locally, then CSFML died linking.  This isnt Racket's fault, but it means I cant use the racket-csfml",,
1.81824E+17,Motive#9128,2021-06-27,"Someone on here had their own opengl engine.  Tried that out, and the dll wasnt exporting gCreateShader.  So that was dead",,
1.81824E+17,Motive#9128,2021-06-27,etc etc etc,,
1.81824E+17,Motive#9128,2021-06-27,Sometimes I hate computers,,
7.73175E+17,meowüé∫#2842,2021-06-27,mood,,
1.81824E+17,Motive#9128,2021-06-27,"Conceptually racket is exactly what I want.  easy to build DSLs, AOT compilation, still can run dynamic code etc.",,
1.81824E+17,Motive#9128,2021-06-27,"Sadly, no good console abstraction, so thats out.  SDL failed one way.  SFML failed another.",,
1.81824E+17,Motive#9128,2021-06-27,IronScheme though might do the trick,,
7.73175E+17,meowüé∫#2842,2021-06-27,"Yeah, I get you. There's no perfect language, I'm afraid. Racket is my favourite programming language but it has its warts.",,
1.81824E+17,Motive#9128,2021-06-27,And I def dont blame Racket for those issues. thats not fair at all,,
7.73175E+17,meowüé∫#2842,2021-06-27,"Well, the good thing is that none of the major problems have to do with language design, so they can be done away with if you throw enough developer power at it, which is unfortunately scarce for a relatively small FOSS project. üòõ",,
1.81824E+17,Motive#9128,2021-06-27,It is pretty opaque about issues though,,
1.81824E+17,Motive#9128,2021-06-27,"For sure for sure.  I noticed also that a lot of libraries ended being worked on about 2 years ago.  Im not one of those devs that needs active development to use a library, but it does seem they have rotted a bit",,
7.73175E+17,meowüé∫#2842,2021-06-27,"Yeah, that's the problem with one-dev projects.",,
1.81824E+17,Motive#9128,2021-06-27,Chicken and egg issues bootstrapping a language,,
7.73175E+17,meowüé∫#2842,2021-06-27,Languages with larger ecosystems (like Python) offer more developers willing to contribute to and take over undermaintained projects.,,
8.14743E+16,jimpjorps#0001,2021-06-27,there's a lot of interesting packages that are part of someone's dissertation and then they get forgotten when they graduate,,
1.81824E+17,Motive#9128,2021-06-27,Aye,,
7.73175E+17,meowüé∫#2842,2021-06-27,I'm guilty of that too...,,
1.81824E+17,Motive#9128,2021-06-27,üòâ,,
7.73175E+17,meowüé∫#2842,2021-06-27,"In my defence, it was pretty terrible and I'm not proud of it.",,
7.73175E+17,meowüé∫#2842,2021-06-27,:meow:,,
7.73175E+17,meowüé∫#2842,2021-06-27,"(it wasn't Racket though, it was a Hy program)",,
4.66395E+17,oaktownsam#0815,2021-06-27,I'm in a different part of that spectrum where I work on stuff and never make a package.,,
7.73175E+17,meowüé∫#2842,2021-06-27,I do the same with Racket. I'm mostly interested in developing applications rather than libraries.,,
7.73175E+17,meowüé∫#2842,2021-06-27,So I just throw it up on GitHub and call it a day.,,
4.62028E+17,StephenD#5938,2021-06-27,Even small thinks can be packages. And other developers do appreciate them. Even left-pad.,,
4.66395E+17,oaktownsam#0815,2021-06-27,Hot Take: I like small packages with few specific things than someone's custom prelude.,,
1.81824E+17,Motive#9128,2021-06-27,"I feel racket and games are a good match.  Games need lots of DSLs, server control, ai, narration, UI, etc.  Games lend themselves well to iterative development.  Parts of the game should be immutable, parts should not be.  AOT compilation of large portions is helpful, and dropping to C is nice of course.",,
1.81824E+17,Motive#9128,2021-06-27,"I just need to get it working, arrgh.",,
1.81824E+17,Motive#9128,2021-06-27,Which is why I thought maybe embedding it would be good,,
1.81824E+17,Motive#9128,2021-06-27,Often we'll just write parsers for the DSLs.  We had a joke on one project that we wouldnt ship without each person writing one.  Which basically ended up true,,
4.62028E+17,StephenD#5938,2021-06-27,I think you are right about games but I lack the skill to do the integration required with the popular game engines. (Unity? Unreal? are these still/ever popular),,
4.62028E+17,StephenD#5938,2021-06-27,Codespells is interesting though.,,
1.81824E+17,Motive#9128,2021-06-27,Unreal currently is my day job üôÇ,,üëç (1)
1.81824E+17,Motive#9128,2021-06-27,I wonder if itd be possible to make debugging the Racket seamless,,
1.81824E+17,Motive#9128,2021-06-27,Most devs arent going to use something that wont allow them to step into it,,
1.81824E+17,Motive#9128,2021-06-27,"On the other hand, Visual studio provides pretty powerful debugger hooks.",,
1.81824E+17,Motive#9128,2021-06-27,Oh interesting.  Hadnt seen Codespells.  Looks like a sort of programmable spell system using something lispy on the backend?,,
4.62028E+17,StephenD#5938,2021-06-27,I‚Äôm assuming embedding racket in the larger c prog is the way to go but I‚Äôm out of my depth. https://docs.racket-lang.org/inside/cs-embedding.html,,
4.62028E+17,StephenD#5938,2021-06-27,Yes I think so. I think the dev is @stephen.r.foster,,
1.81824E+17,Motive#9128,2021-06-27,"So, unreal has a full header parser for ALL their objects.",,
1.81824E+17,Motive#9128,2021-06-27,Which means you could probably present all that data to racket,,
1.81824E+17,Motive#9128,2021-06-27,Hmmmmmm.,,
1.81824E+17,Motive#9128,2021-06-27,....  I need to sleep on that for sure.,,
4.62028E+17,StephenD#5938,2021-06-27,Yes me too. ü•±üò¥üí§,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"What I remember hearing from that article; Was that Ruby was ""more functional than Lisp"" or something to that effect. That being said Scheme is pretty functional and CL isn't that OO by default (CLOS is ""tacked on ... a nice tack on, and a semi-official tack on, but still""). OpenDylan is actually a sorta-Lisp with a CLOS-like OO that's deeply integrated.",,
4.90866E+17,JOST GRANT#1516,2021-06-27,Also I missed a LOT of this convo trying to deal with this ant problem. looool,,
7.73175E+17,meowüé∫#2842,2021-06-27,OO isn't the opposite of FP though,,
7.73175E+17,meowüé∫#2842,2021-06-27,Most CL code is neither,,
4.90866E+17,JOST GRANT#1516,2021-06-27,I'm a pretty big fan of Scala; So it's my hope that I'm not coming off as-if I believe these are mutually exclusive. lool I think you really have to go out of your way to be purist fp or oo in the first-place and things get real funky real quick if taken to their logical extremes. Complimentarism is almost vital in actually being productive in an ecosystem imo,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"Well, unless you're composed  by a majoritarian of die-hards I guess",,
4.90866E+17,JOST GRANT#1516,2021-06-27,Don't know enough about Haskell; But this is the feel I get as a complete outsider,,
1.81824E+17,Motive#9128,2021-06-27,I really want to give Haskell a try one of these days.  I believe its 97th on my list of projects though,,
4.90866E+17,JOST GRANT#1516,2021-06-27,@Motive Idris is in the same orbit and pretty neat.,,
4.90866E+17,JOST GRANT#1516,2021-06-27,Evidently they have a discord-server too,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"Also yeah, it's pretty close to my ideal for gamedev but still some areas I'm concerned about ... namely how the gc performs under relative load (like are we in traditional  Java's ""stop the world"" territory -- before ZGC?) & how dynamic things can actually get.",,
4.90866E+17,JOST GRANT#1516,2021-06-27,Relatively hopeful on the latter point after being shown https://github.com/tonyg/racket-reloadable the isn't 100% what I want; And Racket just isn't going to get there ... but it's something.,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"Ultimately CL is probably ""better"" for what I 'want' (especially on the dynamic / late-binding / runtime / live-update front loool); But the draw of dialecting  and/or ""language driven design"" especially in the realm of a player-facing DSL is a killer feature imo",,
6.46114E+17,samth#3420,2021-06-27,@notjack @sarna There's a bunch more internals documentation now in the Racket fork; see https://github.com/racket/ChezScheme/blob/master/IMPLEMENTATION.md,,
1.81824E+17,Motive#9128,2021-06-27,chibi-scheme is the only embeddable scheme that has a MIT style license.,,
1.81824E+17,Motive#9128,2021-06-27,üò¶,,
1.81824E+17,Motive#9128,2021-06-27,"I saw the Idris folks build a networking system where writing the coder/decoder basically built a type system and it was impossible to not have them match.  Thats pretty damn cool.  Idris is def up there and interesting.  

Ive also been using types super heavily.  My C++ voxel system for example has different types for each different voxel system, and each voxel system has 4 types for the system, World, GlobalVoxel, ChunkVoxel, LocalVoxel.",,
1.81824E+17,Motive#9128,2021-06-27,Made writing the manipulation code almost free because I couldnt put the wrong type in,,
1.81824E+17,Motive#9128,2021-06-27,I want to try out heavy typeclass use to build gameplay code and see if anything interesting falls out,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"> My C++ voxel system 
You mean Racket? ;^)

((I non-ironically do want to make a voxel-engine / sandbox game in Racket))",,
4.90866E+17,JOST GRANT#1516,2021-06-27,Also how type-heavy can you actually get in C++; Haven't looked into it much but I assume it's type-system isn't even close to something more fp by default?,,
1.81824E+17,Motive#9128,2021-06-27,"I find C++ very nice.  Combined with templates you can do some very interesting things based on types, and keep their memory layout nice at the same time.  

Im looking at how to build nice FP style immutable code with it.  You can do copy-on-write style optimizations pretty easily too",,
1.81824E+17,Motive#9128,2021-06-27,I just wish C++ had good mixins,,
1.81824E+17,Motive#9128,2021-06-27,"Scala has a really solid way to build them.  ive tried to duplicate it in C++, but havent been able to",,
1.81824E+17,Motive#9128,2021-06-27,What I really want is for data for the game to compile down into fast code.  I havent yet built that sort of system yet,,
1.81824E+17,Motive#9128,2021-06-27,*fast and safe code,,
4.90866E+17,JOST GRANT#1516,2021-06-27,I wish Scala had a better gamedev scene; There's a decent 2D web-based option nowadays -- but besides that you have like interoping with JMonkey and/or libgdx and that's about it (or I guess build something custom from lwjgl),,
1.81824E+17,Motive#9128,2021-06-27,Theres even scala native,,
1.81824E+17,Motive#9128,2021-06-27,The garbage collector is garbage though,,
4.90866E+17,JOST GRANT#1516,2021-06-27,@Motive Not sure how far that's tracking upstream though; Wonder if it's even building on Scala3 yet,,
1.81824E+17,Motive#9128,2021-06-27,Another reason C++ wins in games for me,,
4.90866E+17,JOST GRANT#1516,2021-06-27,@Motive ZGC tho lol,,
1.81824E+17,Motive#9128,2021-06-27,"Yeah, ZGC was after when I was heavily working with scala and games",,
1.81824E+17,Motive#9128,2021-06-27,"If its truly zero cost, then thats pretty awesome",,
4.90866E+17,JOST GRANT#1516,2021-06-27,"There was a few months where I was seriously considering trying to go near all-in on Scala before I reverted back to ""old habits"" in Lisp. Not a fan at all of Java and ended up having to touch it a lot more than I was comfortable with in that ecosystem.",,
1.81824E+17,Motive#9128,2021-06-27,I really like Scala.  And C++.,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"Well it's never going to be actually ""zero cost"" but I think a 500 MICROsecond max is solid beyond solid / near-if-not-revolutionary",,
1.81824E+17,Motive#9128,2021-06-27,.5ms is fine,,
1.81824E+17,Motive#9128,2021-06-27,"c# less so, but pragmatically C# is nice",,
1.81824E+17,Motive#9128,2021-06-27,Course c# has a trash GC,,
4.90866E+17,JOST GRANT#1516,2021-06-27,@Motive I want to like C++ but (and I've said it before ...) I'm a syntax-snob and I can't fully train myself out of it.,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"@Motive There's always ""Beef Lang"".",,
1.81824E+17,Motive#9128,2021-06-27,"Yeah, I like the power I can do with templates.",,
4.90866E+17,JOST GRANT#1516,2021-06-27,But also in C# you have the option to avoid calling that GC all the time with structs,,
4.90866E+17,JOST GRANT#1516,2021-06-27,Wonder if Racket is passable here,,
1.81824E+17,Motive#9128,2021-06-27,"Yeah, but using small portions of a language in order to get around a major problem to me seems like a waste of time",,
1.81824E+17,Motive#9128,2021-06-27,"""If I fight the language and dont use it, it doesnt fail"" doesnt seem fun or tenable.",,
1.81824E+17,Motive#9128,2021-06-27,Obvioushly there are different scales to that though,,
1.81824E+17,Motive#9128,2021-06-27,"yeah, Im curious about that for Racket also.",,
1.81824E+17,Motive#9128,2021-06-27,But I feel like there might be ways to build tools in racket that make working around the issues in it nicer,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"Also I'm sure an ultra-low-latency GC for C# will come with time; There's already a large , established, contingency for gamedev in that community obviously",,
1.81824E+17,Motive#9128,2021-06-27,"Yeah, Ill be super happy when that happens.  All that said, I still like templates over generics though for what I can do with them",,
1.81824E+17,Motive#9128,2021-06-27,Now Im sort of excited to try out the ZFC with Scala,,
1.81824E+17,Motive#9128,2021-06-27,*ZGC,,
4.90866E+17,JOST GRANT#1516,2021-06-27,"I asked the other day, don't think I got an answer; But I was wondering if the incremental gc is back in Racket for the Chez backend?  

And I mentioned it before as-well, but ZGC has made me more optimistic than EVER about using GCs in domains you wouldn't expect to see them -- namely systems-programming / soft realtime-systems / engine-code , etc, etc.",,
1.81824E+17,Motive#9128,2021-06-27,For sure.  That was the 1 (one) thing I liked about go,,
2.17712E+17,gomma#4017,2021-06-27,whats ZGC,,
1.81824E+17,Motive#9128,2021-06-27,https://www.baeldung.com/jvm-zgc-garbage-collector,,
1.81824E+17,Motive#9128,2021-06-27,"My only issue with Java is their horrible reflection system.  Its really too bad.  Scala tried to fix it, but ended up having a bizarre system that they switched multiple times.",,
6.46114E+17,samth#3420,2021-06-27,"@JOST GRANT yes, incremental gc does work on Racket CS",,
4.90866E+17,JOST GRANT#1516,2021-06-27,"A new ""ultra low-latency"" garbage-collector for Java; It's been able to get its pause-times in a worst-case scenario to 1/2 a millisecond with an average of 50ms",,
1.81824E+17,Motive#9128,2021-06-27,SHoudl that be an average of 50us?,,
4.90866E+17,JOST GRANT#1516,2021-06-27,YUP. lool,,
1.81824E+17,Motive#9128,2021-06-27,üôÇ,,
1.81824E+17,Motive#9128,2021-06-27,Didnt want to sell it short,,
4.90866E+17,JOST GRANT#1516,2021-06-27,Sorry been dealing with aaaaannnnnts for like 4 hours now and am getting tired / sloppy. lol,,
4.90866E+17,JOST GRANT#1516,2021-06-27,Good to hear; Are there any benchmarks outthere? Kinda curious how it performs relative to other langs.,,
4.66395E+17,oaktownsam#0815,2021-06-27,Oooh good to know!,,
6.46114E+17,samth#3420,2021-06-27,@JOST GRANT see http://prl.ccs.neu.edu/blog/2016/05/24/measuring-gc-latencies-in-haskell-ocaml-racket/ for one example; source here: https://gitlab.com/gasche/gc-latency-experiment/tree/master,,
6.46114E+17,samth#3420,2021-06-27,"that's somewhat old, would be interesting to see how it does on Racket CS",,
4.90866E+17,JOST GRANT#1516,2021-06-27,"Skimming now; Really interesting stuff. Also it links to a cool package , by a familiar name https://github.com/samth/gcstats/ looool :^)",,
1.81824E+17,Motive#9128,2021-06-27,If you have any voxel questions let me know.  Also the Voxel discord server is very good and helpful.,,
4.90866E+17,JOST GRANT#1516,2021-06-27,Oh didn't even think about that being a thing looool; Link to that?,,
1.81824E+17,Motive#9128,2021-06-27,Ill put it in Off-topic.,,üíØ (1)
1.30231E+17,sarna#3904,2021-06-28,"it's slower (or at least the pauses are longer) on racket CS than BC, I posted about this on slack",,
1.30231E+17,sarna#3904,2021-06-28,"neat, thanks for the link! so adding a backend would be ""just"" adding a backend file",,
1.30231E+17,sarna#3904,2021-06-28,the x86_64 one is 3k lines ü§î,,
6.46114E+17,samth#3420,2021-06-28,@sarna can you refresh my memory about what the results were (or point me to the slack message)?,,
1.30231E+17,sarna#3904,2021-06-28,"I tried looking for the slack message, but it was already gone.. what I remember:
> the worst-case time on my machine is now only 38ms ‚Äî the pauses during the steady state are unchanged, around 22ms
that's the BC test results
for CS I had consistent ~100ms pauses throughout the test",,
1.30231E+17,sarna#3904,2021-06-28,I remember MFlatt responded that the Chez GC isn't *really* generational (or not really incremental? one of these) and that's why,,
1.30231E+17,sarna#3904,2021-06-28,& that there are no plans to improve this at the moment,,
1.30231E+17,sarna#3904,2021-06-28,"the reply didn't work, here :meowsmile:",,
6.46114E+17,samth#3420,2021-06-28,must be not-really incremental; it's definitely really generational,,
1.30231E+17,sarna#3904,2021-06-28,good to know!,,
1.30231E+17,sarna#3904,2021-06-28,I wonder how useful this benchmark is for general real world usage - they wrote the benchmark having their specific application in mind,,
4.62028E+17,StephenD#5938,2021-06-29,"Syntax Parse Bee 2021
Write a macro with Racket this summer! Win stickers!

It's like a Quilting Bee, but for syntax parse macros!

In this case the 'quilt' is a patchwork of syntax-parse macros.

https://github.com/syntax-objects/Summer2021/blob/master/ANNOUNCEMENT.md",https://cdn.discordapp.com/attachments/618895179343986688/859356815857811456/image0.jpg,
2.14881E+17,Moinate#6061,2021-06-29,"Hilarious, looks great. I'm sure you'll get some good ones.",,üò∫ (1)
2.14881E+17,Moinate#6061,2021-06-29,"@StephenD Is there a way you would like to receive ""koans"" as well? I have many small things I struggled with that would help others to understand, but they're not really macros that do something. Of course these are also in the officials docs, if someone can find them...  Example: https://pastebin.com/Xu3MyEs4",,
4.62028E+17,StephenD#5938,2021-06-29,"I have to admit I'm not sure, maybe with some explanatory text?  Check https://docs.racket-lang.org/syntax-parse-example to see if you think it fits in with the collection, and if you think it works submit away!
'This package is a collection of useful and/or illustrative macros written using the syntax/parse library.'",,
2.14881E+17,Moinate#6061,2021-06-29,"Yeah, doesn't really sound like it, but the problem with these ""macro examples"" collections is that the complexity explodes pretty fast for a beginner.",,
2.14881E+17,Moinate#6061,2021-06-29,(which i consider myself),,
2.14881E+17,Moinate#6061,2021-06-29,"Example: the key ""innovation"" in `multi-check-true` is really knowing about the existence of `with-check-info*` and friends, so not really ""macro"" knowledge at all (IMO)",,
4.62028E+17,StephenD#5938,2021-06-29,PR‚Äôs to the docs are always appreciated if that is a better home for it ? (I‚Äôm also a beginner),,
3.58051E+17,hazel#0271,2021-06-29,today's question of the day: at what point does a sufficiently complicated Racket program become a DSL,,
4.90866E+17,JOST GRANT#1516,2021-06-29,When a non-trivial part of it is driven by a defined and/or defining custom-syntax?,,
3.58051E+17,hazel#0271,2021-06-29,probably,,
6.87833E+17,grey#8674,2021-06-29,"Even in languages without macros, the line between a sophisticated framework and an embedded DSL can get blurry. I‚Äôm not an authority on the subject, but my rule of thumb is that you can start calling it a DSL if you can conceptually separate it from the host language and it still makes sense as a standalone entity.",,
4.90866E+17,JOST GRANT#1516,2021-06-29,_wonders how much of Racket could be moved from C to Scheme / Racket 'proper' now since the Chez backend has become the default._,,
4.90866E+17,JOST GRANT#1516,2021-06-29,"I was amazed to see how much of Chez itself is in Scheme; I guess if you're writing directly to an architecture there's no effective IR so maybe shouldn't be ""that shocked"".",,
4.90866E+17,JOST GRANT#1516,2021-06-29,"I guess it's that my expectation of performance ""in / of pure-Scheme"" was it's going to be ""multiple magnitudes"" slower than C -- so really didn't think it was viable before but am a lot more optimistic generally nowadays (still probably mostly powered by ignorance but still. loool)",,
7.72228E+17,hyena#0469,2021-06-29,Does anyone have opinions on the best way to write macros in Racket?,,
7.72228E+17,hyena#0469,2021-06-29,"What I mean is, I keep getting confused by the multiplicity of different constructs that have evolved over time like `define-syntax` and `define-syntax-rule` and others",,
7.72228E+17,hyena#0469,2021-06-29,"I'd like someone to tell me with authority, to just focus on one thing to write macros in the general case.",,
3.58051E+17,hazel#0271,2021-06-29,I usually try `define-syntax-rule` and if that doesn't work I use `syntax-parse`,,
7.72228E+17,hyena#0469,2021-06-29,"To add to that... in older guides like Fear of Macros, lambdas are used to transform syntax objects, but in newer ones, syntax-parse is used",,
2.14881E+17,Moinate#6061,2021-06-29,"I'm not an authority, but I've tried to learn just like you. I write `syntax-parser` always, now. `syntax-parse` would be the same. I agree that the `define-syntax-parse-rule` looks nice but I decided I was staring at too many options so I simplified by 100% using syntax-parse.",,
2.14881E+17,Moinate#6061,2021-06-29,"In particular I got confused several times about whether to write `(define-syntax (name stx) ...)` or `(define-syntax name ...)` and said to myself why bother with it, just pick one and stick with it. As I recall the error messages did not clearly point to my mistake.",,üëç (1)
3.58051E+17,hazel#0271,2021-06-29,"i pretty much always do
```scheme
(define-syntax (whatever stx)
  (syntax-parse stx
    ...))``` nowadays @hyena",,
3.58051E+17,hazel#0271,2021-06-29,"the main reason for using syntax-parse is that with syntax-parse you can specify the types of things that a macro should be getting as input, so you get better error messages",,üëç (1)
3.58051E+17,hazel#0271,2021-06-29,which is why whenever I'm writing a library and using something that's exposed to a user it's syntax-parse,,
3.58051E+17,hazel#0271,2021-06-29,"otherwise I do `define-syntax-rule` *first*, and then if it becomes too complex (like having to match multiple patterns), I use syntax-parse",,
4.66395E+17,oaktownsam#0815,2021-06-30,`define-syntax-parse-rule` gives you  most the power of `syntax-parse` and is fairly compatible to `define-syntax-rule`,,
3.58051E+17,hazel#0271,2021-06-30,"s p e a k i n g of syntax-parse, #help",,
6.87833E+17,grey#8674,2021-06-30,"The different macro tools, including `syntax-parse`, ultimately work like the lambdas shown in *Fear of Macros*. Indeed, `syntax-parse` is just a fancy macro for making macros.",,
6.87833E+17,grey#8674,2021-06-30,There‚Äôs just a lot of abstraction between the simple lambdas and `syntax-parse`.,,
4.34432E+17,clc_xce#9929,2021-06-30,is there somewhere a template for a hierarchical build with Racket? I'd like to build standalone executables,,
4.34432E+17,clc_xce#9929,2021-06-30,"I've tried to do it manually with `raco make/exe` but it doesn't really yield what I want, specifically, how to integrate existing C code with the FFI",,
4.66395E+17,oaktownsam#0815,2021-06-30,"I don't have a template, but what you may want to take a look at is `define-runtime-path` which can communicate to the executable creator the existence of your so
https://docs.racket-lang.org/reference/Filesystem.html?#%28form._%28%28lib._racket%2Fruntime-path..rkt%29._define-runtime-path%29%29",,
1.45564E+17,yrashk#3148,2021-06-30,"is there a way to remove a locally installed packaged? I do `raco pkg remove` but I can still `require` it from racket. As in, a locally developed package I installed by running `raco pkg install` inside (installed as a link).

I figured it out. Runnign `raco pkg remove` didn't do it but `raco pkg remove <PACKAGE NAME>` did. It's a little inconsistent with `raco pkg install` behaviour, I suppose?",,
1.45564E+17,yrashk#3148,2021-06-30,"https://mirror.racket-lang.org/ is down, right?",,
6.88091E+17,mflatt#6350,2021-06-30,"Yes. I've switched the default download mirror at download.racket-lang.org, for now. (I know that's no help if ""mirror.racket-lang.org"" is in a script, though.)",,
1.45564E+17,yrashk#3148,2021-06-30,"Yeah, it made https://github.com/Bogdanp/setup-racket not functional üôÇ",,
1.45564E+17,yrashk#3148,2021-06-30,"@mflatt you said ""for now"" -- does this mean there will be more changes?",,
6.88091E+17,mflatt#6350,2021-06-30,"NEU will be back in a few days, and I'll switch the web site back. But the Utah mirror should keep working even after that.",,
1.45564E+17,yrashk#3148,2021-06-30,"Oh I see, so it'll work again. So `download` will stay or will it be gone?",,
6.88091E+17,mflatt#6350,2021-06-30,"I'm not sure I'm answering the right question, but: download.racket-lang.org is S3-hosted, so it generally doesn't go down. It just points to mirror sites for dowloading, though. I'll switch download.racket-lang.org back to pointing at mirror.racket-lang.org when NEU has returned.",,
1.45564E+17,yrashk#3148,2021-06-30,"Got it, thank you! I am unaware of details pertaining to racket's infrastructure -- just trying to see if I should send a PR to Bogdanp/setup-racket or not üôÇ",,
1.45564E+17,yrashk#3148,2021-06-30,"@mflatt any reason why `download` redirects to `http` (downgrading to HTTP), which in turn redirects to `https` again? Is it intentional?",,
1.45564E+17,yrashk#3148,2021-06-30,"The reason I am asking is because the aforementioned installation script fails with this (when adjusted to use `download`):

```
Installing Racket 8.1 (BC, full, x64)...
  installerURL = https://download.racket-lang.org/installers/8.1/racket-8.1-x86_64-linux.sh
Error: Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons.
```

(I can hot-patch it to allow downgrades, but that's... less than perfect?)",,
1.45564E+17,yrashk#3148,2021-06-30,"```
$ http https://download.racket-lang.org/installers/8.1/racket-8.1-x86_64-linux.sh

HTTP/1.1 302 Moved Temporarily
...
Location: http://www.cs.utah.edu/plt/installers/8.1/racket-8.1-x86_64-linux.sh
```

but then 

```
$ http http://www.cs.utah.edu/plt/installers/8.1/racket-8.1-x86_64-linux.sh

HTTP/1.1 301 Moved Permanently
...
Location: https://www.cs.utah.edu/plt/installers/8.1/racket-8.1-x86_64-linux.sh
```",,
6.88091E+17,mflatt#6350,2021-06-30,"Ok, I remember how this works, now. You can use download.racket-lang.org to download, but that redirects to the main mirror. The redirect doesn't set the protocol, though, and because HTTPS is implemented by a Cloudflare proxy, the S3 redirect sees HTTP. I should be able to update to use HTTPS for the redirect.",,
6.88091E+17,mflatt#6350,2021-06-30,"@yrashk Should be fixed, now.",,
1.45564E+17,yrashk#3148,2021-06-30,thank you so much!,,
6.88091E+17,mflatt#6350,2021-06-30,"I had forgotten about the download.racket-lang.org redirect to the default mirror, so thanks for reminding me about that. (I had started recreating that at a different hostname!)",,
7.43838E+17,nadeemabdulhamid#7576,2021-06-30,How often does the pkgs.racket-lang.org build packages? I uploaded a new package last night and still waiting to see if it builds.,,
3.58051E+17,hazel#0271,2021-06-30,think it's something like every 8 hours,,
6.46114E+17,samth#3420,2021-06-30,"@nadeemabdulhamid the cycle time is about 8 hours, so it should be some about between 8 and 16 hours after you update to see the results",,
2.14881E+17,Moinate#6061,2021-06-30,"Mind officially blown by depth of ""obscure"" parts of racket. https://docs.racket-lang.org/syntax/Experimental.html#%28form._%28%28lib._syntax%2Fparse%2Fexperimental%2Ftemplate..rkt%29._define-template-metafunction%29%29",,
4.34432E+17,clc_xce#9929,2021-07-01,"Thanks, I'll check it out",,
3.58051E+17,hazel#0271,2021-07-01,"how do function contracts work? like, how do you know that `(-> boolean? boolean?)` takes a boolean and returns a boolean without, like, reifying the function body etc",,
3.58051E+17,hazel#0271,2021-07-01,like is the entire function evaluated and then the return checked for each input,,
6.46114E+17,samth#3420,2021-07-01,Yes,,
6.46114E+17,samth#3420,2021-07-01,You can read Findler and Felleisen 2002 for the basics,,
8.14743E+16,jimpjorps#0001,2021-07-01,"my understanding of it is that it's a wrapper that monitors the input and output every time the function's evaluated, since the nature of higher-order functions precludes determining whether the contract's valid statically",,
2.14881E+17,Moinate#6061,2021-07-01,"one place i have been burned by contracts, probably not an issuse for you
in a recursive function call, the contract on inputs is not checked",,
4.66395E+17,oaktownsam#0815,2021-07-01,"You mean code like this?
```scheme
(require racket/contract)
(provide (contract-out [factorial (-> real? real?)]))
(define (factorial n [acc 1])
  (if (zero? n) 
      acc 
      (factorial (sub1 n) (* acc n))))
```",,
3.58051E+17,hazel#0271,2021-07-01,would `define/contract` make it check the input contract when recurring?,,
4.66395E+17,oaktownsam#0815,2021-07-01,In that case yes.,,
4.66395E+17,oaktownsam#0815,2021-07-01,But the performance could be horrible,,
3.58051E+17,hazel#0271,2021-07-01,yes of course,,
3.58051E+17,hazel#0271,2021-07-01,tbh at a certain point just use typed racket,,
3.5323E+17,Alex Knauth#4895,2021-07-01,"No `define/contract` doesn't make it check the input contract when recurring, but `define` + `contract` would, or `define` + `with-contract` (which I find simpler to think about) also would",,‚¨ÜÔ∏è (1)
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-01,"I dig contracts, but tbh I wish there was more options for tuning them",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-01,intuitively I feel something like cond-expand and a way to define feature via command line (akin to -D thing in gcc) would almost solve it,,
5.24323E+17,Ben Kenobi#5683,2021-07-01,"Type-checking (`typed/racket`) would require what I think you're talking about here; contracts, as others have mentioned, are essentially runtime checks (I think)",,
3.58051E+17,hazel#0271,2021-07-01,yep,,
4.66395E+17,oaktownsam#0815,2021-07-01,THIS,,
4.66395E+17,oaktownsam#0815,2021-07-01,Oh I thought `define/contract` expanded to something like `define` + `contract`.,,
3.5323E+17,Alex Knauth#4895,2021-07-01,Well it's more complicated than that because of where the Contract Boundary goes,,
4.66395E+17,oaktownsam#0815,2021-07-01,Of course,,
2.64024E+17,Eutro#0016,2021-07-01,Does typed racket have full inference like Haskell or do you have to annotate most types?,,
3.5323E+17,Alex Knauth#4895,2021-07-01,"You often have to annotate function inputs, and struct fields, but not everything",,
6.87833E+17,grey#8674,2021-07-01,"Note that full type inference requires a significant loss of expressive power. GHC Haskell has abandoned full inference, in favor of being able to write more useful programs.",,
2.64024E+17,Eutro#0016,2021-07-01,Oh?,,
3.58051E+17,hazel#0271,2021-07-01,"haskell 2010 has principal typing (meaning that if you have a term, there is one ""best type"" for it, loosely)
but if you enable ghc extensions they will disobey that",,
3.58051E+17,hazel#0271,2021-07-01,the idea is that people kinda backed down on full inference after they realized that annotating types is actually a good thing,,plusone (1)
3.58051E+17,hazel#0271,2021-07-01,most obvious principal typing breakage in my mind is GADTs,,plusone (1)
3.58051E+17,hazel#0271,2021-07-01,"I mean personally I know Haskell, I don't know Haskell 98 extensions",,
3.58051E+17,hazel#0271,2021-07-01,but yeah,,
6.87833E+17,grey#8674,2021-07-01,Higher-rank polymorphism also breaks principle typing.,,
3.58051E+17,hazel#0271,2021-07-01,what I've learned is that if you have GADTs on and you get some incomprehensible error message it means to add more type annotations,,üòÜ (1)
3.58051E+17,hazel#0271,2021-07-01,"this is why I like Racket. the errors usually make sense.

usually.",,
3.58051E+17,hazel#0271,2021-07-01,*usually.*,,
3.58051E+17,hazel#0271,2021-07-01,`instantiate-linklet:`,,
2.75501E+17,Plane#0324,2021-07-01,i think there has been ongoing work to improve error messages in racket,,
2.64024E+17,Eutro#0016,2021-07-01,C++ template errors üòå,,
3.58051E+17,hazel#0271,2021-07-01,LiquidHaskell's error messages are also super bad,,
2.75501E+17,Plane#0324,2021-07-01,i don't miss the  `stlfilt` days lol,,
4.90866E+17,JOST GRANT#1516,2021-07-01,Finally been playing with my Pinephone; Now really wanting Racket on ARM. looool,,üíØ (1)
4.90866E+17,JOST GRANT#1516,2021-07-01,Wonder how well 'gui' would work with touch devices,,
4.66395E+17,oaktownsam#0815,2021-07-01,Racket runs on ARM but only certain ones,,
6.46114E+17,samth#3420,2021-07-01,I would expect a modern phone to be a processor that Racket can run on,,
4.66395E+17,oaktownsam#0815,2021-07-01,Yeah I don't know the specs on the pinephone,,
3.58051E+17,hazel#0271,2021-07-02,the pinephone is just horribly slow in my experience,,
4.90866E+17,JOST GRANT#1516,2021-07-02,"@hazel Well tbf, they're trying to work backwards from running on desktop/laptop-tier hardware to running something that's basically a glorified SBC so it works better than I expect ""all things considered"". And you're running it on 150-200usd novelty hardware; Not anything close to top-of-the-line. But really something like awesomewm x and/or + imgui based 'apps' I think would work ""good enough"".",,
4.90866E+17,JOST GRANT#1516,2021-07-02,"But I'd take slow for configurable tbh; If I had to pick one. Because I don't care about it as a daily-driver, it's a tinker device for the forseeable furture (and/or until if & hopefully when it gets double or triple the specs it has now).",,
4.90866E+17,JOST GRANT#1516,2021-07-02,"Yeah, I think it's ARM64 iirc; Which I don't think Chez supports at all.",,
4.90866E+17,JOST GRANT#1516,2021-07-02,"Well Pinephone isn't certainly in the top-1/3rd of phones spec wise; But yeah, I'd expect it to be ""good enough"". I've seen a fair bit of Python apps running somefactor of acceptably on it.",,
6.88091E+17,mflatt#6350,2021-07-02,The Racket branch of Chez Scheme runs on ARM64.,,üíØ (1)
4.66395E+17,oaktownsam#0815,2021-07-02,Yeah I have some RPi4 projects using Racket.,,üíØ (1)
4.62028E+17,StephenD#5938,2021-07-02,"Racket Users Video Meetup (Saturday, July 3 at 20.00 UTC)
Timezone Converter https://www.timeanddate.com/worldclock/converter.html?iso=20210703T200000&p1=136&p2=204&p3=179&p4=224
Gather Town Room https://gather.town/app/wH1EDG3McffLjrs0/racket-users",,
3.58051E+17,hazel#0271,2021-07-02,"out of curiosity, what is the first appearance of standard-fish",,
7.73175E+17,meowüé∫#2842,2021-07-02,"I think @StephenD came up with it, so let's ask him.",,
6.46114E+17,samth#3420,2021-07-02,"@meowüé∫  @hazel `standard-fish` has been around quite a while, but I think Stephen came up with the idea of naming the contest after it",,
7.73175E+17,meowüé∫#2842,2021-07-02,"Oh, you're right.",,
7.73175E+17,meowüé∫#2842,2021-07-02,I'm guessing `pict`'s `standard-fish` has been around since `pict` itself.,,
6.46114E+17,samth#3420,2021-07-02,"here's the creation of `standard-fish`, in 2003: https://github.com/racket/old-plt/commit/ecdeee6e8f8c635ce0d8616809efa6fc4bdb7448",,
7.73175E+17,meowüé∫#2842,2021-07-02,"Ooh, I didn't know about the `old-plt` repo.",,
7.73175E+17,meowüé∫#2842,2021-07-02,Good find.,,
6.46114E+17,samth#3420,2021-07-02,"@meowüé∫ the very old parts of it are somewhat disorganized, since not everything became version-controlled at once",,
6.46114E+17,samth#3420,2021-07-02,"and i wouldn't rely on running the code because we had some ""creative"" version control practices through the whole time we used CVS (which is all of that repo)",,
7.73175E+17,meowüé∫#2842,2021-07-02,Makes sense.,,
4.66395E+17,oaktownsam#0815,2021-07-03,üëª CVS,,
4.66395E+17,oaktownsam#0815,2021-07-03,The only thing scarier than CVS is RCS,,
7.73175E+17,meowüé∫#2842,2021-07-03,"Is ""a zip file with a date in its name on Dropbox"" not scarier?",,
2.75501E+17,Plane#0324,2021-07-03,i have used rcs and cvs professionally lol,,
3.58051E+17,hazel#0271,2021-07-03,"FTP, .tar.bz2",,
2.75501E+17,Plane#0324,2021-07-03,but i've been around for a little while so that's probably not surprising to anyone else who's been around for a while,,
3.58051E+17,hazel#0271,2021-07-03,remember bzip2,,
3.58051E+17,hazel#0271,2021-07-03,man.,,
7.73175E+17,meowüé∫#2842,2021-07-03,I thought bzip2 was still used.,,
2.75501E+17,Plane#0324,2021-07-03,i think it is,,
7.73175E+17,meowüé∫#2842,2021-07-03,Did LZMA replace it?,,
3.58051E+17,hazel#0271,2021-07-03,I haven't seen bz2 since like 2013,,
7.73175E+17,meowüé∫#2842,2021-07-03,Huh,,
7.73175E+17,meowüé∫#2842,2021-07-03,Maybe I poke around in old software too often.,,
3.58051E+17,hazel#0271,2021-07-03,"only really see gzip, xz, sometimes zstd",,
7.73175E+17,meowüé∫#2842,2021-07-03,I think the worst compression format I had to deal with was .lzh,,
2.75501E+17,Plane#0324,2021-07-03,i still think of bzip2 as that new thing that people started using instead of gzip üëÄ,,ü§£ (1)
7.73175E+17,meowüé∫#2842,2021-07-03,Hah,,
2.75501E+17,Plane#0324,2021-07-03,https://www.kernel.org/happy-new-year-and-good-bye-bzip2.html,,
2.75501E+17,Plane#0324,2021-07-03,i guess this was the turning point,,
7.73175E+17,meowüé∫#2842,2021-07-03,Oh nice,,
3.58051E+17,hazel#0271,2021-07-03,I usually use xz,,
7.73175E+17,meowüé∫#2842,2021-07-03,Yeah same. Either gzip or xz.,,
2.75501E+17,Plane#0324,2021-07-03,i haven't updated my muscle memory,,
7.73175E+17,meowüé∫#2842,2021-07-03,Some others like lzop or zstd look enticing but I fear they might be too foreign for people on the receiving end.,,
2.75501E+17,Plane#0324,2021-07-03,`tar Jcvf` has a shift in it,,
7.73175E+17,meowüé∫#2842,2021-07-03,"Actually, I don't even know if tar(1) has any specific compression flags besides `z`, `j` and `J`.",,
2.34164E+17,python#3213,2021-07-03,i just use `a` (detects compression by file suffix),,
2.75501E+17,Plane#0324,2021-07-03,oh i like that,,
3.58051E+17,hazel#0271,2021-07-03,I haven't made an archive in a while,,
2.75501E+17,Plane#0324,2021-07-03,i wonder when that was added,,
2.75501E+17,Plane#0324,2021-07-03,(pls don't say 20 years ago),,
7.73175E+17,meowüé∫#2842,2021-07-03,`Z` for archaic compress(1),,
3.58051E+17,hazel#0271,2021-07-03,but I aliased something to `compress`,,
2.34164E+17,python#3213,2021-07-03,Zstd is my favorite,,
2.34164E+17,python#3213,2021-07-03,`.zst`,,
3.58051E+17,hazel#0271,2021-07-03,which does a tar.xz,,
3.58051E+17,hazel#0271,2021-07-03,forget what,,
7.73175E+17,meowüé∫#2842,2021-07-03,"Hah, good riddance of the old `compress`.",,
7.73175E+17,meowüé∫#2842,2021-07-03,"`--lzma`, `--lzop`, `--lzip` and `--zstd` have long flags only.",,
2.34164E+17,python#3213,2021-07-03,something like `tar acf file.tar.xz files/` probably,,
3.58051E+17,hazel#0271,2021-07-03,think so,,
2.75501E+17,Plane#0324,2021-07-03,the `v` is like a security blanket,,
7.73175E+17,meowüé∫#2842,2021-07-03,hehe,,
2.34164E+17,python#3213,2021-07-03,i don't use the flags for those at all üòÑ,,
7.73175E+17,meowüé∫#2842,2021-07-03,"Yeah, I don't reckon I would either.",,
2.75501E+17,Plane#0324,2021-07-03,i'm definitely going to start using `a` though,,
7.73175E+17,meowüé∫#2842,2021-07-03,Does bsdtar have it too?,,
2.34164E+17,python#3213,2021-07-03,hmmm,,
2.34164E+17,python#3213,2021-07-03,i don't know,,
7.73175E+17,meowüé∫#2842,2021-07-03,It does!,,
2.34164E+17,python#3213,2021-07-03,nice,,
2.75501E+17,Plane#0324,2021-07-03,yay,,
7.73175E+17,meowüé∫#2842,2021-07-03,"It says if it can't recognise the format, it compresses it as `.pax.bz2`",,
2.34164E+17,python#3213,2021-07-03,what is pax?,,
7.73175E+17,meowüé∫#2842,2021-07-03,A subset of tar IIRC,,
2.34164E+17,python#3213,2021-07-03,oh,,
7.73175E+17,meowüé∫#2842,2021-07-03,Been a while since I had to deal with pax and star.,,
2.34164E+17,python#3213,2021-07-03,i assume you have bz2 installed,,
3.58051E+17,hazel#0271,2021-07-03,I compress all my files with Disney FastPlay,,
2.34164E+17,python#3213,2021-07-03,maybe it doesn't like pax,,
7.73175E+17,meowüé∫#2842,2021-07-03,:meowleft:,,
3.58051E+17,hazel#0271,2021-07-03,kiss linux uses pax,,
3.58051E+17,hazel#0271,2021-07-03,kiss linux is also awful,,üòÜ (2)
3.58051E+17,hazel#0271,2021-07-03,so,,
3.58051E+17,hazel#0271,2021-07-03,please just use a normal distro at everyone,,
2.75501E+17,Plane#0324,2021-07-03,the whole point of me using linux is that i'm using something more popular,,
2.75501E+17,Plane#0324,2021-07-03,so i've been using debian mostly since 2011,,
2.75501E+17,Plane#0324,2021-07-03,which is when i abandoned freebsd,,
3.58051E+17,hazel#0271,2021-07-03,i use nixos which is a bad decision a lot of the time,,
2.75501E+17,Plane#0324,2021-07-03,i kinda miss it,,
3.58051E+17,hazel#0271,2021-07-03,"samth told me to ""stop using a zoomer distro""",,
2.75501E+17,Plane#0324,2021-07-03,lol,,
2.34164E+17,python#3213,2021-07-03,"*cough*
btw i use arch
*cough*",,
3.58051E+17,hazel#0271,2021-07-03,hey it's technically older than ubuntu,,
2.75501E+17,Plane#0324,2021-07-03,i've never used those,,
3.58051E+17,hazel#0271,2021-07-03,technically,,
3.58051E+17,hazel#0271,2021-07-03,h,,
2.75501E+17,Plane#0324,2021-07-03,i started on slackware 1.2,,
2.75501E+17,Plane#0324,2021-07-03,umm,,
2.75501E+17,Plane#0324,2021-07-03,wait . . . slackware 3.0?  it was the one with linux 1.2.13,,
2.75501E+17,Plane#0324,2021-07-03,i had something with linux 0.99 before that but i don't remember what it was anymore lol,,
3.58051E+17,hazel#0271,2021-07-03,i started with ubuntu 11.10? i think,,
2.75501E+17,Plane#0324,2021-07-03,gosh i don't miss the long nights of downloading over a 2400,,
2.34164E+17,python#3213,2021-07-03,that's 7 years older than i am,,
7.73175E+17,meowüé∫#2842,2021-07-03,I started with OpenSuSE 10,,
4.66395E+17,oaktownsam#0815,2021-07-03,cpio compress fun stuff,,
7.73175E+17,meowüé∫#2842,2021-07-03,oh yikes cpio,,
4.66395E+17,oaktownsam#0815,2021-07-03,I've also used rcs and cvs professionally,,
2.34164E+17,python#3213,2021-07-03,oh yes,,
3.58051E+17,hazel#0271,2021-07-03,idk i'm 19 which makes me basically a child except legally unfortunately,,
2.34164E+17,python#3213,2021-07-03,the wonders of cpio,,
7.73175E+17,meowüé∫#2842,2021-07-03,.cpio.Z,,
4.66395E+17,oaktownsam#0815,2021-07-03,CPIO lives on in RPM,,
2.34164E+17,python#3213,2021-07-03,it sucks,,
7.73175E+17,meowüé∫#2842,2021-07-03,and ar lives on in DEB,,
3.58051E+17,hazel#0271,2021-07-03,dunno how i am an adult,,
2.75501E+17,Plane#0324,2021-07-03,"i actually had a 9600 for a bit but it got struck by lightning, so then i was back to the 2400 lol",,
2.34164E+17,python#3213,2021-07-03,i don't understand why apple likes it,,
3.58051E+17,hazel#0271,2021-07-03,whatever,,
2.34164E+17,python#3213,2021-07-03,one of apple's package formats uses cpio,,
2.34164E+17,python#3213,2021-07-03,they were always such a pain to manually unarchive,,
3.58051E+17,hazel#0271,2021-07-03,actually one second,,
2.34164E+17,python#3213,2021-07-03,it had like 3 layers in it,,
4.66395E+17,oaktownsam#0815,2021-07-03,I once wrote a tar tool that actually worked on tape,,
7.73175E+17,meowüé∫#2842,2021-07-03,Nice,,
2.75501E+17,Plane#0324,2021-07-03,"idk, i haven't used osx in so long i'm starting to forget everything i knew about it",,
3.58051E+17,hazel#0271,2021-07-03,https://distr1.org/ if we're talking about package manager compression formats,,
3.58051E+17,hazel#0271,2021-07-03,really cool,,
2.75501E+17,Plane#0324,2021-07-03,"i've heard an awful lot of people talking about their macs lately, it really feels like they're getting more popular",,
7.73175E+17,meowüé∫#2842,2021-07-03,,https://cdn.discordapp.com/attachments/618895179343986688/860757252973527121/tticon.png,
2.75501E+17,Plane#0324,2021-07-03,i had that cool osx internals book but i think all the info is terribly out-of-date now,,
3.58051E+17,hazel#0271,2021-07-03,"hey if anyone wants some cursed knowledge, NixOS uses its own archive format for some reason",,
3.58051E+17,hazel#0271,2021-07-03,"""nar""",,
7.73175E+17,meowüé∫#2842,2021-07-03,(for some reason Oracle still maintains SunOS documentation),,
4.66395E+17,oaktownsam#0815,2021-07-03,I had a rural barely capable 28.8 line and downloaded the slackware disk set.  I think it took a night to get all 16 X11 disks,,
2.34164E+17,python#3213,2021-07-03,wtf,,
7.73175E+17,meowüé∫#2842,2021-07-03,@hazel What's its shtick?,,
3.58051E+17,hazel#0271,2021-07-03,something about determinism,,
2.34164E+17,python#3213,2021-07-03,"i kinda wanted to learn nix for a while, but it's bootloader customizability wasn't very good",,
7.73175E+17,meowüé∫#2842,2021-07-03,I think Guix does something similar. Not sure.,,
2.75501E+17,Plane#0324,2021-07-03,"i'm actually kind of nostalgic when i think back to downloading those disks and labeling each one.  X1, X2, X3 . . . even though i said i don't miss it.  i seem to have lied.  lol",,
3.58051E+17,hazel#0271,2021-07-03,nix is worth trying and then giving up on,,üëå (1)
2.34164E+17,python#3213,2021-07-03,lol,,
2.34164E+17,python#3213,2021-07-03,i gave up when i saw how few options there were to configure the bootloader,,
3.58051E+17,hazel#0271,2021-07-03,i unfortunately stuck with it for multiple years,,
7.73175E+17,meowüé∫#2842,2021-07-03,I'd pin it if it weren't off-topic.,,
4.66395E+17,oaktownsam#0815,2021-07-03,probably they still have customers they're obligated to support,,
3.58051E+17,hazel#0271,2021-07-03,and now i am the de facto racket nix person,,
2.34164E+17,python#3213,2021-07-03,i needed a very customized bootloader thing,,
7.73175E+17,meowüé∫#2842,2021-07-03,@oaktownsam I'm terrified by this thought.,,
4.66395E+17,oaktownsam#0815,2021-07-03,At $FORMER_EMPLOYER there were a lot of old Sun systems,,
7.73175E+17,meowüé∫#2842,2021-07-03,@hazel I thought that was clacke,,
3.58051E+17,hazel#0271,2021-07-03,insofar that i got invited to this server because sam asked me to because someone asked about nix,,
3.58051E+17,hazel#0271,2021-07-03,so,,
3.58051E+17,hazel#0271,2021-07-03,is it?,,
2.75501E+17,Plane#0324,2021-07-03,i didn't ever like solaris tbh,,
7.73175E+17,meowüé∫#2842,2021-07-03,https://github.com/fractalide/racket2nix,,
3.58051E+17,hazel#0271,2021-07-03,they win,,
7.73175E+17,meowüé∫#2842,2021-07-03,He convinced me to package my Racket software in Nix even though I've barely used Nix.,,
7.73175E+17,meowüé∫#2842,2021-07-03,And said software isn't packaged otherwise.,,
3.58051E+17,hazel#0271,2021-07-03,nix is really good when you're bundling a non-C language with C FFI dependencies etc,,
3.58051E+17,hazel#0271,2021-07-03,"like, really good at that",,
4.66395E+17,oaktownsam#0815,2021-07-03,"The container stuff was cool, but then they got sold to Oracle and Linux pretty much took over.",,
2.75501E+17,Plane#0324,2021-07-03,it feels like all of the various unixen started receding into the past right around when i got old enough to start working,,
2.75501E+17,Plane#0324,2021-07-03,so i don't have a huge amount of experience with most of them,,
7.73175E+17,meowüé∫#2842,2021-07-03,I've been using AppImage when I need to distribute a self-contained program without having the user install libraries.,,
7.73175E+17,meowüé∫#2842,2021-07-03,But AppImage sucks with GTK programs.,,
3.58051E+17,hazel#0271,2021-07-03,it's literally just Debian if I don't feel like thinking or NixOS if I do,,
3.58051E+17,hazel#0271,2021-07-03,at this point,,
3.58051E+17,hazel#0271,2021-07-03,and lately I haven't been feeling like thinking...,,
2.34164E+17,python#3213,2021-07-03,"i've wanted to try appimage sometime, it seems promising",,
7.73175E+17,meowüé∫#2842,2021-07-03,It was surprisingly straightforward.,,
2.75501E+17,Plane#0324,2021-07-03,i still use netbsd,,
7.73175E+17,meowüé∫#2842,2021-07-03,I haven't used it in a while but yeah.,,
3.58051E+17,hazel#0271,2021-07-03,speaking of things that don't work on NixOS,,
3.58051E+17,hazel#0271,2021-07-03,sigh,,
7.73175E+17,meowüé∫#2842,2021-07-03,I have a soft spot for NetBSD.,,
2.34164E+17,python#3213,2021-07-03,what about gtk didn't it like?,,
7.73175E+17,meowüé∫#2842,2021-07-03,Something about shared object dependencies. I never quite got what they were trying to say.,,
4.66395E+17,oaktownsam#0815,2021-07-03,I've used a handful of unix and really only liked Linux and maybe a bit of Irix,,
7.73175E+17,meowüé∫#2842,2021-07-03,It just doesn't work without Rube Goldbergesque hacks.,,
7.73175E+17,meowüé∫#2842,2021-07-03,"@hazel Wait, really?",,
3.58051E+17,hazel#0271,2021-07-03,I have used Linux and OpenBSD and briefly messed with Plan 9 for around 30 minutes,,
2.34164E+17,python#3213,2021-07-03,i want to try out illumios sometime too,,
4.66395E+17,oaktownsam#0815,2021-07-03,Also I think BSD ports is/was nice,,
2.75501E+17,Plane#0324,2021-07-03,"i tried openbsd *once* back in the 90s, and it kernel panicked a few days later.  what i remember most vividly about it is that it had hangman in its kernel debugger",,
3.58051E+17,hazel#0271,2021-07-03,"yes, for a lot of reasons",,
7.73175E+17,meowüé∫#2842,2021-07-03,Splendid,,
7.73175E+17,meowüé∫#2842,2021-07-03,(at Plane),,
3.58051E+17,hazel#0271,2021-07-03,nix doesn't follow FHS like at all,,üá´ (2)
7.73175E+17,meowüé∫#2842,2021-07-03,"Oh, that's why.",,
3.58051E+17,hazel#0271,2021-07-03,the only file in /bin is sh,,
4.66395E+17,oaktownsam#0815,2021-07-03,hahaha,,
3.58051E+17,hazel#0271,2021-07-03,the only directory in /usr is bin,,
7.73175E+17,meowüé∫#2842,2021-07-03,I thought NixOS had a GoboFS-like hidden overlay mount.,,
3.58051E+17,hazel#0271,2021-07-03,the only file in /usr/bin is env,,
3.58051E+17,hazel#0271,2021-07-03,so yeah,,
3.58051E+17,hazel#0271,2021-07-03,you can make an FHS environment in an expr but it isn't global,,
7.73175E+17,meowüé∫#2842,2021-07-03,I like the way Gobolinux handles it by letting `/usr` etc transparently bind to the internal filesystem layout.,,
3.58051E+17,hazel#0271,2021-07-03,yeah that would make sense,,
3.58051E+17,hazel#0271,2021-07-03,"unfortunately,",,
7.73175E+17,meowüé∫#2842,2021-07-03,So you don't see `usr` when you do `ls -A /` but you can still interact with it and it's full of links.,,
3.58051E+17,hazel#0271,2021-07-03,nix,,
7.73175E+17,meowüé∫#2842,2021-07-03,Well,,
7.73175E+17,meowüé∫#2842,2021-07-03,Fair enough.,,
3.58051E+17,hazel#0271,2021-07-03,lmao,,
3.58051E+17,hazel#0271,2021-07-03,one day I'm gonna leave my laptop unattended in Luddy and see someone installing Debian on it after they finally get sick of my shit,,
7.73175E+17,meowüé∫#2842,2021-07-03,hahah,,
4.66395E+17,oaktownsam#0815,2021-07-03,"üë¥üèº In the old days, we'd spend weeks messing with FVWM configuration files and recompiling our kernels.",,
3.58051E+17,hazel#0271,2021-07-03,I did that too for a time I wouldn't recommend it,,
3.58051E+17,hazel#0271,2021-07-03,except not FVWM,,
7.73175E+17,meowüé∫#2842,2021-07-03,I love FVWM. I have a collection of extremely ugly FVWM (and similar WMs) screenshots from '90s and '00s.,,
7.73175E+17,meowüé∫#2842,2021-07-03,"Like, unthinkably ugly.",,
3.58051E+17,hazel#0271,2021-07-03,I wrote my own window manager in nothing but shell scripts back in 2015-16,,
3.58051E+17,hazel#0271,2021-07-03,do not do this,,
3.58051E+17,hazel#0271,2021-07-03,please do not do this,,
7.73175E+17,meowüé∫#2842,2021-07-03,I have a soft spot for ugly and na√Øve Unix desktops.,,
3.58051E+17,hazel#0271,2021-07-03,please,,
4.66395E+17,oaktownsam#0815,2021-07-03,Yes FVWM was actually real ugly,,
7.73175E+17,meowüé∫#2842,2021-07-03,And I adore it.,,
4.66395E+17,oaktownsam#0815,2021-07-03,Motif,,
3.58051E+17,hazel#0271,2021-07-03,FVWM has a vibe,,
7.73175E+17,meowüé∫#2842,2021-07-03,I once set up my work laptop with twm just for the fun of it.,,
7.73175E+17,meowüé∫#2842,2021-07-03,And then I took it a step further and refused to install anything with GTK or Qt on it.,,
4.66395E+17,oaktownsam#0815,2021-07-03,"Athena was pretty ugly too, but it was really trying to compete with 1980s Macs",,
3.58051E+17,hazel#0271,2021-07-03,I just use uh almost stock GNOME 40,,
7.73175E+17,meowüé∫#2842,2021-07-03,Compiled Emacs with Athena,,
7.73175E+17,meowüé∫#2842,2021-07-03,"xterm, xclock, xmonitor",,
3.58051E+17,hazel#0271,2021-07-03,LMAO I used to compile Emacs with Motif as a bit,,
7.73175E+17,meowüé∫#2842,2021-07-03,It was super ugly,,
7.73175E+17,meowüé∫#2842,2021-07-03,I used Emacs on Motif for a while when I was resisting the change from GTK 2 to GTK 3.,,
3.58051E+17,hazel#0271,2021-07-03,solely as a bit,,
7.73175E+17,meowüé∫#2842,2021-07-03,Then I gave up.,,
3.58051E+17,hazel#0271,2021-07-03,I mean it's usable,,
4.66395E+17,oaktownsam#0815,2021-07-03,"That joke about how to exit vi, that's me with twm",,
7.73175E+17,meowüé∫#2842,2021-07-03,GTK 3 was very buggy at the time. It's much better now.,,
7.73175E+17,meowüé∫#2842,2021-07-03,This was around the time I migrated from GNOME 2 to xmonad.,,
3.58051E+17,hazel#0271,2021-07-03,I miss xmonad,,
7.73175E+17,meowüé∫#2842,2021-07-03,"@oaktownsam C-M-<F1>, login, killall twm",,meowblushcry (1)
7.73175E+17,meowüé∫#2842,2021-07-03,Easy~,,
3.58051E+17,hazel#0271,2021-07-03,I would probably use xmonad if not for the savior that is Wayland,,
7.73175E+17,meowüé∫#2842,2021-07-03,Actually I want to find the screenshots now.,,
3.58051E+17,hazel#0271,2021-07-03,Wayland is the magic pill that solves all your graphics issues unless you're on NVIDIA in which case it creates more,,
4.66395E+17,oaktownsam#0815,2021-07-03,My first real PC had 16MB RAM and this weird video chipset where XFree86 couldn't do Truecolor unless I removed half the RAM.,,meow (1)
7.73175E+17,meowüé∫#2842,2021-07-03,Oh and I was using .xpm files for background,,
3.58051E+17,hazel#0271,2021-07-03,I did that in 2017!,,
3.58051E+17,hazel#0271,2021-07-03,but because tiled wallpaper patterns were my thing,,
3.58051E+17,hazel#0271,2021-07-03,and xpms are good at that,,
3.58051E+17,hazel#0271,2021-07-03,tiling PNGs is hard,,
4.66395E+17,oaktownsam#0815,2021-07-03,@meowüé∫ ever use WindowMaker?,,
3.58051E+17,hazel#0271,2021-07-03,I am weird insofar that I'm too young for the era of computing that I felt like I was in back in like 2015,,
3.58051E+17,hazel#0271,2021-07-03,ohwell,,
7.73175E+17,meowüé∫#2842,2021-07-03,"@oaktownsam Briefly, with GNUstep",,
2.75501E+17,Plane#0324,2021-07-03,i loved fvwm!!,,
3.58051E+17,hazel#0271,2021-07-03,"I would configure FVWM, write POSIX shell as my primary programming language, compile my own kernel,",,
4.66395E+17,oaktownsam#0815,2021-07-03,Nice!,,
3.58051E+17,hazel#0271,2021-07-03,yeah,,
2.75501E+17,Plane#0324,2021-07-03,it took me a really long time to give up focus follows mouse but i eventually did,,
3.58051E+17,hazel#0271,2021-07-03,and then I decided not to do that,,
3.58051E+17,hazel#0271,2021-07-03,and here I am,,
2.75501E+17,Plane#0324,2021-07-03,"what's funny is i barely used a mouse back then, i used focus follows mouse with mouse keys",,
4.66395E+17,oaktownsam#0815,2021-07-03,Wow FVWM is still developed...  I actually like those fvwm2 window borders,,
2.75501E+17,Plane#0324,2021-07-03,yeah i heard there's an fvwm3!,,
3.58051E+17,hazel#0271,2021-07-03,yes,,
3.58051E+17,hazel#0271,2021-07-03,again,,
3.58051E+17,hazel#0271,2021-07-03,I use basically stock GNOME 40 now,,
3.58051E+17,hazel#0271,2021-07-03,I love how they just dropped the 3.x for no discernable reason,,
3.58051E+17,hazel#0271,2021-07-03,amazing. revolutionary,,
7.73175E+17,meowüé∫#2842,2021-07-03,oh my god,https://cdn.discordapp.com/attachments/618895179343986688/860762896312696832/th-9538764773-1856x1044.png,
3.58051E+17,hazel#0271,2021-07-03,GNOME 4000 HYPERDRIVE EDITION,,
4.66395E+17,oaktownsam#0815,2021-07-03,I use whatever is in xubuntu (on my linux laptop) and doesn't make me crazy.  I don't try to change up too much unless something is really WRONG.,,
7.73175E+17,meowüé∫#2842,2021-07-03,"@hazel They're following the Chrome numbering scheme, just like Firefox did after 3.x",,
3.58051E+17,hazel#0271,2021-07-03,yeah,,
2.75501E+17,Plane#0324,2021-07-03,i do stick much closer to stock configs than i used to.  though i change keybinds for everything,,
3.58051E+17,hazel#0271,2021-07-03,@meowüé∫ are you the same lulu from fedi,,
7.73175E+17,meowüé∫#2842,2021-07-03,Yup,,
3.58051E+17,hazel#0271,2021-07-03,alright,,
2.75501E+17,Plane#0324,2021-07-03,i used to put so much time into trying to make the perfect interface for *me*,,
7.73175E+17,meowüé∫#2842,2021-07-03,Above is the tiling wallpaper made with a brush effect example from Gimp documentation.,,
7.73175E+17,meowüé∫#2842,2021-07-03,:meow:,,
3.58051E+17,hazel#0271,2021-07-03,truly the green pepper is the symbol of freedom,,
2.75501E+17,Plane#0324,2021-07-03,my brother still uses either twm or fvwm in 2021,,
3.58051E+17,hazel#0271,2021-07-03,or something,,
2.75501E+17,Plane#0324,2021-07-03,i'm not sure which,,
3.58051E+17,hazel#0271,2021-07-03,I know two people who still use FVWM,,
3.58051E+17,hazel#0271,2021-07-03,yak shavers,,
3.58051E+17,hazel#0271,2021-07-03,both of them,,
7.73175E+17,meowüé∫#2842,2021-07-03,They've been shaving the same yak train since 2003,,
3.58051E+17,hazel#0271,2021-07-03,I was 1 year old in 2003,,
3.58051E+17,hazel#0271,2021-07-03,:mew:,,
7.73175E+17,meowüé∫#2842,2021-07-03,:mew:,,
3.58051E+17,hazel#0271,2021-07-03,standard-cate,,
4.66395E+17,oaktownsam#0815,2021-07-03,I had gone to Burning Man 5 times by 2003.,,
7.73175E+17,meowüé∫#2842,2021-07-03,hahah,,
7.73175E+17,meowüé∫#2842,2021-07-03,Whoa,,
7.73175E+17,meowüé∫#2842,2021-07-03,I've gone 0 (zero) times so far. üòõ,,
3.58051E+17,hazel#0271,2021-07-03,I probably drank water in 2003,,
4.66395E+17,oaktownsam#0815,2021-07-03,I think the last time I went was 2004 or 2005.  I probably overdid it.,,
3.58051E+17,hazel#0271,2021-07-03,the same way I'm drinking water right now #WaterDrinkers,,
7.73175E+17,meowüé∫#2842,2021-07-03,I hear it got overly commercial and soulless lately anyway.,,
7.73175E+17,meowüé∫#2842,2021-07-03,mmm water,,
3.58051E+17,hazel#0271,2021-07-03,mmmmmm,,
4.66395E+17,oaktownsam#0815,2021-07-03,water is quite soulless,,
3.58051E+17,hazel#0271,2021-07-03,water,,
4.66395E+17,oaktownsam#0815,2021-07-03,so corporate,,
7.73175E+17,meowüé∫#2842,2021-07-03,Only bottled water!,,
7.73175E+17,meowüé∫#2842,2021-07-03,"Drink tap, say no to Nestl√© :meow:",,
3.58051E+17,hazel#0271,2021-07-03,me when I drink water,https://cdn.discordapp.com/attachments/618895179343986688/860764578174861312/Screenshot_20210703-021032_1.png,
3.58051E+17,hazel#0271,2021-07-03,mmmm,,
3.58051E+17,hazel#0271,2021-07-03,#water #drinkers,,
2.75501E+17,Plane#0324,2021-07-03,I drank water today,,
3.58051E+17,hazel#0271,2021-07-03,hell yes,,
3.58051E+17,hazel#0271,2021-07-03,water: it tastes like water,,
2.19842E+17,&t#1161,2021-07-03,,https://cdn.discordapp.com/attachments/618895179343986688/860766233347489812/whenudrinkwater.jpg,
2.19842E+17,&t#1161,2021-07-03,||i have a systemd timer unit set up to put this on my screen every hour on the hour so i don't forget to stay hydrated||,,üö∞ (5)
3.58051E+17,hazel#0271,2021-07-03,literally me when i drink water,,
7.73175E+17,meowüé∫#2842,2021-07-03,I relate,,
4.1228E+17,xgqt#8370,2021-07-03,"i dont get those reminders, can't you just like have a bottle on your desk so its easily reachable? do you have to make a journey to the mountains to collect fresh dew? ;P",,
2.19842E+17,&t#1161,2021-07-03,I would *never* drink Mountain Dew.,,
2.19842E+17,&t#1161,2021-07-03,I'm just one of those people who'll get like way into something for literal hours at a time and just completely forget that I'm made out of organs and tissue for the duration.,,
2.19842E+17,&t#1161,2021-07-03,"the way i have it set up, it pops up in a huge window in the middle of my screen that gets in the way of whatever i'm doing, so it serves as a nice reality check to remind me to do human stuff",,
4.1228E+17,xgqt#8370,2021-07-03,it would be nice if that window would be spawned by racket,,
4.1228E+17,xgqt#8370,2021-07-03,or do you use kwindow or zenity for it,,
2.19842E+17,&t#1161,2021-07-03,I use a little image viewer called `imv` atm,,
4.1228E+17,xgqt#8370,2021-07-03,i see,,
2.75501E+17,Plane#0324,2021-07-03,"i usually remember to drink water, but i forget to stand up and stretch",,
2.75501E+17,Plane#0324,2021-07-03,i have an uplift desk so sometimes if i think about it i switch to standing and it's nice to have the change (even though i prefer to sit most of the time lol),,
2.75501E+17,Plane#0324,2021-07-03,but if i'm really into what i'm doing i forget about other things for sure,,
8.14743E+16,jimpjorps#0001,2021-07-03,"having a smart watch that'll buzz me to remind me to take breaks helps, feels more immediate than just a popup reminder or something",,
1.30231E+17,sarna#3904,2021-07-03,my watch buzzes more when I'm standing than when I'm sitting :mew:,,
2.75501E+17,Plane#0324,2021-07-03,"i just really don't like interruptions, the context switches feel so expensive",,
1.30231E+17,sarna#3904,2021-07-03,I'm the opposite - without taking a lot of breaks I'm guaranteed to have a headache,,
2.75501E+17,Plane#0324,2021-07-03,oh! i do think i should take breaks,,
2.75501E+17,Plane#0324,2021-07-03,i need to take them,,
2.75501E+17,Plane#0324,2021-07-03,"i just don't *like* when i'm focusing on something and, say, a buzzer or a sound breaks my concentration",,
2.75501E+17,Plane#0324,2021-07-03,"but i'm the type who will focus on one thing way too much for my own good, it's really easy for me to just get into something and *keep working* at it way longer than i should",,
2.66505E+17,notjack#9941,2021-07-03,relatable,,
3.58051E+17,hazel#0271,2021-07-03,facts,,
4.66395E+17,oaktownsam#0815,2021-07-03,`#lang facts`,,
1.30231E+17,sarna#3904,2021-07-03,yea same. sometimes I even forget to eat :mew:,,
2.66505E+17,notjack#9941,2021-07-03,same. in my case it's the adhd.,,
2.66505E+17,notjack#9941,2021-07-03,hyperfixation has downsides,,
2.34164E+17,python#3213,2021-07-03,"once in a blue moon, the hyperfocus is actually no something productive though",,
2.66505E+17,notjack#9941,2021-07-03,blessed are those days,,
4.66395E+17,oaktownsam#0815,2021-07-03,Feeling pretty smug: wrote a `->*` contract without looking at the reference,,üòÆ (3)
2.17712E+17,gomma#4017,2021-07-03,same,,
2.17712E+17,gomma#4017,2021-07-03,i put my entire life on hold to like make a constructed writing script or whatever nonsense,,
2.17712E+17,gomma#4017,2021-07-03,or make a song,,
3.58051E+17,hazel#0271,2021-07-03,now do `->i` without looking at the reference,,
2.66505E+17,notjack#9941,2021-07-03,challenge mode,,
4.66395E+17,oaktownsam#0815,2021-07-03,"To be fair, I only had optional arguments and no keywords",,
3.58051E+17,hazel#0271,2021-07-03,I have been able to do `->*` without the reference a lot,,
3.58051E+17,hazel#0271,2021-07-03,but Graphite has,,
2.66505E+17,notjack#9941,2021-07-03,the fact that ellipses work for rest arguments in `->` is wonderful and the fact that they don't work for `*->` is infuriating,,
3.58051E+17,hazel#0271,2021-07-03,*a lot of those*,,
3.58051E+17,hazel#0271,2021-07-03,like,,
3.58051E+17,hazel#0271,2021-07-03,almost every file in Graphite has a `->*`,,
3.58051E+17,hazel#0271,2021-07-03,so,,
4.83487E+17,jest#6646,2021-07-03,does racket have a lib that supports zstd ? https://github.com/facebook/zstd,,
7.14999E+17,gingerydoo#7461,2021-07-03,"Not that I can see on the default catalog, but zstd provides a C library that would work with Racket's FFI library.",,
7.14999E+17,gingerydoo#7461,2021-07-03,"The painful part of making a Racket package for this is in distributing dynamic libraries for each arch/OS. If you want a quick solution, write a small Racket program to spawn subprocesses for zstd instead.",,
1.35871E+17,Drakonis#1712,2021-07-03,"@gingerydoo i saw your thread on /r/racket, guix indeed has quite a lot of abstractions, its design is entirely informed by its goals to provide a complete operating system, including init and initrd, so it grew abstractions to improve the manipulation and generation of files, among other things, i have been looking at xiden's docs in order to find out if it has a g-exps equivalent for doing such things",,
1.35871E+17,Drakonis#1712,2021-07-03,the docs dont seem to be very clear on this regard,,
1.35871E+17,Drakonis#1712,2021-07-03,i do suppose it might be a lot simpler to achieve something like g-exps when you don't have to build your system around the nix daemon's design,,
7.14999E+17,gingerydoo#7461,2021-07-03,"Thank you! The guide does not say much at this point by intention, but the `xiden/pkgdef` module language is the closest equivalent to g-exps.",,
7.14999E+17,gingerydoo#7461,2021-07-03,Were you looking at the guide or the reference?,,
1.35871E+17,Drakonis#1712,2021-07-03,reference,,
1.35871E+17,Drakonis#1712,2021-07-03,the examples are very bare though,,
7.14999E+17,gingerydoo#7461,2021-07-03,"Gotcha. I think I see why it wouldn't be clear, since the `xiden/pkgdef` language reprovides terms from several other modules in the collection. I never bothered to come up with a name for all the forms at once.
And yes, the example set was quite literally born yesterday... yesterday. üôÇ",,
7.14999E+17,gingerydoo#7461,2021-07-03,"Everyone's feedback was super useful, and the goal at this point is to put out more specific examples that are less tech-demo-y",,
1.35871E+17,Drakonis#1712,2021-07-03,the docs don't really help with envisioning how much xiden has improved on guix right now,,
1.35871E+17,Drakonis#1712,2021-07-03,ha,,
1.35871E+17,Drakonis#1712,2021-07-03,yesterday you say?,,
1.35871E+17,Drakonis#1712,2021-07-03,i remember it being a bit older than that and with less examples,,
7.14999E+17,gingerydoo#7461,2021-07-03,"Right. The examples were not integrated directly with the document flow. The guide was doing more heavy lifting, and didn't seem to belong to the curriculum, so to speak.",,
7.14999E+17,gingerydoo#7461,2021-07-03,"As for improving on Guix/Nix, what kind of language or feature were you looking for?",,
1.35871E+17,Drakonis#1712,2021-07-03,i see,,
1.35871E+17,Drakonis#1712,2021-07-03,"honestly, what i want out of it is to have guix's approach to subsuming lots of things with scheme",,
1.35871E+17,Drakonis#1712,2021-07-03,in a way or another,,
1.35871E+17,Drakonis#1712,2021-07-03,but this is something that requires time to build,,
1.35871E+17,Drakonis#1712,2021-07-03,guix did its CLI so incredibly well and made it reusable,,
1.35871E+17,Drakonis#1712,2021-07-03,so there's deployment tooling that works extremely well and it is available out of hte box,,
7.14999E+17,gingerydoo#7461,2021-07-03,"By subsuming with scheme, do you mean having deployment terms that are not specific to any Scheme implementation?",,
1.35871E+17,Drakonis#1712,2021-07-03,oh no,,
1.35871E+17,Drakonis#1712,2021-07-03,i meant that it subsumed many parts of the stack using scheme,,
1.35871E+17,Drakonis#1712,2021-07-03,one sec,,
7.14999E+17,gingerydoo#7461,2021-07-03,"Ah, gotcha.",,
1.35871E+17,Drakonis#1712,2021-07-03,ludovic's presentation on fosdem might help,,
7.14999E+17,gingerydoo#7461,2021-07-03,Thanks!,,
1.35871E+17,Drakonis#1712,2021-07-03,https://fosdem.org/2021/schedule/event/gnuguix/,,
7.14999E+17,gingerydoo#7461,2021-07-03,"I'm happy with the default CLI approach for Xiden so far, but I'm also happy to find a way to replicate Guix experiences as an extension... later.",,
1.35871E+17,Drakonis#1712,2021-07-03,of course.,,
1.35871E+17,Drakonis#1712,2021-07-03,no rush.,,
1.35871E+17,Drakonis#1712,2021-07-03,"but running xiden as an operating system, like guix, would be quite the experience, really.",,
1.35871E+17,Drakonis#1712,2021-07-03,but it is also a matter of having a structure and a culture that can support it,,
1.35871E+17,Drakonis#1712,2021-07-03,it comes down to how invested you want to be on this,,
7.14999E+17,gingerydoo#7461,2021-07-03,"Yes, I think the short-path there is going through LFS and bundling Racket + Xiden in it. Beyond that, I do need more examples that make Xiden's role in a project easier to visualize. That should be better in a couple of weeks.",,
1.35871E+17,Drakonis#1712,2021-07-03,"the system management parts are some of the highlights of guix, so to say.",,
7.14999E+17,gingerydoo#7461,2021-07-03,"Right now it seems my general mistake is being too abstract. Someone just told me that Racket's website had a similar problem with the verbiage ""Build Languages. Solve Problems.""",,
7.14999E+17,gingerydoo#7461,2021-07-03,Hence it no longer being there,,
1.35871E+17,Drakonis#1712,2021-07-03,pardon the extremely rude wording i'll use right now,,
7.14999E+17,gingerydoo#7461,2021-07-03,"It doesn't have to be rude to make a point, but I won't take it personally. üôÇ",,
1.35871E+17,Drakonis#1712,2021-07-03,"racket tends to trot out things like language oriented programming, but it doesnt quite live up to that, in a manner of speaking",,
1.35871E+17,Drakonis#1712,2021-07-03,because lang switching tends to override the syntax and makes interop harder if you're not used to racket's guts,,
7.14999E+17,gingerydoo#7461,2021-07-03,TRUE,,
1.35871E+17,Drakonis#1712,2021-07-03,"i feel like this has given guile a upper hand, as it can weave them together, so at some point, guix could simply use a shell reimplementation inside its build definitions and it'd gain a lot out of that",,
1.35871E+17,Drakonis#1712,2021-07-03,i think rash is extremely cool and it deserves the opportunity to be used inside xiden builds,,plusone (1)
1.35871E+17,Drakonis#1712,2021-07-03,but i'm not sure what that'd entail,,
7.14999E+17,gingerydoo#7461,2021-07-03,Patience.,,
1.35871E+17,Drakonis#1712,2021-07-03,"a lot of patience, yes.",,
1.35871E+17,Drakonis#1712,2021-07-03,"its too soon to want this, guix wasnt born the way it is now, it was roughly at the same level xiden is right now",,
3.58051E+17,hazel#0271,2021-07-03,someday I will learn Guix and be enlightened over the flaming garbage fire that is the Nix language,,
1.35871E+17,Drakonis#1712,2021-07-03,but with less features,,
1.35871E+17,Drakonis#1712,2021-07-03,"haha, start now.",,
7.14999E+17,gingerydoo#7461,2021-07-03,Nix scares me a little.,,
1.35871E+17,Drakonis#1712,2021-07-03,nix scares us all,,
3.58051E+17,hazel#0271,2021-07-03,I was summoned to this server by samth after someone had a Nix issue in #help so,,
2.34164E+17,python#3213,2021-07-03,What's guix used for?,,
7.14999E+17,gingerydoo#7461,2021-07-03,"Once I saw ""we pasted the hashes straight in and it seems to work"" I ran",,
1.35871E+17,Drakonis#1712,2021-07-03,"everything that nix does, but in a significantly saner manner",,
2.34164E+17,python#3213,2021-07-03,"i've tried using nix before, maybe guix would have worked better for me",,
3.58051E+17,hazel#0271,2021-07-03,whuh?,,
7.14999E+17,gingerydoo#7461,2021-07-03,"Hold on, let me see if I can find it again",,
1.35871E+17,Drakonis#1712,2021-07-03,also scheme all the way down,,
3.58051E+17,hazel#0271,2021-07-03,also Leif was right when they said that Nix's CLI was a garbage fire,,
3.58051E+17,hazel#0271,2021-07-03,it is,,
1.35871E+17,Drakonis#1712,2021-07-03,"shepherd is a boon, contrary to popular belief",,
3.58051E+17,hazel#0271,2021-07-03,I actually view lack of systemd as a downside but I am an opinionated person and haven't tried shepherd,,
1.35871E+17,Drakonis#1712,2021-07-03,"nix's cli, even with the modern one, is still a garbage fire because of how it is designed",,
3.58051E+17,hazel#0271,2021-07-03,right,,
1.35871E+17,Drakonis#1712,2021-07-03,how the nix ecosystem is designed,,
3.58051E+17,hazel#0271,2021-07-03,I mean I'd imagine Guix would appeal more to Racketeers anyway,,
3.58051E+17,hazel#0271,2021-07-03,the same way Nix is supposed to appeal to Haskellers,,
3.58051E+17,hazel#0271,2021-07-03,supposed to,,
3.58051E+17,hazel#0271,2021-07-03,*supposed to*,,
3.58051E+17,hazel#0271,2021-07-03,***supposed to***,,
7.14999E+17,gingerydoo#7461,2021-07-03,"wtf is a nix pill, I didn't see that last time",,
1.35871E+17,Drakonis#1712,2021-07-03,nix appeals to haskellers because it took away the heavy lifting of managing cabal or stack,,
3.58051E+17,hazel#0271,2021-07-03,nix pills are attempts at documentation,,
3.58051E+17,hazel#0271,2021-07-03,yeah nix is amazing compared to cabal and stack,,
1.35871E+17,Drakonis#1712,2021-07-03,"nix pills are terrible, these days you should look at nix.dev",,
2.34164E+17,python#3213,2021-07-03,based and nix-pilled,,
1.35871E+17,Drakonis#1712,2021-07-03,"but again, it doesnt solve much",,
3.58051E+17,hazel#0271,2021-07-03,"https://git.knightsofthelambdacalcul.us/hazel/etc
if you want to be scared @gingerydoo",,
1.35871E+17,Drakonis#1712,2021-07-03,because nix's entire design hinges on invoking weird functions that wrap packages into an environment,,
3.58051E+17,hazel#0271,2021-07-03,this is my nightmare config,,
1.35871E+17,Drakonis#1712,2021-07-03,also guix is getting home-manager built into it,,
1.35871E+17,Drakonis#1712,2021-07-03,but sane,,
3.58051E+17,hazel#0271,2021-07-03,oh is it? nice,,
1.35871E+17,Drakonis#1712,2021-07-03,its admittedly genius,,
1.35871E+17,Drakonis#1712,2021-07-03,yes,,
1.35871E+17,Drakonis#1712,2021-07-03,https://lists.gnu.org/archive/html/guix-devel/2021-07/msg00004.html,,
3.58051E+17,hazel#0271,2021-07-03,"""hazel are those encrypted passwords in your git tree""
***yes***",,
1.35871E+17,Drakonis#1712,2021-07-03,yes that's nightmare fuel,,
1.35871E+17,Drakonis#1712,2021-07-03,nix has a horrible way to handle secrets and is pretty goddamn fragmented,,
1.35871E+17,Drakonis#1712,2021-07-03,also nixops is in python,,
1.35871E+17,Drakonis#1712,2021-07-03,what a horrible horrible abomination,,
3.58051E+17,hazel#0271,2021-07-03,Nix doesn't deserve the flak that it gets,,
7.14999E+17,gingerydoo#7461,2021-07-03,brb tomorrow. Doing a game night. Thanks to all for the feedback. I owe you an answer @hazel,,
3.58051E+17,hazel#0271,2021-07-03,but it deserves a lot of it,,
1.35871E+17,Drakonis#1712,2021-07-03,cool,,
3.58051E+17,hazel#0271,2021-07-03,"nix flakes made handling secrets even worse, so...",,
1.35871E+17,Drakonis#1712,2021-07-03,nix lang is a flaming hellscape,,
3.58051E+17,hazel#0271,2021-07-03,that too,,
3.58051E+17,hazel#0271,2021-07-03,awful syntactically,,
3.58051E+17,hazel#0271,2021-07-03,awful from a language design standpoint,,
3.58051E+17,hazel#0271,2021-07-03,like they designed the entire language like glorified JSON,,
1.35871E+17,Drakonis#1712,2021-07-03,it should've been done in ocaml lol,,
1.35871E+17,Drakonis#1712,2021-07-03,"ocaml existed back then, but i guess its due to it aiming to be a dsl",,
3.58051E+17,hazel#0271,2021-07-03,OCaml is really ugly syntactically but it's like an ugly baby,,
3.58051E+17,hazel#0271,2021-07-03,"like it's still got the ""aww"" factor",,
1.35871E+17,Drakonis#1712,2021-07-03,ocaml is pretty decent nowadays,,
3.58051E+17,hazel#0271,2021-07-03,my language hierarchy is something like,,
3.58051E+17,hazel#0271,2021-07-03,"Racket if I don't care about perf, Haskell if I kinda care about perf or ADTs would be nice, Rust if I really care about perf (this almost never happens)",,
1.35871E+17,Drakonis#1712,2021-07-03,@gingerydoo a game night you say?,,
1.35871E+17,Drakonis#1712,2021-07-03,whatcha playin'?,,
1.35871E+17,Drakonis#1712,2021-07-03,haskell is just uhhh,,
1.35871E+17,Drakonis#1712,2021-07-03,idk,,
3.58051E+17,hazel#0271,2021-07-03,Haskell prepared me for abstract algebra,,plusone (1)
1.35871E+17,Drakonis#1712,2021-07-03,"as far as i'm concerned, there's a nix implementation in haskell, but it hasnt gotten to a point it can replace anything",,
1.35871E+17,Drakonis#1712,2021-07-03,neither defining packages with haskell itself,,
1.35871E+17,Drakonis#1712,2021-07-03,which is true shame,,
1.35871E+17,Drakonis#1712,2021-07-03,but i'm not really into haskell though,,
1.35871E+17,Drakonis#1712,2021-07-03,the culture is simply not ready for this kind of stuff,,
3.58051E+17,hazel#0271,2021-07-03,"Nix is stupid good for two things in my mind:
- packaging some non-C language program (like a Racket program) with a C FFI dependency
- Haskell",,
3.58051E+17,hazel#0271,2021-07-03,that's about it,,
3.58051E+17,hazel#0271,2021-07-03,I just like yak-shaving I guess,,
1.35871E+17,Drakonis#1712,2021-07-03,you forgot about the proprietary software bits,,
1.35871E+17,Drakonis#1712,2021-07-03,it sure likes to revel in these,,
3.58051E+17,hazel#0271,2021-07-03,huh?,,
3.58051E+17,hazel#0271,2021-07-03,but yeah my system config is 2271 lines of Nix lang apparently,,
3.58051E+17,hazel#0271,2021-07-03,awful,,
1.35871E+17,Drakonis#1712,2021-07-03,the repository provides the goddamn kitchen sink's worth of these,,
3.58051E+17,hazel#0271,2021-07-03,I'm not the person to have an opinion on packaging free vs nonfree software,,
3.58051E+17,hazel#0271,2021-07-03,and Nix is opt-in for it regardless,,
3.58051E+17,hazel#0271,2021-07-03,`nixpkgs.allowUnfree` or something like that,,
3.58051E+17,hazel#0271,2021-07-03,I mean by all means Guix not packaging nonfree software is a downside to me because I cannot run Linux-libre,,
3.58051E+17,hazel#0271,2021-07-03,but yeah,,
1.35871E+17,Drakonis#1712,2021-07-03,well,,
1.35871E+17,Drakonis#1712,2021-07-03,nonguix exists though,,
3.58051E+17,hazel#0271,2021-07-03,yeah I know,,
1.35871E+17,Drakonis#1712,2021-07-03,"i am running at this very moment, the upstream kernel",,
1.35871E+17,Drakonis#1712,2021-07-03,works pretty well,,
3.58051E+17,hazel#0271,2021-07-03,if I were to use Guix I'd use nonguix,,
1.35871E+17,Drakonis#1712,2021-07-03,except that nvidia is shite across the board,,
3.58051E+17,hazel#0271,2021-07-03,hi jack welcome to mcdonald's,,
1.35871E+17,Drakonis#1712,2021-07-03,nvidia is hardly the most pleasant thing there is,,
3.58051E+17,hazel#0271,2021-07-03,can i take your order,,
1.35871E+17,Drakonis#1712,2021-07-03,sir this is a wendy's,,
2.66505E+17,notjack#9941,2021-07-03,"@hazel this reminds me of the first time I interacted with you on twitter, which was samth ragging on you about nix in the replies to this https://twitter.com/doitwithalambda/status/1382872956175405058",,
1.35871E+17,Drakonis#1712,2021-07-03,lmao i knew i saw that tweet somewhere,,
3.58051E+17,hazel#0271,2021-07-03,yes,,
3.58051E+17,hazel#0271,2021-07-03,he does that a lot,,
2.66505E+17,notjack#9941,2021-07-03,he's a man of polite devastation https://twitter.com/samth/status/1383017376640245760,,
1.35871E+17,Drakonis#1712,2021-07-03,( Õ°¬∞ Õú ñ Õ°¬∞),,
3.58051E+17,hazel#0271,2021-07-03,I have a desk by his office in Luddy Hall -- I'm pretty sure I'm going to catch him installing Debian on my laptop when I leave it unattended,,
3.58051E+17,hazel#0271,2021-07-03,for context this started when I had to compile Racket from source @notjack,,
3.58051E+17,hazel#0271,2021-07-03,I am his student (I guess),,
2.66505E+17,notjack#9941,2021-07-03,oh god,,
1.35871E+17,Drakonis#1712,2021-07-03,lmfao this is good,,
1.35871E+17,Drakonis#1712,2021-07-03,i'm going to get some metaphorical popcorn,,
3.58051E+17,hazel#0271,2021-07-03,"I'm his student, or he's my employer, or he's my advisor, or mentor, or",,
3.58051E+17,hazel#0271,2021-07-03,I don't know how to phrase it,,
3.58051E+17,hazel#0271,2021-07-03,"since I'm not a grad student and usually in undergrad ""advisor"" means something else",,
3.58051E+17,hazel#0271,2021-07-03,like you imagine the course scheduling person in the advising office,,
3.58051E+17,hazel#0271,2021-07-03,whereas I'm talking about research,,
3.58051E+17,hazel#0271,2021-07-03,but yeah,,
2.66505E+17,notjack#9941,2021-07-03,researchth with samth,,
1.35871E+17,Drakonis#1712,2021-07-03,is this a lisp?,,
1.35871E+17,Drakonis#1712,2021-07-03,this sounds like a lisp???,,
3.58051E+17,hazel#0271,2021-07-03,yeah,,
1.35871E+17,Drakonis#1712,2021-07-03,also how do you actually deal with multiple langs on a same file?,,
1.35871E+17,Drakonis#1712,2021-07-03,"do you just use, idk, #lang racket and then use reader macros?",,
1.35871E+17,Drakonis#1712,2021-07-03,am i getting this right?,,
2.66505E+17,notjack#9941,2021-07-03,yup pretty much,,
1.35871E+17,Drakonis#1712,2021-07-03,i see,,
3.58051E+17,hazel#0271,2021-07-03,basically,,
2.66505E+17,notjack#9941,2021-07-03,"they don't compose automatically, the outer #lang has to provide some sort of infrastructure or hooks or plumbing for using other langs",,
1.35871E+17,Drakonis#1712,2021-07-03,yeah that might be troublesome then,,
3.58051E+17,hazel#0271,2021-07-03,there are readtable extensions,,
3.58051E+17,hazel#0271,2021-07-03,like `#lang curly-fn racket` etc,,
2.66505E+17,notjack#9941,2021-07-03,"yeah, and the readtable system makes it easy for you to make your own outer lang with hooks in place to use racket as the inner lang",,
2.66505E+17,notjack#9941,2021-07-03,but there's nothing for the reverse,,
2.66505E+17,notjack#9941,2021-07-03,there isn't some sort of extensible system in `#lang racket` for using reader macros without using a different initial lang,,
3.58051E+17,hazel#0271,2021-07-03,alternatively you can just rip up regular racket with macros hard enough that you might as well be a `#lang`,,
2.66505E+17,notjack#9941,2021-07-03,like clojure's EDN thing,,
2.66505E+17,notjack#9941,2021-07-03,yeah this,,
2.66505E+17,notjack#9941,2021-07-03,`#%app` gets you pretty far on its own,,
3.58051E+17,hazel#0271,2021-07-03,I'm getting dangerously close to that with my current library,,
2.66505E+17,notjack#9941,2021-07-03,ooooo,,
1.35871E+17,Drakonis#1712,2021-07-03,ah EDN,,
3.58051E+17,hazel#0271,2021-07-03,"like I stopped calling it a library and I'm calling it a ""grammar"" now",,
1.35871E+17,Drakonis#1712,2021-07-03,lol,,
1.35871E+17,Drakonis#1712,2021-07-03,that sounds like fun,,
1.35871E+17,Drakonis#1712,2021-07-03,make a init next V:,,
3.58051E+17,hazel#0271,2021-07-03,I wrote an init system once,,
2.66505E+17,notjack#9941,2021-07-03,"if you write an init system more than once, the first one is your initial init system",,
2.66505E+17,notjack#9941,2021-07-03,init¬≤ system,,
1.35871E+17,Drakonis#1712,2021-07-03,"i mean, systemd is babby init",,
1.35871E+17,Drakonis#1712,2021-07-03,gimme them big inits where i can do wacky ass shit with turing completeness,,
3.58051E+17,hazel#0271,2021-07-03,`#lang init`,,
1.35871E+17,Drakonis#1712,2021-07-03,lol is that so,,
3.58051E+17,hazel#0271,2021-07-03,joking,,
3.58051E+17,hazel#0271,2021-07-03,mine was a shell script and sinit,,
3.58051E+17,hazel#0271,2021-07-03,not very good and also I now refuse to use suckless software even if it's basically just an infinite loop,,
3.58051E+17,hazel#0271,2021-07-03,I have begun to regard systemd-free as a downside because I am now boring,,
1.35871E+17,Drakonis#1712,2021-07-03,i mean,,
2.66505E+17,notjack#9941,2021-07-03,"is ""suckless"" a technical term there",,
1.35871E+17,Drakonis#1712,2021-07-03,i only regard shepherd as interesting because nix's usage of it is kind of horribly messy,,
1.35871E+17,Drakonis#1712,2021-07-03,no,,
3.58051E+17,hazel#0271,2021-07-03,suckless dot org,,
1.35871E+17,Drakonis#1712,2021-07-03,suckless is a place on the internet,,
1.35871E+17,Drakonis#1712,2021-07-03,it sucks,,
3.58051E+17,hazel#0271,2021-07-03,it sucks a lot,,
3.58051E+17,hazel#0271,2021-07-03,they're a group of bad C programmers that make software popular with intense UNIX minimalists,,
3.58051E+17,hazel#0271,2021-07-03,also they're literally nazis,,
3.58051E+17,hazel#0271,2021-07-03,sinit is one of their pieces of software that I built my init on,,
3.58051E+17,hazel#0271,2021-07-03,anyway,,
1.35871E+17,Drakonis#1712,2021-07-03,there be dragons,,
2.66505E+17,notjack#9941,2021-07-03,oh jeez üò¨,,
3.58051E+17,hazel#0271,2021-07-03,yeah unfortunately I spent a lot of time in high school in some of those unix minimalist communities,,
3.58051E+17,hazel#0271,2021-07-03,and being Jewish I wasn't very happy to find out who I was talking to,,
3.58051E+17,hazel#0271,2021-07-03,anyway,,
3.58051E+17,hazel#0271,2021-07-03,not opening that can of worms rn,,
2.66505E+17,notjack#9941,2021-07-03,the unix-fascism intersection is real and infuriating,,
3.58051E+17,hazel#0271,2021-07-03,right?!,,
1.35871E+17,Drakonis#1712,2021-07-03,also have you run hurd yet?,,
1.35871E+17,Drakonis#1712,2021-07-03,"this is not a trick question, there is no wrong answer, only hurd",,
3.58051E+17,hazel#0271,2021-07-03,I think I tried to run it in vbox once and it panicked,,
2.66505E+17,notjack#9941,2021-07-03,relatable,,
1.35871E+17,Drakonis#1712,2021-07-03,it seems it will unlock the incredible ability to run on multiple cores...,,
1.35871E+17,Drakonis#1712,2021-07-03,what a time to be alive,,
4.90866E+17,JOST GRANT#1516,2021-07-03,"The distro built off Guix really dropped the ball; It so could've been ""GNUDist"" lool",,
4.90866E+17,JOST GRANT#1516,2021-07-03,"My basement 'intel nuc' styled computer is running on NixOS and I'm pretty happy with it -- been thinking of moving my Pinephone as-well. Guix is nice, but not even close to mature enough to consider investing ""real time"" into it imho ... like they JUST got LVM support after like near a decade this past December.",,
4.90866E+17,JOST GRANT#1516,2021-07-03,"Honestly I'd move all my machines over to NixOS if I could get https://github.com/containers/toolbox working on it; And launching graphical apps from it like you can in Fedora / Silverlue. Looks like it'd be `easy enough` to get it running of an Arch base image too, which is nice.",,
4.90866E+17,JOST GRANT#1516,2021-07-03,"It makes the barrier to entry a LOT lower; And can ""slide by"" and/or ease into the workflow without feeling completely choked.",,
4.1228E+17,xgqt#8370,2021-07-04,">just added lvm
to the installer or pkgs?",,
7.73175E+17,meowüé∫#2842,2021-07-04,This is unfortunately true. I used to be a part of a cat-v adjacent tech minimalist group called Bitreich. The name should've tipped me off in the first place. üò¨,,üò≠ (2)
7.73175E+17,meowüé∫#2842,2021-07-04,I silently left when I realised they have no qualms tolerating toxicity.,,
4.1228E+17,xgqt#8370,2021-07-04,"lmao, something like this exist?",,
7.73175E+17,meowüé∫#2842,2021-07-04,"Yeah, gopher://bitreich.org",,
1.30231E+17,sarna#3904,2021-07-04,where do y'all find stuff like that? I'd like to belong somewhere too :mew:,,
1.30231E+17,sarna#3904,2021-07-04,~~except nazi groups ofc~~,,
2.66505E+17,notjack#9941,2021-07-04,well I like to think you all can belong here if you wish :meowblush:,,meowblushcool (5)
1.30231E+17,sarna#3904,2021-07-04,~~I'm sorry but I'm taking a break until this whole situation with Mr Felleisen clears up~~,,‚ù§Ô∏è (1)
2.00451E+17,nzo#9173,2021-07-04,can somebody help me check equality/difference between two nattural numbers,,
2.00451E+17,nzo#9173,2021-07-04,i've set it up so,,
2.00451E+17,nzo#9173,2021-07-04,"(define-type Nat 
  (U 'Zero Successor)) 

(define-struct Sucessor
  ([n : Nat])",,
3.58051E+17,hazel#0271,2021-07-04,90% sure just `equal?` would work,,
2.00451E+17,nzo#9173,2021-07-04,loooooooool,,
2.00451E+17,nzo#9173,2021-07-04,i was trying to do pattenr matching,,
2.00451E+17,nzo#9173,2021-07-04,no it doesnt actually,,
2.00451E+17,nzo#9173,2021-07-04,@hazel,,
3.58051E+17,hazel#0271,2021-07-04,damn,,
4.90866E+17,JOST GRANT#1516,2021-07-04,No installer support afaik; As a package it's been there for a long-time but you couldn't run your root partition on-top of it (LVM) till recently (December of last-year).,,
2.00451E+17,nzo#9173,2021-07-04,any ideas,,
3.58051E+17,hazel#0271,2021-07-04,let me get to a computer,,üíØ (1)
4.1228E+17,xgqt#8370,2021-07-04,"ok, so LVM couldn't be used in guix system configuration?",,
4.90866E+17,JOST GRANT#1516,2021-07-04,"Eh, to be fair it could've just be 'le edgy' name and not ""that"" on the nose or anything.  :^P 

Also I always thought 'suckless' 'cat-v' stuff was very meh; But I also don't like C and see way more value in uber configurable systems over minimastic ones.   lol",,
3.58051E+17,hazel#0271,2021-07-04,immediate question: is this homework @nzo,,üòÜ (1)
2.00451E+17,nzo#9173,2021-07-04,no im actually just learning racket,,
4.90866E+17,JOST GRANT#1516,2021-07-04,"Yeah, for YEARS (like near a decade). As-said I think this may of been limited to the root partition but I never bothered to investigate because I was in ""nerf or nothing"" mode. lol",,
3.58051E+17,hazel#0271,2021-07-04,"ok so first off, use `struct` instead of `define-struct`, but that's a nitpick",,
3.58051E+17,hazel#0271,2021-07-04,so two `Nat`s are going to be equal if the number of successors in them are equal,,
3.58051E+17,hazel#0271,2021-07-04,so basically you can just recursively traverse through both,,
2.00451E+17,nzo#9173,2021-07-04,yeah thats how i was thinking about it at first,,
3.58051E+17,hazel#0271,2021-07-04,and if either of them are zero without the other one being zero,,
3.58051E+17,hazel#0271,2021-07-04,they aren't equal,,
2.00451E+17,nzo#9173,2021-07-04,Yeah your p much saying we need to count the number of S's in each,,
3.58051E+17,hazel#0271,2021-07-04,yes,,
3.58051E+17,hazel#0271,2021-07-04,"well not ""count"" literally",,
3.58051E+17,hazel#0271,2021-07-04,you would do it recursively,,
2.00451E+17,nzo#9173,2021-07-04,why can't we just use n?,,
2.00451E+17,nzo#9173,2021-07-04,doesnt n tell you how many S's there are,,
3.58051E+17,hazel#0271,2021-07-04,"as in, S (S Z) and S (S Z) would be equal if and only if S Z and S Z are equal",,
3.58051E+17,hazel#0271,2021-07-04,S Z and S Z are equal if and only if Z and Z are equal,,
3.58051E+17,hazel#0271,2021-07-04,Z and Z are equal trivially,,
3.58051E+17,hazel#0271,2021-07-04,"as for a false case,
S (S (S Z)) and S (S Z) would be equal iff S (S Z) and S Z are equal, which is equal iff S Z and Z are equal, which is false",,
2.00451E+17,nzo#9173,2021-07-04,i understand the logic of it,,
3.58051E+17,hazel#0271,2021-07-04,use `match*` probably,,
2.00451E+17,nzo#9173,2021-07-04,but hhow do i implement a function that 'removes' S's incrementally until  one side gets to just Z,,
3.58051E+17,hazel#0271,2021-07-04,how comfortable are you with general functional programming,,
2.00451E+17,nzo#9173,2021-07-04,im maybe 5 hours into coding in my entitre life,,
3.58051E+17,hazel#0271,2021-07-04,"read ""how to design programs""",,
2.00451E+17,nzo#9173,2021-07-04,where,,
3.58051E+17,hazel#0271,2021-07-04,https://htdp.org,,
3.58051E+17,hazel#0271,2021-07-04,otherwise known as The Only Good CS1 (/s),,
2.00451E+17,nzo#9173,2021-07-04,what part applies herre,,
3.58051E+17,hazel#0271,2021-07-04,if you're 5 hours into programming you should just read this book altogether,,
3.58051E+17,hazel#0271,2021-07-04,technically this (structural recursion) is chapter 2 -- but I would recommend just. reading the book,,
3.58051E+17,hazel#0271,2021-07-04,if you're new to programming this is where I would start,,
4.90866E+17,JOST GRANT#1516,2021-07-04,@hazel There's also the EdX courses (which they might be running through) which is roughly based around it as corusework,,
3.58051E+17,hazel#0271,2021-07-04,yeah those exist,,
3.58051E+17,hazel#0271,2021-07-04,the lectures for IU's 211 are also still up iirc,,
1.33911E+17,MisterMentat#0331,2021-07-04,The book is so good!,,
2.00451E+17,nzo#9173,2021-07-04,@hazel figured it out going thru structural recursion,,üëç (1)
2.00451E+17,nzo#9173,2021-07-04,"not asking for an answer here, but how woul du go about converting this to a string instead of integers",,
2.00451E+17,nzo#9173,2021-07-04,cuz u cant use recursions on strings,,
1.35871E+17,Drakonis#1712,2021-07-04,"psh, naming crisis averted",,
1.35871E+17,Drakonis#1712,2021-07-04,systemd-nspawn is what you want lol,,
1.35871E+17,Drakonis#1712,2021-07-04,this sounds like a catch-22,,
1.35871E+17,Drakonis#1712,2021-07-04,"you don't want to invest time in it because it isnt mature, but how does it become mature if people don't invest time in it?",,
2.00451E+17,nzo#9173,2021-07-04,@hazel,,
3.58051E+17,hazel#0271,2021-07-04,busy right now sorry,,
4.90866E+17,JOST GRANT#1516,2021-07-04,"""Crisis' more like a dream-come-true; looool. Guix is not great branding tbh, because so many people understand it's a play on 'geeks' because of the lack of french experience. I do like that it ""looks"" close to Guile though. Guile / Guix. lol",,
2.00451E+17,nzo#9173,2021-07-04,ah ok,,
4.90866E+17,JOST GRANT#1516,2021-07-04,"I'll take anything; As-long as it can boot graphical apps and is easy to snapshot and switch between containers. I've used Fedora Toolbox a bit and comfortable with it, also it's waiting to get merged in Nixpkgs so my mind went to that ... but yeah, I'll take next-to-anything at this point. loool",,
2.00451E+17,nzo#9173,2021-07-04,does anyone know if i just use an append function at least,,
2.00451E+17,nzo#9173,2021-07-04,or is it smth else,,
4.90866E+17,JOST GRANT#1516,2021-07-04,"Also yeah, idk ; If LVM support landed like literally 5+ years ago Guix would probably be on all my main machines. Some of my first opensource contributions were actually some basic packages for it -- like closer to a decade ago. I'm less of s-exp fanatic overall nowadays. So ""Nix lang"" is good enough, and you get the benefit of the community being 100x the size and active, and shipping non-free by default (ie: not having to build a custom linux kernel for my wifi-drivers), etc, etc.",,
4.90866E+17,JOST GRANT#1516,2021-07-04,"Different place, different time; I guess.",,
4.90866E+17,JOST GRANT#1516,2021-07-04,@nzo So your question doesn't get buried; I'd ask in #help  tbh,,
2.00451E+17,nzo#9173,2021-07-04,got u,,
1.35871E+17,Drakonis#1712,2021-07-04,the reason why i'd use guix over nix these days isn't really s-exps and more to do with it being much better designed,,
1.35871E+17,Drakonis#1712,2021-07-04,"also, guix is guile nix it seems",,
1.35871E+17,Drakonis#1712,2021-07-04,"eh, names.",,
1.35871E+17,Drakonis#1712,2021-07-04,"also worth pointing out that these days you don't have to build custom kernels to get wifi support, someone's already doing it for you",,
1.35871E+17,Drakonis#1712,2021-07-04,but i suppose it is a bit too late for that at this point,,
4.40139E+17,Parnikkapore#2806,2021-07-04,Is there an equivalent of `compose` that takes arguments in the reverse order?,,
3.58051E+17,hazel#0271,2021-07-04,`lambda~>`,,
2.75501E+17,Plane#0324,2021-07-04,https://docs.racket-lang.org/point-free/index.html#%28part._.Thrush_.Combinator%29,,
2.75501E+17,Plane#0324,2021-07-04,i do really like `threading` (:,,
2.75501E+17,Plane#0324,2021-07-04,https://docs.racket-lang.org/threading/index.html?q=threading,,
2.00451E+17,nzo#9173,2021-07-04,can i put a conditional inside of a pattern matching,,
2.00451E+17,nzo#9173,2021-07-04,or is that not allowed,,
4.40139E+17,Parnikkapore#2806,2021-07-04,"~> is exactly what I'm looking for, thanks!",,
2.75501E+17,Plane#0324,2021-07-04,"`~>` is my favorite thing from that set of things, and i think it can be fairly easy to read.  i like that it's a little arrow pointing to the right",,
2.75501E+17,Plane#0324,2021-07-04,i think of it as being kind of like unix pipes,,
8.14743E+16,jimpjorps#0001,2021-07-04,"yeah, I love threading/piping, it‚Äôs great for stuff like string manipulation or data analysis where you‚Äôve got like half a dozen operations you want to do in sequence",,
8.14743E+16,jimpjorps#0001,2021-07-04,easier to modify than nested procedures and less ugly than a bunch of chained let* assignments,,
8.14743E+16,jimpjorps#0001,2021-07-04,I‚Äôve been learning Julia for work and its Pipes.jl library was one of the first things I looked for,,
4.40139E+17,Parnikkapore#2806,2021-07-05,I was using compose for exactly the same use case,,
4.40139E+17,Parnikkapore#2806,2021-07-05,See https://github.com/parnikkapore/rkt-boincrpc/blob/main/main.rkt#L46,,
7.73175E+17,meowüé∫#2842,2021-07-05,"Oh yes, it was just le edgy, not seriously fascist at all. Still, not a pleasant community. But, well, I don't know what I expected anyway.",,
5.24323E+17,Ben Kenobi#5683,2021-07-05,There‚Äôs a `(? )` form that might be what you want,,
4.90866E+17,JOST GRANT#1516,2021-07-05,"I'm relatively forgiving with 'le edgy' communities because usually they're bursting at the seams with young (sub-20) guys with little life-experience, limited social-skills, and in the realm of software design / architecture -- strong opinions that ""feel"" right but aren't backed by anything; So a weak ideological belief that reality / experience hasn't beaten out of them yet.",,
4.90866E+17,JOST GRANT#1516,2021-07-05,"Some people just grow up to be obnoxious, borderline ""toxic"" (don't use the word lightly) adults... but a LOT of people just are young and dumb.",,
4.90866E+17,JOST GRANT#1516,2021-07-05,"I was certainly a little ""too much"" into LISP when I was 16-24; Like it became a big part of my personality, weirdly",,
7.73175E+17,meowüé∫#2842,2021-07-05,"It's just not worth putting up with them for me, when I've already got enough of my plate and would rather keep the environment clean and leave the floor to actual technical conversations.",,
4.90866E+17,JOST GRANT#1516,2021-07-05,Took being the full-time caretaker for my grandfather for like 4 years and now working in a distribution center for medical-supplies during Covid -- that has really beat me into some kind of reality and/or nuance. lol,,
4.90866E+17,JOST GRANT#1516,2021-07-05,"Completely fair and reasonable; Just take solace in the fact that MOST of them will normalize and be functional / normal ""enough"". lol",,
7.73175E+17,meowüé∫#2842,2021-07-05,I sure hope so!,,
4.90866E+17,JOST GRANT#1516,2021-07-05,"Can't say I'm not cringe; But getting older starting from a similar origin / point , I've certainly chilled / normalized a LOT. Some people plateau early as-well and are somewhat fixed but again **most** people have this potential for growth.",,
7.14999E+17,gingerydoo#7461,2021-07-05,This time we did a few hands of _Here to Slay_ and some VR. Finished off by watching some true crime and Gorefield fan animations.,,
1.35871E+17,Drakonis#1712,2021-07-05,"ah, nice.",,
4.66395E+17,oaktownsam#0815,2021-07-05,(its_happening.gif),https://cdn.discordapp.com/attachments/618895179343986688/861750005412528128/unknown.png,üéâ (1)
2.75501E+17,Plane#0324,2021-07-05,:o,,
2.75501E+17,Plane#0324,2021-07-05,there are a lot of things in the shrubbery syntax i like,,
3.58051E+17,hazel#0271,2021-07-05,the what now syntax,,
8.14743E+16,jimpjorps#0001,2021-07-05,https://github.com/mflatt/rhombus-brainstorming/blob/shrubbery/shrubbery/0000-shrubbery.md,,
4.66395E+17,oaktownsam#0815,2021-07-05,Oh yeah I should link to the new repo https://github.com/mflatt/shrubbery-rhombus-0,,plusone (1)
3.5323E+17,Alex Knauth#4895,2021-07-05,"there are a lot of things in the shrubbery syntax I don't like (compared with s-expressions), but what should I do?",,
1.35871E+17,Drakonis#1712,2021-07-05,rhombus is back?,,
4.90866E+17,JOST GRANT#1516,2021-07-06,"I know there weren't a lot of alternatives out there (that weren't just glorified sweet-expressions lol) but yeah, I think Shrubbery syntax was a clear winner from the start tbh. Glad to see any progress on this front. :^)",,
7.73175E+17,meowüé∫#2842,2021-07-06,I detect some ML influence in the syntax.,,
7.73175E+17,meowüé∫#2842,2021-07-06,"Honestly, it's not too bad.",,
7.73175E+17,meowüé∫#2842,2021-07-06,Much *much* better than the C-style syntax Honu had.,,
7.73175E+17,meowüé∫#2842,2021-07-06,Better than the point-free style of sweet expressions too.,,
7.73175E+17,meowüé∫#2842,2021-07-06,"Like, I don't think this is bad but I still (personally) think it's solving a non-problem.",,
4.90866E+17,JOST GRANT#1516,2021-07-06,"Yeah, was really hard for me to put any real time into Honu... syntax just felt so clunky to me.",,
7.73175E+17,meowüé∫#2842,2021-07-06,I've always liked Pyret better than Honu.,,
7.73175E+17,meowüé∫#2842,2021-07-06,https://www.pyret.org/,,
4.90866E+17,JOST GRANT#1516,2021-07-06,AFAICT in some ways it's a play for more relevance in places where Python would otherwise be taught. Funnily enough was actually going to mention Pyret kinda fills this slot as-well,,
4.90866E+17,JOST GRANT#1516,2021-07-06,Though it's not really a racket-lang anymore,,
4.90866E+17,JOST GRANT#1516,2021-07-06,"hosted on js directly iirc, now",,
4.90866E+17,JOST GRANT#1516,2021-07-06,"I think if you have trivial prior experience with JS & Python, for better-or-worse a 'shrub syntax' styled Racket variant is just going to be less scary / more approachable.",,
4.90866E+17,JOST GRANT#1516,2021-07-06,I don't think the arguments against S-Exps are the strongest; But clearly it's a deterrent on some level imo,,
4.66395E+17,oaktownsam#0815,2021-07-06,I liked honu syntax.  Also it didn't require many changes to the default reader iirc.,,
4.90866E+17,JOST GRANT#1516,2021-07-06,"I mean, to be fair I don't / didn't hate it or anything; Just that I wasn't like excited by the prospect. Maybe it was lack of software in it in the first-place to spark my imagination -- who knows.",,
7.73175E+17,meowüé∫#2842,2021-07-06,"Yeah, you're right. I take it back, there's indeed a problem of students hating Racket because it doesn't look like JavaScript or Python.",,
4.90866E+17,JOST GRANT#1516,2021-07-06,"@meowüé∫ I think it's a social problem as-much as technical. You want to be similar enough where you're able to grab students who are weary of things with not much mindshare &  hopefully it acts like ""gateway drug"" . Once they get comfortable in 'Rhombus' some may dig into the host-lang / the  (Racket proper) ecosystem a bit more.",,
7.73175E+17,meowüé∫#2842,2021-07-06,I doubt students would do that but you never know.,,
4.90866E+17,JOST GRANT#1516,2021-07-06,"Keyword `some`; Assuming you get decent adoption in academia , even a super small 'turnover rate' that end up at Racket would be a net-positive.",,
4.90866E+17,JOST GRANT#1516,2021-07-06,"In some ways it's about exposure; I'd assume if you didn't learn to program via a Lisp (well, probably Scheme lol) -- you just are completely unaware of a given ecosystem. Racket (and/or related technologies) aren't exactly mainstream. I know people with like zero technical-skill that have at least HEARD of Javascript and/or Python. This compounds on itself, because societally it's viewed as an 'easy / simple and productive language' which is what pushes into places where Scheme used to have some relative dominance (namely the educational sphere).",,
4.90866E+17,JOST GRANT#1516,2021-07-06,"I think Pyret was a good play at this market; But it looked TOO close to Python where the value-proposition wasn't / isn't ""clear enough"" of why would you use this over something really mainstream like Python. Plus it didn't (maybe still doesn't) have certain power-features like Macros , why is certainly a selling-point in some circles.",,
4.90866E+17,JOST GRANT#1516,2021-07-06,The web-ide thing was pretty nice / novel though in this space. Well probably not in JS-land but I don't know enough. lol,,
4.90866E+17,JOST GRANT#1516,2021-07-06,well more of an editor x repl.,,
2.75501E+17,Plane#0324,2021-07-06,"imagine you learned to read alto clef playing viola, and you got really good at it, and you never heard of treble or bass clef.  but you just got *so much* practice that the instant you see a notehead resting on top of the staff, you play an A without thinking about it",,
2.75501E+17,Plane#0324,2021-07-06,"then one day you start to learn another instrument, and it uses the treble clef",,
2.75501E+17,Plane#0324,2021-07-06,"which is basically the same thing, but *all the notes are off by one spot*",,
2.75501E+17,Plane#0324,2021-07-06,"so now you have all this practice with one system, you know instinctively what all the notes are.  this note is A, that note is D, and so on",,
2.75501E+17,Plane#0324,2021-07-06,"and now you have this other system, equally easy to learn, that you never used before",,
2.75501E+17,Plane#0324,2021-07-06,"but since you're so used to the one you learned, you keep getting mixed up",,
2.75501E+17,Plane#0324,2021-07-06,"when you see that notehead resting atop the staff, you *know* without thinking that it's an A, but it's actually a G",,
2.75501E+17,Plane#0324,2021-07-06,"so you have to keep reminding yourself, oh, this is different, i have to do it this way",,
2.75501E+17,Plane#0324,2021-07-06,"if you persevere, it becomes just as easy as the other system.  or you could give up and go back to doing what you were doing before",,
2.75501E+17,Plane#0324,2021-07-06,"and some people might give up because there's a feeling of resistance, like this has no *reason* to be different, why do i *have* to do it this way",,
2.75501E+17,Plane#0324,2021-07-06,"(maybe a clumsy metaphor, but i tried.  lol)",,
8.14743E+16,jimpjorps#0001,2021-07-06,"the problem's as much on the teaching and administrative side as it is on the student side, too, you have to be able to find instructors and departments that are willing to learn a new syntax themselves and successfully sell it to new students without giving off that deadly aura of ""this is just a fake baby language nobody really uses""",,
4.90866E+17,JOST GRANT#1516,2021-07-06,"I think I get what you're getting at; But also tired after work so maybe I'm off lool -- at a certain point if you use a syntax that is too-close to another people are going to make comparisons (I think unfairly) between two given languages even if it happens to be mostly superficial. I remember looking into Nim and everyone's public opinion on was ""It's fast Python"" ... like no, it's basically a modern-day sleek Pascal with real AST Macros. lol",,
4.90866E+17,JOST GRANT#1516,2021-07-06,Not very Python-y at all besides short-syntax and indentation based; But it was enough for people to draw that comparison... all the time.,,
8.14743E+16,jimpjorps#0001,2021-07-06,"it took forever for universities outside the bleeding edge to switch away from trying to teach C++ and Java to non-CS majors even though they are extremely hostile to brand-new programmers, just because of professor and administrator attitudes towards friendlier experiences like Python",,üëÄ (1)
4.90866E+17,JOST GRANT#1516,2021-07-06,"Well and nowadays it's just as-much as ""we need to teach them languages they can actually use `in the real world`"" compared to ""just"" teaching concepts",,
4.90866E+17,JOST GRANT#1516,2021-07-06,"""Okay class, we're going to write our first-program it's called hello-world and is typically seen as one of the easiest programs you can write, first we start with`public static void main`  -- ignore this part for now.""  looool",,
8.14743E+16,jimpjorps#0001,2021-07-06,yeah exactly,,
8.14743E+16,jimpjorps#0001,2021-07-06,"you handwave a ton of stuff, end the semester after a couple confusing weeks on pointers and never come back to any of the handwaved stuff, and just leave the impression that programming is a thing for CS majors and you should be glad you never have to do it again",,
4.90866E+17,JOST GRANT#1516,2021-07-06,One of the neater things about Scala3 for me is that they just hide most of this stuff now in a `@main` annotation. lool,,
8.14743E+16,jimpjorps#0001,2021-07-06,"that's one of the things I like about HTDP, that they repeatedly say ""yeah, you might not ever have to actually touch a programming language again, but you'll probably do things that are *like* programming in the future so understanding how to formally translate an idea into instructions is good for you to learn""",,
4.90866E+17,JOST GRANT#1516,2021-07-06,Well that's a big issue too I think; Higher education has been very systems-programming specific from my (limited / indirect tbf) experience. Like it's not about the art of how learning how to structure things and/or think programatically as-much as learning about specific implementation details  /quirks to fit that domain.,,
4.90866E+17,JOST GRANT#1516,2021-07-06,at least historically; looks like Python has slowly won (or at least making / taking MAJOR ground)*,,
4.90866E+17,JOST GRANT#1516,2021-07-06,"Yeah, love the preface saying that we all 'program' in one way or another.",,
4.90866E+17,JOST GRANT#1516,2021-07-06,Okay the HTDP2e does make an appeal like this. .. but think I'm remembering SICP because this is not the emotional tone I recall. lol,,
4.90866E+17,JOST GRANT#1516,2021-07-06,"Yeah, it was SICP lol
> Educators, generals, dieticians, psychologists, and parents program.  Armies,
> students, and some societies are programmed.  An assault on large problems
> employs a succession of programs, most of which spring into existence en route.
> These programs are rife with issues that appear to be particular to the problem
> at hand.  To appreciate programming as an intellectual activity in its own
> right you must turn to computer programming; you must read and write computer
> programs‚Äîmany of them.  It doesn‚Äôt matter much what the programs are about or
> what applications they serve.  What does matter is how well they perform and
> how smoothly they fit with other programs in the creation of still greater
> programs.  The programmer must seek both perfection of part and adequacy of
> collection.  In this book the use of ‚Äúprogram‚Äù is focused on the creation,
> execution, and study of programs written in a dialect of Lisp for execution on
> a digital computer.  Using Lisp we restrict or limit not what we may program,
> but only the notation for our program descriptions.",,
4.90866E+17,JOST GRANT#1516,2021-07-06,Guess it's more saying we are programmed as-well. lool,,
4.90866E+17,JOST GRANT#1516,2021-07-06,fuzzy-logic / fuzzy-memories,,
8.14743E+16,jimpjorps#0001,2021-07-06,"looking at my alma mater, the first/required CS course for each major is either Python or Java for CS majors based on an entrance exam, Python for architects, MATLAB for engineers, Excel and SQL for business majors",,
4.90866E+17,JOST GRANT#1516,2021-07-06,Business Majors be like https://www.youtube.com/watch?v=iCeOEQVUWZ0 loooooool,,
4.90866E+17,JOST GRANT#1516,2021-07-06,"""We can make Fortnite in Excel; Someone call MS!!!""",,
5.34547E+17,nullchinchilla#3746,2021-07-06,how hard would it be to write a #lang that compiles down to WASM?,,
7.73175E+17,meowüé∫#2842,2021-07-06,Something like this? https://github.com/Bogdanp/racket-wasm/blob/master/wasm-lib/private/compiler.rkt,,
6.46114E+17,samth#3420,2021-07-06,"@Alex Knauth if what you want is to keep using s-exps, then you should just do that. if there are particular issues with shrubbery notation, then you should raise them/participate in the discussion generally",,
3.5323E+17,Alex Knauth#4895,2021-07-06,"My main issue is that it doesn't make a 1-to-1 correspondence between itself at ""well indented"" s-expressions",,
6.46114E+17,samth#3420,2021-07-06,what do you mean by that?,,
3.5323E+17,Alex Knauth#4895,2021-07-06,"Something like Wraith should allow translations in both directions, both well-indented-s-expression to wraith, and wraith to well-indented-s-expression.",,
3.5323E+17,Alex Knauth#4895,2021-07-06,"A shrubbery expression can translate to an s-expression, but a ""special"" s-expression that doesn't represent the whole range of s-expressions, there are many ""special forms"" within it at the reader level that aren't obvious",,
6.46114E+17,samth#3420,2021-07-06,I'm confused; are you unhappy about the function from shrubbery to s-exps not being injective (extra forms) or not being onto (some s-exps inexpressible)?,,
6.46114E+17,samth#3420,2021-07-06,"I think all s-exps are expressible (seems bad if that's not the case) but the extra forms are easy to fix because you can just write them, a la #%app",,
3.5323E+17,Alex Knauth#4895,2021-07-06,"In normal s-expressions `#%app` is introduced by the macro-expander, not the reader, so writing a bunch of `#%app`s in ""output"" s-expressions is not necessary for mapping them back to ""input"" s-expressions",,
3.5323E+17,Alex Knauth#4895,2021-07-06,That's different from `#%dot` and the shrubbery froms,,
6.46114E+17,samth#3420,2021-07-06,I agree that it's different but I still don't see why it's bad.,,
3.5323E+17,Alex Knauth#4895,2021-07-06,"I love s-expressions, and so I would like to be able to go ""back and forth"" between the new syntax and s-expressions without these special forms getting in the way. That's why I would rather have something like Wraith:
https://github.com/cwebber/racket2-rfcs/blob/wraith/wraith/wraith.md
Where I could convert from a Wraith expression to an S-Expression, edit the S-Expression however I want (as long as it's well-indented), and convert back to a Wraith expression that still looks just as normal as the original Wraith expression, without special forms",,
7.73175E+17,meowüé∫#2842,2021-07-06,Interesting.,,
2.14881E+17,Moinate#6061,2021-07-06,For me as a bystander it would be interesting to hear a conjectural use. Like somehow the wraith approach makes source transformation tooling easier/better or something? Like IDE cleanup ops is the only thing that comes to mind where you would read the transformer code. More uses in mind?,,
3.5323E+17,Alex Knauth#4895,2021-07-06,"I guess part of it is editor operations, things like Paredit and DrRacket's paren-highlighting and expression-selecting, but my main thoughts were (1) ease of transition, porting code back and forth, and (2) ease of writing macros and other code-transformations using the same simplicity s-expressions already provide",,
4.62028E+17,StephenD#5938,2021-07-06,"I‚Äôm quite interested in the rhombus developments but I won‚Äôt stop using the racket-sexp syntax.  I‚Äôll probably use both. Two first-class syntaxes makes it clear that racket is more than a compiler* and an ide 
(I still come across people who think it is interpreted)",,
4.62028E+17,StephenD#5938,2021-07-06,"What __are__ you meant to call the bundle of things that comprise Racket the software?
* toolchain - maybe? Not very descriptive
* development environment - makes it sound like an ide but it‚Äôs more than that
* language development kit - it‚Äôs more than that
* distribution - not very descriptive and makes it sound like a Linux distro",,
4.83487E+17,jest#6646,2021-07-06,wait so what will happen to the chez scheme backend? i presume rhombus will still use it?,,
5.24323E+17,Ben Kenobi#5683,2021-07-06,"I do like the idea of being able to write macros closer to regular Racket style and have them just work. I havent dug into shrubbery notation much, but it seems (based on Alex‚Äôs comments and the Wraith document) like there‚Äôs enough extra machinery in the equivalent sexp‚Äîreminds of trying to write macros in languages where ast manipulation is not so elegant (i think it was elm or elixir)? Otoh, unless it‚Äôs procedural macros, Racket‚Äôs macros do less ast manipulation in general thanks to syntax-parse and templates.",,
6.46114E+17,samth#3420,2021-07-06,"@jest Rhombus is the name for a new #lang, roughly, with a different syntax and differnet functions",,
6.46114E+17,samth#3420,2021-07-06,it isn't a proposal for changes to the runtime system etc,,
4.83487E+17,jest#6646,2021-07-06,"i want faster and leaner binaries, and vscode parameter hints üòå",,
4.83487E+17,jest#6646,2021-07-06,sbcl speed!,,
6.46114E+17,samth#3420,2021-07-06,@Ben Kenobi the idea is that you can still write macros in much the same way you do now,,üëç (1)
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-06,in what ways does it solve issues that wisp (whitespace to sexp transpiler) had? https://www.draketo.de/software/wisp (scroll to the bottom to see sort of hacky / unnatural whitespace code for more fringe sexp cases),,
3.5323E+17,Alex Knauth#4895,2021-07-06,"By ""the bottom"" do you mean the Discussion section between Sylvain Benner and Arne Babenhauserheide? If so, here are some of those examples in Wraith syntax:

Sylvain Benner - 03:24
```
let [var1 value1
     var2 value2]
  dostuff var1 var2
```

Arne Babenhauserheide - 09:08
```
defun foo ()
  bar

doublelet
  [foo bar]
  [bla foo]

if equals wrong
          isright? stuff
   dostuffÔªø
```",,
3.5323E+17,Alex Knauth#4895,2021-07-06,"The place where I disagree with Arne Babenhauserheide is here:
> avoid being just a leaky abstraction where the writers still have to use parentheses at times
I don't think the need to use parentheses for things like lists of 0 or 1 elements is ""leaky"", and so I would rather have `()` than a newline, `:`, and a 2nd newline",,
2.64024E+17,Eutro#0016,2021-07-06,I really dislike semantic whitespace,,
2.64024E+17,Eutro#0016,2021-07-06,to this extent at least,,
2.64024E+17,Eutro#0016,2021-07-06,it doesn't feel clear where things are delimited,,
2.64024E+17,Eutro#0016,2021-07-06,and it just makes me uncomfortable,,
8.14743E+16,jimpjorps#0001,2021-07-06,"yeah, I can't totally explain why I don't like that representation much",,
8.14743E+16,jimpjorps#0001,2021-07-06,like it feels too fragile,,
8.14743E+16,jimpjorps#0001,2021-07-06,but there's definitely something my subconscious doesn't like about it,,
3.5323E+17,Alex Knauth#4895,2021-07-06,"Another thing I believe Wraith does better than previous ""whitespace lisp"" projects is allowing parentheses in more places without changing meaning inside them. For example in the `if` example above:
```
if equals wrong
          isright? stuff
   dostuff
```
The grouping between `equals` and `stuff` might feel fragile, so you have the option to wrap just that in parentheses without affecting the meaning of indented expressions inside that:
```
if (equals wrong
           isright? stuff)
   dostuff
```
still means the same thing, and the same with:
```
(if (equals wrong
            (isright? stuff))
    dostuff)
```",,
3.5323E+17,Alex Knauth#4895,2021-07-06,"Previous ""whitespace lisp"" projects would not have preserved that meaning",,
2.66505E+17,notjack#9941,2021-07-06,"I _don't_ like surface syntax systems that are defined by ""here's how to turn this into the equivalent s-expression"" actually",,üëÜ (3)
2.66505E+17,notjack#9941,2021-07-06,like sweet-expressions and related works,,
2.66505E+17,notjack#9941,2021-07-06,"they're too clunky for people who don't like s-expressions, and the people who do like s-expressions can just... use s-expressions",,
2.75501E+17,Plane#0324,2021-07-06,i feel like sweet expressions can be nice sometimes but i end up not using them and just using s-expressions,,
2.75501E+17,Plane#0324,2021-07-06,"there are some clunkier parts of sweet-exp syntax that i don't think i would ever use, as well",,
2.75501E+17,Plane#0324,2021-07-06,so i would always end up falling back on s-exps if i used sweet-exps more,,
2.75501E+17,Plane#0324,2021-07-06,the thing is that i actually just kind of like s-exps üëÄ,,
5.24323E+17,Ben Kenobi#5683,2021-07-06,"I have to admit that after reading many of the examples, the shrubbery stuff has grown on me a bit. I'm not sure I would use it much, but I rather like the ML feel of it",,
2.75501E+17,Plane#0324,2021-07-06,yeah i do think it's cool,,
2.75501E+17,Plane#0324,2021-07-06,one thing i like about haskell a lot is the sugar for matching and guards,,
2.75501E+17,Plane#0324,2021-07-06,it's really striking when you do scheme for a while and then you do haskell though just *how much* sugar there is,,
2.75501E+17,Plane#0324,2021-07-06,it's not like python where it's a bit overwhelming because of the morass of semantics but it's definitely an experience,,
5.24323E+17,Ben Kenobi#5683,2021-07-06,"I _love_ SML's matching and everything-is-curried approach. I quickly looked up `partial`/`comp` when starting with Clojure, and then `curry`/`compose[1]` with Racket. Matching is a little less concise, even with `racket/match`, but I tend to use an explicit `match` in a function body in ML anyways, so nbd.",,
8.14743E+16,jimpjorps#0001,2021-07-06,"yeah, I‚Äôve been learning F# recently and it has a nice balance of syntax forms that comes from that ML heritage",,
2.75501E+17,Plane#0324,2021-07-06,i've never actually never used f# but the syntax looked interesting,,
8.14743E+16,jimpjorps#0001,2021-07-06,https://fsharpforfunandprofit.com/posts/convenience-active-patterns/ is one of the features I find really satisfying,,
2.75501E+17,Plane#0324,2021-07-06,"that looks pretty cool, though `(|Int|_|)` is starting to give me perl flashbacks",,
2.75501E+17,Plane#0324,2021-07-06,"(i say this lovingly, i still secretly like perl)",,
2.66505E+17,notjack#9941,2021-07-06,reminds me of some ideas I saw floating around for how Java pattern matching would work,,
2.66505E+17,notjack#9941,2021-07-06,"I don't remember it very well so this is full of my own spin on it but:
```java
pattern intString(int i) {
  try {
    // ""input"" is a magic variable like ""this""
    i = Integer.parseInt(input);
  } catch (NumberFormatException e) {
    throw new PatternMismatchException(e);
  }
}
```",,
2.66505E+17,notjack#9941,2021-07-06,"and that would let you write
```
switch ""5"" {
  case intString(i):
    System.out.println(i);
}
```",,
4.90866E+17,JOST GRANT#1516,2021-07-06,This is EXACTLY my intuition.,,
4.90866E+17,JOST GRANT#1516,2021-07-06,"When you 'compromise' at this level, the chances at making either party sufficiently happy drops ... a LOT imo",,
2.34164E+17,python#3213,2021-07-06,the fact that there is no other syntax is what makes s-expressions cool,,
2.34164E+17,python#3213,2021-07-06,"but people do want other syntactic features sometimes, and those kinds of things usually don't mix very well with s-expressions",,
4.90866E+17,JOST GRANT#1516,2021-07-07,Not sure what this means; Can you expand on this?,,
2.00548E+17,Efi#0041,2021-07-07,is there a better way to write `(map (lambda (i) (hash-ref a-hash i)) a-list-of-keys)`? is there a builtin hash-select or something I missed?,,
2.75501E+17,Plane#0324,2021-07-07,"well, it does look a little neater as a comprehension
```scheme
(for/list ([key a-list-of-keys])
  (hash-ref a-hash key))
```",,
5.24323E+17,Ben Kenobi#5683,2021-07-07,`(map (curry hash-ref a-hash) keys-list)`,,
2.00548E+17,Efi#0041,2021-07-07,"aaah, curry, yummy",,
4.66395E+17,oaktownsam#0815,2021-07-07,"With fancy-app
```scheme
(map (hash-ref a-hash _) a-list-of-keys)
```",,plusone (1)
1.45564E+17,yrashk#3148,2021-07-07,"I am wondering if there's a way to define an entire raco package in a single file (as opposed to a collection of info.rkt and other files)? I certain cases it'd be really nice to just have a very concise package. To give an example in a different language/ecosystem, here's a bug report template for Rails https://github.com/rails/rails/blob/main/guides/bug_report_templates/generic_gem.rb -- it contains a complete system with the declaration of dependencies.",,
7.14999E+17,gingerydoo#7461,2021-07-07,"Self-plug, but Xiden does this.",,
7.14999E+17,gingerydoo#7461,2021-07-07,"Fair warning that it is a young project at just a year old, but I'd be interested to see if that was helpful.",,
1.45564E+17,yrashk#3148,2021-07-07,"""(raco pkg users) You won‚Äôt mutate your Racket installation when installing software."" I am sold (I also use Nix on my Linux computers üôÇ",,
7.14999E+17,gingerydoo#7461,2021-07-07,I don't use Nix personally. Guix had stronger influence. üòÑ,,
7.14999E+17,gingerydoo#7461,2021-07-07,"But re: your question, the guide shows a toy example where dependency data is expressed inline in a package definition. The same applies to Nth-order dependencies.",,
1.45564E+17,yrashk#3148,2021-07-07,thanks!,,
4.62028E+17,StephenD#5938,2021-07-07,I just found https://rackt-org.github.io/,,
4.62028E+17,StephenD#5938,2021-07-07,It‚Äôs not me I stumbled across it by accident,,
7.14999E+17,gingerydoo#7461,2021-07-07,Neat! If someone does that for Mithril I'm sold.,,
4.66395E+17,oaktownsam#0815,2021-07-08,"Do you prefer 
```scheme
;; function
(with-something a-thing a-thunk)
```
**OR**
```scheme
;; syntax
(with-something a-thing body ...)
```",,
8.14743E+16,jimpjorps#0001,2021-07-08,I'd say the first one,,
3.58051E+17,hazel#0271,2021-07-08,-2,,
3.58051E+17,hazel#0271,2021-07-08,my code just worked the first try,,ü•≥ (4)
3.58051E+17,hazel#0271,2021-07-08,that's not supposed to happen,,
3.58051E+17,hazel#0271,2021-07-08,***what did I mess up***,,
7.14999E+17,gingerydoo#7461,2021-07-08,`make in-place` is a great way to repurpose my laptop as a hot plate.,,"üî• (1),üò≥ (1)"
7.14999E+17,gingerydoo#7461,2021-07-08,87¬∞ C atm,,
2.75501E+17,Plane#0324,2021-07-08,oh gosh,,
2.75501E+17,Plane#0324,2021-07-08,is that normal?  is it having ventilation issues?,,
2.75501E+17,Plane#0324,2021-07-08,i always worry when my laptop gets warm,,
7.14999E+17,gingerydoo#7461,2021-07-08,Fans are not blocked. This laptop model crits over 100¬∞ C.,,
2.75501E+17,Plane#0324,2021-07-08,wow!,,
7.14999E+17,gingerydoo#7461,2021-07-08,But 80¬∞+ is still not fun. I can't put it on my lap.,,
2.75501E+17,Plane#0324,2021-07-08,i've never had a really nice laptop to use for development,,
2.75501E+17,Plane#0324,2021-07-08,i don't know what the more powerful ones are like,,
2.75501E+17,Plane#0324,2021-07-08,that sounds very toasty,,
7.14999E+17,gingerydoo#7461,2021-07-08,I'll comment in #off-topic about that,,
2.66505E+17,notjack#9941,2021-07-08,the first one unless it's used very often,,
3.58051E+17,hazel#0271,2021-07-08,***my code worked the first try again***,,üéâ (3)
3.58051E+17,hazel#0271,2021-07-08,i am popping off today,,
2.66505E+17,notjack#9941,2021-07-08,hell yeah,,
3.58051E+17,hazel#0271,2021-07-08,especially because these two functions were what I thought would be the hardest part of this project,,
3.58051E+17,hazel#0271,2021-07-08,"then again it is a
`; XXX: this is not particularly efficient, but intuitive.`
kind of day",,
3.58051E+17,hazel#0271,2021-07-08,so,,
2.05006E+17,Aggressive Post-It Note#5981,2021-07-08,I think it's more responsible to keep things as procedures when possible so that it's still first-class,,
1.35871E+17,Drakonis#1712,2021-07-08,https://issues.guix.gnu.org/49280,,
1.35871E+17,Drakonis#1712,2021-07-08,guix is now bootstrapping racket from C,,
1.35871E+17,Drakonis#1712,2021-07-08,gotta love the dedication,,
7.14999E+17,gingerydoo#7461,2021-07-08,Nice!,,
7.14999E+17,gingerydoo#7461,2021-07-08,"""Bootstrapping Racket from C"" means compiling Racket using the C compiler built for Guix, right?",,
1.35871E+17,Drakonis#1712,2021-07-08,hmm,,
1.35871E+17,Drakonis#1712,2021-07-08,i dont see mes anywhere though,,
1.35871E+17,Drakonis#1712,2021-07-08,https://issues.guix.gnu.org/49280#4 since i cant link to specific lines in the diff,,
1.35871E+17,Drakonis#1712,2021-07-08,mes is used to bootstrap gcc which is used to compile racket,,
1.35871E+17,Drakonis#1712,2021-07-08,so it is still part of the chain,,
1.35871E+17,Drakonis#1712,2021-07-08,"look up ""index cf0240be5c..4e2d498364 100644"" to get to the diff explaining how it is done",,üíØ (1)
2.66505E+17,notjack#9941,2021-07-09,thinking about transducers and reducers again,,plusone (5)
2.66505E+17,notjack#9941,2021-07-09,I want to make them faster but I think that might require redesigning parts of the underlying protocol,,
2.66505E+17,notjack#9941,2021-07-09,tricky,,
5.24323E+17,Ben Kenobi#5683,2021-07-09,Related: looking at rebellion inspired two thoughts:,,
5.24323E+17,Ben Kenobi#5683,2021-07-09,(1) rebellion is the ultimate advent-of-code language,,üòÅ (1)
5.24323E+17,Ben Kenobi#5683,2021-07-09,(2) rebellion's datatypes bring what I miss from SML to racket,,‚ù§Ô∏è (1)
1.30231E+17,sarna#3904,2021-07-09,now only to bring rebellion to the racket core,,
4.66395E+17,oaktownsam#0815,2021-07-09,I've wondered about using something like turnstile to remove contracts from transducers that participate in typing.,,
2.66505E+17,notjack#9941,2021-07-09,"I was thinking more like, changing `make-transducer` and `make-reducer` to accept functions that mutate a state instead of returning it, so they don't have to allocate `variant` objects",,
2.66505E+17,notjack#9941,2021-07-09,"the reducers, options, and comparators seem like the best candidates for that imo",,
4.66395E+17,oaktownsam#0815,2021-07-09,Yeah that would probably help,,
2.66505E+17,notjack#9941,2021-07-09,I was also thinking of having a subtype for reducers that never terminate early,,
2.66505E+17,notjack#9941,2021-07-09,then the reduction process could skip checking for that,,
1.30231E+17,sarna#3904,2021-07-09,`#lang big racket`,,
1.30231E+17,sarna#3904,2021-07-09,:meowsmile:,,
2.66505E+17,notjack#9941,2021-07-09,I think a `racket/comparator` library would be a relatively easy sell,,
2.66505E+17,notjack#9941,2021-07-09,the comparators would probably have to do things to fit the rest of the racket stdlib better though,,
2.66505E+17,notjack#9941,2021-07-09,like implement `prop:procedure` as `<` so that `sort` still works,,
1.30231E+17,sarna#3904,2021-07-09,structs can be applied as procedures?? TIL :mew:,,
2.66505E+17,notjack#9941,2021-07-09,yes! it's handy,,
1.30231E+17,sarna#3904,2021-07-09,okay whaaaat it looks awesome,,
1.30231E+17,sarna#3904,2021-07-09,wh-what if I have a mutable field in it,,üò≥ (4)
1.30231E+17,sarna#3904,2021-07-09,*is going to commit unspeakable sins*,,
2.64024E+17,Eutro#0016,2021-07-09,Isn't that just like closing over a variable that you mutate?,,
1.30231E+17,sarna#3904,2021-07-09,please don't explode my brain more,,
2.66505E+17,notjack#9941,2021-07-09,"yes, except you get a predicate, can control how it prints, and all the other goodies having an actual nominal type to hang things on gives you",,
2.66505E+17,notjack#9941,2021-07-09,turns out those OOP folks were on to something,,
1.30231E+17,sarna#3904,2021-07-10,OOP but better :meowblushcool:,,
1.30231E+17,sarna#3904,2021-07-10,my brother wants to learn programming - should I tell him about racket or just stick with python? :meow:,,
1.30231E+17,sarna#3904,2021-07-10,"he's about 30, wants to become more employable",,
7.94955E+17,Laurent O#6627,2021-07-10,"Depends on the time frame, but ideally he should learn both, and more. If time is short, I'd say Python first, unfortunately. Or java maybe.",,
7.73175E+17,meowüé∫#2842,2021-07-10,"It depends if he wants to ""learn to code"" or ""learn programming"".",,
7.73175E+17,meowüé∫#2842,2021-07-10,The former isn't too difficult ‚Äî it takes a few months of training to be employed as a coder for one language.,,
7.73175E+17,meowüé∫#2842,2021-07-10,But it takes some unlearning to switch from the former to the latter.,,
1.30231E+17,sarna#3904,2021-07-10,ah hmm. I should probably ask him then,,
1.30231E+17,sarna#3904,2021-07-10,"for java/C# he'd have to learn these enterprise frameworks though, right",,
4.62028E+17,StephenD#5938,2021-07-10,https://twitter.com/wilton_quinn/status/1413760076876115971?s=21,,
7.73175E+17,meowüé∫#2842,2021-07-10,:meowblushcool:,,
2.64024E+17,Eutro#0016,2021-07-10,oh my god,,
2.64024E+17,Eutro#0016,2021-07-10,lang that supports writing identifiers in latex?,,
7.73175E+17,meowüé∫#2842,2021-07-10,Those look like regular Unicode characters to me.,,
7.73175E+17,meowüé∫#2842,2021-07-10,Agda style,,
6.87833E+17,grey#8674,2021-07-10,"Indeed, the majority of LaTeX mathematical symbols are now part of Unicode. The American Mathematical Society and the (La)TeX communities have worked with Unicode to make that happen.",,
2.34164E+17,python#3213,2021-07-10,one cool feature of julia is that it lets you use those characters in identifiers and the repl (and most IDEs) lets you type them by latex name then press tab to turn it into the character,,
4.62028E+17,StephenD#5938,2021-07-10,"Same in racket

https://docs.racket-lang.org/drracket/Keyboard_Shortcuts.html#%28part._.La.Te.X_and_.Te.X_inspired_keybindings%29",,
4.83487E+17,jest#6646,2021-07-10,is the racket slack chat* more active than here?,,
1.30231E+17,sarna#3904,2021-07-10,yes,,
4.83487E+17,jest#6646,2021-07-10,@_@ hope everyone migrates.... i hate how slack doesnt keep history among other things,,
3.58051E+17,hazel#0271,2021-07-10,I hate Discord and Slack about equally,,salute (1)
4.83487E+17,jest#6646,2021-07-10,"only thing bad about discord is that its not foss and self hosted imo, everything about the ux is just miles better than irc, slack, skype, everything that came before",,
1.30231E+17,sarna#3904,2021-07-10,all chat platforms suck in one way or another,,
1.30231E+17,sarna#3904,2021-07-10,if irc kept logs by default (like it does with a bouncer) it'd be really nice for this type of chat imo,,
4.1228E+17,xgqt#8370,2021-07-10,1,,
4.1228E+17,xgqt#8370,2021-07-10,go [matrix] guys,,
4.66395E+17,oaktownsam#0815,2021-07-10,by conversations:  irc < slack < discord,,
1.30231E+17,sarna#3904,2021-07-10,"racket irc is more active, really?",,
1.30231E+17,sarna#3904,2021-07-10,I must join there :mew:,,
4.62028E+17,StephenD#5938,2021-07-10,I thought that meant irc was least active?,,
1.30231E+17,sarna#3904,2021-07-10,oh I can't read :meowwarp:,,
8.14743E+16,jimpjorps#0001,2021-07-10,the main thing I like about slack is the side threads that can branch off a line in the main chat,,
4.66395E+17,oaktownsam#0815,2021-07-10,In irc there may be 1-2 discussions / day,,
4.66395E+17,oaktownsam#0815,2021-07-10,very very very low traffic,,
2.34164E+17,python#3213,2021-07-10,"I didn't know that, nice to see drracket make it so easy",,
2.34164E+17,python#3213,2021-07-10,"unfortunately, it's a bit hard to discover that",,
5.24323E+17,Ben Kenobi#5683,2021-07-10,"I think this discord is more active than here, but I think the Slack gets more ""how do I‚Ä¶"" questions. re: history, see the archive project (WIP)",,üíØ (1)
1.30231E+17,sarna#3904,2021-07-10,there's more people on slack too,,
4.40139E+17,Parnikkapore#2806,2021-07-10,or xmpp if you want a more irc experience,,
1.30231E+17,sarna#3904,2021-07-11,"personally I use convos, it's pretty good. dead simple to set up and it's connected to irc 24/7",,
1.30231E+17,sarna#3904,2021-07-11,is it popular? I've never used it,,
4.40139E+17,Parnikkapore#2806,2021-07-11,"It is very close to Matrix, but it's older",,
4.40139E+17,Parnikkapore#2806,2021-07-11,I guess it's popular among some circles?,,
4.40139E+17,Parnikkapore#2806,2021-07-11,"XMPP is slower with features and is less trendy. However, the implementations generally use less resources as a result",,
4.40139E+17,Parnikkapore#2806,2021-07-11,You may know it by the name Jabber if you're old enough,,
1.30231E+17,sarna#3904,2021-07-11,I've seen jabber somewhere but I don't think I've used it,,
1.30231E+17,sarna#3904,2021-07-11,seems like a lot of companies use xmpp as a messaging protocol?,,
1.30231E+17,sarna#3904,2021-07-11,"whatsapp, zoom, grindr lol",,
4.40139E+17,Parnikkapore#2806,2021-07-11,apparently,,
4.40139E+17,Parnikkapore#2806,2021-07-11,I am talking about the one that the Conversations app uses,,
1.30231E+17,sarna#3904,2021-07-11,https://conversations.im/,,
1.30231E+17,sarna#3904,2021-07-11,this one?,,
4.40139E+17,Parnikkapore#2806,2021-07-11,yup,,
4.40139E+17,Parnikkapore#2806,2021-07-11,https://dino.im/  also speaks it,,
1.30231E+17,sarna#3904,2021-07-11,neat! can the different clients speak to each other?,,
4.40139E+17,Parnikkapore#2806,2021-07-11,"These two can, save for videocalls (which are in beta for Dino)",,
4.40139E+17,Parnikkapore#2806,2021-07-11,Some others (say Gajim) have weirder compatibility,,
1.30231E+17,sarna#3904,2021-07-11,oh that's cool üëÄ,,
4.1228E+17,xgqt#8370,2021-07-11,thunderbird has XMPP support,,
1.35871E+17,Drakonis#1712,2021-07-11,"so things i'm surprised about guile, it can be used for writing new langs with it, much like racket does.",,
1.35871E+17,Drakonis#1712,2021-07-11,truly a wild time we live in,,
1.35871E+17,Drakonis#1712,2021-07-11,https://www.gnu.org/software/guile/manual/guile.html#Compiler-Tower this is pretty great,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-11,"> At this point we take a detour from the impersonal tone of the rest of the manual. Admit it: if you‚Äôve read this far into the compiler internals manual, you are a junkie.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-11,"I've found it and got excited about these internals previously, and I had a bright idea to make (lower level, I think tree-il) guile transpiler to lobster",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-11,"sadly what I hoped to be easy, was utter infeasible if not impossible to manage frankenstein's monster",,
1.30231E+17,sarna#3904,2021-07-11,Andy Wingo (one of the two main maintainers) said they want to bring the `#lang` thing to guile too!,,
1.35871E+17,Drakonis#1712,2021-07-11,oughta do that,,
1.35871E+17,Drakonis#1712,2021-07-11,as far as i'm concerned,,
1.35871E+17,Drakonis#1712,2021-07-11,"guile does not have #lang, but it offers the ability to evaluate code from another language and return the output from inside any other lang",,
1.35871E+17,Drakonis#1712,2021-07-11,"it has what it needs to be competitive with racket, it simply needs more people writing things with it",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-11,it's lacking at least one major thing to be competitive with racket,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-11,an actual windows support,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-11,"I've said it before, but putting windows into ""yeah we'll come around to it some day"" puts a hefty stick into the wheels when it comes to choice",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-11,"sure, programmer's prefer linux and it's so much better, etc etc, but I think it's ignorant to not recognize that generally software is written for general public, not programmers, and that general public is still overwhelmingly sitting on windows",,
5.24323E+17,Ben Kenobi#5683,2021-07-11,"Otoh, sometimes making software for windows requires a knowledgeable windows dev‚Äîie someone to put the time in and own it. Not saying this can be an existing core person that learns windows, but that comes at a cost",,
8.14743E+16,jimpjorps#0001,2021-07-11,I have a feeling the lack of official Windows support goes beyond simple inability to dedicate the resources,,
8.14743E+16,jimpjorps#0001,2021-07-11,"like the installation page only mentions Guix, gNewSense and Trisquel, they know the audience they're developing for",,
1.35871E+17,Drakonis#1712,2021-07-11,"i dont know, i think windows support isn't that easy",,
1.35871E+17,Drakonis#1712,2021-07-11,"well, the install page only mentions that due to the whole ""its gnu software"" and whatnot",,
1.35871E+17,Drakonis#1712,2021-07-11,could definitely be improved though,,
1.35871E+17,Drakonis#1712,2021-07-11,but guile is available on every linux distribution AND macs,,
1.35871E+17,Drakonis#1712,2021-07-11,"no windows though, but that's because nobody actually put the effort there",,
1.35871E+17,Drakonis#1712,2021-07-11,"emacs has windows builds, even if it isnt a first class target",,
1.33911E+17,MisterMentat#0331,2021-07-11,And I‚Äôm thankful for that every day at work.,,
1.30231E+17,sarna#3904,2021-07-12,"but what will you make on windows for the general public - GUI apps, right? then you'd need a GUI framework that actually feels good and native on windows. and that's hard :meowwarp:",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-12,"guile has nice FFI infrastructure, finding and using a gui framework shouldn't be a major problem",,
4.90866E+17,JOST GRANT#1516,2021-07-12,Haven't used it; But probably the mostly maintained Guile GUI lib out there https://github.com/spk121/guile-gi,,
4.90866E+17,JOST GRANT#1516,2021-07-12,Don't know how native Gtk feels on Windows though. lol,,
4.90866E+17,JOST GRANT#1516,2021-07-12,Instantly makes me more interested in Guile lool,,
1.30231E+17,sarna#3904,2021-07-12,"yea but it was only vaguely mentioned as a ""good thing to have"", nothing concrete yet",,
1.56786E+17,williewillus#8490,2021-07-12,re above whatsapp no longer uses xmpp,,üá´ (1)
4.66395E+17,oaktownsam#0815,2021-07-12,XMPP is a weird protocol,,
4.66395E+17,oaktownsam#0815,2021-07-12,"It's good that there is an open p2p type ""chat"" protocol, but the design of it is quite odd.",,
4.62028E+17,StephenD#5938,2021-07-12,Wasn‚Äôt xmpp originally Jabber from the lotus notes guy?,,
4.66395E+17,oaktownsam#0815,2021-07-12,"It was Jabber,  I don't remember any Lotus Notes (Mitch Kapor?) connection.",,
4.66395E+17,oaktownsam#0815,2021-07-12,"Mitch Kapor did do an open source startup that was trying to develop a ""next generation"" collaboration tool.  IIRC there was a book about how it fizzled out.  A friend of a friend was working there.",,
4.66395E+17,oaktownsam#0815,2021-07-12,https://en.wikipedia.org/wiki/Chandler_(software),,
4.62028E+17,StephenD#5938,2021-07-12,That‚Äôs my faulty memory!,,
3.58051E+17,hazel#0271,2021-07-12,"emacs users: what's your preferred way to do auto paren balancing in lisp code
`parinfer` broke for me, and its successor, `parinfer-rust`, is awfully buggy",,
3.58051E+17,hazel#0271,2021-07-12,trying out `lispy` but it's a lot,,
1.30231E+17,sarna#3904,2021-07-12,"same, I don't use anything atm and balance them by hand",,
1.30231E+17,sarna#3904,2021-07-12,lispy is not intuitive at all for me,,
2.64024E+17,Eutro#0016,2021-07-12,paredit,,
2.64024E+17,Eutro#0016,2021-07-12,works for me,,
3.58051E+17,hazel#0271,2021-07-12,"it's also because lispy is a bit, uh, designed around parens only",,
3.58051E+17,hazel#0271,2021-07-12,[] are kind of out of the way by default,,
3.58051E+17,hazel#0271,2021-07-12,"it's annoying with my current symbols layer
which needs a refactor anyway, but...",,
1.30231E+17,sarna#3904,2021-07-12,isn't paredit on by default? I use doom and am confused :mew:,,
1.30231E+17,sarna#3904,2021-07-12,"well, racket mode doesn't insert them correctly either for me so :mew: I think I even disabled auto parens",,
4.90866E+17,JOST GRANT#1516,2021-07-12,Time to make a 'last-minute' breaking change to R7RS Large ... ? loool,,
4.90866E+17,JOST GRANT#1516,2021-07-12,Honestly just really glad to see a lot of implementations are picking this idea up,,
1.30231E+17,sarna#3904,2021-07-12,last minute? they're still working on it,,
4.90866E+17,JOST GRANT#1516,2021-07-12,@sarna hence the 'the' lool,,
1.30231E+17,sarna#3904,2021-07-12,ah it'd be breaking :mew: got it,,
4.90866E+17,JOST GRANT#1516,2021-07-12,They've been working on since I was in like HS over a decade ago iirc. loool,,
1.30231E+17,sarna#3904,2021-07-12,yea now it's mostly one person pushing it,,
1.30231E+17,sarna#3904,2021-07-12,Jon Cowan IIRC?,,
4.90866E+17,JOST GRANT#1516,2021-07-12,"Nah, his name is Jon Schema",,
1.30231E+17,sarna#3904,2021-07-12,üé∫üé∫üé∫,,üòÇ (1)
4.90866E+17,JOST GRANT#1516,2021-07-12,Thank god you got that; That was one of the dumbest references / puns I've made in a LONG time. Would've been so weird to try to explain that. I'm DYING loool,,
4.90866E+17,JOST GRANT#1516,2021-07-12,I can't imagine; The weight of all those parens on one man's shoulders?,,
4.90866E+17,JOST GRANT#1516,2021-07-12,"Honestly though, that's pretty crazy that it's 'one guy'. I remember YEARS ago there were like 3-5 iirc",,
1.30231E+17,sarna#3904,2021-07-12,"I mean it's mostly him, leading it all. others are contributing of course",,
1.30231E+17,sarna#3904,2021-07-12,"also maybe something's changed, but that's my impression and what I heard :meowwarp:",,
1.30231E+17,sarna#3904,2021-07-12,https://github.com/johnwcowan/r7rs-work/graphs/contributors?from=2010-02-07&to=2021-07-12&type=c,,
1.30231E+17,sarna#3904,2021-07-12,"John is #1 with 350K lines, the #2 person has like 8K",,
4.90866E+17,JOST GRANT#1516,2021-07-12,"Reminds me of when I first was looking into Gambit (Scheme) and saw Feeley had 5.2 MILLION LOC & next contributor ""only"" had 18k loool",,
4.90866E+17,JOST GRANT#1516,2021-07-12,It's always crazy to me how much these things really depend nontrivally on 'one person'.,,
4.90866E+17,JOST GRANT#1516,2021-07-12,But yeah with R7RS I assume there's gotta be more 'interplay' outside of just Cowan,,
4.90866E+17,JOST GRANT#1516,2021-07-12,"Well tbh ... the Gambit contributor graph is gonna be really funky because they ship their exported C code; So yeah, not representative but the visual is really jarring if not comical.",,
1.30231E+17,sarna#3904,2021-07-12,"ah, that's why the repo is full of unreadable C - it's generated",,
4.90866E+17,JOST GRANT#1516,2021-07-12,I somewhat ironically didn't look into Gambit for MONTHS because I assumed it's main implementation was in C based on the 'language breakdown' thing on Github; Evidently a few percentage points are in 'actual' C not just as an IR-target -- but yeah a vast-majority is in Scheme proper.,,
4.90866E+17,JOST GRANT#1516,2021-07-12,Really wish it was in like an 'export' or 'bootstrap' directory and not intermingled with the rest of the source. :^P,,
7.73175E+17,meowüé∫#2842,2021-07-12,"John Cowan is the de facto driver of the R7RS process since he's very experienced and well-respected in the community but pretty much the entirety of R7RS Large is made up of SRFIs, so they definitely go through the community.",,
7.73175E+17,meowüé∫#2842,2021-07-12,They get voted on for inclusion too.,,
7.73175E+17,meowüé∫#2842,2021-07-12,"So if you have a problem with a specific part, you bring it up in the specific SRFI's mailing list before the draft is finalised.",,
7.73175E+17,meowüé∫#2842,2021-07-12,The lack of democratic process was one of the biggest criticisms of R6RS after all.,,
4.90866E+17,JOST GRANT#1516,2021-07-12,"Ah, neat that makes more sense; so he's more of an editor / organizer role. I'm aware of the SFRI as a process but not really how they integrate into the standard-process. In practice I've mostly seen them as just 'extension targets' for specific implementations.",,
1.30231E+17,sarna#3904,2021-07-13,oh that's cool! thanks for taking me out of my ignorance :meowblushcool:,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-13,"note that it's John's personal repo, basically, most commits will be his. Stuff written there will move to https://github.com/pre-srfi , and then submitted as srfi proper later. If you look at https://github.com/johnwcowan/r7rs-work/blob/master/ColorDockets.md which outlines planned options for voting, you'll note it's plenty of things that weren't designed by him, such as srfi's by other people or libs of concrete implementations",,"üëç (1),üôè (1)"
4.6331E+17,alex27#9605,2021-07-14,"hey all. I've got problem installing racket
after adding ppa to my ubuntu 20 and installing `apt-get install racket`
I'm getting error
```:~ Œª ~ racket
Welcome to Racket v8.1 [cs].
standard-module-name-resolver: collection not found
  for module path: (lib ""racket/init"")
  collection: ""racket""
  in collection directories:
   /home/alex/.racket/8.1/collects
   /usr/share/racket/collects/
```
how can I solve that?",,
2.14881E+17,Moinate#6061,2021-07-15,Simplest suggestion? Dump the PPA and run the installer from the Racket web site.,,
1.30231E+17,sarna#3904,2021-07-15,"hrmm, I'm building a tool for work and I think racket could help here :meowsmile: 
basically we need a ""single source of truth"" thingy to generate configs in different formats (for different tools) from",,
1.30231E+17,sarna#3904,2021-07-15,"I was thinking ""let's just use yaml"" since everybody here knows it, but! nobody will know the schema for that new tool of mine",,
1.30231E+17,sarna#3904,2021-07-15,my idea would be to have the schema/types right in the config file and then make the tool validate that the config matches the schema/types,,
1.30231E+17,sarna#3904,2021-07-15,"I considered dhall for this, but it's too weird :meowwarp:",,
1.30231E+17,sarna#3904,2021-07-15,do y'all know something even remotely similar built with racket so I'd have a point of reference? or have any ideas what the format would look like?,,
5.24323E+17,Ben Kenobi#5683,2021-07-15,Here‚Äôs a quick google üôÇ https://www.google.com/search?q=yaml+schema+validator didn‚Äôt look for racket specifically though,,
1.30231E+17,sarna#3904,2021-07-15,"yeah well I can validate it afterwards, but I'd prefer my users having a readable thing to look at when writing the config",,
1.30231E+17,sarna#3904,2021-07-15,getting it right the first time imo is better than getting guided by errors every time,,
1.30231E+17,sarna#3904,2021-07-15,"I can document it, but if it's not directly used in validation it will get desynchronized with the actual code sooner or later",,
2.34164E+17,python#3213,2021-07-15,Is there a racket library for dealing with different color spaces? (CIE color spaces especially),,
6.46114E+17,samth#3420,2021-07-15,@alex27 that sounds like a bug; can you report it here: https://github.com/takikawa/racket-ppa,,
4.6331E+17,alex27#9605,2021-07-15,"@samth thanks. I will try to do that again in docker, because I have installed racket now and don't wanna broke it with my shenanigans",,plusone (1)
4.83487E+17,jest#6646,2021-07-15,">  Parallel and incremental GC is another one like that, but that's one that hasn't yet made it into CS.
https://www.reddit.com/r/Racket/comments/okiuae/beautiful_racket_thoughts_on_racket_chez_scheme/h58x37l/

i thought this did make it into racket cs",,
4.83487E+17,jest#6646,2021-07-15,"https://blog.racket-lang.org/2021/02/racket-v8-0.html
> Racket CS has better parallel garbage collection, a 10%‚Äì30% reduction in the size of generated code, and various targeted optimizations.",,
6.46114E+17,samth#3420,2021-07-16,"@jest That is available in Racket CS, but wasn't merged into the upstream Chez Scheme repository (as is true for lots of other changes)",,
4.83487E+17,jest#6646,2021-07-16,"ohhh, thought he was talking about it making it into racket cs and cs itsel",,
3.58051E+17,hazel#0271,2021-07-16,"when you refer to upstream chez you mean cisco/ChezScheme, not racket/ChezScheme, right?",,
3.58051E+17,hazel#0271,2021-07-16,"(the latter repo mirrors the chez that's in the source tree, right?)",,
4.83487E+17,jest#6646,2021-07-16,think so yeah,,
6.46114E+17,samth#3420,2021-07-16,"@hazel, yes, that's what I meant (and yes that's how the trees work)",,
1.35871E+17,Drakonis#1712,2021-07-16,"there's no drracket for android, right?",,
1.35871E+17,Drakonis#1712,2021-07-16,or anything to conveniently run racket or scheme besides using termux or userland,,
7.73175E+17,meowüé∫#2842,2021-07-16,"Nope. Your Scheme options are limited to bare repls, unfortunately.",,
7.73175E+17,meowüé∫#2842,2021-07-16,"There are some repl apps but they run JScheme, a Scheme subset in Java.",,
2.64024E+17,Eutro#0016,2021-07-16,Termux with Emacs is good enough for me,,
2.64024E+17,Eutro#0016,2021-07-16,Though the Racket version is quite old,,
1.30231E+17,sarna#3904,2021-07-16,"I have iSH, it's alpine emulating i686 on iOS",,
1.30231E+17,sarna#3904,2021-07-16,there's no official Racket package :(,,
1.30231E+17,sarna#3904,2021-07-16,the only scheme I got working was Guile,,
7.73175E+17,meowüé∫#2842,2021-07-16,TinyScheme also works.,,
7.73175E+17,meowüé∫#2842,2021-07-16,Was Racket CS ported to ARM64?,,
7.73175E+17,meowüé∫#2842,2021-07-16,It was.,,
1.30231E+17,sarna#3904,2021-07-16,yes but iSH emulates i686 for some strange reason,,
1.30231E+17,sarna#3904,2021-07-16,,https://cdn.discordapp.com/attachments/618895179343986688/865696453926191144/image0.jpg,
4.83487E+17,jest#6646,2021-07-16,how small can racket get ? e.g say you want to embedd it as the scripting lang for your game,,
4.83487E+17,jest#6646,2021-07-16,minimal racket is 40MB?,,
4.83487E+17,jest#6646,2021-07-16,BC was 8MB!!,,
1.30231E+17,sarna#3904,2021-07-17,https://docs.racket-lang.org/option-contract/index.html,,
1.30231E+17,sarna#3904,2021-07-17,TIL that exists,,
1.30231E+17,sarna#3904,2021-07-17,why isn't it used more widely?,,
4.66395E+17,oaktownsam#0815,2021-07-17,Not sure.  It looks like it needs more of a guide.,,
4.66395E+17,oaktownsam#0815,2021-07-17,In some ways the API does seem a bit cumbersome.,,plusone (1)
4.66395E+17,oaktownsam#0815,2021-07-17,"There is probably more motivating examples in the source material:
https://users.cs.northwestern.edu/~robby/pubs/papers/oopsla2013-dff.pdf",,
4.66395E+17,oaktownsam#0815,2021-07-17,Which I have not read yet,,
4.90866E+17,JOST GRANT#1516,2021-07-17,"@jest Guessing it's mostly just not optimized for this at the moment, and has a bunch of stuff tacked on? 5x as-large seems like a fair amount of overhead for the Chez backend (but just guessing -- have no idea about any implementation details).",,
4.90866E+17,JOST GRANT#1516,2021-07-17,"Also besides the obvious niceties granted  by #lang , I'm not exactly sure if Racket would be the 'best' implementation for the job.  Haven't tried it myself, but it seems 
https://github.com/ashinn/chibi-scheme is near ideal if one of the big goals is a small runtime + modern Scheme.",,
4.83487E+17,jest#6646,2021-07-17,chez scheme installer on github says its 20mb so racket cs minimal is double that buttt thats not too badd,,
4.83487E+17,jest#6646,2021-07-17,are the binary files even compressed already? no further way to reduce it?,,
7.73175E+17,meowüé∫#2842,2021-07-17,There are ways to compress ELF files like UPX.,,
7.73175E+17,meowüé∫#2842,2021-07-17,But don't do it on Scheme bytecode compiled into native executables because they don't even tolerate `strip`ping.,,
4.40139E+17,Parnikkapore#2806,2021-07-17,"Gotta say, Racket indents have crept into more places in my programming lately...",https://cdn.discordapp.com/attachments/618895179343986688/866164030392369152/Screenshot_20210718_104219.png,
2.66505E+17,notjack#9941,2021-07-18,red black trees are the worst üò≠,,
1.30231E+17,sarna#3904,2021-07-18,the performance chart is a bit underwhelming I'd say :mew:,,
8.64244E+17,BadStroke#0209,2021-07-18,"Sorry to ask a dumb question guys. Now that Racket is using CS/Chez, Does it output purely native machine code PE/ELF ect or is it still a mix of native and bytecode? Sorry I am very new to all of this.",,
2.66505E+17,notjack#9941,2021-07-18,I think it's machine code,,
7.73175E+17,meowüé∫#2842,2021-07-18,"That's not a dumb question at all, don't worry about it.",,
1.30231E+17,sarna#3904,2021-07-18,"I wonder why isn't startup instantaneous then, after you use `raco exe`?",,
1.30231E+17,sarna#3904,2021-07-18,and why do we still need racket to run it?,,
7.73175E+17,meowüé∫#2842,2021-07-18,Native code doesn't mean no startup overhead. :meow:,,
7.73175E+17,meowüé∫#2842,2021-07-18,And you always need the runtime to run executables.,,
7.73175E+17,meowüé∫#2842,2021-07-18,"C needs libc, unless it's statically compiled (ie libc is shoved into the executable), for example.",,
1.30231E+17,sarna#3904,2021-07-18,*becomes enlightened*,,
1.30231E+17,sarna#3904,2021-07-18,that's why sometimes binaries don't work if libc is too old?,,
7.73175E+17,meowüé∫#2842,2021-07-18,"Yeah, executables depend on certain symbols and their definitions.",,
7.73175E+17,meowüé∫#2842,2021-07-18,"For example, it might depend on a function the previous versions don't provide.",,
7.73175E+17,meowüé∫#2842,2021-07-18,Or a deprecated function new versions no longer contain.,,
7.73175E+17,meowüé∫#2842,2021-07-18,Go is one of the few languages that can easily bundle the runtime (including the garbage collector) into the executable but it comes at a cost.,,
7.73175E+17,meowüé∫#2842,2021-07-18,"Namely, the compiler needs to be constantly updated for syscalls for different Linux versions on different architectures.",,
7.73175E+17,meowüé∫#2842,2021-07-18,Because they can't rely on libc to do that.,,
7.73175E+17,meowüé∫#2842,2021-07-18,Linux makes no guarantees of ABI stability after all.,,
1.30231E+17,sarna#3904,2021-07-18,"that cleared up a lot of my misconceptions, thank you! :meowblush:",,
7.73175E+17,meowüé∫#2842,2021-07-18,No problem!,,
7.73175E+17,meowüé∫#2842,2021-07-18,You can actually hardcode syscalls in assembly if you don't want your runtime to rely on libc.,,
7.73175E+17,meowüé∫#2842,2021-07-18,Loko Scheme does that.,,
1.30231E+17,sarna#3904,2021-07-18,the crazy scheme!,,
7.73175E+17,meowüé∫#2842,2021-07-18,Because it only targets x86-64.,,
1.30231E+17,sarna#3904,2021-07-18,"also, the trade-off with go-style static executables is that you typically don't have access to the compiler on the machine you run the binary",,
1.30231E+17,sarna#3904,2021-07-18,"if you want to make changes, you either need to install it, or ship a different binary",,
7.73175E+17,meowüé∫#2842,2021-07-18,(It also targets barebones x86-64 and comes with device drivers for that.),,
7.73175E+17,meowüé∫#2842,2021-07-18,Dynamic executables have that problem too.,,
7.73175E+17,meowüé∫#2842,2021-07-18,Anything short of interpreted code,,
7.73175E+17,meowüé∫#2842,2021-07-18,Not sure if `raco dist` bundles the `racket` executable itself alongside `libracket`.,,
7.73175E+17,meowüé∫#2842,2021-07-18,I wouldn't be surprised if it does because Racket is kinda unique.,,
7.73175E+17,meowüé∫#2842,2021-07-18,I still have no idea how linklets work. :meow:,,
1.30231E+17,sarna#3904,2021-07-18,raco dist puts a `racket` executable in the directory,,
1.30231E+17,sarna#3904,2021-07-18,idk how different it is from the regular racket,,
7.73175E+17,meowüé∫#2842,2021-07-18,Hmst,,
7.73175E+17,meowüé∫#2842,2021-07-18,It made sense for bytecode but not sure what requires it in native code.,,
7.73175E+17,meowüé∫#2842,2021-07-18,Maybe some runtime syntax expander thingamabob. :meowleft:,,
7.73175E+17,meowüé∫#2842,2021-07-18,No clue,,
1.30231E+17,sarna#3904,2021-07-18,"hmm, this might be a super dumb question, but if I want to distribute my multi-file project I only `raco exe` the main file and then run `raco dist`?",,
1.30231E+17,sarna#3904,2021-07-18,or do I `raco exe` all the files or something,,
1.30231E+17,sarna#3904,2021-07-18,~~(`raco build`???)~~ not a real command lol,,
7.73175E+17,meowüé∫#2842,2021-07-18,"`raco exe` does `raco make` too, so it builds and prepares every file for you.",,
7.73175E+17,meowüé∫#2842,2021-07-18,"You call `raco dist` after that, in case the target platform doesn't have Racket installed.",,
1.30231E+17,sarna#3904,2021-07-18,"every file, even if I only `raco exe main.rkt`?",,
7.73175E+17,meowüé∫#2842,2021-07-18,It tucks in a Racket runtime and all the required libraries.,,
7.73175E+17,meowüé∫#2842,2021-07-18,"I think so, given `main.rkt` `require`s appropriate files.",,
7.73175E+17,meowüé∫#2842,2021-07-18,"I haven't used it in more than a year so my memory is hazy,",,
1.30231E+17,sarna#3904,2021-07-18,"ah neat, I'll keep reading the docs",,
1.30231E+17,sarna#3904,2021-07-18,"> When the ‚Äúbytecode‚Äù file contains machine code, as for the CS variant of Racket
lol",,
7.73175E+17,meowüé∫#2842,2021-07-18,"But yes, `raco exe` lets you distribute it. If you call `raco dist` on top of it, it lets you distribute it for platforms without Racket too.",,
7.73175E+17,meowüé∫#2842,2021-07-18,It never quite worked for me because I was using Arch and my glibc version was too new.,,
7.73175E+17,meowüé∫#2842,2021-07-18,So it didn't run on other people's machines.,,mew (1)
1.30231E+17,sarna#3904,2021-07-18,"> However, raco exe can package code together with its run-time support to form an executable
hmm, seems like `raco exe` already embeds the runtime",,
1.30231E+17,sarna#3904,2021-07-18,`distribute` puts the entire racket in there it seems,,
7.73175E+17,meowüé∫#2842,2021-07-18,With all the libraries it `require`s,,
1.30231E+17,sarna#3904,2021-07-18,ahh okay,,
7.73175E+17,meowüé∫#2842,2021-07-18,Also puts `gracket` and `libgracket` if you're using `racket/gui`.,,
7.73175E+17,meowüé∫#2842,2021-07-18,"Gosh, this is a pain to type on phone keyboard.",,
1.30231E+17,sarna#3904,2021-07-18,what are your options when you want to distribute stuff to other people but your glibc version is weird?,,
1.30231E+17,sarna#3904,2021-07-18,compile in docker? :mew:,,
7.73175E+17,meowüé∫#2842,2021-07-18,Build Racket with an old glibc version.,,
7.73175E+17,meowüé∫#2842,2021-07-18,That's actually what people do all the time in other languages as well.,,
7.73175E+17,meowüé∫#2842,2021-07-18,Build for the greatest common denominator.,,
1.30231E+17,sarna#3904,2021-07-18,glibc is backward compatible?,,
7.73175E+17,meowüé∫#2842,2021-07-18,"Oldest macOS still supported, oldest glibc and GTK 3 on Linux etc",,
7.73175E+17,meowüé∫#2842,2021-07-18,"Generally, yes.",,
1.30231E+17,sarna#3904,2021-07-18,":meowwarp: 
my face when computers",,
7.73175E+17,meowüé∫#2842,2021-07-18,Most of the backwards compatibility issues you'll struggle with is cryptography libraries.,,
7.73175E+17,meowüé∫#2842,2021-07-18,libssl/libcrypto,,
1.30231E+17,sarna#3904,2021-07-18,of course,,
7.73175E+17,meowüé∫#2842,2021-07-18,Old programs will depend on deprecated algorithms no longer in modern versions.,,
7.73175E+17,meowüé∫#2842,2021-07-18,"So most distros provide ""compatibility"" libraries providing the old versions.",,
7.73175E+17,meowüé∫#2842,2021-07-18,(which even discourages devs from upgrading sometimes :meow:),,
1.30231E+17,sarna#3904,2021-07-18,:meow:,,
7.73175E+17,meowüé∫#2842,2021-07-18,I recently had to debug a game I bought on Steam because it was hardcoded to require libssl 1.0.0 IIRC and the compat library in the repo was libssl 1.0.3.,,
7.73175E+17,meowüé∫#2842,2021-07-18,Even though they're functionally equivalent.,,
8.64244E+17,BadStroke#0209,2021-07-18,That sounds like a pain,,
7.73175E+17,meowüé∫#2842,2021-07-18,I was on Fedora and couldn't find the old version anywhere else and didn't want to build it from source for that very specific version.,,
1.30231E+17,sarna#3904,2021-07-18,noooo that's so bad lmao,,
7.73175E+17,meowüé∫#2842,2021-07-18,"So I stole the Debian package for a no longer supported version (wheezy?), extracted it and put it in `LD_LIBRARY_PATH` path and it worked.",,
7.73175E+17,meowüé∫#2842,2021-07-18,:meowblushcool:,,
7.73175E+17,meowüé∫#2842,2021-07-18,Thank gods for the debosaur,,
1.30231E+17,sarna#3904,2021-07-18,lmao,,
1.30231E+17,sarna#3904,2021-07-18,nice :meowblushcool:,,
7.73175E+17,meowüé∫#2842,2021-07-18,They shoulda bundled it with the game tbh,,
7.73175E+17,meowüé∫#2842,2021-07-18,I think I had a similar problem with VVVVVV too.,,
1.30231E+17,sarna#3904,2021-07-18,"btw, is there any difference with languages like Ruby? you have to bundle everything when you distribute your app, is it any worse than Racket for example?",,
1.30231E+17,sarna#3904,2021-07-18,I thought Ruby/Python was special in this regard but now idk :mew:,,
7.73175E+17,meowüé∫#2842,2021-07-18,Yup,,
7.73175E+17,meowüé∫#2842,2021-07-18,"There are similar tools that bundle the runtime with the executable, like `ruby-packer`.",,
7.73175E+17,meowüé∫#2842,2021-07-18,"In general, you're expected to install Python, Ruby, Perl etc (and the necessary libraries) natively in order to run the programs on the system.",,
7.73175E+17,meowüé∫#2842,2021-07-18,The same applies to Racket too but no one wants to install it because it's too niche.,,
1.30231E+17,sarna#3904,2021-07-18,yea haha,,
1.30231E+17,sarna#3904,2021-07-18,but with languages like Ruby you shouldn't really use system Ruby I heard,,
1.30231E+17,sarna#3904,2021-07-18,people even told me not to use system Perl haha,,
1.30231E+17,sarna#3904,2021-07-18,(I wanted to use Perl at work for some stuff as it's installed everywhere),,
7.73175E+17,meowüé∫#2842,2021-07-18,It's a whole kettle of fish...,,
7.73175E+17,meowüé∫#2842,2021-07-18,"Python left a terrible taste in my mouth with all the virtualenv, pipenv etc mess.",,
7.73175E+17,meowüé∫#2842,2021-07-18,"Anaconda this, pyenv that",,
1.30231E+17,sarna#3904,2021-07-18,"yeah, and the editors don't play as well as I'd wish with this stuff",,
7.73175E+17,meowüé∫#2842,2021-07-18,Yeah...,,
1.30231E+17,sarna#3904,2021-07-18,"Raku is nice, they let you install several versions of one library",,
7.73175E+17,meowüé∫#2842,2021-07-18,This is one of the appealing points of containers.,,
1.30231E+17,sarna#3904,2021-07-18,and you have `use <language version>` at the top of source files,,
1.30231E+17,sarna#3904,2021-07-18,so you can use system Raku every time basically,,
7.73175E+17,meowüé∫#2842,2021-07-18,"You know the environment you're deploying so you don't need to account for different Python versions, different libraries and how they interact with the rest of the system.",,
1.30231E+17,sarna#3904,2021-07-18,"or stuff like Guix, right? I wouldn't develop on containers :mew:",,
7.73175E+17,meowüé∫#2842,2021-07-18,"No idea, I never got around to trying Guix for devops.",,
7.73175E+17,meowüé∫#2842,2021-07-18,Containers are just supercharged chroot :meowleft:,,üöÄ (1)
1.30231E+17,sarna#3904,2021-07-18,"me neither! and our setup at work involves having like three versions of Ruby installed, so.. uh.. :mew:",,
7.73175E+17,meowüé∫#2842,2021-07-18,Yeah...,,
1.30231E+17,sarna#3904,2021-07-18,"idk how it works, I asked a senior guy and he doesn't know either
""it's a mess"" - the guy :meowwarp:",,
7.73175E+17,meowüé∫#2842,2021-07-18,It's a mess and there are so many tools out there to mitigate the mess.,,
7.73175E+17,meowüé∫#2842,2021-07-18,"pipenv, for example",,
7.73175E+17,meowüé∫#2842,2021-07-18,Or plain old virtualenv.,,
7.73175E+17,meowüé∫#2842,2021-07-18,Each project gets its own Python version and pip packages.,,
7.73175E+17,meowüé∫#2842,2021-07-18,"This is also what Akku does. It doesn't install libraries at a system or user scope but at project level, so you can pin versions per project or have libraries with conflicting names on separate projects.",,
7.73175E+17,meowüé∫#2842,2021-07-18,"A consequence is that it works exclusively for libraries and not for applications or even general libraries that you want to load onto your repl. Well, not without a hack at least.",,
1.30231E+17,sarna#3904,2021-07-18,"I'm using pyenv at work for python stuff, but uh.. it's not ideal",,
1.30231E+17,sarna#3904,2021-07-18,getting the editors to detect the correct env is such a pain when you have multiple projects in one git repo,,
7.73175E+17,meowüé∫#2842,2021-07-18,Yeah,,
1.30231E+17,sarna#3904,2021-07-18,"I even gave up trying to use one editor, I juggle vscode, emacs and vim :mew:",,
1.30231E+17,sarna#3904,2021-07-18,whatever works for that particular situation,,
4.1228E+17,xgqt#8370,2021-07-18,anarchist trees,,‚ù§Ô∏è (1)
2.17712E+17,gomma#4017,2021-07-18,"if i got an m1 macbook, would i have trouble programming with racket?",,
2.17712E+17,gomma#4017,2021-07-18,"can i control timing or clocks, specifically pulses directly in racket?",,
7.73175E+17,meowüé∫#2842,2021-07-18,Which clocks exactly?,,
2.17712E+17,gomma#4017,2021-07-18,"not sure which ones, can i make my own?",,
2.17712E+17,gomma#4017,2021-07-18,is there only one clock in a computer that all other clocks utilize ?,,
4.62028E+17,StephenD#5938,2021-07-18,I think there are at least a couple of M1 Macbook racket users.,,
2.17712E+17,gomma#4017,2021-07-18,since its a different architecture is that gonna pose any problems?,,
2.17712E+17,gomma#4017,2021-07-18,do i just use the sleep command intelligently to control time?,,
2.17712E+17,gomma#4017,2021-07-18,sorry i should have went to #help,,
4.62028E+17,StephenD#5938,2021-07-18,Racket 8.2 released https://discord.com/channels/571040468092321801/716057923943530597/866397827110273044,,üòÄ (2)
2.75501E+17,Plane#0324,2021-07-18,yay!!,,
4.83487E+17,jest#6646,2021-07-18,latest release shaved ~13MB off of minimal and full install :D,,
4.1228E+17,xgqt#8370,2021-07-18,bumping Racket in Gentoo src_preapre-overlay immediately,,plusone (2)
6.90127E+17,hnbeck#2106,2021-07-18,"Hi, I'm interested in AR devices and it would be a dream to build apps for them in Racket. Now, the many devices so far use Android as basis system (NReal and Lynx for example). As far as I've read older posts here in Discord there seems no chance to do Android development (which means in this case including full graphics) with Racket. Is this correct? And same for the .Net world?",,
4.83487E+17,jest#6646,2021-07-18,no i think there is? https://youtu.be/ydyztGZnbNs,,
4.83487E+17,jest#6646,2021-07-18,this was when john carmack was trying to push racket as the main scripting lang and it was running on android,,
4.83487E+17,jest#6646,2021-07-18,until it got swapped to js and something else üòî,,
4.83487E+17,jest#6646,2021-07-18,i dont know the details of how to do it though... maybe some resources online,,
4.66395E+17,oaktownsam#0815,2021-07-18,When I was looking at AR/VR with Oculus last year using JS and WebGL seemed like the path of least resistance.,,
4.66395E+17,oaktownsam#0815,2021-07-18,Like you could just fire up a web server and point the chrome browser in oculus at it and you were good to go,,
4.66395E+17,oaktownsam#0815,2021-07-18,You could probably use RacketScript or urlang if you wanted to still do Racket.,,
1.56786E+17,williewillus#8490,2021-07-18,is there a way to list dependents of a package on the pkg server?,,
2.66505E+17,notjack#9941,2021-07-18,@williewillus I wrote a package to do that https://docs.racket-lang.org/package-analysis/,,
2.66505E+17,notjack#9941,2021-07-18,https://docs.racket-lang.org/package-analysis/Querying_Package_Catalogs.html#%28def._%28%28lib._package-analysis%2Fmain..rkt%29._get-transitive-clients%29%29,,
4.66395E+17,oaktownsam#0815,2021-07-19,Just got a new rpi in time to build new Racket,,"üíØ (2),üçï (2),üçì (3),racketflat (3)"
5.39603E+17,spacey üåå#7238,2021-07-19,one new rackety boi,,
1.35871E+17,Drakonis#1712,2021-07-19,that sounds exactly what anyone would use guix for lol,,
1.35871E+17,Drakonis#1712,2021-07-19,having multiple versions installed in parallel sounds like a wild wild ride,,
1.30231E+17,sarna#3904,2021-07-19,why? you say which version you need in their equivalent of info.rkt,,
1.30231E+17,sarna#3904,2021-07-19,I think if you fire up a repl in your home dir it'll pick up the latest ones,,
5.39603E+17,spacey üåå#7238,2021-07-19,I think rvm (ruby version manager) could also help with that,,
1.35871E+17,Drakonis#1712,2021-07-19,"parallel installs are fine i guess, parallel availability on the the other hand is the challenge",,
1.30231E+17,sarna#3904,2021-07-19,"yea I mostly struggle with python tooling, which is not always picked up well by editors",,
1.30231E+17,sarna#3904,2021-07-19,"and the fact that I have to install pyls, black, flake8 and all this stuff in every virtualenv.. is pain :mew:",,
1.30231E+17,sarna#3904,2021-07-19,what's parallel availability?,,
1.35871E+17,Drakonis#1712,2021-07-19,"basically, you can have multiple versions of the same package on on a machine, but only one can be active at a given time",,
1.35871E+17,Drakonis#1712,2021-07-19,due to file collisions,,
1.56786E+17,williewillus#8490,2021-07-19,is there a way to attach a repl to a running program CL/clojure style,,
5.39603E+17,spacey üåå#7238,2021-07-19,"In Racket, that's not allowed by design, though I think someone made an extension to make CL-like restarts possible",,
5.39603E+17,spacey üåå#7238,2021-07-19,"I've never used a restart before myself, but it seems like a handy feature :)",,
1.56786E+17,williewillus#8490,2021-07-19,>.>,,
1.56786E+17,williewillus#8490,2021-07-19,I have a pretty badly leaking app and I want to debug it,,
1.56786E+17,williewillus#8490,2021-07-19,dump-memory-stats output makes no sense,,
1.56786E+17,williewillus#8490,2021-07-19,don't want to restart to install additional packages/helpers,,
3.58051E+17,hazel#0271,2021-07-19,my build failed on the package server because my default branch is `main` not `master`,,
3.58051E+17,hazel#0271,2021-07-19,this is a certified ?? moment,,
6.87833E+17,grey#8674,2021-07-19,You can specify which branch or tag to use for the build; I think the server assumes `master` by default.,,
6.46114E+17,samth#3420,2021-07-19,"@grey @hazel I think the server now just looks at HEAD and thus gets the default branch, but you should specify so that it works on older Rackets",,
3.58051E+17,hazel#0271,2021-07-19,yeah I set it to `main` now,,
3.58051E+17,hazel#0271,2021-07-19,"time to wait for another index refresh
should be through by the time I get up tomorrow",,
3.58051E+17,hazel#0271,2021-07-19,tests pass on my machine so they must pass on the test server too right,,
3.58051E+17,hazel#0271,2021-07-19,*looks at graphite tests*,,
3.58051E+17,hazel#0271,2021-07-19,right,,
4.66395E+17,oaktownsam#0815,2021-07-19,I've been trying to get good Github Actions that are close enough to the pkg server that I'm confident it will build correctly.,,
2.66505E+17,notjack#9941,2021-07-19,I have finally figured out how I want to use generic interfaces in rebellion's collection APIs,,plusone (2)
5.39603E+17,spacey üåå#7238,2021-07-20,Sweet! :),,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-20,what is relation between rhombus and wraith,,
4.62028E+17,StephenD#5938,2021-07-20,"Wraith  https://github.com/cwebber/racket2-rfcs/blob/wraith/wraith/wraith.md 
is a syntax proposal for  the https://github.com/racket/rhombus-brainstorming project",,
4.62028E+17,StephenD#5938,2021-07-20,Oops - looks like it is a draft proposal - I don‚Äôt think it has been submitted as a pr to https://github.com/racket/rhombus-brainstorming,,
3.5323E+17,Alex Knauth#4895,2021-07-20,"Yes, there are still a couple problems we want to work out on Wraith before submitting it, like how to handle fullwidth-characters, and code-porting functions",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-20,"I see, a use of a new name for what will be a pull request threw me off",,
3.5323E+17,Alex Knauth#4895,2021-07-20,well Shrubbery is a new name too,,
6.46114E+17,samth#3420,2021-07-20,"@oaktownsam you could actually use https://github.com/racket/pkg-build to do it, although that might be overkill",,
7.14999E+17,gingerydoo#7461,2021-07-20,"I vaguely remember asking this as some point, but I can't find where I did.

Why do Racketeers say ""The top-level is hopeless""?",,
7.14999E+17,gingerydoo#7461,2021-07-20,Or similar.,,
2.75501E+17,Plane#0324,2021-07-20,https://gist.github.com/samth/3083053,,
7.14999E+17,gingerydoo#7461,2021-07-20,Nice.,,
7.14999E+17,gingerydoo#7461,2021-07-20,I wasn't expecting that.,,
7.14999E+17,gingerydoo#7461,2021-07-20,Good for #resources?,,
1.35871E+17,Drakonis#1712,2021-07-20,"just replying 9 days late, i recall someone dropping a patch in the guile mailing list that does that",,
1.35871E+17,Drakonis#1712,2021-07-20,"on guile, it'd be syntax sugar for switching langs, as it already has the means to do that",,
1.35871E+17,Drakonis#1712,2021-07-20,https://github.com/mwette/guile-contrib/blob/master/patch-2.2.4/load.patch,,
1.35871E+17,Drakonis#1712,2021-07-20,this is a patch that implements #lang,,
1.35871E+17,Drakonis#1712,2021-07-20,not sure if it merges against guile 3.0.7 but the code exists,,
1.35871E+17,Drakonis#1712,2021-07-20,@gingerydoo is there a roadmap for xiden? i'm a bit curious because the repository hasnt been updated in some time now and i'm unaware of what's next for it,,
5.39603E+17,spacey üåå#7238,2021-07-20,This saying is referenced in https://youtu.be/R-hy8xLlkHA,,
7.14999E+17,gingerydoo#7461,2021-07-20,"Not yet. Thanks for asking. Development is ongoing, but my laptop is out of commission. I'm using my gaming PC until the laptop is fixed.",,
4.62028E+17,StephenD#5938,2021-07-20,Done,,
1.35871E+17,Drakonis#1712,2021-07-20,"ongoing? in which direction, that is :V?",,
4.90866E+17,JOST GRANT#1516,2021-07-21,I  thought it was the name of the 'syntax' ; Not the actual project?,,
2.66505E+17,notjack#9941,2021-07-21,"Yeah, shrubbery and wraith are both (as I understand it) names of possible surface syntaxes for `#lang rhombus`",,üçâ (1)
1.30231E+17,sarna#3904,2021-07-21,this is the closest thing unfortunately https://docs.racket-lang.org/debug/index.html#%28mod-path._debug%2Frepl%29,,
1.30231E+17,sarna#3904,2021-07-21,"ah, I think they don't have this problem",,
1.30231E+17,sarna#3904,2021-07-21,neato! thanks for the link,,
7.73175E+17,meowüé∫#2842,2021-07-21,New emote: :meowangry:,,"üòÇ (2),meowangry (1)"
1.35871E+17,Drakonis#1712,2021-07-21,"https://git.savannah.nongnu.org/cgit/nyacc.git/tree/examples/nyacc/lang/nx-lib.scm#n205 an addendum, you can inline code from other extension langs inside guile using this reader macro added by nyacc",,
1.35871E+17,Drakonis#1712,2021-07-21,"its impressive, really.",,
1.30231E+17,sarna#3904,2021-07-21,Racket be like,https://cdn.discordapp.com/attachments/618895179343986688/867475044035592192/image0.jpg,
1.30231E+17,sarna#3904,2021-07-21,Guile is already faster üò≥,,
6.46114E+17,samth#3420,2021-07-21,faster on what programs/what systems?,,
1.30231E+17,sarna#3904,2021-07-21,on what matters most of course: microbenchmarks https://ecraven.github.io/r7rs-benchmarks/,,
1.30231E+17,sarna#3904,2021-07-21,they have Racket BC there though,,
1.30231E+17,sarna#3904,2021-07-21,"how does the sorting work there, by the way?",,
3.58051E+17,hazel#0271,2021-07-21,racket supports r7rs? news to me,,
4.66395E+17,oaktownsam#0815,2021-07-21,It's in a package,,
4.66395E+17,oaktownsam#0815,2021-07-21,https://pkgs.racket-lang.org/package/r7rs,,
1.30231E+17,sarna#3904,2021-07-21,"every language is just a Racket package, it's common knowledge",,"üíØ (2),‚òùÔ∏è (1)"
4.66395E+17,oaktownsam#0815,2021-07-21,I mean it's not part of the main distribution üôÇ,,
1.30231E+17,sarna#3904,2021-07-21,"I wonder - would you need a package to write R6RS, or can you somehow ""step down"" to write Chez directly?",,
3.58051E+17,hazel#0271,2021-07-21,"so really this is more benchmarking #lang r7rs, not racket, no?",,
3.58051E+17,hazel#0271,2021-07-21,plt-r6rs exists,,
3.58051E+17,hazel#0271,2021-07-21,but it does not take the approach you describe afaik,,
1.30231E+17,sarna#3904,2021-07-21,true! I thought it wouldn't be too different ü§î,,
4.66395E+17,oaktownsam#0815,2021-07-21,r7rs package is a fairly direct translation to Racket,,
1.30231E+17,sarna#3904,2021-07-21,"the idea was probably to test all implementations with the exact same code, I wonder how would Racket do with Racket code",,
4.66395E+17,oaktownsam#0815,2021-07-21,It probably ends up testing the mutable pairs implementation more though than regular Racket code does.,,
4.66395E+17,oaktownsam#0815,2021-07-21,You can write `#lang r6rs` and also there is a unsafe escape to Chez.,,
4.66395E+17,oaktownsam#0815,2021-07-21,but `#lang r6rs` is on top of Racket so there are some layers there still.,,
1.30231E+17,sarna#3904,2021-07-21,like an infinite onion of parens :mew:,,
1.30231E+17,sarna#3904,2021-07-21,hmm now that I looked at different benchmarks it looks like Guile is behind Racket most of the time,,
1.30231E+17,sarna#3904,2021-07-21,"they both do badly at the fibc test, wonder what it is",,
1.30231E+17,sarna#3904,2021-07-21,https://github.com/ecraven/r7rs-benchmarks/blob/master/src/fibc.scm,,
1.30231E+17,sarna#3904,2021-07-21,ah it's fibonacci using call/cc haha,,
1.30231E+17,sarna#3904,2021-07-21,Racket CS should do better,,
1.30231E+17,sarna#3904,2021-07-21,is the escape in the r6rs lang or in Racket in general?,,
4.66395E+17,oaktownsam#0815,2021-07-21,It's for Racket in general,,
4.66395E+17,oaktownsam#0815,2021-07-21,https://docs.racket-lang.org/foreign/vm.html,,
4.66395E+17,oaktownsam#0815,2021-07-21,`vm-eval`,,üò≥ (1)
1.30231E+17,sarna#3904,2021-07-21,"neato, thank you :meowblushcool:",,
4.62028E+17,StephenD#5938,2021-07-21,"Stickers are coming! Join in with the Syntax Parse Bee and have fun making Syntax Parse Macros! 
https://github.com/syntax-objects/Summer2021/blob/master/ANNOUNCEMENT.md",,
4.62028E+17,StephenD#5938,2021-07-21,,https://cdn.discordapp.com/attachments/618895179343986688/867500998288998400/image0.jpg,
2.75501E+17,Plane#0324,2021-07-21,oh that's a cute looking sticker,,
7.94955E+17,Laurent O#6627,2021-07-21,"""Every sufficiently evolved programming language eventually becomes a racket #lang"" said Knuth. Or Einstein, can't remember.",,"üëç (2),meowsmile (1)"
1.35871E+17,Drakonis#1712,2021-07-21,yesssssss,,
4.66395E+17,oaktownsam#0815,2021-07-21,Ben Franklin.,,üíØ (1)
2.34164E+17,python#3213,2021-07-21,can AOT compilers be made with #lang?,,
2.66505E+17,notjack#9941,2021-07-21,"yes, sort of, depending on what you mean and what you want",,
2.34164E+17,python#3213,2021-07-21,I guess i haven't seen a good explanation of how #lang works,,
2.34164E+17,python#3213,2021-07-21,is there a good tutorial for it you would recommend?,,
2.34164E+17,python#3213,2021-07-21,all i've seen is some stuff that adds minor modifications to racket,,
2.66505E+17,notjack#9941,2021-07-21,the Beautiful Racket book,,üëç (1)
2.66505E+17,notjack#9941,2021-07-21,https://beautifulracket.com/,,
2.34164E+17,python#3213,2021-07-21,This seems pretty good. thanks,,
4.66395E+17,oaktownsam#0815,2021-07-21,"Since a `#lang` is just a kind of racket program, you could write a `#lang` that produces C code then calls gcc on it at compile time and then at run time executed your compiled file.",,
2.19842E+17,&t#1161,2021-07-21,"do people actually, like, do that?",,
2.34164E+17,python#3213,2021-07-21,"i was planning on doing my own codegen, so that wouldn't be a problem for me, but that does sound interesting",,
4.66395E+17,oaktownsam#0815,2021-07-21,You could do that üôÇ I think magnolisp does something like that IIRC.,,
4.66395E+17,oaktownsam#0815,2021-07-21,https://docs.racket-lang.org/magnolisp/index.html,,
2.66505E+17,notjack#9941,2021-07-21,yes https://docs.racket-lang.org/c/,,meowsmile (1)
2.34164E+17,python#3213,2021-07-21,I've been thinking about writing a compile for a while,,
2.34164E+17,python#3213,2021-07-21,i think i might do it in a racket lang now,,
2.66505E+17,notjack#9941,2021-07-21,"the main thing that's different about making your compiler a `#lang` is that you don't generate something low-level, like machine code or LLVM IR, and instead you basically just generate scheme code and rely on racket's compiler to do the grunt work of turning that into machine code",,
2.66505E+17,notjack#9941,2021-07-21,"this means your lang's code will run on the racket virtual machine, unless you go to great lengths to avoid doing that (like calling LLVM yourself at compile time to produce machine code and then having your `#lang` produce a scheme FFI to the generated code)",,
4.66395E+17,oaktownsam#0815,2021-07-21,"Way back in 200x a coworker and I made a C ""scripting language"" which just invoked gcc and `exec`d the result so you could write scripts like:
```
#!/usr/bin/cjure
#include <stdio.h>
void main() { printf(""hello world\n""); }
```",,
4.66395E+17,oaktownsam#0815,2021-07-21,"I actually would like to have an ""unsafe"" way to do that and avoid writing C stuff.",,
2.66505E+17,notjack#9941,2021-07-21,me too,,
4.66395E+17,oaktownsam#0815,2021-07-21,There is an asm package that someone started but it just targets x86 64,,
2.66505E+17,notjack#9941,2021-07-21,"I'd really like the protocol for `#lang` to look less like ""call racket code to produce scheme modules that are then linked together by the racket VM"" and look more like ""call racket code to produce object files in some sort of VM-dependent low-level assembly language, and link object files in the same assembly language together using some VM""",,
4.66395E+17,oaktownsam#0815,2021-07-21,Oh there is also a couple llvm bindings floating around too,,
2.34164E+17,python#3213,2021-07-21,"yeah, that would be what i have to do",,
2.34164E+17,python#3213,2021-07-21,my language is not something that can be run by the racket vm absolutely correctly,,
2.34164E+17,python#3213,2021-07-21,hmmm,,
2.34164E+17,python#3213,2021-07-21,"originally i thought that `#lang` was to make language processing (parsing and such) easier, but it's also very integrated with the racket vm",,
2.66505E+17,notjack#9941,2021-07-21,what's your language?,,
2.66505E+17,notjack#9941,2021-07-21,the vm is pretty flexible so I'm wondering what the barriers in your case are,,
2.34164E+17,python#3213,2021-07-21,"not even entirely figured it out yet, but it's an AOT wasm compiler",,
2.34164E+17,python#3213,2021-07-21,my other language i've made (in racket) is an assembly language for an exotic 12-bit cpu,,
2.34164E+17,python#3213,2021-07-21,neither can really run on the racket vm üòÖ,,
2.34164E+17,python#3213,2021-07-21,"oh crap, this reminds me i have a project i need to finish",,
2.66505E+17,notjack#9941,2021-07-21,ah yeah that's squarely in the alternate-vm domain,,
2.34164E+17,python#3213,2021-07-21,in #show-and-tell soon üòâ,,üòÉ (1)
4.66395E+17,oaktownsam#0815,2021-07-21,You could make a WASM compiler that could write bytecode to disk and/or interpret it in the wasm vm Bogdan wrote.,,
2.34164E+17,python#3213,2021-07-21,I'll consider that,,
2.34164E+17,python#3213,2021-07-21,i was planning on just using wasmtime when i wanted to do immediate execution stuff,,
2.34164E+17,python#3213,2021-07-22,"okay, done with other project",,
2.34164E+17,python#3213,2021-07-22,now to learn #lang,,
1.30231E+17,sarna#3904,2021-07-22,it's true - look what happened to algol!,,
7.94955E+17,Laurent O#6627,2021-07-22,And scheme!,,
1.30231E+17,sarna#3904,2021-07-22,"can't wait to introduce Racket at work as a ""superset of Python"" :meowsmile:",,üëç (1)
1.30231E+17,sarna#3904,2021-07-22,does Racket have a compiler tower like Guile? https://www.gnu.org/software/guile/manual/html_node/Compiler-Tower.html,,
7.73175E+17,meowüé∫#2842,2021-07-22,In some sense,,
7.73175E+17,meowüé∫#2842,2021-07-22,I suppose all compilers are towers with nanopass.,,
7.73175E+17,meowüé∫#2842,2021-07-22,Racket has a distinct expander written in Racket itself (and needs to be bootstrapped when building Racket) for expanding macro and reader stuff. Then there's `schemify` for transpiling this expanded Racket code to Chez Scheme.,,
7.73175E+17,meowüé∫#2842,2021-07-22,And then Chez Scheme uses Nanopass to incrementally compile the code to machine code.,,
7.73175E+17,meowüé∫#2842,2021-07-22,Or at least that's my understanding of it.,,
7.73175E+17,meowüé∫#2842,2021-07-22,There's also a `cify` for transpiling the Scheme code to C but I don't know if it's used.,,
1.30231E+17,sarna#3904,2021-07-22,so in general you could get Chez to generate a different kind of machine code?,,
1.30231E+17,sarna#3904,2021-07-22,"I complained before how undocumented Chez is, but the Racket fork actually looks good and not impossible to modify",,
1.30231E+17,sarna#3904,2021-07-22,"> write a `#lang java`
> write a Chez JVM backend
> profit???
:meowsmile:",,
7.73175E+17,meowüé∫#2842,2021-07-22,javac with extra steps,,
7.73175E+17,meowüé∫#2842,2021-07-22,:meowleft:,,
7.73175E+17,meowüé∫#2842,2021-07-22,"Sure, you can poke and prod the later, low-level passes.",,
1.30231E+17,sarna#3904,2021-07-22,neato!,,
6.46114E+17,samth#3420,2021-07-22,@notjack what you described is basically sham: https://github.com/rjnw/sham,,
6.46114E+17,samth#3420,2021-07-22,@meowüé∫ `cify` is used to compile the expander for Racket BC for platforms with no JIT,,
7.73175E+17,meowüé∫#2842,2021-07-22,Oh I see,,
6.46114E+17,samth#3420,2021-07-22,because otherwise everything is really slow on those platforms,,
1.30231E+17,sarna#3904,2021-07-22,"hmm using the cmdline from the standard library, is it possible to have a required flag argument?",,
6.46114E+17,samth#3420,2021-07-22,"@sarna not declaratively, but you can of course error if a particular flag isn't provided",,meowblushcry (1)
4.66395E+17,oaktownsam#0815,2021-07-22,"Oh yeah, that's one of the LLVM ones I was thinking of.",,
6.46114E+17,samth#3420,2021-07-22,"Well, Sham is more like what @notjack described rather than an LLVM binding, but of course the distinction is fuzzy",,
4.66395E+17,oaktownsam#0815,2021-07-22,Of course.,,
7.14999E+17,gingerydoo#7461,2021-07-22,"Right now the focus is on writing examples, specifically those one can call a ""demonstration of power."" That's to help others see how Xiden might fit into their own projects. After that the major fork in the road is either A) prop up a prototype catalog service or B) prepare a minimal GNU/Linux distro with a system-wide Racket + Xiden installation.",,
7.14999E+17,gingerydoo#7461,2021-07-22,"I have not decided on the path yet, but I expect A is a dependency of B. While there is no roadmap graphic yet, it will appear when time permits.",,
7.14999E+17,gingerydoo#7461,2021-07-22,Happy to take suggestions!,,
1.35871E+17,Drakonis#1712,2021-07-23,"hmm, path B is far more interesting as a means to draw attention",,
1.35871E+17,Drakonis#1712,2021-07-23,but it requires some more planning if you're to include the capability to do configuration management,,
1.35871E+17,Drakonis#1712,2021-07-23,"nanopass seems neat, however it isnt part of racket's default design",,
1.30231E+17,sarna#3904,2021-07-23,"it uses nanopass now though, no? because Chez uses it",,
1.35871E+17,Drakonis#1712,2021-07-23,"it does, yeah",,
1.35871E+17,Drakonis#1712,2021-07-23,how does racket take advantage of it?,,
1.30231E+17,sarna#3904,2021-07-23,well the same way as Chez if I understand it right,,
1.30231E+17,sarna#3904,2021-07-23,which means code goes brrrr,,
1.30231E+17,sarna#3904,2021-07-23,hahaha I went to the benchmarks game page,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-23,ü§î code goes brrr sounds like something that'd be applicable to all things programming,,
1.35871E+17,Drakonis#1712,2021-07-23,"a better question, how much of guile's design is influenced by the presence of the compiler tower?",,
1.30231E+17,sarna#3904,2021-07-23,"Racket beats Python everywhere, but in this one Python beats it by a lot",https://cdn.discordapp.com/attachments/618895179343986688/868233499822395462/image0.jpg,
1.30231E+17,sarna#3904,2021-07-23,"I meant ""it goes fast"", sorry",,
1.30231E+17,sarna#3904,2021-07-23,"it's not Racket being slow at regex, it's Python looking like this :meowangry:",https://cdn.discordapp.com/attachments/618895179343986688/868233713283129424/image0.jpg,ü§£ (5)
1.30231E+17,sarna#3904,2021-07-23,"ah! I don't know much about that, you could try asking on Guile's IRC",,
1.35871E+17,Drakonis#1712,2021-07-23,"conversely, how much does chez using nanopass influences racket's design?",,
1.35871E+17,Drakonis#1712,2021-07-23,"and the follow-up, where does chez begin and end, as well as where does racket begin and end",,
6.46114E+17,samth#3420,2021-07-23,@Drakonis you might like this talk: https://www.youtube.com/watch?v=s3Q3M2wZ7rI&list=PLyrlk8Xaylp4EuohGj90SbJOcmEwrS-ZO&index=21,,plusone (1)
6.46114E+17,samth#3420,2021-07-23,I don't think the fact that Chez uses nanopass in the compiler affects the design of the rest of racket much,,
1.35871E+17,Drakonis#1712,2021-07-23,nanopass doesn't really permeate racket's design the way the compiler tower does with guile,,
1.35871E+17,Drakonis#1712,2021-07-23,i'll check the video,,
1.35871E+17,Drakonis#1712,2021-07-23,you want a compiler tower? you subsume chez,,
6.46114E+17,samth#3420,2021-07-23,I think the compiler tower in Guile plays a similar role to the different intermediate languages in Racket/Chez.,,
1.35871E+17,Drakonis#1712,2021-07-23,"it definitely does, yes.",,
6.46114E+17,samth#3420,2021-07-23,But I'm not sure what subsuming Chez would mean or how the compiler impacts Guile programs,,
1.35871E+17,Drakonis#1712,2021-07-23,oh no no,,
1.35871E+17,Drakonis#1712,2021-07-23,"what i mean here is that if racket wanted a compiler tower, it'd need to subsume enough of chez so that the line that separates racket and chez disappears",,
1.35871E+17,Drakonis#1712,2021-07-23,"but i suppose that's not the goal here, given that the move to chez was to make it easier to maintain",,
1.35871E+17,Drakonis#1712,2021-07-23,"hmm, i think i lost track of my own point lol",,
1.35871E+17,Drakonis#1712,2021-07-23,woops,,
1.35871E+17,Drakonis#1712,2021-07-23,"https://beautifulracket.com/appendix/racket-and-chez-scheme.html by the way, this came up last week",,
1.35871E+17,Drakonis#1712,2021-07-23,"so the point i wanted to make in the end was that if you want to have something like the compiler tower, you need to fully expose it to anyone who wants to use it, rather than having multiple layers glued together",,
1.30231E+17,sarna#3904,2021-07-23,jsyk @samth cleared up some misconceptions in a reddit comment https://www.reddit.com/r/Racket/comments/okiuae/beautiful_racket_thoughts_on_racket_chez_scheme/h5a6mim/?utm_source=share&utm_medium=ios_app&utm_name=iossmf&context=3,,
1.35871E+17,Drakonis#1712,2021-07-23,i see,,
1.35871E+17,Drakonis#1712,2021-07-23,"alas, reddit exploded",,
1.35871E+17,Drakonis#1712,2021-07-23,"okay, looks like its working again",,
1.35871E+17,Drakonis#1712,2021-07-23,that's fair.,,
6.46114E+17,samth#3420,2021-07-23,"I'm not sure exactly what guile provides as an API, but a bunch of the levels of the compiler are provided in racket on Chez. But this discussion is very abstract so I'm not sure exactly what you're saying",,
1.35871E+17,Drakonis#1712,2021-07-23,i'm trying and failing to explain what i want to say,,
1.35871E+17,Drakonis#1712,2021-07-23,"either way, i feel i'm digging a deep grave here",,
1.35871E+17,Drakonis#1712,2021-07-23,"anyhow, the whole discussion has to do with how guile is a cascading pile of layers of code and how it is designed for that, making it fairly easy to add/remove/switch the layers",,
1.35871E+17,Drakonis#1712,2021-07-23,i am not sure if racket on chez makes it anywhere as easy to modify the tower,,
1.35871E+17,Drakonis#1712,2021-07-23,"someone's been porting clojure to guile, so now you can run scheme or clojure with it",,
1.35871E+17,Drakonis#1712,2021-07-23,it does not go through scheme to achieve that,,
4.66395E+17,oaktownsam#0815,2021-07-23,"Wow I knew benchmark game was kinda garbage, but that takes the cake.",,meowsmile (2)
1.56786E+17,williewillus#8490,2021-07-23,Link to clojure on guile?,,
1.35871E+17,Drakonis#1712,2021-07-23,https://github.com/lokke-org/lokke,,
1.35871E+17,Drakonis#1712,2021-07-23,"no jvm interop, clearly",,
1.35871E+17,Drakonis#1712,2021-07-23,it's impressive,,
1.35871E+17,Drakonis#1712,2021-07-23,"by the way, what's the deal with ""the top level is hopeless""?",,
2.75501E+17,Plane#0324,2021-07-23,Please see https://discord.com/channels/571040468092321801/710960886298312724/867186007304830976,,
1.35871E+17,Drakonis#1712,2021-07-23,that explains nothing,,
1.35871E+17,Drakonis#1712,2021-07-23,"unfortunately all it does is repeat ""the top-level is hopeless"" and not really explain why exactly it was done this way",,
2.14881E+17,Moinate#6061,2021-07-24,"Did you make it to the ""Discussions of the above"" section in the linked gist?  https://gist.github.com/samth/3083053
I'm not clear on your question about ""why it was done this way"" - I think the saying instead means you'll never have a satisfactory unsurprising top level interaction. 
The Caclulist blog post gives an explained example. 
The email archive posts are not all informative but in general they seem to show (unfixable?) ""problems"" in top-level interactions in many different contexts.",,
1.30231E+17,sarna#3904,2021-07-24,maybe this will explain more https://blog.racket-lang.org/2009/03/the-drscheme-repl-isnt-the-one-in-emacs.html,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-24,is there no way to get around the need of rkt files? https://github.com/lassik/racket-r7rs-example,,
4.62028E+17,StephenD#5938,2021-07-24,I like it. I can compare how different languages link to the pcre2 c library,,
1.30231E+17,sarna#3904,2021-07-24,you mean `sublib.rkt` and `lib.rkt`?,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-24,yeah,,
1.30231E+17,sarna#3904,2021-07-24,"if you want to use `#lang r7rs` you don't need to export stuff like this, but if you want to use the functions in `#lang racket` you need to",,
1.30231E+17,sarna#3904,2021-07-24,that's how I understand it at least,,
4.66395E+17,oaktownsam#0815,2021-07-24,"I think there is some flexibility, but somewhere it will need a file with `#lang r7rs`.  I'll try to look in a minute when I'm not on mobile",,
4.66395E+17,oaktownsam#0815,2021-07-24,So if you are in `#lang r7rs` every module you `import` needs to be in a collect.  The `import` form is pretty literally translated to `require` so  `(import (a b c))` is turned into `(require a/b/c)`.   Because it uses `require` I think the only way to get a module to load is to use `.rkt` extension.,,
1.35871E+17,Drakonis#1712,2021-07-24,https://ecraven.github.io/r7rs-benchmarks/,,
4.40139E+17,Parnikkapore#2806,2021-07-24,A very niche joke at the end of a planned quick XML explainer video. Is this perhaps a bit too weird? What do you think the two other methods are?,https://cdn.discordapp.com/attachments/618895179343986688/868666689628286996/photo6334360052273622216.jpg,
2.14881E+17,Moinate#6061,2021-07-24,"for reference, i get the 60s joke (of course?) but not the Oracle one",,
2.14881E+17,Moinate#6061,2021-07-24,but i doubt im the target audience,,
4.40139E+17,Parnikkapore#2806,2021-07-24,I'm pretty sure this server is one of the few people who will recognize what happened in the 60s lol,,
4.40139E+17,Parnikkapore#2806,2021-07-24,"The thing made in the 2000s is pretty pervasive in modern programming, so unless they're staying exclusively in the Lisp ecosystem one is supposed to recognize it...",,
4.40139E+17,Parnikkapore#2806,2021-07-24,"I'll swap ""not-Oracle programmers"" out for ""a newfangled web programming language"" then",,
2.14881E+17,Moinate#6061,2021-07-24,"and change ""will be met again"" to ""was met again"" so the tenses are not confusinbg",,
4.40139E+17,Parnikkapore#2806,2021-07-24,Oh crud yeah how did I miss that! Thanks!,,
5.24323E+17,Ben Kenobi#5683,2021-07-25,"After ¬´¬†pervasive in modern programming¬†¬ª i got it, and the connection to not-Oracle, but it was a headscratcher for a minute",,
4.40139E+17,Parnikkapore#2806,2021-07-25,"Yeah, the original is too much of a headscratcher for what's meant to be a completely random throwaway joke",,
7.14999E+17,gingerydoo#7461,2021-07-25,Question: Is there a more general term for at-expressions when you don't use `@` as the control character?,,
7.14999E+17,gingerydoo#7461,2021-07-25,"Like ""content expressions""?",,
3.58051E+17,hazel#0271,2021-07-25,_-expression,,
4.66395E+17,oaktownsam#0815,2021-07-25,Skimming the Scribble paper I don't think there is a more general name,,
3.58051E+17,hazel#0271,2021-07-25,but you can't say that out loud,,
4.66395E+17,oaktownsam#0815,2021-07-25,"> Scribble forms are often called @-expressions or @-forms because
> they begin with a @ character.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-25,are they really just scribble forms though? I remember using @-expressions for more general html templating,,
4.66395E+17,oaktownsam#0815,2021-07-25,They were originally designed for scribble and then reused,,
7.14999E+17,gingerydoo#7461,2021-07-25,"I think I'd use ""content expressions"" or ""c-exp"" internally, but I'd be interested to hear if a canonical name sticks.",,
7.14999E+17,gingerydoo#7461,2021-07-25,"Since there is an isomorphism between s-exps and c-exps (am I using the word ""isomorphism"" correctly?), it feels like a formal name is warranted.",,
1.35871E+17,Drakonis#1712,2021-07-25,c-exp? are you trying to clone g-exps? :V?,,
5.24323E+17,Ben Kenobi#5683,2021-07-25,"RE: isomorphism, if there's a bijection between the two, yes.",,plusone (1)
7.14999E+17,gingerydoo#7461,2021-07-25,"No, this is in the context of documents, not software distribution.",,
1.35871E+17,Drakonis#1712,2021-07-25,ah i see,,
7.73175E+17,meowüé∫#2842,2021-07-25,100g-exps,,"üéµ (3),ü§ò (1)"
1.30231E+17,sarna#3904,2021-07-25,nooo you didnt,,
1.30231E+17,sarna#3904,2021-07-25,can I steal this for my handle,,
7.73175E+17,meowüé∫#2842,2021-07-25,Be my guest,,meowblushcool (1)
7.73175E+17,meowüé∫#2842,2021-07-25,:meowblushcool:,,
1.30231E+17,sarna#3904,2021-07-25,I love this server,,
1.30231E+17,sarna#3904,2021-07-25,:meowblush:,,
4.89956E+17,WillBAnders#5226,2021-07-25,Does anyone know some good example use cases of macros? I'm working on designing macro definition for my own language and was looking for examples to make sure I could support the same functionality as much as possible.,,
7.94955E+17,Laurent O#6627,2021-07-25,The class system is a pretty big one,,
4.62028E+17,StephenD#5938,2021-07-25,http://cs.brown.edu/courses/csci1730/2020/omac.html,,plusone (1)
2.75501E+17,Plane#0324,2021-07-25,@WillBAnders You might look at `syntax/parse` as an example.  Macros for making macros!,,
4.89956E+17,WillBAnders#5226,2021-07-25,"I'm pretty familiar with it; unfortunately the hard part is that it doesn't cross over super well. My language uses more Java-esque syntax, so macros have less of an impact on syntax changes and more of an impact on control flow. Type safety is also a bit rough.",,
8.14743E+16,jimpjorps#0001,2021-07-25,"the Julia language has strong macro support with infix notation, that might be worth looking at next",,
2.34164E+17,python#3213,2021-07-26,is this relevant to racket at all?,,
2.34164E+17,python#3213,2021-07-26,@Dav1s,,
7.94955E+17,Laurent O#6627,2021-07-26,"@Dav1s i removed your post, at best it belongs in #off-topic",,
1.30231E+17,sarna#3904,2021-07-27,"https://github.com/vyzo/gerbil/blob/fa9537be0848e54d2c68165503b9cc48babb9334/src/std/sugar.ss#L35 - Gerbil's `try` is only about 60 lines, anyone interested in porting it? :meowsmile:",,
1.30231E+17,sarna#3904,2021-07-27,I don't know macros :mew:,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"I can help with the macros some later, but i don‚Äôt know which racket pieces to use for the expanded code",,
3.5323E+17,Alex Knauth#4895,2021-07-27,I'm sure we could do it in less code using syntax-parse,,"plusone (3),pillow (1)"
5.24323E+17,Ben Kenobi#5683,2021-07-27,"Yeah, the whole thing is very procedural.",,
1.30231E+17,sarna#3904,2021-07-27,"make sarna happy, win some stickers from syntax-parse bee?? :meowsmile:",,"plusone (1),pillow (1)"
5.24323E+17,Ben Kenobi#5683,2021-07-27,üëÄ,,
6.46114E+17,samth#3420,2021-07-27,You would need to figure out the semantics of both `with-catch` (probably like `with-handler`) and `unwind-protect` (probably like `dynamic-wind`),,
5.24323E+17,Ben Kenobi#5683,2021-07-27,I was thinking I would just na√Øvely try using those two üôÇ,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"It kind of looks like this in my head:
```scheme
(try
  body ...+
 catch ([exn? handler] ...)
 finally
  must-happen ...+)

;; equivalent to

(dynamic-wind
  void
  (lambda ()
    (with-handlers ([exn? handler] ...)
       body ...))
  (lambda () must-happen ...))
```",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"Assuming that the body can't be re-entered and exited multiple times, otherwise the ""finally"" body runs more than once",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,IIUC,,
3.5323E+17,Alex Knauth#4895,2021-07-27,well there should be something in the pre-thunk to prevent re-entering it through a continuation jump,,
3.5323E+17,Alex Knauth#4895,2021-07-27,Although that would be better handled with a function such as `call-with-try-finally`,,
3.5323E+17,Alex Knauth#4895,2021-07-27,`unwind-protect` is probably just Gerbil scheme's name for that,,
3.5323E+17,Alex Knauth#4895,2021-07-27,"Looking at the documentation for that my interpretation would be:
```
;; call-with-try-finally : [-> X] [-> Any] -> X
;; Calls value-thunk, then post-thunk, with post-thunk guaranteed to be run
;; even if execution exits value-thunk through an exception or continuation
(define (call-with-try-finally value-thunk post-thunk)
  (define pre? (box #f))
  (define (pre-thunk)
    (unless (box-cas! pre? #f #t)
      (error 'try ""Cannot re-enter try/finally body"")))
  (dynamic-wind pre-thunk value-thunk post-thunk))
```
but I don't know whether this would interact well with threads or other things",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,huh. Can I steal that?,,
3.5323E+17,Alex Knauth#4895,2021-07-27,yeah,,
3.5323E+17,Alex Knauth#4895,2021-07-27,I don't know how to test it against everything I want to though,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,Fair enough,,
4.66395E+17,oaktownsam#0815,2021-07-27,Couldn't you wrap the `dynamic-wind` with a continuation barrier?,,
4.66395E+17,oaktownsam#0815,2021-07-27,"Bikeshed: I'd prefer
```scheme
(try
  body ...+
 (catch
   [exn? handler] ...)
 (finally
  must-happen ...+))
```",,
8.14743E+16,jimpjorps#0001,2021-07-27,"yeah, I think that'd look more racket-y",,
3.5323E+17,Alex Knauth#4895,2021-07-27,"my version would be more like:
```
(try
  body ...+
  (catch (pred id) handler-body ...+)
  ...
  (finally post-body ...+))
```",,
3.5323E+17,Alex Knauth#4895,2021-07-27,but with more options for catch clauses similar Gerbil Scheme's version,,
4.66395E+17,oaktownsam#0815,2021-07-27,"Really bikeshed: If there was an implicitly binding of the exception in the catch that would make it so you wouldn't have to spell out `(lambda (e) ...)` for each handler that would be cool too.
```scheme
(try
  (/ 10 0)
  (catch
    [exn? (exn->string this-exception)]))
```",,ü§Ø (1)
4.66395E+17,oaktownsam#0815,2021-07-27,That would change the `handler` to `handler ...`,,
3.5323E+17,Alex Knauth#4895,2021-07-27,"Nah I would rather be able to write either
```
(try
  (/ 10 0)
  (catch (exn? e) (exn->string e)))
```
or
```
(try
  (/ 10 0)
  (catch exn? => exn->string))
```",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,those look nice too.,,
3.5323E+17,Alex Knauth#4895,2021-07-27,but I suppose I am biased in favor of what Gerbil Scheme already does,,
4.66395E+17,oaktownsam#0815,2021-07-27,`(catch (pred? e:id) body ...+)` captures my big requirement of not having to lambda each time.  Although now it has `catch` but that has some purpose.,,
3.5323E+17,Alex Knauth#4895,2021-07-27,"Hm. I don't know much about continuation barriers... I just read the documentation in the last 20 minutes and I don't fully understand it. Is this what you're suggesting?
```scheme
(define (call-with-try-finally value-thunk post-thunk)
  (define pre? (box #f))
  (define (pre-thunk)
    (unless (box-cas! pre? #f #t)
      (error 'try ""Cannot re-enter try/finally body"")))
  (call-with-continuation-barrier
   (Œª () (dynamic-wind pre-thunk value-thunk post-thunk))))
```
or do you mean that a continuation barrier would make `pre-thunk` completely redundant, or something else?",,
4.66395E+17,oaktownsam#0815,2021-07-27,I thought it would make it redundant.  I'm not 100% on their semantics though.,,
3.5323E+17,Alex Knauth#4895,2021-07-27,"Oh, so then
```scheme
(define (call-with-try-finally value-thunk post-thunk)
  (call-with-continuation-barrier
   (Œª () (dynamic-wind void value-thunk post-thunk))))
```
could... I'll play around with them some more and see what I can learn!",,
4.66395E+17,oaktownsam#0815,2021-07-27,Yeah that's what I was thinking.,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,This is what I ended up with while working on it,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"Yeah, i'll take the barrier, too üôÇ",,
2.66505E+17,notjack#9941,2021-07-27,Yeah this is great :3,,
3.58051E+17,hazel#0271,2021-07-27,"```
; string-join: contract violation
;   expected: (listof string?)
;   given: '(""It feels like a perfect night to dress up like hipsters"" ""And make fun of our exes, uh uh, uh uh""
```",,
3.58051E+17,hazel#0271,2021-07-27,today's discovery: a list of taylor swift lyrics is not a list of strings,,
3.58051E+17,hazel#0271,2021-07-27,"ah it was parsing the lyric ""22"" as an integer.",,
2.66505E+17,notjack#9941,2021-07-27,nice,,
7.73175E+17,meowüé∫#2842,2021-07-27,nice,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,https://github.com/syntax-objects/Summer2021/issues/9 https://github.com/benknoble/try-make-sarna-happy https://pkgd.racket-lang.org/pkgn/package/try-make-sarna-happy,,
3.5323E+17,Alex Knauth#4895,2021-07-27,https://github.com/AlexKnauth/try-catch-finally,,
8.14743E+16,jimpjorps#0001,2021-07-27,,,Catto (3)
1.30231E+17,sarna#3904,2021-07-27,I absolutely love it!! :meowblushcool:,,‚ù§Ô∏è (2)
1.30231E+17,sarna#3904,2021-07-27,do we two competing implementations :meowsmile:,,
1.35871E+17,Drakonis#1712,2021-07-27,"those cat emojis, its so good.",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"heheh, now you can pick your style?",,
1.30231E+17,sarna#3904,2021-07-27,yes I will in fact use it tomorrow :meowblushcool:,,
1.30231E+17,sarna#3904,2021-07-27,"I like the match one (Ben's) more, it's more readable to me",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"Alex's might have some extra robustness around catch/finally literals (I used `datum-literals`), and the flexibility is cool. I like the cond/match-style, though üòâ",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,Also it took me forever to write the docs bc I've never done that before. The implementation was sitting there for the better part of the day.,,
1.30231E+17,sarna#3904,2021-07-27,now I want to write an entry as well :meowblush:,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,take a look at syntax/parse. it's a ton of fun,,
1.30231E+17,sarna#3904,2021-07-27,"I started reading fear of macros some time ago, didn't get very far though",,
8.14743E+16,jimpjorps#0001,2021-07-27,"yeah, I'd like to do something but I haven't thought of anything I'd like to try implementing",,
1.30231E+17,sarna#3904,2021-07-27,tbh I'd steal stuff from other languages,,plusone (1)
8.14743E+16,jimpjorps#0001,2021-07-27,I'm trying to think of something from another language that I'd want to borrow that would still fit nicely into racket syntax,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,This one https://github.com/benknoble/slack-archive-viewer/blob/main/private/steps.rkt came out of wanting to fix hand-written step numbers https://github.com/benknoble/slack-archive-viewer/commit/7a85f53ef1ae69d4cace0c1dca51e9eb20c80824#diff-31323d1970aae2b3de77d5a6f7fc8943c8593dea704abb1541473b7d9ac83091,,
2.66505E+17,notjack#9941,2021-07-27,"I just had an idea about the `try-catch` macros: what if the catch clause used a match pattern to specify the exception type?
```scheme
(try
  (stuff)
  (catch (? exn:fail:network? e)
    (log-network-error e)))
```",,
8.14743E+16,jimpjorps#0001,2021-07-27,thinking about a way to do F# active patterns,,
2.66505E+17,notjack#9941,2021-07-27,"@jimpjorps same, ever since you mentioned them",,
8.14743E+16,jimpjorps#0001,2021-07-27,,https://cdn.discordapp.com/attachments/618895179343986688/869687106002370630/wgimxlypchy11.png,
1.30231E+17,sarna#3904,2021-07-27,oh now I noticed that it's cond and not match. does match have any significant upsides here?,,
1.30231E+17,sarna#3904,2021-07-27,I can't think of a way that you'd have anything else than `?`,,
1.30231E+17,sarna#3904,2021-07-27,unless.. a custom matcher :mew:,,
2.64024E+17,Eutro#0016,2021-07-27,"```scheme
(try
  (body)
  (catch (some-struct x y z)
    ...))
```",,
1.30231E+17,sarna#3904,2021-07-27,can exceptions be arbitrary structs?,,
2.64024E+17,Eutro#0016,2021-07-27,"or would```scheme
(catch (exn msg ...) (body))
```work?",,
1.30231E+17,sarna#3904,2021-07-27,ohh you could match on fields,,
2.64024E+17,Eutro#0016,2021-07-27,I think you can raise anything,,"meowwarp (1),meowangry (1)"
5.24323E+17,Ben Kenobi#5683,2021-07-27,"Hm, it might make sense if the exceptions could be non-exn-structs? I actually noticed there‚Äôs a shortcoming of my approach: you can‚Äôt specify an arbitrary computation as a predicate without wrapping it in lambda (looks weird) or giving it a name. Like `(with-handlers ([(lambda (e) (and (foo? e) (bar? e))) ...])...)` is missing support",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,Let‚Äôs fix it,,
1.30231E+17,sarna#3904,2021-07-27,`raise 'success`,,
2.64024E+17,Eutro#0016,2021-07-27,"!rkt eval ```scheme
(struct some-struct (x y z))
(raise (some-struct 1 2 3))
```",,
8.02004E+17,r16#4581,2021-07-27,":warning: stderr:
uncaught exception: #<some-struct>",,
1.30231E+17,sarna#3904,2021-07-27,:meowangry:,,
1.30231E+17,sarna#3904,2021-07-27,hate it,,
1.30231E+17,sarna#3904,2021-07-27,or love it,,
1.30231E+17,sarna#3904,2021-07-27,haven't decided yet,,
2.64024E+17,Eutro#0016,2021-07-27,!rkt eval `(raise 'children)`,,
8.02004E+17,r16#4581,2021-07-27,":warning: stderr:
uncaught exception: 'children",,mew (3)
2.66505E+17,notjack#9941,2021-07-27,"I think the bigger benefit is that without match patterns, `catch` has to do two things at once: bind a variable for the exception and specify a condition expression. Doing that with something like `(catch (exn:fail? e) body ...)` is kind of deceptive because it looks like you could easily turn that into `(catch (or (exn:fail? e) (exn:break? e)) body ...)`, but that won't work without special effort on the `catch` macro's part.",,üëç (1)
5.24323E+17,Ben Kenobi#5683,2021-07-27,"erg, that may be too complicated to fix. that's what I wanted to point out, though, that the na√Øve extension is v. wrong",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,maybe match is the way to go,,
1.30231E+17,sarna#3904,2021-07-27,would you just expand to `match`? or would you need to do more legwork,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"i'm not sure yet. For @notjack 's example with `(catch ([(? exn:fail? e) ‚Ä¶]))`, we would need `e` to be the exception being matched, no? So a bit anaphorically. Versus the current versions `(test name) body`. The expansion is to `with-handlers` eventually, so I might have to do
```scheme
(with-handlers ([(const #t) ;; catch all exceptions
                 (lambda (e) ;; maybe the name can be intro'd?
                   (match [] ;; all your clauses
                          [_ (raise e)])))) ;; got to re-raise if no successful matches
```",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,oh wait i totally misunderstood `(? test)`!,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,I think I can use `match-lambda`,,
3.5323E+17,Alex Knauth#4895,2021-07-27,is catching and re-raising the same as not catching at all?,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"the docs indicate this is what `with-handlers` does internally, but I'm not sure",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"aside: I got rid of a bunch of parens around `catch` clauses, so it looks a lot cleaner. I'm calling the new variant `catch/match` üôÇ",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,https://github.com/benknoble/try-make-sarna-happy/commit/451f4ca169c139d9054afae67d6a653c3c548a0e,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"```scheme
 (check-equal?
    (try (/ 1 0)
         (catch/match [(? exn:fail? e) (exn-message e)]))
    ""/: division by zero"")

  (struct posn [x y])
  (check-equal?
    (try (raise (posn 1 2))
         (catch/match [(posn 1 y) y]))
    2)
  (check-equal?
    (try (raise (posn 1 2))
         (catch [exn? e (exn-message e)])
         (catch/match [(posn 1 y) y]))
    2)
```",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"yikes, forgot this was all in general... if anyone is bothered, re-direct me to a better channel üòÖ",,
2.66505E+17,notjack#9941,2021-07-27,Why the square brackets after `catch`?,,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"it's (sort of) a restricted `with-handlers` sugar, which uses square-brackets for each clause (you can have more than one here, too)",,
2.66505E+17,notjack#9941,2021-07-27,"If you only allowed one clause and allowed multiple `(catch ...)` forms, you could simplify the syntax a bit",,
5.24323E+17,Ben Kenobi#5683,2021-07-27,"probably, but I like that they're still grouped. What would you propose as a syntax? maybe @sarna will use it in their implementation",,
2.66505E+17,notjack#9941,2021-07-27,"I'm thinking a grammar like this:
```scheme
(try
  body ...
  (catch pattern catch-body ...) ...
  (~optional (finally finally-body ...)))
```",,üëç (1)
2.64024E+17,Eutro#0016,2021-07-27,I got you https://pkgd.racket-lang.org/pkgn/package/try-catch-match,,
2.64024E+17,Eutro#0016,2021-07-27,I've never really used `syntax/parse` before,,
8.14743E+16,jimpjorps#0001,2021-07-27,damn that was a popular prompt,,üòÇ (1)
2.66505E+17,notjack#9941,2021-07-27,oooo this is very nice,,
2.66505E+17,notjack#9941,2021-07-27,excellent implementation too :3 very well organized,,
1.93202E+17,rocketnia#4517,2021-07-28,"(branching off from #meta )

I have been thinking I don't say enough thanks, so I'd like to say something while I'm thinking about it.

- thanks Sage, for pushing ahead with ideas for Racket package management

- thanks notjack, for taking bold and swift moderation actions when necessary

- thanks Alex Knauth and Moinate (and many others) for a lot of patient work in the #help channel

- thanks samth, for tireless in-depth answers about obscure parts of Racket's systems

- thanks Stephen, for attentive effort to coordinate and drum up energy in the community

- thanks to the authors of the Discord bot (would that be williewillus, Runi, and Eutro?), which is still quite astounding

- I'm sure there are many other items I'll regret neglecting to mention here, and apologies to those people I've left out this way. I appreciate a lot of the atmosphere in this place, and everyone is part of that.",,"plusone (7),meowblushcool (3),meowsmile (4),üôè (3),‚ù§Ô∏è (3)"
2.66505E+17,notjack#9941,2021-07-28,"thanks to you too nia, for always giving me a lot of useful and interesting stuff to think about :)",,‚ù§Ô∏è (1)
1.30231E+17,sarna#3904,2021-07-28,"thanks to Alex, Ben and Eutro for the try/catch implementation, I love them all! :meowblushcool: 
also thanks to everyone else here for being so nice and insightful :meowblush:",,üëç (3)
2.75501E+17,Plane#0324,2021-07-28,"yeah i'm happy to have an opportunity to hang out on this server, i've learned a lot (:",,
5.24323E+17,Ben Kenobi#5683,2021-07-28,Thanks everyone for a super positive and fun space to nerd out üòõ,,"plusone (2),racketflat (5)"
4.62028E+17,StephenD#5938,2021-07-28,Yes- thank you everyone,,
7.14999E+17,gingerydoo#7461,2021-07-28,"@rocketnia Thank you for this gesture, and for encouraging a beautiful thing.

I don't expect thanks for the gift of my time, because it's a gift. Giving others that gift makes me happy.

That being said, from now on, I will only thank people in DMs (unless it's a quick, in passing ""thanks!"").  And I ask that if you wish to thank me, please do so in a DM.  I have trouble with gratitude placed under a spotlight, and I hope to be accepted in spite of that.",,‚ù§Ô∏è (4)
4.62028E+17,StephenD#5938,2021-07-29,"While we are giving thanks, it is worth remembering there are other ways to give thanks; by contributing back to the community
* Bug fixes - e.g. https://github.com/racket/racket/issues/1463 
Racket News has a 'Call to Racket' section https://racket-news.com/2021/07/racket-news-issue-52.html#calltoracket
* Help with answering questions - there is always someone you can help
* Documentation - corrections or additions to documentation is appreciated greatly
* packages! - add your packages to https://pkgs.racket-lang.org
* Blog post - Write up your experiences with racket and share with the world
* social media - post about your racket experiences on your social media platform of choice.
* activities - run a hackfest, gamejam, quilting bee or barn raising and build something with others (can be competitive or collaborative or both?)
* run a meetup virtual (or physical if safe)
* donation: help keep the lights on donate via SFC or github sponsors https://www.racket-lang.org/sfc.html even $5 per month helps keep the lights on.

This is not an exhaustive list - and don't hesitate to ask if you are not sure.
(PS I'm not part of the racket team - I'm a community member like you - any mistakes are my own)",,"üëç (4),ü•≥ (1)"
1.30231E+17,sarna#3904,2021-07-29,@Ben Kenobi I managed to use your impl in my shitty git implementation! love it :meowblushcool:,https://cdn.discordapp.com/attachments/618895179343986688/870302381596880917/image0.jpg,
1.30231E+17,sarna#3904,2021-07-29,~~sorry for the fried double-compressed screenshot~~,,
5.24323E+17,Ben Kenobi#5683,2021-07-29,Incredible! Hope you enjoy requiring it üòâ,,
1.30231E+17,sarna#3904,2021-07-29,yes :meowblush:,,
1.30231E+17,sarna#3904,2021-07-29,I'll push this to git once it's capable of pushing lol,,salute (2)
4.1228E+17,xgqt#8370,2021-07-29,git in racket? thats awesome,,
1.30231E+17,sarna#3904,2021-07-29,"glitchy, distorted, auto-tuned git, yes",,
8.14743E+16,jimpjorps#0001,2021-07-29,"an authentic, indie git experience",,"üíØ (2),meowblushcool (2)"
2.64024E+17,Eutro#0016,2021-07-29,cowboy git,,
6.46114E+17,samth#3420,2021-07-29,I've just enabled threads for this server.,,ü•≥ (3)
4.1228E+17,xgqt#8370,2021-07-29,`./configure --enable-threading`,,
7.94955E+17,Laurent O#6627,2021-07-29,Errr how do you start a thread?,,
4.66395E+17,oaktownsam#0815,2021-07-29,There's already an implementation of part of git for cloning purposes fyi,,
1.30231E+17,sarna#3904,2021-07-29,"yea you pointed me to the implementation before, right? I'm making a clone of the entire thing, working through this book https://shop.jcoglan.com/building-git/",,
4.66395E+17,oaktownsam#0815,2021-07-29,Nice.  I like git.,,
1.30231E+17,sarna#3904,2021-07-29,it's very nice! I learned so much already,,
2.64024E+17,Eutro#0016,2021-07-29,This is cool but I just shell out to `git` because I'm lazy üëç,,
1.30231E+17,sarna#3904,2021-07-29,as the lord intended!,,
2.66505E+17,notjack#9941,2021-07-29,"do people usually shell out, reimplement parts of git, or call into `libgit`?",,
5.24323E+17,Ben Kenobi#5683,2021-07-29,"The only (non-school reimplementation of git) project i worked on that used it, I shelled out. You can get a lot done with the low-level commands if that‚Äôs the kind of thing you need.",,
1.30231E+17,sarna#3904,2021-07-29,"wow, libgit looks pretty involved 
I thought it'd be the most obvious option but I don't think I'd actually use it now that I looked at the docs",,
6.46114E+17,samth#3420,2021-07-29,"`raco pkg` uses a combination of ""reimplement"" (for `raco pkg install`) and ""shell out"" (for `raco pkg install --clone`)",,
1.30231E+17,sarna#3904,2021-07-29,yea I think they're called plumbing commands?,,
1.30231E+17,sarna#3904,2021-07-29,plumbing and porcelain :meowwarp:,,
2.66505E+17,notjack#9941,2021-07-29,a higher-level wrapper racket library would be amazing and is something I would definitely use in resyntax-adjacent tooling,,
1.30231E+17,sarna#3904,2021-07-29,"true, I'd definitely use it for stuff too if it existed",,
2.66505E+17,notjack#9941,2021-07-29,how cool would it be to get a pull request where the changes `resyntax` makes are grouped by change type into different commits?,,
1.30231E+17,sarna#3904,2021-07-29,very cool!,,
1.30231E+17,sarna#3904,2021-07-29,"btw @notjack what are you using Racket for, besides ecosystem stuff like resyntax and rebellion?",,
1.30231E+17,sarna#3904,2021-07-29,if you don't mind me asking :meowblush:,,
2.66505E+17,notjack#9941,2021-07-29,"not much actually, I just really like making ecosystem stuff",,
1.30231E+17,sarna#3904,2021-07-29,that's neat too,,
1.30231E+17,sarna#3904,2021-07-29,"I'm at the opposite end, never wrote a library",,
2.66505E+17,notjack#9941,2021-07-29,it's good fun! and it's satisfying and enjoyable when people use it and like it,,‚ù§Ô∏è (2)
1.56786E+17,williewillus#8490,2021-07-29,what function do i use if I want a multiline code block that isn't racket code?,,
1.56786E+17,williewillus#8490,2021-07-29,for scribble,,
2.66505E+17,notjack#9941,2021-07-29,"hmm, I think I remember this being a huge pain",,
2.66505E+17,notjack#9941,2021-07-29,"based on the Honu docs, I think `@codeblock` is how you do it https://github.com/racket/honu/blob/b36b9aeda8be22bf7fda177e831f42ac1a1de79b/honu/scribblings/honu.scrbl#L264",,
1.56786E+17,williewillus#8490,2021-07-29,"cool, thanks",,
2.75501E+17,Plane#0324,2021-07-30,seems like you can't make a new sub-thread from an existing thread,,
1.30231E+17,sarna#3904,2021-07-30,yea I don't think they nest,,
1.30231E+17,sarna#3904,2021-07-30,https://docs.racket-lang.org/reference/require.html#%28form._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._planet%29%29,,
1.30231E+17,sarna#3904,2021-07-30,what the heck is this haha,,
3.58051E+17,hazel#0271,2021-07-30,the old package system before raco pkg,,
7.73175E+17,meowüé∫#2842,2021-07-30,It's annoying how PlaneT's replacement doesn't have a name.,,
1.30231E+17,sarna#3904,2021-07-30,yeah but can I still use that function?,,
1.30231E+17,sarna#3904,2021-07-30,does it use the old system or the new one?,,
3.58051E+17,hazel#0271,2021-07-30,not for anything in raco pkg,,meowangry (1)
3.58051E+17,hazel#0271,2021-07-30,"besides the main reason it was moved away from afaik is because it's not really great when you run code, you don't know if you need a network connection to download dependencies or not",,
3.58051E+17,hazel#0271,2021-07-30,same reason Go moved to modules,,
1.30231E+17,sarna#3904,2021-07-30,"yea, it could be a hacky solution for when you just give your program to somebody else",,
1.30231E+17,sarna#3904,2021-07-30,but they'd have to have racket installed so eh,,
1.30231E+17,sarna#3904,2021-07-30,just `raco distribute` tbh,,
1.30231E+17,sarna#3904,2021-07-30,"by the way, I realized that for my git thing to work I need to be able not only to inflate the stuff, but also to deflate it :mew:",,
1.30231E+17,sarna#3904,2021-07-30,and that I have to write myself,,
4.66395E+17,oaktownsam#0815,2021-07-30,Shave that yak,,"ü¶ô (2),üêÇ (3)"
4.66395E+17,oaktownsam#0815,2021-07-30,The gzip implementation in Racket is pretty fascinating.  It's looks to be a translation of the C code directly to Racket. I just skimmed it a few months back.,,
4.62028E+17,StephenD#5938,2021-07-30,why not?,,
6.46114E+17,samth#3420,2021-07-30,@oaktownsam yes it is exactly that. I always wondered if @mflatt did it by hand or with a program.,,
6.88091E+17,mflatt#6350,2021-07-30,By hand,,"meowblushcool (2),üí™ (2)"
6.46114E+17,samth#3420,2021-07-30,That was my guess.,,
7.94955E+17,Laurent O#6627,2021-07-30,Copying the C code is not unreasonable. These classic algorithms have some tricky bits that you need to get just right. Even the papers don't always have all the details. But you know all that :),,
1.30231E+17,sarna#3904,2021-07-30,that gives me an idea :meowsmile:,,
1.30231E+17,sarna#3904,2021-07-30,"by the way, did anyone measure what's the difference in throughput between the racket and C version?",,
1.30231E+17,sarna#3904,2021-07-30,"I mean obviously C will be much faster, but how many times faster? it'd be interesting to see since it's the same code basically",,
1.30231E+17,sarna#3904,2021-07-31,"measured it myself, Racket is 5-6 times slower than g[un]zip on my system",,
1.30231E+17,sarna#3904,2021-07-31,which I'd say is still impressive!,,
1.30231E+17,sarna#3904,2021-07-31,"GC time is pretty cool, look at that
```
cpu time: 30161 real time: 30172 gc time: 47
```",,
6.46114E+17,samth#3420,2021-07-31,It's not really written to be the fastest possible racket code (because that's not what a translation from C gets you),,
1.30231E+17,sarna#3904,2021-07-31,"yeah but it should be at least as correct as the C code, right?",,
1.30231E+17,sarna#3904,2021-07-31,"I'm trying to write deflate on zlib streams, I keep getting the checksum wrong :meowwarp:",,
2.14881E+17,Moinate#6061,2021-07-31,"Suggestions for the #resources channel:
1. Include a single sentence saying what your resource does, if the preview does not contain an easy to read description. Ex: ""Intro college level programming text, has lots of examples and the design process is clearly explained."" (This could even just be the title of the book or course you are linking.)
2. Delete previews of links when they are not helpful. If the project has a landing page, that could be helpful. Github previews I don't find helpful but maybe stars are a signal to some people? ""Cover page * GitBook"" is probably the least useful preview I could find. (Don't take this personally, laugh.)",,plusone (4)
1.30231E+17,sarna#3904,2021-07-31,got it working!,,
1.56786E+17,williewillus#8490,2021-07-31,now compare with an equivalent python impl üòõ,,
1.30231E+17,sarna#3904,2021-07-31,oh I'm sure a pure python impl would be like 100 times slower than C,,
1.30231E+17,sarna#3904,2021-07-31,python is just a C wrapper at the moment though hehe,,
4.62028E+17,StephenD#5938,2021-07-31,Good idea. I‚Äôve done for recent ones of mine,,meowsmile (1)
6.90127E+17,hnbeck#2106,2021-07-31,"With JVM, CLR of .Net you can rule a lot of platforms including mobile platforms. As far as I‚Äôve read here in Discord, it is not possible to compile Racket in their byte code (er Erlang Beam) format. But I never understood why. What do JVM or CLR missing for being a compile target for Racket?",,
4.66395E+17,oaktownsam#0815,2021-07-31,"There would need to be a backend to target those platforms and some amount of runtime support code would have to be written to handle things like ports, continuations, etc.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-07-31,jvm is fairly unfriendly to both tco and reentrant continuations,,
4.62028E+17,StephenD#5938,2021-07-31,"This has confused me about clojure. Does this mean you get to write Java with s-expressions, or do they have a compiler that gives them tco etc.?",,
4.66395E+17,oaktownsam#0815,2021-07-31,They don't have tco,,
2.64024E+17,Eutro#0016,2021-07-31,"Clojure doesn't have TCO, but a special form for a self-recursive tail ""call"" and there's a trampoline function that implements a... trampoline",,
8.14743E+16,jimpjorps#0001,2021-07-31,"yeah, that burned me when I tried to do some exercises in clojure, the stack fills up very rapidly if you forget to use `call` instead of the function‚Äôs own name",,üò¨ (2)
1.30231E+17,sarna#3904,2021-07-31,sheesh,,
1.30231E+17,sarna#3904,2021-07-31,does Clojure have continuations?,,
2.64024E+17,Eutro#0016,2021-07-31,first class? no,,
8.14743E+16,jimpjorps#0001,2021-07-31,it also doesn‚Äôt have reader macros because the designer doesn‚Äôt think they encourage good practice,,
7.94955E+17,Laurent O#6627,2021-07-31,I'm hearing echoes of a serpent who doesn't like multiline lambdas...,,
4.66395E+17,oaktownsam#0815,2021-07-31,TBF the Python syntax re: lambdas feels pretty awkward.,,
2.64024E+17,Eutro#0016,2021-07-31,Python lambdas are awful,,
7.94955E+17,Laurent O#6627,2021-07-31,"""See?! Lambdas are bad, right!""",,"meowwarp (1),üêç (2)"
1.30231E+17,sarna#3904,2021-07-31,"""if it's this long it should have a name"" - the dutchman",,
8.14743E+16,jimpjorps#0001,2021-07-31,Van Rossum wanting to get rid of `map` because it only appeals to Lisp hackers,,meowwarp (1)
1.30231E+17,sarna#3904,2021-07-31,Peter Norvig be like :meowwarp:,,
2.75501E+17,Plane#0324,2021-07-31,i think most python programmers use `lambda` in only very limited circumstances,,
7.94955E+17,Laurent O#6627,2021-07-31,I think every body of a `for` loop in python should also be named!,,"mew (1),üëç (2)"
2.64024E+17,Eutro#0016,2021-07-31,Just use list comprehensions!,,
1.30231E+17,sarna#3904,2021-07-31,I mostly use them in stuff like `key=`,,
1.30231E+17,sarna#3904,2021-07-31,you can write very unreadable code with them hehe :meowsmile:,,
2.64024E+17,Eutro#0016,2021-07-31,The Python way,,
1.30231E+17,sarna#3904,2021-07-31,once I was a bit upset at work and wrote a nested comprehension with a heckload of stuff in it,,salute (1)
8.14743E+16,jimpjorps#0001,2021-07-31,"yeah, I was watching someone try to teach a newbie how to write a nested list comprehension and it just looks like an explosion at the keyword factory",,
1.30231E+17,sarna#3904,2021-07-31,when people will try to push python more because of readability I'll delegate them to my epic code,,
2.64024E+17,Eutro#0016,2021-07-31,Racket's `for/_` üëç,,
2.75501E+17,Plane#0324,2021-07-31,"everyone writes python in the same less-than-ideal fashion because the language makes you do it that way, so people get used to it and can read it anyway",,plusone (1)
1.30231E+17,sarna#3904,2021-07-31,"there are mnemonics for the order in which the keywords must appear, and uh.. mr python, what is this???",,
1.30231E+17,sarna#3904,2021-07-31,"also, related: one of our old python scripts at work was indented by three spaces :mew:",,
1.30231E+17,sarna#3904,2021-07-31,"and there were no local variables, everything had `global` in front of it",,
1.30231E+17,sarna#3904,2021-07-31,I wish I was joking,,
4.66395E+17,oaktownsam#0815,2021-07-31,"```python
"""""" This function will check if the file exits """"""
def check_file(file):
    """"""
        return True if the file exists, else return False
    """"""
    if os.path.isfile(file):
        return True
    
    return False
```",,"meowwarp (2),üëç (1)"
4.66395E+17,oaktownsam#0815,2021-07-31,That's from a file called `useful.py`,,meowsmile (1)
7.94955E+17,Laurent O#6627,2021-07-31,hahaha,,
2.75501E+17,Plane#0324,2021-07-31,"looks right, assuming that any file which exists also exits",,
2.64024E+17,Eutro#0016,2021-07-31,and 90% of the time functions like these are useless anyway because the file could be deleted by the time the method returns üëç,,
1.30231E+17,sarna#3904,2021-07-31,"then you need to check if it really exists, ie
```python
def really_check(file):
    return True if check_file(file) == True else False

if check_file(file) == True:
    really_check(file) and do_something(file)
```",,
1.30231E+17,sarna#3904,2021-07-31,:meowsmile:,,
2.64024E+17,Eutro#0016,2021-07-31,:meowsmile:,,
4.1228E+17,xgqt#8370,2021-07-31,‚úùÔ∏è,,
4.66395E+17,oaktownsam#0815,2021-07-31,"```python
with system_completely_frozen():
  if check_file(file):
    do_something(file)
```",,
4.1228E+17,xgqt#8370,2021-07-31,"for something completely different: there is a CI pipeline for IOS in racket repo.
Is this actually useful, like,  you can build a IOS app with racket backend???",,
1.30231E+17,sarna#3904,2021-07-31,use the GIL to do that :meowsmile:,,
1.30231E+17,sarna#3904,2021-07-31,"you used to be able to do that, I think in later versions you can't",,
1.30231E+17,sarna#3904,2021-07-31,let me dig out Bogdan's post,,
1.30231E+17,sarna#3904,2021-07-31,https://defn.io/2021/01/19/racket-cs-on-ios/,,
4.1228E+17,xgqt#8370,2021-07-31,"> fail with a dynamic code signing error
he means signing for distribution?
f* apple",,plusone (1)
1.30231E+17,sarna#3904,2021-07-31,:plusone:'d from my iphone :mew:,,meowwarp (1)
1.30231E+17,sarna#3904,2021-07-31,I'm never buying their stuff again it's such a pain in the ass haha,,
4.66395E+17,oaktownsam#0815,2021-07-31,"They still run the ios ci, but I have no idea if it is used for anything.
https://github.com/racket/racket/runs/3204102899?check_suite_focus=true",,
4.1228E+17,xgqt#8370,2021-07-31,yes I noticed it on my PRs,,
4.66395E+17,oaktownsam#0815,2021-07-31,oh lol that was your PR,,
4.66395E+17,oaktownsam#0815,2021-07-31,üôÇ,,
4.1228E+17,xgqt#8370,2021-07-31,"yea, haha",,
4.1228E+17,xgqt#8370,2021-07-31,"the Gentoo QA policy habit slipped to my commit messages,
whenever you see full file path in commit msg it is probably me or somebody from Gentoo",,
5.24323E+17,Ben Kenobi#5683,2021-07-31,"me: pretends to be a python programmer. Also me: prefers `map`, `filter`, and `lambda` over practically any list comprehensions. ü§î",,
1.30231E+17,sarna#3904,2021-07-31,"full file path, along with your home dir and everything? ü§î",,
1.30231E+17,sarna#3904,2021-07-31,in python??? ü§îü§î,,
4.1228E+17,xgqt#8370,2021-07-31,"no xD, look at the commit",,
2.64024E+17,Eutro#0016,2021-07-31,list comprehensions should be renamed to list incomprehensibles,,meowsmile (1)
1.30231E+17,sarna#3904,2021-07-31,"ah! I see now :meowsmile: 
isn't the commit message too long in these cases? I try to stick to the limit, I think it's 72 chars",,
4.1228E+17,xgqt#8370,2021-07-31,"well you do top with very brief description
on 2nd next line longer description if needed and on 2nd next line after that you put auto-generated signed-off-by & repoman (QA tool) messages",,
1.30231E+17,sarna#3904,2021-07-31,whew that sounds involved!,,
4.1228E+17,xgqt#8370,2021-07-31,might be... I have scripts that do some of it for me :P,,
3.58051E+17,hazel#0271,2021-07-31,for/* is probably my single favorite Racket feature,,
3.58051E+17,hazel#0271,2021-07-31,so simple but so incredibly useful,,plusone (1)
1.56786E+17,williewillus#8490,2021-07-31,glad to see I'm not alone in my distaste for python,,
2.66505E+17,notjack#9941,2021-07-31,"the `for/*` loops are amazingly useful. they're also very, very weird, tbh.",,
2.66505E+17,notjack#9941,2021-07-31,I've never seen anything like them in mainstream languages,,
2.66505E+17,notjack#9941,2021-07-31,and they confuse people a bit when I first explain them,,
4.66395E+17,oaktownsam#0815,2021-07-31,They're like list-comprehensions++,,
8.14743E+16,jimpjorps#0001,2021-07-31,`for/fold` especially is unusual but once I tried it a few times it ends up being a really useful way to organize the approach to a problem,,
8.14743E+16,jimpjorps#0001,2021-07-31,"here‚Äôs what I‚Äôm iterating over, here‚Äôs the results I‚Äôm building, here‚Äôs what I want to output at the end, here‚Äôs the filter, here‚Äôs the things I do for each item",,
5.24323E+17,Ben Kenobi#5683,2021-07-31,me: _still_ using map/filter/foldl instead of the fold forms üò≥,,
3.58051E+17,hazel#0271,2021-07-31,it depends on how complicated what you want to do is,,
5.24323E+17,Ben Kenobi#5683,2021-07-31,"True, i would probably use the other forms more if i was dealing with hashes or sets or what have you. Threading can make some of the non-for stuff more readable, also",,
4.66395E+17,oaktownsam#0815,2021-07-31,2x size increase converting a JSON file to fasl üò¶,,
2.64024E+17,Eutro#0016,2021-07-31,`for/fold` is just a generalisation of all the other `for/X`s,,
2.64024E+17,Eutro#0016,2021-07-31,they are implemented in terms of it,,
4.66395E+17,oaktownsam#0815,2021-07-31,"ok somehow I inadvertently sent the fasl output to my file twice, so my bad.",,
4.66395E+17,oaktownsam#0815,2021-07-31,"Even worse, I had sent a byte string  of the fasl and every unprintable thing had to be escaped.",,
2.64024E+17,Eutro#0016,2021-07-31,This sounds like bencode with extra steps,,
4.62028E+17,StephenD#5938,2021-07-31,"A langjam just showed up on hn

https://github.com/langjam/langjam",,
4.62028E+17,StephenD#5938,2021-07-31,Langjam,,
3.29023E+17,nixin72#3554,2021-07-31,"I feel like among the various lisp communities (CL, Racket, Clojure, any of them) there‚Äôs a general distaste for Python. It‚Äôs interesting cause it‚Äôs very popular outside them, but lisp people tend to have a disliking for it I find. Idk why. I also really don‚Äôt like it hahah",,
3.58051E+17,hazel#0271,2021-08-01,"mental thoughts:
1. ""why is this reducing to multiple values""
2. ""oh wait this is `amb`""",,
3.58051E+17,hazel#0271,2021-08-01,i sure hope it does,,
2.81975E+17,Aeva#1234,2021-08-01,"well, doesn't anything more popular get swiftly filed away as 'worse as better' üôÑ",,
4.66395E+17,oaktownsam#0815,2021-08-01,I like python.  If I don't do something in Racket it will be in python,,
2.81975E+17,Aeva#1234,2021-08-01,"welll, I have *great* news for you https://github.com/Aeva/snake-oil",,
3.58051E+17,hazel#0271,2021-08-01,terrifying. thank you,,
3.29023E+17,nixin72#3554,2021-08-01,Hahah I hope not. Nothing wrong with liking something popular- it‚Äôs generally popular for a reason üòÖ I just personally feel like Python doesn‚Äôt really do anything particularly well.,,
2.81975E+17,Aeva#1234,2021-08-01,idk my python is pretty good at eating small mammals,,
3.29023E+17,nixin72#3554,2021-08-01,I think my order of language choice for CLI applications would be Clojure -> node -> Racket -> bash -> Python.,,
2.81975E+17,Aeva#1234,2021-08-01,wait what do you do if you need to make it fast tho,,
3.29023E+17,nixin72#3554,2021-08-01,I‚Äôd use Rust if it was anything more significant than just for personal use,,ü¶Ä (1)
3.29023E+17,nixin72#3554,2021-08-01,I never really need to do anything requiring much performance though,,
1.56786E+17,williewillus#8490,2021-08-01,"i guess my problem with python is
1) horrible performance (last tier even among dynamic langs). They're finally working on this at least.
2) mediocre docs
3) significant whitespace
4) ""only one way to do it"" is a lie",,
1.56786E+17,williewillus#8490,2021-08-01,"my gotos would be rust for high perf, probably java or ocaml for mid level perf, and clojure/racket for dynamic",,
2.81975E+17,Aeva#1234,2021-08-01,pythons are great because they have cute little puppy faces,,
2.81975E+17,Aeva#1234,2021-08-01,and they're chill and you can just pick them up and wear them like a shawl and they'll be like yeah this is cool,,"üêç (1),‚ù§Ô∏è (1)"
1.30231E+17,sarna#3904,2021-08-01,"I think 4 is what gets me the most
they've been bashing languges like perl for *years* for having multiple ways to do stuff, and they themselves are not better
but people will learn python without trying anything else and will repeat what they heard :mew:",,
1.30231E+17,sarna#3904,2021-08-01,"python: there's one way to do it!!!
also python: we have like four incompatible async libraries",,
2.81975E+17,Aeva#1234,2021-08-01,"i like python because i can write great volumes of it on two hours of sleep, which is a great quality for a programming language to have when you're chronically sleepy",,
1.30231E+17,sarna#3904,2021-08-01,"great volumes, but will the quality be great? :mew:",,
2.81975E+17,Aeva#1234,2021-08-01,everythings great on two hours of sleep,,üòÅ (2)
3.62812E+17,Alek#3844,2021-08-01,Python is fine if you don't care about your code.,,
4.62028E+17,StephenD#5938,2021-08-01,https://news.ycombinator.com/item?id=28021161,,
4.62028E+17,StephenD#5938,2021-08-01,Python is fine if it pays the bills.,,
4.62028E+17,StephenD#5938,2021-08-01,And micropython is quite nice - I‚Äôve seen worse than https://github.com/pimoroni/pimoroni-pico/blob/main/micropython/examples/pico_display/demo.py,,
4.62028E+17,StephenD#5938,2021-08-01,But I would much prefer a _micro‚Ä¶racket_,,
8.14743E+16,jimpjorps#0001,2021-08-01,"python's just reliable in a very boring, unexciting way which is exactly what you want for the kinds of little projects where python shines",,
4.62028E+17,StephenD#5938,2021-08-01,"Talking about things where **Racket Shines**, is anyone here up for https://github.com/langjam/langjam ?",,
8.14743E+16,jimpjorps#0001,2021-08-01,I'm thinking about it and have a couple ideas for something I'd like to try but august is the time of the year where I have the least free time,,üò≠ (1)
5.24323E+17,Ben Kenobi#5683,2021-08-01,"^this. New job starts around then, so no time :((((",,
5.24323E+17,Ben Kenobi#5683,2021-08-01,"My ‚Äúrip on python‚Äù is I‚Äôm tired of writing it. It doesnt support the types of code I like to write (higher order shenanigans and reasonably functional programming are difficult or obscure). I also (since the completion of my ugrad thesis) havent done a lot of numerics/machine learning‚Äîand when I did, i hated using python for it! It encouraged an exploratory method (fine), but typical projects would be unorganized, hard to understand/modify, etc. I‚Äôve written one or two cool things in Python (a versioned artifact cache and a CLI template system), so I like to think I know the core language alright. I‚Äôm just not happy working with it",,
1.30231E+17,sarna#3904,2021-08-01,"I'm rewriting snippets from a book I follow from Ruby to Racket and man, OOP + dynamic typing + mutation everywhere really makes me uneasy. I find it very hard to follow what's going on",,
4.62028E+17,StephenD#5938,2021-08-01,"Oooh gradually typed, statically checked oop language *without* mutation.",,
1.30231E+17,sarna#3904,2021-08-01,haskell has type**classes** :meowsmile:,,
1.56786E+17,williewillus#8490,2021-08-01,Yeah I think dynamic is fine but it has to have easy immutability,,plusone (1)
1.56786E+17,williewillus#8490,2021-08-01,Which is basically just clojure,,
4.62028E+17,StephenD#5938,2021-08-01,"gradually typed, statically checked oop language without mutation or classes.",,
1.30231E+17,sarna#3904,2021-08-01,typescript with react and lodash? lol,,
3.79445E+17,joohnym#9531,2021-08-01,I'm interested in this as well. How does it work with existing python libraries? Can you use numpy or the ML packages?,,
4.62028E+17,StephenD#5938,2021-08-01,Declarative GUI in Racket https://youtu.be/AXJ9tTVGDwU,,
3.58051E+17,hazel#0271,2021-08-01,people complain about lisp having too many parens? well redex has too many ellipses,,üíØ (3)
2.64024E+17,Eutro#0016,2021-08-01,What do people think about stateful macros?,,
2.64024E+17,Eutro#0016,2021-08-01,such as,,
2.64024E+17,Eutro#0016,2021-08-01,"!rkt eval ```
#lang racket
(define-syntax previous
  (let ([existing null])
    (lambda (stx)
      (set! existing (cons (cadr (syntax-e stx)) existing))
      #`(values #,@existing))))
(previous 1)
(previous 2)
(previous 3)
```",,
8.02004E+17,r16#4581,2021-08-01,"1
2
1
3
2
1",,
3.5323E+17,Alex Knauth#4895,2021-08-01,"I think stateful macros are cool, but... well... I'm still scared of them. And so I try to put restrictions, like the ""declare, extend, finalize"" pattern, where after it's finalized you can't extend it, and there has to be only be one finalize in the program, and uses only get the one true finalized version. That's just me though",,
7.94955E+17,Laurent O#6627,2021-08-01,Interesting! Do you have a live example?,,
3.5323E+17,Alex Knauth#4895,2021-08-01,"There's a scribble file that uses `scribble/example` that I made some stateful macros for. We wanted to generate 3 things from these stateful macros: (1) A submodule containing library code, (2) A submodule containing unit tests for it, and (3) Scribble codeblocks, examples, etc.

The stateful macros I made include a ""declare"" macro to declare the ""library"" and ""test"" submodules, an ""extend"" macro to both extend a submodule that has been declared, and optionally add things to the scribble codeblocks or examples, and a ""finalize"" macro to actually produce the submodules.",,
3.5323E+17,Alex Knauth#4895,2021-08-01,"It was partly inspired by literate programming things such as `scribble/lp`, and partly inspired by `module+`",,
7.94955E+17,Laurent O#6627,2021-08-01,"Interesting, thanks!",,
2.81975E+17,Aeva#1234,2021-08-01,"it embeds python3, so it can do *everything*.  only basic types are supported right now for the transport between racket and python but you could do numpy stuff and then return like a tuple of numbers or something and that would work great",,
2.66505E+17,notjack#9941,2021-08-01,I wonder if you could use `prop:serializable` to make a protocol for sending more complex racket types to and from python,,ü§î (1)
3.79445E+17,joohnym#9531,2021-08-01,Sounds great! Thanks.,,
3.62812E+17,Alek#3844,2021-08-01,Is there any point in using dr racket when I already have experience?,,
8.14743E+16,jimpjorps#0001,2021-08-01,the debugger and macro stepper are useful,,
3.62812E+17,Alek#3844,2021-08-01,"Hm, I see",,
1.56786E+17,williewillus#8490,2021-08-01,"It's quite a bit of overhead
I find it pretty limiting except for very specific scenarios",,
1.56786E+17,williewillus#8490,2021-08-01,I just use emacs,,
8.14743E+16,jimpjorps#0001,2021-08-01,if you've already got an editor you're comfortable with and it handles lisp-like languages well then no reason to rock the boat there,,
3.62812E+17,Alek#3844,2021-08-01,I use Neovim,,
5.24323E+17,Ben Kenobi#5683,2021-08-01,"@Alek i use plain vim, but heavily (you might see me on vi.stackexchange.com if you‚Äôre ever there)",,
3.58051E+17,hazel#0271,2021-08-01,I use DrRacket to debug macros,,
3.62812E+17,Alek#3844,2021-08-01,"Quite frankly, I have no idea why anybody still uses Vim! Lua is a much better configuration language, and I'm slowly moving my config over to it.",,
3.58051E+17,hazel#0271,2021-08-01,also nvim doesn't work well for doing things with picts,,
3.58051E+17,hazel#0271,2021-08-01,because command line,,
3.62812E+17,Alek#3844,2021-08-01,"Oh, right. I guess I'll need that for SICP?",,
3.58051E+17,hazel#0271,2021-08-01,the picture language? yeah,,
3.58051E+17,hazel#0271,2021-08-01,you can just skip it tbh,,
3.58051E+17,hazel#0271,2021-08-01,I mean picts are just generally useful,,
3.62812E+17,Alek#3844,2021-08-01,Yeah. The terminal is just so cozy though...,,
2.75501E+17,Plane#0324,2021-08-01,i mostly use vi since it's what i've been using for the past erm . . . quarter century,,
2.75501E+17,Plane#0324,2021-08-01,i do like drracket,,
2.75501E+17,Plane#0324,2021-08-01,i also use it for the macro stepper,,
3.62812E+17,Alek#3844,2021-08-01,"Damn bro, you must be an elder hacker",,
2.75501E+17,Plane#0324,2021-08-01,lol,,
3.62812E+17,Alek#3844,2021-08-01,I'm not even in college yet,,
2.75501E+17,Plane#0324,2021-08-01,i'm 39 although i am not a bro as it happens,,
2.75501E+17,Plane#0324,2021-08-01,but both of my parents were programmers so i got started early with computers,,
3.62812E+17,Alek#3844,2021-08-01,Bro is gender neutral now,,
2.75501E+17,Plane#0324,2021-08-01,lol,,
3.62812E+17,Alek#3844,2021-08-01,It took me a long time to get into tech. Nobody around me was into it,,
3.62812E+17,Alek#3844,2021-08-01,"I was at a liberal arts college when I decided to start learning, so I pirated a C textbook and just started reading and doing the problems",,
3.62812E+17,Alek#3844,2021-08-01,That was... a year and a half ago? I've also been messing around with Linux since high school,,
2.75501E+17,Plane#0324,2021-08-01,"cool, if you just keep doing stuff you can learn fast",,
3.62812E+17,Alek#3844,2021-08-01,"Doing is definitely the best way, though I often have trouble decomposing large projects into manageable problems",,
3.62812E+17,Alek#3844,2021-08-01,Right now I'm doing project Euler. It's really fun!,,
2.75501E+17,Plane#0324,2021-08-01,nice (:,,
3.62812E+17,Alek#3844,2021-08-01,You should absolutely try neovim. It's got so many more features than just vi.,,
2.75501E+17,Plane#0324,2021-08-01,i've tried it,,
2.75501E+17,Plane#0324,2021-08-01,"when i said vi, i meant vim specifically",,
3.62812E+17,Alek#3844,2021-08-01,"Oh, I see.",,
3.62812E+17,Alek#3844,2021-08-01,What did you not like about it?,,
2.75501E+17,Plane#0324,2021-08-01,"it's not terribly relevant to most people these days, but vi was originally a program by bill joy, and then was standardized",,
2.75501E+17,Plane#0324,2021-08-01,"so programs which implement the behavior in that standard can be called vi, including vim or neovim",,
2.75501E+17,Plane#0324,2021-08-01,i didn't say i didn't like something about it,,
2.75501E+17,Plane#0324,2021-08-01,but there's a cost to switching and i haven't yet wanted to invest the time and energy,,
2.75501E+17,Plane#0324,2021-08-01,"i tried it, seems pretty neat",,
3.62812E+17,Alek#3844,2021-08-01,"Makes sense. I think Linus still uses some old, unmaintained version of microemacs",,
3.62812E+17,Alek#3844,2021-08-01,"For me Neovim is great because I already am comfortable with Lua, so if I want to write a plugin or something I can do it. I'm sorry but vimscript just looks awful.",,
2.75501E+17,Plane#0324,2021-08-01,"oh sure, i've always used various languages embedded in vim",,
5.24323E+17,Ben Kenobi#5683,2021-08-01,"The cost is too high for me. I have a relatively expert knowledge of a large subset of vim. I‚Äôm not a terrible fan of lua or some of the idioms it uses for configuring neovim, either. Not a bad language, just not an editing language, for me. And I‚Äôve got a *lot* of vimscript, a fair bit of which is simply not compatible with neovim apis and makes no effort to be.",,
2.75501E+17,Plane#0324,2021-08-01,"yeah, switching can have a high cost",,
2.75501E+17,Plane#0324,2021-08-01,"i do like to keep up with new tools, because it's really easy not to, and to miss something that's actually really nice",,
2.75501E+17,Plane#0324,2021-08-01,"i haven't put enough time into neovim to decide if i consider it one of those, though it looks nice",,
2.75501E+17,Plane#0324,2021-08-01,as i get older i notice sometimes i'm kinda behind the times here or there . . . lol,,
2.75501E+17,Plane#0324,2021-08-01,some of the new rewrite-it-in-rust tools are pretty nice.  i love ripgrep,,‚ù§Ô∏è (1)
2.75501E+17,Plane#0324,2021-08-01,i eventually gave up on training myself not to type `| grep`  and just aliased `grep` to `rg` lol,,
2.75501E+17,Plane#0324,2021-08-01,`fd-find` is also nice,,
2.75501E+17,Plane#0324,2021-08-01,"as much as i'm used to vim though, i haven't ever felt like my setup is quite perfect for editing scheme / racket",,
2.75501E+17,Plane#0324,2021-08-01,"my auto-indent is always just a little different from what i'd get in drracket, etc",,
2.75501E+17,Plane#0324,2021-08-01,i do really miss rainbow parens when i go to drracket though,,
3.62812E+17,Alek#3844,2021-08-01,Take a look at these,,
3.62812E+17,Alek#3844,2021-08-01,https://github.com/ibraheemdev/modern-unix,,
3.62812E+17,Alek#3844,2021-08-01,"Of these, I would consider `tldr` probably the most useful.",,
2.75501E+17,Plane#0324,2021-08-01,"oh yeah, i'm familiar with some of these",,
2.75501E+17,Plane#0324,2021-08-01,thanks,,
3.62812E+17,Alek#3844,2021-08-01,No prob!,,
2.75501E+17,Plane#0324,2021-08-01,the main two in there i hear a lot about but don't use are fzf and mcfly,,
1.56786E+17,williewillus#8490,2021-08-01,tldr >.>,,
1.56786E+17,williewillus#8490,2021-08-01,Only a thing because linux culture has horrible man pages,,
1.56786E+17,williewillus#8490,2021-08-01,"""see the info page"" -all gnu tools",,
1.56786E+17,williewillus#8490,2021-08-01,BSD man pages üòç almost racket level detail and clarity,,
3.62812E+17,Alek#3844,2021-08-01,info page is completely stupid idea,,
3.62812E+17,Alek#3844,2021-08-01,"I dunno how many BSD man pages I've read, but `ssh` has a really nice one.",,
1.56786E+17,williewillus#8490,2021-08-01,"ssh is written and maintained by openBSD, so yeah, that kind of style",,
4.66395E+17,oaktownsam#0815,2021-08-01,Because I have a bunch of machines that never have all of my vim config my baseline is pretty small (like 20ish settings) so moving to neovim wasn't too bad.,,
3.58051E+17,hazel#0271,2021-08-01,I've considered moving to Neovim a few times because I think I'd prefer Fennel to Elisp,,
3.58051E+17,hazel#0271,2021-08-01,lisp-2s are not my thing,,
2.75501E+17,Plane#0324,2021-08-01,"i don't think info pages are a bad idea, but i generally like tools that have man pages",,
3.58051E+17,hazel#0271,2021-08-01,"but tbh I just don't care enough to switch, and also I am a maintainer of a library which uses picts *heavily*",,
2.75501E+17,Plane#0324,2021-08-01,"or, assuming the tools have expanded to the point that they include a mail client, some decent built-in help is nice",,
3.62812E+17,Alek#3844,2021-08-01,Just use git to track your dots man,,
5.24323E+17,Ben Kenobi#5683,2021-08-01,What do you have going so far? I‚Äôm working on improving vim+racket in my vanishingly small free-time üôÇ,,
3.62812E+17,Alek#3844,2021-08-01,"I'm a racket newb, but an obvious answer is just being able to put parens around something fast.",,
3.62812E+17,Alek#3844,2021-08-01,Vim has solutions for that,,
3.58051E+17,hazel#0271,2021-08-01,the big draw for emacs+racket or drracket is racket-xp-mode,,
3.58051E+17,hazel#0271,2021-08-01,I think that racket-langserver or w/e is a thing now though,,
3.58051E+17,hazel#0271,2021-08-01,Greg's work on racket-mode is truly phenomenal,,
3.62812E+17,Alek#3844,2021-08-01,what's racket xp mode?,,
5.24323E+17,Ben Kenobi#5683,2021-08-01,"Tpope‚Äôs surround, plus https://github.com/benknoble/vim-sexp and https://github.com/tpope/vim-sexp-mappings-for-regular-people are my goto s-exp editing stuff. I added racket-langserver to ALE. More of my vim here: https://gist.github.com/benknoble/c56c8b211dd3976153320b3f9c2dfcd9",,
4.66395E+17,oaktownsam#0815,2021-08-01,neovim + langserver has been working ok pretty good for me.,,
3.58051E+17,hazel#0271,2021-08-01,basically drracket's functionality in emacs,,
5.24323E+17,Ben Kenobi#5683,2021-08-01,How do i get rid of all the previews‚Ä¶,,
2.75501E+17,Plane#0324,2021-08-01,oh yeah i love the langserver stuff,,
3.58051E+17,hazel#0271,2021-08-01,"jumping to definitions, showing bound variables, showing where things come from, etc",,
2.75501E+17,Plane#0324,2021-08-01,@Ben Kenobi surround the url with `<` and `>`,,
4.66395E+17,oaktownsam#0815,2021-08-01,there should be a little x in the upper right of each preview,,
2.75501E+17,Plane#0324,2021-08-01,"<http://www.example.com>
```
<http://www.example.com>
```",,
5.24323E+17,Ben Kenobi#5683,2021-08-01,*sigh* silly mobile ui,,
5.24323E+17,Ben Kenobi#5683,2021-08-01,If i can get greg‚Äôs racket stuff to work in vim it will be a complete joy,,
2.75501E+17,Plane#0324,2021-08-01,"i never knew about the little 'x', i always just typed the `<` and `>` lol",,
4.66395E+17,oaktownsam#0815,2021-08-01,I didn't know about the angle brackets!  Everyone wins!,,
2.75501E+17,Plane#0324,2021-08-01,yay,,
2.75501E+17,Plane#0324,2021-08-01,i do also use `rainbow.vim`,,
2.75501E+17,Plane#0324,2021-08-01,i think this <https://github.com/luochen1990/rainbow>,,
2.75501E+17,Plane#0324,2021-08-01,but i changed the colors,,
4.66395E+17,oaktownsam#0815,2021-08-01,"```
syntax on

set background=dark
let g:solarized_termtrans=1
let g:airline_powerline_fonts=1

colorscheme solarized

set nobackup
set number
set sw=4
set ts=4
set ai
set sm
set et
filetype plugin indent on

source ~/.config/nvim/lsp.vim
```",,
4.66395E+17,oaktownsam#0815,2021-08-01,aside from airline solarize and lsp I've had that config for like 20 years,,
2.75501E+17,Plane#0324,2021-08-01,i set all the colors in my copy of `rainbow.vim` with rgb,,
2.75501E+17,Plane#0324,2021-08-01,it's cool terminals these days support 24-bit color,,üåà (2)
2.75501E+17,Plane#0324,2021-08-01,i'm allergic to solarized but it does seem to be very popular these days,,
3.62812E+17,Alek#3844,2021-08-01,Don't most terminals support... a lot more colors than that?,,
3.62812E+17,Alek#3844,2021-08-01,"Also solarized sucks, yes",,
2.75501E+17,Plane#0324,2021-08-01,a lot more than 2^24 colors?,,
3.62812E+17,Alek#3844,2021-08-01,"Oh, that is a lot.",,
5.24323E+17,Ben Kenobi#5683,2021-08-01,"Alas, working on the slack archive has meant dropping work on vim+racket üòû",,
2.75501E+17,Plane#0324,2021-08-01,we appreciate your work though!,,salute (3)
5.24323E+17,Ben Kenobi#5683,2021-08-01,Hilariously apple‚Äôs terminal.app is still only 256-color,,
2.75501E+17,Plane#0324,2021-08-01,in my mind it wasn't that long ago that 256-color was considered ridiculously fancy,,plusone (2)
2.75501E+17,Plane#0324,2021-08-01,i own a physical vt220 lol,,ü§Ø (2)
5.24323E+17,Ben Kenobi#5683,2021-08-01,Dracula all the things üßõ‚Äç‚ôÇÔ∏èüòÇ,,
2.75501E+17,Plane#0324,2021-08-01,mine is amber,,
4.66395E+17,oaktownsam#0815,2021-08-01,I also like Light Mode so whatevs,,
3.62812E+17,Alek#3844,2021-08-01,Gruvbox,,
2.75501E+17,Plane#0324,2021-08-01,"""light mode is evil!!"" is a bit of a meme but it's actually really important to support light mode for accessibility reasons",,plusone (2)
4.66395E+17,oaktownsam#0815,2021-08-01,I had a Wyse Green terminal.  I used it to feel cool and read email.,,
4.66395E+17,oaktownsam#0815,2021-08-01,Rather it was a green crt.,,
3.5323E+17,Alex Knauth#4895,2021-08-02,"I wish there was something that wasn't quite so bright, like a tan mode or sepia mode or something",,
3.5323E+17,Alex Knauth#4895,2021-08-02,"Discord is mostly text which I normally prefer to read with the text darker than the background, but Discord Light Mode is just too bright for me so I want a middle ground",,
1.30231E+17,sarna#3904,2021-08-02,like gruvbox?,,
3.79445E+17,joohnym#9531,2021-08-02,"Just curious, is there going to be a RacketCon 2021? If yes, when does it usually get announced?",,
4.66395E+17,oaktownsam#0815,2021-08-02,@samth @mflatt may know the current plans,,
3.58051E+17,hazel#0271,2021-08-02,,https://cdn.discordapp.com/attachments/618895179343986688/871816370298421308/Screenshot_from_2021-08-02_14-06-44.png,üëç (7)
4.66395E+17,oaktownsam#0815,2021-08-02,Rough Rhombus prototype for the daring: <https://github.com/racket/rhombus-brainstorming/pull/163#issuecomment-891244747>,,üëç (2)
4.62028E+17,StephenD#5938,2021-08-02,"> Typing 7 characters is already a pretty light penance for declaring a mutable variable.

(@sorawee spotted it first)",,meowsmile (3)
8.14743E+16,jimpjorps#0001,2021-08-02,"in F# it's `let mutable`, so someone else agreed that it wasn't much of an imposition",,
2.19842E+17,&t#1161,2021-08-03,btw is there any way to declare a variable mutable in racket other than putting a `set!` form in the definitions window?,,
2.81975E+17,Aeva#1234,2021-08-03,you could do evil things with the ffi,,
2.66505E+17,notjack#9941,2021-08-03,"you don't generally need to declare variables mutable unless you plan on allowing other modules to mutate them, in which case I suggest just sticking your mutable state in an object of some sort, such as a box, a mutable collection, or a mutable struct",,plusone (2)
5.39603E+17,spacey üåå#7238,2021-08-03,Solarized is great! But gruvbox best box :),,
4.1228E+17,xgqt#8370,2021-08-03,guys you havent used the spacemacs dark theme,,
5.24323E+17,Ben Kenobi#5683,2021-08-03,"For a pollen project, or maybe many other kinds of projects, how would you go about handling turning a JSON file into a performant data-source? What I really need to be able to do is turn the JSON hash (maps IDs to metadata) into an efficient way to lookup things by ID. I may also have to do a reverse lookup via one of the metadata. My initial thought was to read the JSON file to a hash, and then generate a racket file that provides a binding to that hash, but I feel like I'm likely to get caught up in some kind of string-formatting/escaping problem there.",,
8.56392E+17,themanager#9165,2021-08-03,"Hi, folks. So, I've finished writing the very first pre-pre-draft version. The paper itself is an attempt to introduce a new concept, and the reason that I am sending it to you is that I mention Racket in the Related Work section. Because I am not sure about my knowledge of Racket, as you are representatives of Racket's community, I ask you to clarify points that I make about Racket and, especially, about syntax object properties. Even better, it would be a pleasure if you'd tell me if I miss something about them so that I can do a deeper comparison in the mentioned section. 

Please remember that it is not the final draft version; I didn't even write the abstract yet and omitted absolutely all citations. So, please don't focus on the style but rather on the points I make about Racket. Below is the link through which you can access the paper. Please make sure you read the introduction first to grasp the right impression of the concept:

https://loreangraph.github.io/properties1.pdf",,
4.66395E+17,oaktownsam#0815,2021-08-03,So if it's a big json that just takes a long time to parse and I'm going to use it in other scripts I will write out the jsexpr to a fasl which makes loading faster.,,
5.24323E+17,Ben Kenobi#5683,2021-08-03,"Never heard of fasl, have to do some digging. I have to generate the result regardless, so I don't mind that bit. I also considered writing a json-wrapping lang that used `read-json` and provided the binding.",,
4.66395E+17,oaktownsam#0815,2021-08-03,https://docs.racket-lang.org/reference/fasl.html,,
2.75501E+17,Plane#0324,2021-08-03,i use fasl with `racket/serialize`,,
5.24323E+17,Ben Kenobi#5683,2021-08-03,I think I‚Äôm going to write the custom module language and then time loading from fasl versus the module,,
5.24323E+17,Ben Kenobi#5683,2021-08-04,"I'm timing 4 strategies based on the above conversation. Consistently, putting the jsexpr in a module or using a custom lang which reads the raw json out of the module is the fastest (timings attached). Can anyone make sure my benchmark isn't doing something stupid? (e.g., using `(void)` like I did to ignore the result isn't causing the optimizer to eliminate whole swaths of the program?)",,
5.24323E+17,Ben Kenobi#5683,2021-08-04,<https://github.com/benknoble/racket-json-data-profile>,,
5.24323E+17,Ben Kenobi#5683,2021-08-04,"Seems to be at least consistent
```
Œª racket timeit.rkt
read-json from file
cpu time: 86 real time: 86 gc time: 10
direct value
cpu time: 13 real time: 13 gc time: 1
fasl->sexp (embedded)
cpu time: 41 real time: 41 gc time: 9
custom #lang
cpu time: 17 real time: 17 gc time: 4

Œª racket timeit.rkt
read-json from file
cpu time: 78 real time: 78 gc time: 4
direct value
cpu time: 13 real time: 13 gc time: 2
fasl->sexp (embedded)
cpu time: 39 real time: 39 gc time: 6
custom #lang
cpu time: 13 real time: 13 gc time: 2

Œª racket timeit.rkt
read-json from file
cpu time: 80 real time: 80 gc time: 5
direct value
cpu time: 12 real time: 12 gc time: 2
fasl->sexp (embedded)
cpu time: 40 real time: 40 gc time: 8
custom #lang
cpu time: 10 real time: 10 gc time: 1
```",,
5.24323E+17,Ben Kenobi#5683,2021-08-04,Oh I should mention the test data was basically a hash with 10000 keys,,
4.66395E+17,oaktownsam#0815,2021-08-04,How big is the json?,,
5.24323E+17,Ben Kenobi#5683,2021-08-04,"`du` says 2.1M, `ls` says 1.9M",,
5.24323E+17,Ben Kenobi#5683,2021-08-04,"so, ""big"" but not ""huge""",,
2.66505E+17,notjack#9941,2021-08-04,"You're compiling the files ahead of time. That means that by the time you actually measure the program runtime, the `#lang jsond` reader has _already_ read and parsed the json.",,
2.66505E+17,notjack#9941,2021-08-04,Which is pretty great for json files that won't change much and that you can check into source control,,
5.24323E+17,Ben Kenobi#5683,2021-08-04,"Ah, forgot about that, no wonder it performed so closely to dumping the jsexpr. I‚Äôll package up that little lang tomorrow or the next day. Thoughts on the provided name ? For the test it was just `json` but i was thinking about making it based on the name of the file if there is one",,
2.66505E+17,notjack#9941,2021-08-04,"Perhaps require specifying a name for the json in the file itself? Maybe with a keyword argument?
```json
#lang jsond
#:name my-json-data
{
  ""foo"": 42,
  ""bar"": 5
}
```",,plusone (1)
2.66505E+17,notjack#9941,2021-08-04,"that would also give you a good way to define multiple json values in the same file
```json
#lang jsond
#:name foo-object
{""foo"": 42}
#:name bar-object
{""bar"": 5}
```",,
8.56392E+17,themanager#9165,2021-08-05,Folks?,,
4.62028E+17,StephenD#5938,2021-08-05,"Sorry as a 21 page paper I‚Äôm out of my depth I‚Äôm this.

 if you ask specific questions in #help on the the points you are unsure about some of us may be able to respond üòÄ",,
8.56392E+17,themanager#9165,2021-08-05,"Oh, sorry, I didn't ask for reading the whole paper; I just asked about reading my points about Racket, which primarily reside in the Related Work. All right, then I'll try to speak them out here. Could you tell me, what is the estimated background on type theory here, please?",,
5.24323E+17,Ben Kenobi#5683,2021-08-05,"@samth is the typed/racket person, so by my guess would have the most experience^",,
4.62028E+17,StephenD#5938,2021-08-05,It is quite a varied community - some will have  knowledge of type theory. (The #help channel is best for questions & answers.),,
1.30231E+17,sarna#3904,2021-08-05,I'd also advise making a thread specifically for that so it doesn't get buried in other conversations (like it did before),,
4.62028E+17,StephenD#5938,2021-08-05,"FYI @ckmachine on the racket slack wrote:

> Hello everyone, just wanted to to quick sync up on what projects everyone is working on. Let me know if any of you are interested to work on anything, or is looking for a new project (heres a list of some projects https://docs.google.com/document/d/1zNh3SLzPqQ4osQtf0xEnoCPw-eCdviF3XQvooZHhRkg/edit?usp=sharing):
> 
> ÓîÜ    Unless someone else is working on it, or wants to work on, I can take the support the number pyramid. We can start by first integrating the Pyret/Whalesong‚Äôs library, followed by trying to update or port fractional.js stuff in there (to be able to use new  BigInt ).

>  üçè   Arthur is working on Stopify integration, which will give us continuations and proper tail calls.",,"plusone (1),racketflat (1)"
1.93202E+17,rocketnia#4517,2021-08-05,"ooh, glad to see Stopify in use here",,
1.93202E+17,rocketnia#4517,2021-08-05,"oh, this is about RacketScript! I didn't even know there was a #racketscript channel on the Slack",,
7.14999E+17,gingerydoo#7461,2021-08-05,"Just thought of something. Would be interested to know if someone has done R&D in this area.

Consider a function that forwards arguments to `format`.

```
(define (notify-user! . v)
  (printf ""> ~a"" (apply format v)))
```

If I wanted to attach a contract to `notify-user!`, is it possible to ""move"" the domain restrictions from `format`'s contract, such that the arguments are not checked again by the time they are passed to `format`?",,
2.66505E+17,notjack#9941,2021-08-05,"there isn't a way to do that with those particular APIs, but what I usually do for that kind of thing in principle is bundle up the arguments into a struct so that the invariants can be checked once at construction time and forwarding it around only requires checking a struct type predicate",,plusone (1)
2.66505E+17,notjack#9941,2021-08-05,I can't think of a clean way to apply that principle to your example,,
7.14999E+17,gingerydoo#7461,2021-08-05,"It makes sense. Having ""tonal"" code is not worth sacrificing wise use of existing tools. üôÇ",,
4.66395E+17,oaktownsam#0815,2021-08-05,"That is an interesting thought.  It may be worth asking about on the mailing list.  Perhaps Robby has some pointers on if it is possible, or researched.",,
8.56392E+17,themanager#9165,2021-08-06,Thanks.,,
7.14999E+17,gingerydoo#7461,2021-08-08,I want to give a shout out to whomever upgraded the Racket releases to use SHA-256 for integrity. Thank you for hardening things a bit üëç,,üôå (3)
5.24323E+17,Ben Kenobi#5683,2021-08-09,"I have a file `private/for-jsond.rkt` that starts `#lang jsond`, but `raco setup --tidy --avoid-main --check-pkg-deps --unused-pkg-deps --pkgs <PACKAGE>` reports `jsond` as an unused dependency. How do I fix that? The file exists because I thought it would make the dep explicit; the dep really shows up at runtime in generated files, if that matters. (Is this because I have the local development version of `jsond` installed?)",,
5.24323E+17,Ben Kenobi#5683,2021-08-09,"On a different note, if I want to create a directory with a mix of generated files and files that are statically part of my package, is `define-runtime-path` the right answer for the static files? _e.g._, `racket -l my-package` should make `dir` containing `a.rkt` generated and `b.rkt` which is equivalent to `my-package/static/b.rkt`; do I `define-runtime-path` for `b.rkt` and then ""copy"" it? Or do I _shudders_ have to put the static file contents in a string?",,
5.34547E+17,nullchinchilla#3746,2021-08-10,Is there some flag to `racket` so that `racket foo.rkt` automatically caches bytecode like `raco make foo.rkt && racket foo.rkt` would? Iterating racket programs on the command line is annoying because `racket` doesn't cache any bytecode and compiles anything that `raco` didn't cache from scratch,,
1.56786E+17,williewillus#8490,2021-08-10,if you're iterating does it matter too much if you compile? it's not like rust where the difference between unopt and opt is 20x,,
1.56786E+17,williewillus#8490,2021-08-10,for racket i doubt (random guess) you'd even see 2x from compiling,,
7.94955E+17,Laurent O#6627,2021-08-10,Why not write a one line shell script that just does raco make && racket?,,plusone (1)
6.88091E+17,mflatt#6350,2021-08-10,"There's a ""custom-load"" package that would at least let you write `racket -l custom-load/top -t foo.rkt`.",,
5.34547E+17,nullchinchilla#3746,2021-08-10,"not for runtime performance, but for load-time",,
1.56786E+17,williewillus#8490,2021-08-10,i still don't really observe much of a difference in load time,,
1.56786E+17,williewillus#8490,2021-08-10,you'd probably have better luck using #lang racket/base everywhere if you aren't already,,üëå (1)
1.93202E+17,rocketnia#4517,2021-08-10,"I have a project (Punctaffy) where a even a tiny example which just builds a short list and `map`s over it takes like half an hour to compile. And that's not a property of Racket itself; the Punctaffy macros are just implemented in a dreadfully inefficient way right now, with diabolically nested loops and lots of error-checking.

In general, compile time can be arbitrarily expensive when user-defined macros and parsers are involved.",,üò´ (1)
5.24323E+17,Ben Kenobi#5683,2021-08-10,"solved it (see Slack also): `#lang jsond` expands without any reference to `jsond`, but `#lang racket/base (require jsond)` will still have such references, so the `raco setup` correctly notices the dependency. Still seems like a kind of bug: you need the language to do the expansion, even if the expansion doesn't further depend on the package. Or maybe this is a ""build-dep""? But since I need it at runtime, too, the require version is fine",,
5.34547E+17,nullchinchilla#3746,2021-08-11,for typed racket the difference is insane,,
5.34547E+17,nullchinchilla#3746,2021-08-11,I don't want to wait 20 seconds for everything to typecheck before my program starts,,
5.34547E+17,nullchinchilla#3746,2021-08-11,"or at least I'd expect that after the firs ttime the bytecode is cached, drracket does that too",,
5.34547E+17,nullchinchilla#3746,2021-08-11,but unless I run raco make racket doesn't cache any bytecode at all,,
5.34547E+17,nullchinchilla#3746,2021-08-11,which is the part I find weird,,
7.94955E+17,Laurent O#6627,2021-08-11,In drracket language preferences you can check some buttons to cache compilation,,
7.94955E+17,Laurent O#6627,2021-08-11,Not sure if your issue is with this though,,
2.14881E+17,Moinate#6061,2021-08-11,"you can tell nullchinchilla is not a Julia user 
(joke)",,
8.14743E+16,jimpjorps#0001,2021-08-11,:juliaspinner:,,
5.39603E+17,spacey üåå#7238,2021-08-11,Is that the Julia logo?,,
8.14743E+16,jimpjorps#0001,2021-08-11,yes,,
8.14743E+16,jimpjorps#0001,2021-08-11,"well, part of the wordmark for it",,
8.14743E+16,jimpjorps#0001,2021-08-11,,https://cdn.discordapp.com/attachments/618895179343986688/875036404244152390/logo.png,
5.34547E+17,nullchinchilla#3746,2021-08-11,My issue is trying to get `racket` to do this,,
5.34547E+17,nullchinchilla#3746,2021-08-11,"DrRacket, of course, caches stuff perfectly",,
2.14881E+17,Moinate#6061,2021-08-11,"oh.
is this a problem ""in principle"", right? 
i thought the workaround of wrapper script that was mentioned seemed pretty reasonable https://discord.com/channels/571040468092321801/618895179343986688/874548158917668904",,
2.34164E+17,python#3213,2021-08-11,Is there a discord server for Julia user's?,,
8.14743E+16,jimpjorps#0001,2021-08-11,"yeah, ""Humans of Julia""",,
2.34164E+17,python#3213,2021-08-11,Thanks,,
2.66505E+17,notjack#9941,2021-08-11,I wish that I could just refer to fields by name in struct `#:methods`,,
2.66505E+17,notjack#9941,2021-08-11,"so instead of this:
```scheme
(struct foo (x)
  #:methods gen:equal+hash
  [(define (equal-proc this other recur)
     (recur (foo-x this) (foo-x other)))
   ...])
```
I wish I could write this:
```scheme
(struct foo (x)
  #:methods gen:equal+hash
  [(define (equal-proc this other recur)
     (recur x (foo-x other)))
   ...])
```
and it would be smart enough to turn references that are `free-identifier=?` to struct fields into `(accessor this)`",,
1.93202E+17,rocketnia#4517,2021-08-12,"yeah, I have a lot of methods that basically have `match-define` as their first line",,
1.93202E+17,rocketnia#4517,2021-08-12,"in that case, I'd have two, one for `this` and one for `other`",,
1.77948E+17,anise_starly#4576,2021-08-13,"Forgive me if this is not the appropriate channel for this, but I'm curious if anyone can point me at some solid Vim plugins for Racket?",,
8.14743E+16,jimpjorps#0001,2021-08-13,the racket guide has some starting recommendations https://docs.racket-lang.org/guide/Vim.html,,
1.77948E+17,anise_starly#4576,2021-08-13,Oh nice. Wasn't expecting that. Thank you!,,
5.24323E+17,Ben Kenobi#5683,2021-08-13,"_shameless plug_ https://github.com/benknoble/vim-racket my fork has gone a little bit beyond the original. It also supports ALE (which I've worked to add more racket support to), so they sort of interoperate. racket-langserver makes things especially nice. Ping me if you have questions; I also hang out at vi.stackexchange.com",,
1.77948E+17,anise_starly#4576,2021-08-13,"...ooh, ALE support. You've got my attention.",,
5.24323E+17,Ben Kenobi#5683,2021-08-13,"to be fair, ALE + racket should mostly work out of the box. I just add some aliases for some of the extra langs my fork supports (info and jsond, for the moment, but more welcome)",,
1.77948E+17,anise_starly#4576,2021-08-13,"I haven't actually had an excuse to set up ALE for my Vim yet, so you just pointed me at a very inviting rabbit hole, I'll have you know.",,
5.24323E+17,Ben Kenobi#5683,2021-08-13,üêá glad to help,,
5.24323E+17,Ben Kenobi#5683,2021-08-13,I‚Äôll also mention that vim-sexp and the tpope‚Äôs for-humans layer on top of that are really nice for editing s-expressions. My fork <https://github.com/benknoble/vim-sexp> has some internal restructuring. Activate like this: https://github.com/benknoble/Dotfiles/blob/da62711fc6e6cbae0b7498b6da1490568e335897/links/vim/after/ftplugin/racket.vim#L5,,
1.77948E+17,anise_starly#4576,2021-08-13,Noted. Thank you.,,
2.19842E+17,&t#1161,2021-08-13,So I was poking around in the reference and I noticed that Racket has a Common Lisp-like `do` form in it. Do people use this in practice?,,
4.66395E+17,oaktownsam#0815,2021-08-13,I believe that is from Scheme.  I've probably not used it since 2009,,
8.14743E+16,jimpjorps#0001,2021-08-13,I have never come across it in any code I've seen and I've never used it,,
8.14743E+16,jimpjorps#0001,2021-08-13,probably because the `for` forms are much friendlier for that kind of thing,,
4.66395E+17,oaktownsam#0815,2021-08-13,Even in Scheme code I haven't seen it used that much.,,
2.19842E+17,&t#1161,2021-08-13,"Yeah, that figures. Even without the `for`s, named `let` does anything `do` can but with more flexibility",,
2.75501E+17,Plane#0324,2021-08-13,yes and `do` will expand to named `let` anyway (:,,meowsmile (2)
2.19842E+17,&t#1161,2021-08-13,:o,,
2.75501E+17,Plane#0324,2021-08-13,https://github.com/racket/racket/blob/a813d4277b87b4dd6887e0809cab58021fb43178/racket/collects/racket/private/more-scheme.rkt#L58,,
8.14743E+16,jimpjorps#0001,2021-08-13,a beautiful little matryoshka doll,,
1.93202E+17,rocketnia#4517,2021-08-14,"Several years ago, before I dove deeper into the language, I think `do` was one of the things that looked complex and scary about Racket. It still looks a little complex and scary, but now at least I know `do` isn't something people talk about a lot. It had such a short name, I was sure people used it all over the place.",,
2.64024E+17,Eutro#0016,2021-08-14,is there a package that just re-provides `begin` as `do` so it acts like in Clojure?,,
1.93202E+17,rocketnia#4517,2021-08-14,"At the time, I was programming in Arc and dipping into Racket when I had to for that and Arc's `do` is the same as Clojure's. It's pretty weird to reach for something familiar and find that it is actually defined, but as something a lot more tricky.",,
1.93202E+17,rocketnia#4517,2021-08-14,"Hmm, I looked around at some packages, but I don't think anything would be quite as easy as just importing `begin` and renaming it to `do`. :-p",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-14,"yeah `do` is too complex of a syntax for its own good. I try to use it occasionally where I deem it would be idiomatic choice, but I always have to lookup the reference for how the parens grouping goes and such",,
2.19842E+17,&t#1161,2021-08-14,"Not to be that person, but it frankly surprises me how much difficulty people have with `do` syntax. It seems pretty much like a cross between a `let` form and a C-style for loop to me.",,
2.19842E+17,&t#1161,2021-08-14,Is there some weird gotcha that i'm not aware of with it?,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-14,"I mean it pretty much is such cross, but the result is unclear parens soup, more so that any other lisp construct, imo",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-14,"it also has an issue that at its most complex case, it isn't all that much more concise than to everyone well known and familiar named let",,
2.75501E+17,Plane#0324,2021-08-14,People don‚Äôt use it very often so they aren‚Äôt very practiced at remembering its syntax,,
2.75501E+17,Plane#0324,2021-08-14,I personally think named `let` is a little clearer to read though,,
5.24323E+17,Ben Kenobi#5683,2021-08-14,"After looking at the docs, the only reason I can see for using `do` over named `let` is to really emphasize the use of side-effects‚Ä¶ but I probably still wouldn't write `do` for that.",,
4.66395E+17,oaktownsam#0815,2021-08-14,Yeah `do` doesn't really have a way to accumulate results so it's not really functional programmy,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-14,"but it does, with in the `step-expr-maybe` part",,
4.66395E+17,oaktownsam#0815,2021-08-14,Ah yes it's coming back to me.  It's a real clunky notation.,,
2.66505E+17,notjack#9941,2021-08-14,The documentation not having any examples probably contributes to its disuse too,,
4.66395E+17,oaktownsam#0815,2021-08-14,Also scheme is taught with tail recursive functions so most people forget about `do` because it's easier to just use functions.,,
4.66395E+17,oaktownsam#0815,2021-08-14,And `for` is a lot better/natural to use in cases where folks could have used `do`,,
2.64024E+17,Eutro#0016,2021-08-14,I've used `do` once,,
2.64024E+17,Eutro#0016,2021-08-14,but yeah the notation is really clunky,,
2.75501E+17,Plane#0324,2021-08-14,i know it because i had to read it once,,üá´ (1)
4.83487E+17,jest#6646,2021-08-17,what advantages does BSL give to students? and what does it prevent students from doing wrong?,,
4.83487E+17,jest#6646,2021-08-17,"trying to teach my little brother and i notice when i hover over variables, there are no pointy arrow things like you get in #lang racket",,
3.5323E+17,Alex Knauth#4895,2021-08-17,BSL has the check-syntax button to show those arrows,,
6.46114E+17,samth#3420,2021-08-17,@jest consider the behavior in BSL vs full racket when you do this: `(define (f x) (cond [(number? x) x + 1] [else 0]))`,,meowwarp (1)
4.83487E+17,jest#6646,2021-08-17,ohhhhhhhh,,
2.75501E+17,Plane#0324,2021-08-17,It could be nice to have a curated list of small `#lang`s to serve as examples for people who are new to LOP,,üíØ (1)
5.24323E+17,Ben Kenobi#5683,2021-08-17,"@Plane I nominate jsond <https://github.com/benknoble/jsond>. The reader is a tad complicated for error-handling, but basically just wraps `read-syntax` and `read-json`. The `main` submodule can be ignored.",,plusone (2)
4.62028E+17,StephenD#5938,2021-08-17,List of small languages,,
4.62028E+17,StephenD#5938,2021-08-17,@Plane I started a thread (but I don‚Äôt know how to link to it),,
4.62028E+17,StephenD#5938,2021-08-17,#List of small languages,,
4.62028E+17,StephenD#5938,2021-08-17,Can we add any more to the list in #List of small languages ?,,
4.62028E+17,StephenD#5938,2021-08-17,https://racket-news.com/2021/08/racket-news-issue-53.html,,
1.93202E+17,rocketnia#4517,2021-08-17,"looks like the ""Shaded Area Plot"" link links to the fish post again",,
4.62028E+17,StephenD#5938,2021-08-18,"Thanks! I‚Äôve made a pr to fix
 https://github.com/pmatos/racket-news/pull/68",,‚ú® (1)
1.93202E+17,rocketnia#4517,2021-08-18,"wonderful, thanks :)",,
4.66395E+17,oaktownsam#0815,2021-08-18,@Ben Kenobi are you responsible for Racket langserver working out of the box on ALE.  Because if so: nice!,,
5.24323E+17,Ben Kenobi#5683,2021-08-18,"Yeah, that‚Äôs me :meowblush: it‚Äôs been my daily driver now for a while.",,üíØ (1)
4.66395E+17,oaktownsam#0815,2021-08-18,Any chance being able to use the LSP formatter in ALE?,,
5.24323E+17,Ben Kenobi#5683,2021-08-18,"Hm, I haven‚Äôt looked. If it‚Äôs not specific to typescript (some things weirdly are) and if the langserver supports it, it should work... but i‚Äôll have to dig into it.",,
4.66395E+17,oaktownsam#0815,2021-08-18,"I found an issue related, but I don't know much about how ALE or vimscript work. https://github.com/dense-analysis/ale/issues/3279",,
5.24323E+17,Ben Kenobi#5683,2021-08-19,"Huh. Seems like LSP formatting is a little stalled for ALE. On the other hand, if there‚Äôs a way to format code that you can point me to (possibly outside of the LSP: I‚Äôm thinking a program that formats a file or stdin), I can probably write a ¬´¬†fixer¬†¬ª, similar to the way Black is mentioned there for python",,
5.24323E+17,Ben Kenobi#5683,2021-08-19,"(I don‚Äôt have the time to dig into ale‚Äôs guts and implement an LSP method, unfortunately)",,
4.66395E+17,oaktownsam#0815,2021-08-19,~~`raco format`~~ I think.  Nope `raco read`,,
4.66395E+17,oaktownsam#0815,2021-08-19,Now that I think about it I could also do the `:%!command` trick,,
4.66395E+17,oaktownsam#0815,2021-08-19,Not sure if `raco read` preserves comments.,,
4.66395E+17,oaktownsam#0815,2021-08-19,Hmm actually `raco read` is pretty bad for human generated code.,,
4.66395E+17,oaktownsam#0815,2021-08-19,This may be promising: https://pkgs.racket-lang.org/package/raco-format,,
4.66395E+17,oaktownsam#0815,2021-08-19,Yeah `raco format` uses the DrRacket indentation rules,,
7.94955E+17,Laurent O#6627,2021-08-19,I think this one only tabifies using a drracket frame behind the scenes,,
4.66395E+17,oaktownsam#0815,2021-08-19,Yes.  That's pretty much what racket-langserver does too,,
2.75501E+17,Plane#0324,2021-08-19,hmm then what makes the indentation different from drracket's,,
2.75501E+17,Plane#0324,2021-08-19,"wait a sec, i'm not using the LSP to indent",,
2.75501E+17,Plane#0324,2021-08-19,how do i do that?,,
2.75501E+17,Plane#0324,2021-08-19,aw,,
2.75501E+17,Plane#0324,2021-08-19,"```
textDocument/formatting not supported for racket                                     ```",,
4.66395E+17,oaktownsam#0815,2021-08-19,It works (sometimes) with Neovim LSP client.,,
5.24323E+17,Ben Kenobi#5683,2021-08-19,"I think I've seen `raco-format`, but yes it only does indents I believe. It's pretty easy to `setlocal equalprg=raco\ format` (or `let &l:equalprg = 'raco format'`), and then do the old `gg=G` type thing ; not sure how well `raco format` works on sub-parts (say, `=ab` on a top define vs. deep nested thing)",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2021-08-19,It will do nothing; a problem here is we might not know how users would like to format their s-exp when they are having different semantic.,,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2021-08-19,"And if PR gets merged, then raco format will also remove trailing whitespace just like racket-langserver
Since I implement both of them XD",,
4.66395E+17,oaktownsam#0815,2021-08-20,"(cc: @notjack) This is a bit contrived, but doesn't look so good:
```scheme
#lang racket/base

(require rebellion/type/enum)

(define-enum-type response-status (response-ok server-error client-error))

(define (timeit tag a b)
  (displayln tag)
  (time
    (for ([x 100000000])
      (equal? a b)))
  (newline))

(timeit 'same-enum        response-ok response-ok)
(timeit 'different-enum   response-ok server-error)
(timeit 'same-symbol      'server-error 'server-error)
(timeit 'different-symbol 'server-error 'response-ok)
```

Results:
```
same-enum
cpu time: 734 real time: 781 gc time: 0

different-enum
cpu time: 48402 real time: 49582 gc time: 468

same-symbol
cpu time: 746 real time: 786 gc time: 0

different-symbol
cpu time: 1890 real time: 1951 gc time: 0
```",,
4.83487E+17,jest#6646,2021-08-20,"Writing video games in a pure functional style is verrry weird..... because it feels sort of natural that you must mutate x  & y positions over time opposed to creating a new copy that has the updated values considering the high frequency games run at... not to mention since games can get very performance constrained due to needing to run at 30-60FPS, making copies is less perf efficient opposed to mutating. Has anyone made a commercial game with racket? If so I'm curious if you did it in functional style or did you just use set! everywhere (",,
2.66505E+17,notjack#9941,2021-08-20,might be fixable by guaranteeing that enums are interned and changing the equals implementation to always return false (since the generic equals is only called for inputs that aren't eq),,
4.66395E+17,oaktownsam#0815,2021-08-20,That `equal?` with two different symbols is 2x slower seems weird too.,,
2.75501E+17,Plane#0324,2021-08-20,have you ever watched this talk? https://www.destroyallsoftware.com/talks/boundaries,,
2.64024E+17,Eutro#0016,2021-08-20,"I don't think so, after it fails `eq?` it has to do some other checks",,
4.66395E+17,oaktownsam#0815,2021-08-20,I would think it was the other way around (`equal?` checks `eq?` first and then does other checks) so that is probably the case.,,
2.64024E+17,Eutro#0016,2021-08-20,"`equal?` would check `eq?` first, yeah, on which it would fail and check dynamic equality conditions",,
4.66395E+17,oaktownsam#0815,2021-08-20,blep.  I can't read this afternoon it seems,,
4.62028E+17,StephenD#5938,2021-08-20,Langjam started <https://github.com/langjam/langjam> (thanks @oaktownsam ),,
4.40139E+17,Parnikkapore#2806,2021-08-20,"Has someone did something like this?
```scheme
#lang racket

(define (fstr . tokens)
  (define (->string obj) (format ""~a"" obj))
  (foldl (lambda (a b) (string-append b a)) """" (map ->string tokens)))

(fstr ""Hello, my name is "" (+ 2 3) ""!"") ; ""Hello, my name is 5!""
```",,
4.66395E+17,oaktownsam#0815,2021-08-20,"Not sure how that is different from:
```scheme
#lang racket

(~a ""Hello, my name is "" (+ 2 3) ""!"")
```",,
4.40139E+17,Parnikkapore#2806,2021-08-21,There is no difference (the entire point is the syntactic form). I wasn't aware of (~a) - thanks!,,
2.75501E+17,Plane#0324,2021-08-21,"yes, i did something like that before i found out about `~a` :D",,
4.66395E+17,oaktownsam#0815,2021-08-21,That talk inspired me to checkout `#lang syndicate` again,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-21,hey it's my favorite programming talk ever üòÑ,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-21,though I have one unresolved question regarding that I've been asking around,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-21,"those FP methods are basically implementation detail and private. Everyone whom I asked said regarding this scenario said ""no, you should not test private methods"" and I feel stumbled with this. On one hand I feel they're right, on the other what to do? Move them as public? Test them through public methods and mocking? Idk don't particularly like either of these options..",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-21,"fairly minor point, but you know, I feel motivated to ""solve"" it on my road to writing clean software",,
4.66395E+17,oaktownsam#0815,2021-08-21,I guess in theory if you are testing all of the code paths of your public interface you would be testing all of the private code.,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-21,"yeah that's true generally speaking, but this talk kinda goes against that",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-21,how mocking means your tests don't necessarily reflect real action in prod,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-21,and that calling real functions is better,,
4.66395E+17,oaktownsam#0815,2021-08-21,"In pyret (IIUC) you can attach tests to any function, and in Racket you can test a private (non-provided) function using a test submodule.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-21,"my question is more philosophical than technical.. I'm mostly applying this in java codebase, and I can easily declare things package private and access them from tests; the question is -- is this the Right Thing to do",,
4.66395E+17,oaktownsam#0815,2021-08-21,testing all of the code paths of a functional interface doesn't necessarily need mocking,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-21,"it needs mocking if you're accessing through public imperative shell methods; again, assuming those functional functions are kept private and that you choose not to test private methods",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-21,I think right word is stub not mock here ü§î,,
4.66395E+17,oaktownsam#0815,2021-08-21,"Ohhh,  yeah I don't think those interfaces would be private.  They would be an inner API layer.",,
5.24323E+17,Ben Kenobi#5683,2021-08-21,"Testing things is usually good, IMO, even the private things (racket makes this easy). OTOH, some things need it more than others, and certain functional transforms I would trust myself to get right before the imperative shell bits.",,‚è´ (1)
5.24323E+17,Ben Kenobi#5683,2021-08-21,"I found syndicate-classic on docs, but not the rewrite (package syndicate?) by searching. Link?",,
4.66395E+17,oaktownsam#0815,2021-08-21,"I'm going from the syndicate-classic docs and Tony's dissertation (linked here https://syndicate-lang.org/). I don't think there are any docs for the current implementation.

The syndicate package has a broken dependency.  There is a workaround (install the dependency manually)",,üëç (1)
2.66505E+17,notjack#9941,2021-08-21,"in java usually what I do is make objects take their dependencies as constructor arguments. then I have tests supply *fake* dependencies, not mocks. fakes are lightweight implementations that mimic the behavior of the real thing automatically. mocks don't have logic, you have to tell them what methods you expect to be called. a fake of a database or filesystem would just use a lightweight in-memory in-process implementation of the database or filesystem, like jimfs (https://github.com/google/jimfs)",,
2.66505E+17,notjack#9941,2021-08-21,"if you do that, then you should be able to test all of the logic in a class through its public API",,
2.66505E+17,notjack#9941,2021-08-21,"the same principle can be applied to racket, though usually instead of passing dependencies in constructors, racket code passes dependencies in parameters, like `current-output-port`",,
1.35871E+17,Drakonis#1712,2021-08-22,@gingerydoo i see you on the guix mailing list :V,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-22,"hmm but that's the classic / golden standard of doing things. I mean I agree this is sound approach, but then you might as well not apply anything from the talk",,
2.66505E+17,notjack#9941,2021-08-22,"yeah I do actually think a lot of the functional core imperative shell philosophy for testing becomes less necessary when you have the infrastructure to support widespread effective test doubles. it's always been something I used as a secondary option when the way I wanted to test something was infeasible, it's never been my first choice.",,
2.66505E+17,notjack#9941,2021-08-22,that infrastructure is not cheap to build and frankly I think it's impossible to build outside a giant monolithic company,,
1.35871E+17,Drakonis#1712,2021-08-22,"@gingerydoo if you're still taking name suggestions, switch to zyden, it should be just as searchable, except it wont have name collisions",,
1.93202E+17,rocketnia#4517,2021-08-22,"to clarify, by ""that infrastructure"" you mean the functional core imperative shell infrastructure? (or do you mean the infrastructure to support widespread effective test doubles?)",,
7.14999E+17,gingerydoo#7461,2021-08-22,"I'll consider it. Only obstacle is the cost of the change. I have to pay for a logo adjustment, and the designer needs to update their portfolio, copy, etc.",,
1.35871E+17,Drakonis#1712,2021-08-22,fair enough,,
2.66505E+17,notjack#9941,2021-08-22,The test doubles infrastructure. The functional core imperative shell approach only requires you to write _your systrem_ in a particular way. The test doubles approach requires that _your dependency systems_ have robust fake implementations available.,,
1.93202E+17,rocketnia#4517,2021-08-22,"got it, thanks :)",,
1.35871E+17,Drakonis#1712,2021-08-22,"regarding the email you sent to the guix ml, you might have a bit more luck with discussing a way to collaborate with guix if you chat with irc folks?",,
7.14999E+17,gingerydoo#7461,2021-08-22,"Are they more active there? If so, I'll definitely do that.",,
1.35871E+17,Drakonis#1712,2021-08-22,yes.,,
1.35871E+17,Drakonis#1712,2021-08-22,"its a sunday though, so its been a little slow",,
1.35871E+17,Drakonis#1712,2021-08-22,there has been activity today,,
1.35871E+17,Drakonis#1712,2021-08-22,there's also #bootstrappable at libera.chat if you really want to do bootstrapping things,,
7.14999E+17,gingerydoo#7461,2021-08-23,"I made a case for using Racket here, if anyone wants to chime in.   https://www.reddit.com/r/GUIX/comments/p8v5xd/how_did_you_handle_making_a_gnulinux_distribution/h9zpyhn?utm_source=share&utm_medium=web2x&context=3",,
4.83487E+17,jest#6646,2021-08-23,anyone know if there is an rarinbow parens color extension for racket?,,
4.83487E+17,jest#6646,2021-08-23,"vscode has one that's pretty good, unsure if racket has one",,
8.14743E+16,jimpjorps#0001,2021-08-23,I haven‚Äôt found one,,
5.24323E+17,Ben Kenobi#5683,2021-08-23,"Personally, I dim all the parens so they don‚Äôt stand out. Extraneous ones get highlighted, and a missing one is caught by the compiler. (I like parens, just that this helps me read the code)",,
5.24323E+17,Ben Kenobi#5683,2021-08-23,Also hovering the cursor on a paren shows it‚Äôs match,,
2.75501E+17,Plane#0324,2021-08-23,i love rainbow parens,,
2.75501E+17,Plane#0324,2021-08-23,i was talking about making a plugin for it for drracket because i couldn't find one but i've been doing other things so i haven't quite gotten around to it yet,,
4.62028E+17,StephenD#5938,2021-08-23,"I know this doesn't answer your question but I'm a big fan of the sexp navigation and current sexp highlighting(pictured). 

Someone did a rainbow paren quickscript that generates html that might be a good starting point but I forget the name of the component that adds the colours to the text% object.",https://cdn.discordapp.com/attachments/618895179343986688/879373258410033192/unknown.png,
4.83487E+17,jest#6646,2021-08-23,well ping me if you ever finish it,,
1.35871E+17,Drakonis#1712,2021-08-23,should have poked the nixos people,,
1.35871E+17,Drakonis#1712,2021-08-23,but this is a start,,
1.35871E+17,Drakonis#1712,2021-08-23,"for drawing attention, that is.",,
2.75501E+17,Plane#0324,2021-08-23,"sure, i never even started it though",,
2.75501E+17,Plane#0324,2021-08-23,"it looks like the sort of thing that would be a DrRacket ""tool"" <https://docs.racket-lang.org/tools/implementing-tools.html>",,
4.83487E+17,jest#6646,2021-08-23,üòå,,
4.83487E+17,jest#6646,2021-08-23,https://github.com/microsoft/vscode/issues/16221#issuecomment-879538951,,
4.83487E+17,jest#6646,2021-08-23,looks like inline parameter name hints are officially getting merged in vscodes typescript LSP so i might look into how to get that to work with racket lsp,,üéâ (1)
2.75501E+17,Plane#0324,2021-08-23,Yay,,
4.83487E+17,jest#6646,2021-08-23,why is the default for base drracket installation to leave line numbers turned off and no auto insert the closing parens?,,
2.66505E+17,notjack#9941,2021-08-23,"good question. Line numbers I think should be on by default. Closing parens probably shouldn't, because drracket is aimed at students more than professionals and it can be distracting and confusing to students when editors insert stuff they didn't write themselves.",,
4.83487E+17,jest#6646,2021-08-23,"for vscode and other text editors, they already autoclose parens and quotation marks... if its the same for notepad++ we might as welll",,
2.66505E+17,notjack#9941,2021-08-23,"yes, and those editors are not designed for students first, like drracket is",,
4.83487E+17,jest#6646,2021-08-23,alright so line numbers at minimum by default,,
4.83487E+17,jest#6646,2021-08-23,autoclose parens and quotes are up for debate,,
4.66395E+17,oaktownsam#0815,2021-08-23,Actually for beginners I think no line numbers as a default is to reduce the amount of visual clutter.,,
4.66395E+17,oaktownsam#0815,2021-08-23,Just a theory,,
4.83487E+17,jest#6646,2021-08-23,"well... its harder to communicate ""there's an slight bug on line 25"", especially if its on that doesnt crash there",,
4.66395E+17,oaktownsam#0815,2021-08-23,Didn't mean it was a good choice üôÇ,,
4.83487E+17,jest#6646,2021-08-23,ooo k,,
4.83487E+17,jest#6646,2021-08-23,"ill PR to turn it on if no one else has done it already then, or should i just file an issue?",,
4.83487E+17,jest#6646,2021-08-23,ill just file issue first,,
8.14743E+16,jimpjorps#0001,2021-08-23,the benefit of line numbers probably outweighs the slight visual clutter,,
8.14743E+16,jimpjorps#0001,2021-08-23,but I'd agree with keeping parens autocomplete off,,
8.14743E+16,jimpjorps#0001,2021-08-23,"""one keystroke puts one character on the screen"" is going to be most people's assumption on how an editor works",,
4.83487E+17,jest#6646,2021-08-23,"ehh, i dont think its that confusing of a rule to introduce even for beginners, but i only have a sample size of 1 other student atm so i  guess i cant really say definitively",,
2.14881E+17,Moinate#6061,2021-08-23,Line numbers is controversial.,,
2.14881E+17,Moinate#6061,2021-08-23,1 > Adds clutter. Easily discoverable in the menu.,,
2.14881E+17,Moinate#6061,2021-08-23,"2 > Check-expect displays line and column number of error, which is moderately confusing if you do not have line numbers visible.",,
2.14881E+17,Moinate#6061,2021-08-23,"3 > Check-expect has hyperlink to error line, so students don't really need to know a line number.",,
2.14881E+17,Moinate#6061,2021-08-23,"4 > Is the status line on by default? I think so. (Not sure an easy way to check.) So to distinguish the failing test in a sea of similar tests, you're pointing to some tiny ""5:10"" to say ""you're on line 5"" but the failing test is on line 6.",,
2.14881E+17,Moinate#6061,2021-08-23,"5 > Clicking on the hyperlink to highlight the failed test is underused, unfortunately... I guess that's ""user error"" but if there were some UI change to make that problem go away I would celebrate.",,
2.14881E+17,Moinate#6061,2021-08-23,"6 > Are line numbers really that important? Do ""pro users"" have line numbers on in emacs / vi? I don't, but I'm not sure where I fall on the spectrum.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-23,"I don't, though I'm not sure I'd necessarily would call myself pro lol",,
4.83487E+17,jest#6646,2021-08-23,"> Are line numbers really that important? Do ""pro users"" have line numbers on in emacs / vi? I don't, but I'm not sure where I fall on the spectrum.

If we're talking about ""pro users"" by which i presume you mean the professionals in the industry, are we including visual studio, eclipse, vscode, jetbeans IDEs, android studio, editors also? because everyone of those probably have line numbers on by default",,
2.14881E+17,Moinate#6061,2021-08-23,"Ummm... probably pro Lisp (Clojure, etc) programmers would be the most relevant. Pro Racket programmers if you can find any.",,
6.87833E+17,grey#8674,2021-08-23,"To me, displaying line numbers make sense, if you‚Äôre just scrolling down to the line and finding it by yourself. Once you‚Äôre at the point that you‚Äôre using editor commands to jump to a specific line and column, then displaying line numbers is kinda superfluous. Of course, that requires good support from the editor for navigation commands, and it has an editor-specific learning curve.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-23,"I mean there is still indication usually of the line/column under the cursor, so fetching code place -> line number isn't difficult",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-23,"line number -> code place is even easier, you just type in a shortcut",,
2.14881E+17,Moinate#6061,2021-08-23,"My line numbers show up black, just as solid as the text.
So they're pretty obtrusive when I turn them on in DrRacket, compared to another IDE I checked.",,
2.75501E+17,Plane#0324,2021-08-23,i added a üëç on the gh issue,,
2.14881E+17,Moinate#6061,2021-08-23,"I guess this is really ""what's best for rank beginners"" because everybody who cares will turn on the menu pref.",,
8.14743E+16,jimpjorps#0001,2021-08-23,"thonny, the other ""for beginners"" IDE I know of, shows line numbers by default",,
8.14743E+16,jimpjorps#0001,2021-08-23,,https://cdn.discordapp.com/attachments/618895179343986688/879452996159819786/unknown.png,
4.83487E+17,jest#6646,2021-08-23,"id say its prob better for beginners... easier to communicate ""lines 23-26"" is where your problem lines",,plusone (2)
2.75501E+17,Plane#0324,2021-08-23,i think it is probably better too,,
2.75501E+17,Plane#0324,2021-08-23,"i took a quick look back to 2010 when line numbers were added by Jon Rafkind
- discussion here: <https://lists.racket-lang.org/users/archive/2010-September/041649.html>
- commits here: <https://github.com/racket/drracket/commits?author=kazzmir>
i don't really see any discussion of why it defaults to off.  putting myself in their shoes and imagining, i think that adding an option and defaulting the option to off is probably a relatively common choice when changing existing behavior, particularly when submitting changes like this to someone else's project, because it avoids potentially stepping on anyone's toes.  but in this case i think having it on is nice",,
2.14881E+17,Moinate#6061,2021-08-23,"Talking about lines where there is a problem is pretty detailed... the HtDP crowd probably thinks you should be talking about what tests are missing and then getting someone to identify what step in the design process is giving them trouble. Eventually you might end up talking about line numbers, but it's kind of far down in the ""what happens"" list.",,
2.75501E+17,Plane#0324,2021-08-23,"i don't think it's a big deal either way, but i imagine it *is* good for beginning students, and they may not find the option",,
2.14881E+17,Moinate#6061,2021-08-23,Particularly: I never see people posting code here asking for help who are at the stage where talking about a line number matters.,,
2.14881E+17,Moinate#6061,2021-08-23,(Agreed it's not a big deal. Total bikeshedding.),,
2.75501E+17,Plane#0324,2021-08-23,"when you're teaching in person though, you can say ""look at what you're doing on line 7"" etc",,
2.75501E+17,Plane#0324,2021-08-23,yes definitely :),,
2.75501E+17,Plane#0324,2021-08-23,so i will leave the discussion there but the links i posted above are there in case you find them helpful for your github issue @jest,,
4.83487E+17,jest#6646,2021-08-23,"if any of you guys are teachers here, can you send me some of the buggy/crashy student code that doesnt work, the entire semesters worth if possible? i'm making a programming course based off of HTDP2E and i'd like real world examples of what happens when they dont follow the design recipe",,
4.83487E+17,jest#6646,2021-08-23,ill also ask in the slack,,
8.14743E+16,jimpjorps#0001,2021-08-23,"hazel either is now or was recently TAing a racket course, I remember that",,
4.83487E+17,jest#6646,2021-08-23,@hazel i summon thee!,,
5.24323E+17,Ben Kenobi#5683,2021-08-23,Perhaps I'm crazy but I prefer typing the closers myself (this could be because there was no solution for vim that worked perfectly for a long time‚Ä¶),,
5.24323E+17,Ben Kenobi#5683,2021-08-23,"I like relativenumber + number, which makes eyeballing `10j` easier.",,
5.24323E+17,Ben Kenobi#5683,2021-08-23,"unfortunately i don't have any, but I can ask a friend",,
2.14881E+17,Moinate#6061,2021-08-23,"lmao. i don't even know what to think. 
shouldn't you run the course once and see what kind of ~~crap~~ submissions you get?
the WPI people probably have some for the ed research, i'm not really involved but i heard a talk once
you can just search back in the help channel for all the stuff people post about their homework (j/k, kinda)",,
8.14743E+16,jimpjorps#0001,2021-08-23,that was going to be my earnest suggestion,,
8.14743E+16,jimpjorps#0001,2021-08-23,there's a fair number of common beginner oopsies there,,
8.14743E+16,jimpjorps#0001,2021-08-23,"like ""why does `(if (> x 0) (0) (1))` say `expected procedure, got 0`"" is a common one",,
3.58051E+17,hazel#0271,2021-08-23,ask @samth possibly,,
3.58051E+17,hazel#0271,2021-08-23,"since
1. I don't have anything like that
2. even if I did I probably couldn't give it to you",,
4.83487E+17,jest#6646,2021-08-23,that'd be cool thanks üòå ! as long as there isn't any personal information attached to the solution files i dont see much of a problem,,
6.46114E+17,samth#3420,2021-08-23,@jest I would look at papers that people have written about this. people won't be able to give you student work.,,
6.46114E+17,samth#3420,2021-08-23,eg https://cs.brown.edu/~sk/Publications/Papers/Published/mfk-measur-effect-error-msg-novice-sigcse/,,
4.83487E+17,jest#6646,2021-08-23,luckily i have my little brother for some and maybe people post on the edx course,,
4.83487E+17,jest#6646,2021-08-23,"thanks, i will take a look. i understand you guys dont want to be at any legal risk",,
4.83487E+17,jest#6646,2021-08-23,ill try to email a few prof. maybe some of them know their schools legal system quite well and willl permit it,,
2.14881E+17,Moinate#6061,2021-08-23,"i bet you can get plenty if u post as ""homework help available""",,
2.14881E+17,Moinate#6061,2021-08-23,if you had someone produce a waiver and get students on board at the start of the semester it would be doable,,
4.83487E+17,jest#6646,2021-08-23,thank youu lazy students posting on stackoverflow and reddit üòå,,
2.14881E+17,Moinate#6061,2021-08-23,"but if i were faculty i'd wonder if this had to go through IRB. probably not, but they might worry",,
4.83487E+17,jest#6646,2021-08-23,what is the IRB?,,
4.83487E+17,jest#6646,2021-08-23,"for python courses there are a ton of student exercise solutions on github , but i guess thats a different case",,
4.83487E+17,jest#6646,2021-08-23,"anyways, thanks all",,
4.83487E+17,jest#6646,2021-08-23,"i guess it makes sense for a school to default ""copyright"" all content coming in, say if it was an art/animation/film class and students are tasked to animate a short film, ofc no one wants their animations straight up stolen.... i guess in our case its a bit different since no one wants buggy code but nonetheless",,
2.64024E+17,Eutro#0016,2021-08-23,Feel free to take all my buggy code,,ü§£ (1)
3.58051E+17,hazel#0271,2021-08-23,institutional review board,,
3.58051E+17,hazel#0271,2021-08-23,they have to approve studies before they are conducted,,
4.83487E+17,jest#6646,2021-08-23,ahh,,
4.83487E+17,jest#6646,2021-08-23,i can also just ask some students that just wrapped up the semester for em. does anyone have the list of schools that use HTDP? i will lurk on their reddit lol,,
5.24323E+17,Ben Kenobi#5683,2021-08-23,"(We don‚Äôt use htdp for the record, didn‚Äôt realize (if) that was important)",,
4.83487E+17,jest#6646,2021-08-23,"ehhh, i guess it isnt that important no",,
4.83487E+17,jest#6646,2021-08-23,"wait, what do you guys use?",,
5.24323E+17,Ben Kenobi#5683,2021-08-23,"Uh, it was a programming languages class, and we rolled our own thing based on EOPL",,
5.24323E+17,Ben Kenobi#5683,2021-08-23,"(That class has had varied professors over the last while; one teaches the whole thing in java ü§Æ, and this last time we decided to lean into the lisp. I knew the professor better and knew it wouldnt take much convincing.)",,
5.24323E+17,Ben Kenobi#5683,2021-08-23,"(The state of PL research, or even really effective teaching, at UNC Chapel Hill is lackluster, IMO. But I love PL and TA‚Äôd it, so.)",,
4.83487E+17,jest#6646,2021-08-23,"wait.... on average, how many students dont follow the design recipe and end up writing a mess?",,
4.83487E+17,jest#6646,2021-08-23,the template part is.... kind of odd to me,,
2.66505E+17,notjack#9941,2021-08-23,"I think there's been a lot of studies about that specifically, though I don't have links to any",,
2.66505E+17,notjack#9941,2021-08-23,last year I think the racketcon keynote talked about it,,
2.66505E+17,notjack#9941,2021-08-23,https://youtube.com/watch?t=794&v=MnrRUdbOW1M,,üëç (1)
4.83487E+17,jest#6646,2021-08-23,"another question, what does 2htdp/image and 2htdp/universe for the backend? cario and pango i presume based off of: https://docs.racket-lang.org/draw/libs.html ?",,
4.83487E+17,jest#6646,2021-08-23,going to teach how to make a few games and im wondering what the limits are in terms of perf,,
6.46114E+17,samth#3420,2021-08-23,"@jest they aren't the best for perf, but you can do impressive stuff: https://youtu.be/CnbVCNIh1NA",,üòÆ (1)
4.83487E+17,jest#6646,2021-08-23,"ehh, i guess ill just stick to small games, if one were to seriously use racket for game development and want 60fps or higher, they'd probably use plain `#lang racket` rather than BSL with opengl bindings to render the game",,
4.83487E+17,jest#6646,2021-08-24,does htdp2 provide an api for playing sound effects?,,
4.90866E+17,JOST GRANT#1516,2021-08-24,Not to my (limited) knowledge; There's https://docs.racket-lang.org/rsound/index.html though,,
4.83487E+17,jest#6646,2021-08-24,that doesnt come with racket though right?,,
4.90866E+17,JOST GRANT#1516,2021-08-24,"Nope, it's a non-included package",,
4.90866E+17,JOST GRANT#1516,2021-08-24,Looks like the gui system has a play-sound function?,,
4.83487E+17,jest#6646,2021-08-24,"```scheme
(require 2htdp/image
         (only-in racket/gui/base play-sound))
```
https://www.debugcn.com/en/article/59588886.html
according to this it seems so",,
4.90866E+17,JOST GRANT#1516,2021-08-24,"Doesn't look too fancy, but for beginner / student stuff seems like it would 'just work'. :^P",,
4.83487E+17,jest#6646,2021-08-24,üëç thanks,,
4.90866E+17,JOST GRANT#1516,2021-08-24,np; lol,,
4.90866E+17,JOST GRANT#1516,2021-08-24,_really needs to dig into the gui modules more; Seems like a pretty well-rounded toolkit ... or at least a LOT more complete than I'd expect given the size of the community._,,
4.90866E+17,JOST GRANT#1516,2021-08-24,Guess it's benefited to be in some-way developed in-tandem with Dr.Racket.,,
4.83487E+17,jest#6646,2021-08-24,"`(play-sound ""./test.ogg"" async?)` does it not play ogg files? im playing a sound and im only getting static...",,
4.83487E+17,jest#6646,2021-08-24,"```. . invalid memory reference.  Some debugging context lost```
when i run it twice, it will never run again ^ this error will repeat itself",,
4.83487E+17,jest#6646,2021-08-24,on linux,,
4.90866E+17,JOST GRANT#1516,2021-08-24,"Give me a few minutes, I'll TIAS myself",,
4.83487E+17,jest#6646,2021-08-24,i should mention im on linux...,,
4.90866E+17,JOST GRANT#1516,2021-08-24,_is as-well lol_,,
4.90866E+17,JOST GRANT#1516,2021-08-24,"Racket is typically abstracted enough to 'not matter' in most circumstances, luckily",,
8.14743E+16,jimpjorps#0001,2021-08-24,rsound needed a little finagling for me to get working on windows last time I tried using it for something,,
8.14743E+16,jimpjorps#0001,2021-08-24,there's some diagnostic functions in the manual,,
4.90866E+17,JOST GRANT#1516,2021-08-24,"@jimpjorps We're just trying to use the built-in gui's ""play-sound"" function",,
4.90866E+17,JOST GRANT#1516,2021-08-24,Didn't know this 'existed' when I recommended rsound. lol,,
8.14743E+16,jimpjorps#0001,2021-08-24,"oh, yeah I missed that part of the conversation",,
8.14743E+16,jimpjorps#0001,2021-08-24,"> On Unix, the function invokes an external sound-playing program‚Äîlooking by default for a few known programs (aplay, play, esdplay, sndfile-play, audioplay). A play command can be defined through the 'GRacket:playcmd preference preference (see Preferences). The preference can hold a program name, or a format string containing a single ~a where the filename should be substituted‚Äîand used as a shell command. (Don‚Äôt use ~s, since the string that is used with the format string will be properly quoted and wrapped in double quotes.) A plain command name is usually better, since execution is faster. The command‚Äôs output is discarded, unless it returns an error code, in which case the last part of the error output is shown.",,
4.90866E+17,JOST GRANT#1516,2021-08-24,"@jest Yup, static as-well; hmmm",,
4.83487E+17,jest#6646,2021-08-24,getting static on .wav and .ogg files,,
4.90866E+17,JOST GRANT#1516,2021-08-24,Gonna try an mp3 or something I guess and confirm if that's working,,
4.83487E+17,jest#6646,2021-08-24,@JOST GRANT on linux or windows?,,
4.90866E+17,JOST GRANT#1516,2021-08-24,Debian 11,,
4.83487E+17,jest#6646,2021-08-24,ughh,,
4.83487E+17,jest#6646,2021-08-24,i dont want to boot back on windows to try lol..,,
4.90866E+17,JOST GRANT#1516,2021-08-24,Not using prebuilt package; Built from-source Racket 8.2,,
4.90866E+17,JOST GRANT#1516,2021-08-24,"Found the best wikimedia file to test it, btw https://upload.wikimedia.org/wikipedia/commons/5/5d/Nl-honk.ogg",,
4.83487E+17,jest#6646,2021-08-24,im on arch using prebuilts,,
8.14743E+16,jimpjorps#0001,2021-08-24,"works for me on Windows, at least, though I imagine that's because it's using a less roundabout way of playing",,
4.90866E+17,JOST GRANT#1516,2021-08-24,"Yeah, that's a good point; @jest  have you tried requiring only gui/base from #lang racket and not via 'only-in' with 2htdp ?",,
4.83487E+17,jest#6646,2021-08-24,"tried with this: ```(require 
         (only-in racket/gui/base play-sound))```
same issue",,
4.90866E+17,JOST GRANT#1516,2021-08-24,For some reason ... calling an mp3 caused Dr.Racket to pause then crash a few minutes later lool,,
4.83487E+17,jest#6646,2021-08-24,yepp... same problem : ``` (require racket/gui/base)``` also....,,
4.83487E+17,jest#6646,2021-08-24,guess ill report as a bug.. hope they can reproduce it and its not just us lol,,
4.90866E+17,JOST GRANT#1516,2021-08-24,Importing mp3 just full-on causes memory problems lol; Guess it's trying to play it but doesn't recognize the format (ie: doesn't error out).,,
4.90866E+17,JOST GRANT#1516,2021-08-24,"@jest We're on 'different enough' platforms, where yeah, can't imagine it's just us*. Arch prebuilt and Debian 11 'from source. lol",,
4.83487E+17,jest#6646,2021-08-24,ahh,,
4.83487E+17,jest#6646,2021-08-24,seems like aplay is the issue,,
4.83487E+17,jest#6646,2021-08-24,https://github.com/racket/gui/blob/master/gui-lib/mred/private/misc.rkt#L63,,
4.83487E+17,jest#6646,2021-08-24,if you run `aplay honk.ogg` it does the same thing,,
4.83487E+17,jest#6646,2021-08-24,so aplay is the culprit here,,
4.83487E+17,jest#6646,2021-08-24,"> You cannot decode ogg files with aplay. According to the man page, the only formats aplay understands are voc, wav, raw and au. My guess is that aplay interprets the ogg file as raw data, hence the white noise.",,
4.83487E+17,jest#6646,2021-08-24,https://unix.stackexchange.com/questions/363176/ogg-audio-file-and-aplay-white-noise,,
4.83487E+17,jest#6646,2021-08-24,my .wav file does not work with aplay also...,,
4.66395E+17,oaktownsam#0815,2021-08-24,If `aplay` is the default for linux maybe a better default can be found?,,
4.83487E+17,jest#6646,2021-08-24,https://github.com/racket/gui/issues/239,,
4.83487E+17,jest#6646,2021-08-24,"for those of you with linux machines, check if you have `sndfile-play` installed by default in your distributions,  according to arch linux: https://archlinux.org/packages/extra/x86_64/libsndfile/
it seems like pulseaudio requires it(on the right side in the Required By pane) as a dependency so i presume its installed widely as `aplay`",,
4.66395E+17,oaktownsam#0815,2021-08-24,It's not in Ubuntu (RPi) by default,,
4.66395E+17,oaktownsam#0815,2021-08-24,Also not in Xubuntu,,
4.66395E+17,oaktownsam#0815,2021-08-24,"Those are the two ""desktop"" linux systems I have.",,
4.83487E+17,jest#6646,2021-08-24,üòî,,
4.83487E+17,jest#6646,2021-08-24,"another issue is with sndfile-play if I run the file again I get:
```
invalid memory reference.  Some debugging context lost
```
and it wont go away until i restart drracket entirely again.. or it just sometimes freezes drrackt entirely without printing that error message",,
4.66395E+17,oaktownsam#0815,2021-08-24,Is that with RacketCS ?,,
4.83487E+17,jest#6646,2021-08-24,"yep, racket cs 8.2",,
4.66395E+17,oaktownsam#0815,2021-08-24,On Ubuntu it seems that `paplay` may be the out of the box player,,
4.83487E+17,jest#6646,2021-08-24,i have paplay on my archlinux as well üòå,,
4.66395E+17,oaktownsam#0815,2021-08-24,It looks like it does FLAC OGG WAV etc,,
4.66395E+17,oaktownsam#0815,2021-08-24,pa == pulseaudio iirc,,
4.66395E+17,oaktownsam#0815,2021-08-24,so any distro with pulseaudio (all of them now?) probably will have it,,
4.66395E+17,oaktownsam#0815,2021-08-24,Disclaimer: I haven't played any audio with it just verified it was on the system and responds to --version,,
4.83487E+17,jest#6646,2021-08-24,paplay seems to have issues playing small sound files less than 1 sec in duration... at l east for me,,
4.83487E+17,jest#6646,2021-08-24,though im unsure if its the files that are the problem...,,
4.83487E+17,jest#6646,2021-08-24,lemmie convert em,,
4.83487E+17,jest#6646,2021-08-24,"yeah,  just a few of my wav files, its fine, i can just convert them",,
4.66395E+17,oaktownsam#0815,2021-08-24,I'm having some problems playing mp3 on my system.,,
4.66395E+17,oaktownsam#0815,2021-08-24,Ok it's doing better with this ogg file,,
4.66395E+17,oaktownsam#0815,2021-08-24,"Oh yeah, I'm probably missing some mystery codec for mp3.",,üëª (1)
4.66395E+17,oaktownsam#0815,2021-08-24,xiph formats are superior anyway,,
4.90866E+17,JOST GRANT#1516,2021-08-24,"Ah, bummer",,
4.83487E+17,jest#6646,2021-08-24,"lol on windows i'm getting:
```
 mciSendStringW: The specified device is not open or is not recognized by MCI.
```",,üòø (1)
4.83487E+17,jest#6646,2021-08-24,on a fresh install of windows 10,,
4.83487E+17,jest#6646,2021-08-24,using 2021 may of this years updated iso,,
4.83487E+17,jest#6646,2021-08-24,"> After a few years, the MCI interface has been phased out in favor of the DirectX APIs first released in 1995.[1]",,
4.66395E+17,oaktownsam#0815,2021-08-24,This is why pyret compiles to javascript. /slight snark,,ü§£ (1)
4.83487E+17,jest#6646,2021-08-24,so it seems MCI isn't bundled with  more recent versions of windows anymore i presume or some config setting needs to turn it on,,
4.83487E+17,jest#6646,2021-08-24,"yeah, its somewhat nice to rely on the web browser for all the things.. but a pain at the same time to not be able to access lower level things without nodejs",,
4.83487E+17,jest#6646,2021-08-24,also users varying in browser versions is ugh...,,
4.90866E+17,JOST GRANT#1516,2021-08-24,"The browser is basically a stinkier smalltalk image, tbh; lol
Very nice for ""what it is"" but not without issues ... that are probably outweighed by the ubiquity it is",,
4.83487E+17,jest#6646,2021-08-24,biggest reason is crossplatform on all major platforms....,,
4.83487E+17,jest#6646,2021-08-24,apple is a problem :/,,
4.90866E+17,JOST GRANT#1516,2021-08-24,"_is shocked by how 'crossplatform' React is. I guess ""React Native"" does some magic to get on these platforms that I'm unaware of, like iOS_",,
4.83487E+17,jest#6646,2021-08-24,i recall some people telling me that you have to pay $100 for dev tools and or verfication for your app.... i think its the case even if you dont want to publish the app and just want to play around with apple but you just cant without paying....  thank god android just allows you to install via apk files and doesnt lock you in too hard..,,
4.90866E+17,JOST GRANT#1516,2021-08-24,"Sounds about right, sadly.",,
4.83487E+17,jest#6646,2021-08-24,yeah... web is the only way you can short circuit around that sooo seems like we're gonna be on a trend of slow web apps for a while...,,
2.66505E+17,notjack#9941,2021-08-24,"I think if you're fine with requiring disabling code signing on machines using your app then it's entirely possible to develop for apple machines for free, but I'm not sure",,
4.83487E+17,jest#6646,2021-08-25,"```#lang racket

(require 2htdp/image
         (only-in racket/gui/base play-sound))

;https://opengameart.org/sites/default/files/vgmenuselect.wav
(play-sound ""./vgmenuselect.wav"" #t)```
can any windows 10 users test this and see if it plays? I am getting:
`mciSendStringW: All wave devices that can play files in the current format are in use.  Wait until a wave device is free, and then try again.`
also re-run the file a few times to make sure it plays again. Please post your build number of windows also, to find it type in `System Information` on the start menu and a table should have a `Version` for the build number, in my case its 19043
https://github.com/racket/gui/issues/239#issuecomment-905199159",,
4.83487E+17,jest#6646,2021-08-25,,https://cdn.discordapp.com/attachments/618895179343986688/879966870676062248/unknown.png,
4.83487E+17,jest#6646,2021-08-25,"on a different note check-syntax pops up a command prompt menu with said message on my windows 10 (21h1) , is this a bug or is this supposed to happen?",,
2.74358E+17,jesscxc#4846,2021-08-25,"Is anyone familiar with The Art of the Interpreter and the origins of Scheme? I'm helping proofread The Lambda Papers so they're easier to read and the scanned version often OCRs to ""`DRIVER-LOOP-l`"", which I think is for ""`DRIVER-LOOP-1`""?",,
2.74358E+17,jesscxc#4846,2021-08-25,Eg: https://en.wikisource.org/wiki/Page:AIM-453.djvu/10,,
6.46114E+17,samth#3420,2021-08-25,I agree that that's likely a `1` and not an `L`,,
2.74358E+17,jesscxc#4846,2021-08-25,"I concur, especially after pondering more; most of the code in the paper is upcased (so if it was an ""l"" would appear as ""`L`""), and also uses things like ""`LOOKUP1`""",,
2.74358E+17,jesscxc#4846,2021-08-25,it's a great paper üòä,,
4.62028E+17,StephenD#5938,2021-08-25,There is only a couple of days left in the syntax parse bee: get your contributions in before it is too late https://github.com/syntax-objects/Summer2021/blob/master/ANNOUNCEMENT.md,,
4.62028E+17,StephenD#5938,2021-08-25,Ë™ûÊ≥ïÂàÜÊûêËúúËúÇÂè™Ââ©‰∏ãÂπæÂ§©‰∫ÜÔºöÂú®ÁÇ∫ÊôÇÂ∑≤Êôö‰πãÂâçÁç≤ÂèñÊÇ®ÁöÑË≤¢Áçª https://github.com/syntax-objects/Summer2021/blob/master/ANNOUNCEMENT.md,,
4.66395E+17,oaktownsam#0815,2021-08-26,Pinned a message.,,
4.66395E+17,oaktownsam#0815,2021-08-26,Pinned a message.,,
4.83487E+17,jest#6646,2021-08-27,"```scheme
#lang racket

(require 2htdp/image
         (only-in racket/gui/base play-sound))

;https://opengameart.org/sites/default/files/vgmenuselect.wav
(play-sound ""./vgmenuselect.wav"" #f)
```
can someone check if this works on their windows machine? I get: `mciSendStringW: All wave devices that can play files in the current format are in use.  Wait until a wave device is free, and then try again.` ?",,
4.83487E+17,jest#6646,2021-08-27,"ehh, mp3 files work at least üòå , i can live with that.. rsound is broken right now and i need something to just play audio for teaching htdp2 with games",,
4.83487E+17,jest#6646,2021-08-27,"`paplay` doesn't support .mp3 files.... so its going to be weird to tell people you need mp3 files for the sound effects on windows and ogg ones for linux/mac, at least until this merges: https://github.com/libsndfile/libsndfile/issues/258 .. maybe i should try to PR `gui/sound.rkt` and switch it to using directsound rather than the phased out mci ... though it seems like more of a pain in the ass than just trying to make bindings to miniaudio",,
3.58051E+17,hazel#0271,2021-08-27,"https://www.youtube.com/watch?v=JOtQPoQd1k0 Scheme workshop YouTube link, for those interested -- no ICFP registration required",,"üç¥ (1),plusone (1)"
6.46114E+17,samth#3420,2021-08-27,Hazel's talk is happening now!,,
4.83487E+17,jest#6646,2021-08-27,how does PAPL compare against HTDP2? is it just the same thing in a different language or is it more advanced than htdp2?,,
4.66395E+17,oaktownsam#0815,2021-08-27,SK made a post on HN about the difference.  Lemme dig it up.,,
4.66395E+17,oaktownsam#0815,2021-08-27,No wait maybe it was on twitter.  Still trying to find it,,
4.66395E+17,oaktownsam#0815,2021-08-27,https://twitter.com/ShriramKMurthi/status/1429228662738595843,,
4.83487E+17,jest#6646,2021-08-27,never heard of DCIC before,,
4.83487E+17,jest#6646,2021-08-27,ohhh its new,,
4.83487E+17,jest#6646,2021-08-27,uses PLAI ? is that in racket or something similar to pyret?,,
4.83487E+17,jest#6646,2021-08-27,this ? https://docs.racket-lang.org/plai-typed/index.html,,
4.66395E+17,oaktownsam#0815,2021-08-27,PLAI is a `#lang` iirc,,
4.66395E+17,oaktownsam#0815,2021-08-27,It's been a long time since I've read it though.,,
4.66395E+17,oaktownsam#0815,2021-08-27,Well it's a lang and a book,,
4.83487E+17,jest#6646,2021-08-27,üòå back to racket from pyret js land,,
5.39603E+17,spacey üåå#7238,2021-08-27,Welcome back! How was Pyret compared to something like Python?,,
4.83487E+17,jest#6646,2021-08-27,"oh no, i was just stating that PAPL went from pyret and now their latest book ditched it and is now back to racket üòé",,
4.83487E+17,jest#6646,2021-08-27,never used pyret extensively to know,,
4.90866E+17,JOST GRANT#1516,2021-08-27,https://dcic-world.org/2021-08-21/index.html is evidently in Pyret,,
4.83487E+17,jest#6646,2021-08-28,awww,,
3.58051E+17,hazel#0271,2021-08-28,"I feel like at least part of it is that I have had two consistent complaints among HtDP students:
- I hate parentheses
- why do we have to write signatures in comments? $other-language has types",,
3.58051E+17,hazel#0271,2021-08-28,Pyret fixes those. at the very least.,,
2.14881E+17,Moinate#6061,2021-08-28,"Totally agree but kind of related - one thing I find hard about using  a typed language is that they have to get the types right to start running the function & seeing what it does. With a recursive function that's sometimes confusing (takes more technique to develop incrementally)... like putting a list inside of a list to ""accumulate"" instead of appending. Maybe this is specific to Racket, certainly no Java beginner ever does this (but....)",,
8.14743E+16,jimpjorps#0001,2021-08-28,"that's a big part of why I like F#, the compiler's able to do a fair amount of type inference even without needing to know much about how the compiler computes those inferences",,
2.64024E+17,Eutro#0016,2021-08-28,Parens are love parens are life. Don't listen to the haters.,,
3.5323E+17,Alex Knauth#4895,2021-08-28,"Trees are love, trees are life. Parens are one very effective way to express trees, which makes them awesome! but not the only option",,
8.14743E+16,jimpjorps#0001,2021-08-28,parens and pipes are my two equally-beautiful children,,
4.90866E+17,JOST GRANT#1516,2021-08-28,I still wonder how much if the parens-complaints are from people exposed to snippets in like Python or JS prior. Know it's inherently a 'little more messy' but unless you had prior experience ... don't think like a vast-majority of first-timers would have a strong-opinion either-way. :^P,,
4.90866E+17,JOST GRANT#1516,2021-08-28,"That being said ... I still kinda like alt-syntax ""Lisps""; Think Dylan is pretty neat, think Lunar is REALLY neat (but still needs a proper implementation...), and excited to see where Rhombus goes",,
3.58051E+17,hazel#0271,2021-08-28,even from newbies a lot of people have issues balancing parens,,
3.58051E+17,hazel#0271,2021-08-28,but usually it's from people who know Python or something,,
4.90866E+17,JOST GRANT#1516,2021-08-28,"For better-or-worse offside syntax and/or superficially ""Python-like"" is going to be what a LOT of people compare a Language to... and actually a lot more willing to give ground there as-long as it doesn't compromises some of what I consider to be the tennets of Lisp. imo , metaprogramming & interactivity / conversational programming",,
3.58051E+17,hazel#0271,2021-08-28,"had one student complain to me about how they're never going to use any of this because they're going into ""big data deep learning <insert buzzwords here>""",,ü§£ (2)
3.58051E+17,hazel#0271,2021-08-28,pain,,
3.58051E+17,hazel#0271,2021-08-28,wadler's law,,
4.90866E+17,JOST GRANT#1516,2021-08-28,"I REALLY want a Lisp to 'hit it big' in DeepLearning / ML; Feel like it's such a shame it ""invented the field"" but is nearly irrelevant atm",,
3.58051E+17,hazel#0271,2021-08-28,"```
      In any language design, the total time spent discussing
      a feature in this list is proportional to two raised to
      the power of its position.
           0. Semantics
           1. Syntax
           2. Lexical syntax
           3. Lexical syntax of comments
```",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"I mean, ""sadly"" it matters more than we in esssssss-land likes to admit. As-fickle / dumb as it is ... Scheme actually ""feels"" lighter to me when I use a `(def` over a `(define` for example.",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"I think I'm more syntax-sensitive than most though, by nature, tbh",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"Perception matters; And because of this, sadly, so does marketing. It's one of those things that feels ""gross"" * in STEM ... because we want the `work to speak for itself' but it's just not how people operate",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"Especially beginners, where most things ""have to"" by nature work on first-impressions.",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"So say you're in a class learning Scheme as your first prog-lang and the syntax is both longer and has a bunch more  parens than the languages you probably heard of / looked into a tiny-bit (and has 1/1000th the mindshare) , say Python-- so then there's this comparison that's kinda implicit here. Especially since it (Python) is so popular, that becomes the ""default"" in the mind of a beginner and you can feel forced you're learning something weird and possibly 'useless'. Because they want to go 0-to-100 immediately and it's hard to see the value , again because that's the ledger of ""what a proglang should look like"" to them.",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"So at a certain point, you kinda try to figure out what battles are worth fighting.",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"For me the ""wake-up call"" is when the SICP course switched off Scheme (for Python).",,
4.83487E+17,jest#6646,2021-08-28,had to help a few friends who were non-cs majors but needed to take some python class for their econ/business major for what i guess is automating the small stuff and pythons whitespace for blocks tripped them all up lol.. among a few other things,,
4.83487E+17,jest#6646,2021-08-28,"parens aren't so baddd~,  i found in some ways it makes me quicker to start defining a lot more local variables e.g `(define x (foo-x val))` so i dont have to keep retyping `(foo-x val)` everywhere i want the x lol, something i type out all the time `obj.x` in other languages that have a less cumbersome struct field indexing syntax",,
4.83487E+17,jest#6646,2021-08-28,"a few more IDE things like inlay hints for structs and function params(which i hope to get working soon): https://user-images.githubusercontent.com/34615798/108774134-2118c800-7514-11eb-8813-9ae9049493c2.png ,  could go a long way to aid ergonomics",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"Parens aren't bad, I agree; But they're ""weird"" if your understanding of what a programming-language `should` look like is Python and/or Javascript, which is like 90+% of new programmers (probably lol).",,
4.83487E+17,jest#6646,2021-08-28,"i imagine editing lisp in notepad would be very user hostile -John Carmack, but these days with syntax highlighting, rainbow parens, auto-paren-matching/highlighting, its pretty smooth",,
4.83487E+17,jest#6646,2021-08-28,think someone posted this here before lol,,
4.83487E+17,jest#6646,2021-08-28,https://preview.redd.it/9gwghrz9rcs11.jpg?width=640&crop=smart&auto=webp&s=041c46b49fb7a75ae7eda839cd4b4264a0a2b1f1,,"üòÜ (1),üëç (1)"
4.90866E+17,JOST GRANT#1516,2021-08-28,"Well, a problem is (outside of Racket) mostly people's introduction to a Lisp-like language is going to be Emacs; My first-""programming love"" was Emacs ... don't have a problem with it, but a 'regular person' (lol) it's going to likely be a bit too much",,
8.14743E+16,jimpjorps#0001,2021-08-28,most people's introduction to a lisp-like language is going to be nothing at all because it's so far out of the mainstream at this point,,
4.90866E+17,JOST GRANT#1516,2021-08-28,"@jimpjorps I mean, that's fair; But there's still newcomers and it's typically borne out of two places -- academia , whether there's a class you're taking or a graduate-program or something , and the ""true believers"" that buy into the 'Lisp Lore' of Macros, Data = Code, Interactive Programming, Live Redefinition, CLOS, etc, etc",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"So yeah, not mainstream; But there's still some influx",,
4.83487E+17,jest#6646,2021-08-28,"like in rust lang, a common idom is to write a static new method so you don't have to initialize a struct writing all the name of the members:
```rust
struct Rectangle { x: i32, y: i32, w: i32, h:i32}

//how you normally initialize a struct(you gotta type out the field names : value ,:
Rectangle { x: 1, y: 2, w: 3, h: 3 };

//a common idom is to write all this boilerplate here, e.g a static method called ""new"" that does the struct initialization:
impl Rectangle { new(x: i32, y:i32, w: i32, h:i32) -> Self { Self {x, y, w, h} }

//just so we can initialize a struct without needing to type out the name of the members
Rectangle::new(1,2,3,4); //and a vscode extension will draw ""ghost text"" so you know the field names.

//for racket its shorter and we don't have to type out the field names right off the bat lol:
(struct Rectangle x y w h)
(Rectangle 1 2 3 4) //the last missing piece is an IDE displaying ""ghost text"" for all the field names like rust anaylzer
```
so even the argument of all the parens being too much syntax i feel is just less true lol",,
8.14743E+16,jimpjorps#0001,2021-08-28,"I'm in a couple other languages' communities and every once in a while someone new will wander in, then almost instantly get turned off because it isn't just A Different Python or A Different C++ and bounce forever based on the impression they got from 10 minutes of browsing",,
8.14743E+16,jimpjorps#0001,2021-08-28,"first impressions are forever and a lot of people interested in programming have a lot of very strong preconceptions about what programming ""ought"" to be based on maybe a couple weeks' worth of exposure to it",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"Yup, sadly about my conclusion as-well; I think in a language like Racket you have more ""potential staying power"" for a beginner than other  ""non-traditional language syntaxes"" just due to the amount of documentation / educational materials out there .... but even that's not enough to fight this effect imo",,
8.14743E+16,jimpjorps#0001,2021-08-28,"and it's also tied up in career plans and marketability and all that, a lot of the bootcamp set have the impression that you learn one language and that's your job language forever and you need to choose the language that gets you the best salary and learning anything else isn't worthwhile",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"Oh yeah, a language like Racket it's 100% a complete-nogo in a bootcamp-like environment; Not even something like Clojure has a chance",,
8.14743E+16,jimpjorps#0001,2021-08-28,so you get the people who exclusively limit themselves to JS and scoff at any other language,,
8.14743E+16,jimpjorps#0001,2021-08-28,there's nothing to learn from them because if there were you could get a better salary with it,,
4.90866E+17,JOST GRANT#1516,2021-08-28,"This is an overgeneralization but ... in-general I think languages like Lisp (Haskell, and the like) inherently appeal people who are your ""I actually program when I'm not on-the-clock"" types. They're not really 9/5 ecosystems and I just don't think that's marketshare",,
8.14743E+16,jimpjorps#0001,2021-08-28,"yeah absolutely, Haskell especially has a rep as being for hoity toity academic types who do lambda calculus in their head and don‚Äôt actually care about writing programs that do things",,
4.90866E+17,JOST GRANT#1516,2021-08-28,"Well, I mean outside of Clojure ... loool",,
4.90866E+17,JOST GRANT#1516,2021-08-28,Same could be said about Lisp,,
4.90866E+17,JOST GRANT#1516,2021-08-28,Scheme especially,,
8.14743E+16,jimpjorps#0001,2021-08-28,the top four salaries by language in the most recent stackoverflow survey are all functional languages,,
8.14743E+16,jimpjorps#0001,2021-08-28,so *someone* out there values them at least,,
4.90866E+17,JOST GRANT#1516,2021-08-28,Well ... I find it very plausible (if not more-likely-than-not) the salaries of these programmers are skewed upwards due to taking advantage of being the principle engineer on a system that you can't easily hire for; You can't really fire someone without having someone lined up that's competent at FP and if the original designer is long-gone it's going to take a LOT of onboarding to get a standard OO-Driven Java programmer reading / writing even somewhat idiomatic Haskell,,
4.90866E+17,JOST GRANT#1516,2021-08-28,So think it's more of a scarity thing,,
8.14743E+16,jimpjorps#0001,2021-08-28,"yeah absolutely, plus that a lot of FP is used by quantitative finance and crypto and similar specialties",,
4.90866E+17,JOST GRANT#1516,2021-08-28,crypt-oo,,
4.90866E+17,JOST GRANT#1516,2021-08-28,"Oracle in 20 years is going to turn Java into a platform for ""Big Crypt-OO""",,
4.90866E+17,JOST GRANT#1516,2021-08-28,_actually goes afk for a bit to eat dinner._,,
4.40139E+17,Parnikkapore#2806,2021-08-28,"I actually wrote Lisp with K&R-like paren placement for a while when I was learning, and eventually my brain accepted () as ""just another {}"" and started to be able to do Lisp code semi-intuitively",,
4.40139E+17,Parnikkapore#2806,2021-08-28,"(specifically, the closing paren of a `begin`-like form must be on a new line of its own, indented to the same level as the opening paren. Trips up DrRacket's autoindentation, but means my C++ eyes could understand the program's contour)",,
4.40139E+17,Parnikkapore#2806,2021-08-28,"That's how I got over the ""blinding parens"" phase, but I doubt most beginners would be as persistent as I am. I *did* pass over Rust for Golang after all.",,
3.58051E+17,hazel#0271,2021-08-28,"```
(define (((make-potentially-recursive-eval D-int D-bool D-zero?
                                           D-plus D-minus D-times
                                           D-if D-closure D-apply-hov)
          eval) exp [env (hash)])
``` how many levels of currying are you on right now my dude",,
4.40139E+17,Parnikkapore#2806,2021-08-28,"1, because I rarely curry and usually define wrapper functions instead",,
4.83487E+17,jest#6646,2021-08-28,is BSL slower than racket/lang? i recall it was by a noticeable margin wayy back in like... 2018ish,,
6.46114E+17,samth#3420,2021-08-28,"@jest probably, it has various dynamic checks that `racket/base` doesn't",,
3.5323E+17,Alex Knauth#4895,2021-08-28,"BSL also has a lot more ""code intrusive"" features turned on by default such as test code-coverage and errortrace
(I might be wrong about errortrace, but it definitely has test code-coverage)
(the tracing in BSL might be a different feature than the one I was thinking of)",,
4.83487E+17,jest#6646,2021-08-28,ahhh that explains it,,
1.56786E+17,williewillus#8490,2021-08-28,"re parens and syntax
I found it not too bad to pick up in the beginning, but the worst part is nested expressions.
All modern lisps should have threading macros to help alleviate this",,
1.56786E+17,williewillus#8490,2021-08-28,even ML has |>,,
1.56786E+17,williewillus#8490,2021-08-28,but yeah with threading macros reading lisp code is pretty enjoyable,,
4.90866E+17,JOST GRANT#1516,2021-08-28,https://docs.racket-lang.org/rackjure/index.html#%28part._.Threading_macros%29,,
4.90866E+17,JOST GRANT#1516,2021-08-28,"would be nice if it was ""standard though"" yeah",,
4.90866E+17,JOST GRANT#1516,2021-08-28,Oh wait ... it is? https://docs.racket-lang.org/threading/index.html,,‚ù§Ô∏è (1)
3.5323E+17,Alex Knauth#4895,2021-08-28,"I mean... it's still just another package that's not included in the main distribution. I wouldn't mind if that version were added to the main distribution, but I also sometimes prefer a different version that uses a different function version of `~>` (not a macro) with some help from fancy-app `_` when needed, through a combination of the `point-free` package and the `fancy-app` package",,
2.14881E+17,Moinate#6061,2021-08-28,stats fact (funny): small sample size => higher variance,,
3.5323E+17,Alex Knauth#4895,2021-08-28,At least `threading-lib` has become standard enough that `rackjure/threading` is comfortable to just delegate to that instead of re-implementing it.,,
8.14743E+16,jimpjorps#0001,2021-08-28,"does racket do bounties, because I would pay for threading-lib in the standard library",,
6.46114E+17,samth#3420,2021-08-28,@jimpjorps what advantages would being in the standard library have for you?,,
4.66395E+17,oaktownsam#0815,2021-08-28,"I am on team ""Very conservative about adding things to Stdlib""",,
8.14743E+16,jimpjorps#0001,2021-08-28,"probably nothing personally, I'm just thinking about a conversation I had with some other people a couple days ago where they were talking about how they didn't like Racket because it didn't have Clojure's threading macro and they felt that having it as a third-party library wasn't as good for whatever reason",,
4.83487E+17,jest#6646,2021-08-28,yeah ü§î where is racket on funding ? how many core devs are there for racket? i know matthew is one but who else?,,
3.5323E+17,Alex Knauth#4895,2021-08-28,"Having it as another library in the main distribution would address that feeling though, wouldn't it?",,plusone (1)
3.5323E+17,Alex Knauth#4895,2021-08-28,"It wouldn't need to be in `racket/base` or even `racket`, but to have it in the main distribution would provide some more guarantees to people with that feeling against third-party libraries (that they feel might break later on if they don't know the package author)",,
4.66395E+17,oaktownsam#0815,2021-08-28,@samth is another one.  AIUI their employer's cover most of their Racket labor?,,
4.83487E+17,jest#6646,2021-08-28,AIUI?,,
8.14743E+16,jimpjorps#0001,2021-08-28,as I understand it,,
6.46114E+17,samth#3420,2021-08-28,"@jest the current Racket core team is all people whose research work includes Racket, and thus we're able to put substantial time into Racket development. Additionally, we have a variety of sources of funding, including research grants that support the development of Racket (primarily by paying for people's time at universities) and donations that support infrastructure like hosting the package catalog/website/etc.",,
6.46114E+17,samth#3420,2021-08-28,"I don't think there's currently anyone whose job description includes ""improve Racket"" but there are a significant number of people who work on it.",,
4.83487E+17,jest#6646,2021-08-28,wasn't there a web based racket ide? can someone link me?,,
4.83487E+17,jest#6646,2021-08-29,"why did htdp 2nd edition change the terminology from:`union -> itemization` and `signature -> contract` ? , i guess signature is more in the realm of common PL terminology but i never heard of `itemization` before...",,
2.66505E+17,notjack#9941,2021-08-29,"re: threading: instead of adding the package to the stdlib, the stdlib could come with a scribble doc saying ""hey if you're looking for threading in Racket, this package is how we recommend doing it""",,plusone (3)
2.14881E+17,Moinate#6061,2021-08-29,wescheme.org,,
2.14881E+17,Moinate#6061,2021-08-29,"re:threading - the top hit i get to a search ""racket threading"" is the correct package, so i think the audience is people who don't know to look for it... which could be large, admittedly",,
6.46114E+17,samth#3420,2021-08-29,"For signature, the idea was to distinguish it from Racket's contracts",,
4.66395E+17,oaktownsam#0815,2021-08-29,That's surprising.  I figured the top results would be for tennis racket repair.,,üòÅ (1)
2.14881E+17,Moinate#6061,2021-08-29,"maybe if i try it in private browsing mode i'll get different results, lol",,
4.40139E+17,Parnikkapore#2806,2021-08-30,"My thoughts about stdlib is that it makes sure ppl coalesce on the same packages, which is good for increasing interoperability",,
4.40139E+17,Parnikkapore#2806,2021-08-30,You don't want to have two data science packages that can't be used together because one speaks sawzall and the other speaks that other fast data-frame implementation,,
4.40139E+17,Parnikkapore#2806,2021-08-30,"especially when dynamic casting isn't available, like in Racket",,
4.40139E+17,Parnikkapore#2806,2021-08-30,"This is the exact reason I was a bit disillusioned with Golang, because there are like a dozen queue packages out there with no explicit recommendation",,
4.40139E+17,Parnikkapore#2806,2021-08-30,"As someone who just finished a lengthy C++ workshop and was looking for a similar modern language, that took me by surprise",,
1.30231E+17,sarna#3904,2021-08-30,"> modern language similar to C++
but that's crab lang! ü¶Ä",,
4.40139E+17,Parnikkapore#2806,2021-08-30,IIRC crab lang scared me with some weird syntax and terminology at the time,,
4.40139E+17,Parnikkapore#2806,2021-08-30,(Ironic for someone who eventually would study the arts of Scheme lol),,
1.30231E+17,sarna#3904,2021-08-30,btw can you explain to me what's dynamic casting? casting between types at runtime (that implement the same interface)?,,
4.40139E+17,Parnikkapore#2806,2021-08-30,Just looked it up and it seems to not be a word üò¶,,
4.40139E+17,Parnikkapore#2806,2021-08-30,I'd say that it means casting between types at runtime...,,
4.40139E+17,Parnikkapore#2806,2021-08-30,"but what I meant was *implicit* typecasting, i.e. that ""a""+1 does something ""reasonable"" instead of erroring out",,
4.40139E+17,Parnikkapore#2806,2021-08-30,"Whether that is ""b"" or ""a1"" depending solely on the language",,
1.30231E+17,sarna#3904,2021-08-30,Perl and Raku do it nicely,,
1.30231E+17,sarna#3904,2021-08-30,"but yea Racket is very inflexible in this regard, I haven't managed to find any good solution/method for that",,
1.30231E+17,sarna#3904,2021-08-30,"Racket types are weirdly opaque at runtime too, which I find bizarre for a dynamic language",,
3.5323E+17,Alex Knauth#4895,2021-08-30,"Racket's types are more well-defined with clear boundaries, so you never see people confusing a boolean with a symbol or a list, like Common Lisp `nil` being all three",,
4.40139E+17,Parnikkapore#2806,2021-08-30,"Ironically, in Racket, a *Lisp*, you can't cleanly implement something like  `(+ '(a b) '(c d e)) ‚Üí '(a b c d e)` unless you sneakily redefine `+`",,
3.5323E+17,Alex Knauth#4895,2021-08-30,"if you want to combine the string `""a""` and number `1` to get string `""a1""`, use the `~a` function, not `+`",,
1.30231E+17,sarna#3904,2021-08-30,"well in Racket `null` is an empty list, which is truthy :mew: to me it's very confusing",,
1.30231E+17,sarna#3904,2021-08-30,also how box containing #f is truthy as well,,
3.5323E+17,Alex Knauth#4895,2021-08-30,"The problem with implicit dynamic casting is that there are often multiple ways to interpret one type as another.
And with overloaded operations that makes it worse. 

Like... you said it's confusing that in Racket, all lists are truthy: maybe that's true, but in my mind it would be more confusing for lists to be ""booleany"" in different ways, with the empty list being falsey and non-empty being truthy. From my point of view implicit dynamic casting of lists to booleans isn't a good thing to begin with. But if I had to live with it I'd rather all lists be interpreted the same way, all truthy, than interpreted differently",,
4.40139E+17,Parnikkapore#2806,2021-08-30,"...like the 'is ""a""+1 ""b"" or ""a1""' problem",,
3.5323E+17,Alex Knauth#4895,2021-08-30,"I don't think that should be `+`'s ""job"", I think it should be `~a` that handles that",,
3.5323E+17,Alex Knauth#4895,2021-08-30,"```
> (~a ""a"" 1)
""a1""
```",,
4.40139E+17,Parnikkapore#2806,2021-08-30,"I was talking about programming languages in general, not Racket in particular",,
4.40139E+17,Parnikkapore#2806,2021-08-30,And most languages but JS do use separate operators for `string-append` and `+` - Lua uses `..` for instance,,
3.5323E+17,Alex Knauth#4895,2021-08-30,"Because `~a` always produces strings and does something really simple like append strings together, it makes more sense that it could dynamically cast other types to strings in a uniform way (display as string). The same arguments could be made for `string-append` and `string-join`.

But for `+`???? no",,
1.30231E+17,sarna#3904,2021-08-30,"if `~a` concatenates strings and `+` adds stuff, why wouldn't it make sense for this to work? `(+ 1 ""2"")`",,
4.40139E+17,Parnikkapore#2806,2021-08-30,"`""2""` isn't a number",,
4.40139E+17,Parnikkapore#2806,2021-08-30,the whole point of `+` is to add Numbers,,
4.40139E+17,Parnikkapore#2806,2021-08-30,in this model at least,,
8.14743E+16,jimpjorps#0001,2021-08-30,I am a fan of restricting implicit coercion as much as possible because it requires you to state your intent in code,,
3.5323E+17,Alex Knauth#4895,2021-08-30,"with `~a` it always concatenates to it's obvious it's `""12""`. With `+` it's ambiguous to anyone who's relatively new to it",,
4.40139E+17,Parnikkapore#2806,2021-08-30,"You *could* define it as ""cast all arguments to Number and add them up"", but that'd be really confusing",,
1.30231E+17,sarna#3904,2021-08-30,but sometimes the intent devolves into adding fifty type casts,,
4.40139E+17,Parnikkapore#2806,2021-08-30,"Personally, I'd only want implicit type casting between things which are the same outside the computer, say, between rationals, floats, and ints. Everything else should be written out.",,
3.5323E+17,Alex Knauth#4895,2021-08-30,"I don't think casting strings to numbers is a good idea anyway. Casting types to strings makes more sense because they can do it relatively uniformly with operations like ""display as string"" or `~a`",,
3.5323E+17,Alex Knauth#4895,2021-08-30,"Oh Racket already does that between rationals, floats, and ints, but when I program with that I don't even really think of it as implicit dynamic casting. But of course it is... it's just a better one because those types are more obviously tied together",,
4.40139E+17,Parnikkapore#2806,2021-08-30,Another place where this happens in Racket is with sequences,,
4.40139E+17,Parnikkapore#2806,2021-08-30,"Doesn't matter if it's a cons chain, vector, or something else - `sequence-fold` will do what you expect",,
3.58051E+17,hazel#0271,2021-08-30,I do not like things being casted to other things implicitly. I would rather be terse rather than prototype fast.,,
3.58051E+17,hazel#0271,2021-08-30,this is part of the philosophy of Common Lisp vs Scheme.,,
3.58051E+17,hazel#0271,2021-08-30,"Scheme and Scheme-likes more generally are more verbose, but more elegant, whereas Common Lisp is a bit more ""ship it""",,
3.58051E+17,hazel#0271,2021-08-30,"I don't think Common Lisp does the weird `+` thing you're talking about though
I think that's just universally a bad idea",,
3.58051E+17,hazel#0271,2021-08-30,`+` in my mind should work on numbers and that's it,,
4.40139E+17,Parnikkapore#2806,2021-08-30,"Of all the languages I know right now, only JS does",,
3.58051E+17,hazel#0271,2021-08-30,Java,,
3.58051E+17,hazel#0271,2021-08-30,R uses `+` in weird ways too,,
3.58051E+17,hazel#0271,2021-08-30,"```r
ggplot(data = full,
       mapping = aes(x = gdpPerCapita,
                     y = lifeExpectancy)) +
  geom_point(alpha = 0.3, aes(color = continent)) +
  geom_smooth(method = ""gam"") + 
  scale_x_log10(labels = scales::dollar) +
  scale_y_continuous(limits = c(40, 90)) +
  labs(x = ""GDP per capita (USD)"", y = ""Life expectancy (years)"",
       title = ""GDP per capita vs life expectancy from 2000-2019"")
```",,
3.58051E+17,hazel#0271,2021-08-30,this is composition of graphics with the `+` operator,,
3.58051E+17,hazel#0271,2021-08-30,"this is one thing while designing Graphite I was like ""uh. no""",,
4.40139E+17,Parnikkapore#2806,2021-08-30,and c++ std::string apparently,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-30,"java does it, but it's not recommended in majority of cases and you'll rarely see it in production code",,
3.58051E+17,hazel#0271,2021-08-30,what I think you *really* want is a semigroup typeclass,,
3.58051E+17,hazel#0271,2021-08-30,a la Haskell,,
3.5323E+17,Alex Knauth#4895,2021-08-30,"Even with a semigroup typeclass, the `Semigroup a => a -> a -> a` operation and the `(ToString a, ToString b) => a -> b -> String` operation should _not_ be the same thing!",,
4.40139E+17,Parnikkapore#2806,2021-08-30,"cursed
```scheme
(out +)
(define old-+ +)
(define (+ . args)
    (if (pat-match? args (my-set? my-set?)) (my-set-append (car args) (cadr args))
        (old-+ . args)))
```",,
1.30231E+17,sarna#3904,2021-08-30,"by the way, as it seems kinda relevant - how do you structure your data in Scheme/Racket? I tend to make a lot of structs and it's a bit painful, I wonder if there's a better way",,
1.30231E+17,sarna#3904,2021-08-30,when prototyping I sometimes use lists but it tends to turn into a cadadr mess quickly,,
3.58051E+17,hazel#0271,2021-08-30,structs and match,,
3.58051E+17,hazel#0271,2021-08-30,a *lot* of match,,
7.73175E+17,meowüé∫#2842,2021-08-30,Strong typing very good,,
1.30231E+17,sarna#3904,2021-08-30,so instead of using generic interfaces you'd match on concrete structs?,,
1.30231E+17,sarna#3904,2021-08-30,(as an example),,
1.30231E+17,sarna#3904,2021-08-30,I tried using generics recently and it felt very clunky :meowblushcry:,,
3.5323E+17,Alex Knauth#4895,2021-08-30,"Okay... but what if you could use generics as structs?
Um. Not exactly that, but generics are like struct-type-properties, and there is a way of using certain struct-type-properties as structs",,
3.5323E+17,Alex Knauth#4895,2021-08-30,I made a package for that called `struct-like-struct-type-property`,,
1.30231E+17,sarna#3904,2021-08-30,ah that one seems cool,,
1.30231E+17,sarna#3904,2021-08-30,~~or I could just use classes~~ :meowsmile:,,
4.83487E+17,jest#6646,2021-08-30,üòî i wish 0 in racket was false ....,,
4.83487E+17,jest#6646,2021-08-30,do you guys disable drrackets 'auto backup feature' ? i find its really annoying creating a lot of .bak files and bloating my directory..,,
3.5323E+17,Alex Knauth#4895,2021-08-30,"like I said with lists, in my mind it would be confusing for numbers to be ""booleany"" in different ways, with 0 being falsey and non-zero being truthy... I'd rather have no implicit dynamic casting of numbers to booleans to begin with",,
3.5323E+17,Alex Knauth#4895,2021-08-30,"or it would also be confusing for numbers to be ""booleany"" in the opposite way with 0 being truthy and non-zero being falsey",,
3.5323E+17,Alex Knauth#4895,2021-08-30,which is also a thing,,
3.5323E+17,Alex Knauth#4895,2021-08-30,I'd rather just not have that implicit casting at all,,
4.83487E+17,jest#6646,2021-08-30,"its mainly so i dont have to type another pair of parens to check if its 0 or not, i dunno... it ""feels"" intuitive to me coming from some C and other languages that do it",,
3.5323E+17,Alex Knauth#4895,2021-08-30,I'd rather boolean be a separate type.,,
3.5323E+17,Alex Knauth#4895,2021-08-30,"I don't like them being just numbers in C, and I don't like them being just symbols in CL.",,
2.75501E+17,Plane#0324,2021-08-30,i think 0 being false in scheme would be a major footgun,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-30,"yeah disagree about 0. Now that null / empty list, on the other hand..",,
4.83487E+17,jest#6646,2021-08-30,lotta smol aesthetic/syntactical things but i wish racket `lambda` keyword could also be just `fn` like in rust.... but its too late and i dont really wanna macro or alias it lol,,
4.83487E+17,jest#6646,2021-08-30,what is the `#lang bsl` ? or do you have to go to the dropdown menu in racket in order to select it?,,
4.83487E+17,jest#6646,2021-08-30,"ahh its : `#lang htdp/bsl` . is presume this is also the same for the 2nd edition of the book? because adding a 2, `#lang 2htdp/bsl` is an error",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-30,you can use `Œª` üòÑ,,
2.34164E+17,python#3213,2021-08-30,Œª ftw,,
4.83487E+17,jest#6646,2021-08-30,"i dont even know how to type that... >_> , not to mention i dont really like it when its not something straight forward i can type on my keyboard on any text editor",,
2.34164E+17,python#3213,2021-08-30,"i use compose key, so i have `alt`-`g`-`l` bound to type Œª",,
2.34164E+17,python#3213,2021-08-30,but i think there's also a special binding for it in dr. racket,,
8.14743E+16,jimpjorps#0001,2021-08-30,"ctrl-\ in drracket, it's an autocomplete for lmb in magic racket",,üëå (2)
2.75501E+17,Plane#0324,2021-08-30,for me i can type it in other editors since i use japanese input,,
2.75501E+17,Plane#0324,2021-08-30,i do feel like the lambda syntax can be cumbersome sometimes,,
8.14743E+16,jimpjorps#0001,2021-08-30,it should be `fun` because racket is fun,,meowblushcool (1)
2.75501E+17,Plane#0324,2021-08-30,"```
crystal@wings ~> ghci
GHCi, version 9.0.1: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/crystal/.ghci
ghci> map (\x -> x^3) [1..5]
[1,8,27,64,125]
ghci>
Leaving GHCi.
crystal@wings ~> racket
Welcome to Racket v8.2 [cs].
> (map (Œª (x) (* x x x)) (range 1 6))
'(1 8 27 64 125)
```",,
2.75501E+17,Plane#0324,2021-08-30,they're both ok but the haskell one feels friendlier to me,,
2.75501E+17,Plane#0324,2021-08-30,"then with comprehensions
```
crystal@wings ~> ghci
GHCi, version 9.0.1: https://www.haskell.org/ghc/  :? for help
Loaded GHCi configuration from /home/crystal/.ghci
ghci> [x^3 | x <- [1..5]]
[1,8,27,64,125]
ghci>
Leaving GHCi.
crystal@wings ~> racket
Welcome to Racket v8.2 [cs].
> (for/list ([x (range 1 6)])
    (* x x x))
'(1 8 27 64 125)
```",,
2.75501E+17,Plane#0324,2021-08-30,"i avoided the lambda syntax but i do feel like having a nice compact, readable lambda syntax is nice",,
2.75501E+17,Plane#0324,2021-08-30,haskell uses `\` instead of `Œª` which avoids the typeability problem,,
2.75501E+17,Plane#0324,2021-08-30,but `Œª` is prettier lol,,
2.75501E+17,Plane#0324,2021-08-30,i think the idea behind `\` is that it looks similar to `Œª` but you can type it easily,,
8.14743E+16,jimpjorps#0001,2021-08-30,julia's made me more amenable to languages that use an extended characterset,,
8.14743E+16,jimpjorps#0001,2021-08-30,as long as you're working in an editor that'll autocomplete for you,,
8.14743E+16,jimpjorps#0001,2021-08-30,"something like `x ‚àà nums` compared to `in(x, nums)` or whatever",,
8.14743E+16,jimpjorps#0001,2021-08-30,feels more expressive,,
4.66395E+17,oaktownsam#0815,2021-08-30,"I don't think this is that sneaky and is relatively clean.  A language (or library) that does this should advertise the fact that it changes the function or people may be surprised.  I actually think a library (not a lang) doing this could be bad form.
```scheme
#lang racket/base

(module plus racket/base
  (require racket/generic)

  (provide gen:plus
           (rename-out [do-plus +]))
  
  (define-generics plus
    (do-plus plus . b*)
    #:fast-defaults
    ([number? (define (do-plus a . b*) (apply + a b*))]
     [pair?   (define (do-plus a . b*) (apply append a b*))]
     [null?   (define (do-plus a . b*) (apply append b*))]
     ;; vector? ...
     ;; set? ...
     ;; hash? ...
    )))

(require (submod ""."" plus))

(+ 3 4)
(+ '(cat) '(dog))

```",,
4.66395E+17,oaktownsam#0815,2021-08-30,(exercise for the reader is making no-arg `+` work.),,
1.30231E+17,sarna#3904,2021-08-30,I like OCaml-style overriding a lot,,
1.30231E+17,sarna#3904,2021-08-30,"you could define a Generic module and write `Generic.(""foo"" + ""bar"")`",,
1.30231E+17,sarna#3904,2021-08-30,or `open Generic` to override it globally,,
1.30231E+17,sarna#3904,2021-08-30,it's pretty rad,,
5.24323E+17,Ben Kenobi#5683,2021-08-30,Just a poll: recommended libraries or `#lang`s for making APIs?,,
4.66395E+17,oaktownsam#0815,2021-08-30,Library (or maybe I don't understand the question üòÑ ),,
5.24323E+17,Ben Kenobi#5683,2021-08-30,"Should have written plurals, corrected. I‚Äôm looking for recommendations for either to avoid using python",,
4.66395E+17,oaktownsam#0815,2021-08-30,Like REST apis?,,
4.62028E+17,StephenD#5938,2021-08-30,https://docs.racket-lang.org/riposte/,,
5.24323E+17,Ben Kenobi#5683,2021-08-30,"Looks awesome for testing stuff, thanks!",,
4.62028E+17,StephenD#5938,2021-08-30,All thanks should go to the author Jesse Alama,,salute (1)
5.24323E+17,Ben Kenobi#5683,2021-08-30,Sadly didnt see `#lang route` or `#lang web/api` or some-such üôÇ,,
4.83487E+17,jest#6646,2021-08-30,üòî https://github.com/MichaelBurge/pyramid-scheme pyramid scheme is archived,,
4.83487E+17,jest#6646,2021-08-30,wonderful name ü§£,,
4.66395E+17,oaktownsam#0815,2021-08-30,Ziggurat Scheme when?,,üòÇ (1)
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-30,"> Ethereum
ü§¢",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-30,"the less people spend their efforts on this crypto bs, the more well off the society will be",,üíØ (6)
4.83487E+17,jest#6646,2021-08-30,does 2htdp have trapezoids?,,
4.83487E+17,jest#6646,2021-08-30,guess i could make one by putting two right triangles with a rectangle but i cant seem to find if theres one thats built in,,
2.14881E+17,Moinate#6061,2021-08-30,if it's not on the 2htdp/image page it's not built in https://docs.racket-lang.org/teachpack/2htdpimage.html,,
6.46114E+17,samth#3420,2021-08-30,you can use `polygon`,,
6.46114E+17,samth#3420,2021-08-30,but there isn't a built-in trapezoid,,
2.14881E+17,Moinate#6061,2021-08-30,"think of all of the parameters you could use to make it, it would be a complete zoo of extras. better to diy based on the info you have",,
4.83487E+17,jest#6646,2021-08-30,ill just use two right triangles and a rectangle to do it lol... seems easier imo,,
4.83487E+17,jest#6646,2021-08-30,also could be an exercise for the students üòå,,
4.83487E+17,jest#6646,2021-08-30,`image=?` is not provided in `2htdp/image`? only the first one `htdp/image` and the languages ? `lang/htdp-beginner` ? find it kind of odd but eh,,
5.24323E+17,Ben Kenobi#5683,2021-08-30,is there a builtin rhombus? :rhombus: /s,,
6.46114E+17,samth#3420,2021-08-30,"yes, `rhombus` is provided",,
4.83487E+17,jest#6646,2021-08-30,üòå,,
1.93202E+17,rocketnia#4517,2021-08-30,"As far as generic `+` goes, I sometimes found the Arc version cozy. It dispatches based on the first argument, so if you want to be sure you get a number, you write `(+ 0 ...)`, and if you want to be sure you get a string, you write `(+ """" ...)`. (Well, I did that, but other Arc programmers I talked to didn't like how that looked.)

On the other hand, I don't like implicit casting in general, outside of composing debugging messages using string concatenation of not-necessarily-string values. I don't like that Arc's `(+ 0 ...)` implicitly coerces things to numbers. Even debugging messages might be better off with a more structured document format, so that embedded values can be nicely colorized and collapsed/expanded in the output.

I don't even like the implicit casting in numeric towers. I rarely write arithmetic with rationals, complex numbers, and floating point numbers at the forefront of my mind, and I don't want it to work with those in subtly wrong ways by accident. In languages with numeric towers, I spend some extra effort thinking defensively about how to assert that I'm working with the right kind of number or how to deal semi-properly with numbers I don't really care about at the time.

So basically `+` is one of the few things I like to be generic, and that's because it's easy to clarify the instance intended by passing in a unit element.",,
2.64024E+17,Eutro#0016,2021-08-30,Number towers are fine I think,,
2.64024E+17,Eutro#0016,2021-08-30,because all of the functions' domains and ranges can be all over the place,,
2.64024E+17,Eutro#0016,2021-08-30,just raising a negative integer to a rational number can be a complex number,,
2.14881E+17,Moinate#6061,2021-08-30,"Eutro: yes but forcing someone to be explicit in that case could easily prevent a horrid misunderstanding. I mean I'd guess most people who write 5^(1/3) want the _real_ the third root of 5, not one of the nonreal ones... it's going to be a real wtf moment. Even (-5)^(1/3) to stick exactly with your example.",,
4.66395E+17,oaktownsam#0815,2021-08-30,Ohno this is private now.,,
8.09146E+17,darren#6252,2021-08-30,"Hi! 
I have had this question for long time. Can Typed Racket import and use all libraries in Racket ecosystem, even when it is written in regular Racket? Or, there may be some glitches, practically speaking?",,
3.5323E+17,Alex Knauth#4895,2021-08-30,"Libraries that are mostly made up of functions are easier to import into Typed Racket than libraries that rely heavily on macros... and libraries that rely on macros that expand to uses of untyped library functions are very difficult.

Also some libraries that define their own data types can be harder to import into Typed Racket if the untyped data type can be an opaque struct but the untyped predicate isn't directly the struct-predicate... there are workarounds but it's not always easy",,üëç (1)
3.5323E+17,Alex Knauth#4895,2021-08-30,"Also some untyped-library datatypes can be complicated enough that they're hard to describe with existing TR types, it depends",,üëç (1)
8.09146E+17,darren#6252,2021-08-30,"I thought that it will be not always easy. And yes, what you explained makes sense.",,
8.09146E+17,darren#6252,2021-08-30,"In fact, it feels like a huddle to use typed racket if it won't be able to use the whole ecosystem. It rather feels like a different language just with some overlap in the ecosystem.",,
3.5323E+17,Alex Knauth#4895,2021-08-30,"There's still a lot of libraries that can be used with Typed Racket, it depends on what you want to do",,
8.09146E+17,darren#6252,2021-08-30,I am looking for a lisp implementation that is faster than Clojure in performance (not talking about development speed). I am currently checking both Common Lisp and Typed Racket.,,
8.09146E+17,darren#6252,2021-08-30,"With Common Lisp, for me personally, its package manager is a challenge.",,
8.09146E+17,darren#6252,2021-08-30,I am more inclined to Typed Racket.,,
8.14743E+16,jimpjorps#0001,2021-08-30,is there a reason you want Typed Racket specifically over standard?,,
8.09146E+17,darren#6252,2021-08-31,"Yes, performance. I haven't really tried but I heard that typed racket is quite faster than the regular one.",,
6.87833E+17,grey#8674,2021-08-31,"Generally, you start with regular Racket, then switch to Typed Racket, if you find that you need the extra performance.",,
4.66395E+17,oaktownsam#0815,2021-08-31,"Or, that you want to make it more robust with Types.",,plusone (1)
8.09146E+17,darren#6252,2021-08-31,Makes sense.,,
3.79445E+17,joohnym#9531,2021-08-31,I think untyped Racket might already be as fast or faster than Clojure,,
3.79445E+17,joohnym#9531,2021-08-31,though don't quote me on that,,
6.87833E+17,grey#8674,2021-08-31,"It also depends on what you want to do. If you have some very performance-sensitive stuff, then you can use the FFI and call out to some C code. But, unless you already know that what you want to do is really performance-sensitive, then you generally don‚Äôt need to worry too much.",,
6.87833E+17,grey#8674,2021-08-31,"Also, picking the right data structures and algorithms for your problem is going to be more important than using a language with a speedy implementation.",,
1.56786E+17,williewillus#8490,2021-08-31,"Ehhh
Closure gets a pretty heavy boost by being on the JVM and having a powerful GC and jit. I wouldn't put racket above it without a thorough test.

Either way if you want a fast lisp, you should just go for CL and imperative style code. Definitely the fastest.",,üëç (1)
4.90866E+17,JOST GRANT#1516,2021-08-31,"I'm no expert ... and I always struggle to find  hard numbers on this kind of thing -- but unlike say Kotlin (and to a certain extent Scala), idiomatic Clojure is not close-enough to Java where there isn't going to be some performance penalties; So I don't think just being on the JVM / JDK is going to be as big of a boost as one might expect.",,
4.90866E+17,JOST GRANT#1516,2021-08-31,I wouldn't be shocked if idiomatic Clojure is a factor-of-3-5 (or notably worse) than Java.,,
4.90866E+17,JOST GRANT#1516,2021-08-31,It'd be neat to take a subset of the benchmarks provided by https://ecraven.github.io/r7rs-benchmarks/ and implement them in Clojure to compare the ecosystems,,
4.90866E+17,JOST GRANT#1516,2021-08-31,Racket (and think is likely due to being now based on Chez) is pretty dang speedy though.,,
4.90866E+17,JOST GRANT#1516,2021-08-31,I've heard (by the creator / lead maintainer ... so there might be some bias there / take it as you will but) that Kawa is arguably 'faster' than Clojure; So if those benchmarks are any indication there might be a wider gap than I'd suspect,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Even if this is / was the case ... the value-proposition the modern JVM provides, especially via something like ZGC is pretty dang high imo, so still might be worth because I feel like GCs can often be a bigger bottleneck than ""pure general performance""",,üëç (1)
4.90866E+17,JOST GRANT#1516,2021-08-31,_REALLY hopes that Lisps start to focus on ultra-low-latency-garbage-collectors over the next few years._,,
2.75501E+17,Plane#0324,2021-08-31,yeah!  especially for games where you want 120+ fps,,
4.40139E+17,Parnikkapore#2806,2021-08-31,An alternate world where Racket has generic +,,
6.46114E+17,samth#3420,2021-08-31,"@darren most libraries are pretty easy to use from Typed Racket. However, I would say that performance is mostly similar between Racket and Typed Racket -- the big difference is if you have numeric-heavy code.",,üëç (1)
4.83487E+17,jest#6646,2021-08-31,is the gc even the bottleneck?,,
4.83487E+17,jest#6646,2021-08-31,do you mates use racket/slideshow for your presentations as well ?,,
8.14743E+16,jimpjorps#0001,2021-08-31,I haven't needed to give a presentation in a while but I'm likely to stick with Beamer in LaTeX,,
6.46114E+17,samth#3420,2021-08-31,@jest yes,,
4.66395E+17,oaktownsam#0815,2021-08-31,I try not to give presentations üôÇ  But I have used slideshow in the past,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"For stuff like games, yeah, I'd say so.  Before ZGC (and to a 'lesser degree' Shenandoah) you would have to make sure you're not allocating too-too much -- because stop-the-world makes a bigger difference in this domain ... ie: it can and taken to it's maxim would be ""experience breaking"". Java also doesn't have value-types (yet ... ""soon"" :^) ) like C#; C# has been able to get away with a lot in the game-space because they don't ""only"" have to store to a managed heap.",,
4.90866E+17,JOST GRANT#1516,2021-08-31,What's great is that with Project Valhalla in-coming & ZGC already delivered (with performance actually MUCH better than it's was initially sold) -- the JVM is becoming a surprisingly compelling gamedev platform.,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Also I guess Graalvm , where you can build native binaries.",,
4.90866E+17,JOST GRANT#1516,2021-08-31,On the topic of gamedev (and circling back to Racket lol) -- @oaktownsam just found https://github.com/samdphillips/racket-godot-experiment which is very exciting to me!,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-31,suddenly I'm also excited üòÑ,,
4.66395E+17,oaktownsam#0815,2021-08-31,"I haven't worked on it much.  Please feel free to use it as a starting point.  The best ""reference"" I found for how to integrate it was the python godot scripting.",,
4.66395E+17,oaktownsam#0815,2021-08-31,Literally all it does successfully now is print a banner,,
4.66395E+17,oaktownsam#0815,2021-08-31,I think the next step was to register all of the fancy api calls.,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Thought of a name already, ""Lambdot"" loooool",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Grabbing the GH Org and forking your repo at minimum as a reminder; Actually think it's probably a pretty fun ""big first-project"" for me next-year",,
4.90866E+17,JOST GRANT#1516,2021-08-31,Actually getting myself way too exited about this. lol,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"I think honestly, gamedev is probably the ""secret sauce"" to get kids interested in programming in a  contemporary sense and I'm actually a lil bit shocked it's not focued on a LOT more than it is in the 'Scheme sphere'. lol I guess Racet has some cool stuff historically like Pict3d and Codespells looks promising (again).",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"And not even proper ""gamedev"" really; Think Codespells is the right approach where you're in-instance and you can modify the game-world / game-state while ""in that world"".",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Really something like https://en.wikipedia.org/wiki/Dreams_(video_game) to me, would be the 'ultimate ideal' for such educational tooling.",,
2.75501E+17,Plane#0324,2021-08-31,that's what got me interested when i was little (:,,
2.75501E+17,Plane#0324,2021-08-31,i kinda don't recommend anyone actually go into gamedev as a career though,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-31,"gamedev is fun, but then otoh gamedev is probably one of more challenging domains..",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"@Plane I think it's almost the ""norm"" nowadays. I know a 'kid' (16-17) from the Nim community who's writing compilers right now and got started scripting in ""Computercraft""",,
4.66395E+17,oaktownsam#0815,2021-08-31,Or go into Gamedev and destroy the system from the inside. üòè,,
2.75501E+17,Plane#0324,2021-08-31,"i mean, i did go into gamedev, i just don't recommend it to anyone else, lol",,
2.75501E+17,Plane#0324,2021-08-31,i also did web dev stuff,,
2.75501E+17,Plane#0324,2021-08-31,there's a lot more money in that and it tends to be easier and less toxic,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"It's the ""playful exploration"" I think is so vital to get people hooked* on programming; Lisp is VERY good at this by it's nature so I think this is one of the reasons you get die-hards ... and one of the reasons when you try to teach programming to first-timers in Java / C++ the failure rate is so high. Though the environment / context it's taught is just to blame ... needs to be interesting enough to work through language quirks / ugliness.",,
2.75501E+17,Plane#0324,2021-08-31,"i just think java is, at its core, not a fun language",,
2.75501E+17,Plane#0324,2021-08-31,it is . . . a language,,
2.75501E+17,Plane#0324,2021-08-31,"some people enjoy it, but i think overall java is the kind of language you use because you get paid to do it",,
2.75501E+17,Plane#0324,2021-08-31,"i mean, you *can* have fun in any language",,
4.90866E+17,JOST GRANT#1516,2021-08-31,I guess my point is more Java taught in the context of a something like JMonkeyEngine3 I think the retention rate would be a lot higher overall,,
2.75501E+17,Plane#0324,2021-08-31,what really got me was programming on those 8-bit machines in the 80s and then working my way up as computers got more complicated,,
2.75501E+17,Plane#0324,2021-08-31,it's fun when you have a system that isn't overwhelmingly complicated that you can explore like a sandbox,,
2.75501E+17,Plane#0324,2021-08-31,that was great for me as a kid,,
8.14743E+16,jimpjorps#0001,2021-08-31,"yeah, at least for Java the typical intro course is like 80% managing all the infrastructure and boilerplate and build tools and then you put your little bit of code in the very center and it does something trivial and it really doesn't sell you on it if you aren't already all-in on wanting to learn it for a job",,
2.75501E+17,Plane#0324,2021-08-31,i made lots of games starting when i was 7 or 8,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"It REALLY helps to **see** something manifest / mutate in fun , unexpected ways and try to figure out what's going on -- compared to oh, there's a stack-trace , okay, ummmmmm; Turtle was a thing for a reason",,
2.75501E+17,Plane#0324,2021-08-31,"yeah i'm not sure how popular this idea is, but i think just getting your hands dirty and iterating mercilessly is a really good way to start",,
2.75501E+17,Plane#0324,2021-08-31,"having no idea what you're doing, it doesn't matter because it's a highly rewarding activity",,
2.75501E+17,Plane#0324,2021-08-31,you get to see the results of what you did right away,,
2.75501E+17,Plane#0324,2021-08-31,"hey, this thing moved across the screen!  i made it move!",,
2.75501E+17,Plane#0324,2021-08-31,and since it's rewarding it's motivating so you keep learning and at some point you can learn maybe a bit more properly,,
2.75501E+17,Plane#0324,2021-08-31,but i think it's easier to learn the theoretical underpinnings for things once you've already played with them to the point where it's easy for you to just do stuff,,
2.75501E+17,Plane#0324,2021-08-31,"after all, you run into *all* sorts of problems that way",,
2.75501E+17,Plane#0324,2021-08-31,and those theoretical underpinnings can start to explain those problems to you,,
2.75501E+17,Plane#0324,2021-08-31,"so you realize, oh, ok, if i don't want that bad thing to happen, i do X and Y instead of Z",,
2.75501E+17,Plane#0324,2021-08-31,but at that point you're hooked already,,
2.75501E+17,Plane#0324,2021-08-31,because it's fun!,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"I think it's a popular idea ... just it's really weird people don't seem to be actuating on this. Like REALLY weird, I would think something like CodeSpells ""shouldn't be able to exist"" because the market was so saturated by now -- because the amount of potential market you could control is huge; I remember in the 90s there was an ""edutainment"" boom in general for videogames",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Not sure what ""killed it""",,
4.90866E+17,JOST GRANT#1516,2021-08-31,Especially when live-coding / in-game scripting (ie: editing the gameworld) is a lot more reasonable an expectation given the resources we all have nowadays,,
8.14743E+16,jimpjorps#0001,2021-08-31,"there's at least some of that still, like minecraft education edition is still relatively popular",,
8.14743E+16,jimpjorps#0001,2021-08-31,though that's more about circuits and logic than coding,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Just realized if I actually do anything with Lambdot next year ... I can repurpose this. looool 
Both unofficial mascots in-manifest.",,üëç (1)
1.93202E+17,rocketnia#4517,2021-08-31,"from what I saw of Kodu Game Lab, it had a pretty interesting event-based language for teaching programming through game development",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Well from what I've seen it's less about CompSci in-general. Like I've seen more about chemistry from it I think than anything else. lol

Really my ""ideal game"" is pretty close to what I wanted Minecraft EDU to be. Basically Computercraft++ & yeah keep some of the more advanced redstone but as traditional logic-gates a'la Logicworld",,
1.93202E+17,rocketnia#4517,2021-08-31,"Game Builder Garage is something more recent, which seems to have a box-and-wire language",,
4.90866E+17,JOST GRANT#1516,2021-08-31,Is that the nintendo thing?,,
1.93202E+17,rocketnia#4517,2021-08-31,yeah,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Also heard of this one, but need to look into it more; Not shocked they exist per-say just that there aren't 10,000s of companies competing in this space. lol",,
4.90866E+17,JOST GRANT#1516,2021-08-31,Game Builder Garage looked interesting; But after seeing Dreams I was a little underwhelmed tbh. But that's like probably a team of 5 over the course of two years versus a whole studio for like 5+ so probably not fair to compare the two.,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"But they're enough in the ""same space"" I guess, where it's inevitable",,
2.75501E+17,Plane#0324,2021-08-31,"a lot of people i know these days learn to program in one language, and consider themselves to be essentially just one-language programmers",,
2.75501E+17,Plane#0324,2021-08-31,"like, someone who wants to spend their whole career in python or java and considers spending time on anything else a waste of time",,
2.75501E+17,Plane#0324,2021-08-31,it's a really foreign mindset to me,,
2.75501E+17,Plane#0324,2021-08-31,"i always viewed the ""real stuff"" of programming as the process, not really specific to any language",,
8.14743E+16,jimpjorps#0001,2021-08-31,yeah I've noticed that too,,
8.14743E+16,jimpjorps#0001,2021-08-31,lots of people who think you learn Javascript and then you're done,,
8.14743E+16,jimpjorps#0001,2021-08-31,"because why would you need anything else, you can use it for the front end and the back end",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Hey, tbf Clojure kinda was / is exciting for me ... because of this prospect aaannndd Raketscript x Rackt has been manifestin. loool",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Honestly though I think it's the influence of people who don't program for pleasure necessarily , but it's their day-job.",,
8.14743E+16,jimpjorps#0001,2021-08-31,yeah,,
4.90866E+17,JOST GRANT#1516,2021-08-31,Which I don't think there's anything inherently wrong with this; But there's just going to be different interest between these parties,,
2.75501E+17,Plane#0324,2021-08-31,"programming for a job, and only for a job, is a perfectly respectable thing to do",,
8.14743E+16,jimpjorps#0001,2021-08-31,"and it's fine to have a day job skill, but it's also just kind of short-sighted to think you'll never need anything else or there's nothing else you can possibly learn by looking outwards",,
8.14743E+16,jimpjorps#0001,2021-08-31,or that people who are looking outwards are objectively wasting their time and being worse programmers,,
2.75501E+17,Plane#0324,2021-08-31,"i'm the opposite, where i started programming when i was little because my parents were both programmers and got me a computer, and growing up there was never really any question of what i would do for a career",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Eh, when you pick big-daddy languages ... you likely are going to win overtime. The amount of stories I hear from companies who like tried Clojure in production and as soon as whoever maintained it left, rewrote it in Java -- yeah, think it's a pretty safe bet. lol",,
2.75501E+17,Plane#0324,2021-08-31,but that was just because i was already doing it for fun,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Java is ""too big to fail"" at this point; So is Javascript ... but at least WASM there's an ""out"" for most people (even though WASM is still tied to JS in nontrivial ways afaict)",,
8.14743E+16,jimpjorps#0001,2021-08-31,"even if you're sure you're going to be writing enterprise business logic in Java for the next 30 years, Java likes to add new language features a couple years after smaller languages make them trendy",,
2.75501E+17,Plane#0324,2021-08-31,"i don't know, things do change",,
2.75501E+17,Plane#0324,2021-08-31,it's just hard to predict how,,
2.75501E+17,Plane#0324,2021-08-31,is java a safe bet for 30 years?  idk,,
2.14881E+17,Moinate#6061,2021-08-31,no safer than fortran today,,
8.14743E+16,jimpjorps#0001,2021-08-31,"yeah, people can point to COBOL as evidence that it will be",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Well, especially now more than ever. Past 5 or-so years feel like there's been more changes than past 20 combined I think",,
8.14743E+16,jimpjorps#0001,2021-08-31,but then you could also point to Ada or Pascal or all the other languages that didn't survive even in legacy code,,
2.75501E+17,Plane#0324,2021-08-31,"i did have a friend who was born in the same year as me, who started learning COBOL in college even though everyone laughed about how outdated it was, and he got his career in COBOL and that's all he did",,
4.90866E+17,JOST GRANT#1516,2021-08-31,Ada didn't ever have that big of a deployment out of the military afaik; And both Ada & Pascal operated on commercial licenses (especially Ada) that was somewhat prohibitive to adoption,,
2.75501E+17,Plane#0324,2021-08-31,"i loved pascal, it was quite popular when i was little and it was my next step after assembly language",,
4.90866E+17,JOST GRANT#1516,2021-08-31,Plus Java probably has like 1000x as-much software written for it than Ada+Cobol+Fortran combined. lol,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Have you seen Nim? Didn't grow up with Pascal, but seemed very much in the same spirit",,
4.90866E+17,JOST GRANT#1516,2021-08-31,Like Pascal + Metaprogramming + Offside-rule syntax (and shorter keywords),,
4.90866E+17,JOST GRANT#1516,2021-08-31,I like Pascal-styled kewords / syntax WAY more than C tbh,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"For that matter,  even really like Ada's syntax over Java.",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"""We're in the worst-timeline"" and all that. lol",,
8.14743E+16,jimpjorps#0001,2021-08-31,yup,,
2.75501E+17,Plane#0324,2021-08-31,i can't really think of anything i like about java,,
2.75501E+17,Plane#0324,2021-08-31,i like parentheses though,,
2.75501E+17,Plane#0324,2021-08-31,parentheses are my friend,,
2.75501E+17,Plane#0324,2021-08-31,"(sorry rhombus, i like you too!)",,
4.90866E+17,JOST GRANT#1516,2021-08-31,I don't exactly hate the object-system... I guess?,,
2.75501E+17,Plane#0324,2021-08-31,oh i do,,
4.90866E+17,JOST GRANT#1516,2021-08-31,I REALLY REALLY don't get how you get from CLOS to that though,,
2.75501E+17,Plane#0324,2021-08-31,i think it encourages people to write things as though they're objects when they are conceptually unrelated to objects,,
2.75501E+17,Plane#0324,2021-08-31,"""everything is an object"" but most of it isn't object *oriented*",,
8.14743E+16,jimpjorps#0001,2021-08-31,it's so much text to express so little,,
2.75501E+17,Plane#0324,2021-08-31,the object system in java actively hurts efforts to do things in OO style,,
8.14743E+16,jimpjorps#0001,2021-08-31,just keywords and identifiers sprayed everywhere,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Or really how Guy Steele goes from Scheme to Java in-general. looool
Like the ""how to grow the language"" talk he gives seems almost ironic to me given to which language he's referring to...",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-31,java ee / spring framework,,
2.75501E+17,Plane#0324,2021-08-31,i have friends who actively enjoy writing java code and i'm very happy for them and i just stay over here doing something else :D,,
8.14743E+16,jimpjorps#0001,2021-08-31,"I've thought about trying clojure past a basic level but every time I see stuff about Java interop it's always like ""it's so easy to use your favorite Java libraries! just type these three paragraphs"" and I recoil instinctively",,
1.93202E+17,rocketnia#4517,2021-08-31,what kind of OO-style stuff does it make hard?,,
2.75501E+17,Plane#0324,2021-08-31,maybe i should try to express this another way:,,
2.75501E+17,Plane#0324,2021-08-31,"if everything is an object, then you don't have any special way to indicate to the reader of the code that you are writing something object-oriented",,
2.75501E+17,Plane#0324,2021-08-31,which most java isn't really,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-31,"at that level, it's kinda different from ""typical"" java code; most of problems are about thinking architecture and stuff. And it's also not really OOP -- majority of codebase is as procedural as it gets, wherein you either have logic classes without state, or dumb state classes without logic",,
2.75501E+17,Plane#0324,2021-08-31,"so the object system doesn't communicate to the reader ""this is an object"", it conveys ""this is how java code is written""",,
2.75501E+17,Plane#0324,2021-08-31,because you are forced into that no matter what kind of code you are writing,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"I'm always actively jealous of these people, tbh; I have a friend who does JS and is doing just-fine (better than me, for sure). lol",,
2.75501E+17,Plane#0324,2021-08-31,so java makes it difficult to communicate your intent,,
8.14743E+16,jimpjorps#0001,2021-08-31,the solution is to not program professionally and be free to just flit from language to language as your whims dictate,,
8.14743E+16,jimpjorps#0001,2021-08-31,this week I started trying out Forth,,
2.75501E+17,Plane#0324,2021-08-31,you can kind of do both,,
2.75501E+17,Plane#0324,2021-08-31,forth is neat!,,
2.75501E+17,Plane#0324,2021-08-31,i thought it would be really fun to be able to embed little bits of forth in the middle of racket code,,
2.75501E+17,Plane#0324,2021-08-31,"but then i think, the intersection of people who will be able to read this code is very small if i go in that direction",,
2.75501E+17,Plane#0324,2021-08-31,lol,,
2.75501E+17,Plane#0324,2021-08-31,have you looked at Factor at all?,,
2.75501E+17,Plane#0324,2021-08-31,it is very neat,,
2.75501E+17,Plane#0324,2021-08-31,<https://factorcode.org/>,,
8.14743E+16,jimpjorps#0001,2021-08-31,"yeah, I‚Äôve got it on my laptop but I haven‚Äôt done much more than play with the scratchpad",,
5.24323E+17,Ben Kenobi#5683,2021-08-31,I've seen a lot of codegolfs in Factor and it's pretty cool,,
4.66395E+17,oaktownsam#0815,2021-08-31,I've always though Java was Smalltalk but less dynamic and types,,
5.24323E+17,Ben Kenobi#5683,2021-08-31,"I don't see much Java code written like it's Smalltalk, unfortunately, but maybe i have very little Smalltalk experience. Smalltalk === message-passing to me. Most java code I see is glorified structs and struct-accessors and imperative logic.",,
2.66505E+17,notjack#9941,2021-08-31,I highly recommend reading Effective Java if you'd like to learn how to write Java in ways that don't feel gross in the usual Java ways,,
2.66505E+17,notjack#9941,2021-08-31,"Glorified structs can be replaced with records in Java now:
```java
// Defines a Point class with x() and y() methods
// Works like an immutable value
// Has sensible equals(), hashCode(), and toString()
public record Point(double x, double y) { }
```",,plusone (1)
4.90866E+17,JOST GRANT#1516,2021-08-31,"Effective Java has been on my ""to read"" list. Especially as-said, I've been looking more into Clojure",,
4.83487E+17,jest#6646,2021-08-31,the only thing thats keeping me from clojure is reliance of the jvm...,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-31,"if you don't generally like java, reading java books seems like an odd choice to me.. üòÖ",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-31,I don't think you need to be good with java to pick up clojure,,
4.66395E+17,oaktownsam#0815,2021-08-31,You can write Java message passing style too.  Just like most large code corpus there will probably be a lot of bad code.  Humans are involved after all.,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-08-31,you can write FP in java. I may or may not be doing it at work ü§î,,
2.75501E+17,Plane#0324,2021-08-31,"well, then you run into the problem of . . . what if there's stuff to learn that would make me like it more, but i'm avoiding learning that stuff?",,
2.75501E+17,Plane#0324,2021-08-31,but i do agree with you lol,,
2.75501E+17,Plane#0324,2021-08-31,there is enough stuff out there that i have already decided i do like that i can spend time on it :D,,
3.58051E+17,hazel#0271,2021-08-31,I would simply not write Java,,
2.75501E+17,Plane#0324,2021-08-31,that is what i do,,
3.58051E+17,hazel#0271,2021-08-31,but I might look at this book since I'm currently being forced into using it for my data structures class,,
2.75501E+17,Plane#0324,2021-08-31,ooh,,
3.58051E+17,hazel#0271,2021-08-31,pain.,,
3.58051E+17,hazel#0271,2021-08-31,at the very least this class Seems Better than the last Java class I was forced to take,,
2.75501E+17,Plane#0324,2021-08-31,"java wasn't really taught in schools when i was younger, since java was a pretty new language when i was the relevant age",,
3.58051E+17,hazel#0271,2021-08-31,"namely the professor was like ""I'm gonna give you the Swing GUI so you don't have to write it, you focus on writing the algorithm""",,
3.58051E+17,hazel#0271,2021-08-31,which is nice. since like,,
3.58051E+17,hazel#0271,2021-08-31,ew. Swing.,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"I mean, at somepoint when you're on a hosted-language you're probably going to have to dip into that ecosystem its hosted on.",,
2.75501E+17,Plane#0324,2021-08-31,that's actually why i've avoided clojure so far even though it looks pretty neat,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Racket is now ""lucky"" (been a lot of hard, progressive work to get there) but to base on a Scheme; So that gap isn't bad at all anymore.",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"I was one of the guys where the idea of writing C to contribute to Racket seemed ""icky"" now it's a LOT more approachable imo",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"There's been a dozen or-so lil attempt to get to build on LLVM , compile to C, compile to Scheme-which-in-turn-compiles-to-C, etc, etc, but it's obvious to me that they're more than happy enough to be a hosted platform",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"In-fact they have 2 1/2 hosts (Java & Javascript being the main, and CLR being official-ish)",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"It's ""worked"" for them obviously; I'm SURE they're the most on-paper successful Lisp -- in at least the past 20 years.",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Very arguably in-terms of absolute deployments, more successful than the LispM era... though always think these things are hard to compare because the lack of ubiquity of hardware back then",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"So if it ""is"" , don't think it's as big of a sell / accomplishment as so may put out",,
5.24323E+17,Ben Kenobi#5683,2021-08-31,"This was the worst. We used to use sml in the curriculum (old prof mentioned it; that‚Äôs when i decided to learn it). Makes the algos much clearer, and the concept of an ADT (type + operations).",,
5.24323E+17,Ben Kenobi#5683,2021-08-31,"Sam&techno, sure, you *can*. I‚Äôve done it. It‚Äôs just not the enterprise standard. So my code ends up way different than everyone elses",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"I've like not looked into Typed Racket ""at all"" (very-VERY little) -- can you define ADTs in it?",,
3.58051E+17,hazel#0271,2021-08-31,"no, but yes with macros",,
2.75501E+17,Plane#0324,2021-08-31,lexi had a blog post about it,,
2.75501E+17,Plane#0324,2021-08-31,<https://lexi-lambda.github.io/blog/2015/12/21/adts-in-typed-racket-with-macros/>,,
4.90866E+17,JOST GRANT#1516,2021-08-31,Just literally found it loool https://lexi-lambda.github.io/blog/2015/12/21/adts-in-typed-racket-with-macros/,,
3.58051E+17,hazel#0271,2021-08-31,ADTs are not a really fundamental concept tbh,,
4.90866E+17,JOST GRANT#1516,2021-08-31,Beat me to the post.,,
4.90866E+17,JOST GRANT#1516,2021-08-31,Just BARELY,,
3.58051E+17,hazel#0271,2021-08-31,so when you have metaprogramming...,,
2.75501E+17,Plane#0324,2021-08-31,yay i win,,
4.90866E+17,JOST GRANT#1516,2021-08-31,@hazel Well it's not fundamental in the context of a language that provides alternative means to the 'same' (or similar enough) end. I agree.,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"You always win Plane, you always win.",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"""Are you winning Plane?""",,
2.75501E+17,Plane#0324,2021-08-31,ideally we would both win,,
2.75501E+17,Plane#0324,2021-08-31,i think you also won,,
4.90866E+17,JOST GRANT#1516,2021-08-31,mflattWinking.gif,,
4.90866E+17,JOST GRANT#1516,2021-08-31,If you REALLY think about it ... winking is only one letter off from winning.,,
3.5323E+17,Alex Knauth#4895,2021-08-31,I also made this for myself: https://docs.racket-lang.org/typed-racket-datatype/index.html,,
2.75501E+17,Plane#0324,2021-08-31,oh that looks nice,,
1.56786E+17,williewillus#8490,2021-08-31,"I would use other lisps more if any of them were anywhere near as powerful as clojure is in terms of creating and manipulating data structures

What's effortless in clojure is verbose slogfest in pretty much every other lisp",,
1.56786E+17,williewillus#8490,2021-08-31,And also for a dynamic language clojure is definitely not slow,,
3.5323E+17,Alex Knauth#4895,2021-08-31,Other people also have their own versions like: https://github.com/pnwamk/datatype,,
2.66505E+17,notjack#9941,2021-08-31,"there are two fundamental components to ADTs:
- record/tuple types (any form of fixed-size immutable aggregation will do)
- sealed subtyping (a way for a type to say that it has exactly N subtypes and no others)",,
2.66505E+17,notjack#9941,2021-08-31,product types are a specific form of the first component and sum types are a specific form of the second component,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"I mean (assuming that's true & I don't have enough domain-expertise to know eitherway) is that due to a lack of focus , or ? I feel like 90% of what you get in Clojure you could get in a given Lisp with enough macro-magic",,
1.56786E+17,williewillus#8490,2021-08-31,"yeah, my statement was more one of design",,
1.56786E+17,williewillus#8490,2021-08-31,"it's a bit hard to explain but ""data and data manipulation"" pervades the design of clojure",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"I personally like the ""style"" of Clojure over most Lisps; Which could easily be stolen if a given individual in a community cared enough 'because of macros'. Like really like the shorthand for vectors, maps, etc [ , {",,
4.90866E+17,JOST GRANT#1516,2021-08-31,In Racket I know it's irrelevant ; But I like that it's enforced in someways in Clojure.,,
4.90866E+17,JOST GRANT#1516,2021-08-31,@williewillus Hasn't been touched in a few months but there's still the classic https://github.com/ruricolist/cloture,,
1.56786E+17,williewillus#8490,2021-08-31,nice,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Always find SBCL to be an ""interesting platform"" to host another Lisp on. Seems like it's done pretty often. Another notable example https://gitlab.com/mbabich/airship-scheme",,
4.90866E+17,JOST GRANT#1516,2021-08-31,_has been listening to Clojure podcasts lately; And the Cognicast really has had a bunch of Racketeers on it which I was a happy surprise._,,üíØ (1)
3.5323E+17,Alex Knauth#4895,2021-08-31,"One of the nice things about Clojure that I haven't seen in lisps much elsewhere is the idea of their built-in compound data literals being expression-based instead of datum-based. Their `[]` and `{}` vectors and maps are one example of that, and it just seems so simple to allow expressions inside them... it's just really weird that Racket and other lisps don't do that with everything",,
4.90866E+17,JOST GRANT#1516,2021-08-31,I think there's a lot of crossover inherently; Just in-that Scheme tends to lean into being more-functional than CL & Racket tends to say within the orbit of that tradition.,,
3.5323E+17,Alex Knauth#4895,2021-08-31,"Instead Racket has this ""self-quoting"" thing and I just hate it",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"_will hopefully ""brb"" going to finally eat ... now that his food is cold. loool_",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Bridging back to Racket again; lol There's now https://github.com/IGJoshua/farolero for Clojure , which is a CL-like condition-system ... anything similar for Racket?",,
4.90866E+17,JOST GRANT#1516,2021-08-31,Joked with the creator that all we need now is CLJOS,,
4.90866E+17,JOST GRANT#1516,2021-08-31,_is sad that swindle looks like it's starting to bitrot a bit_,,
4.66395E+17,oaktownsam#0815,2021-08-31,We had part of a thread talking about conditions on Slack yesterday (I think),,
4.66395E+17,oaktownsam#0815,2021-08-31,I think the short answer is that you could add conditions as a library but no one really has wanted it enough to write it.,,
4.66395E+17,oaktownsam#0815,2021-08-31,,https://cdn.discordapp.com/attachments/618895179343986688/882437733199511552/unknown.png,
4.66395E+17,oaktownsam#0815,2021-08-31,Getting a newer port of tinyclos to work better with Racket could be interesting.,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Lol, the timing. 
Honestly getting Racket to 'feel' more interactive I think is worthwhile overall.
Don't think a condition-system is ""needed"" for this but can `only` help?",,
4.90866E+17,JOST GRANT#1516,2021-08-31,Has there been any notable revisions to TinyCLOS? I just assumed it's been static / dead-in-the-water for years now.,,
4.66395E+17,oaktownsam#0815,2021-08-31,There was an R6RS port of Tiny IIRC.  But as the core of a language it doesn't need to change much.,,
4.66395E+17,oaktownsam#0815,2021-08-31,"The ""top level is hopeless"" and separating compile and run time are the biggest obstacles (that I see) to the interactivity I think people want when they talk about conditions and restarts.  Like it's hard to have the kind of coherency that Racket strives for with a Code/Run/Crash/Debug/Fix/Contninue cycle that something like Smalltalk has.",,
4.83487E+17,jest#6646,2021-08-31,anyone use pollen?,,
4.83487E+17,jest#6646,2021-08-31,"how do i evaluate expressions inside a html.pm file? 
```scheme
#lang pollen

@h1{Hello guys}

@(+ 1 2) ; should eval to 3 and then be put into the resulting html but thats not what happens
```",,
4.83487E+17,jest#6646,2021-08-31,OHH,,
4.83487E+17,jest#6646,2021-08-31,i have to number->string that,,
4.83487E+17,jest#6646,2021-08-31,"woops, ALRIGHT NEVRMIND",,
2.66505E+17,notjack#9941,2021-08-31,"this, so much. Quotation is just so... bad, honestly.",,üçâ (1)
4.90866E+17,JOST GRANT#1516,2021-08-31,"Wonder what a ""runtime-only Lisp"" would look like.",,
4.66395E+17,oaktownsam#0815,2021-08-31,"There was a toy scheme I played with once that was kinda like that.  Some more ""real"" schemes can be like that.  IIRC Gauche could be more like that",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Do macros even ""make sense"" in this context; If you're practically `only` (that's a very loaded only ... lol) runtime",,
4.66395E+17,oaktownsam#0815,2021-08-31,So like the compilation unit becomes the function (maybe?) Kind of like in smalltalk where it compiles methods (and doits) individually,,
4.90866E+17,JOST GRANT#1516,2021-08-31,"I'm a lot more ready to go ""image-based"" than most people and sounds like I'm also more ready to lean into the runtime ... because that seems really neat / near-ideal on paper.",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"_needs to look into Smalltalk more ... there's a lot of ideas* I appreciate but can't get over the ""weird"" syntax. (Sure they might say the samething about Lisp. lool)_",,
2.66505E+17,notjack#9941,2021-08-31,a system like racket but where there are no side effects at the module level and macros can be expanded in any order would be a really interesting basis for a reloadable language,,
4.66395E+17,oaktownsam#0815,2021-08-31,I should really finish the basic part of my Smalltalk lang in Racket.,,üëç (1)
4.66395E+17,oaktownsam#0815,2021-08-31,"it's not as dynamic as ""real"" Smalltalk, but it has the syntactic flavor and the rest.",,
4.90866E+17,JOST GRANT#1516,2021-08-31,"Lol, as-said for me that's the ""worst part"" of Smalltalk.  :^)",,
4.90866E+17,JOST GRANT#1516,2021-08-31,@notjack I'm interested... ;^),,
1.30231E+17,sarna#3904,2021-09-01,"have you heard of picolisp? it even had fexprs instead of macros, hehehe :meowsmile:",,
1.30231E+17,sarna#3904,2021-09-01,and as for a scheme with a condition system - I think MIT scheme has it,,
1.30231E+17,sarna#3904,2021-09-01,https://wildebeest1p.gnu.org/software/mit-scheme/documentation/stable/mit-scheme-ref/Error-System.html#Error-System,,
1.30231E+17,sarna#3904,2021-09-01,"yup, conditions and restarts",,
1.30231E+17,sarna#3904,2021-09-01,"it's very buggy though, I was very disappointed when I tried it out",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Yeah, just found it; MIT Scheme is also Image-based iirc. Seems a lot more ""traditionally LISP"" than many Schemes.",,
4.90866E+17,JOST GRANT#1516,2021-09-01,Guess maybe it's a statement of the time it was developed in,,
1.30231E+17,sarna#3904,2021-09-01,"tbh if it was better implemented I'd use it, but.. you know how things are :mew:",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"_can't believe GNU still uses ""Savannah"" ... looking at the page for MIT Scheme now_",,
4.90866E+17,JOST GRANT#1516,2021-09-01,Still relatively maintained; Looks like even has partial support for R7RS!,,
4.90866E+17,JOST GRANT#1516,2021-09-01,Kinda shocked,,
1.30231E+17,sarna#3904,2021-09-01,"I mean it's not abandoned, it's just hasn't been given enough care",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Performance seems about on-par with Guile3; Wonder how ""interactive""-friendly Guile is",,
4.90866E+17,JOST GRANT#1516,2021-09-01,Or really which Scheme in-general has the closet SBCL in-instance live-redefinition workflow*,,
1.30231E+17,sarna#3904,2021-09-01,in my experience Guile is pretty standard Scheme-wise (the top level is not hopeless :meowsmile: ),,
1.30231E+17,sarna#3904,2021-09-01,"it has delimited continuations, I don't know any other Scheme that has them, besides Racket",,
1.30231E+17,sarna#3904,2021-09-01,"I heard MIT is the one, but yeah",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"I mean, I guess some* Schemes get around this at least to some-degree by shipping a first-class interpreter; Know Gambit & I think Chez does this?",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"With Gambit I was kinda shocked how explicit that divide is; You have two separate ""top-level"" (loool) directories -- for gsc & gsi , gambit's compiler and interpreter respectively.",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"(( Also, gonna try for bed ... can't believe it's already 1:30am; The days I'm off always seem to FLY by. )) o/",,üëã (1)
1.30231E+17,sarna#3904,2021-09-01,also gsc clashes with ghostscript :meowwarp:,,
1.30231E+17,sarna#3904,2021-09-01,wonder if one could pull a sneaky and made racket like that,,
1.30231E+17,sarna#3904,2021-09-01,"allow module redefinitions, keep state in the repl",,
2.14881E+17,Moinate#6061,2021-09-01,this is explicity an anti-goal in the racket design (somebody can find you a link if it's important),,
1.30231E+17,sarna#3904,2021-09-01,I know,,
1.30231E+17,sarna#3904,2021-09-01,I wasn't saying it'd be a good idea,,
2.14881E+17,Moinate#6061,2021-09-01,aha lol,,
2.14881E+17,Moinate#6061,2021-09-01,missed the joke,,
1.30231E+17,sarna#3904,2021-09-01,it wasn't a good one haha,,
4.83487E+17,jest#6646,2021-09-01,what are the #langs for  all the other bsl levels?,,
4.83487E+17,jest#6646,2021-09-01,,https://cdn.discordapp.com/attachments/618895179343986688/882677984216092692/unknown.png,
4.83487E+17,jest#6646,2021-09-01,interestingly `#lang htdp/bsl` shows hover text of whether you're in the interactions or defintions pane,,
2.64024E+17,Eutro#0016,2021-09-01,BSL has `call/cc` right???,,
3.5323E+17,Alex Knauth#4895,2021-09-01,I don't think so...,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Yeah, in my .bashrc I added the line ""export GERBIL_GSC=/opt/_prog/gambit/bin/gsc-script"" which is a workaround for this.",,
3.5323E+17,Alex Knauth#4895,2021-09-01,"For one thing, `call/cc` is a higher-order function and the student languages don't have any higher-order functions until they get to ISL",,
4.83487E+17,jest#6646,2021-09-01,lemmie ask the slack channnel,,
4.83487E+17,jest#6646,2021-09-01,also is `#lang htdp/bsl` htdp1 or htdp2 ?,,
3.5323E+17,Alex Knauth#4895,2021-09-01,"`htdp/bsl`, `htdp/bsl+`, `htdp/isl`, `htdp/isl+`, `htdp/asl`",,
3.5323E+17,Alex Knauth#4895,2021-09-01,and they are htdp 2nd edition,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"I'm fairly interested in games and think it's a ""necessary evil"" in some ways... when you don't have this, you end up doing a lot of (often messy) work to sorta-kinda get something similar.",,
4.83487E+17,jest#6646,2021-09-01,"sweet! think thats what i needed , thanks :9",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"But I also define first-class ""conversational programming"" as an essential feature of a Lisp; so that probably biases my value-statement here. lol",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"I'd like a link! :^)

Always enjoy hearing design rationales.",,
6.46114E+17,samth#3420,2021-09-01,@JOST GRANT it's basically that the top-level is hopeless -- interactive redefinition can't be given a consistent semantics,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"_really needs to take the effort to understand the ""top-level is hopeless"" argument more. Think I get the gist and don't think I agree ... but also think it's because I don't fully get the rationale. lool_",,
6.46114E+17,samth#3420,2021-09-01,"The reason the top-level is hopeless is that when you macro-expand some expression, you have to _already_ know what references in that expression are reference to macros. But if you allow subsequent things to define macros that you might have referred to (either through re-definition or because you referenced something that was not yet defined) then you _can't know_ whether something is a macro, because that decision is made in the future.",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"I wonder how does CL handle this; Just ""not care"" ? lol",,
6.46114E+17,samth#3420,2021-09-01,"yes, not caring that the resulting semantics doesn't make sense is the usual approach",,
6.46114E+17,samth#3420,2021-09-01,that's of course what the Racket REPL is like too,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"To that extent? I've still been struggling to find the edges of ""how interactive is Racket"" compared to SBCL and I'm certainly biased in a way where it (SBCL) is the gold-standard for me -- and I feel like the workflow is different enough where I'm not sure how-much is due to tooling differences and how-much is actual architecture.  :^P",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Like I'm not sure why something like https://github.com/tonyg/racket-reloadable exists if ""dynamic-rerequire"" is a thing.",,
6.46114E+17,samth#3420,2021-09-01,"Here's an example of the semantics not making sense:
```
[samth@huor:~/sw/plt (master) plt] r
Welcome to Racket v8.2.0.7 [cs].
> (define (f x) (g x))
> (define/contract (g x) (-> any/c any/c) x)
> (f 1)
; g: undefined;
;  cannot reference an identifier before its definition
;   in module: top-level
; [,bt for context]
```",,"meowwarp (1),üá∑ (1)"
2.64024E+17,Eutro#0016,2021-09-01,but the semantics don't make any sense!,,
2.64024E+17,Eutro#0016,2021-09-01,this is ridiculous!,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"I mean, I guess I get the point; But I also guess it depends on how much value one puts into meaningful expansions? Idk.",,
4.62028E+17,StephenD#5938,2021-09-01,"This comes up often enough that I‚Äôve made a wiki page for it https://github.com/racket/racket/wiki/The-toplevel-is-hopeless

It also has links to more info",,üíØ (1)
4.90866E+17,JOST GRANT#1516,2021-09-01,"I was listening to one of those ""Cognicast Episodes"" that MFlatt was on and heard him throwing out an idea for a macro-expander that went `all the way down` to machine-code -- wonder if at a certain point you could just go to this model and have a smart-enough hot-reload where it's effectively a nonissue (or at least a ""different issue"") ? lol",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Because it seems like ""the"" issue is trying to distinctly and meaningfully separate runtime and compiletime",,
4.90866E+17,JOST GRANT#1516,2021-09-01,@StephenD TYVM!,,
4.90866E+17,JOST GRANT#1516,2021-09-01,Thank linked gist -- loool have some more reading to do,,
8.14743E+16,jimpjorps#0001,2021-09-01,,https://cdn.discordapp.com/attachments/618895179343986688/882687513548968026/ARleXBi9pc4pAAAAAElFTkSuQmCC.png,"üëç (2),üòÇ (1)"
4.62028E+17,StephenD#5938,2021-09-01,Who dat?,,
8.14743E+16,jimpjorps#0001,2021-09-01,https://knowyourmeme.com/memes/you-cant-cut-back-on-funding-you-will-regret-this,,
6.46114E+17,samth#3420,2021-09-01,"@JOST GRANT yes, indeed separating compile time from runtime is the problem/goal, but it's important. you want compiling your program ahead of time not to change its behavior",,
4.66395E+17,oaktownsam#0815,2021-09-01,I think one of the problems with resolving toplevel hopelessness (if you don't go the CL route) is that the language would have to introduce a more complicated semantics that would be harder to implement and harder to reason about.,,
4.3158E+17,troubled#3402,2021-09-01,what's the CL route?,,
4.66395E+17,oaktownsam#0815,2021-09-01,Stated earlier: https://discord.com/channels/571040468092321801/618895179343986688/882683318687129610,,
4.3158E+17,troubled#3402,2021-09-01,"o üòê
thanks",,
1.56786E+17,williewillus#8490,2021-09-01,Yeah the non interactivity of racket is my least favorite part of it by far,,
1.30231E+17,sarna#3904,2021-09-01,the one thing I liked less than that was guile's repl in emacs hanging after I sent too many expressions to it (had to reset it like every 20 minutes),,
1.30231E+17,sarna#3904,2021-09-01,I think I don't like non-mainstream languages anymore :mew: stuff glitching out in unpredictable ways is the exact opposite of fun,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"What's your definition of ""non-mainstream"" languages? lol Racket & Scheme (well Lisp) generally would fall into this for most people",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Even Clojure, and that's probably by-far the ""most mainstream Lisp"" at this point",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"I'm at a point; Where I really don't care about other Schemes besides Racket & Gambit (and maybe 'Gerbil' if that ""counts"") -- there's just way-way-way too many out there",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Well ""not care"" is a bit much; Not interested in using personally , I think is more accurate. Interested in them in-terms of implementation / architecture details as I've just started poking my head here",,
3.53953E+17,zardoz#4281,2021-09-01,was this geiser or smth,,
1.30231E+17,sarna#3904,2021-09-01,Racket is not mainstream but it has exceptional tooling for such unpopular language,,
1.30231E+17,sarna#3904,2021-09-01,"yeah, specifically the doom emacs scheme module with +guile",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Well, think that's fair; But I guess most non-mainstream languages don't have anything close to the amount of foothold in education.",,
3.53953E+17,zardoz#4281,2021-09-01,i havent bothered to use doom's in-built packager with geiser and use striaght in init.el,,
1.30231E+17,sarna#3904,2021-09-01,pascal in some countries? haha,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"I've heard, yeah; Never seen in personally in Midwest US",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-01,"yeah I had pascal in school ~12 years ago, but my impression was choice of language mostly had to do with what the current IT teacher knew at the time",,
3.53953E+17,zardoz#4281,2021-09-01,i sort of hate the idea of being trained python purely because You Dont Want To Be Made Useless Innit Man,,
3.53953E+17,zardoz#4281,2021-09-01,i think its a good rule of thumb the first language you learn/part of education will be an awkward language or one you grow to hate,,
2.34164E+17,python#3213,2021-09-01,the first language i learned was logo,,
2.34164E+17,python#3213,2021-09-01,so yes,,
2.34164E+17,python#3213,2021-09-01,awkward,,
3.53953E+17,zardoz#4281,2021-09-01,logo?,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"It's a ""lisp"" aimed at drawing things on-screen",,
4.90866E+17,JOST GRANT#1516,2021-09-01,Kinda like processing for Java,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Or like Racket's newer ""sketching"" lib",,
3.53953E+17,zardoz#4281,2021-09-01,processing,,
2.34164E+17,python#3213,2021-09-01,it's a very old language for just moving a pen around on screen,,
3.53953E+17,zardoz#4281,2021-09-01,i remember installing that for windows and it never ran,,
2.34164E+17,python#3213,2021-09-01,the pen is also called a turtle,,
2.34164E+17,python#3213,2021-09-01,and it's shaped like a little triangle,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Well maybe it's not ""aimed"" at drawing things on screen, but Education and ""Turtle Graphics"" was the biggest usecase thereof afaict*",,
2.34164E+17,python#3213,2021-09-01,the version i learned with is ridiculously complex,,
2.34164E+17,python#3213,2021-09-01,some insane library features,,
5.24323E+17,Ben Kenobi#5683,2021-09-01,(I believe the original logo and turtle were designed to move physical drawing components shaped like turtles; there was also work on other fun stuff. More in the HOPL4 video on logo.),,
2.34164E+17,python#3213,2021-09-01,makes sense,,
2.34164E+17,python#3213,2021-09-01,the first LOGO was from the 60s i think,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"I still think this ""style"" of teaching is radically underutilized today & hope to see more of it in the Racket community. Think we talked about this the other day (... maybe even yesterday?) about how I think something like pict3d and/or bindings Racket bindings to Godot I see as really promising introductions into programming in-general",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Pict2D / Metapict / Sketching are all really cool as-well ; And are first-class enough where I'm kinda shocked there's no ""making pics in racket"" book or something*",,
5.24323E+17,Ben Kenobi#5683,2021-09-01,"Doesn't htdp (or one of the other books) have a lot of ""making picts in racket"" lol",,
3.53953E+17,zardoz#4281,2021-09-01,i think it does but i think its sprites or smth,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Yeah, HTDP2e does a fair bit; But I'm more thinking a full course based around ""creative coding"".",,
3.53953E+17,zardoz#4281,2021-09-01,have they already made a thing to compile to supercollider yet,,
3.53953E+17,zardoz#4281,2021-09-01,sonic pi is the only one i know of bar overtone which is a clojure thing and i sort of dont like sonic pi because its sort of awkward,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Not Racket specific, but uses Chez https://github.com/tommaisey/aeon",,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Only thing I'm aware of in the Schemeverse that's not tied to a visual live-coding interface like Praxis , Fluxus, etc",,
3.53953E+17,zardoz#4281,2021-09-01,ok im definitely going to try this,,
3.53953E+17,zardoz#4281,2021-09-01,"yeah sonic pi felt very ""locked down"" or smth",,
4.90866E+17,JOST GRANT#1516,2021-09-01,Think Extempore is based on Scheme too -- but uses their own weird DSL iirc?,,
3.53953E+17,zardoz#4281,2021-09-01,"also i haven't heard of praxis or fluxus, how are they to use",,
4.90866E+17,JOST GRANT#1516,2021-09-01,Pretty much outdated /  dead sadly. Praxis & Fluxus isn't strictly for Audio though -- there's a visual element for live-coding,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Praxis actually sorta-kinda got relaunched but moved away from Lisp (/Scheme) as supported lang and now it's 'just' Java via ""Praxis.Live""",,
4.90866E+17,JOST GRANT#1516,2021-09-01,Example of what you could do https://www.youtube.com/watch?v=v7E6-n3M_bc,,
4.90866E+17,JOST GRANT#1516,2021-09-01,"Actually, better video https://www.youtube.com/watch?v=2O5DJTOy6EA",,
2.75501E+17,Plane#0324,2021-09-01,wow!  i thought they mostly stopped teaching pascal at least 20 years ago,,
6.46114E+17,samth#3420,2021-09-01,"Sonic pi can feel beginner oriented but I've seen Sam perform using it, so you can do just about anything",,
4.83487E+17,jest#6646,2021-09-01,how do i turn: `'(* 6 (- 2 (- 10 5)) (* 9 (* 9 10)) 8 (* 4 2))` into a string? the entire list,,
4.83487E+17,jest#6646,2021-09-01,"nevermind , its `(~a x)`",,
4.83487E+17,jest#6646,2021-09-01,"how do I call eval in a function:
```scheme
(define (fn)
  (eval '(* 6 (- 2 (- 10 5)) (* 9 (* 9 10)) 8 (* 4 2)))
;*: unbound identifier;
 ;also, no #%app syntax transformer is bound in: *
```
in an environment where * is defined?",,
2.66505E+17,notjack#9941,2021-09-01,"You have to create a namespace, require modules into the namespace, then pass the namespace to `eval`. But you usually don't want to use `eval` like that. What are you trying to do?",,
4.83487E+17,jest#6646,2021-09-01,thanks i got it now,,
4.83487E+17,jest#6646,2021-09-01,this is for just randomly generating a sequence of arithmetic expressions for beginners to practice evaluation order,,
2.66505E+17,notjack#9941,2021-09-01,"ahh, neat",,
6.46114E+17,samth#3420,2021-09-02,Here's another good example of the top-level being hopeless: https://www.reddit.com/r/Racket/comments/pghtfu/q_map_function_behaving_peculiarly/,,
5.34547E+17,nullchinchilla#3746,2021-09-02,"Is there a way to make `racket` ""preserve stacktraces"" the way DrRacket can?",,
5.34547E+17,nullchinchilla#3746,2021-09-02,"`racket` often prints exceptions with very misleading stacktraces, and this has led to very confusing debugging",,
2.14881E+17,Moinate#6061,2021-09-02,Are you using errortrace? https://docs.racket-lang.org/errortrace/quick-instructions.html,,
4.83487E+17,jest#6646,2021-09-02,"so racket automatically backs up files, on windows i think they were called `something.rkt.bak`, on linux are they called `something.rkt~` ? seems like a lot of those are bloating my directory",,
4.83487E+17,jest#6646,2021-09-02,:s i wish it was disabled by default,,
6.46114E+17,samth#3420,2021-09-02,@nullchinchilla for better stack traces you can do one of two things: (1) use errortrace (2) set `compile-context-preservation-enabled` to `#f`,,
2.14881E+17,Moinate#6061,2021-09-02,"if they ever saved your butt you'd be glad they were on.
it's not just beginners, even hard-core emacs users get automatic backups

if the size of the files is an issue, put assets in external files and load them.",,
4.83487E+17,jest#6646,2021-09-02,"i dont mind if they're backed up in some hidden temp directory but in the same directory i dont like the bloat and confusion... on windows it isnt so bad because the file extension is entirely different but on  linux `.rkt~` can be ez to miss in way? which makes me wonder, if you edit the backup file, does the backupfile itself create a backup file?",,
4.62028E+17,StephenD#5938,2021-09-02,FWIW if you do `raco pkg new` it generates the gitignore,,
4.83487E+17,jest#6646,2021-09-02,how small is racket compared to nodejs? has anyone used it for a scripting language for their appplication written in some other language?,,
4.83487E+17,jest#6646,2021-09-02,"minimal racket CS is 27MB, BC is  8MB, and nodejs is 21MB",,
5.24323E+17,Ben Kenobi#5683,2021-09-02,"I remember someone mentioning a lang that can import python code; anyone recall what it was? Searching docs didnt get me anywhere, and google was hopeless",,
8.14743E+16,jimpjorps#0001,2021-09-02,https://github.com/Aeva/snake-oil,,
8.14743E+16,jimpjorps#0001,2021-09-02,this is the closest I can find in the chat history here,,plusone (2)
5.24323E+17,Ben Kenobi#5683,2021-09-02,"Ah, that sounds right... didnt think to search for snake",,
4.90866E+17,JOST GRANT#1516,2021-09-02,That reminded me https://github.com/pedropramos/PyonR existed at somepoint.,,
4.90866E+17,JOST GRANT#1516,2021-09-02,There was a lot of Python incorporation ; I guess that makes sense in an educational context. Just remembered https://github.com/pycket/pycket was a thing as-well,,
4.90866E+17,JOST GRANT#1516,2021-09-02,"Is there a ""proper Python FFI"" for Racket out there? Think in the context of Rhombus, it might be pretty useful to lure newcomers.",,
4.90866E+17,JOST GRANT#1516,2021-09-02,"Gambit has one via https://github.com/feeley/pyffi ; Seems ""easier than ever"" due to being able to map to C in someway via CPython",,
2.66505E+17,notjack#9941,2021-09-02,`snake-oil` is the most robust python ffi so far I think,,
4.90866E+17,JOST GRANT#1516,2021-09-02,Wish I had a personal usecase to test it out; Maybe I'll try to call the streamdeck python api from it or something :^P,,
4.90866E+17,JOST GRANT#1516,2021-09-02,"Unrelated, but keep seeing Apache 2.x licensed stuff in the ""realm of Racket""; Is there anywhere that has a synopsis of the differences between it and the MIT licenses... seems like it's mostly trademark stuff?",,
4.66395E+17,oaktownsam#0815,2021-09-02,https://choosealicense.com/licenses/,,
4.66395E+17,oaktownsam#0815,2021-09-02,"I thought I saw a better comparison site a few months back, but this one should do.",,
4.90866E+17,JOST GRANT#1516,2021-09-02,"So yeah, looks like Trademark & also Patent differences",,
1.93202E+17,rocketnia#4517,2021-09-02,"the patent stuff is why I use it, just in case",,
4.62028E+17,StephenD#5938,2021-09-03,"> Alex Hars√°nyi  12:03 AM
> A while ago I wrote a blog post about optimizing a program that ran in 8 seconds on average to one that ran in 33 milliseconds on average -- there is a summary of the techniques used at the beginning of the post, which you may find useful:
https://alex-hhh.github.io/2019/08/timezone-lookup.html
(copied from slack and added to #resources )",,üëç (1)
1.84841E+17,Aperiodic Orbit#8099,2021-09-04,"Hey my emacs-fu isn't so great, does anyone know how I could modify this such that instead of opening the repl in a new frame* it opens it in a new window?",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-04,"(add-to-list 'display-buffer-alist
         '(""\\`\\*Racket REPL""
           (display-buffer-reuse-window
        display-buffer-pop-up-frame)
           (reusable-frames . 0)
           (inhibit-same-window . t)))`",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-04,"\**it drives me insane that emacs refers to whats called a window everywhere else a ""frame"" and the thing that makes sense to call a frame is called a window",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-04,"oh... just change ""display-buffer-pop-up-frame"" to ""display-buffer-pop-up-window"". Well if anyone else was curious there's the answer",,plusone (1)
2.64024E+17,Eutro#0016,2021-09-04,"yeah that's just with all Emacs terminology: kill and yank instead of cut and paste, etc.",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-04,its all a tad idiosyncratic for sure but i get mixed up about windows and frames specifically,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-04,kill yank barf slurp... what types of emotions were they going through while developing emacs,,
5.24323E+17,Ben Kenobi#5683,2021-09-04,"Yank is copy in vi, and put is paste. So yank being paste is really in poor taste üòõ",,
4.62028E+17,StephenD#5938,2021-09-05,I think these terms in Emacs & vi predate the equivalent terms in msdos,,"plusone (2),‚è´ (2)"
4.62028E+17,StephenD#5938,2021-09-05,"Racketeers, we have a small surplus of stickers, so the Syntax Parse Bee has been extended on a ‚Äòwhile stocks last‚Äô basis. It doesn‚Äôt matter if you are an experienced composer of macros or if you have never written a macro -  you can still make a contribution to the ‚ÄòBee.  #syntax-parse-example on Slack

https://github.com/syntax-objects/Summer2021/blob/master/ANNOUNCEMENT.md",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-05,does that one no starch book on racket ever go on sale? $40 is a bit pricey for me but it looks appealing,,
8.14743E+16,jimpjorps#0001,2021-09-05,I think they do end-of-the-year sales sometimes,,
4.90866E+17,JOST GRANT#1516,2021-09-05,@Aperiodic Orbit I nabbed for a little over 30usd  a month ago on Amazon,,
4.90866E+17,JOST GRANT#1516,2021-09-05,"For how novel it is (not many non-Racket-team printed books out there) think I would of bought it for 40usd though, honestly; Like that wasn't a huge deciding factor -- just happened to see it when it was on-sale I guess. lol",,
4.90866E+17,JOST GRANT#1516,2021-09-05,"There was evidently a podcast episode about the book, this year (that I just found) https://www.functionalgeekery.com/episode-133-james-stelly/",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-05,"that's a good point about the novelty haha. I ended up deciding that for now instead of learning ""by the book"" I'll just do the ol autodidact method",,
4.90866E+17,JOST GRANT#1516,2021-09-05,"Racket in-general has GREAT (probably ""best out there"" tbh) introductory material; So there's a ton of books out there / online too to get one up to date",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-06,"Oh it absolutely does! I guess for me though once I get past basic syntax and an overview of features my ADD makes it hard to stay totally focused on learning in a linear way when it comes to programming languages, so I decided to just rewrite a 1d cellular automata generator I made in clojure a while ago and see where that takes me lol",,
6.90127E+17,hnbeck#2106,2021-09-06,"As a Smalltalk and Prolog programmer I'm used to languages which are not mainstream in the commercial domain. But now I'm facing the necessarity to decide using Racket for a bigger (graphical) project or not (its about geometry processing and visualisation, OpenDrive/OpenScenario are keywords).  Many aspects of Racket are still not clear to me. Racket seems really mature language. The IDE looks fine, important libs are available. Big plus for me is the maximum support of miniKanren . On the other side I could not find any hints about bigger projects done in Racket - either opensource or commercial. Even in Smalltalk and Prolog I know about big applications done in this languages. Distribution or common use may not the main criteria to decide. One criteria is the intention. Racket - as far as I've read up to now - is intendended more as tool for language experts than for application creators . But this impression maybe wrong. Speed is another thing. I need not full optimized C speed, but factor 10 slower would be a bad thing. Because of lacking real-world examples I cannot estimate the ""efftive"" speed of Racket. And I know, speed is relative, in Smalltalk you can do crazy things with a good VM. Then distribution is another thing, but Racket could create an single executable, so thats fine. Having said this, I would like to ask the people having much more experience with Racket (and probably coding) as myself: would you use Racket for a 1-2 year project?",,
2.81975E+17,Aeva#1234,2021-09-06,`would you use Racket for a 1-2 year project` yes.  I'm using it (and c++) to build a cad program,,
2.81975E+17,Aeva#1234,2021-09-06,"I would say I'm at best an intermediate racket user.  I think anyone more experienced with racket than I is likely to answer something along the lines of ""absolutely"" to your question, or they wouldn't have invested the time in it",,
2.81975E+17,Aeva#1234,2021-09-06,"things i like about racket: it is squishy, reasonably speedy, has a great community, and is very easy to interface with other languages when you need it",,"plusone (2),üëç (2)"
4.66395E+17,oaktownsam#0815,2021-09-06,"If you are concerned about ""big"" programs in Racket.  Racket (and DrRacket) are pretty big programs mostly written in Racket.",,üëç (1)
5.39603E+17,spacey üåå#7238,2021-09-06,What topics does the book cover?,,
4.62028E+17,StephenD#5938,2021-09-06,"TOC is at https://nostarch.com/racket-programming-fun-way
but I have copy so I can answer questions",,
4.90866E+17,JOST GRANT#1516,2021-09-06,"It's introductory ; The tone feels a bit more casual, less academic than HTDP2e. But as-said it's more-so a novelty because it's a book that doesn't (afaict) come out of the Racket core-team",,
4.90866E+17,JOST GRANT#1516,2021-09-06,"Racket is by-far the most batteries-included Scheme implementation I'm aware of; So much-so it's the only notable Scheme (maybe even Lisp?) I can think of that ships a gui system. Dr.Racket was developed in-parallel to it (the gui) and I think it's pretty feature-complete / stable. So while it's not been a/the primary focus historically, I think Racket is pretty well suited for application-development compared to it's competition in this space. 

Also performance wise, Racket CS is pretty fast; Benchmarks are never perfect, but consistently Racket is in the top 3-5 slots according to https://ecraven.github.io/r7rs-benchmarks/. And AFAICT ChezScheme is about as-fast as SBCL, which is in the same ballpark as Java. So I'd say a reasonable estimate is about 2/3rds the speed of Java. Someone please correct me if I'm way off... assuming I'm ""close enough"" though; Think this performance is reasonable for **most** domains.",,üëç (1)
7.14999E+17,gingerydoo#7461,2021-09-06,"Some updates on package management research on this end.

I got in touch with GNU Mes's developer and asked for clarification on how I can replace Guile/Guix with Racket/Xiden starting from a known seed.

They concur with Guix's developers that this will be difficult, but the benefit is that Racket would be the default extension language for an auditable initial state for a GNU/Linux distro.

For now I'm using Guix System to declare an OS with Racket installed. I'm roughly in the position where other Racketeers are in terms of Guix integration, but that's not the direction I hoped to go.

If any of you are interested in helping me work on a GNU/Linux distro for Racket programmers, starting from Mes, please let me know. I should be able to scrape together necessary project knowledge and define a scope of work in the next few weeks, but I lack some requisite skills.",,üî• (1)
4.90866E+17,JOST GRANT#1516,2021-09-06,"HŒõX-OS , incoming? :^)))
I'm actually excited to hear about this; but* I'm having a hard-time understanding the role of GNU Mes here. Just for bootstraping?",,
7.14999E+17,gingerydoo#7461,2021-09-06,"Yes, in terms of  https://github.com/oriansj/stage0

My understanding is that Mes uses stage0 to give Guix a known, auditable binary ""seed"" that allows one to prove that an operating system was not tampered with.

Mes helped create a way to shrink Guix's binary seed and derive more advanced functionality without losing trust.",,
4.90866E+17,JOST GRANT#1516,2021-09-06,Interesting; Really something I need to look into more -- I dug a fair-bit into GuixSD like literally 7+ years ago now. When they were still using 'slim' as their login-manager lool,,
4.90866E+17,JOST GRANT#1516,2021-09-06,Have a machine in the basement I was going to try to move to NixOS; Might be worth moving to Guix and poke around again,,
4.90866E+17,JOST GRANT#1516,2021-09-06,Would a theoretical Xiden distro be based off / interop with Guix* in someway or would it just bootstrap for a bit?,,
7.14999E+17,gingerydoo#7461,2021-09-06,"I think Phillip McGrath and Christopher Webber know more about Racket/Guix interoperability atm. If I wanted Xiden to interop with Guix on a Guix System, I'd just talk to them and their collaborators about that.

My hope is a Racket distro would trivially interop with Guix starting with a reader extension. Xiden would just make that extension available.",,
7.14999E+17,gingerydoo#7461,2021-09-06,"Put another way, it looks like it would be easier to control Guix with Racket than the other way around.",,
7.14999E+17,gingerydoo#7461,2021-09-06,"> HŒõX-OS , incoming? :^)))

What is that?",,
4.90866E+17,JOST GRANT#1516,2021-09-06,Stupid name I came up with for a theoretical Xiden based NixOS-ish distro. loool,,salute (1)
5.39603E+17,spacey üåå#7238,2021-09-06,"Ah. Well not all the good stuff has to come from the core team, right?",,
4.90866E+17,JOST GRANT#1516,2021-09-06,"Well, typically this level of ""introductory material"" does; But Racket also has a high-number of contributors that are professors / teachers  compared to other communities.",,
4.90866E+17,JOST GRANT#1516,2021-09-06,"But yeah, stuff like ""Fear Of Macros"" & ""Beautiful Racket"" aren't core-team but VERY NICE texts",,
4.90866E+17,JOST GRANT#1516,2021-09-06,But wouldn't say those are few new-programmers,,
4.90866E+17,JOST GRANT#1516,2021-09-06,"Also I guess it's a valuing of ""new perspectives"" to some degree in a given domain; Really I think I care more about ""new mediums"" for introductory materials than 'yet another' book... like there's a reason something like CodeSpells is so interesting to me",,coolspells (1)
4.90866E+17,JOST GRANT#1516,2021-09-06,"But I'm also very ""learn by doing"" by-nature over 'really grokking high-level concepts'. So I could very easily `just be biased`. lool",,
4.83487E+17,jest#6646,2021-09-06,"so i installed racket on my vps server via the `.sh` file from the website and it installed it but when i run `racket --version` , it says racket command is not found",,
4.83487E+17,jest#6646,2021-09-06,how do i refresh my bash path again?,,
4.83487E+17,jest#6646,2021-09-06,i should mention im using the root user because i was too lazy to add a new account lol,,
4.83487E+17,jest#6646,2021-09-06,it does exist in /usr/racket/ though,,
4.83487E+17,jest#6646,2021-09-06,this is on debian,,
4.83487E+17,jest#6646,2021-09-06,think it should have went under /usr/local/racket instead ...,,
4.90866E+17,JOST GRANT#1516,2021-09-06,"""export PATH=$PATH:/usr/local/racket/current/bin"" or whereever it's installed",,
4.90866E+17,JOST GRANT#1516,2021-09-06,you're basically just wanting to add that bin directory to your path,,
4.90866E+17,JOST GRANT#1516,2021-09-06,mine is in /usr/local/prog/racket/current/bin for example,,
4.90866E+17,JOST GRANT#1516,2021-09-06,And I'm sure it's  not the 'proper way' but once you drop that in your .bashrc you can just manually reload 'bash' and it should automagically work*.,,
4.83487E+17,jest#6646,2021-09-06,"ahh, i had to run the installer.sh with ""yes"" to unix installation path stuff",,
4.83487E+17,jest#6646,2021-09-06,wish that was the default :x,,
4.83487E+17,jest#6646,2021-09-06,kk it works now,,üíØ (1)
4.90866E+17,JOST GRANT#1516,2021-09-06,"I kinda forgot the installer.sh was a thing tbh; lol
Pretty used to grabbing the builtpkg tgz at this point -- namely so I can easily past that prefix location",,
4.90866E+17,JOST GRANT#1516,2021-09-06,"I try to put ""all"" my non-standard proglang stuff (ie: not distro installed) to the afromentioned /usr/local/prog",,
4.66395E+17,oaktownsam#0815,2021-09-06,"I normally do a unix style install into `/usr/local/stow/racket-$VERSION` and then stow makes the symlinks into the appropriate `/usr/local` directories

https://www.gnu.org/software/stow/",,
4.66395E+17,oaktownsam#0815,2021-09-06,"Then when a new racket comes along I just install in a new stow directory, unstow the old version and stow the new version.",,
4.66395E+17,oaktownsam#0815,2021-09-06,I still have to deal with racket packages and stale compiled directories though.  One day we'll work that one out üòõ,,
2.74358E+17,jesscxc#4846,2021-09-06,"this is a huge approach of the core devs of CodeSpells, too; Stephen and Lindsey's most recent book (""Don't Teach Coding: Until You Read This Book"") is about how language is best learned through immersion",,
2.74358E+17,jesscxc#4846,2021-09-06,"they're actually releasing a little tutorial game soon, to help teach how to program in CodeSpells üëÄ",,
2.74358E+17,jesscxc#4846,2021-09-06,http://nexus.codespells.org,,
2.74358E+17,jesscxc#4846,2021-09-06,"it's an interesting story, too üò≥",,
4.90866E+17,JOST GRANT#1516,2021-09-06,"I've looked into these kind of systems before, find them interesting but never pulled the trigger. :^P",,
4.66395E+17,oaktownsam#0815,2021-09-06,It's pretty simple.  Just makes a bunch of symlinks.  Kinda like a dumber version of debian alternatives,,
4.90866E+17,JOST GRANT#1516,2021-09-06,Just looked into the text; Half-off on Amazon right now ... ended up ordering it. loool,,mage_groovy (2)
4.90866E+17,JOST GRANT#1516,2021-09-06,Excited to read this now!,,
4.90866E+17,JOST GRANT#1516,2021-09-06,"I don't know if I'm 'passionate about teaching' or anything, which seems like where this book is aimed at -- but I think society has done a HORRIBLE job at getting kids into CompSci in-general (and even math for that matter) and I really care about approachable ways to get ""people"" into programming without the conceptual overload most just won't be able to overcome by themselves",,
4.90866E+17,JOST GRANT#1516,2021-09-07,"Saw this diclaimer; I'm on Linux and it currently won't let me make an account. Not shocking, in somefactor of pre-alpha software -- but in anycase it's nice to see though that this is a direction they're moving in",,
2.74358E+17,jesscxc#4846,2021-09-07,DTC is a fantastic book; one of my top favorites,,
2.74358E+17,jesscxc#4846,2021-09-07,it's really a book about language and learning in general,,
2.74358E+17,jesscxc#4846,2021-09-07,and of course they're both huge Racket fans :p,,
2.74358E+17,jesscxc#4846,2021-09-07,"the Orb World download is based on Unreal Engine 4 right now; we can make a macOS build when we get that set up, but the main devving is on a Windows PC because it has the most processing power (UE is hungry üòÜ)",,
2.74358E+17,jesscxc#4846,2021-09-07,Stephen mainly uses Linux though; getting it running on it is an interesting question,,
4.90866E+17,JOST GRANT#1516,2021-09-07,"There's always Proton ... lol; not ideal, but I've given up a loooong time ago lol",,
4.90866E+17,JOST GRANT#1516,2021-09-07,"_knows when he's tired , when he starts to repeat words or 'lols' loool_",,üòÇ (1)
2.74358E+17,jesscxc#4846,2021-09-07,"yeah, it's a struggle :(",,
4.90866E+17,JOST GRANT#1516,2021-09-07,Gonna fork Lojban to Lolban so instead of starting each sentence with .i you .lol,,
4.90866E+17,JOST GRANT#1516,2021-09-07,"Well ""sentence""",,
2.74358E+17,jesscxc#4846,2021-09-07,"the way I model it is that ""CodeSpells"" is a platform for spell sharing, an engine for hooking into different game engines, and a metaverse of programmable games",,
4.90866E+17,JOST GRANT#1516,2021-09-07,"GodotSpells 2022. loool
But yeah, I think I get ya; That it's intended to be an ecosystem than any one game / experience",,
2.74358E+17,jesscxc#4846,2021-09-07,"the CodeSpells discord server for anyone interested üòä:
https://discord.gg/prsZZnm",,
2.74358E+17,jesscxc#4846,2021-09-07,"it's still the early decades, but programmable magic is inevitable IMHO, and if any language can do it, it's Racket üòä",,
4.90866E+17,JOST GRANT#1516,2021-09-07,Other neat work in this space  https://github.com/dsrw/enu ; Which is basically like a 3D turtle live-coding system in Godot,,coolspells (1)
2.74358E+17,jesscxc#4846,2021-09-07,very cool,,
4.90866E+17,JOST GRANT#1516,2021-09-07,"I've said it before (I think recently ... like 2-3 days ago); it's SHOCKING to me that this space isn't over-saturated by now. Seems like ""educational exploratory 'games' / experiences"" would be where all the money is -- schools were buying Minecraft for education BEFORE 'Minecraft Edu'",,
2.74358E+17,jesscxc#4846,2021-09-07,the #tavern channel on the CodeSpells discord has some really interesting conversations about different games with programmable systems (eg Minecraft mods for spellcrafting),,
4.90866E+17,JOST GRANT#1516,2021-09-07,"I need to poke around that Discord more; I've been ""in there"" for over a year iirc -- but really have been 'in' it much. lol",,
2.74358E+17,jesscxc#4846,2021-09-07,"funnily enough one of the main ways ThoughtSTEM (the main company devving CodeSpells) has made money is from LearnToMod, where they teach Minecraft modding üòÅ",,
4.90866E+17,JOST GRANT#1516,2021-09-07,Hopefully in Kotlin or something? lol Can't imagine anything that would turn me off more as a kid than 'public static void main' ... maybe the realtime feedback makes a difference though / overcomes that,,
2.74358E+17,jesscxc#4846,2021-09-07,"for anyone interested üëÄ:
Don't Teach Coding: Until You Read This Book
https://smile.amazon.com/dp/1119602629/",,
4.90866E+17,JOST GRANT#1516,2021-09-07,Also that reminded me that https://github.com/lambdaisland/witchcraft was a thing,,clojure (1)
2.74358E+17,jesscxc#4846,2021-09-07,very cool!,,
4.90866E+17,JOST GRANT#1516,2021-09-07,I've kinda thought of extending https://terasology.org/ to work similarly ... but the performance last I've checked is prohibitive unless you have a dedicated graphics-card (which many kids probably don't have ready access to),,
4.90866E+17,JOST GRANT#1516,2021-09-07,"It's amazing, especially with Optifine how little Minecraft can run on",,
4.90866E+17,JOST GRANT#1516,2021-09-07,"In the Racket-world, there's sadly the long dead https://github.com/tonyg/racket-minecraft",,
4.90866E+17,JOST GRANT#1516,2021-09-07,_doesn't know how he wasn't following TonyG before on GH; Feel like he's always had really interesting stuff like the crazy cool racket-reloadable_,,
4.90866E+17,JOST GRANT#1516,2021-09-07,"""YOU'RE GOING TO ME MORE INTERACTIVE, WHETHER YOU LIKE TO OR NOT."" lool",,
2.74358E+17,jesscxc#4846,2021-09-07,I'm going to add to the CodeSpells wiki üòä:coolspells:,,
2.74358E+17,jesscxc#4846,2021-09-07,Stephen has some really interesting blog posts on doing programming with s-expression runes,,
2.74358E+17,jesscxc#4846,2021-09-07,https://codespells.org/posts/why-runes.html,,
4.90866E+17,JOST GRANT#1516,2021-09-07,"Lil mixed on leaning 'that hard' into a visual-programming language tbh; But looks like there's a way to ""drop down"" further, so not that concerned I guess",,
2.74358E+17,jesscxc#4846,2021-09-07,"that's a post from last year; more modern (in ""CodeSpells: Orb World"") is a web browser embedded in the game that you program spells in Racket in",,
2.74358E+17,jesscxc#4846,2021-09-07,"similar idea to this:
https://youtu.be/_tD9toOSmM0",,
4.90866E+17,JOST GRANT#1516,2021-09-07,"OKAY, YEAH, that's **pretty dang exciting** within an educational context. Can imagine this being heavily used in schools.",,
4.90866E+17,JOST GRANT#1516,2021-09-07,(( Just launched the old / original Codespells for the first-time in years and boy were there problems (in Linux) loool; Couldn't stop jumping and wouldn't let me go to the options to remap -- because a weird flicker effect for all menus)),,
2.74358E+17,jesscxc#4846,2021-09-07,"yeah, it's really exciting, ngl üòÅüòÅüòÅ",,
6.90127E+17,hnbeck#2106,2021-09-07,"@oaktownsam @JOST GRANT @Aeva thx for your answers, interesting points üôÇ  One impressive property of Racket for me is its way to  connect to C libraries üëç",,üëç (1)
3.58051E+17,hazel#0271,2021-09-07,"> However, language designers have begun to experiment with a variety of type systems that are difficult or impossible to translate into System F, such as functional dependencies [21]",,
6.87833E+17,grey#8674,2021-09-07,Aren‚Äôt functional dependencies kinda like adding entries to a Prolog database to guide queries? (Apologies if I‚Äôm *way* off.),,
3.58051E+17,hazel#0271,2021-09-07,the joke was about package management actually,,üòÜ (1)
3.58051E+17,hazel#0271,2021-09-07,but also yes,,
1.56786E+17,williewillus#8490,2021-09-07,"Re: optifine
It's mostly recognized in the modding world nowadays that other mods have surpassed optifine in terms of benefits provided, compatibility with other mods, Foss, etc.
I'd recommend the caffeine mods (lithium, phosphor, sodium) over optifine for all perf improvements",,salute (1)
4.90866E+17,JOST GRANT#1516,2021-09-07,needs to look into mc more ... haven't really in like 5 years; Though been paying quarterly about 50usd on ApexHosting or whatever for like 2. :^U,,
4.90866E+17,JOST GRANT#1516,2021-09-07,Haven't been on it for close to a year even ... <_<,,
2.64024E+17,Eutro#0016,2021-09-07,thank you willie üôè,,
1.56786E+17,williewillus#8490,2021-09-07,Resident Minecraft modders :wacko:,,
4.90866E+17,JOST GRANT#1516,2021-09-07,"Reminded that https://github.com/oplS17projects/RacketCraft exists; though it has no license, the code is ehhh (by students and it shows in a few places), and don't remember if it's even bootable anymore. lool",,
4.90866E+17,JOST GRANT#1516,2021-09-07,"Oh, it does still boot ; neato!",https://cdn.discordapp.com/attachments/618895179343986688/884949732554854420/unknown.png,
4.90866E+17,JOST GRANT#1516,2021-09-07,"Looool, classic; There's seemingly nothing to limit acceleration and you respawn in the sky, same spot in the middle of this lil map -- so I mined like 10 blocks down in the center, and I kept falling through the world, spawning above, speeding up, and falling through again, and repeat",,
2.74358E+17,jesscxc#4846,2021-09-07,üòÇ,,
2.74358E+17,jesscxc#4846,2021-09-07,it was pretty neat though :),,
2.74358E+17,jesscxc#4846,2021-09-07,the coloring reminds me of the hyperdimensionality of @Skallos's Heartfelt timetravel game :),,
4.90866E+17,JOST GRANT#1516,2021-09-07,"A very small 'map'; A big 3d rectangle, so no perlin-noise generation afaict and I'm sure no chunking.. so performance outside of the limited, defined confines I'm sure would be horrible but still neat proof-of-concept",,
4.90866E+17,JOST GRANT#1516,2021-09-07,"Really excited to mess around with https://github.com/Zylann/godot_voxel when Godot4 comes out -- and want to actually try my hand at a Scheme x Godot system , debating if it should be in Racket though (namely due to limited interactiveness / runtime reloading compared to other implementations)",,
4.90866E+17,JOST GRANT#1516,2021-09-07,"But I find ""minecraft-ish voxel sandboxes"" pretty ideal to teach certain things (relating to yesterday's convo about codespells) -- namely logic-gates & computer ""turtles"".",,
6.90127E+17,hnbeck#2106,2021-09-08,"As I don't understand every detail in your post, I try an interpretation: a) you are experienced with Godot and b) Godot as an API where Racket can/could conntect to with its FFI capabilities? If yes it would have my interest üòÑ",,
4.90866E+17,JOST GRANT#1516,2021-09-08,"I wouldn't call myself experienced, lol, but have a lot of interest to ""get to that point'; Since Godot is now the most mainstream, and arguably capable game-engine in the opensource world.

But yeah, regarding the FFI; Godot offers something called GDNative which is basically a set of bunch of C headers that you can call -- really anything you can do in their homegrown GDScript you ""should"" be able to do via calling the C api directly.",,
4.90866E+17,JOST GRANT#1516,2021-09-08,So you'd get a workflow similar to https://youtu.be/dTYSGgldhJg?t=2380,,
4.90866E+17,JOST GRANT#1516,2021-09-08,"And there's Arcadia for Godot even (haven't had a chance to play with it yet); But the value-added I think of doing something like this in Racket for an educational / introductory context -- which Racket is obviously bent towards, is great",,
4.90866E+17,JOST GRANT#1516,2021-09-08,"That being said, some of Godot's experience is that it's an all-in-one package so in my mind you'd either get a distribution of Dr.Racket to work ""out of the box"" with it and/or you'd just hack-in actual first-class Godot editor support (think the latter would be the 'ideal')",,
4.90866E+17,JOST GRANT#1516,2021-09-08,"My tendency is to lean to NIH (not-invented-here) and want tor re-implement everything ... but the amount of time, effort, energy, and domain-specific-knowledge a ""passable"" game-engine makes -- seems like just FFI to Godot seems like the 'best zero-to-something' out there right now",,
4.83487E+17,jest#6646,2021-09-08,"so i want a subset of a list based on a range, e.g `
```scheme
(define x (list 'foo 'bar 'baz 'boo))

(list-from-index 2 x) ; should give me (list 'foo 'bar) but not baz
```",,
4.83487E+17,jest#6646,2021-09-08,is there a built in that would do this?,,
3.5323E+17,Alex Knauth#4895,2021-09-08,`take`,,
4.83487E+17,jest#6646,2021-09-08,üòò,,
4.83487E+17,jest#6646,2021-09-08,"```scheme
'(begin (define baz (+ 7 7)) (define meow (+ (- 7 7) (- baz 9))) (define bark (+ (- baz baz) (* 9 meow))) (define ahoy (- (- baz baz) (+ meow bark))) (- (* baz meow) (+ bark ahoy)))
```
how do I eval this in a function? i can eval this in the repl just fine but in a function i get:
```
define: not allowed in an expression context in: (define foo (* 3 10))
```
this is for generating beginner exercises on evaluating and substituting variables. I have these in the outer scope somewhere:
```
(define-namespace-anchor anc)
(define ns (namespace-anchor->namespace anc))
```
guessing i need to return a namespace?",,
4.83487E+17,jest#6646,2021-09-08,ohhh wait.. i wasnt wrapping begin around it when i was calling eval on my functions...,,
4.83487E+17,jest#6646,2021-09-08,"alright nevermind, it works now üòä",,
6.90127E+17,hnbeck#2106,2021-09-09,"Thx for the info, very helpful üôÇ  I'll take a look.  At the moment I play a little bit with OpenGL binding of Racket. My point is to work on street scenarios, look for OpenDrive/OpenScenario for more. There is no really good (free) app for this",,
4.83487E+17,jest#6646,2021-09-09,"this probably is intentional behavior? that or either a bug, but nonethelesss i dont like it",,
4.83487E+17,jest#6646,2021-09-09,"for drracket ""Enable Automatic Parens, squarebackets, etc"" it seems to delete them in pairs?",,
4.83487E+17,jest#6646,2021-09-09,,https://cdn.discordapp.com/attachments/618895179343986688/885550448721952879/auto_parens_delete.mp4,
4.83487E+17,jest#6646,2021-09-09,"here i want to delete the cons expression in the lambda but when i do so it deletes the closing parens for the lambda too, it's always deleting in pairs",,
4.83487E+17,jest#6646,2021-09-09,while with auto parens off it deletes it the way i expect it to,,
4.83487E+17,jest#6646,2021-09-09,i guess ill file an issue and see if people agree that it should not effect deletion in pairs also,,
4.83487E+17,jest#6646,2021-09-09,"all enable parens should do is insert the closing character and stick your cursor in the middle.... maybe a setting should be split of ""delete in pairs"" because the default behavior for vscode, etc don't s urprise you by deleting in pairs",,
8.14743E+16,jimpjorps#0001,2021-09-09,"the behavior makes sense in a way, it can't really tell which parentheses ""belong"" to each other any more once you start deleting them",,
4.83487E+17,jest#6646,2021-09-09,if it cant tell which belong to each other than it shouldnt delete both lol,,
4.83487E+17,jest#6646,2021-09-09,at least imo,,
4.83487E+17,jest#6646,2021-09-09,"pressing the delete key , does not delete the closing lambda i want to keep",,
2.75501E+17,Plane#0324,2021-09-09,you can ctrl-backspace,,üòÆ (1)
4.83487E+17,jest#6646,2021-09-09,how do i make that the default?!,,
4.83487E+17,jest#6646,2021-09-09,"either way, i think it should be split into two separate options",,
2.75501E+17,Plane#0324,2021-09-09,the default binding is right here https://github.com/racket/gui/blob/master/gui-lib/framework/private/racket.rkt#L1917,,
2.75501E+17,Plane#0324,2021-09-09,and you basically want `c:backspace` instead of `~c:backspace` to swap them,,
4.83487E+17,jest#6646,2021-09-09,ahhhh i see the issue now,,
4.83487E+17,jest#6646,2021-09-09,https://github.com/racket/drracket/issues/201,,
2.75501E+17,Plane#0324,2021-09-09,i rather like the current behavior,,
4.83487E+17,jest#6646,2021-09-09,"> Sometimes, I will accidentally type an open paren, then realize I actually did not want it after all.
> Instead, I‚Äôd appreciate it if, when automatic parentheses are enabled, DrRacket would delete both parentheses when the open paren is deleted in the text (). This would prevent the dangling parens.

it prevents dangling parens but also deletes the ones you need, so the question now is what is the common case? 
is it often the case you accidentally open parens and want to delete them in pairs or deleting a subexpression that you dont want?",,
8.14743E+16,jimpjorps#0001,2021-09-09,is there a shortcut for ‚Äúdelete current sexp‚Äù,,
8.14743E+16,jimpjorps#0001,2021-09-09,that seems like the ideal,,
2.75501E+17,Plane#0324,2021-09-09,not sure if that exactly is there?  you can do meta-up to jump to the beginning of the current s-exp and then ctrl-meta-k to delete it,,
4.83487E+17,jest#6646,2021-09-09,what is the built in for searching a list and ejecting on first found?,,
4.83487E+17,jest#6646,2021-09-09,based on pred,,
4.83487E+17,jest#6646,2021-09-09,"guessing findf? 
```scheme
(findf (lambda (arg)
           (> arg 9))
         '(7 8 9 10 11))
```",,
8.14743E+16,jimpjorps#0001,2021-09-09,"findf, yeah",,
8.14743E+16,jimpjorps#0001,2021-09-09,assuming you don't want the tail,,
4.83487E+17,jest#6646,2021-09-09,"nahh, i just need a filter that breaks on 1 found",,
8.14743E+16,jimpjorps#0001,2021-09-09,there's also `for/first` that you can use with a `#:when` guard if that ends up being more ergonomic,,
8.14743E+16,jimpjorps#0001,2021-09-09,and works on general sequences,,
2.75501E+17,Plane#0324,2021-09-09,yeah working on sequences is nice since you don't necessarily have to generate an entire list up front,,
8.14743E+16,jimpjorps#0001,2021-09-09,I end up preferring `for/` syntax over the alternatives most of the time just because I think it's easy to reason about,,
2.75501E+17,Plane#0324,2021-09-09,it took me a little time to get in the habit of using those but i do now too,,
4.83487E+17,jest#6646,2021-09-09,not gonna use recursion ü§£ ?,,
8.14743E+16,jimpjorps#0001,2021-09-09,"well, `for/fold` is still pretty visibly recursive",,
8.14743E+16,jimpjorps#0001,2021-09-09,that one's fun to use,,
5.58414E+17,MemeMachine420#3261,2021-09-09,could someone explain to me the racket mixin functionality?,,
5.58414E+17,MemeMachine420#3261,2021-09-09,I'm not exactly sure I understand,,
2.75501E+17,Plane#0324,2021-09-09,"i was introduced to the idea here <https://felleisen.org/matthias/Class/programming-with-class/class-values.html>, where the author explains that mixins in racket follow from first-class classes",,
2.75501E+17,Plane#0324,2021-09-09,"that is, because you have first-class classes, you can take an existing class and return a new one that is a little bit different",,
5.58414E+17,MemeMachine420#3261,2021-09-09,"right, so this is basically a dynamic trait",,
5.58414E+17,MemeMachine420#3261,2021-09-09,/ virtual method,,
2.75501E+17,Plane#0324,2021-09-09,"so if you want to ""mix in"" a little functionality to (potentially) multiple different classes, you can make a function that takes a class, and returns a new class, and then call the function whenever you need that mixed in",,
5.58414E+17,MemeMachine420#3261,2021-09-09,makes sense,,
5.58414E+17,MemeMachine420#3261,2021-09-09,and I guess the interfaces that you give to the mixins,,
5.58414E+17,MemeMachine420#3261,2021-09-09,define which methods you can override?,,
2.75501E+17,Plane#0324,2021-09-09,"although it's not racket, there is a conceptual example you could read here https://cs.brown.edu/~sk/Publications/Papers/Published/fkf-classes-mixins/ in section 3 ""from classes to mixins""",,
5.58414E+17,MemeMachine420#3261,2021-09-09,is every method overrideable or only those declared overrideable in the interface?,,
4.66395E+17,oaktownsam#0815,2021-09-09,I think they need to be public methods.,,
4.66395E+17,oaktownsam#0815,2021-09-09,"```scheme
(define foo%
  (class object%
    (super-new)   
    (define/public (method) 42)))


(define bar%
  (class foo%
    (super-new)
    (define/override (method) 7)))

(send (new bar%) method) ;; ==> 7
```",,
5.58414E+17,MemeMachine420#3261,2021-09-09,a mixin can only be used on any class that implements one of its super-interfaces right?,,
3.5323E+17,Alex Knauth#4895,2021-09-09,"I thought ""that implements all of its super-interfaces""",,
5.58414E+17,MemeMachine420#3261,2021-09-09,`(define pie-styles-mixin (mixin (color:text<%>) (pie-styles<%>)`,,
5.58414E+17,MemeMachine420#3261,2021-09-09,so something like this has to implement all of the interfaces,,
3.5323E+17,Alex Knauth#4895,2021-09-09,"Maybe ""super-interfaces"" isn't the most descriptive word... more like _input_ interfaces",,
5.58414E+17,MemeMachine420#3261,2021-09-09,also `[` and `(` and interchangeable in racket right?,,
2.64024E+17,Eutro#0016,2021-09-09,yes,,
2.64024E+17,Eutro#0016,2021-09-09,"please don't do ```scheme
[define [f x] ...]
```or I will cry",,meowblushcry (2)
8.14743E+16,jimpjorps#0001,2021-09-09,they're equivalent but the house style is that square brackets are specifically for things like clauses in `cond` and `match` or lists of bindings in `let` and `for`,,üëç (1)
5.58414E+17,MemeMachine420#3261,2021-09-09,"```scheme
(define directory-interface<%>
  (interface (file-interface<%>)
    [file-list (->m (listof (is-a?/c file-interface<%>)))]
    parent-directory))
```",,
5.58414E+17,MemeMachine420#3261,2021-09-09,something like this forces the `file-list` function of the interface to return that item right?,,
5.58414E+17,MemeMachine420#3261,2021-09-09,does it constrain the argument it takes?,,
5.58414E+17,MemeMachine420#3261,2021-09-09,like what is this `->m` stuff,,
8.14743E+16,jimpjorps#0001,2021-09-09,"yeah, that's a contract definition, if `file-list` isn't a function that produces a list of file interfaces it'll throw a contract violation",,
5.58414E+17,MemeMachine420#3261,2021-09-09,but it doesn't constrain the arguments it takes in?,,
5.58414E+17,MemeMachine420#3261,2021-09-09,very strange type of contract,,
8.14743E+16,jimpjorps#0001,2021-09-09,I'm pretty hazy on how contracts and objects interact,,
2.64024E+17,Eutro#0016,2021-09-09,"`->m` is just like `->` for methods, the receiver object is still there but it doesn't take any arguments else it's a contract violation",,üëç (1)
5.58414E+17,MemeMachine420#3261,2021-09-09,is `->` a default racket thing,,
5.58414E+17,MemeMachine420#3261,2021-09-09,I thought that's something each class/type/primitive implemented for specific properties,,
8.14743E+16,jimpjorps#0001,2021-09-09,it's part of `racket/contracts` yeah,,
5.58414E+17,MemeMachine420#3261,2021-09-09,is there any way to enum all of an objects methods in racket?,,
5.58414E+17,MemeMachine420#3261,2021-09-09,like in the repl?,,
2.66505E+17,notjack#9941,2021-09-09,"```java
(interface->method-names (object-interface obj))
```",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-09,i just realized that lambdas kinda look like wishbones,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-09,someone make a new lisp called wishbone,,üêï (4)
2.64024E+17,Eutro#0016,2021-09-09,Haskell: `\`s look kinda like lambdas,,
5.58414E+17,MemeMachine420#3261,2021-09-09,what is a surrogate,,
5.58414E+17,MemeMachine420#3261,2021-09-09,I'm struggling to understand this concept,,
4.62028E+17,StephenD#5938,2021-09-09,Why not you? üòÄ,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-09,ü§î,,
4.66395E+17,oaktownsam#0815,2021-09-09,"I'm wondering if I need to start a document ""Unused Lisp/Scheme implementation names ... so far""",,üòÇ (2)
4.66395E+17,oaktownsam#0815,2021-09-09,üòõ,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-09,"i really wrote this in the server for the ""create a programming language"" language huh",,
4.62028E+17,StephenD#5938,2021-09-09,Lol,,
4.62028E+17,StephenD#5938,2021-09-09,https://docs.racket-lang.org/guide/languages.html,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-09,im slowly gettin towards that portion of the language still. but soon....,,üëç (1)
2.66505E+17,notjack#9941,2021-09-09,they're a kind of mutable proxy object. you almost certainly don't need them.,,
2.66505E+17,notjack#9941,2021-09-09,"the java equivalent would look like this:
```java
interface Foo {
  void doThing();
}

class RegularFoo implements Foo {
  @Override void doThing() { ... }
}

class ProxyFoo implements Foo {
  public Foo surrogate; // public and mutable!
  @Override void doThing() {
    surrogate.doThing();
  }
}
```
The `ProxyFoo` is the ""host"" object and the `Foo surrogate` field is the ""surrogate"" object. The host delegates everything to the surrogate. Because the surrogate is a mutable field that users of `ProxyFoo` can set, the behavior of `ProxyFoo` can be swapped out dynamically at any time.",,
3.58051E+17,hazel#0271,2021-09-09,"once a student in IU's intro CS realized that `(`, `[`, and `{` are all equal",,
3.58051E+17,hazel#0271,2021-09-09,so they decided to format with nothing but `{`,,üòÇ (1)
3.58051E+17,hazel#0271,2021-09-09,solely as a bit,,
3.58051E+17,hazel#0271,2021-09-09,"and like, I gave them credit",,
2.75501E+17,Plane#0324,2021-09-09,i think i haven't used `{` yet in racket,,
2.75501E+17,Plane#0324,2021-09-09,"oh . . . actually that's not true, i wrote macros that used it!",,
3.58051E+17,hazel#0271,2021-09-09,"macros, typed racket",,
3.58051E+17,hazel#0271,2021-09-09,are the usual applications,,
2.75501E+17,Plane#0324,2021-09-09,i haven't used it in typed racket,,
2.75501E+17,Plane#0324,2021-09-09,but i've only dipped my toe into the typed racket waters,,
3.58051E+17,hazel#0271,2021-09-09,you can use it as `ann` shorthand,,
2.75501E+17,Plane#0324,2021-09-09,:o,,
3.58051E+17,hazel#0271,2021-09-09,`#{x : T}` iirc,,
2.75501E+17,Plane#0324,2021-09-09,i haven't done that yet,,
4.83487E+17,jest#6646,2021-09-09,"behh, struggling with recurrsion, so i want to turn `(define x2 '(+ 3 4 (- 6 3 (* 1 1 (- 4 2)) 2 (+ 7 7)) 5))` a randomly arbitrarily nested arithmetic expression in prefix notation to infix notation",,
4.83487E+17,jest#6646,2021-09-09,"really tired today lol, does anyone now how to do this?",,
4.66395E+17,oaktownsam#0815,2021-09-09,I use them in `syntax-parse` patterns.  I picked it up from somewhere else though.,,
2.75501E+17,Plane#0324,2021-09-09,"```scheme
#lang racket/base

(require racket/match
         racket/list)

(define (infix expr)
  (define (maybe-recurse expr)
    (if (list? expr)
        (infix expr)
        expr))
  (match expr
    [(list) (list)]
    [(list operator operands ...)
     (for/fold ([infixed (list
                          (maybe-recurse
                           (first operands)))]
                #:result (reverse infixed))
               ([operand (rest operands)])
       (cons (maybe-recurse operand)
             (cons operator infixed)))]))
```",,
2.75501E+17,Plane#0324,2021-09-09,might be able to golf that a bit lol,,
2.75501E+17,Plane#0324,2021-09-09,but that was my first try,,
4.83487E+17,jest#6646,2021-09-09,sweet thanks,,
4.83487E+17,jest#6646,2021-09-09,i realize how little i use match lol,,
4.83487E+17,jest#6646,2021-09-09,"```
  (match expr
    [(list) (list)]
    [(list operator operands ...)
```
what do these two lines do?",,
2.75501E+17,Plane#0324,2021-09-09,the first one matches an empty list and returns an empty list,,
4.83487E+17,jest#6646,2021-09-09,if it matches a list it produces the empty,,
4.83487E+17,jest#6646,2021-09-09,ahhhh,,
2.75501E+17,Plane#0324,2021-09-09,i was futzing with it a little,,
2.75501E+17,Plane#0324,2021-09-09,trying to think about what it should do with zero- and one-value lists,,
4.83487E+17,jest#6646,2021-09-09,"i never knew you could use `(list)` for an empty list , or that list can be called with no arguments lol, i always use empty or null to reduce needing more parens",,
4.83487E+17,jest#6646,2021-09-09,today i learned!,,
2.75501E+17,Plane#0324,2021-09-09,"shorter?
```scheme
#lang racket/base

(require racket/match
         racket/list)

(define (infix expr)
  (match expr
    [(list operator operands ...)
     (rest (append*
            (for/list ([operand operands])
              (list operator
                    (infix operand)))))]
    [x x]))
```",,
2.75501E+17,Plane#0324,2021-09-09,i started out writing it with `define/match` and i didn't like how `('())` looked lol,,
2.75501E+17,Plane#0324,2021-09-09,it's starting to look a little neater now though,,
4.83487E+17,jest#6646,2021-09-09,alright sweet üòä think this'll work,,
2.75501E+17,Plane#0324,2021-09-09,yay,,
2.75501E+17,Plane#0324,2021-09-09,"i just had to realize it was simpler to always recurse, and simpler to always add the operator, and just remove the extra one when i was done lol",,
2.75501E+17,Plane#0324,2021-09-09,"the other thing about building a list of values with a different size, by building a list of lists of values, then flattening one level",,
2.75501E+17,Plane#0324,2021-09-09,that's a pattern i learned over in haskell,,
2.75501E+17,Plane#0324,2021-09-09,so i remembered that and i got away from manually building stuff with cons and fold (:,,
2.75501E+17,Plane#0324,2021-09-09,the `append*` flattens it and the `rest` throws out the extra operator,,
4.40139E+17,Parnikkapore#2806,2021-09-09,"I haven't used {} also lol, currently I follow the way things are written in the docs",,
4.83487E+17,jest#6646,2021-09-09,,https://cdn.discordapp.com/attachments/618895179343986688/885699436750192646/auto_reload_file.mp4,
4.83487E+17,jest#6646,2021-09-09,"does racket have an option to auto-reload a file when another editor has changed it? it only asks when I try to run the file and not when it got saved, whereas vscode will always just reload whenever the file has changed",,
2.75501E+17,Plane#0324,2021-09-09,"there is an option which claims to do that, Preferences > General > Automatically Reload Changed Files",,
4.83487E+17,jest#6646,2021-09-09,"i tried all 3 options and none hot-reload the saved file strangely..., only on run",,
2.75501E+17,Plane#0324,2021-09-09,maybe the behavior could be changed there,,
4.83487E+17,jest#6646,2021-09-09,guess ill submit an issue about it,,
4.83487E+17,jest#6646,2021-09-09,https://github.com/racket/drracket/issues/506,,
4.83487E+17,jest#6646,2021-09-09,"not sure if its just my machine but if anyone can test if a file hot reloads on another editor save, please report it thanks",,
4.83487E+17,jest#6646,2021-09-09,"lol, interesting pr https://github.com/racket/drracket/commit/afcb482967bcc3e273a97214caf2bfda7828dc3e#diff-0dd780fa93ff1d438e4c5cd68a1b7595cd019a1af98545871319008bfa400c63R612",,
4.83487E+17,jest#6646,2021-09-09,huh... not the first big ascii art in that file,,
8.09146E+17,darren#6252,2021-09-10,"a beginner question please. 
coming from clojure, i wonder that racket allows `define` clauses within top-level `define` and many examples in the official documentation use that way. why is it necessary or recommended when `let` statement would do the same job?",,
6.87833E+17,grey#8674,2021-09-10,"In Racket, `define` used instead of a `let` is a style choice. In fact, the `define` is transformed into a `let`. Note, however, that a `define` used at the module level is *not* the same as a `let`.",,üëç (1)
2.75501E+17,Plane#0324,2021-09-10,"in terms of style, for internal definitions, using `define` rather than `let` is a choice that avoids rightward drift",,üëç (1)
8.09146E+17,darren#6252,2021-09-10,"That's an interesting point. Right, makes sense.",,
2.64024E+17,Eutro#0016,2021-09-10,Yeah because I want to be able to fit my code on-screen horizontally,,
8.14743E+16,jimpjorps#0001,2021-09-10,"yeah, I don't think there's any performance implications or hidden downsides to either method since it's all `let` internally, it's just a preference to avoid an extra level of nesting when possible",,üëç (1)
8.14743E+16,jimpjorps#0001,2021-09-10,`let*` is still nice if you've got a bunch of related chained operations that don't neatly work with threading,,
8.14743E+16,jimpjorps#0001,2021-09-10,or if you just don't want to include a package with a threading macro,,
2.75501E+17,Plane#0324,2021-09-10,sometimes `let*` could be nice just so you can name the results of intermediate steps in cases where that helps the reader understand what is going on in the code,,üëç (1)
2.75501E+17,Plane#0324,2021-09-10,but i really do like the `threading` library :D,,
5.58414E+17,MemeMachine420#3261,2021-09-10,"I'm a bit confused why replacing the default racket:text% lexer with my own lexer doesn't exactly work
http://hastebin.com/fotalisiqo.less",,
5.58414E+17,MemeMachine420#3261,2021-09-10,ah fudge my lexer has to return the same amount of args as the default-lexer,,
5.58414E+17,MemeMachine420#3261,2021-09-10,damn it,,
5.58414E+17,MemeMachine420#3261,2021-09-10,#NAME?,,
5.58414E+17,MemeMachine420#3261,2021-09-10,in racket?,,
5.58414E+17,MemeMachine420#3261,2021-09-10,you cannot use write because it will be thought of as an application,,
6.46114E+17,samth#3420,2021-09-10,@MemeMachine420 usually with `printf`?,,
5.58414E+17,MemeMachine420#3261,2021-09-10,I mean how do you make it have no side effects,,
5.58414E+17,MemeMachine420#3261,2021-09-10,"```
(define (token-sym->style s)  (symbol->string s))
```
I want to print",,
5.58414E+17,MemeMachine420#3261,2021-09-10,the input of this function,,
5.58414E+17,MemeMachine420#3261,2021-09-10,"I just don't know how to, do I use a begin statement?",,
6.46114E+17,samth#3420,2021-09-10,`(define (token-sym->style s) (println s) (symbol->string s))`,,
5.58414E+17,MemeMachine420#3261,2021-09-10,damn,,
5.58414E+17,MemeMachine420#3261,2021-09-10,ok,,
3.58051E+17,hazel#0271,2021-09-10,"Racket is a ""functional language"", but not in the sense that it restricts side effects",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-10,"""impure functional language"" the haskellians would chant as they burnt us at the stake",,
2.75501E+17,Plane#0324,2021-09-10,"i think racket is a ""functional first"" language",,
2.75501E+17,Plane#0324,2021-09-10,you can write whatever sort of code you like in racket though,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-10,yeah thats probably a better descriptor actually,,
8.14743E+16,jimpjorps#0001,2021-09-10,"yeah, you can write imperative code with side effects and mutation but you often have to explicitly ask to do it",,
8.14743E+16,jimpjorps#0001,2021-09-10,but beyond stating your intent to do it racket doesn't get in your way about it,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-10,woaah there's a J language package,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-10,I've always wanted to try J,,
2.34164E+17,python#3213,2021-09-10,there is?,,
2.34164E+17,python#3213,2021-09-10,"I kinda like J, but it's a bit hard to learn",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-10,yeah https://pkgs.racket-lang.org/package/j,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-10,I mostly think the concept of it is really neat but there's probably not a lot of practical application to it,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-10,It's like the inverse of brainfuck lol,,
2.34164E+17,python#3213,2021-09-10,"hmmm, i'll check that out",,
2.74358E+17,jesscxc#4846,2021-09-10,is there a page for RacketCon? https://con.racket-lang.org/ says 2020,,
4.66395E+17,oaktownsam#0815,2021-09-10,"I think they're at the ""save the date phase"" and not yet on the ""website updating phase"" yet.",,
2.74358E+17,jesscxc#4846,2021-09-10,planning for October 2021?,,
4.66395E+17,oaktownsam#0815,2021-09-10,Oh it's first weekend in November IIRC.  Let me pin the message.,,
4.66395E+17,oaktownsam#0815,2021-09-10,It's in #announcements,,
4.66395E+17,oaktownsam#0815,2021-09-10,https://discord.com/channels/571040468092321801/716057923943530597/883696665440161852,,
4.66395E+17,oaktownsam#0815,2021-09-10,"Reposting to pin
> In November 2021, on the weekend of the 5th through 7th, we'll be holding a virtual RacketCon, like we did in October 2020.
> 
> We'll follow a similar pattern to last year: an evening social on Friday, then talks on Saturday and Sunday.
> 
> Please put this on your calendars, and please let me know if you have a talk in mind that you'd like to give.",,ü•≥ (2)
4.66395E+17,oaktownsam#0815,2021-09-10,Pinned a message.,,
2.74358E+17,jesscxc#4846,2021-09-10,thanks!! Stephen of CodeSpells was wondering about it :),,
2.74358E+17,jesscxc#4846,2021-09-10,we're trying to get him to give a talk üòÇ,,ü•≥ (1)
4.83487E+17,jest#6646,2021-09-10,"what is the shortest way to combine list of random numbers that may have sequential numbers into a list of ranges?: e.g
```scheme
(define indexes '(8 1 6 7 8 9 4 2))
;  should produce
; 7, 8 are replaced with the range '(6 9)
'(8 1 '(6 9) 4 2)
```",,
2.66505E+17,notjack#9941,2021-09-10,for homework or for real code?,,
2.66505E+17,notjack#9941,2021-09-10,"(meaning, does me using my `rebellion` library count as cheating)",,
4.83487E+17,jest#6646,2021-09-10,"for real code lol, i dont wanna rely on any external packages",,
4.83487E+17,jest#6646,2021-09-10,i know how to do this in a procedural style with mutation and flags on when to skip n stuff but wondering if anyone knows the clean functional way to do it,,
4.83487E+17,jest#6646,2021-09-10,"i guess i would `map` all the indexes to `(list num #f)` where the boolean in the second position would indicate whether the next value should be combined, and then fold em?",,
2.66505E+17,notjack#9941,2021-09-10,"ohhhh you only want to merge sequential _adjacent_ numbers, interesting",,üëç (1)
2.66505E+17,notjack#9941,2021-09-10,a `for/fold` loop would be my approach,,
2.66505E+17,notjack#9941,2021-09-10,"neat problem, this is what I ended up with:
```scheme
(define (add-range output low high)
  (cons (if (equal? low high) low (list low high)) output))

(define (rangify integers)
  (cond
    [(empty? integers) '()]
    [else
     (for/fold ([output '()]
                [low (first integers)]
                [high (first integers)]
                #:result (reverse (add-range output low high)))
               ([x (in-list integers)])
       (if (<= (sub1 low) x (add1 high))
           (values output (min low x) (max high x))
           (values (add-range output low high) x x)))]))

(rangify '(8 1 6 7 8 9 4 2))
;; produces '(8 1 (6 9) 4 2)
```",,
4.83487E+17,jest#6646,2021-09-10,üò¢ beautiful,,
4.83487E+17,jest#6646,2021-09-10,"```scheme
(define indexes '(8 1 6 7 4 2))

;todo: turn this into a func, for now it references ^
(for/fold ([acc empty]
           [skip #f])
          ([i (length indexes)]
           #:unless skip)
  (define curr (list-ref indexes i))
  (define valid-len (sub1 (length indexes)))
  (define next-ind (if (>= (add1 i) valid-len) valid-len (add1 i)))
  (define next (list-ref indexes next-ind))
  (println (list curr next))
  (values (cons curr acc) (= (add1 curr) next)))
```
this is what i had so far lmao.... im way too used to needing to index into an array hence the `list-ref` üòî",,
4.83487E+17,jest#6646,2021-09-10,doesnt even work since #:unless seems to stop for 4 and 2 also.... and i dont know the end range lol,,
4.83487E+17,jest#6646,2021-09-10,"walp thanks, i will just use yours",,
1.93202E+17,rocketnia#4517,2021-09-11,"```racket
(define (rangify lst)
  (match lst
    [(list) (list)]
    [(cons first rest)
     (match (rangify rest)
       [(list) (list (list first first))]
       [(cons (list range-start range-end) rest)
        (if (= (add1 first) range-start)
          (cons (list first range-end) rest)
          (cons (list first first) rest))])]))

(define (abbreviated-rangify lst)
  (for/list ([range (in-list (rangify lst))])
    (match-define (list range-start range-end) range)
    (if (= range-start range-end)
      range-start
      range)))
```

(Edited to fix the `for/list` line, where I wrote `item` instead of `range`. There may be more bugs like that; this is untested.)",,
5.58414E+17,MemeMachine420#3261,2021-09-11,do rust like enums exist in Racket?,,
8.14743E+16,jimpjorps#0001,2021-09-11,"not in the base library, `rebellion` has an enums type though",,
8.14743E+16,jimpjorps#0001,2021-09-11,"the racket/scheme idiom is using symbols, usually",,
5.58414E+17,MemeMachine420#3261,2021-09-11,Yeah I know,,
5.58414E+17,MemeMachine420#3261,2021-09-11,also is there a sane way to make a static hashtable in Racket,,
5.58414E+17,MemeMachine420#3261,2021-09-11,it seems extremely painful,,
5.58414E+17,MemeMachine420#3261,2021-09-11,do I use hash-map or just hash?,,
8.14743E+16,jimpjorps#0001,2021-09-11,"you‚Äôve got options based on what you‚Äôre trying to store in it, `hash` is good for little hard coded ones, `make-immutable-hash` if you‚Äôve got a list of association pairs, `for/hash` if you‚Äôre generating each k-v pair",,
3.58051E+17,hazel#0271,2021-09-11,`hash-map` is probably not what you want,,
8.14743E+16,jimpjorps#0001,2021-09-11,oh yeah hash-map outputs a list,,
5.24323E+17,Ben Kenobi#5683,2021-09-11,"hash-map returning a list is so odd, any time I want to map one hash to another, anyway",,
7.73175E+17,meowüé∫#2842,2021-09-11,`hash` returns an immutable hash too.,,
7.73175E+17,meowüé∫#2842,2021-09-11,You're thinking of `make-hash`.,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-11,Very pleasantly surprised how easy to use the ffi library is,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-11,"I was expecting at least a couple hoops to jump through but no, it's about as straight forward as it could possibly be",,üéâ (3)
2.66505E+17,notjack#9941,2021-09-11,`hash-map` is an abomination,,üíØ (2)
3.58051E+17,hazel#0271,2021-09-11,rt,,
1.93202E+17,rocketnia#4517,2021-09-11,"this may be exhibit A for how a generic `map` over a value should be based on the value's functor-equipped value-supplier nature, rather than its iterable nature",,
2.64024E+17,Eutro#0016,2021-09-11,"`map` as an ""abstraction"" was a mistake, transducers are the modern‚Ñ¢Ô∏è functional way to go üôÇ",,
2.75501E+17,Plane#0324,2021-09-11,i've had a lot of trouble solving this eloquently!,,
2.75501E+17,Plane#0324,2021-09-11,my current attempt is,,
2.75501E+17,Plane#0324,2021-09-11,"```scheme
(define (rangify l [start #f])
  (match l
    [(list x y ..1) (define this+1 (add1 x))
                    (define next   (first y))
                    (if (equal? this+1 next)
                        (rangify y (or start x))
                        (cons (if start
                                  (list start x)
                                  x)
                              (rangify y #f)))]
    [(list x)       (if start
                        (list (list start x))
                        (list x))]
    [(list)         (if start
                        (list start)
                        (list))]))
```",,
2.75501E+17,Plane#0324,2021-09-11,i think there is some sort of clever solution hiding out-of-sight (at least for me),,
4.66395E+17,oaktownsam#0815,2021-09-11,"I feel pretty good about this one:
```scheme
(define (rangify a-list)
  (match a-list
    [(list)   null]
    [(list _) a-list]
    [(or (list (cons a b) c rest ...)
         (list (and a b) c rest ...))
     (if (= 1 (- c b))
         (rangify (cons (cons a c) rest))
         (cons (car a-list)
               (rangify (cdr a-list))))]))
```",,üëç (2)
2.75501E+17,Plane#0324,2021-09-11,ooh that's looking short,,
2.75501E+17,Plane#0324,2021-09-11,i like that,,
2.75501E+17,Plane#0324,2021-09-11,how does the `or` part work?,,
4.66395E+17,oaktownsam#0815,2021-09-11,"It's to try and consistently name the parts for the if test and consequent.  In the body of that clause `a` will be what should be the start of the next range, `b` will be the end of the next range and is the value we should compare to `c`",,
4.66395E+17,oaktownsam#0815,2021-09-11,So in the first `or` the function is binding them based on the head of the list being a range (pair).  In the second part of the `or` `a` and `b` are bound to the head of the list and `c` to the next item.,,
2.75501E+17,Plane#0324,2021-09-11,i like it!  i haven't used `and` and `or` in pattern matching yet,,
2.75501E+17,Plane#0324,2021-09-11,so i just learned something (:,,
4.66395E+17,oaktownsam#0815,2021-09-11,I rarely use them directly.  I think the last couple of times I used them it was in a match expander.,,
4.83487E+17,jest#6646,2021-09-12,is chez scheme still being worked on? seems very inactive :s. i wish i could throw money at it,,
3.58051E+17,hazel#0271,2021-09-12,yes...?,,
8.14743E+16,jimpjorps#0001,2021-09-12,"yeah, seems active to me",,
5.58414E+17,MemeMachine420#3261,2021-09-12,how can I check if 2 values are equal,,
5.58414E+17,MemeMachine420#3261,2021-09-12,"```
(eq? (values 1 2 3) (values 1 2 3)
```",,
3.58051E+17,hazel#0271,2021-09-12,it's supported by cisco they don't need your money,,üòî (1)
4.83487E+17,jest#6646,2021-09-12,i ask coz not many changes https://github.com/cisco/ChezScheme/pulse/monthly,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-12,you wouldn't really use values like this. Did you meant to use `list` instead? You can compare lists with `equal?`,,
5.58414E+17,MemeMachine420#3261,2021-09-12,damn,,
5.58414E+17,MemeMachine420#3261,2021-09-12,I already wrote all the code using values,,
5.58414E+17,MemeMachine420#3261,2021-09-12,I kinda used em for like pattern matching and shit,,
5.58414E+17,MemeMachine420#3261,2021-09-12,I guess I'll convert to structs,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-12,you could convert multivalues returning expression to a list no problem,,
5.58414E+17,MemeMachine420#3261,2021-09-12,"Right, but there's no point",,
5.58414E+17,MemeMachine420#3261,2021-09-12,I just didn't wanna make a struct for something I use once in a match,,
8.14743E+16,jimpjorps#0001,2021-09-12,would doing `apply list` to it work,,
5.58414E+17,MemeMachine420#3261,2021-09-12,yeah it would work,,
5.58414E+17,MemeMachine420#3261,2021-09-12,but I dislike using list for that,,
5.58414E+17,MemeMachine420#3261,2021-09-12,since the connotation for a list is a list,,
5.58414E+17,MemeMachine420#3261,2021-09-12,not really a struct,,
5.58414E+17,MemeMachine420#3261,2021-09-12,I need more so a temporary struct/unnamed tuple,,
5.58414E+17,MemeMachine420#3261,2021-09-12,I really wanted something along the lines of an unnamed tuple is that exists,,
5.58414E+17,MemeMachine420#3261,2021-09-12,the problem is that you can't pass these tuples between functions,,
5.58414E+17,MemeMachine420#3261,2021-09-12,since values expands and the contract is broke,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-12,"I mean, what's the semantic difference between tuple and immutable list? Only the fact that elements can be of different types",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-12,but that's kinda moot if you're coding in dynamically typed language,,
5.58414E+17,MemeMachine420#3261,2021-09-12,"Yeah, so you're just saying, use a list?",,
5.58414E+17,MemeMachine420#3261,2021-09-12,fuck that shit and be based ?,,
2.64024E+17,Eutro#0016,2021-09-12,throwing around multiple values gets unwieldy,,
2.64024E+17,Eutro#0016,2021-09-12,"if you need an anonymous aggregate type, then lists are useful",,
2.64024E+17,Eutro#0016,2021-09-12,otherwise structs are nice,,
2.75501E+17,Plane#0324,2021-09-12,i haven't really found it useful to *store* multiple values with `values`.  i usually use them more-or-less them immediately,,
5.58414E+17,MemeMachine420#3261,2021-09-12,"another question
is there a simpler way to append to the end of a list instead of doing this
```
(append (list 1 2) (list 3))
```",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-12,"not sure what you're doing, but it's common to use reversed list, and use cons to logically append so to say, and then reverse the result as the final step",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-12,mostly for performance reasons,,
2.75501E+17,Plane#0324,2021-09-12,"racket lists are singly linked and immutable, so to add to the end you basically have to create a new list.  so in the common case, it makes more sense to add to the front of a list like what Techno Chess suggests",,
2.75501E+17,Plane#0324,2021-09-12,"so if you have to add to the end of a list frequently, it's possible that either list is the wrong data structure, or you could be using a different algorithm",,
2.66505E+17,notjack#9941,2021-09-12,use structs instead of lists for fixed-size data,,
2.66505E+17,notjack#9941,2021-09-12,field names are very very useful,,
5.58414E+17,MemeMachine420#3261,2021-09-12,I abuse match and pattern matching to basically never need em,,
5.58414E+17,MemeMachine420#3261,2021-09-12,but regardless racket pattern matching is letting me down,,
2.66505E+17,notjack#9941,2021-09-12,there is not. immutable linked lists are bad for that.,,
5.58414E+17,MemeMachine420#3261,2021-09-12,"Can I pattern match a struct without needing an expr like
```
[? is-struct? my-struct (blah blah)]
```",,
5.58414E+17,MemeMachine420#3261,2021-09-12,without actually destructuring the struct,,
2.66505E+17,notjack#9941,2021-09-12,? without destructuring it? what do you mean,,
5.58414E+17,MemeMachine420#3261,2021-09-12,so in the pattern matching docs,,
5.58414E+17,MemeMachine420#3261,2021-09-12,"```scheme
(struct tree (val left right))

 
> (match (tree 0 (tree 1 #f #f) #f)
    [(tree a (tree b  _ _) _) (list a b)])

'(0 1)
```",,
5.58414E+17,MemeMachine420#3261,2021-09-12,In this case you actually have to assign the struct variables to different variables,,
5.58414E+17,MemeMachine420#3261,2021-09-12,I just wanna match to a struct,,
5.58414E+17,MemeMachine420#3261,2021-09-12,"e.g.
```
match x
[(my-struct struct) (blah-blah)]
```",,
2.66505E+17,notjack#9941,2021-09-12,"oh, use `(? my-struct?)`",,
5.58414E+17,MemeMachine420#3261,2021-09-12,Yeah that's what I wrote,,
5.58414E+17,MemeMachine420#3261,2021-09-12,`without needing an expr like`,,
2.66505E+17,notjack#9941,2021-09-12,"```scheme
(match x
  [(? my-struct?) (do-stuff-with-x)])
```",,
5.58414E+17,MemeMachine420#3261,2021-09-12,Yeah I mean is there an alternative,,
5.58414E+17,MemeMachine420#3261,2021-09-12,I guess not,,
8.14743E+16,jimpjorps#0001,2021-09-12,you could just bind everything to _ and ignore it on the right side,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-12,"ü§î I'm not sure why would you need alternative? The `?` matcher here is concise and clean approach, what's wrong with it?",,
2.64024E+17,Eutro#0016,2021-09-12,can't you pattern match structs,,
2.64024E+17,Eutro#0016,2021-09-12,"!rkt eval ```scheme
(struct foo (x y z))
(match (foo 1 2 3)
  [(foo x y z) (list x y z)])
```",,
8.02004E+17,r16#4581,2021-09-12,(1 2 3),,
2.64024E+17,Eutro#0016,2021-09-12,or yeah use `(? struct?)`,,
2.64024E+17,Eutro#0016,2021-09-12,I don't see what's missing here,,
2.64024E+17,Eutro#0016,2021-09-12,or what more you could want,,
2.14881E+17,Moinate#6061,2021-09-12,^^ just say how u want it to work & somebody will write a macro for u üôÇ,,
2.75501E+17,Plane#0324,2021-09-12,"it doesn't appear to be what you wrote.  it sounds like you want to not match the struct fields, and notjack's suggest doesn't do that, so notjack's expr is not like the one in your initial question",,
5.58414E+17,MemeMachine420#3261,2021-09-12,I don't want to match the fiellds,,
2.75501E+17,Plane#0324,2021-09-12,right,,
5.58414E+17,MemeMachine420#3261,2021-09-12,but I don't like the expr way of matching a struct,,
5.58414E+17,MemeMachine420#3261,2021-09-12,it looks weird and unnatural,,
5.58414E+17,MemeMachine420#3261,2021-09-12,but It seems that's the only way,,
3.5323E+17,Alex Knauth#4895,2021-09-12,"What do you mean ""the expr way""? Do you mean `(foo x y z)` above? Because there are other ways of matching a struct, like `(? foo?)` and `(struct foo _)` and  `(struct* foo ())` among others",,
3.5323E+17,Alex Knauth#4895,2021-09-12,"By ""the expr way"" do you mean one of those 4 ways?",,
3.5323E+17,Alex Knauth#4895,2021-09-12,@MemeMachine420 How then would you want to match the struct?,,
5.58414E+17,MemeMachine420#3261,2021-09-12,"just like
```
[(my-struct the-struct) (my-struct->something? the-struct)]
```",,
5.58414E+17,MemeMachine420#3261,2021-09-12,the syntax looks weird with the expr stuff,,
5.58414E+17,MemeMachine420#3261,2021-09-12,it's like I'm wasting cycles to check if something is that struct,,
3.5323E+17,Alex Knauth#4895,2021-09-12,"So the pattern `(? my-struct? the-struct)` would fit there in place of `(my-struct the-struct)`, if I understand what you mean",,
3.5323E+17,Alex Knauth#4895,2021-09-12,It requires 3 more characters than what you wrote,,
3.5323E+17,Alex Knauth#4895,2021-09-12,"Wait, is that an example of what you wanted or what you didn't want? I'm confused",,
3.5323E+17,Alex Knauth#4895,2021-09-12,"It also might be worth looking at the larger match expression. Like if you have
```
(match x
  [(? my-struct? the-struct) (my-struct->something? the-struct)])
```
It might be easier to just use `cond` like
```
(cond
  [(my-struct? x) (my-struct->something? x)])
```",,
3.5323E+17,Alex Knauth#4895,2021-09-12,"Or if you want it to be `match` for other reasons, use `x` instead of creating a new variable like
```
(match x
  [(? my-struct?) (my-struct->something? x)])
```",,
5.58414E+17,MemeMachine420#3261,2021-09-12,ah cool,,
4.83487E+17,jest#6646,2021-09-13,weird question but is there a function that takes a value and spits out a symbol of the type it is?,,
4.83487E+17,jest#6646,2021-09-13,e.g `(typeof 2) -> 'number`,,
4.83487E+17,jest#6646,2021-09-13,"nevermind, i'll just write the conds... i have to either way",,
6.87833E+17,grey#8674,2021-09-13,"In Racket, a value can have many different types, so it doesn‚Äôt make sense to have a function that returns the type of a value. Testing with predicates is the canonical way to determine if a value belongs to a type.",,
4.83487E+17,jest#6646,2021-09-13,"yeah lol, just realized how dumb it was ü§£",,
3.5323E+17,Alex Knauth#4895,2021-09-13,I think the `describe` package has something similar,,
3.5323E+17,Alex Knauth#4895,2021-09-13,https://docs.racket-lang.org/describe/index.html#%28def._%28%28lib._describe%2Fmain..rkt%29._variant%29%29,,
3.5323E+17,Alex Knauth#4895,2021-09-13,"Although it's possible it behaves differently now on RacketCS than it did before on RacketBC. It used to return `'fixnum-integer` for `2`, but now for some reason it returns `'simple`",,
2.75501E+17,Plane#0324,2021-09-13,"i'm a little bit sad though, because now that i've learned about `or` in `match`, i want it in haskell too!",,
2.75501E+17,Plane#0324,2021-09-13,"and it seems like the way you do that in haskell is, you don't, and then you write a helper function that gets called from two cases",,
4.83487E+17,jest#6646,2021-09-13,"for those who attend school, are you guys in person now or still online ?",,
2.34164E+17,python#3213,2021-09-13,in person,,
4.62028E+17,StephenD#5938,2021-09-13,Look what is top on lobsters right now,https://cdn.discordapp.com/attachments/618895179343986688/887080046945243177/image0.png,"racketraccoon (3),‚ù§Ô∏è (1)"
4.62028E+17,StephenD#5938,2021-09-13,Let me know if you want a lobsters invite,,
4.62028E+17,StephenD#5938,2021-09-13,It‚Äôs also on hn https://news.ycombinator.com/item?id=28512406,,
4.62028E+17,StephenD#5938,2021-09-13,The direct link is https://alex-hhh.github.io/2021/09/screenshots.html,,
8.14743E+16,jimpjorps#0001,2021-09-13,neat,,
8.14743E+16,jimpjorps#0001,2021-09-13,I've always been kind of reluctant to try making a GUI application because working with a UI framework always seems so daunting,,
8.14743E+16,jimpjorps#0001,2021-09-13,but I'm slowly coming around to the idea of trying to do something in racket as a first attempt,,
2.75501E+17,Plane#0324,2021-09-13,"i keep avoiding asking anyone for an invite because i'm so good at time-wasting, i worry i'll spend all day on a site like that.  lol",,
2.75501E+17,Plane#0324,2021-09-13,"but i would actually like an invite, if you don't mind, because then i can upvote racket posts",,ü•≥ (1)
4.66395E+17,oaktownsam#0815,2021-09-13,Needs more drama or it will never make it to the top 10 on the orange site /s,,üòÜ (2)
2.14881E+17,Moinate#6061,2021-09-13,"today i observed a beginner who had managed to save their source code in the quickscript folder?? i didn't even know what to do but say ""save it in this other place"" and hope the fact that 4 of their files being checked as active quickscripts didn't actually do anything",,
2.14881E+17,Moinate#6061,2021-09-13,i really wish i knew what happened in the first place...,,
2.14881E+17,Moinate#6061,2021-09-13,"... kind of, lol",,
4.40139E+17,Parnikkapore#2806,2021-09-13,"This is the top reason I miss Visual Basic. I think QML gets close (load a declarative ui then bind fns to events on defined controls), but haven't tried it...",,
4.62028E+17,StephenD#5938,2021-09-13,Dm me your email address,,
4.62028E+17,StephenD#5938,2021-09-13,That‚Äôs not good. Any idea how they did it ?,,
2.75501E+17,Plane#0324,2021-09-13,"my guess would be, at some point they opened a quickscript, and then drracket remembered that path and used it as the default next time they went to save",,
2.14881E+17,Moinate#6061,2021-09-13,"I don't use quickscripts much and didn't really want to investigate deeply. 

Since there were 4 user files in the quickscript directory and no legit quickscripts when I went to ""Disable scripts..."", I think they may have been using `Scripts > Manage scripts > Open script ...` to open their work (?). IIRC something in that menu gets the script copied into the scripts library folder, which would explain the surprising location of their files.",,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-13,hi,,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-13,"i need help with ""ease""",,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-13,can anyone help me?,,
2.75501E+17,Plane#0324,2021-09-13,can you be more specific?,,
2.75501E+17,Plane#0324,2021-09-13,do you mean this package? https://docs.racket-lang.org/ease/index.html,,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-13,uh,,
2.66505E+17,notjack#9941,2021-09-13,"looks good, all you're missing is a closing paren",,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-13,what about this,,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-13,?,,
2.66505E+17,notjack#9941,2021-09-13,"it says ""a single substitution step"", but you made two substitutions: one for `a` and one for `b`",,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-13,gg,,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-13,i was blind,,
4.62028E+17,StephenD#5938,2021-09-14,Thanks,,
4.83487E+17,jest#6646,2021-09-14,"what class is this for :0? well, what school?",,
4.90866E+17,JOST GRANT#1516,2021-09-14,Grabbing pict3d. Shocked it hasn't been touched 6 years... anyone know if  Neil Toronto  is okay; His Github hasn't been touched in about that long as-well?,,
4.66395E+17,oaktownsam#0815,2021-09-14,He works for Microsoft Research now IIRC,,
4.66395E+17,oaktownsam#0815,2021-09-14,a lot of his packages have been adopted by new maintainers,,
4.90866E+17,JOST GRANT#1516,2021-09-14,"That's good to hear; Just was concerned with the 'radio silence' for years. Typically no news = bad-news in my experience , sadly ...",,
4.66395E+17,oaktownsam#0815,2021-09-14,https://www.microsoft.com/en-us/research/people/netoront/,,
4.66395E+17,oaktownsam#0815,2021-09-14,Unfortunately (for Racket) when people get their degrees they go elsewhere.,,
4.90866E+17,JOST GRANT#1516,2021-09-14,Pict3D was one of the things that got me really excited about Racket like near a decade ago; Maybe even made me aware of Racket in the first-place,,
4.90866E+17,JOST GRANT#1516,2021-09-14,"Yeah, retention I can see being in issue in a language that (at least historically) is almost elusively in the academic sphere",,
4.66395E+17,oaktownsam#0815,2021-09-14,pict3d has some good techniques (maybe a little outdated now) for generating typed and untyped FFI bindings,,
4.90866E+17,JOST GRANT#1516,2021-09-14,"I still think ""first-class Godot bindings"" is the way to go in this space, but looking into Pict3D again -- it feels like* a different, interesting niche. Namely being pretty true to that name and a 3d complement to 'pict'",,
4.90866E+17,JOST GRANT#1516,2021-09-14,"Making interesting scenes, instead of full-on games; Namely",,
3.61619E+17,Dracule#0494,2021-09-14,"new to racket and defining new syntax in the language. is it possible to redefine ""define"" such that the function name doesnt need to be in a set of parens?",,
3.61619E+17,Dracule#0494,2021-09-14,like (define functionName (args) (exprs)),,
3.61619E+17,Dracule#0494,2021-09-14,moreover could the parens for the args be changed to be square brackets?,,
3.61619E+17,Dracule#0494,2021-09-14,"(yeah, like clojure)",,
3.61619E+17,Dracule#0494,2021-09-14,"so, (define functionName [args] (exprs))",,
4.90866E+17,JOST GRANT#1516,2021-09-14,"Afaik the use of different brackets , parens, braces are totally optional; As-in you can use whatever you want and they're interchangeable -- it's more of a convention thing.",,
4.90866E+17,JOST GRANT#1516,2021-09-14,"Also yeah, don't know enough about the #lang / macro system (or parsers in-general) in how one would implement this, but there are many examples of Racket #langs that don't use s-exps syntax",,
3.61619E+17,Dracule#0494,2021-09-14,"you mean, in the macro that defines that syntax?",,
3.61619E+17,Dracule#0494,2021-09-14,"oh, ok",,
4.90866E+17,JOST GRANT#1516,2021-09-14,"Most notably, Rhombus, but also https://github.com/tonyg/racket-something  https://github.com/takikawa/sweet-racket  https://github.com/breuleux/liso  https://github.com/racket/honu  come to mind",,üëç (1)
2.14881E+17,Moinate#6061,2021-09-14,"It's pretty easy to change the surface behavior of Racket. Replacing the ""built-in define"" is also not an issue. https://pastebin.com/LK7EKbiv",,plusone (2)
6.90127E+17,hnbeck#2106,2021-09-15,"I agree in principle. Godot look really nice and a bit simpler than Unity. As far as I understood in Godot you can define nodes doing anything you want, like drawing geometric primitives per code or even diagrams. Its a question I came back to time after time: can a Game Engine be used as a general drawing module for applications?",,
5.24323E+17,Ben Kenobi#5683,2021-09-15,What JSGRANT is referring to is that in racket (not necessarily in all of its langs!) the brackets `()[]{}` are all interchangeable as long as they are correctly paired,,‚òùÔ∏è (1)
3.61619E+17,Dracule#0494,2021-09-15,nice,,
3.61619E+17,Dracule#0494,2021-09-15,"can it be defined to change where they are placed? for example, putting the args in brackets but not the function name",,
3.61619E+17,Dracule#0494,2021-09-15,"nvm, moinate's code does that. cool!",,
4.90866E+17,JOST GRANT#1516,2021-09-15,"> Its a question I came back to time after time: can a Game Engine be used as a general drawing module for applications?

Hoping so. It really takes most of the burden away from maintaining something as-complex as a general-purpose game-engine vs say just an idiomatic wrapper.",,
8.14743E+16,jimpjorps#0001,2021-09-15,this came up in an F# chat and there were people there who'd used F# with Godot to make GUIs for internal company tools,,
8.14743E+16,jimpjorps#0001,2021-09-15,a racket interface could do the same,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-15,"Wait you mean that you can create models via code (presumably associating vertices to 3d vectors then connecting them), or just that you can call commands to draw cubes and stuff?",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-15,"Unrelated question, but to clarify it's not possible to interface with c++ on the CS compiler, right? Or at least not as reliably or simply as with plain ol C?",,
4.90866E+17,JOST GRANT#1516,2021-09-15,"@jimpjorps I mean, see the appeal in that you get ""crossplatform apps 'for Free'"" and there's already C# support ... just wondering with Maui on the horizon for dotnet if it's ""worth it"" for them. lol",,
8.14743E+16,jimpjorps#0001,2021-09-15,"I imagine it's nicer than MAUI if you're doing things that are at least game-dev adjacent, like needing 3D views of things",,
4.90866E+17,JOST GRANT#1516,2021-09-15,"Ah, that's surely fair; So some kind of hybrid app. Maybe something in the area of a cad-system or something",,
4.90866E+17,JOST GRANT#1516,2021-09-15,Really the only Schemes I know that can do this are ones that transpile into an IR and not compile down fully into asm and/or machine-code; Gambit comes to mind -- that you can have it compile down-to and interop with C++ and I'm sure they're are others,,
4.90866E+17,JOST GRANT#1516,2021-09-15,You could always target C++ projects that provide C bindings though; And I think there's a few projects that mostly automate the generation of these as-well,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-15,"Ah, darn. It's a bummer so much stuff is forged directly from ++",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-15,It's also exciting tho because it means I finally have an excuse to write lower level things I want :'),,
4.90866E+17,JOST GRANT#1516,2021-09-15,I mean there's always https://github.com/clasp-developers/clasp but that's full-on CL; Guess you could run https://gitlab.com/mbabich/airship-scheme/ on-top of it in-theory ... and write some nice way to interface with their interop system. looool,,
4.90866E+17,JOST GRANT#1516,2021-09-15,"For pretty much everything I've every wanted to play around with though, there's often already C bindings for.",,
4.90866E+17,JOST GRANT#1516,2021-09-15,"A lot of that has been driven by Python being so slow, and popular. lool",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-15,"I suppose perhaps there is for stuff I'd want to use, but it's just tough to dig out of search engines",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-15,I was looking for a robust library of noise generating functions the other day and most of the options that came up were C++,,
4.90866E+17,JOST GRANT#1516,2021-09-15,"Tensorflow, Bullet Physics, Dear Imgui, Godot -- all are C++ codebases with C bindings off the top of my head",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-15,I've also thought it would be cool to play around with openCV,,
4.62028E+17,StephenD#5938,2021-09-15,I just caught the tail of this is someone working on godot bindings?,,
4.90866E+17,JOST GRANT#1516,2021-09-15,https://github.com/Auburn/FastNoiseLite looks promisung,,
4.90866E+17,JOST GRANT#1516,2021-09-15,@Aperiodic Orbit,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-15,Oh damn I didn't realize that one had bindings for plain C lol,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-15,"idk how, I'd messed around with refactoring the Java one for use in clojure a few months ago",,
4.62028E+17,StephenD#5938,2021-09-15,https://github.com/oetr/racket-opencv ?,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-15,oh! well I'll be damned,,
4.90866E+17,JOST GRANT#1516,2021-09-15,@oaktownsam started on bindings a long-while ago but just the start of em' https://github.com/samdphillips/racket-godot-experiment -- I made an org to work on it ( https://github.com/lambdot ) though don't plan to touch it to really till mid-to-late next year.,,
4.90866E+17,JOST GRANT#1516,2021-09-15,@StephenD Discussion started me asking if Neil Toronto was 'still around'; Was concerned because I grabbed Pict3D and saw he wasn't active on Github in like 6+ years. Then veered into Godot because I think the idea of the maintenance costs being somefactor of 'too high' with a custom engine for one person over the course of years,,
4.62028E+17,StephenD#5938,2021-09-15,Ahh,,
4.62028E+17,StephenD#5938,2021-09-15,"Added to wiki: https://github.com/racket/racket/wiki/Game-Development

Should I add rodot?",,
4.90866E+17,JOST GRANT#1516,2021-09-15,"I wouldn't yet; The existing bindings are very incomplete and with Godot 4 ""around the corner"" not sure of the little that's there, if it's going to need a rewrite -- don't want to get people's hopes up until there's `something` to show for it. lool",,
4.90866E+17,JOST GRANT#1516,2021-09-15,"My ""ultimate goal"" I think is to have an all-in-one distribution of Racket x Godot; As-in you grab one tarball, extract it, run one script and you have an environment that you can run a custom Dr.Racket (or Godot embeded editor) and just 'get started' immediately.",,üëç (1)
4.90866E+17,JOST GRANT#1516,2021-09-15,"But having ""complete GDNative"" bindings is important first-step, certainly.",,
4.90866E+17,JOST GRANT#1516,2021-09-15,Sadly it's not something that's well documented atm; Or at least in the Godot 3.x line,,
4.90866E+17,JOST GRANT#1516,2021-09-15,Pretty sure SamPh said he was cheating off the 3rd-party Python support iirc,,
4.62028E+17,StephenD#5938,2021-09-15,That is a cool idea - a game dev distribution!,,
4.90866E+17,JOST GRANT#1516,2021-09-15,"Yeah, the hope being that it would be **very easy** to jump into; Maybe optionally provide support for something like https://github.com/dsrw/enu",,
4.90866E+17,JOST GRANT#1516,2021-09-15,"Or a #lang based ""turtle graphics""-inspired system.",,
4.90866E+17,JOST GRANT#1516,2021-09-15,"There's a lot of lil ideas like this; Wish I had more time the next few months, but a lot of my free-time is going to be invested into Racket in the interim via an educational context* -- so I'm hoping I find lil edge-cases I can understand the domain a bit more until then",,
2.66505E+17,notjack#9941,2021-09-15,`#lang unity` üòÑ,,
4.90866E+17,JOST GRANT#1516,2021-09-15,@notjack https://github.com/arcadia-unity/Arcadia :^),,
4.90866E+17,JOST GRANT#1516,2021-09-15,(( There's even a Godot version; lol )),,
2.66505E+17,notjack#9941,2021-09-15,_nice_,,
4.62028E+17,StephenD#5938,2021-09-15,FYI https://docs.racket-lang.org/racket_turtle/index.html,,
4.90866E+17,JOST GRANT#1516,2021-09-15,"Also can't forget https://github.com/soegaard/sketching
Yeah, there's options certainly atm; I thinking more in like a 3D context though",,
4.90866E+17,JOST GRANT#1516,2021-09-15,"Really something in-between 'turtle graphics' and a fluxus, praxis, extempore I think is ""the sweet spot""",,
4.66395E+17,oaktownsam#0815,2021-09-15,I was thinking about adding turtle graphics to Jens sketching lang,,
2.75501E+17,Plane#0324,2021-09-15,turtle graphics!! yay,,
2.75501E+17,Plane#0324,2021-09-15,"makes me nostalgic, i was so little when i first got to try turtle graphics",,
2.75501E+17,Plane#0324,2021-09-15,i don't think i quite understood it at the time but i loved it lol,,
3.79445E+17,joohnym#9531,2021-09-15,"This might be a crazy proposal, but I'm wondering, should Flomat: https://github.com/soegaard/sci (matrix library utilizing BLAS and LAPACK) be included into the official Racket/math libraries ?",,
3.79445E+17,joohnym#9531,2021-09-15,"in some modified form, perhaps?",,
2.14881E+17,Moinate#6061,2021-09-15,"If it's a proposal, maybe you could say more about why you're thinking it would be a good thing?",,
3.79445E+17,joohnym#9531,2021-09-15,Mainly because it has functionalities not present in the math library,,
3.79445E+17,joohnym#9531,2021-09-15,Plus interfacing with CBLAS and LAPACK might be something many people are interested,,
2.14881E+17,Moinate#6061,2021-09-15,"Not that I disagree, exactly, but...
I noticed when I started using some of the math functions that they were really creaky - e.g., there was one that was uncallable from Typed Racket, could not be used, from which I concluded nobody _at all_ was using it. 

Another function was described in a kind of ambiguous way and gave results that were, while technically maybe in agreement with the docs, not really what would have been the most useful.

I think there was no motion to change these because they were enshrined as a standard that nobody used.",,
2.14881E+17,Moinate#6061,2021-09-15,So my concern is that adding low-use functionality has a danger of locking-in warts & imperfections that would be polished out if the person bringing in the library actually used it heavily.,,
2.14881E+17,Moinate#6061,2021-09-15,...,,
2.14881E+17,Moinate#6061,2021-09-15,"If you had somebody who said they were going to do heavy linear algebra for whatever purpose, they would be a good candidate to do the integration too.",,
4.66395E+17,oaktownsam#0815,2021-09-15,It would also add a compiled dependency to the main distribution,,
3.79445E+17,joohnym#9531,2021-09-15,You are referring to blas and LAPACK?,,
6.90127E+17,hnbeck#2106,2021-09-16,"Not sure. Until now I had not looked at it in detail. But I found an example of a visualisation example done with Godot. If I 'll find it again I'll post it here. From all I read so far it seems that you can not instatiate new nodes in the scenegraph by C, but you can define the code for the node in C",,
2.14881E+17,Moinate#6061,2021-09-16,"Yes, I'm sure that's what he is talking about. Just a look at what's inside of that package tells me definitely stay away from bundling it without the library included.",https://cdn.discordapp.com/attachments/618895179343986688/888035781288005662/unknown.png,
8.14743E+16,jimpjorps#0001,2021-09-16,"yeah, blas and lapack end up being kind of a minefield because they're both specifications with many providers, so you have to worry about all the various flavors of it that exist for a particular OS or that a user might want to use with your library",,
8.14743E+16,jimpjorps#0001,2021-09-16,it's often a big pain point for numpy,,
4.62028E+17,StephenD#5938,2021-09-16,"The racket-build-guide includes instructions for making variant distributions https://docs.racket-lang.org/racket-build-guide/distribute.html
I‚Äôve not tried it but a Racket(Science) distribution sounds cool.",,
4.62028E+17,StephenD#5938,2021-09-16,"I‚Äôd like to make a Developer edition one day: I‚Äôd remove the teaching languages, and add dev packages and plugins.",,
3.79445E+17,joohnym#9531,2021-09-16,That actually sounds interesting,,
4.66395E+17,oaktownsam#0815,2021-09-16,Yes,,
2.66505E+17,notjack#9941,2021-09-16,working on sorted maps now üòÅ,,üéâ (2)
4.83487E+17,jest#6646,2021-09-16,racket doesnt have rainbow parens right ?,,
2.66505E+17,notjack#9941,2021-09-16,"if you mean drracket, it doesn't have it by default but I'm pretty sure there's an extension for it somewhere",,
4.83487E+17,jest#6646,2021-09-16,i cant find one for drracket,,
2.66505E+17,notjack#9941,2021-09-16,I think someone wrote a quickscript to do it https://github.com/Quickscript-Competiton/July2020entries/issues/14,,
2.66505E+17,notjack#9941,2021-09-16,looks like it's only for copy-pasting code as html or something though?,,
2.66505E+17,notjack#9941,2021-09-16,dunno,,
1.56786E+17,williewillus#8490,2021-09-17,how do even start going about debugging a slow memory leak?,,
1.56786E+17,williewillus#8490,2021-09-17,r16 has a really slow developing memory leak that only happens on CS,,
1.56786E+17,williewillus#8490,2021-09-17,which makes me think native libraries but i have no idea where to start,,
1.56786E+17,williewillus#8490,2021-09-17,"it basically slowwwwlly starts consuming more and more and explicit major gc's in idle state still don't free anything
I've seen it basically consume all the memory on the VPS i run it on until it gets oom killed",,
1.56786E+17,williewillus#8490,2021-09-17,switched to BC and things seem a bit better,,
1.56786E+17,williewillus#8490,2021-09-17,haven't run it for long yet though but at least explicit GC's in idle state bring memory usage all the way back down to starting levels (~74M ish),,
1.56786E+17,williewillus#8490,2021-09-17,!rkt eval (collect-garbage),,
8.02004E+17,r16#4581,2021-09-17,‚Äã,,
1.56786E+17,williewillus#8490,2021-09-17,!rkt eval (collect-garbage) (current-memory-use),,
8.02004E+17,r16#4581,2021-09-17,72725112,,
2.66505E+17,notjack#9941,2021-09-17,can you make the leak happen faster by stress testing it?,,
2.66505E+17,notjack#9941,2021-09-17,or does it happen even if it's running without serving any requests at all?,,
1.56786E+17,williewillus#8490,2021-09-17,"Good idea. Probably can start narrowing down what kinds of tricks make it happen
The main server we use r16 on has all sorts of wacky tricks that produce images, gifs, etc.",,
1.56786E+17,williewillus#8490,2021-09-17,So it might be a bug in those image libraries,,
2.64024E+17,Eutro#0016,2021-09-17,I wouldn't be surprised if it was a bug with dynamically `eval`-ed modules,,
2.64024E+17,Eutro#0016,2021-09-17,"although, weren't we getting leaks before that too?",,
2.64024E+17,Eutro#0016,2021-09-17,hey willie what if you ran with Valgrind üò≥,,
4.62028E+17,StephenD#5938,2021-09-17,@jest Yes - that is for copy-paste html,,
4.62028E+17,StephenD#5938,2021-09-17,"Welcome back from holidays everyone, can I have some :plusone: reactions if there is interest in resuming a monthly racket virtual meetup?",,plusone (3)
6.46114E+17,samth#3420,2021-09-17,I recommend dump-memory-stats,,
4.62028E+17,StephenD#5938,2021-09-17,"The Syntax Parse Bee is now over for 2021.

Thank you to the participants!!!

We received 22 entries from 15 individuals:

 https://github.com/syntax-objects/Summer2021/issues

The final results of these submissions cover a wide range. Some are macros
that you could use in any Racket project. Others are syntax classes. Still
others are more like starter code for a new DSL.

The code inside these submissions is **very** informative. Whether you're
new to macros or a seasoned syntax parser, there is a lot to learn from.

- Ben + Stephen",,
4.62028E+17,StephenD#5938,2021-09-17,Is it possible to call @notjack 's `resyntax` from @Laurent O 's `quickscript`?,,
1.56786E+17,williewillus#8490,2021-09-17,It spits out so much data as to be useless tbh,,
6.46114E+17,samth#3420,2021-09-17,There are lots of options to see particular things you're interested in.,,
1.56786E+17,williewillus#8490,2021-09-17,"The documentation is really opaque the few times I've tried understanding it
Really wish I had the profilers that the jvm does",,
1.56786E+17,williewillus#8490,2021-09-17,Or that I can take a heap dump and analyze it offline,,
6.46114E+17,samth#3420,2021-09-17,"If you have questions about how to use it, I'm happy to help. It would indeed be nice to have all the tools the JVM does.",,
1.56786E+17,williewillus#8490,2021-09-17,I guess the first thing is how to get the largest object and its type by retained size,,
1.56786E+17,williewillus#8490,2021-09-17,"Aka ""if this object is freed and everything it references transitively is freed, how much memory do you get back?""",,
6.46114E+17,samth#3420,2021-09-17,There isn't a way to get that direction easily; dump-memory-stats (and the lower-level primitives it uses) are instead focused on answering the question of why something in particular is still live.,,
6.46114E+17,samth#3420,2021-09-17,The underlying Chez Scheme primitive gives you a list with information about what keeps each object alive. You could certainly use that to build the graph in the direction you're asking about.,,
4.62028E+17,StephenD#5938,2021-09-17,https://github.com/pmatos/racket-news/issues/69,,
2.66505E+17,notjack#9941,2021-09-17,"probably, haven't tried yet though",,
4.90866E+17,JOST GRANT#1516,2021-09-17,"Feel like I'm missing the obvious here; Is there a way to get 'slideshow' to use custom themes  / styling ? The black-text-on-white-background I find ""painful"" lol",,
8.14743E+16,jimpjorps#0001,2021-09-17,"I don't think there's any built-in theming, there's options for configuring fonts and colors and altering the background but nothing like switching Beamer themes",,
8.14743E+16,jimpjorps#0001,2021-09-17,the slideshow tutorial source has some guidance on how to set the slide-assembler to change the background and set font styles,,
4.90866E+17,JOST GRANT#1516,2021-09-17,"Will look into it, thanks! Yeah, I don't 'need' full-on beamer themes just some basic bg and fonts ""should do it"". lol",,
8.14743E+16,jimpjorps#0001,2021-09-17,playing with it a little since now my interest is piqued,,
8.14743E+16,jimpjorps#0001,2021-09-17,"```scheme
(current-title-color ""blue"")
(current-main-font ""Arial Narrow"")
(current-titlet
 (lambda (s)
   (colorize (text s (cons 'bold ""Times New Roman"") 40)
             (current-title-color))))
(define bg
  (filled-rectangle client-w client-h #:color ""Light Blue""))
(current-slide-assembler
 (lambda (title v-sep body)
   (cc-superimpose
    (let* ([body (colorize body ""red"")])
      (lt-superimpose
       bg
       (if title
           (vc-append v-sep
                      (titlet title) 
                      body)
           body))))))
```",,
8.14743E+16,jimpjorps#0001,2021-09-17,that gets the basics,,
8.14743E+16,jimpjorps#0001,2021-09-17,,https://cdn.discordapp.com/attachments/618895179343986688/888598288851415040/unknown.png,
8.14743E+16,jimpjorps#0001,2021-09-17,"seems like all the magic's in `current-slide-assembler`, you could theoretically do some pretty fancy layouts with it",,
6.46114E+17,samth#3420,2021-09-17,"I think there's a wiki page with some slideshow examples, some of which do a lot of customization",,
2.49069E+17,Dana#7772,2021-09-17,"I'm looking at getting started with racket and wanted to do unix command line tools, but the unix pipeline libraries are littered with unstable functions. How concerned should I be using them?",,
2.14881E+17,Moinate#6061,2021-09-17,"you might be looking for rash? https://docs.racket-lang.org/rash/index.html
Not sure exactly what you mean by ""do unix command line tools""",,
4.62028E+17,StephenD#5938,2021-09-18,@jimpjorps https://github.com/racket/racket/wiki/Slideshow,,üíØ (1)
4.90866E+17,JOST GRANT#1516,2021-09-18,"Thanks, will play with this in the next few days! Yeah, this looks pretty promising. Looks like 'bg' is just a using pict to draw that rectangle? Guess makes sense / works. lool",,
8.14743E+16,jimpjorps#0001,2021-09-18,"yeah, the whole language is just wrappers around `pict` that arrange and overlay the various slide elements",,
4.90866E+17,JOST GRANT#1516,2021-09-18,"Guess I ""should've expected"" this, but didn't piece that together till now really. lol",,
4.62028E+17,StephenD#5938,2021-09-18,Nobody expects the Spanish Inquisition,,
4.62028E+17,StephenD#5938,2021-09-18,I mean language oriented programming,,üòÜ (1)
4.83487E+17,jest#6646,2021-09-18,what is the point of gather.town?,,
8.14743E+16,jimpjorps#0001,2021-09-18,looks like a way to simulate a big meeting room via voice chat,,
8.14743E+16,jimpjorps#0001,2021-09-18,so you can move from group to group,,
4.62028E+17,StephenD#5938,2021-09-18,It‚Äôs free,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-18,"@jeapostrophe hey is SGL still the go-to library for OpenGL bindings? The package list describes it as ""*Legacy* OpenGL library"" and I can see it hasn't been updated in a little under 2 years but I don't see any newer alternatives.",,
1.84841E+17,Aperiodic Orbit#8099,2021-09-18,"correction, I don't see any 1st party alternatives",,
2.36947E+17,jeapostrophe#4261,2021-09-18,No. You want the opengl package. It is automatically generated from the khronos spec,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-18,https://pkgs.racket-lang.org/package/opengl this one?,,
4.90866E+17,JOST GRANT#1516,2021-09-18,"No idiomatic goodness though ... wonder how hard this would be to automate (suspect not much).
Really seems like the ""one advantage"" of SGL. lol",,
4.83487E+17,jest#6646,2021-09-18,"ayo, how do you execute another application in a CLI in racket? i want to run `ffmpeg -i`",,
4.83487E+17,jest#6646,2021-09-18,"nevermind,  subprocess",,
4.83487E+17,jest#6646,2021-09-19,"when i execute the ffmpeg command it gives me an ffmpeg error  ... :
```scheme
; absolute path for the command arguments
(define command (string-append "" -f concat -safe 0 -i \"""" file-list-path ""\"" -c copy zout.mp4"")) ; ""/mnt/shared/htcvids/4 image basics/LIST.txt"" -c copy zout.mp4
(define-values (sp out in err)
  (subprocess #f #f #f ""/usr/bin/ffmpeg"" command))

; i get this error:
Output #0, mp4, to ' -f concat -safe 0 -i ""/mnt/shared/htcvids/4 image basics/LIST.txt"" -c copy zout.mp4':
Output file #0 does not contain any stream
```",,
4.83487E+17,jest#6646,2021-09-19,"but when i paste that into the commandline and run it, it works fine",,
4.66395E+17,oaktownsam#0815,2021-09-19,You have to split  `command`. When `ffmpeg` is being run there it sees one long string argument.,,
4.66395E+17,oaktownsam#0815,2021-09-19,"Something like this should work
```scheme
(define command
  (list ""-f"" ""concat"" ""-safe"" ""0"" ""-i"" file-list-path ""-c"" ""copy"" ""zout.mp4""))
```",,
4.83487E+17,jest#6646,2021-09-19,"ahhh, sweet!",,
4.83487E+17,jest#6646,2021-09-19,"you sure it takes in a list? I get:
```scheme
. . subprocess: contract violation
  expected: (or/c path? string-no-nuls? bytes-no-nuls?)
  given: '(""-f"" ""concat"" ""-safe"" ""0"" ""-i"" ""./4 image exercises/LIST.txt"" ""-c"" ""copy"" ""zout.mp4"")
```
when i switch command to a list",,
4.66395E+17,oaktownsam#0815,2021-09-19,Oh right you need to pass them as arguments.,,
4.66395E+17,oaktownsam#0815,2021-09-19,I generally do `(apply subprocess ...)` so I can have them all in a list,,
4.83487E+17,jest#6646,2021-09-19,"alright cool, that works",,
4.83487E+17,jest#6646,2021-09-19,what is the limit of `2htdp/image` and `2htdp/universe` in terms of making games? i dont plan to make anything too huge but i do want to teach spritesheet animation for some pixel art,,
2.74358E+17,jesscxc#4846,2021-09-19,@Skallos may have some info on it üëÄ,,
1.55481E+17,Skallos#0001,2021-09-19,"Well, as far as I can tell, I don't think you can create any super complicated games. Simple games are entirely possible, though. Just gotta put the effort to build everything up.",,
1.55481E+17,Skallos#0001,2021-09-19,2htdp/image is all svgs. I don't really think of pixel art when I think of 2htdp/image.,,
1.55481E+17,Skallos#0001,2021-09-19,"As for 2htdp/universe, it can do animations alright. I've made a few before.",,
4.83487E+17,jest#6646,2021-09-19,does  Eli Barzilay  still hang around in the racket community or has he left o: ?,,
4.66395E+17,oaktownsam#0815,2021-09-19,Eli came to one of our gather meetups.  But I think he has a relatively low profile.,,
3.58051E+17,hazel#0271,2021-09-19,people have historically made very impressive stuff with just big-bang,,
3.58051E+17,hazel#0271,2021-09-19,but it's probably more effort than you want,,
4.90866E+17,JOST GRANT#1516,2021-09-19,"I'm shocked no-one has tried to make a Racket-clone of Pygame or something; Seems like there's a lot of interest in this space. Know there's some stuff that's more like ""classic console"" oriented like mode-lambda and r-cade",,ü•≥ (1)
2.14881E+17,Moinate#6061,2021-09-19,"I don‚Äôt see what a PyGame interface would add? To me pygame seems more primitive. What features are you thinking of ? At least with Big Bang you don‚Äôt have to write the event loop by hand, right?",,
4.90866E+17,JOST GRANT#1516,2021-09-19,"Just as a ""familiar enough"" api, I guess. The features Pygame I assume has that Big Bang wounldn't (please correct me if I'm wrong) is stuff like input handling? Though, if true; Can't imagine this would be too hard to implement lol",,
4.90866E+17,JOST GRANT#1516,2021-09-19,"There's a decent chance that Racket's built-in drawing capabilities is more performant than PyGame; Maybe it's better now with SDL2 ... but remember trying to use it over a decade ago and wanted to animate some handdrawn ""sprites"" and it just wasn't happening. In a weird-way, ultimately that led me to Lisp. loool",,
4.90866E+17,JOST GRANT#1516,2021-09-19,"(( It actually discouraged me from programming for a few years; Then started using Emacs because it was 'cool' for how batteries included it was -- and then started tweaking ELisp , then eventually started writing non-trivial Elisp, then CL. Then a loooong break due to family-health stuff, then trying to ""sell out"" for 2-3 years and go Java or C++ with no luck / progress, and now back to ""Lisp"" via Schemes. ))",,
4.90866E+17,JOST GRANT#1516,2021-09-19,One biiiigggg circle. lool,,"lisp (1),mage_groovy (1),coolspells (1)"
2.14881E+17,Moinate#6061,2021-09-19,"In the big-bang framework, the user can provide a ""mouse handler"" (called on mouse events, including enter/leave window) and a ""key handler"" (keyboard events). I think this is the kind of input handling you're talking about? It does not have built-in support for multi-key press (chord detection), but I would put that in the advanced category",,
2.14881E+17,Moinate#6061,2021-09-19,"What big-bang does not have is support for OO windowing, checkboxes, selection lists, etc. racket/gui for that.",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Well I'm more thinking along the lines of controller input; And yeah, multi-key chords is almost necessary for some genre of games and/or mechanics therein.",,
4.90866E+17,JOST GRANT#1516,2021-09-20,A 'proper' gamelib I'd assume probably wouldn't be trying to base off big-bang tbf,,
4.90866E+17,JOST GRANT#1516,2021-09-20,_looks into mode-lambda some more; Seems to be the closest aprox of 'Pygame but in Racket' there is right now._,,
4.62028E+17,StephenD#5938,2021-09-20,FWIW I believe Space invaders https://github.com/jeapostrophe/gamejam-2019 had both mode-lambda and 2htdp/universe (Big Bang) implementations,,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Doesn't look like either implementations non-trivially uses 2htdp; Unless there's another implementation outside of mode-lambda & lux I'm missing? Lux looks like another  ""draw stuff on-screen in realtime"" system afaict and not using (nor trying) to use a specific subset of the language like 2htdp",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"On  a semi-related note, thought it would be fun to see how much one could 'cheese' ""interactive development"" in this space by writing a `clever enough` macro for  https://github.com/fungos/cr . Like within the context of say  you have Raylib bindings, and since most of a given game or whatever in Racket is actually implemented at that level (ie: C) do you get that ""for free"" ? Because at that point Racket is mostly acting as a glue-lang like Python or does the limitations of the interpreter still make things less dynamic as a whole even if the 'bottom is mutable'?  lol (( Have almost no experience with mixing high-and-low-level languages in-general, and zero with hcr at this level ))",,
4.62028E+17,StephenD#5938,2021-09-20,I'm not familiar with the use of 'cheese'?,,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Like to ""cheese it""; Using non-ordinary circumstances to kinda-sorta get the same result.",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"It's almost the inverse of the older use of the term (meaning to run away, typically from the cops / authority figures) -- I think this version came from like 90s gaming circles iirc",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Also cheesed, cheesing, etc",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Well I guess it's just not the phrase, but the framing; It's not like `Hey, Bob! Cheese it!` it's more like `Hey, Bob Cheesed it!` loool",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"I guess and a tinge of tense of that example, but that's not inherent or anything.",,
5.24323E+17,Ben Kenobi#5683,2021-09-20,"Probably similar to ‚Äúhack‚Äù, as in ‚Äúit‚Äôs a hack but it works‚Äù",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Yeah, that's surely the ""better"" term to use in this context loool ; Likely way more apt to be understood in this community.",,
4.83487E+17,jest#6646,2021-09-20,"there are bindings to raylib in racket (https://github.com/arvyy/racket-raylib-2d) which i hope to update. https://www.raylib.com/games.html , raylib is a C framework style engine of sorts that uses opengl and works on a number of platforms, and it just provides the bare minimum for drawing textures and shape primitives. I think it could work well for those who want to ship a ""serious"" 2D game in racket",,
4.62028E+17,StephenD#5938,2021-09-20,"Yeah I'm out of my depth here. My main thought is the earlier discussion where @oaktownsam made start on interfacing with the GODOT 2D/3D game engine, and the more mature python version.?
https://github.com/samdphillips/racket-godot-experiment
https://github.com/touilleMan/godot-python",,
4.66395E+17,oaktownsam#0815,2021-09-20,"The Godot experiment got as far as triggering a ""hello world"" on the console from Godot.  So it needs a lot more work to do something interesting.",,
4.83487E+17,jest#6646,2021-09-20,"nonetheless , making a game in functional style is a hard sell lol... i feel i would have to use set! everywhere",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Still think Godot is the most pragmatic zero-to-something that most people could jump into and probably what I want to work on later-half of next year; Raylib is as-said by @jest  a lot less prebuilt and if one was to 'make an engine' for Racket with some relative performance concerns -- I'd see that as a plausible starting point. 

I was more-so thinking of Raylib within the context of cr.h though, to fake ""interactive development"" 'enough' with hot-code-reloading -- seems like you'd be able to get pretty far with a custom macro sprinkled liberally lol",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"But also, as Sam said; The current Godot bindings are VERY sparse -- and the very-very little I've poked around on them ; There's a loooooong-ways to go and not too much documentation as-of Godot 3.x; IIRC @oaktownsam was using the Python bindings to kinda get the idea ... but I'm hoping / praying Godot 4.x actually has more focus and documentation around this tbh",,
4.66395E+17,oaktownsam#0815,2021-09-20,How does raylib compare to SDL?,,
4.83487E+17,jest#6646,2021-09-20,i havent used sdl too much but raylib comprises of glfw and a lot of single file C header libraries. It's much less bloaty than SDL and just gets you running off the bat faster similar in some fashion to how `2htdp/image` and `2htdp/universe`  just provide drawing and a loop,,
8.14743E+16,jimpjorps#0001,2021-09-20,"there are definitely ways to handle state in a functional-friendly style, agents and observables and all that",,
4.83487E+17,jest#6646,2021-09-20,"iirc sdl just gives you windowing and a bunch of other stuff but you still eventually have to write low level graphics if  you want to do anything complicated like a game.... raylib does most of that for you already, you just draw textures and everything is reasonably fast",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"No deep experience with either; But SDL is more general-purpose rendering afaict and  Raylib was designed to teach game-programming -- in-practice they encroach a very similar space; But raylib provides a bunch of little nicities more useful within the context of game-programming specifically like a immediate-mode gui system, a custom shader language, etc",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Well thing raygui is technically a seperate-repo, but still lol",,
4.66395E+17,oaktownsam#0815,2021-09-20,Thanks.  It's been ages since I've really used SDL but as I recall it makes handling input and graphics nicely cross platform.,,
4.90866E+17,JOST GRANT#1516,2021-09-20,"SDL has obviously been ""around forever"" at least compared to Raylib; So there's an appeal in that itself -- but Raylib has been steadily growing the past five years or-so and think it has a bright future",,
8.14743E+16,jimpjorps#0001,2021-09-20,"raylib looks pretty straightforward to write bindings for, based on how many languages it has support for already",,
8.14743E+16,jimpjorps#0001,2021-09-20,https://github.com/georgjz/raylib-gambit-scheme,,
4.83487E+17,jest#6646,2021-09-20,"yep! raylib is the shortest path to: ""give me a game loop and a way to draw a ton of graphics fast!"", you have to write collision detection and animation yourself
SDL is more like ""give me a cross-platform wrapper around many operating systems and let me write the rendering engine and everything else myself""
Godot/etc is: ""give me everything, graphics, collision detection, animation, etc, i want to focus more on the game than I do on the  lower level engine""",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Yeah, actually looked into these bindings a bit before; Most complete I'm aware of in the Scheme-world. Cautiously optimistic to mess about with them before the end of the year. lol",,
4.83487E+17,jest#6646,2021-09-20,"is there a reason why drracket doesnt color out commented out s-exp blocks with `#;` ? that is, in #lang racket",,
4.83487E+17,jest#6646,2021-09-20,,https://cdn.discordapp.com/attachments/618895179343986688/889595678899195934/unknown.png,
4.83487E+17,jest#6646,2021-09-20,it does color it out in brown in BSL,,
4.83487E+17,jest#6646,2021-09-20,,https://cdn.discordapp.com/attachments/618895179343986688/889595800735326268/unknown.png,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Huh, weird; Never use s-exp comments just checked that even on the same line it highlights in `#lang racket` like screenshot 1.",,
4.90866E+17,JOST GRANT#1516,2021-09-20,As in ```#; (define test 0)```,,
2.75501E+17,Plane#0324,2021-09-20,"oh, that looks like a bug",,
6.46114E+17,samth#3420,2021-09-20,"It's so that it's easier to read -- the same reasons for syntax highlighting generally, with the idea that `#;` usually comments out code.",,
2.66505E+17,notjack#9941,2021-09-20,"I think that's not a good reason, personally",,
2.66505E+17,notjack#9941,2021-09-20,"""I cannot tell which code is commented out and which isn't"" hurts readability",,
4.90866E+17,JOST GRANT#1516,2021-09-20,Agreed. A comment is a comment; Don't think muddying the two ideas to make it easier to read a given s-exp while commented is a good-solution -- maybe Dr.Racket providing a popover or something when you mouse over a given commented section that shows the non-commented syntax highlighting or something may be a good compromise?,,
8.14743E+16,jimpjorps#0001,2021-09-20,"yeah, I would expect that to color the next sexp as a comment, especially since it's kind of a rarer comment form",,
8.14743E+16,jimpjorps#0001,2021-09-20,it being an exception breaks the semantic value of using color in the first place,,
2.66505E+17,notjack#9941,2021-09-20,"you can click where the comment starts and press backspace twice to see the highlighting, so I'm not convinced there's a great need to add more UI to make that smoother",,
6.46114E+17,samth#3420,2021-09-20,"I really dislike ""edit to perform some reading action""",,
2.75501E+17,Plane#0324,2021-09-20,"To me it seems like a violation of the principle of least astonishment, which is why it seemed like a bug to me ‚Äì I didn‚Äôt expect it to be intended behavior, though I do see the argument for it",,
2.66505E+17,notjack#9941,2021-09-20,"I do too, but I just don't buy that ""I want to see the syntax highlighting of this commented out code"" is a common-enough use case to warrant dedicated UI space",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Lol, I guess 'fair enough' and such a thing could be done I'm sure via an extension; Just don't think 'click where the comment starts' scales as-well if you have a s-exp that's requires non-trivial scrolling to traverse. :^P",,
2.66505E+17,notjack#9941,2021-09-20,"lots of editors have keyboard shortcuts for ""(un)comment out this line / selected text""",,
2.75501E+17,Plane#0324,2021-09-20,the mouseover thing does sound like a nice touch,,
2.75501E+17,Plane#0324,2021-09-20,i'm not volunteering to implement it though üëÄ,,
4.90866E+17,JOST GRANT#1516,2021-09-20,"I really haven't checked Dr.Rackets keybindings; Is there a quick ""comment/uncomment this s-exp"" ?",,
2.66505E+17,notjack#9941,2021-09-20,"it does sound nice. I don't think it's worth implementing. changing the default behavior for highlighting of `#;` comments is definitely worth doing, and implementing keyboard shortcuts for uncommenting commented code is also definitely worth doing if it hasn't been done already.",,
2.75501E+17,Plane#0324,2021-09-20,ok so,,
4.83487E+17,jest#6646,2021-09-20,"welp, guess ill file an issue and there can be a vote as to what most people consider the intuitive default should be",,
2.75501E+17,Plane#0324,2021-09-20,,https://cdn.discordapp.com/attachments/618895179343986688/889614231727652894/unknown.png,
2.75501E+17,Plane#0324,2021-09-20,there is this,,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Well, not arguing that it's necessary or anything; I just lean more to wanting a ""full-fledged ide"" than many seem to in the community. lol",,
2.75501E+17,Plane#0324,2021-09-20,after some attempts i haven't managed to input `c:m:~g:semicolon` but i tried,,
4.90866E+17,JOST GRANT#1516,2021-09-20,So I'm more than fine using-and-abusing lil ui elements / tweaks,,
8.14743E+16,jimpjorps#0001,2021-09-20,"alternately, some other way of indicating that an sexp is commented out besides changing the body color",,
2.75501E+17,Plane#0324,2021-09-20,the one thing i think drracket really needs is a nice little UI that lets you edit keybinds,,
2.75501E+17,Plane#0324,2021-09-20,tbh,,
2.75501E+17,Plane#0324,2021-09-20,that and i need to write that rainbow paren plugin,,
4.83487E+17,jest#6646,2021-09-20,"i want to move most of drrackets functionality into vscode some day üòå , but will need to start looking into decoupling drracket things and stick it into the lang server",,üíØ (1)
4.90866E+17,JOST GRANT#1516,2021-09-20,I thought 'faded syntax' but think it would be hard to do well across themes.,,
2.66505E+17,notjack#9941,2021-09-20,"hell I'd be happy with a UI that lets me just understand the keybindings, I can never figure out how something like `c:m:~g:semicolon` translates to what actual keys I'm supposed to press on my macos keyboard",,
2.75501E+17,Plane#0324,2021-09-20,"that was my challenge too just now, and i failed the challenge",,
2.66505E+17,notjack#9941,2021-09-20,"also, this. please.",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"What is there for Racket in VSCode ""Magic"" still?",,
8.14743E+16,jimpjorps#0001,2021-09-20,"magic racket, yeah",,
8.14743E+16,jimpjorps#0001,2021-09-20,it kind of works but it's a little fragile,,
4.83487E+17,jest#6646,2021-09-20,"magickracket works alright yeah, but it kind of crashes a few times",,
2.66505E+17,notjack#9941,2021-09-20,and it's missing some handy features,,
4.83487E+17,jest#6646,2021-09-20,when it does work it has good instant autocomplete and docs right in a window,,
2.66505E+17,notjack#9941,2021-09-20,https://github.com/jeapostrophe/racket-langserver/issues,,
8.14743E+16,jimpjorps#0001,2021-09-20,every once in a while racket-langserver will just throw up its hands and walk off to starbucks for a cake pop,,üòÜ (2)
8.14743E+16,jimpjorps#0001,2021-09-20,"and magic racket will just say ""uhh I dunno""",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Hey I'm sure it works better that the little I've messed with Gerbil, sadly. lol",,
4.83487E+17,jest#6646,2021-09-20,https://github.com/racket/drracket/issues vote on whether you guys think `#;` should be highlighted as a comment by default!,,
2.75501E+17,Plane#0324,2021-09-20,thanks for posting the issue,,
4.83487E+17,jest#6646,2021-09-20,"been opening a lot of issues on the drracket repo lately lol, wondering if robby is like..... please make this guy stop",,
2.75501E+17,Plane#0324,2021-09-20,i think community involvement is a good thing,,
2.75501E+17,Plane#0324,2021-09-20,of course i can't speak for anyone else,,
2.75501E+17,Plane#0324,2021-09-20,but i think you're helping things by posting issues,,
2.75501E+17,Plane#0324,2021-09-20,so i appreciate you trying to help make things better,,
4.83487E+17,jest#6646,2021-09-20,:meowblushcool:,,
2.75501E+17,Plane#0324,2021-09-20,"i'd like to contribute more to drracket, hopefully i'll be able to do that at some point",,
4.83487E+17,jest#6646,2021-09-20,one of the barriers to lisp mainstream adoption feels like IDE experience. I think most lispers use emacs and its a hard sell to ask someone to abandon their current editor and learn an entire new editor before even starting,,
8.14743E+16,jimpjorps#0001,2021-09-20,vscode has really lowered the barrier to entry for a bunch of languages,,
4.83487E+17,jest#6646,2021-09-20,"the killer feature for lisp is probably inlay hints making it effortless to see the names of the params needed to be plugged in, https://www.jetbrains.com/help/webstorm/inlay-hints.html which the API for it in vscode is finally getting stabilized next month so i hope to look into how to get that into magickracet soon(TM) üòä",,"üéâ (1),plusone (1)"
8.14743E+16,jimpjorps#0001,2021-09-20,"yeah, inlay hints are very nice",,
2.66505E+17,notjack#9941,2021-09-20,it'll be great for racket DSLs in particular too,,
2.66505E+17,notjack#9941,2021-09-20,"since if we can get the racket langserver to leverage the macro system for most of this info, people who make custom langs with racket will get to just reuse the regular racket langserver instead of implementing their own",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"On the opposite side of this; Emacs was my first real programming-love ... but man, is it hard to get ""regular people"" to use it, especially to learn a niche programming language family like Lisp.",,
4.83487E+17,jest#6646,2021-09-20,i never used emacs extensively lol... cant say i like configuration files s;,,
7.14999E+17,gingerydoo#7461,2021-09-20,"I always felt a kind of cognitive dissonance about Emacs. On the one hand, it's exactly what I want. On the other, it seems to be offering the flexibility of an operating system userspace in something other than the operating system implementation. If a GNU/Linux distribution felt more like a LispOS (e.g. Genera), wouldn't any text editor be as strong as Emacs?",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Ha that's actually really funny because tweaking / 'ricing' Emacs is what got me into programming ""for real"". Said this the other day (yesterday even?); But I ""started programming to make games"" when I was like 15 (over a decade ago now) -- in C++, someone in irc convinced me to switch to Python a few months in for PyGame ... was too slow to do what I wanted, namely hand-drawn high-quality 30fps+ ""sprites"" and was more into art at that age so basically gave up programming all-together for a few years -- in the interim I became interested in FLOSS and was a big RMS follower switched to Linux like a release or-two before Ubuntu-Netbook-Edition which would become Unity. Saw that RMS wrote an editor , obviously GNU Emacs. Was enticed by what many would call bloat loool. Irc client, tetris, org-mode, etc, began editing my config and grew to like 10k over the next 2-3 years, started learning Elisp, then moved a fair-bit to CL. Then there was a family health-crisis that took my attention for like 3-4+ years where I didn't do much of anything. When it all 'cleared up' , then I decided I need to ""grow up and learn a sellout language"" and couldn't get myself to actually do anything non-Lisp related so stupidly NUKED everything because if there's no going back, yadda yadda, spent like 2-3 years trying to learn Java, C++, Scala, and just little to no progress. There was about half-to-a-year where I got REALLY excited for Nim and then Covid hit and got burnout at work and just felt like soulless when I got home. And ... really the only thing that got me excited again were Lisps. So as-said the other day it was a BIIIIG long-loop for better or worse",,
4.90866E+17,JOST GRANT#1516,2021-09-20,Now I'm just beyond caring; Programming / Lisp is going to be a hobby for me for the foreseeable future and don't want to make that experience miiiissserable trying to become a corporate-boy :^P,,üíØ (2)
7.14999E+17,gingerydoo#7461,2021-09-20,"In my experience, corporate interests are not aligned with engineering principles.",,
7.14999E+17,gingerydoo#7461,2021-09-20,It's great when they are.,,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Yeah, I think outside of Lisp the big selling point of Emacs is this image-based live-redefinition which is what you'd see / expect in a LispOS like OpenGenera. It's just that this is so far gone from the norm now it's absolutely novel.",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Stuff like Pharo (and other Smalltalk Images) provide a similar dev experience, obviously; But they're much more niche than even Emacs. lol",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"So there's nothing magical about Emacs (weeellll , on paper); It's just the architecture is very different from the norm and that has certain effects -- that I'd argue are 'worth' the stated costs in complexity, macro-expanding to nonsense, etc.",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"I've mentioned it before, and obviously via ""the toplevel is hopeless"" mantra it's a strong-enough belief where it counts in the realm of Racket where it's not something that is likely to be prioritized (due to these and I'm sure other costs) ... but I'd be lying if I said I didn't miss this workflow",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"I think the live, iterative workflow in ELisp & CL were really what made me fall in love with programming, tbh. You sorta-kinda get tiny lil hints of this in Python but it pales to what is just standard practice in ""Classic Lisp""",,
4.90866E+17,JOST GRANT#1516,2021-09-20,I found https://mikelevins.github.io/posts/2020-02-03-programming-as-teaching/ a few months ago; And think it captures a LOT of my feelings on the topic,,
4.90866E+17,JOST GRANT#1516,2021-09-20,"Well, they're not aligned with exciting, inspiring technologies; And in a way I understand this. There is a hope to mitigate risk and maximize profit ... so most of these companies are going to play it as-safe as possible , so as boring / souless as possible. Even if you have a startup that actually puts itself out there, and tries to base itself on some new and/or niche technology -- how often do it end up being rewritten in EnterpriseLang 5-10 years out?",,
4.90866E+17,JOST GRANT#1516,2021-09-20,Fear of entropy I guess,,
7.14999E+17,gingerydoo#7461,2021-09-20,I have disappointing news for people with that fear.,,
4.90866E+17,JOST GRANT#1516,2021-09-20,loooool,,
4.90866E+17,JOST GRANT#1516,2021-09-20,"And as-said I ""get it""; At least from a business perspective, and it also makes it easier to hire and probably train ... but still; I'm a very 'particular person' and put me in a room and force me to 'do Java' for a few hours and I just feel the weight on me. Know it's stupid, and it's not me trying to be an elitist, smug lisp weenie, or anything like that ... it's just emotionally draining for some reason.",,
7.14999E+17,gingerydoo#7461,2021-09-20,"No, I agree. I was once rewarded with a propeller beanie from a costume store for leading a release that caused an increase in conversions with no similar variable change in the business. That permanently set me on an unconventional path, since I don't view the conventional ones as being respectful to employee interests long-term.",,
7.14999E+17,gingerydoo#7461,2021-09-20,I still have the stupid hat as a reminder.,,
4.90866E+17,JOST GRANT#1516,2021-09-20,Yeah I think there's a degree where this is healthy and even ideal in certain teams / situations; I just think I tend to take this to an extreme where I'm all-or-nothing / either-or but I'm like this a lot in my personal-life day-to-day so I guess it **shouldn't** shock me I am in the land of value-judgments for technology.  It still does though. lol,,
4.90866E+17,JOST GRANT#1516,2021-09-20,"@gingerydoo Btw, don't know if you're still looking for new names for xiden but thought of a dumb one the other day that still starts with an x -- xpat (like expatriation) lool",,
7.14999E+17,gingerydoo#7461,2021-09-20,I think we have that in common. I believe subjectivity needs to be controlled for in projects or else it complicates control over work. Control over work is a necessary condition for automation.,,
4.90866E+17,JOST GRANT#1516,2021-09-20,Well I think you can take that even further; Control over work is a necessary condition for 'good work'.,,üëç (1)
4.90866E+17,JOST GRANT#1516,2021-09-20,"It's almost implicit for automation; Because you need some kind of pipeline (systems of controls / standards) to automate in the first-place -- because you expect a given result to reliably propagate , so you need to control for the inputs. ""Good work"" is subjective and a value-judgement but that requires some kind of controlled input as-well or you just end up with 'too many cooks' at a certain point",,
4.90866E+17,JOST GRANT#1516,2021-09-20,"It's why the ""benevolent dictator for life"" model works so well in opensource, even though* to many it might even sound antithetical to `the spirit` of FLOSS.",,
1.55481E+17,Skallos#0001,2021-09-21,I would agree. Even simple games take so much effort.,,
2.49069E+17,Dana#7772,2021-09-21,"Hi, I'm trying to wrap my head around the racket docs and I can't figure out what boxes are for",,
2.66505E+17,notjack#9941,2021-09-21,"They're like mutable variables, but you can pass them around",,ü´ê (1)
2.66505E+17,notjack#9941,2021-09-21,"!rkt eval
```scheme
(define (inc! x)
  (set-box! x (add1 (unbox x))))

(define counter (box 0))
(inc! counter)
(displayln (unbox counter))
```",,
8.02004E+17,r16#4581,2021-09-21,1,,
5.24323E+17,Ben Kenobi#5683,2021-09-21,"Rust has a similar type: it‚Äôs a bit like a pointer, no?",,ü´ê (1)
4.66395E+17,oaktownsam#0815,2021-09-21,or a `ref` in SML,,plusone (2)
2.49069E+17,Dana#7772,2021-09-22,Huh. That seems like a concept that'll make sense to me later. Thanks!,,
2.64024E+17,Eutro#0016,2021-09-22,"Rust has:
- Cells that provide interior mutability
- Boxes that allocate on the heap",,
5.24323E+17,Ben Kenobi#5683,2021-09-22,"Ah, so Cell is closer than Box? And then Box<Cell<>> is a heap-allocated mutable?",,
2.64024E+17,Eutro#0016,2021-09-22,Yes,,
2.64024E+17,Eutro#0016,2021-09-22,"There's other similar types and other combos that are more common, though",,
4.90866E+17,JOST GRANT#1516,2021-09-22,Is Frog still recommended over https://github.com/rmculpepper/racket-jeremiah or https://github.com/pmatos/darwin ? All haven't been touched in sometime; Frog actually had the latest commit (this year lool) -- but it looks like Jeremiah has had the most commits since Frog announced it was winding down.,,
2.64024E+17,Eutro#0016,2021-09-22,Syntax Parse Bee stickers just arrived today for me :meowblush: thank you very much,,üêù (3)
4.83487E+17,jest#6646,2021-09-22,"lol, not sure if youre interested anymore, if not just ignore, but it seems this also does it in the reverse case, e.g, kind of a bug for my use case but someones other attempted worked so its fine :9, thanks tho
```scheme
(rangify (list 7 4 3 2))
;; produces '(7 (2 4)) , reorganizes 4 3 2 and does (2,4)
```",,
4.90866E+17,JOST GRANT#1516,2021-09-22,Are we allowed to make video-content covering the HTDP course? Not sure how such a thing works with copyrighted material even if it's intended for educational-purposes,,oof (1)
4.62028E+17,StephenD#5938,2021-09-22,Contact the authors,,
4.90866E+17,JOST GRANT#1516,2021-09-22,"Yeah, that's fair",,
4.90866E+17,JOST GRANT#1516,2021-09-22,Also re: Frog guess I'm going to mess around with all three for a bit but feel like I'm going to stay upstream because I don't know enough about webdev to understand the nuance / changes between it and Jeremiah.,,
4.90866E+17,JOST GRANT#1516,2021-09-22,Guess Pollen is an option too; Seen some hae made sites around that as-well,,
6.46114E+17,samth#3420,2021-09-22,"You're definitely allowed to do that. You should be aware that a lot exists already, though -- you should check it out and you might get some ideas.",,
4.90866E+17,JOST GRANT#1516,2021-09-22,@samth Neat! Got any links? All I've been able to find are the Edx 2-part course loosely based off it called 'How To Code',,
6.46114E+17,samth#3420,2021-09-22,"If that's the one by Gregor Kiczales then I recommend that one, it's very well done",,
6.46114E+17,samth#3420,2021-09-22,Other good ones: https://m.youtube.com/channel/UCiOtuyV0n_l2ZfHGd-P8mhA,,
6.46114E+17,samth#3420,2021-09-22,I don't know this one: https://m.youtube.com/playlist?list=PLA_-EWSPTJcuy5VyJyvemxydu16kcAK0S,,
4.90866E+17,JOST GRANT#1516,2021-09-22,"Yeah, it is. Also thanks for the two YT links! Didn't find those searching",,
6.46114E+17,samth#3420,2021-09-22,https://m.youtube.com/playlist?list=PLD0EB7BC8D7CF739A,,
6.46114E+17,samth#3420,2021-09-22,"That's by John Clements, author of the stepper and the racket release manager",,
6.46114E+17,samth#3420,2021-09-22,"Finally, my class has a very extensive series of videos. https://legacy.cs.indiana.edu/classes/c211/index.html",,
4.90866E+17,JOST GRANT#1516,2021-09-22,Very Cool ! A lot more than I expected. :^)  Working on an 'awesome-rackoon' repo that I plan to throw links to a bunch of different entry-level Racket material and gonna add all of these!,,ü•≥ (1)
6.46114E+17,samth#3420,2021-09-22,Many of them are up on that web page and the rest are in the same YouTube channel,,
4.90866E+17,JOST GRANT#1516,2021-09-22,Loool that comic,,
6.46114E+17,samth#3420,2021-09-22,"Except the one I said I didn't know, they're all by people who are connected in some way to the authors, so we all have experience with it",,
4.90866E+17,JOST GRANT#1516,2021-09-22,"I'm still leaning to making videos around drawing things on-screen at an introductory level, think that's inherently more gripping to a casual audience -- but will poke my head around these linked videos a bit; Feel like there's got to be a way to bridge the gap a bit more than I've been able to dream up thusfar",,
6.46114E+17,samth#3420,2021-09-22,"@JOST GRANT on that topic, see https://legacy.cs.indiana.edu/classes/c211/lecture7.html on `big-bang`, although they're really designed as part of a course and standalone videos might do different things",,üíØ (2)
4.83487E+17,jest#6646,2021-09-23,@samth do you guys have auto-grading tools to make sure students follow the design recipe? or is that something thats all just manually done?,,
6.46114E+17,samth#3420,2021-09-23,Basically we just do it manually,,
4.83487E+17,jest#6646,2021-09-23,"so i notice gregor in his edx videos always use:
```scheme
;; double semicolon for comments
```
why is the lisp/scheme tradition to use double semicolons on the start of a line? (according to the racket style guide)
is there any more meaning to this other than style? since other programming languages use `///` for a documentation comment so it shows in the editor",,
4.83487E+17,jest#6646,2021-09-23,"Also makes me wonder what the pros and cons are of scribble since it seems like the documentation is separate from the implementation, where as most langues and their documentation system just have a comment right above the implementation and just parse out to generate the docs:
```javascript
/**
 * Prints a circle.
 *
 * @param {Circle} circle
 */
function printCircle(circle) {
    /** @this {Circle} */
    function bound() { console.log(this) }
    bound.apply(circle)
}
```",,
1.56786E+17,williewillus#8490,2021-09-23,There's a way to do inline docs w scribble but it was kind of awkward when I tried,,
8.14743E+16,jimpjorps#0001,2021-09-23,I don't think there's a particular reason or meaning for the semicolon convention besides that more semicolons = higher in the hierarchy,,
8.14743E+16,jimpjorps#0001,2021-09-23,like you'll see ;;;; for comments at the top of source files,,
8.14743E+16,jimpjorps#0001,2021-09-23,and ;;; for section headers,,
8.14743E+16,jimpjorps#0001,2021-09-23,"a lot of lisp things are ""someone somewhere started doing it and other people copied them because they thought it looked cool""",,
4.83487E+17,jest#6646,2021-09-23,imo its just tedious to do another semicolon lol... at least solely for style...,,
4.83487E+17,jest#6646,2021-09-23,"```scheme
#lang racket
(define (conversion f)
  (* 5/9 (- f 32)
    )
  )
```
https://docs.racket-lang.org/style/Textual_Matters.html
lol, i actually prefer this bad style, i mean it does look worse in a way? but i use vim keybindings and if i hit DD to cut a line, i dont want to pull in all the closing parentheses when i just want to move a single expression up or down. Lisp is lowkey vim hostile!",,
2.75501E+17,Plane#0324,2021-09-23,"oh that's interesting, the hierarchy idea never occurred to me",,
2.75501E+17,Plane#0324,2021-09-23,i guess that makes sense,,
2.75501E+17,Plane#0324,2021-09-23,i never used `;;;` or `;;;;` before lol,,
2.75501E+17,Plane#0324,2021-09-23,"i thought `;;` looked nice though, it just stands out visually",,
2.75501E+17,Plane#0324,2021-09-23,"well, you call it bad style, but then you say you prefer it, so since it's subjective maybe for you it's a good style?  there's no rule saying you have to write code like everyone else",,
2.75501E+17,Plane#0324,2021-09-23,i think if you're concerned about editor stuff though you can possibly find ways to make the editor work with the usual style,,
2.75501E+17,Plane#0324,2021-09-23,"like instead of deleting a line, you can delete an sexp, like `%v%x`",,"‚è´ (1),plusone (1)"
8.14743E+16,jimpjorps#0001,2021-09-23,the question of code style pretty much has to do with who else is touching it,,
8.14743E+16,jimpjorps#0001,2021-09-23,if you and everyone else working on a project like the hanging-parenthesis style then go wild,,
2.75501E+17,Plane#0324,2021-09-23,and then once you get the editor support stuff you can go the path of least resistance and use the usual style,,
2.75501E+17,Plane#0324,2021-09-23,if you want,,
2.75501E+17,Plane#0324,2021-09-23,"(and if you don't want, that's ok too)",,
2.75501E+17,Plane#0324,2021-09-23,"i've always taken a ""when in rome"" approach to style",,
2.75501E+17,Plane#0324,2021-09-23,i'm going to remember this way of putting it,,
2.75501E+17,Plane#0324,2021-09-23,<https://github.com/cursive-ide/cursive/issues/1983> <- this is interesting,,
8.14743E+16,jimpjorps#0001,2021-09-23,it's interesting that racket doesn't have docstrings like clisp or clojure does,,
8.14743E+16,jimpjorps#0001,2021-09-23,scribble's nice but it doesn't really serve the same quick-reference purpose,,
2.75501E+17,Plane#0324,2021-09-23,i posted about that in the rhombus discussions although i think my post was redundant (oops!) <https://github.com/racket/rhombus-brainstorming/discussions/175>,,
4.66395E+17,oaktownsam#0815,2021-09-23,This is the way.,,
3.79445E+17,joohnym#9531,2021-09-23,Does doxygen support racket ?,,
3.79445E+17,joohnym#9531,2021-09-23,"I'm a fan of docstrings, although a good comment based style guide also works",,
3.79445E+17,joohnym#9531,2021-09-23,Like right before the function starts,,
4.66395E+17,oaktownsam#0815,2021-09-23,"TIL: `format-symbol` can turn keywords into symbols.  I've been manually converting to strings then to symbols like a sucker.
<https://docs.racket-lang.org/reference/syntax-util.html#%28def._%28%28lib._racket%2Fsyntax..rkt%29._format-symbol%29%29>",,
2.64024E+17,Eutro#0016,2021-09-23,TIL of `define/with-syntax` so I can `with-syntax` without shifting my indentation right,,ü•≥ (3)
5.24323E+17,Ben Kenobi#5683,2021-09-23,dab. Lisp is not vim hostile. I use vim for all editing.,,
5.24323E+17,Ben Kenobi#5683,2021-09-23,And i _will_ (nicely) üî• anyone who claims otherwise üòõ,,
1.93202E+17,rocketnia#4517,2021-09-23,"The use of multiple semicolons is something I think I first heard about last year or this year, and I think today may be my first time hearing about three or more.

I find it a little odd to consider switching my style to that. At some point several years ago I basically gave up on line-ending comments because I'd constantly have to adjust their spacing and move them around if the line got too long. I used to use them a lot more often, though.",,
7.73175E+17,meowüé∫#2842,2021-09-24,"I use one for end-of-line comments, two for regular comments, three for headers, four for marking the beginning of a section (preceded by a form feed).",,
7.73175E+17,meowüé∫#2842,2021-09-24,"eg
```Scheme
...
(foo)
^L
;;;; bar and qux utilities

;;; bar frobnicators
(define (bar-frobber bar)
  ;; We need to discombombulate bar first.
  (discombombulate bar) ; discombombulates bar
  ...)
```",,
2.64024E+17,Eutro#0016,2021-09-24,"I use 3 at the end of each line when I'm feeling particularly like writing some enterprise level imperative software:
```scheme
(define (start-foo-factory-builder)
  (let/cc return
    (pre-foo-factory-builder-start);;;
    (define foo-factory-builder #;(omitted for brevity));;;
    (start-foo-factory-builder-teardown);;;
    (return foo-factory-builder);;;
    (raise 0);;; // Unreachable
));;;
```",,
2.64024E+17,Eutro#0016,2021-09-24,Just to make sure that the lines are properly terminated,,ü§£ (3)
2.64024E+17,Eutro#0016,2021-09-24,This makes the code more robust and maintainable because it will still work properly if you accidentally write things after the end of a line; even if one or two of the semicolons are removed by accident,,
2.14881E+17,Moinate#6061,2021-09-24,You forgot the /s,,
2.14881E+17,Moinate#6061,2021-09-24,What are your thoughts on this: should Beginning Student Language forbid multiline strings?,,
2.14881E+17,Moinate#6061,2021-09-24,"They are currently allowed but
1. include ugly \n that cannot be displayed because `display` is an Advanced Student function.
2. It is difficult for beginners to fidn the error casued by amismatched quote, even if DrRacket has correctly syntax hilighted. In fact they have trouble even diagnosing the problem.",,
6.46114E+17,samth#3420,2021-09-24,@Moinate I'd be in favor of removing them,,
3.5323E+17,Alex Knauth#4895,2021-09-24,I disagree. The `\n` was the first character I saw that got me to understand that 2-characters in the source code can correspond to 1-character in the data. It was what got me thinking about data as something deeper than just the text representing it in source-code or printing.,,
2.14881E+17,Moinate#6061,2021-09-24,"Beginning Student Mode, though...",,
3.5323E+17,Alex Knauth#4895,2021-09-24,Because as a student my curiosity lead me to explore multi-line strings before anything else that would have revealed a similar concept,,
2.14881E+17,Moinate#6061,2021-09-24,imo - If you're going to allow \n you need to have a way to print it out as a newline,,
2.14881E+17,Moinate#6061,2021-09-24,"interesting idea, though, i'll think about the implications",,
2.14881E+17,Moinate#6061,2021-09-24,"I guess `""This string contains \""some quoted string\"" ...""` would still be a possibility for that enlightenment. Uh hard to type backslashes",,
3.5323E+17,Alex Knauth#4895,2021-09-24,"I guess I feel nostalgic because it was the first ""mystery"" that I felt like I solved in those early exploring days",,
3.29023E+17,nixin72#3554,2021-09-24,"Hmm, why does this return a successful error code? 
```
$ raco pkg show some-non-existant-package
Installation-wide:
 [none]
User-specific for installation ""8.2"":
 [none]
```
Most other package managers return a failure code if the package you search for wasn't found üòï",,
3.5323E+17,Alex Knauth#4895,2021-09-24,"I would expect a failure code for trying to install a non-existant package, but not for trying to search one?",,
3.29023E+17,nixin72#3554,2021-09-24,But it failed to find what you told it to look for,,
2.75501E+17,Plane#0324,2021-09-24,returning a failure code sounds useful from an automation pov,,
4.83487E+17,jest#6646,2021-09-24,"@samth are there for loops in the BSL/ASL languages? also do you guys use all the teaching languages? BSL, ISL, ASL ? or just two of them since i hear other teachers opt for only 2",,
4.66395E+17,oaktownsam#0815,2021-09-24,Sounds like a good feature request,,
3.29023E+17,nixin72#3554,2021-09-24,"That's the issue I'm running into now, it's making it very hard to detect from another script if it's installed",,
6.46114E+17,samth#3420,2021-09-24,We don't use ASL,,
6.46114E+17,samth#3420,2021-09-24,We only cover things in the 2nd edition of the book,,
3.29023E+17,nixin72#3554,2021-09-24,Seems like it‚Äôs probably an easy change to make? I‚Äôll look into if I can make a PR,,racketflat (4)
2.14881E+17,Moinate#6061,2021-09-24,For ‚Äúloops‚Äù in Racket are most emphatically not for beginners. You can require racket/for into the language if u want them.,,
2.14881E+17,Moinate#6061,2021-09-24,Although I‚Äôve explored the idea honestly - especially after hearing a talk about how ‚Äúchunking‚Äù makes more complex concepts easier to use / understand?,,
2.14881E+17,Moinate#6061,2021-09-24,My non scientific conclusion was that students only learn to look for the appropriate existing tool instead of how to build something themselves.,,
4.83487E+17,jest#6646,2021-09-24,"yeah, deyrfuses model of skill acquisition states beginners/novices need ""context free if X happens,  do Y"" rules",,
4.83487E+17,jest#6646,2021-09-24,"question, how would i flatten 1 level of parens? i supposed this is what splicing is?",,
2.14881E+17,Moinate#6061,2021-09-24,"Probably. `,@` when splicing",,
4.83487E+17,jest#6646,2021-09-24,"e.g `(list (list ""a"" ""b"") 1 2)` i want get rid of the way outer ones but not the nested list ones `(list ""a"" ""b"") 1 2`",,
4.83487E+17,jest#6646,2021-09-24,ahh,,
4.83487E+17,jest#6646,2021-09-24,"how come i cant eval this?
```scheme
(eval '((define n 2) (define y 1) (define (t n y v) (+ n 4 v)) (t (+ 2 1) n 6)))
; ERROR:  define: not allowed in an expression context in: (define n 2)
```",,
4.83487E+17,jest#6646,2021-09-24,"```scheme
(eval '((define x 1) (+ 1 x)))
;define: not allowed in an expression context in: (define x 1)
``` same with this",,
4.83487E+17,jest#6646,2021-09-24,"ohhh, had this before, i had to cons 'begin onto this lol",,
4.83487E+17,jest#6646,2021-09-24,on a different note i feel like recursion is harder to teach than for loops.... and if i squint at a tail recursive function it feels like its more or less a for loop lol....,,
4.83487E+17,jest#6646,2021-09-24,@Moinate OH! what university do you teach at?,,
2.14881E+17,Moinate#6061,2021-09-24,"Umm gotta retain some pretense of anonymity on Discord, soz.",,
2.14881E+17,Moinate#6061,2021-09-24,Agreed that iterative is easier than functional in general.,,
2.14881E+17,Moinate#6061,2021-09-24,"But I‚Äôm on the ‚Äúif it doesn‚Äôt change your thinking it‚Äôs not worth learning‚Äù bus, whoever said that.",,
2.14881E+17,Moinate#6061,2021-09-24,Plus mutation is a pain in the butt for weird inexplicable errors,,
3.5323E+17,Alex Knauth#4895,2021-09-24,"Expression-based for loops like `for/list` and list-comprehensions are easier, but mutation-based not as much, though I am biased towards functional programming",,
2.14881E+17,Moinate#6061,2021-09-24,I hate that to understand Java your mental model needs to include some kind of low level memory layout‚Ä¶ what changes to parameters get passed back to a caller. If you use a HashMap in a recursive function you have to undo your changes as you exit. ü§Æ This is why people think CS doesn‚Äôt make any sense.,,
2.14881E+17,Moinate#6061,2021-09-24,"So praised be Functional First, lol.",,
2.66505E+17,notjack#9941,2021-09-24,"that's more the fault of the java collections framework than the java language, you could imagine a different collections system where `Map` is immutable by default and persistent",,
2.66505E+17,notjack#9941,2021-09-24,the more frustrating bit is the limit on stack depth,,
3.58051E+17,hazel#0271,2021-09-24,is the collections framework not part of the language?,,
3.58051E+17,hazel#0271,2021-09-24,also does Java have TCO yet,,
4.66395E+17,oaktownsam#0815,2021-09-24,More like it's the standard library.,,
3.58051E+17,hazel#0271,2021-09-24,I don't consider the stdlib separate from the language in most cases,,
3.58051E+17,hazel#0271,2021-09-24,aside from technical reasons,,
4.66395E+17,oaktownsam#0815,2021-09-24,"Yeah it's big ""L"" vs. little ""l"" language.",,üòÑ (1)
3.58051E+17,hazel#0271,2021-09-24,"like while learning OCaml, I was told ""oh, the standard library sucks because XYZ, you should use Core or Batteries instead""",,
3.58051E+17,hazel#0271,2021-09-24,"and I was like ""damn. that *sucks*""",,
3.58051E+17,hazel#0271,2021-09-24,"since still, the overwhelming majority of OCaml code you come across organically uses the standard library, and you have to interoperate with it",,
2.66505E+17,notjack#9941,2021-09-24,it didn't use to be!,,
3.58051E+17,hazel#0271,2021-09-24,regardless it's part of the stdlib now,,
3.58051E+17,hazel#0271,2021-09-24,this is also how I feel about Scala and Guava,,
3.58051E+17,hazel#0271,2021-09-24,I know there is a massive separation between these two,,
3.58051E+17,hazel#0271,2021-09-24,"in Scala you're spending most of your time interoperating with Java code that's decidedly not functional-first, especially",,
2.66505E+17,notjack#9941,2021-09-24,my main point is that the mistakes in the collections framework and the mistakes in the language are orthogonal and we could totally screw up collections in racket/rhombus or any other language in the same way,,
2.66505E+17,notjack#9941,2021-09-24,taking the `HashMap` API and shoving it into racket without changes doesn't really improve the situation :p,,
3.58051E+17,hazel#0271,2021-09-24,oh for sure,,
3.58051E+17,hazel#0271,2021-09-24,but the point is that if you have to subst in another standard library to make your language Good,,
3.58051E+17,hazel#0271,2021-09-24,that's an indicator that your language might Suck,,
2.66505E+17,notjack#9941,2021-09-24,_cough_ `rebellion` _cough_,,
3.58051E+17,hazel#0271,2021-09-24,I don't consider rebellion to be mandatory,,
3.58051E+17,hazel#0271,2021-09-24,no offense,,
3.58051E+17,hazel#0271,2021-09-24,I consider Guava to be basically mandatory to write Java without wanting to die,,ü§£ (1)
3.58051E+17,hazel#0271,2021-09-24,which makes my data structures class annoying,,
2.66505E+17,notjack#9941,2021-09-24,java without guava is better off than racket without rebellion since it at least has stream pipelines and `Optional` in the stdlib,,
2.66505E+17,notjack#9941,2021-09-24,and also comparators,,
2.66505E+17,notjack#9941,2021-09-24,"in racket, if you want to sort something without copying it into a list or vector, you just, can't",,
3.58051E+17,hazel#0271,2021-09-24,"I mean maybe this is your experience I guess
I haven't really run into these issues while writing software, even though I know they exist",,
3.58051E+17,hazel#0271,2021-09-24,and I think Rhombus should 100% overhaul collections,,
3.58051E+17,hazel#0271,2021-09-24,but like. mm.,,
2.66505E+17,notjack#9941,2021-09-24,having persistent maps in the stdlib is pretty great in racket,,
3.58051E+17,hazel#0271,2021-09-24,yes,,
3.58051E+17,hazel#0271,2021-09-24,I think that Racket just suffers from a deficiency of collection types and generic collections,,
2.66505E+17,notjack#9941,2021-09-24,"also structs are annoying at times, and generic interfaces too",,
3.58051E+17,hazel#0271,2021-09-24,also Java `Optional` is Mildly Broken in the presence of null,,
2.66505E+17,notjack#9941,2021-09-24,comparators. I also really really miss comparators.,,
2.66505E+17,notjack#9941,2021-09-24,@hazel fun fact: I know the folks who are currently Fixing null in java,,
3.58051E+17,hazel#0271,2021-09-24,right,,
3.58051E+17,hazel#0271,2021-09-24,I appreciate the work,,
3.58051E+17,hazel#0271,2021-09-24,it's just like. gaah,,
3.58051E+17,hazel#0271,2021-09-24,I think Java has too much history behind it,,
2.66505E+17,notjack#9941,2021-09-24,gaah indeed,,
2.66505E+17,notjack#9941,2021-09-24,it's old and widely used and therefore terrible,,
3.58051E+17,hazel#0271,2021-09-24,like. so many things in Java are That Way because backwards compatibility,,
3.58051E+17,hazel#0271,2021-09-24,"the thing which I fucking *love* about Racket is that whenever I look up why things are the way they are, it's very rarely ""historical reasons""",,
3.58051E+17,hazel#0271,2021-09-24,in Java that's the rationale for 50% of things,,
2.66505E+17,notjack#9941,2021-09-24,"I can think of a _lot_ of things that are that way for racket, actually",,
3.58051E+17,hazel#0271,2021-09-24,such as?,,
3.58051E+17,hazel#0271,2021-09-24,"only thing off the top of my head is the argument order for `member` vs `set-member?`, and the abomination that is `hash-map`",,
2.66505E+17,notjack#9941,2021-09-24,"open the docs, search `syntax-local-`, and pick a random function",,
2.66505E+17,notjack#9941,2021-09-24,also `hash-keys` returning a list instead of a set. also there not being a way to have a generic implementation of `gen:set` that's also immutable. also `dict-ref` on association lists. also `datum->syntax` working the way it does. also the fifty different ways to represent source locations.,,
2.66505E+17,notjack#9941,2021-09-24,also `write`/`display`/`print` confusion,,
3.58051E+17,hazel#0271,2021-09-24,"my point is that this is Less than the historical baggage for something like Java, at least",,
4.66395E+17,oaktownsam#0815,2021-09-24,The source location one is real weird,,
3.58051E+17,hazel#0271,2021-09-24,srclocs are the other annoying one,,
3.58051E+17,hazel#0271,2021-09-24,"fighting that rn, actually",,
2.66505E+17,notjack#9941,2021-09-24,"other annoying one: `map` is for lists, `sequence-map` is for sequences, instead of `list-map` for lists and `map` for sequences, and similarly for other list processing functions",,
3.58051E+17,hazel#0271,2021-09-24,I think a lot of Racket's issues really stem from its Scheme heritage,,
3.58051E+17,hazel#0271,2021-09-24,which is why I think Rhombus is probably going to whip ass,,
2.66505E+17,notjack#9941,2021-09-24,`cons` / `car` / `cdr` üò≠,,
2.66505E+17,notjack#9941,2021-09-24,lists and pairs being the same datatype. improper lists existing at all.,,
3.58051E+17,hazel#0271,2021-09-24,I have seen 0 good uses for improper lists,,
3.58051E+17,hazel#0271,2021-09-24,they are an abomination,,
2.66505E+17,notjack#9941,2021-09-24,they should be banished to the shadow realm,,
3.58051E+17,hazel#0271,2021-09-24,lists and pairs being the same datatype was so bad they had to remove it in the student languages,,
2.66505E+17,notjack#9941,2021-09-24,`list?` being linear time is bonkers,,
3.58051E+17,hazel#0271,2021-09-24,it's What,,
3.58051E+17,hazel#0271,2021-09-24,but yeah,,
3.58051E+17,hazel#0271,2021-09-24,like,,
3.58051E+17,hazel#0271,2021-09-24,so my point here is that,,
3.58051E+17,hazel#0271,2021-09-24,the standard library is not separate from the language,,
3.58051E+17,hazel#0271,2021-09-24,although observationally I've needed Rebellion a lot less in Racket than I have needed Guava in Java,,
2.66505E+17,notjack#9941,2021-09-24,it's much less useful than guava for now,,
3.58051E+17,hazel#0271,2021-09-24,I mean it's more like,,
3.58051E+17,hazel#0271,2021-09-24,I haven't felt like I've needed it?,,
3.58051E+17,hazel#0271,2021-09-24,most of the time something I would want from Rebellion is a tiny lil small thing,,
3.58051E+17,hazel#0271,2021-09-24,and then I just reimplement it in a `helpers.rkt` or something,,
3.58051E+17,hazel#0271,2021-09-24,and bam,,
3.58051E+17,hazel#0271,2021-09-24,this cannot be said for a lot of the stuff I would use out of Guava,,
2.66505E+17,notjack#9941,2021-09-24,yeah. it's a big package.,,
3.58051E+17,hazel#0271,2021-09-24,"that's also part of why I stray away from it at times. I considered using it in Sawzall in order to specify comparators for sorting. but I determined against it, b/c that would not only result on a dependency on Rebellion (which I don't care about), but a *user-facing* one (which I care more about)",,
2.66505E+17,notjack#9941,2021-09-24,"an API dep, right",,
2.66505E+17,notjack#9941,2021-09-24,since users would have to pass in comparators to sawzall,,
3.58051E+17,hazel#0271,2021-09-24,right,,
3.58051E+17,hazel#0271,2021-09-24,"not only does that mean *literally* just more `require`s, it also means people unfamiliar with Rebellion go ""huh wait whuh""",,
3.58051E+17,hazel#0271,2021-09-24,"it was really important for me that while Sawzall is super heavily designed around threading macros, _they're not mandatory_",,
3.58051E+17,hazel#0271,2021-09-24,"since. yknow. not everyone wants to program like that. even if I do, and it makes more intuitive sense most of the time.",,
2.66505E+17,notjack#9941,2021-09-24,threading is functionally mandatory with sawzall. mismatches between unthreaded user code and the threaded example code would be a huge barrier.,,
3.58051E+17,hazel#0271,2021-09-24,I mean yeah,,
2.66505E+17,notjack#9941,2021-09-24,"it's even mandatory _which_ threading library you use, since they don't all have the same syntax and the examples use the `threading-lib` syntax.",,
2.66505E+17,notjack#9941,2021-09-24,API deps are hard. I would say the purpose of a standard library is to give you all the stuff you need to define APIs. stuff that's just needed for implementations doesn't need to be there.,,üóíÔ∏è (1)
3.58051E+17,hazel#0271,2021-09-24,"that one's not true, rackjure and srfi-197 [not in Racket I think] would work",,
3.58051E+17,hazel#0271,2021-09-24,the only time I hard depend on threading-lib in examples is when piping Sawzall into Graphite directly,,
3.58051E+17,hazel#0271,2021-09-24,where I use the hole marker,,
3.58051E+17,hazel#0271,2021-09-24,and actually I should probably not do that,,
2.66505E+17,notjack#9941,2021-09-24,"the threading style I use is this:

```scheme
(require fancy-app)

(define (~> x . fs)
  (for/fold ([x x]) ([f (in-list fs)])
    (f x)))

(~> input
    (f _ a b c)
    (g x _ y z))
```",,
2.66505E+17,notjack#9941,2021-09-24,honestly the hole markers should be mandatory. threading without hole markers was a mistake.,,
3.58051E+17,hazel#0271,2021-09-24,this is not the Usual Threading Syntax though,,
3.58051E+17,hazel#0271,2021-09-24,"if it's standardized enough to be a SRFI and [for some reason] a Clojure selling point, it's what I'm gonna assume, ig",,
3.58051E+17,hazel#0271,2021-09-24,also I don't really agree w/ mandatory hole markers,,
2.66505E+17,notjack#9941,2021-09-24,the `~>` vs `~>>` distinction goes away if the hole is explicit,,
2.66505E+17,notjack#9941,2021-09-24,I would say that it is when you're using `fancy-app`. It's nicer with functions as bare identifiers and function-returning functions too. `(~> 1 add1)` and `(~> 1 (values add1))` both work correctly and return 2.,,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-24,hey uh,,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-24,,https://cdn.discordapp.com/attachments/618895179343986688/891157373278887946/unknown.png,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-24,how do u do this?,,
3.58051E+17,hazel#0271,2021-09-24,using a keyboard,,üòÇ (1)
2.66505E+17,notjack#9941,2021-09-24,hint:,,
2.66505E+17,notjack#9941,2021-09-24,"!rkt eval
```scheme
(< 10 100)
```",,
8.02004E+17,r16#4581,2021-09-24,#t,,
2.66505E+17,notjack#9941,2021-09-24,"!rkt eval
```scheme
(< 10 -5)
```",,
8.02004E+17,r16#4581,2021-09-24,#f,,
3.58051E+17,hazel#0271,2021-09-24,"a ""singleton variable"" is a variable that has been referred to only once, yes",,
3.58051E+17,hazel#0271,2021-09-24,i am unfamiliar with this terminology,,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-24,huh?,,
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-24,wdym using a keyboard,,
2.66505E+17,notjack#9941,2021-09-24,sass,,
3.58051E+17,hazel#0271,2021-09-24,using a keyboard. you press buttons on it,,üòÜ (1)
2.54624E+17,NŒûŒ†ŒìŒîŒ£#2412,2021-09-24,send addy goof kid,,üòÜ (1)
3.58051E+17,hazel#0271,2021-09-25,what the fuck does this message mean,,
1.56786E+17,williewillus#8490,2021-09-25,"if this is homework help, you should review the materials and think about it a bit",,plusone (4)
8.09146E+17,darren#6252,2021-09-25,"hi, 
i was solving project euler and encountered this. 
while `(and #t #f)` does work, 
does anyone know why `(apply and '(#t #f))` does not work?",,
4.40139E+17,Parnikkapore#2806,2021-09-25,"`and` is a form, not a procedure",,
8.09146E+17,darren#6252,2021-09-25,"ah, I see. Then can you let me know what should be used to check all items in the list are `#t`?",,
8.09146E+17,darren#6252,2021-09-25,"And when you say ""form"", is it the same thing that we call ""literal"" in Clojure?",,
2.64024E+17,Eutro#0016,2021-09-25,"no, `and` is a (syntax) form",,
2.64024E+17,Eutro#0016,2021-09-25,"Like in Clojure, `and` is a macro, in effect",,
2.64024E+17,Eutro#0016,2021-09-25,you can't take its value,,
2.64024E+17,Eutro#0016,2021-09-25,to check if all elements of a list `lst` are `#t` you can do `(andmap (lambda (x) (eq? #t x)) lst)`,,üëç (1)
2.64024E+17,Eutro#0016,2021-09-25,what I think is more likely is that you'll want to use `andmap` rather than creating that list of `#t`s and `#f` in the first place,,
2.64024E+17,Eutro#0016,2021-09-25,or maybe even `for/and`,,
2.64024E+17,Eutro#0016,2021-09-25,but the answer to your question was this,,
8.09146E+17,darren#6252,2021-09-25,"Yep, right. Thanks much.",,üëç (1)
5.24323E+17,Ben Kenobi#5683,2021-09-25,"if `racket/base` had `racket/function`, I would probably have written `(andmap identity xs)` which is not quite semantically the same, but is less noisy. OTOH, I agree that even better is `(andmap f ys)` (where here all the `xs` were produced from `(map f ys)` originally). `(andmap f ys)` ~~~ ""Forall y in ys, f(y).""",,
3.58051E+17,hazel#0271,2021-09-25,andmap should probably be called `forall`,,üëç (1)
3.58051E+17,hazel#0271,2021-09-25,but that's my opinion,,
2.14881E+17,Moinate#6061,2021-09-25,Dangerous name since it stops the first time the function returns false,,
3.58051E+17,hazel#0271,2021-09-25,"I mean I feel like there's a separation between ""for all"" and ""for each""",,
3.58051E+17,hazel#0271,2021-09-25,"forall in FOL also ""stops"" if there's a counterexample",,üçâ (1)
5.24323E+17,Ben Kenobi#5683,2021-09-25,forall‚Äîfunctional,,
5.24323E+17,Ben Kenobi#5683,2021-09-25,foreach‚Äîimperative (ish),,
2.14881E+17,Moinate#6061,2021-09-25,"Aha, didnt make that connection to understand for all as a quantifier",,
5.24323E+17,Ben Kenobi#5683,2021-09-25,"My bad; I was too lazy to search for the unicode symbol. ‚àÄ y ‚àà ys, f(y)",,
2.14881E+17,Moinate#6061,2021-09-25,"honestly, still kind of weird to me... i know what you're saying but I guess it's my inexperience with this way of looking at things... seeing that as a boolean expression instead of say a set or  a list is a little jarring.
I guess I prefer ""every"" (or ""all"") to ""forall"".",,üëç (1)
1.56786E+17,williewillus#8490,2021-09-25,tbh andmap is a fine name,,
1.56786E+17,williewillus#8490,2021-09-25,it's literally and and map composed,,
2.66505E+17,notjack#9941,2021-09-26,`all-pass?` would have been better,,
2.75501E+17,Plane#0324,2021-09-26,"in the spirit of bikeshedding, i actually kinda like `andmap`",,
2.75501E+17,Plane#0324,2021-09-26,"it's easy to remember ""hey, i can't use `and` with `map`, but i can use `andmap`""",,
4.40139E+17,Parnikkapore#2806,2021-09-26,and preserves the parallelism with `ormap`,,
4.83487E+17,jest#6646,2021-09-26,"@samth do a lot of students at indiana use the ""table method"" for the design recipe? http://cedar.sice.indiana.edu:35888/Beginning-Student-Tables/  , or do you guys not collect analytics on that ?",,
3.5323E+17,Alex Knauth#4895,2021-09-26,"Huh. That's not how I remember using the ""table method"", though I didn't go to Indiana.
Where I was learning there were 2 things called the ""table method"".
1. When a function takes more than one complex input, you don't know which one the ""template"" should be based on, you can use a 2d table to pick between 2 inputs, which one is ""dominant"" for the template (which one to deconstruct first, as opposed to which to treat as more atomic at first), and also some clues on how to fill in the holes.
2. When a function uses a natural recursion, you don't know how to ""combine"" the result of the natural recursion with the other data in the template of the recursive case, you can use a table to figure out what's relevant to combine and how.

I suppose we also used a more general idea of just turning input-output examples into a table, especially for animations, but that wasn't as much of a ""method"" with different steps to it as the 2 table methods above.",,
4.83487E+17,jest#6646,2021-09-26,"oo, interesting, i thought this method was exclusive to indiana",,
4.83487E+17,jest#6646,2021-09-26,OH! also where are the templates?,,
3.5323E+17,Alex Knauth#4895,2021-09-26,The templates are from How to Design Programs,,
4.83487E+17,jest#6646,2021-09-26,is there a single page that has them all or do i have to look through the book and gather them all up? currently looking through htdp2 to find the cheat sheet for all of them,,
3.5323E+17,Alex Knauth#4895,2021-09-26,"No, there should be a template for every unique Data Definition, which means infinitely many possible ones. Usually you write your own based on the Data Definitions you made, and you use existing ones when you're using existing data definitions.",,
3.5323E+17,Alex Knauth#4895,2021-09-26,"A lot of people make the mistake of just using the ""list template"" for everything even when their data has a more complex structure than a simple linear list",,
4.83487E+17,jest#6646,2021-09-26,i still find templates weird lol.... but reading papers of htdps effefctiveness most say it really helped,,
4.83487E+17,jest#6646,2021-09-26,i guess the alternative would be staring at a blank page thinking about how to write the function.,,‚è´ (1)
4.83487E+17,jest#6646,2021-09-26,is the table method even in htdp2? or is it something that came afterwards?,,
3.58051E+17,hazel#0271,2021-09-26,we are trying to get people to,,
3.58051E+17,hazel#0271,2021-09-26,emphasis on trying,,
3.58051E+17,hazel#0271,2021-09-26,varied success,,
3.58051E+17,hazel#0271,2021-09-26,I'm pretty sure this was written strictly for C211 though,,
6.46114E+17,samth#3420,2021-09-26,That tool was written for the course at Indiana. The table method itself was invented 15 or so years ago at Northeastern. It's described in HtDP 2nd edition.,,
2.14881E+17,Moinate#6061,2021-09-26,HtDP reference for table method (bare bones): FIgure 54 and below.  https://htdp.org/2021-5-4/Book/part_two.html,,
3.58051E+17,hazel#0271,2021-09-26,https://www.youtube.com/watch?v=qSM-rbOkmn0 my Scheme 2021 talk finally got uploaded,,"üëç (4),üçâ (2),üî• (1)"
3.58051E+17,hazel#0271,2021-09-26,watch it or don't,,
6.87833E+17,grey#8674,2021-09-26,"This is delightful! I learned basic data analysis and visualization in MATLAB, which was painful, at best. Graphite and Sawzall make this so straightforward and fun üòÉ",,
2.75501E+17,Plane#0324,2021-09-27,very nice! (:,,
7.14999E+17,gingerydoo#7461,2021-09-27,It's a bad idea to let a user directly control the format string argument to `printf` in C due to vulnerabilities. How many of those vulnerabilities apply to Racket's `printf`?,,
7.14999E+17,gingerydoo#7461,2021-09-27,Context: I wrote a small text macro processor and the CLI allows for controlling formatted output. A scary shortcut is possible.,,
6.46114E+17,samth#3420,2021-09-27,"@gingerydoo most of them do not apply to racket's printf, because you can't do things like treat pointers as integers in Racket's printf",,
6.46114E+17,samth#3420,2021-09-27,"nor can you do weird things like execute code in format strings, as in Common Lisp",,
7.14999E+17,gingerydoo#7461,2021-09-27,Thank you!,,
6.46114E+17,samth#3420,2021-09-27,"if you let the user control the format string, they can certainly cause errors",,
4.83487E+17,jest#6646,2021-09-27,"educators, what would you say is the hardest part about teaching recursion?",,
3.29023E+17,nixin72#3554,2021-09-27,"Now, I‚Äôm not an educator, I‚Äôm a college dropout that‚Äôs spent a lot of time in Discord servers answering question and occasionally tutoring, so I don‚Äôt think I have as good of a perception on this as an actual educator. But, I think there‚Äôs 2 factors that make it tough for students.

First, when you‚Äôre writing an iterative algorithm, you learn to do it in terms of building up a single value over time. You declare your newArray or sum or whatever value you‚Äôre working with, then loop and mutate it, then return it - or just mutate your input in place sometimes too. When doing it recursively, you‚Äôre basically going in reverse because your base case, or ‚Äúinitial value‚Äù is the last thing your function seems to do.

Secondly, I think there‚Äôs the conception that you‚Äôre somehow dealing with more values. With iterative solutions, you often only have one - your initial value. With recursive solutions, there‚Äôs the perception that you‚Äôre dealing with more values I think. Students are used to considering each function individually, and so that translates to the recursive calls, and when you consider each stack frame individually, that quickly becomes overwhelming to students. They suddenly feel like they need to be keeping track of values over the coure of the recursive calls, when they don‚Äôt.",,
3.58051E+17,hazel#0271,2021-09-27,"'what does ""out of memory"" mean'",,ü§£ (2)
3.29023E+17,nixin72#3554,2021-09-27,"I think the problem here falls on both the students and the educators. Students have a lot of classes and not a lot of time. The time they do have, the don't want to spend it doing assignments, and so they often try to ""rubric it"" and just hit the checkboxes as fast as possible to get through their assignments. To do this, they don't sit down and test individual functions in their code and start with smaller test inputs and stuff. They jump right into building the whole program, and considering everything going on. They often test their functions by using the values given to it from the actual program, even when that input is a lot bigger or more complex than what they need to verify that it works. So you end up with students trying to println 100 values in their array and getting confused and overwhelmed, instead of 4 or 5 values. Students should be taught to start small and test things one at a time before putting the function through the input of the whole program. To people who are more experienced programmers this probably seems obvious and you don't really consider teaching the thought process or workflow to programming as much as the concepts to programming itself. But for students who aren't confident in their workflow or haven't found a good way to do it yet, they struggle with this and so exploring new things like recursion could be a little tougher. 

Anyways, I think that paragraph was a little all over the place, but I think there's more that can be done to teach students to develop healthy programming habits and workflows since it can take a long time for students to develop them themselves when under time crunch from 5 classes, assignments, readings, midterms, etc",,plusone (1)
2.75501E+17,Plane#0324,2021-09-27,this is actually really interesting to me,,
2.75501E+17,Plane#0324,2021-09-27,"i started by learning how my machine worked at a low level, with a program counter (address of next instruction to be executed), a bit of memory and a stack pointer, and then instructions which interact with those things",,
2.75501E+17,Plane#0324,2021-09-27,and i learned to set up call stacks etc,,
2.75501E+17,Plane#0324,2021-09-27,and i feel like building concepts like recursion on top of this is super easy,,
2.75501E+17,Plane#0324,2021-09-27,i didn't really learn any CS until way later since i was learning this stuff when i was very young,,
2.75501E+17,Plane#0324,2021-09-27,"but i feel like even if i'm not coding on that old 8-bit architecture anymore, the mental model i got from that made it really easy to build higher-level concepts on",,
2.75501E+17,Plane#0324,2021-09-27,and i think people generally tend not to build low-level up to high-level,,
3.29023E+17,nixin72#3554,2021-09-27,"Huh, that's really interesting. I can't say I know anyone who started learning with the hardware and machine code and stuff instead of a higher-level language. I know a handful of people who started with C, but even that's a huge step up over machine code. Most people start with Java or Python these days, so your experience is probably fairly unique.",,
2.75501E+17,Plane#0324,2021-09-27,oh yeah i started learning c around 1991 but that was after i'd done machine language and assembly,,
4.83487E+17,jest#6646,2021-09-27,probably was a long time ago in the 90s,,
2.75501E+17,Plane#0324,2021-09-27,my parents are both programmers though,,
2.75501E+17,Plane#0324,2021-09-27,my dad did mainframe stuff,,
2.75501E+17,Plane#0324,2021-09-27,and he got me a c64 when i was little,,
4.83487E+17,jest#6646,2021-09-27,daww,,
4.83487E+17,jest#6646,2021-09-27,"i think its not being able to see the intermediate steps? they feel they HAVE to know whats happening at every iteration of recursion, compared to a for loop where you can print the i's n stuff",,
3.29023E+17,nixin72#3554,2021-09-27,"Ahhh okay, that makes sense. I started with Java in college with 0 programming experience and next to no knowledge of computers. No one in my family is remotely technical or anything. My mom took one BASIC course in university that went in one ear and out the other, and that's about it lol",,
2.75501E+17,Plane#0324,2021-09-27,well i am 40 years old now,,
2.75501E+17,Plane#0324,2021-09-27,so machine language was actually very relevant to me when i was little,,
2.75501E+17,Plane#0324,2021-09-27,"i mean, i started with BASIC!",,
2.75501E+17,Plane#0324,2021-09-27,but to do a lot of things on the c64 you had to do machine language / asm,,
2.75501E+17,Plane#0324,2021-09-27,it's way less relevant to a lot of people and i think that would make it a lot harder for them to learn it now,,
2.75501E+17,Plane#0324,2021-09-27,because people generally learn things they're excited about well and they don't learn things they're not interested in,,
2.75501E+17,Plane#0324,2021-09-27,"(and a lot of people don't really know the mental trick of actively taking an interest in anything you want to learn, they have trouble with that and so they have trouble learning a lot of things)",,
4.83487E+17,jest#6646,2021-09-27,in a way we need to go back lol....  applications and web performance is tremendously more slower than they were before despite the massive improvements in hardware :s,,
2.66505E+17,notjack#9941,2021-09-27,"real websites and web apps being slow is mostly a product of capitalism, not technology. news sites are slow because they will happily trade X milliseconds of load time for Y more megabytes of adtech trackers",,
3.29023E+17,nixin72#3554,2021-09-27,Not to mention it means loading the work onto the client instead of the beefy servers that could do it way faster doing the work,,
4.90866E+17,JOST GRANT#1516,2021-09-27,It's funny how perception works online when all you have to work with is text; I assumed you were younger than me (I'm nearing 30) lol,,
2.66505E+17,notjack#9941,2021-09-27,and a company building a web app will make the same trade-off in spending X development hours on new features / other stuff instead of spending that effort on improving performance,,
4.83487E+17,jest#6646,2021-09-27,"ehh, feel like its more of a tech debt problem and people overcomplicating things for no reason",,
4.83487E+17,jest#6646,2021-09-27,"capitalism is like... maybe 10%? 25% of it i would say? because the other half of capitalism is competition so you would think if X software sucks, people would flock to Y",,
3.29023E+17,nixin72#3554,2021-09-27,"Yea, also true. Optimization, refactoring and eliminating tech debt and stuff like that isn't a priority compared to cranking out features to keep product owners happy",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"Trackers, cookies, and friends don't help; But I mean ... Electron apps got that ""ew"" response for a reason. It's so rare for actually performant webapps that VSCode gets credit, like every single release lol",,
3.29023E+17,nixin72#3554,2021-09-27,"Depends on what you consider software ""sucking"". I would say slow and laggy software with tons of features is worse than something faster and more stable, but perhaps with less features.",,
4.83487E+17,jest#6646,2021-09-27,i mean look at drracket.. no offense to anyone working on it but the startup times are horrendous...... sometimes scrolling down lags the editor?? not even driven by capitalism,,
4.90866E+17,JOST GRANT#1516,2021-09-27,"Which makes the decline of Lisp in the industry a ""cruel fate""; lol. Killled off for being too slow, but nowadays Lisp implementations are often (a lot) faster than what's used in the industry",,
3.79445E+17,joohnym#9531,2021-09-27,I always saw DrRacket as a learning tool,,
3.79445E+17,joohnym#9531,2021-09-27,"not a ""serious"" IDEA",,
3.79445E+17,joohnym#9531,2021-09-27,*IDE,,
2.66505E+17,notjack#9941,2021-09-27,"most choices of which web app to use are entirely content driven, not feature or performance driven",,
4.90866E+17,JOST GRANT#1516,2021-09-27,Never had scroll issues; But I wouldn't exactly call Dr.Racket competing to be a real day-to-day editor / ide for better-or-worse,,
4.90866E+17,JOST GRANT#1516,2021-09-27,(and personally I think for worse tbh),,
4.90866E+17,JOST GRANT#1516,2021-09-27,"Stuff like sauron helps, but the first-run experience is a big deal",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"@notjack Eh, I think when the distinction between website / web-platform and webapp is blured maybe that's true?",,
4.83487E+17,jest#6646,2021-09-27,i dont even want it to compete with major IDEs. the bare minimum is to not hitch when editing/scrolling code... its just very jarring and frustrating . I alternate between racket/vscode w/ magick because drracket jumps to the error,,
4.90866E+17,JOST GRANT#1516,2021-09-27,Besides arguably 'excessive' memory usage; Never personally ran into editing / scrolling issues but I'll take your word for it. Are you running on decently mid-tier hardware? I'm on an old Thinkpad T430 on my main device and things are smooth,,
4.83487E+17,jest#6646,2021-09-27,https://twitter.com/racketlang/status/673191667206352896?lang=en,,
4.83487E+17,jest#6646,2021-09-27,"must have been lucky then, im not running on low spec hardware, i think it might have to do more with gtk3",,
4.83487E+17,jest#6646,2021-09-27,"but even on this beef of a ryzen 5 1600 machine, it still happens occasionally and it just ruins my flow....",,
4.90866E+17,JOST GRANT#1516,2021-09-27,I'll keep an eye out for it; Is it 'just random' or does it happen like in files with many LoC ?,,
4.83487E+17,jest#6646,2021-09-27,"probably a couple hundred? nonetheless i dont know the issue is, and not trying to bash on drracket because the original argument was ""capitalism is the reason why software is slow"" and i just wanted to provide a counter example that its much more than that",,
4.83487E+17,jest#6646,2021-09-27,opening a tab takes a few seconds...,,
3.29023E+17,nixin72#3554,2021-09-27,"I mean, I think capitalism was the answer for why modern webapps are slow",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"Oh yeah, totally think it's a fair complaint and as-fair of a counterpoint; Just never experienced it. Think 500+mb default is a good counter someone really into Electron could make too lool",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"I think it's an easy scapegoat; Though has a non-trivial affect but I wouldn't even say it's ""most"" of the problem. Expect a slight majority is the expectation that oh, we have cycles to spare / and ""this is free""",,
4.83487E+17,jest#6646,2021-09-27,"these may sound like minor ux complaints, and i acknowledge it is easy for me to complain and not do anything but it stacks up in a way: https://www.thinkwithgoogle.com/consumer-insights/consumer-trends/mobile-site-load-time-statistics/
> 53% of visits are abandoned if a mobile site takes longer than 3 seconds to load.",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"Think it's really appealing for people (myself included) to want to point to a single-issue; Why x is like y. It's almost never the case. ""Everything is as complicated as an Apache Helicopter""",,
4.83487E+17,jest#6646,2021-09-27,"yeah, i still dont even think its the majority of the problem.... maybe 10-25% depending, rest is tech debt and people not caring about ux",,
4.90866E+17,JOST GRANT#1516,2021-09-27,That's why we just through 10g networks and 10k-core cpus at the problem loool,,üòî (1)
4.90866E+17,JOST GRANT#1516,2021-09-27,"Though like, everything is relative; Moore's law isn't unbreakable by any means but I'll tell you 500mb on my first-laptop (maxed out at 4gb and for 2/3rds of its life it only had 2 installed lol) that feels a heck of a lot heavier than nowadays on this older machine that maxes out at 16gb and is upgraded to that point",,
8.14743E+16,jimpjorps#0001,2021-09-27,"there are people concerned about how many computing resources we need to render the modern web, there is a small but active movement of people trying to bring back Gopher and similar light protocols",,
4.90866E+17,JOST GRANT#1516,2021-09-27,Wouldn't of had Dr.Racket idling on that laptop; Now it's always opened in the bg. lol,,
4.90866E+17,JOST GRANT#1516,2021-09-27,"what's ""modern web"" in this context. full-dom , web 3.0 stuff?",,
8.14743E+16,jimpjorps#0001,2021-09-27,yeah,,
4.90866E+17,JOST GRANT#1516,2021-09-27,I've only ever heard of Gopher; Only alt-protocol I've looked a tiny bit into was IPFS,,
8.14743E+16,jimpjorps#0001,2021-09-27,"reliant on javascript, html 5, webfonts, all that stuff",,
4.90866E+17,JOST GRANT#1516,2021-09-27,Actually I guess GNUNet too,,
8.14743E+16,jimpjorps#0001,2021-09-27,https://en.wikipedia.org/wiki/Gemini_(protocol),,
8.14743E+16,jimpjorps#0001,2021-09-27,this is one I tangentially know a few people are active in,,
2.75501E+17,Plane#0324,2021-09-27,"there's two sides to that, because we have a lot of complexity, but computers do a lot more",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"I'm cautiously optimistic as WASM as a 'saving grace' but no miracle to force the way that it's been done to be ""good enough"" ... but idk",,
2.75501E+17,Plane#0324,2021-09-27,"text rendering is a microcosm of those changes over the years.  think of how old computers render text, with one byte per character on a grid, and each character being rendered in hardware",,
2.75501E+17,Plane#0324,2021-09-27,"and then think about how well that supports arabic, or japanese",,
2.75501E+17,Plane#0324,2021-09-27,"now think about how complex modern text rendering is.  is some of that complexity unnecessary?  yeah i think so, but it just does *so much more*",,
2.75501E+17,Plane#0324,2021-09-27,i think computers could be much faster than they are,,
2.75501E+17,Plane#0324,2021-09-27,and a lot of things could be much simpler than they are,,
3.29023E+17,nixin72#3554,2021-09-27,"I mean, consider some of the things that slow down websites: 
- adds
- trackers
- auto playing videos 
- poorly optimized code
- client-side rendering
Literally all of these are consequences of profits being the bottom line. Yes, electron is slow too, but it‚Äôs also an instance of a full browser pretty much. You can make performant applications that run smoothly on older browsers if you take the time to consider the user more than cranking out features and making profit.",,
2.75501E+17,Plane#0324,2021-09-27,"but we expect a lot more from our computers now, and we *should* expect more",,
2.75501E+17,Plane#0324,2021-09-27,we've built so much,,
4.90866E+17,JOST GRANT#1516,2021-09-27,"@Plane Engineers + Problem + Time = Unnecessary Complexity. But that's all things I guess, because of feature-creep / mission-creep and priorities and/or drivers overtime",,
8.14743E+16,jimpjorps#0001,2021-09-27,"the thinking is that even if we have computers that can do so much more, that just means we should be able to do the basics without having to perch it on top of such a heavy framework",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"@Plane We also ""ALMOST NEVER"" make standards anymore; And I understand why, it's a slow and grueling process ... but things tend to get thrown at all, and pushed that way over carefully planned / designed",,
3.29023E+17,nixin72#3554,2021-09-27,"Server side rendering, communicating via websockets instead of HTTP/S, and no ads and things start running a lot faster.",,
2.75501E+17,Plane#0324,2021-09-27,i think the decline of standards is a pretty interesting story to discuss all on its own,,
4.90866E+17,JOST GRANT#1516,2021-09-27,"And the standards we tend to have, rarely rarely break backwards compatibility ... so it's just adding more features / packing on top",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"I kinda understand it , especially with the internet and growth of opensource generally; And there's some positives to this as-well ... idk",,
8.14743E+16,jimpjorps#0001,2021-09-27,"yeah, we've moved away from the model of an industry group making a standard for 10 different companies to implement in 90% compatible ways",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"Think the big negative is once you have an accepted standard and it effectively dies (ie: no new versions) it seems to be very hard to get the community to organically manifest in a direction that progresses the language in a uniform enough way to replace this function ... CL I think is **the** example of this, sadly",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"Well, we almost moved away from proprietary software at this level as-well; Nowadays if you're business and have*  non-internal ""user facing"" software -- ie: selling it, it's a product and prob not a lib or a compiler (with few exceptions). Standards for prog-langs really made sense of you had like 10-20 companies wanting to sell a compiler for x lang or whatever",,
8.14743E+16,jimpjorps#0001,2021-09-27,yeah,,
8.14743E+16,jimpjorps#0001,2021-09-27,there are still industry groups writing standards but they're almost always for data interchange formats and not languages or software,,
4.90866E+17,JOST GRANT#1516,2021-09-27,"I forgot what it was, like saw it two-to-three years ago now; But stumbled onto a site for a company trying to sell a new proprietary language and it felt ""SO WEIRD"" in a modern context. lol",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"Yeah, that makes sense; And I guess the cost to implement an interchange system is probably WAAAAAY less of an endeavor as-well so it's more approachable",,
4.90866E+17,JOST GRANT#1516,2021-09-27,At least compared to a standardize general-purpose proglang lol,,
2.14881E+17,Moinate#6061,2021-09-27,">  what would you say is the hardest part about teaching/learning recursion?
This would be an interesting discussion topic -- i'm not sure the best forum though. Maybe a thread here.",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"@jeapostrophe Hey wondering if it'd be better to email you (saw you Email listed as one of the contacts on the pkg index site) , but a package I made and deleted the other day evidently wasn't cleared and now the namespace is just taken? Wondered if there's any way https://pkgd.racket-lang.org/pkgn/package/rodot can be deleted so I can push to it again? (( Got excited to look into bindings again after today's GDExtension announcement :^) ))",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"And I guess I actually don't know if it wasn't free / deleted before lol; Because when I tried remaking it would error out to a proxy message and then would go back to the page , re submit, then would just tell me ""Save failed""",,
4.90866E+17,JOST GRANT#1516,2021-09-27,"So maybe it was cleared, then when I tried to make the package it reserved the namespace, but didn't add me as the owner or something? idk",,
4.90866E+17,JOST GRANT#1516,2021-09-27,(( Emailing both you and TonyG so I don't spam in here (at least anymore than I usually do lool )),,
2.36947E+17,jeapostrophe#4261,2021-09-27,Email is the right thing üôÇ,,
2.36947E+17,jeapostrophe#4261,2021-09-27,Sorry for the pain,,
4.90866E+17,JOST GRANT#1516,2021-09-27,"lool, np; I'm no zoomer but feel like one how little I actually use email in my day-to-day. xD",,
6.46114E+17,samth#3420,2021-09-28,@jest one hard thing is persuading students that there's no trick involved -- it's just the same thing we've been doing already,,
3.58051E+17,hazel#0271,2021-09-28,a lot of students struggle with the idea that templates should refer to other templates,,
3.58051E+17,hazel#0271,2021-09-28,"if they don't get that, the justification we do for recursion doesn't work",,
3.58051E+17,hazel#0271,2021-09-29,https://twitter.com/davidad/status/1442915303550185473,,
8.14743E+16,jimpjorps#0001,2021-09-29,,https://cdn.discordapp.com/attachments/618895179343986688/892804458239651870/mp550x550mattefffffft.png,mew (1)
1.84841E+17,Aperiodic Orbit#8099,2021-09-29,i understand the first half but not the second lol,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-29,oh wait no i understand the third too,,
1.84841E+17,Aperiodic Orbit#8099,2021-09-29,sorta,,
2.64024E+17,Eutro#0016,2021-09-29,sounds about right,,
4.66395E+17,oaktownsam#0815,2021-09-29,My Racket command line REPL is hanging on the first expression to evaluate üò¶,,
4.66395E+17,oaktownsam#0815,2021-09-29,Like `(cons 'a 'b)` enter and it hangs,,
4.66395E+17,oaktownsam#0815,2021-09-29,"Looks like it's having a GC problem?  Just keeps printing this last number increasing
```
GC: 0:min0 @ 93,619K(+59,857K); free 8,322K(-8,322K) 0ms @ 17367
GC: 0:min0 @ 93,684K(+59,792K); free 8,386K(-8,386K) 0ms @ 17418
GC: 0:min1 @ 93,685K(+59,791K); free 8,394K(-8,394K) 0ms @ 17469
GC: 0:min0 @ 93,678K(+59,798K); free 8,386K(-8,386K) 0ms @ 17520
GC: 0:min0 @ 93,678K(+59,798K); free 8,386K(-8,386K) 0ms @ 17571
```",,
4.66395E+17,oaktownsam#0815,2021-09-29,(that's with `PLTSTDERR=debug`),,
4.66395E+17,oaktownsam#0815,2021-09-29,"still running 30 minutes later
```
GC: 0:min0 @ 93,698K(+42,673K); free 8,387K(-8,387K) 0ms @ 1864938
GC: 0:min0 @ 93,699K(+42,672K); free 8,323K(-8,323K) 0ms @ 1864990
GC: 0:min1 @ 93,764K(+42,608K); free 8,392K(-8,392K) 0ms @ 1865042
GC: 0:min0 @ 93,758K(+42,613K); free 8,386K(-8,386K) 0ms @ 1865094
```",,
4.66395E+17,oaktownsam#0815,2021-09-29,At this rate I'll never know what the answer to `(cons 'a 'b)` is,,
6.88091E+17,mflatt#6350,2021-09-29,"This doesn't seem to be a GC problem, but some non-terminating loop (that allocates temporary memory, so the GC fires occasionally). Something in `(find-system-path 'init-file)` that creates a loop? What you if you start with `-q`?",,
2.64024E+17,Eutro#0016,2021-09-29,!rkt eval (cons 'a 'b),,
8.02004E+17,r16#4581,2021-09-29,(a . b),,
2.64024E+17,Eutro#0016,2021-09-29,there we go,,
2.64024E+17,Eutro#0016,2021-09-29,problem solved,,
4.66395E+17,oaktownsam#0815,2021-09-29,whew,,
4.66395E+17,oaktownsam#0815,2021-09-29,thanks,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,"!rkt eval
```scheme
(define a 'b)
(define b 'a)
(define quote identity)
(cons 'a 'b)
```",,
8.02004E+17,r16#4581,2021-09-30,(b . a),,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,hmm I hope bot is not persistent? ü§î,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,"!rkt eval
```scheme
'a
```",,
8.02004E+17,r16#4581,2021-09-30,a,,
3.5323E+17,Alex Knauth#4895,2021-09-30,"!rkt eval
```
(let ()
  (define a 'b)
  (define b 'a)
  (define quote identity)
  (cons 'a 'b))
```",,
8.02004E+17,r16#4581,2021-09-30,":warning: stderr:
quote: undefined;
 cannot use before initialization
  context...:
   /home/r16bot/r16/evaluator.rkt:71:4: not-module
   /home/r16bot/r16/evaluator.rkt:63:2: run-evaluation
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:413:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:511:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:914:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:910:5: loop",,
2.64024E+17,Eutro#0016,2021-09-30,thanks I hate it,,
3.5323E+17,Alex Knauth#4895,2021-09-30,"and that's why I don't like the top-level's behavior on 
```
(define a 'b)
(define b 'a)
(define quote identity)
(cons 'a 'b)
```
because not only is it different between top-level and in-module, it's different between top-level and within-let-in-top-level",,
2.64024E+17,Eutro#0016,2021-09-30,the first one is not technically top level,,
2.64024E+17,Eutro#0016,2021-09-30,it's top-interaction,,
2.64024E+17,Eutro#0016,2021-09-30,i.e. repl-style rather than module-style,,
4.83487E+17,jest#6646,2021-09-30,is there a way to disable the auto-formatter from moving comments?,,
4.83487E+17,jest#6646,2021-09-30,,https://cdn.discordapp.com/attachments/618895179343986688/893156847169732618/autoformat.mp4,
4.83487E+17,jest#6646,2021-09-30,using `;;` prevents it but.... i feel like comments should not be formatted at all,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,wouldn't let* solve this?,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,"!rkt eval
```scheme
(let* ([a 'b]
       [b 'a]
       [quote identity])
  (cons 'a 'b))
```",,
8.02004E+17,r16#4581,2021-09-30,(b . a),,
3.5323E+17,Alex Knauth#4895,2021-09-30,"No, because whether within `let`, `let*`, or something else, the definitions in the body are still mutually-recursive",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,tada,,
3.5323E+17,Alex Knauth#4895,2021-09-30,"Oh, if you rewrote it to not use definitions in the body at all",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,hmm do regular parens give me away being a fraud,,
3.5323E+17,Alex Knauth#4895,2021-09-30,"I personally have begun to like the opposite style
```
(let* [(a 'b)
       (b 'a)
       (quote identity)]
  (cons 'a 'b))
```
but lately I've been programming in Gerbil Scheme which uses `[]` as a shorthand for `list` expressions so `((a 'b) (b 'a))` is what I'm used to there.
fraud what?",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,"!rkt eval

```scheme
(define-syntax lƒôt 
  (syntax-rules (define)
    ((_ () (define foo bar) rest ...) (let* ((foo bar)) (lƒôt () rest ...))
    ((_ () rest ...) (begin rest ...))))

(lƒôt ()
  (define a 'b)
  (define b 'a)
  (define quote identity)
  (cons 'a 'b))
```",,
8.02004E+17,r16#4581,2021-09-30,":warning: stderr:
trick:1:0: read-syntax: expected a `)` to close `(`
  possible cause: indentation suggests a missing `)` before line 6
  context...:
   /usr/local/racket/collects/racket/sequence.rkt:41:0: sequence->list
   /home/r16bot/r16/evaluator.rkt:63:2: run-evaluation
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:413:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:511:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:914:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:910:5: loop",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,heck,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,fraud of being mostly a schemer üòÖ,,
3.5323E+17,Alex Knauth#4895,2021-09-30,"The reasoning is that `list` types are homogeneous, but function-applications, macro-applications, and single let-bindings are not homogeneous. In a function-call, the function-position is special. Likewise in the others I've decided in my personal-convention for `(let* [(a 'b) (b 'a)] (cons a b))` the ones that use `()` treat the first-position as special, but the ones that use `[]` treat the first position and the rest as homogeneous, just like in `(list a b c)` the `a`, `b`, and `c` are the same type, and in Gerbil Scheme `[a b c]` is syntactic sugar for `(list a b c)`",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,hmm makes sense,,
3.5323E+17,Alex Knauth#4895,2021-09-30,"These are all just conventions and using one consistently over another isn't ""lying""",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-09-30,"oh I was calling *myself* a fraud, not you üòÖ just to be clear. I don't write racket much these days",,
3.5323E+17,Alex Knauth#4895,2021-09-30,"on the other hand if you indented it weirdly like
```
                   (let*
                             [(a
        'b)
        (b                    'a)
             (quote
                                    identity)]
  (cons                       'a 
        'b))
```
then I would have a problem",,ü§£ (1)
3.5323E+17,Alex Knauth#4895,2021-09-30,"Indentation is more than just a ""convention"" that can be changed... it's a fundamental part of how we read tree structures",,
2.75501E+17,Plane#0324,2021-09-30,modern art,,
3.5323E+17,Alex Knauth#4895,2021-09-30,"no, if I wanted modern art I would have done
```
                                   (
                                  let*
            [
  (
a   '
    b
  )
            (
          b    '
               a
            )
                         (
                   quote   identity
                         )
            ]
                                             (
                                            cons                       
                                        '
                                        a 
                                                  '
                                                  b
                                             )
                                   )
```",,
2.75501E+17,Plane#0324,2021-09-30,very fancy,,
7.73175E+17,meowüé∫#2842,2021-09-30,I practically never use square brackets out of a deeply ingrained habit.,,
4.66395E+17,oaktownsam#0815,2021-09-30,I missed this message somehow.  I found that if I remove my `~/.racket/racket-prefs.rktd` everything works correctly.  Looking in there I see a 238kb history entry (due to a bad paste into a terminal).  I've attempted to make a history file with just one 238kb entry but that doesn't seem to trigger the behavior.,,
4.66395E+17,oaktownsam#0815,2021-09-30,With the original prefs file on Mac Racket v8.2.0.6 [cs] I cannot reproduce.,,
4.66395E+17,oaktownsam#0815,2021-09-30,The system it was hanging on is Linux Racket 8.2[cs],,
8.14743E+16,jimpjorps#0001,2021-09-30,I had a similar problem with racket 8.0 hanging after I accidentally pasted and executed a bunch of text with emoji into the repl,,
4.83487E+17,jest#6646,2021-09-30,how many emojis o: ? do you have the file that hanged it if you dont mind sharing?,,
8.14743E+16,jimpjorps#0001,2021-09-30,it was months ago,,
8.14743E+16,jimpjorps#0001,2021-09-30,I don't remember the details besides that when I removed it from the history drracket stopped refusing to evaluate things on the repl,,
1.93202E+17,rocketnia#4517,2021-09-30,"!rkt eval

```
(module m racket
  (require (for-syntax (only-in racket/function identity)))
  (provide result)
  (define-for-syntax a 'b)
  (define-for-syntax b 'a)
  (define-for-syntax quote identity)
  (define-for-syntax compile-time-result (cons 'a 'b))
  (define-syntax (result stx)
    #`'#,compile-time-result))

(require 'm)
(writeln result)
```",,
8.02004E+17,r16#4581,2021-09-30,(b . a),,
1.93202E+17,rocketnia#4517,2021-09-30,"^ modules are something like the top level, at least when working at phase 1 in ways that have to be interleaved with phase-0 macroexpansion :-p",,
4.83487E+17,jest#6646,2021-09-30,"@samth https://legacy.cs.indiana.edu/classes/c211/general.html
> We have set up a course discussion forum using Discord, which you must participate in. That is where we will make course announcements.
can i join the discord üôè ? shouldnt be against any university violations since im not given access to canvas/private stuff right? i just wanna see how students are doing for my teachings on htdp. I understand if you're still cautious about it though",,
6.46114E+17,samth#3420,2021-09-30,"I am reluctant to add non-students to the discord, since it's supposed to just be for the class, and that's what students expect. I'm happy to answer questions, though.",,
4.66395E+17,oaktownsam#0815,2021-09-30,"Racket shout out: https://madhadron.com/posts/seven_languages.html (found via /r/programming, also top of lobste.rs now)",,
4.83487E+17,jest#6646,2021-09-30,"ahhh... was hoping for low latency discussion with students to see where they get lost.... i dont have any questions atm but i will probably ask a few later then, thanks",,
6.46114E+17,samth#3420,2021-09-30,"yeah, while I recognize that it would be helpful for you, I don't think I can just let other people show up and start asking my students questions",,
4.83487E+17,jest#6646,2021-09-30,understandable,,
4.83487E+17,jest#6646,2021-09-30,"welp! https://www.youtube.com/playlist?list=PLitFP8FdScfE5nwRovCwdhhW9RTx98q3J  , im teaching a couple of friends htdp and racket soo here are my videos explaining the basics n such, not sure if they'd prove valuable to your students since you guys have your own set of videos and lectures but sometimes it helps hearing 2 different explanations of things so if you feel these are valuable in some way, feel free to use em",,
3.79445E+17,joohnym#9531,2021-09-30,"Just curious, are there any free (or non-free) online courses on Racket?",,
3.79445E+17,joohnym#9531,2021-09-30,For OCaml there's the excellent CS3110. And I think Clojure has a few. But I've never seen one for Racket.,,
3.79445E+17,joohnym#9531,2021-09-30,(Actually I think the Lisps in general have a poor track record in that regard),,
6.46114E+17,samth#3420,2021-09-30,@joohnym see https://www.edx.org/course/how-to-code-simple-data?index=product&queryID=e2065d29aac9c71ce05fccaa761322a8&position=7,,‚è´ (1)
8.14743E+16,jimpjorps#0001,2021-09-30,"I‚Äôve seen good things about UBC‚Äôs How to Code course, then there‚Äôs the HTDP book for the racket-like student languages",,
6.46114E+17,samth#3420,2021-09-30,there's actually a series of those courses,,
3.79445E+17,joohnym#9531,2021-09-30,"I've stumbled into this one, but I was a bit disappointed that they don't use Racket explicitly -- instead the use the ""BSL"" , ""ASL"", etc...",,
3.79445E+17,joohnym#9531,2021-09-30,Not sure how much different those are,,
3.58051E+17,hazel#0271,2021-09-30,"these languages translate very well to learning later racket, they're effectively limited subsets with much better error messages",,
8.14743E+16,jimpjorps#0001,2021-09-30,"the only real difference is the size of the standard library, they‚Äôre like tiered levels of complexity rather than different languages",,
3.79445E+17,joohnym#9531,2021-09-30,Does the HTDP book have exercises?,,
3.58051E+17,hazel#0271,2021-09-30,many,,
8.14743E+16,jimpjorps#0001,2021-09-30,"yes, it‚Äôs almost all exercises",,
3.79445E+17,joohnym#9531,2021-09-30,Great!,,
4.90866E+17,JOST GRANT#1516,2021-09-30,"Only big gotcha via the edx course, is if you take the 'audit' (ie the free track) you have to complete it within the timespan listed or it'll lock you out",,
3.79445E+17,joohnym#9531,2021-09-30,A lot of the other Racket books don't,,
4.90866E+17,JOST GRANT#1516,2021-09-30,think it gives you like 2 months iirc?,,
3.79445E+17,joohnym#9531,2021-09-30,I see,,
4.90866E+17,JOST GRANT#1516,2021-09-30,"Then it's like 100+ usd for a ""certificate"" track and full access to videos again",,
8.14743E+16,jimpjorps#0001,2021-09-30,"Exercism has tracks for racket, clojure, common lisp and scheme, the racket track is somewhat unstructured but it‚Äôs got a decent collection of problems to work through",,
4.90866E+17,JOST GRANT#1516,2021-09-30,"There's another one of those ""excercise"" sites that have a few for Racket as-well iirc (looking for it now)",,
3.79445E+17,joohnym#9531,2021-09-30,Never heard of this,,
3.79445E+17,joohnym#9531,2021-09-30,looks interesting,,
4.90866E+17,JOST GRANT#1516,2021-09-30,Codewars was the other one I was thinking of,,
3.79445E+17,joohnym#9531,2021-09-30,"Also, iirc, you can't access the exercises on the audit version. So it's essentially just the lectures.",,
3.79445E+17,joohnym#9531,2021-09-30,I think that was another thing that bummed me out about that one,,
4.90866E+17,JOST GRANT#1516,2021-09-30,That's obnoxiously paywally if true ...,,
3.79445E+17,joohnym#9531,2021-09-30,it looks that way,,
3.79445E+17,joohnym#9531,2021-09-30,,https://cdn.discordapp.com/attachments/618895179343986688/893343840449228860/Screen_Shot_2021-09-30_at_8.49.05_PM.png,
4.90866E+17,JOST GRANT#1516,2021-09-30,"Honestly it's one of those things where I wish someone every major release would just try to do a big video-lecture covering key bits. A big ask, but happens few-and-far enough between releases of HTDP2e though where I think it would've helped Racket's growth a bit",,
4.90866E+17,JOST GRANT#1516,2021-09-30,"Like there's a crazy amount of textual information; But nowadays, especially under 20 y/os are really geared towards learning via youtubing stuff till they get a decent grasp before jumping right into documentation no-matter how good and/or in-depth it is",,
4.90866E+17,JOST GRANT#1516,2021-10-01,(( Tries for bed. o/ )),,
4.83487E+17,jest#6646,2021-10-01,https://www.coursera.org/learn/programming-languages-part-b dan grossmans programming langs part B covers beginning racket for experienced programmers,,rainbow_heart (1)
4.83487E+17,jest#6646,2021-10-01,"good course but not 100% geared to teaching every nook and cranny of racket, it briefly goes over macros but none of the LOP facilities n such",,
3.79445E+17,joohnym#9531,2021-10-01,Thanks!,,
3.79445E+17,joohnym#9531,2021-10-01,I also found this: https://zoo.cs.yale.edu/classes/cs201/,,
3.79445E+17,joohnym#9531,2021-10-01,"Not very user friendly, but there's a decent amount of material",,
2.14881E+17,Moinate#6061,2021-10-01,"^^ (edit: The Yale course)  Kind of like drinking from a fire hose. I'm struggling to imagine who the audience is. I guess an experienced programmer who can learn from seeing a single example of everything, I kind of feel like reading the Racket Guide might be a better source. Or heck, the Racket Cheat Sheet is probably pretty close to the lectures from that course.",,
8.14743E+16,jimpjorps#0001,2021-10-01,"yeah, the Grossman courses are aimed at, say, someone who's been using Java professionally for a few years but is curious about the theory behind it and what else is out there",,‚òùÔ∏è (1)
4.83487E+17,jest#6646,2021-10-01,https://cdn-media-1.freecodecamp.org/images/1*Rz0h6wA7E9kDHuwcqSsc5Q.jpeg,,"‚òùÔ∏è (3),thistbh (1)"
6.46114E+17,samth#3420,2021-10-01,@jest what's that from?,,
4.83487E+17,jest#6646,2021-10-01,https://www.deviantart.com/scotchi/art/keep-tryin-690533685 seems like it was made from this artist,,
4.83487E+17,jest#6646,2021-10-01,that one has a watermark over it so i can only presume he/she is alright with people using it,,
4.66395E+17,oaktownsam#0815,2021-10-01,https://www.youtube.com/watch?v=DN43sCyEanA,,
3.5323E+17,Alex Knauth#4895,2021-10-01,"The DeviantArt page says it was just a response to a post on tumblr, and points to a now-empty tumblr page called `scotchtapeofficial` (and also states pronouns He / Him). A reverse image search also points to a tumblr post by `scotchtapeofficial` replying to a post by `transhinsou-deactivated20181204` around 2017-07-04, the same date as the DeviantArt post.",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-10-02,"why units seem so underused? Does the concept have some not obvious catch? What would you use if you wanted to design decoupled software, eg following hexagonal architecture pattern",,
4.62028E+17,StephenD#5938,2021-10-02,By __units__ do you mean *pound-force seconds* or  *newton-seconds*?,,
4.62028E+17,StephenD#5938,2021-10-02,I had not heard of the __hexagonal architecture pattern__ very interesting.,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-10-02,"no, I meant https://docs.racket-lang.org/guide/units.html",,
4.62028E+17,StephenD#5938,2021-10-02,"I think the answer is __modules are better__. I think an explanation might be in the docs somewhere, or more likely in the racket-users email archive.",,
4.62028E+17,StephenD#5938,2021-10-02,I can‚Äôt look right now but if you find it I‚Äôll add it to the wiki,,
4.62028E+17,StephenD#5938,2021-10-02,"On May 7, 2020, at 12:44 AM, Philip McGrath wrote:

> Rather than designing an ad hoc system of indirection that can handle all of the complexity,* I suggest using the one that already exists: units, Racket's original, first-class (rather than first-order) module system, offer support for cyclic dependencies. In fact, they are used in the implementation of Racket's GUI framework to address precisely this problem.",,
2.75501E+17,Plane#0324,2021-10-02,some discussion: https://groups.google.com/g/racket-users/c/4MF2gdq4qWs/m/kEnXqoHoBQAJ,,plusone (1)
2.75501E+17,Plane#0324,2021-10-02,"i have never used units so i can't really comment much on the topic, but this discussion mentions the chronology and related papers so it seems like there's some starting points for the topic",,
4.62028E+17,StephenD#5938,2021-10-02,The FAQ has been updated with that link. https://github.com/racket/racket/wiki/Frequently-Asked-Questions,,
4.66395E+17,oaktownsam#0815,2021-10-02,"‚ö†Ô∏è ‚ö†Ô∏è ‚ö†Ô∏è 
Racket Meetup on Gather this afternoon/evening ‚òéÔ∏è  üì∫
1 PM PDT
4 PM EDT
8 PM UTC
10 PM CEST

https://gather.town/app/wH1EDG3McffLjrs0/racket-users
‚ö†Ô∏è ‚ö†Ô∏è ‚ö†Ô∏è",,ü•≥ (1)
4.62028E+17,StephenD#5938,2021-10-02,"thanks @oaktownsam 
London, United Kingdom Sat, 2 Oct 2021 at 21:00 BST
for other zones you can use this to find the meeting time in your location.

https://www.timeanddate.com/worldclock/converter.html?iso=20211002T200000&p1=136&p2=204&p3=179&p4=224",,
4.62028E+17,StephenD#5938,2021-10-02,90 minutes from now!,,
4.62028E+17,StephenD#5938,2021-10-02,60 minutes to go ( it happens at 8pm UTC),,
4.62028E+17,StephenD#5938,2021-10-02,it has started,,
4.62028E+17,StephenD#5938,2021-10-02,"Thank you to everyone who joined us today

I‚Äôm looking forward to seeing more of you at the next meet-up:
When: First Saturday EVERY Month UTC: 20:00 (30 minutes but can overrun)
Calendar: Google , iCal

Where: https://gather.town/app/wH1EDG3McffLjrs0/racket-users

The link is free for all - so if you want to organise a meet-up at a time that is better for your time zone please feel free! 

stephen",,
4.66395E+17,oaktownsam#0815,2021-10-02,Sorry I missed it.  I forgot that I had to chauffeur a 10yo to a birthday party.,,"üéÇ (5),üéà (5)"
8.09146E+17,darren#6252,2021-10-03,"Hi, I've been learning Racket for the last few months and am thinking of building a simple web app in Racket. 
I know the ecosystem is great and widely covered, but specifically for web app what is your opinion on Racket's ecosystem? By the way I am only talking about backend because there will be a separate frontend in react.",,
4.62028E+17,StephenD#5938,2021-10-03,Welcome @darren,,
4.62028E+17,StephenD#5938,2021-10-03,I couldn‚Äôt make a judgement but maybe you could try the Continue tutorial https://docs.racket-lang.org/continue/index.html,,
4.62028E+17,StephenD#5938,2021-10-03,There is also this video from the last RacketCon https://youtu.be/bIi-tUzOwdw,,
4.62028E+17,StephenD#5938,2021-10-03,https://racket-stories.com/about is a web app with all the usual features click ‚Äòabout‚Äô to see how it was set up,,üëç (1)
8.09146E+17,darren#6252,2021-10-03,Thanks @StephenD,,
4.62028E+17,StephenD#5938,2021-10-04,https://twitter.com/bogdanp/status/1445061764094234624?s=21,,üéâ (5)
7.14999E+17,gingerydoo#7461,2021-10-04,"It looks like ""syntax?"" ended up in an HTML title of the reference material. Not sure if this is already a known issue.",https://cdn.discordapp.com/attachments/618895179343986688/894679543644844052/unknown.png,
6.46114E+17,samth#3420,2021-10-04,What page is that? I don't think it's there in the HTML.,,
2.75501E+17,Plane#0324,2021-10-04,it seems to be <https://docs.racket-lang.org/reference/Reading.html>,,
2.75501E+17,Plane#0324,2021-10-04,i see the same thing in google search results,,
2.75501E+17,Plane#0324,2021-10-04,not sure you can do anything about google randomly changing page titles,,
7.73175E+17,meowüé∫#2842,2021-10-04,"So I'm documenting a REST API for a project and we're currently using Slate, which honestly sucks.",,
7.73175E+17,meowüé∫#2842,2021-10-04,"I'm considering moving to Scribble instead, having considered other alternatives like GitBook.",,
7.73175E+17,meowüé∫#2842,2021-10-04,Has anyone done something like this in Scribble before?,,
7.73175E+17,meowüé∫#2842,2021-10-04,As in documented something non-Racket in `scribble/manual`.,,
4.62028E+17,StephenD#5938,2021-10-04,There is also pollen,,
6.87833E+17,grey#8674,2021-10-04,"I‚Äôve done a *little* bit of trying to document non-Racket forms in Scribble. Unfortunately, unless the syntax is similar to Racket‚Äôs, you have to hack together solutions. It‚Äôs not easy to build new documentation forms, unless you‚Äôre just wrapping existing forms with a macro.",,
7.73175E+17,meowüé∫#2842,2021-10-04,"Pollen is better suited for books, no?",,
7.73175E+17,meowüé∫#2842,2021-10-04,"@grey Ah, that's a shame.",,
6.87833E+17,grey#8674,2021-10-04,"Pollen was built for books, but I think it‚Äôs well-suited to most static websites.",,üëç (1)
2.66505E+17,notjack#9941,2021-10-04,"Google has some docs somewhere about how that works, there's metadata you can shove on pages to control it",,
2.66505E+17,notjack#9941,2021-10-04,it's pretty interesting too. lots of semantic web and json-ld,,
4.90866E+17,JOST GRANT#1516,2021-10-04,Just need to create a fork of pollen called spore; geared towards static sites. lol,,
5.24323E+17,Ben Kenobi#5683,2021-10-05,"Just learned about swagger at work, might try that",,
7.73175E+17,meowüé∫#2842,2021-10-05,We use Swagger for barebones descriptions but our documentation needs lots of guides and examples.,,
1.03544E+17,J. Ryan Stinnett#0698,2021-10-06,"What are the best profiling tools in the Racket ecosystem at the moment? So far, I've found the profiling table view built in to DrRacket, `profile`, `profile-flame-graph`, and @bogdan's `dbg`.",,
7.94955E+17,Laurent O#6627,2021-10-07,"there's also `raco profile` which uses a sampling profiler, and it's better than profiling within DrRacket",,
8.60042E+17,bogdan#5654,2021-10-07,"`dbg` also just uses the `profile-lib` under the hood. `koyo` has a profiler, too (https://koyoweb.org/profiler/index.html), but that one requires you to manually instrument your code and it's web app-specific. It would be great if `profile-lib` could have a mode where it collects a timeline of call stacks (and the time spent therein), which would let us visualize the data as real flame graphs, but I don't know how feasible that would be without more support from Racket itself (`profile-lib` works by periodically sampling the current continuation marks).",,üëç (1)
8.60042E+17,bogdan#5654,2021-10-07,"`profile-flame-graph` reconstructs a call stack from the raw data gathered by `profile-lib` to generate the flame graph, but that data doesn't contain information about the timeline (in terms of wall clock time) of calls or even the time spent in individual frames so the final graph ends up being just a graph of the number of times each frame has appeared on the stack, which I haven't found to be particularly useful.",,
6.46114E+17,samth#3420,2021-10-07,"@bogdan I agree that the timeline sounds useful, but I think the `profile-flame-graph` approach is what most flame graph tools use",,
8.60042E+17,bogdan#5654,2021-10-07,You're right. I just had this style of flame graph in mind when I wrote that,https://cdn.discordapp.com/attachments/618895179343986688/895683456363790396/Screenshot_2021-10-07_at_17.45.06.png,
6.46114E+17,samth#3420,2021-10-07,I think it would be pretty easy to use the same approach that `profile-lib` uses to generate that kind of flame graph,,
4.62028E+17,StephenD#5938,2021-10-07,Racket New has hit the newsstands https://racket-news.com/2021/10/racket-news-issue-54.html  :racketflat: üì∞,,"plusone (2),üëç (1)"
8.09146E+17,darren#6252,2021-10-08,"Hi, 
Is there any command in `racket-mode` in emacs that is equivalent to `C-c C-c` in `slime` or `cider`? The command these modes is for *""compiling the top-level form at point""*. (https://common-lisp.net/project/slime/doc/html/Compilation.html)",,
2.64024E+17,Eutro#0016,2021-10-08,Are you looking for `racket-send-definition`?,,
2.64024E+17,Eutro#0016,2021-10-08,It's not bound to anything by default,,
8.09146E+17,darren#6252,2021-10-08,"Hmm, I am not sure about that.",,
2.64024E+17,Eutro#0016,2021-10-08,You won't be able to find an exact equivalent because Racket's REPL is different to CL's and Clojure's,,
2.64024E+17,Eutro#0016,2021-10-08,You're encouraged to just send the whole buffer to the REPL every time you change definitions,,üëç (1)
2.64024E+17,Eutro#0016,2021-10-08,Otherwise `racket-send-definition` does exactly what you want as far as I'm aware: it evaluates the definition at point,,
3.58051E+17,hazel#0271,2021-10-08,"is anyone aware of an analysis that extracts singleton variables from Racket programs [as in, constants that could be inlined]",,
4.66395E+17,oaktownsam#0815,2021-10-08,Are you asking about an analysis in general or a specific library call (or package) in Racket to do that analysis?,,
4.66395E+17,oaktownsam#0815,2021-10-08,"I don't know offhand of any specific analysis, but there may be something in cp0, but that's after all of the Racket code is expanded.",,
3.58051E+17,hazel#0271,2021-10-08,"something I can get a set of singleton variables out of, preferably",,
1.03544E+17,J. Ryan Stinnett#0698,2021-10-08,"@StephenD I noticed this old post (https://galois.com/blog/2020/10/discovering-and-mitigating-emergent-computations-with-innovative-program-synthesis/) about Galois using Racket (via Racket News), maybe it should be added to organisations list on the wiki?",,
2.66505E+17,notjack#9941,2021-10-08,what counts as a constant?,,
3.58051E+17,hazel#0271,2021-10-08,a non-closure or a closed lambda,,
3.58051E+17,hazel#0271,2021-10-08,"I'm just wondering if there's something in the existing literature that does this
I'm trying to compare my results to something else",,
2.66505E+17,notjack#9941,2021-10-08,ahh,,
1.03544E+17,J. Ryan Stinnett#0698,2021-10-08,"Just realised Racket docs are packaged as a docset for Dash (https://kapeli.com/dash), wow! ü•≥",,
2.66505E+17,notjack#9941,2021-10-08,Whoa that's pretty cool,,
2.66505E+17,notjack#9941,2021-10-08,I wonder if it works with docs for third party packages?,,
1.03544E+17,J. Ryan Stinnett#0698,2021-10-08,"It appears to contain the full docs site, so all packages that publish there! ü§©",,
2.66505E+17,notjack#9941,2021-10-08,wow :0 does it update regularly then?,,
8.14743E+16,jimpjorps#0001,2021-10-08,"yeah, looks like it takes a full rip of the online documentation",https://cdn.discordapp.com/attachments/618895179343986688/896162074022010930/unknown.png,
1.03544E+17,J. Ryan Stinnett#0698,2021-10-08,,https://cdn.discordapp.com/attachments/618895179343986688/896162138161311794/unknown.png,
1.03544E+17,J. Ryan Stinnett#0698,2021-10-08,"Haha, we sent the same example... üòÖ",,
1.03544E+17,J. Ryan Stinnett#0698,2021-10-08,"Unclear, might be one snapshot at Racket release time, I'll look around though...",,
8.14743E+16,jimpjorps#0001,2021-10-08,"yeah, not seeing anything in the app itself about how often the updates happen, but it's part of the official repo of docsets at least",,
1.03544E+17,J. Ryan Stinnett#0698,2021-10-08,"Dash docsets are packaged up as a feed (https://kapeli.com/docsets), so mainly it just depends how often the feed is regenerated... I don't think they make any specific commitment of speed for the official ones.",,
1.03544E+17,J. Ryan Stinnett#0698,2021-10-08,"The Racket docset is quite unique though (probably because of the docs site structure), since most other languages in Dash don't include the packages (since they are typically documented separately from the language itself).",,
1.03544E+17,J. Ryan Stinnett#0698,2021-10-08,Quite nice to have whole Racket docs ecosystem easily searchable locally and offline like this. üòÑ,,
8.09146E+17,darren#6252,2021-10-09,Maybe can you explain how *Racket's REPL is different to CL's and Clojure's*? Or can you share a document link so I can read.,,
3.58051E+17,hazel#0271,2021-10-09,"the big thing is that Racket has no mutable toplevel, for a lot of reasons",,
3.58051E+17,hazel#0271,2021-10-09,https://github.com/racket/racket/wiki/The-toplevel-is-hopeless,,
4.62028E+17,StephenD#5938,2021-10-09,This post helps : https://blog.racket-lang.org/2009/03/the-drscheme-repl-isnt-the-one-in-emacs.html,,
4.62028E+17,StephenD#5938,2021-10-09,There is a Racket FAQ on the wiki https://github.com/racket/racket/wiki/Frequently-Asked-Questions#why-is-the-racket-repl-different-to-common-lisp,,
8.09146E+17,darren#6252,2021-10-09,"Thanks for posting this, @StephenD, first of all. 
But I am not sure why it won't do top-level expression while below is available?
`racket-send-last-sexp`
`C-x C-e`
`Send the previous sexp to the Racket REPL`",,
8.09146E+17,darren#6252,2021-10-09,"And if a language forces to run by file (or namespace or buffer) but not by expression, I wouldn't call it REPL.",,
8.09146E+17,darren#6252,2021-10-09,Maybe this is the first thing I am disappointed by with Racket. üòû,,
8.14743E+16,jimpjorps#0001,2021-10-09,"as far as I understand it, it's just an acceptance that dynamic REPL history and reinterpretation often conflicts in an unresolvable way with things like macro expansion and forward references, and that it's often cleaner to just start a session over again with fresh definitions instead of try to come up with special forms like fexprs to handle the edge cases",,‚òùÔ∏è (1)
8.14743E+16,jimpjorps#0001,2021-10-09,or put limitations on macros like Clojure does,,
4.62028E+17,StephenD#5938,2021-10-09,From the comments to the blog post I get the impression that it would not be hard to implement (maybe I‚Äôm misreading).,,
4.62028E+17,StephenD#5938,2021-10-09,"In racket ‚Äòeverything is a library‚Äô so you could even implement an alternative REPL, with the behaviour you desire.",,üëç (1)
8.14743E+16,jimpjorps#0001,2021-10-09,"yeah, there's a known solution to it, just that for philosophical reasons it wasn't considered essential to implement",,
8.14743E+16,jimpjorps#0001,2021-10-09,probably based on the way that Matthias watched it cause more problems than solve for learners,,"üëå (1),‚è´ (1)"
4.62028E+17,StephenD#5938,2021-10-09,Racket has room for lots of perspectives - and all are welcome! ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è,,
8.09146E+17,darren#6252,2021-10-09,"Agreed. If top-level is difficult, below would be difficult also.
`racket-send-last-sexp`",,
6.88091E+17,mflatt#6350,2021-10-09,"It may be helpful to distinguish what's possible in the Racket REPL from the way it is normally used/supported in DrRacket. The Racket REPL can be used in the same way as a traditional Lisp REPL. DrRacket's Run button, however, encourages restarting a program and REPL afresh each time.",,
6.88091E+17,mflatt#6350,2021-10-09,"It's possible that Racket style/libraries use more macros and macro-like module imports than other Lisp environments, and that may make some REPL problems (related to incremental program extension) a little more common, but I don't think it turns out to be all that different.",,salute (1)
6.88091E+17,mflatt#6350,2021-10-09,"That said, many of us use a start-fresh-from-modules approach much more than a REPL-driven development approach.",,
8.09146E+17,darren#6252,2021-10-09,"And I agree that REPL drive approach would cause some problems especially when macros are heavily used. But many times I think we learn by failure/problems. For example, ""why it fails?"", ""what this is dependent on?"", or ""what is this function utilizing in deeper level?"".",,
2.14881E+17,Moinate#6061,2021-10-09,"Yes, but can you connect that to the REPL somehow?",,
2.14881E+17,Moinate#6061,2021-10-09,All those are good questions but maybe say how having a CL (Clojure?) repl lets you answer them more easily,,
1.93202E+17,rocketnia#4517,2021-10-09,does Clojure put some kind of limitation on its macros?,,
8.14743E+16,jimpjorps#0001,2021-10-09,it doesn't have user-definable reader macros,,
8.09146E+17,darren#6252,2021-10-09,"Good point. In Clojure (and probably CL too), it is quite common to run each top-level expression. For large applications, a buffer (namespace in JVM) may easily have more than a few hundred lines, sometimes several hundreds. In those cases, I always have to run by expression. I don't think that sending whole buffer helps much for large buffers.",,
7.14999E+17,gingerydoo#7461,2021-10-09,"I'm thinking through a macro that would map elements of an S-expression to structure fields, and vice-versa. The motivation is to have representations of structures in machine-readable text, without using `#:prefab`.

Hypothetical code follows. Has someone already implemented something like this?

```
(struct lamp (height-in-meters lumens)
  #:transparent)

(define-values (lamp->sexp sexp->lamp)
  ; syntax: field identifiers are
  ; unhygenically bound to placeholder values.
  ; Use unquote operator to distinguish
  ; field placeholders and identifiers
  ; meant to appear in an S-expression
  (sexp<->struct lamp
    (light (height ,height-in-meters))
           (lumens ,lumens)))

(define identity-function
  (compose sexp->lamp lamp->sexp))

(define tall-floor-lamp (lamp 1.5 60))

(equal? (identity-function tall-floor-lamp) tall-floor-lamp)
```",,
1.93202E+17,rocketnia#4517,2021-10-09,"If you write it like this...

```racket
(match<->
  (lamp height-in-meters lumens)
  `(light
     (height ,height-in-meters)
     (lumens ,lumens)))
```

then both sides are `match` patterns and both sides are expressions. And then the fact that structs and s-expressions are involved ends up being orthogonal to this abstraction, too.",,üëÄ (1)
1.93202E+17,rocketnia#4517,2021-10-09,"This would be a funky exercise of the binding arrow system, since these variables would have binding arrows in both directions.",,
4.90866E+17,JOST GRANT#1516,2021-10-09,"((typed on phone, half-asleep -- so hopefully makes sense and has no major errors lol)) But yeah, don't think even diehards would argue that it's cleaner and/or that it results in more  meaningful  (or meaningful at all , lol ) expansions  -- I think the real argument is that if the cost of such a thing is ""worth it"" and it's an interesting question. I personally don't care if something expands to nonsense because for me this workflow outweighs most if not all costs associated with it (at least via the lense of my very limited understanding of said costs), in some ways this degree of late-binding I'd assert is a fundamental feature in a Lisp -- this, seemingly especially in the Scheme community is pretty contentious. Lol And in Racket, not surprisingly (and I'm not saying this as a negative) is full of academics and heaving a clean, well thought out design, especially for PL nerds I think yeah, the toplevel-is-hopeless I think there's a strong argument to be made there ... Just sadly it kinda curtails my interest in Racket , knowing I'm going to be fighting this a lot. Especially when a goal for me originally is to push towards notably better / nicer  hot-code-reload / live redefinition in Godot than GDScript.",,plusone (4)
2.66505E+17,notjack#9941,2021-10-10,"I like that if you push late binding far enough to the extreme, you get microservices",,
2.66505E+17,notjack#9941,2021-10-10,the only difference between calling it hot code reloading and independent binary rollouts is how big the codebase is,,
4.90866E+17,JOST GRANT#1516,2021-10-10,"But in a Lisp, wouldn't this be called ""macroservices"" ?

I'll see myself out. Lool",,üòÇ (4)
3.94531E+17,Ben-Z#9246,2021-10-11,recently finished this post https://benhsz.github.io/the-struggle-with-prefix-syntax/ thoughts/opinions?,,üëç (1)
2.64024E+17,Eutro#0016,2021-10-11,"I've personally resolved these problems by reading internally:
- Unary `-` as ""negate""/""minus""
- Polyadic `-` as ""subtract-from""
- Comparisons `/[<>]=?/` as `/(strictly )?(a|de)scending/`

but I do agree that this is can be a barrier to program comprehension",,
2.64024E+17,Eutro#0016,2021-10-11,interestingly I really never had an issue with `-`,,
8.14743E+16,jimpjorps#0001,2021-10-11,I've been using an RPN calculator for long enough that I don't really think about it much any more,,
8.14743E+16,jimpjorps#0001,2021-10-11,the only operation that still gives me pause sometimes is `<`/`>` and I end up just using the infix notation directly for it,,
2.64024E+17,Eutro#0016,2021-10-11,(helpful diagram),https://cdn.discordapp.com/attachments/618895179343986688/897158286141456394/IMG_20211011_1725196522.jpg,
7.94955E+17,Laurent O#6627,2021-10-11,"Technically, that's called a quack diagram",,
7.73175E+17,meowüé∫#2842,2021-10-11,ü¶Ü,,
2.59166E+17,Nybuo#6172,2021-10-11,How do I use the check-expect command,,
2.59166E+17,Nybuo#6172,2021-10-11,It never works for me,,
3.58051E+17,hazel#0271,2021-10-11,"are you in `#lang racket`? if so, it doesn't exist",,
4.62028E+17,StephenD#5938,2021-10-11,You might want the checks in rackunit https://docs.racket-lang.org/rackunit/api.html#%28part._.Checks%29,,
3.58051E+17,hazel#0271,2021-10-11,or you may want to use the student languages,,
8.73621E+17,jules41#7579,2021-10-11,hey guys! i'm super new to racket and trying to understand syntax through a couple of example problems i was given,,
8.73621E+17,jules41#7579,2021-10-11,"for eg, how do i write a function that takes in a list of numbers, and moves all the zeroes to the end? i understand the general idea but cant reproduce it syntactically",,
2.66505E+17,notjack#9941,2021-10-11,what general idea do you have?,,
8.73621E+17,jules41#7579,2021-10-11,"if the list is empty, i return an empty list; if not, i use car to get the first item: if it's a nonzero value, i append it to a new list, and if it's zero, i recursively call the function (with cdr or whatever that is) and then append the zero after it",,
2.66505E+17,notjack#9941,2021-10-11,"yup that sounds right. So you want something like this
```scheme
(define (move-zeros lst)
  (cond
    [(empty? lst) case1]
    [(zero? (car lst)) case2]
    [else case3]))
```",,
5.43767E+17,Jules#2115,2021-10-11,"so, something like this? this isnt working though

(define (move-zeros lst)
  (cond
    [(empty? lst) '()]
    [(zero? car lst) append (move-zeros (cdr lst)) (car lst)]
    [else append (car lst) (move-zeros (cdr lst))]  ))",,
2.66505E+17,notjack#9941,2021-10-11,"you call append like `(append a b c)`, not `append a b c`",,
8.09146E+17,darren#6252,2021-10-12,"is there any `raco` command to create an empty project? for example, something like `lein new <project-name>` in clojure.",,
2.14881E+17,Moinate#6061,2021-10-12,"I think you're looking for this:
https://discord.com/channels/571040468092321801/667522224823205889/883095943849865279",,
8.09146E+17,darren#6252,2021-10-12,thanks.,,
3.58051E+17,hazel#0271,2021-10-12,hey @oaktownsam what tasks did you use sawzall at your dayjob for again?,,
4.66395E+17,oaktownsam#0815,2021-10-12,"I maintain a distributed datastore the whole things contains ~100 databases. The databases are split into chunks and each host in the cluster manages some number of chunks.

I'm using sawzall to fill a gap in the reporting from this software. From a management API I can get a list of tuples <hostname, databasename, number of chunks>, from that in sawzall I can figure out how much a database is out of balance and how many chunks need to be moved around to get to a certain level of balance.",,
2.27443E+17,Decabytes#9761,2021-10-12,"How do you profile typed code?
If I have a function

#lang typed/racket
(require profile)

(: square (-> Integer Integer))
(define (square num)
  (* num num))

(profile-thunk square 10)

I get the error

 Type Checker: missing type for identifier;
 consider using `require/typed' to import it
  identifier: profile-thunk",,
2.27443E+17,Decabytes#9761,2021-10-12,"but when I add typed/profile or typed/racket/profile I get the error
 3-unsaved-editor:2:9: cannot open module file
  module path: typed/racket/profile
  path: C:\Program Files\Racket\share\pkgs\typed-racket-more\typed\racket\profile.rkt
  system error: no such file or directory; rkt_err=3 in: typed/racket/profile
  no package suggestions are available",,
4.66395E+17,oaktownsam#0815,2021-10-12,"profile doesn't isn't type annotated so you have to use `require/typed`.  Here's a minimal typing of the function:
```scheme
#lang typed/racket
(require/typed profile
               [profile-thunk
                (->* ((-> Any))
                     (#:repeat Positive-Integer) Any)])

(: square (-> Integer Integer))
(define (square num)
  (* num num))

(profile-thunk
 #:repeat 1000000
 (lambda () (square 10)))
```",,
2.27443E+17,Decabytes#9761,2021-10-12,I see. Thanks!,,
4.83487E+17,jest#6646,2021-10-13,how can i create an invite link to this server?,,
4.83487E+17,jest#6646,2021-10-13,or can only mods do that?,,
2.75501E+17,Plane#0324,2021-10-13,There is always a link in #welcome but it doesn‚Äôt look like you can make your own,,
4.62028E+17,StephenD#5938,2021-10-13,Use this one it is set not to expire: Racket discord invite link https://discord.gg/6Zq8sH5,,
4.83487E+17,jest#6646,2021-10-13,https://www.youtube.com/playlist?list=PLXaqTeMx01E-l20YhTNwN4xncM-1jweqG,,
4.83487E+17,jest#6646,2021-10-13,another course using racket! not sure if its been noted yet,,
4.83487E+17,jest#6646,2021-10-13,do you guys transition your racket projects into typed racket at some point? or do you find you dont really need typed racket ?,,
4.66395E+17,oaktownsam#0815,2021-10-13,"I have done it for some scripts, but only a few times.  Every time I have done it afterward I feel much more confident about the reliability of the code.",,
4.83487E+17,jest#6646,2021-10-13,"https://youtu.be/5DlEj6daNEo , so it seems like its better if you go all in typed racket rather than integrating it gradually in terms of performance",,
2.14881E+17,Moinate#6061,2021-10-13,"For me it's typed racket from the start or never. I can see gradual typing for integrating existing code. I've tried it for speed but found the hot spots were in non-typed 3rd party code, which I left alone.",,plusone (1)
4.66395E+17,oaktownsam#0815,2021-10-13,I fairly rarely go to typed code for speed.  I'm more interested in the static checks and reducing runtime errors.,,üëç (3)
4.62028E+17,StephenD#5938,2021-10-13,Thanks for the video link I haven‚Äôt seen that üëç,,
4.83487E+17,jest#6646,2021-10-13,"yeah, luckily most of the things i do atm in racket are just small scripts n such so i can afford some slow down for static checks and robustness, but for real time apps using typed is sketchy unless you go all in straight off the bat",,
2.27443E+17,Decabytes#9761,2021-10-13,"I've feel this is definitely the way to go as well. I've only added type annotations to a couple of my projects, but both times, I've had to basically comment out all of my code, except for a few lines at a time, type check, get the errors to go away, then uncomment more code, due to cryptic error messages and painful debugging experiences. But your mileage may vary",,
4.62028E+17,StephenD#5938,2021-10-14,https://users.monash.edu/~damian/papers/PDF/SevenDeadlySins.pdf Valuable or historical interest only?,,
2.75501E+17,Plane#0324,2021-10-14,i would definitely say valuable,,
2.75501E+17,Plane#0324,2021-10-14,even though i'm not involved in pedagogical language design myself,,
2.75501E+17,Plane#0324,2021-10-14,i can see echoes of this paper in the rhombus design,,
3.87463E+17,drninjabatman#6521,2021-10-14,I wonder if one could disable the interface between the typed/untyped racket and get only the benefits. Is the interface just assertions or does it also do data transformation?,,
2.64024E+17,Eutro#0016,2021-10-14,It can be both.,,
2.64024E+17,Eutro#0016,2021-10-14,but technically just an assertion,,
2.64024E+17,Eutro#0016,2021-10-14,Typed Racket inserts contracts at typed <- untyped boundaries,,
2.64024E+17,Eutro#0016,2021-10-14,"contracts may wrap their types to do their assertions, though (e.g. function contracts)",,
2.64024E+17,Eutro#0016,2021-10-14,disabling these may be unsafe though,,
2.64024E+17,Eutro#0016,2021-10-14,"e.g. in
```scheme
(: foo (-> (Cons Number Number) Number))
(define (foo pair) (car pair))
```
The ""compiler"" may assume that `pair` is a pair and elide the runtime check, but if the contract is not enforced at a typed/untyped boundary then an untyped caller would be free to call it with anything, such as a fixnum, which would cause undefined behaviour.",,
7.72793E+17,Boris Kloris#4332,2021-10-14,On what platform will RacketCon 2021 be held? Also is there a site for the event?,,
4.66395E+17,oaktownsam#0815,2021-10-14,"There are unsafe trapdoors that can be used, but you lose safety https://docs.racket-lang.org/ts-reference/Unsafe_Typed_Racket_operations.html",,
4.66395E+17,oaktownsam#0815,2021-10-14,Also there is Ben Greenman's work which IIRC there is a RacketCon talk about from last year.,,
2.14881E+17,Moinate#6061,2021-10-14,Seven Deadly Sins (Teaching Programming),,
4.83487E+17,jest#6646,2021-10-14,"ben was working on ""transiently typed racket "" which avoids the perf slowdown of typed interacting with non-typed among other things  https://youtu.be/uAWcdD40hiI",,plusone (1)
4.62028E+17,StephenD#5938,2021-10-14,"I'm guessing they might use Gather.Town again, but I don't know for sure.",,racketflat (1)
7.72793E+17,Boris Kloris#4332,2021-10-14,Just used a named `let` for the first time. No more one-off internally defined helper functions! Life is good.,,
4.66395E+17,oaktownsam#0815,2021-10-14,"Ok, but hear me out.  One-off internally defined helper functions are actually good.",,
3.87463E+17,drninjabatman#6521,2021-10-14,"Was this controversial? Sussman uses them a lot in his books, I always thought it was a pattern",,
7.72793E+17,Boris Kloris#4332,2021-10-14,Isn't a named `let` superior? Instead of creating unnecessary bindings we limit the scope of the function and just use the result of an invocation.,,
4.66395E+17,oaktownsam#0815,2021-10-14,"For most purposes they are equivalent.  Internal `define` makes the code format ""better"" (less rightward drift.)",,
1.93202E+17,rocketnia#4517,2021-10-14,don't they create exactly the same number of bindings and have exactly the same amount of rightward drift?,,
8.14743E+16,jimpjorps#0001,2021-10-14,"same number of bindings, let will always add one level of drift",,
4.66395E+17,oaktownsam#0815,2021-10-14,As a script develops a lot of times I start with everything at the top level so a lot of globals and defines.  When I start to make proper API type functions I can just move the functions I've made into a private scope.,,
4.66395E+17,oaktownsam#0815,2021-10-14,A lot of named let uses can also be `for` loops,,
7.72793E+17,Boris Kloris#4332,2021-10-14,"imo named `let` makes this pattern much neater:
```
(... implicit begin ...
  (define (one-off-helper-function arg1 arg2 ...)
      ... some computation ...)
  (one-off-helper-function init1 init2 ...))
```
In this case I don't care about the `one-off-helper-function` except invoking it exactly once. It adds nothing other than separating the computation from its invocation.",,
7.72793E+17,Boris Kloris#4332,2021-10-14,"but you're right, rightward drift is a problem when the result of the `let` is being consumed rather than it just being used for its side effect",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-10-14,why do you need named let for this? Looks like a usecase for a plain let,,
7.72793E+17,Boris Kloris#4332,2021-10-14,`one-off-helper-function` is recursive,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-10-14,"alright. ""invoking it exactly once"" was terribly misleading.",,
7.72793E+17,Boris Kloris#4332,2021-10-14,oh lol you're right I meant outside of the function definition,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-10-14,"personally I too prefer internal defines if those internal functions make sense standalone. When I use named let it almost always has a stupid looking parameter with a stupid meaning for carrying around partial result (eg. result list but reversed), and making such function with a define doesn't feel right to me",,
7.72793E+17,Boris Kloris#4332,2021-10-14,"exactly my sentiments, thank you!",,
7.72793E+17,Boris Kloris#4332,2021-10-14,"I follow the ""this could've been an expression"" maxim when possible",,
1.93202E+17,rocketnia#4517,2021-10-14,"Yeah, the name I'd give to the helper function if it were global and public would be something like `<same-function-name>-with-<additional-derived-argument>` or `<same-function-name>-with-<hand-maintained-continuation-state>` or both. But that's a lot to write for some local control flow.",,
1.93202E+17,rocketnia#4517,2021-10-14,"Local `define` creates at least one level of rightward drift. In places where local `define` isn't directly supported, writing `(let () ...)` around it allows us to use it but creates a second level of drift.

That said, a nonlocal `define`, like one at the module level, can avoid rightward drift. There might be some advantage to being able to cut and paste the `define` between levels which allows this particular level of rightward drift to be less costly than others.",,
1.93202E+17,rocketnia#4517,2021-10-14,"Perhaps a big-picture approach to this would be to allow functions to have private keyword arguments. The keyword isn't exported from the module, and typically only the function's own recursive calls will use it. But Racket doesn't have a way to not export a keyword, so this is an idea for Rhombus or some other language.",,
4.66395E+17,oaktownsam#0815,2021-10-14,I also have a bias against `let` type forms because I have had to read massive `letrec` in scheme with 5-7 intertwined functions and values.  I just think defines read clearer ü§∑,,
2.14881E+17,Moinate#6061,2021-10-14,"For me hiding helper functions comes last. My biggest gripe about internal functions is they are not testable‚Ä¶ so better be right the first time. Burying real complexity there seems like ? Dangerous? Bad style? I know people do it, but I worry when I see it.",,
4.66395E+17,oaktownsam#0815,2021-10-14,"Most cases  that I've seen (and this goes for any ""hidden"" binding with a lambda) are so the programmer doesn't need to pass long argument lists",,
2.64024E+17,Eutro#0016,2021-10-14,this is what I do in C++ üò¨,,
4.66395E+17,oaktownsam#0815,2021-10-14,And ideally the outer function can be easily tested.  I agree that sometimes there are untested bits of code waiting to attack there though.,,
4.66395E+17,oaktownsam#0815,2021-10-14,In a lot of OOP languages classes are how you manage that complexity.,,
4.66395E+17,oaktownsam#0815,2021-10-14,I write some python like that.  But at least with python all methods are public so technically testable.,,
1.93202E+17,rocketnia#4517,2021-10-14,"hiding something from users of a library doesn't mean it has to be hidden from tests; see `friend` in C++ and `export ... to ...` in Java 9 modules, for instance",,
4.66395E+17,oaktownsam#0815,2021-10-14,"@notjack re: package splitting etc, do you think if we had a stable multiversion binary catalog that would help?  I've thought that if there was something like racksnaps but with an added dimension of Racket version that would be good.",,
2.66505E+17,notjack#9941,2021-10-14,"@oaktownsam yes, absolutely. Furthermore, I think that `raco pkg install` should install in `--binary` mode by default and only fall back to source installation when necessary, so it's transparent to users.",,
4.66395E+17,oaktownsam#0815,2021-10-14,Yep,,
4.66395E+17,oaktownsam#0815,2021-10-14,Really is an infrastructure project and a little bit (I assume) tooling change,,
2.66505E+17,notjack#9941,2021-10-14,"and you shouldn't need to add the built-packages catalog to your `raco pkg` configuration, it should just work like this by default",,
2.66505E+17,notjack#9941,2021-10-14,"Yup, agreed",,
7.94955E+17,Laurent O#6627,2021-10-14,"I usually want source as default, so i can look at the implementation, trace bugs and even fix them locally if needed (install in user scope)",,
7.94955E+17,Laurent O#6627,2021-10-14,Or even export things that are hidden üòã,,
2.66505E+17,notjack#9941,2021-10-14,"configuring for source as default should be possible, but my position is that the default behavior of `raco pkg install foo` should be to get you everything you need to _use_ `foo`, not everything you need to _develop_ `foo`. Giving people source code when they don't need it inflates install times and the costs of dependencies for no good reason.",,
4.66395E+17,oaktownsam#0815,2021-10-14,For things like that I normally do `--clone`,,
7.94955E+17,Laurent O#6627,2021-10-14,"You have a point, but if source is not the default, there will be a cognitive wall for me to get the source 'manually'. Or maybe in drracket we could have something like ""Want source?"" that reinstalls the package from source",,
1.93202E+17,rocketnia#4517,2021-10-14,"One of the things on my mind lately as I think about modules with arguments is the potential for *packages* with arguments.

I was recently impressed with the Conan package manager for the way it accounts for the idea that people want to distribute binaries specialized to particular architectures, OSes, compilers, upstream dependency versions, and other kinds of variability. Conan users often seem to prefer having their dependencies built from source anyway (for reasons I haven't investigated yet), but there seems to be a pretty well considered support for more sophisticated build caching setups.",,
2.66505E+17,notjack#9941,2021-10-14,bazel does something similar with build configuration arguments,,
1.93202E+17,rocketnia#4517,2021-10-14,"ah, fascinating :)",,
1.93202E+17,rocketnia#4517,2021-10-14,"There are a few things people might want out of installing a Racket package. Just being able to run the code is one, for sure. We might also count accessing the docs or integrating the plugin into DrRacket.

I think if those can be specialized into binary distributions, a challenge might crop up with respect to directory-linked packages. If one of your other installed packages B uses macros you define in a package A you're locally maintaining in a development directory, then you pretty much need B's source code just so you can rebuild it with your local versions of A's macros.",,
1.93202E+17,rocketnia#4517,2021-10-14,"(gonna need to read about Bazel, thank you!)",,
1.93202E+17,rocketnia#4517,2021-10-14,"In some sense I feel like there's gonna end up being a kind of ""macroexpander-ready"" source distribution needed just for expanding a package with different macro implementations, and then there'll be a ""maintainer-ready"" source distribution which has a codebase in the preferred form for modification.

The codebase might integrate multiple programming languages and build tools, and it might contain (or generate) multiple macroexpander-ready Racket packages. The codebase might integrate with projectional editing build tools that let people do topic-specific rearranging of the codebase. Presently, the difference between maintainer-ready and macroexpander-ready codebases is kept rather simple, and people just maintain packages directly in their macroexpander-ready form, but I think there's a bit of a design strain there in principle.",,
1.93202E+17,rocketnia#4517,2021-10-14,"So I'm thinking a package could be installed so it's ready to run (which just takes a platform-specific binary), ready to maintain the dependencies of (which requires a macroexpander-ready source distribution), or ready to maintain in its own right (which requires checking out a full maintainer-ready codebase somewhere).",,
1.93202E+17,rocketnia#4517,2021-10-14,"The typical installation would be one of the first two, perhaps upgraded automatically to a macroexpander-ready source distribution if any of the dependencies is checked out for direct maintenance",,
4.83487E+17,jest#6646,2021-10-14,"```scheme
;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib ""htdp-beginner-reader.ss"" ""lang"")((modname 4-formalize_starter) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
```
So for BSL and all the other languages, they insert like 3 lines of metadata right? Is the metadata ALWAYS going to be on the 3rd line? So all I need to do is `(third contents)` to get the meta data out o: ?",,
4.83487E+17,jest#6646,2021-10-14,`#lang htdp/bsl` has been around since 2016 lol... surely it should be stable now right... üòñ ü§û i should have pushed my course to dogfood it ... after watching mike s. 's talk on htdp in germany... i regret not introducing functions as `lambda` vs the syntactic sugar version ;s,,
3.58051E+17,hazel#0271,2021-10-14,I feel like introducing `lambda` too early has the potential to cause further confusion,,plusone (1)
3.58051E+17,hazel#0271,2021-10-14,"even if you say ""just write this""",,
3.58051E+17,hazel#0271,2021-10-14,and then get to the meaning later,,
4.83487E+17,jest#6646,2021-10-14,"just say its the keyword for writing a function lol, i feel like its more work to explain how there are 2 different ways of writing functions and that they're exactly the same thing except one can be used more dynamically/anonymously, rather than 1 to rule them all but ymmv'",,
2.14881E+17,Moinate#6061,2021-10-14,"Is `(define f (lambda (x) ...))` the `public static void main` of the Scheme world?
Sure wrecks the explanation that ""definition is the same as use"" for beginners to see the difference between a variable and a function.
Then I suppose you need to explain the syntax rule that transfoms
`((lambda (x) (+ x 5)) 8)`  into `(+ 8 5)` ... in one step?!
In case you can't tell how I feel about this... YIKES!
I much prefer the syntax rule that `(f 8)` when `f` is a function expands to the body of f with x replaced by 8... even if they are equivalent.",,
2.14881E+17,Moinate#6061,2021-10-14,...,,
2.14881E+17,Moinate#6061,2021-10-14,"I'm interested in any argument at all for introducing lambda in a course for beginners.
I'd stick with `(local [(define (f x) ...)]  ...use f...)` for the creation of functions (lambdas); that way is hardly any different from creating top-level functions.",,
8.14743E+16,jimpjorps#0001,2021-10-14,it was in a different language but the idea of a function at all took a while for me to explain,,
8.14743E+16,jimpjorps#0001,2021-10-14,throwing in lambda stuff would've been even more confusion on top of that,,
8.14743E+16,jimpjorps#0001,2021-10-14,"the biggest mental hurdle I found was from when you've got something that looks like `function f(x) = x + 1` or whatever, a lot of students get confused about what `x` is or why we're using it when we haven't defined it yet",,
8.14743E+16,jimpjorps#0001,2021-10-14,like a dog that looks at your pointing finger instead of what you're pointing at,,
4.83487E+17,jest#6646,2021-10-15,"uhhh, anyone running a racket snapshot version ?",,
4.83487E+17,jest#6646,2021-10-15,https://github.com/racket/drracket/issues/443,,
4.83487E+17,jest#6646,2021-10-15,mind screen shotting some emojis in latest drracket snapshot?,,
6.46114E+17,samth#3420,2021-10-15,,https://cdn.discordapp.com/attachments/618895179343986688/898568028273377280/Screenshot_from_2021-10-15_09-48-16.png,
6.46114E+17,samth#3420,2021-10-15,@jest ^,,
4.83487E+17,jest#6646,2021-10-15,is that on windows?,,
6.46114E+17,samth#3420,2021-10-15,No that's on linux,,
2.75501E+17,Plane#0324,2021-10-15,windows,https://cdn.discordapp.com/attachments/618895179343986688/898601322083913828/unknown.png,
4.83487E+17,jest#6646,2021-10-15,üò≠,,
2.75501E+17,Plane#0324,2021-10-15,sublime text on the same computer,https://cdn.discordapp.com/attachments/618895179343986688/898601644797861958/unknown.png,
4.83487E+17,jest#6646,2021-10-15,https://github.com/racket/drracket/issues/443#issuecomment-944301448,,
2.75501E+17,Plane#0324,2021-10-15,and vim in windows terminal,https://cdn.discordapp.com/attachments/618895179343986688/898602134768091136/unknown.png,
4.83487E+17,jest#6646,2021-10-15,ü§î does anyone know what version of cario drracket uses?,,
4.83487E+17,jest#6646,2021-10-15,"According to this 1.15.8 released in 2017 has some support: https://anzwix.com/a/Cairo/1.15.8%20Release

+* Support colored emoji glyphs, stored as PNG images in OpenType fonts.",,
4.83487E+17,jest#6646,2021-10-15,"https://docs.racket-lang.org/draw/libs.html , `""libcairo[.2]""` , 0.2 ?",,
4.83487E+17,jest#6646,2021-10-15,https://github.com/racket/racket/blob/98584f5e33522fa66cbc6d8f4568dceae8d64e6b/racket/src/native-libs/README.txt#L31 so it seems like its: cairo-1.14.12,,
2.75501E+17,Plane#0324,2021-10-15,yes the latest racket snapshot appears to have 1.14.12 in it,,
2.75501E+17,Plane#0324,2021-10-15,i double-checked by calling the cairo api,,
4.83487E+17,jest#6646,2021-10-15,welpp... hopefully upgrading wont trigger a ton of breaking changes...,,
2.75501E+17,Plane#0324,2021-10-15,"the docs for 1.16 claim ""no existing apis were altered""",,
4.83487E+17,jest#6646,2021-10-15,:meowblushcool: pleassee make it into 8.3 release ü§û,,
2.75501E+17,Plane#0324,2021-10-15,"in cairo odd numbers are development snapshots, even numbers are considered stable releases",,
2.75501E+17,Plane#0324,2021-10-15,"so ""no existing apis were altered"" is relative to 1.14",,
2.75501E+17,Plane#0324,2021-10-15,it sounds like 1.16 *should* be a relatively painless upgrade.  hopefully anyway lol,,
2.75501E+17,Plane#0324,2021-10-15,"also, 1.16.0 has been the stable release for three years now, so i guess there haven't been any big fires to put out with it",,
2.98235E+17,a11ce#0027,2021-10-15,whats the difference between an input port from `open-input-file` and one passed to `read-syntax`?,,
2.98235E+17,a11ce#0027,2021-10-15,"i have a parse function which takes an input port, it works correctly with `open-input-file` but loops really weirdly with `read-syntax`",,
2.98235E+17,a11ce#0027,2021-10-15,something about how the end is marked maybe?,,
2.98235E+17,a11ce#0027,2021-10-15,"actually yeah i think thats the issue, how do i detect the end of an input port properly",,
1.93202E+17,rocketnia#4517,2021-10-16,"if `read-syntax` reaches the end of a stream without reading anything but comments and whitespace, it returns `eof`. A lot of other port reading functions can return `eof` as well. You can check for `eof` with `eof-object?`.",,
1.93202E+17,rocketnia#4517,2021-10-16,"If you're making a custom reader, you might have found your way into a situation where the reader successfully reads a non-`eof` value from an empty stream. For instance, you might return the empty string for that or something. That could easily create a looping situation where you just keep getting empty results",,
4.83487E+17,jest#6646,2021-10-16,"tempted to try and update cairo myself but it seems like racket patches cairo and other libs., so i presume it might not be as simple as drop and replace ? : https://github.com/racket/racket/tree/master/racket/src/native-libs/patches . for those who build racket from source, how long does it usually take ?",,
2.75501E+17,Plane#0324,2021-10-16,Oh!  I really didn‚Äôt realize all those patches were there‚Ä¶,,
2.75501E+17,Plane#0324,2021-10-16,Looks like it might not be that bad,,
4.83487E+17,jest#6646,2021-10-16,i will just wait for matthew lol,,
2.98235E+17,a11ce#0027,2021-10-16,"im pretty sure this is the issue, how do i fix it?",,
2.98235E+17,a11ce#0027,2021-10-16,code for question,,
1.93202E+17,rocketnia#4517,2021-10-16,"Hmm, the examples used in the ""Defining new #lang languages"" section of the docs... don't solve it. They just define a `read-syntax` function that reads the whole stream as a string and doesn't report `eof` ever. They work for their intended purpose because a #lang's `read-syntax` is only called once for the whole file.

Depending on what you're trying to do, perhaps you could:

- Check whether you're at the end of the stream, and return `eof`, even if there's another result you'd rather return for that. Other parts of the program might need to be refactored to account for this.

- Use mutable state in your reader. Have it so one read returns an empty result, and the next read returns `eof`. This could take some refactoring, too. In particular, this makes it necessary to think about how the reader's state is being initialized and encapsulated, so that if you use the reader twice, the state of one run doesn't interfere with the other.",,
1.93202E+17,rocketnia#4517,2021-10-16,"oops, gonna catch up with the thread",,
2.98235E+17,a11ce#0027,2021-10-16,thank you!!,,
2.98235E+17,a11ce#0027,2021-10-16,"> They work for their intended purpose because a #lang's read-syntax is only called once for the whole file.
could you explain this a bit more? if read-syntax is only called once, where's the loop coming from?",,
1.93202E+17,rocketnia#4517,2021-10-16,"I'm wondering that too, since you are writing a #lang...",,
1.93202E+17,rocketnia#4517,2021-10-16,"seems like it wouldn't loop, at least not for this reason",,
2.98235E+17,a11ce#0027,2021-10-16,let me put some displaylns,,
2.98235E+17,a11ce#0027,2021-10-16,okay no yeah thats where the loop is,,
2.98235E+17,a11ce#0027,2021-10-16,calling port->string in read-syntax doesnt work because the lexer in parser-tools/lex needs a port,,
2.98235E+17,a11ce#0027,2021-10-16,"`(open-input-string (port->string in))` also doesnt work lmao so it looks like,, read-syntax is just getting called a bunch of times for unknown reasons",,
1.93202E+17,rocketnia#4517,2021-10-16,"yeah, I'd be surprised if you had to convert the port to a string before passing it to the lexer",,
1.93202E+17,rocketnia#4517,2021-10-16,in that `match` in `parse-aux`...,,
1.93202E+17,rocketnia#4517,2021-10-16,are you forgetting to call `(rest expr-aux)`?,,
1.93202E+17,rocketnia#4517,2021-10-16,that could create a loop,,
2.98235E+17,a11ce#0027,2021-10-16,dont think so,,
2.98235E+17,a11ce#0027,2021-10-16,"i put
```
(displayln expr-aux)
(displayln (eof-object? (first expr-aux)))
```
at the start and",,
2.98235E+17,a11ce#0027,2021-10-16,(leaving in the read-syntax alert),,
2.98235E+17,a11ce#0027,2021-10-16,"```
read-syntax called!
(#<eof>)
#t
read-syntax called!
(#<eof>)
#t
```",,
2.98235E+17,a11ce#0027,2021-10-16,i dont think forgetting (rest expr-aux) would call read-syntax?,,
2.98235E+17,a11ce#0027,2021-10-16,actually theres one more thing im iffy about,,
2.98235E+17,a11ce#0027,2021-10-16,"```

(provide (rename-out [module-begin-esAsm #%module-begin]))


(define-syntax-rule (module-begin-esAsm body)
  (#%plain-module-begin
   (interp-esAsm 'body)))
```",,
1.93202E+17,rocketnia#4517,2021-10-16,"is ""read-syntax called!"" displayed at the start of `read-syntax-esAsm`?",,
2.98235E+17,a11ce#0027,2021-10-16,ya,,
2.98235E+17,a11ce#0027,2021-10-16,"i can do this and it loops in the exact same way:
```
(provide (rename-out [module-begin-esAsm #%module-begin]))


(define-syntax-rule (module-begin-esAsm body)
  (#%plain-module-begin
   (uh-oh)))

(define (uh-oh)
  (error "":(""))
```",,
2.98235E+17,a11ce#0027,2021-10-16,so. yeah the reader is the issue,,
1.93202E+17,rocketnia#4517,2021-10-16,is this everything you get in the log for `racket t2.rkt`? what about at the beginning of the loop?,,
2.98235E+17,a11ce#0027,2021-10-16,"```
a11ce@cat ~> racket t2.rkt
read-syntax called!
((NEWLINE) (OPCODE shn) (INT 1) (NEWLINE) #<eof>)
#f
((OPCODE shn) (INT 1) (NEWLINE) #<eof>)
#f
(#<eof>)
#t
((INT 1) (NEWLINE) #<eof>)
#f
read-syntax called!
(#<eof>)
#t
read-syntax called!
(#<eof>)
#t
```",,
2.98235E+17,a11ce#0027,2021-10-16,etc,,
2.98235E+17,a11ce#0027,2021-10-16,"thats, ,basically correct at the start?",,
1.93202E+17,rocketnia#4517,2021-10-16,"ah, wow  interesting",,
2.98235E+17,a11ce#0027,2021-10-16,"okay in the 'defining new #lang languages docs' i see:
> Whereas s-exp lets a programmer specify a module language at the expander layer of parsing, reader lets a programmer specify a language at the reader level.",,
2.98235E+17,a11ce#0027,2021-10-16,which suggests that ive done something terribly wrong,,
2.98235E+17,a11ce#0027,2021-10-16,"because, ,yeah i need the reader level ,, my language is not s-exps",,
1.93202E+17,rocketnia#4517,2021-10-16,you're not using `s-exp` anyway,,
2.98235E+17,a11ce#0027,2021-10-16,yeah i am,,
2.98235E+17,a11ce#0027,2021-10-16,https://discord.com/channels/571040468092321801/898817035751030824/898822170984206346,,
2.98235E+17,a11ce#0027,2021-10-16,okay yeah,,
2.98235E+17,a11ce#0027,2021-10-16,"> The syntax/module-reader module language abstracts over common parts of a language implementation to simplify the creation of new languages. In its most basic form, a language implemented with syntax/module-reader simply specifies the module language to be used for the language, in which case the reader layer of the language is the same as Racket.",,
2.98235E+17,a11ce#0027,2021-10-16,"> **in which case the reader layer of the language is the same as Racket.**
is exactly what i dont want",,
1.93202E+17,rocketnia#4517,2021-10-16,"you're writing `#lang esAsm`, not `#lang s-exp esAsm/lang/reader`",,
2.98235E+17,a11ce#0027,2021-10-16,ah okay,,
2.98235E+17,a11ce#0027,2021-10-16,well like,,
2.98235E+17,a11ce#0027,2021-10-16,the reader uses s-exp? im not sure of the terminology,,
2.98235E+17,a11ce#0027,2021-10-16,"but what im doing is similar to the ""Using #lang s-exp syntax/module-reader"" section of the docs",,
1.93202E+17,rocketnia#4517,2021-10-16,"that's describing what happens if you don't have `#:read` and `#: read-syntax` in that file, which you do",,
2.98235E+17,a11ce#0027,2021-10-16,oh okay,,
2.98235E+17,a11ce#0027,2021-10-16,maybe its an issue that im not returning a syntax object?,,
1.93202E+17,rocketnia#4517,2021-10-16,"I think if that were an issue, the error would be ""expected syntax"" rather than an infinite loop",,
1.93202E+17,rocketnia#4517,2021-10-16,"when I look at other examples of `(lexer ...)`, they're not recursive. The lexer just reads one token and returns a data structure for that one, rather than a whole list. I'm wondering if that could be a source of trouble here",,
1.93202E+17,rocketnia#4517,2021-10-16,"This one, for instance: https://github.com/racket/parser-tools/blob/d76cb89c36c22ce569475b628164393c9ed35fb6/parser-tools-lib/parser-tools/examples/calc.rkt",,
2.98235E+17,a11ce#0027,2021-10-16,IT WORKED,,
2.98235E+17,a11ce#0027,2021-10-16,okay im interested in this and will def check it out,,
2.98235E+17,a11ce#0027,2021-10-16,but,,
2.98235E+17,a11ce#0027,2021-10-16,"```
#lang racket

(provide (rename-out [read-syntax-esAsm read-syntax]))


(require ""../parser.rkt"")

(define (read-esAsm in)
  (read-syntax-esAsm #f in))

(define (read-syntax-esAsm src in)
  (define module-datum `(module esAsm-syntax esAsm/esAsm
                          ,(parse-esAsm in)))
  (datum->syntax #f module-datum))
```",,
2.98235E+17,a11ce#0027,2021-10-16,works!!,,
1.93202E+17,rocketnia#4517,2021-10-16,ooh!,,
2.98235E+17,a11ce#0027,2021-10-16,the result is `((shn (INT 1)) #<eof>)` so it breaks later,,
2.98235E+17,a11ce#0027,2021-10-16,but thats super fixable,,
2.98235E+17,a11ce#0027,2021-10-16,i am gonna compare mine to the example u posted bc im curious whats up w that,,
1.93202E+17,rocketnia#4517,2021-10-16,what was the change that made it work? was it returning a syntax object after all? üòÖ,,
2.98235E+17,a11ce#0027,2021-10-16,well i switched from `#lang s-exp syntax/module-reader` to `#lang racket` for the reader (and yaknow like undid the shortcuts that module-reader lets you do) and then it complained abt no syntax,,
2.98235E+17,a11ce#0027,2021-10-16,so yeah i think?? i was right abt not wanting module-reader because i wanna do my own reader,,
2.98235E+17,a11ce#0027,2021-10-16,or probably more like. stopped clock is right twice a day,,
2.98235E+17,a11ce#0027,2021-10-16,"but either way, it works !!!!",,
2.98235E+17,a11ce#0027,2021-10-16,thank u so much for your help,,
1.93202E+17,rocketnia#4517,2021-10-16,"oh, fascinating... oh... I think `#:read-syntax` in `syntax/module-reader` is called more than once XD",,
1.93202E+17,rocketnia#4517,2021-10-16,"> `#:read` and `#:read-syntax` (both or neither must be supplied) specify alternate readers for parsing the module body‚Äîreplacements `read` and `read-syntax`, respectively. Normally, the replacements for `read` and `read-syntax` are applied repeatedly to the module source until `eof` is produced, but see also `#:whole-body-readers?`.",,
1.93202E+17,rocketnia#4517,2021-10-16,"> `#:whole-body-readers?` specified as true indicates that the `#:read` and `#:read-syntax` functions each produce a list of S-expressions or syntax objects for the module content, so that each is applied just once to the input stream.",,
2.98235E+17,a11ce#0027,2021-10-16,ahh,,
2.98235E+17,a11ce#0027,2021-10-16,good to know,,
1.93202E+17,rocketnia#4517,2021-10-16,so `#:whole-body-readers? #t` in your file could have potentially fixed it without going to `#lang racket`,,
1.93202E+17,rocketnia#4517,2021-10-16,"so, multiple options seem to be available üôÇ",,
2.98235E+17,a11ce#0027,2021-10-16,"yeah, ill try that out tomorrow (and investigate the non-recursive lexer)",,
2.98235E+17,a11ce#0027,2021-10-16,"for now, ,sleep",,
2.98235E+17,a11ce#0027,2021-10-16,"gn , tysm",,
1.93202E+17,rocketnia#4517,2021-10-16,"'night, glad there's progress",,
8.09146E+17,darren#6252,2021-10-16,"A quick survey-like question. What database do you use with Racket? Or, in other words, which database works well with Racket?",,
4.83487E+17,jest#6646,2021-10-16,probably sqlite works best with racket i'd imagine,,
2.75501E+17,Plane#0324,2021-10-16,i'm a fan of postgresql,,
2.75501E+17,Plane#0324,2021-10-16,sqlite is nice too,,
2.75501E+17,Plane#0324,2021-10-16,for different use cases,,
8.09146E+17,darren#6252,2021-10-16,"Thanks. I think what you mentioned resonates with the document I just found.
https://docs.racket-lang.org/db/index.html",,
4.66395E+17,oaktownsam#0815,2021-10-16,"sqlite is easy to set up, but because it uses  FFI it can block the rest of the Racket runtime.  The connection can be run in a separate os thread/place but there are notes https://docs.racket-lang.org/db/notes.html#%28part._ffi-concurrency%29",,
4.66395E+17,oaktownsam#0815,2021-10-16,postgresql/mysql are more featureful and use Racket based connections (and are non-blocking) but require setting up a db server.,,
4.83487E+17,jest#6646,2021-10-17,is there a htdp style guide for beginners somewhere? not the racket style guide cause its a bit too much,,
8.14743E+16,jimpjorps#0001,2021-10-17,"I haven‚Äôt seen one, but I think you could boil it down to ‚Äúuse the autoformatter‚Äù and ‚Äúput one space between words, no spaces after an opening paren and no spaces before a closing paren‚Äù",,"üòé (2),plusone (1)"
7.94955E+17,Laurent O#6627,2021-10-18,"""no space"" includes ""no newline""",,
8.71976E+17,hireth#0613,2021-10-18,"The ""How to Code"" course on edx has one",,
4.62028E+17,StephenD#5938,2021-10-18,Thanks @hireth @jest More details in #resources message: https://discord.com/channels/571040468092321801/710960886298312724/821072184058707998,,
2.14881E+17,Moinate#6061,2021-10-18,"Agreed, the Racket style guide is not for beginners.
http://community.schemewiki.org/?scheme-style
Rules 1-3 at least.",,
4.66395E+17,oaktownsam#0815,2021-10-19,This seems useful for new folks: https://learnxinyminutes.com/docs/racket/,,
4.83487E+17,jest#6646,2021-10-19,minor nitpick but i wish scheme/lisps would have standardized around  `//` and `/* */`  for comments lol,,
3.58051E+17,hazel#0271,2021-10-19,don't make me invoke wadler's law,,
4.83487E+17,jest#6646,2021-10-19,https://www.jing.fm/clipimg/full/165-1654076_raise-both-hands-if-pepe-hands-up-emote.png,,
4.66395E+17,oaktownsam#0815,2021-10-19,@jest make a reader macro `#//`,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-10-20,yeah same. I still use `;;` isntead of just `;` just because of how used am I to `//`,,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-10-20,"not a fan of `#|` , it feels awkward to type üò¶ I guess `/*` is also awkward if you have small keyboard, but on a big one with numpad those keys are there next to each other, very nice",,
2.34164E+17,python#3213,2021-10-20,I love #; comments. very useful,,plusone (6)
2.27443E+17,Decabytes#9761,2021-10-20,"Anyone tried to download a play with #lang rhombus?
I tried doing
git clone https://github.com/racket/rhombus-brainstorming.git && cd rhombus-brainstorming
git fetch origin pull/163/head:prototype
git checkout prototype
cd rhombus && raco pkg install enforest/ shrubbery/ rhombus/

but when I typed #lang rhombus into Drracket I'm getting the error

\rhombus-brainstorming\rhombus\rhombus\private\annotation.rkt:32:9: for-space: not a provide sub-form in: (for-space rhombus/annotation #%tuple)",,
4.83487E+17,jest#6646,2021-10-20,"ughh, said this before but sometimes when i open drracket, it crashes the entire x11 server.... anyone have this issue on linux running 8.3 ? are there any logs of racket or x11 i should look into ?",,
4.62028E+17,StephenD#5938,2021-10-20,"yes but who made the mistake of getting ISO uk keyboard I have a dedicated key for `¬ß`, but keyboard gymnastics are required for `#` (ok its just alt-3 but still annoying)",,
6.46114E+17,samth#3420,2021-10-20,"@Decabytes you need to use a more recent version of Racket (eg, a snapshot)",,
2.75501E+17,Plane#0324,2021-10-20,"that's interesting, maybe because i've always been used to various comment conventions that never occurred to me",,
2.75501E+17,Plane#0324,2021-10-20,i'm pretty comfortable with `;`,,
2.75501E+17,Plane#0324,2021-10-20,"i like it more than, say, `#`",,
2.75501E+17,Plane#0324,2021-10-20,(i don't have to press shift!),,
2.75501E+17,Plane#0324,2021-10-20,"but i guess there is value in matching people's expectations, so `//` and `/* */` in rhombus make sense",,
2.27443E+17,Decabytes#9761,2021-10-20,"oh Sorawee's installation instructions mention that any version of Racket works now, but maybe that isn't the case",,
4.66395E+17,oaktownsam#0815,2021-10-20,I believe he meant any recent snapshot.  There was a short time where only one specific snapshot version worked.,,
6.35962E+17,oofoe#4869,2021-10-20,"Is there a way to build a string constant with a syntax? @Ben Kenobi helped me earlier with a syntax to deal with quoted lists and suggested that I could have it fall back to create symbols. Since Urlang ""compiles"" to JavaScript and JavaScript doesn't really have symbols I thought I could have it fallback to making a quoted symbol a string: `'bork` translates to `""bork""` in JavaScript, right? I tried this:
```(define-urlang-macro quote
  (syntax-parser
    [(_ (e ...)) #'(array e ...)]
    [(_ e) #'""e""]))```
But it fails because the *e* doesn't get replaced correctly and even so, it doesn't recognize it as a string, but decides that `""e""` is an undefined symbol.",,
6.35962E+17,oofoe#4869,2021-10-20,"Whoops, Sorry wrong channel.",,
5.24323E+17,Ben Kenobi#5683,2021-10-20,Try `[(_ e:id) #'(symbol->string e)]` I think.,,
3.5323E+17,Alex Knauth#4895,2021-10-20,I don't think that will work,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,Oh you need to re-quote e,,
3.5323E+17,Alex Knauth#4895,2021-10-20,but how to re-quote when you're re-defining quote?,,
3.5323E+17,Alex Knauth#4895,2021-10-20,I suppose you could import the old quote with a prefix to avoid a conflict,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,`[(_ e:id) #'(symbol->string (base-quote e))]` (I had an example with that earlier),,
6.35962E+17,oofoe#4869,2021-10-20,"The problem is that there is no ""quote"" in the JavaScript target.",,
6.35962E+17,oofoe#4869,2021-10-20,"Yeah, even without my macro, `(quote XXXXX)` dies as undefined.",,
5.24323E+17,Ben Kenobi#5683,2021-10-20,"You could also do it at compile time with syntax->datum, symbol->string, and datum->syntax, I think",,üçâ (1)
6.35962E+17,oofoe#4869,2021-10-20,This usually indicates that a particular Lisp function isn't available in Urlang...,https://cdn.discordapp.com/attachments/618895179343986688/900517010709049414/unknown.png,
6.35962E+17,oofoe#4869,2021-10-20,"(I guess I should have said ""unbound"", not ""undefined"".)",,
5.24323E+17,Ben Kenobi#5683,2021-10-20,So like `[(_ e:id) (datum->syntax this-syntax (symbol->string (syntax->datum #'e)))]` or whatever the argument order is,,
6.35962E+17,oofoe#4869,2021-10-20,Let me try it!,,
6.35962E+17,oofoe#4869,2021-10-20,"W00T!
```(define-urlang-macro quote
  (syntax-parser
    [(_ (e ...)) #'(array e ...)]
    [(_ e:id) (datum->syntax this-syntax (symbol->string (syntax->datum #'e)))]
    ))```",,üî• (1)
6.35962E+17,oofoe#4869,2021-10-20,"So, that turns
```   (define test '(1 2 3 4))
   (define testc 'Snacklepoz)```
into:
```var test=[1,2,3,4];
var testc=""Snacklepoz"";```",,
6.35962E+17,oofoe#4869,2021-10-20,"Which is just about perfect, from my point of view.",,
5.24323E+17,Ben Kenobi#5683,2021-10-20,Pretty soon you‚Äôll have a serious list of cases and be making a PR into urlang üôÇ,,
6.35962E+17,oofoe#4869,2021-10-20,"; - ) It would certainly be convenient to have these! I'm not sure why they're not there, unless maybe he figured that the semantic gap was too wide -- a simple string in JavaScript is not quite the same thing as a symbol...",,
3.5323E+17,Alex Knauth#4895,2021-10-20,"Normally Lisp ""quote"" operations tend to automatically quote their sub-pieces",,
3.5323E+17,Alex Knauth#4895,2021-10-20,like normally `(quote (a b c))` produces something like `(list (quote a) (quote b) (quote c))`,,
6.35962E+17,oofoe#4869,2021-10-20,"Huh. In that case, I'm kind of going at this backwards.",,
3.5323E+17,Alex Knauth#4895,2021-10-20,sorry I was wrong,,
3.5323E+17,Alex Knauth#4895,2021-10-20,I edited,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,"Yeah my original suggestion was to fall back to the old quote for un-handled cases, but that wont work for urlang. I also didn‚Äôt consider the quoting of the array pieces, which probably should happen. And then you have to handle numbers and such",,
6.35962E+17,oofoe#4869,2021-10-20,Is there something for syntaxes that iterates across the `e ...`  stuff?,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,How so you mean? You can do crazy things with the ellipses.,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,"Say, `(displayln e) ‚Ä¶` works like you might expect",,
6.35962E+17,oofoe#4869,2021-10-20,"In which case `'(` could do that to convert them all to `(list (quote ...)...)`, and then single arg quote would expand (or not) based on type (for numbers).",,
6.35962E+17,oofoe#4869,2021-10-20,Oh! So `(list (quote e) ...)` might work?,,
3.5323E+17,Alex Knauth#4895,2021-10-20,yeah,,
3.5323E+17,Alex Knauth#4895,2021-10-20,syntax-parse ellipses are pretty amazing,,
6.35962E+17,oofoe#4869,2021-10-20,"Hmmm. Doesn't seem to like this:
```(define-urlang-macro quote
  (syntax-parser
    [(_ (e ...)) #'(array (quote e) ...)]
    [(_ e:id) (datum->syntax this-syntax (symbol->string (syntax->datum #'e)))]
    ))```",,
6.35962E+17,oofoe#4869,2021-10-20,"Ah, but maybe because of the number.",,
3.5323E+17,Alex Knauth#4895,2021-10-20,Something for quote to handle numbers?,,
6.35962E+17,oofoe#4869,2021-10-20,"OK, I need an `e:int matcher or something...",,
5.24323E+17,Ben Kenobi#5683,2021-10-20,"I think there‚Äôs :number, but check the syntax-parse docs for classes.",,
3.5323E+17,Alex Knauth#4895,2021-10-20,you mean like the `integer` syntax-class?,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,^,,
3.5323E+17,Alex Knauth#4895,2021-10-20,or the `number` syntax-class works too right,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,"But again, ‚Äúand such‚Äù‚Äîyou need to handle anything you might want to quote into a list. Heck, then you might want quasi- and un-quote for building arrays with more complex components. You lucked out earlier because numbers are self-quoting in racket üôÇ",,
6.35962E+17,oofoe#4869,2021-10-20,I don't mind if it doesn't handle *all* cases just yet...,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,"'Course, you could just bail on expressions that aren‚Äôt simple datums (numbers), lists, or symbols.",,
5.24323E+17,Ben Kenobi#5683,2021-10-20,Right,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,Then it‚Äôs a syntax error üôÇ,,
6.35962E+17,oofoe#4869,2021-10-20,"This is definitely doing much more nicely now (with :number added):
```var test=[1,2,""fishstick"",4,""elbow-cream""];
var testc=""Snacklepoz"";```",,
6.35962E+17,oofoe#4869,2021-10-20,"And latest code is
```(define-urlang-macro quote
  (syntax-parser
    [(_ (e ...)) #'(array (quote e) ...)]
    [(_ e:number) #'e]
    [(_ e:id) (datum->syntax this-syntax (symbol->string (syntax->datum #'e)))]
    ))```",,
3.5323E+17,Alex Knauth#4895,2021-10-20,I also suggest adding a string case,,
6.35962E+17,oofoe#4869,2021-10-20,"Before I was leaning on the behaviour of his ""array"", which handled that stuff to some degree as well.",,
6.35962E+17,oofoe#4869,2021-10-20,"String would be just like number, but with `:string` right?",,
3.5323E+17,Alex Knauth#4895,2021-10-20,Yep,,
6.35962E+17,oofoe#4869,2021-10-20,"Works nicely:
```(define-urlang-macro quote
  (syntax-parser
    [(_ (e ...)) #'(array (quote e) ...)]
    [(_ e:number) #'e]
    [(_ e:string) #'e]
    [(_ e:id) (datum->syntax this-syntax (symbol->string (syntax->datum #'e)))]
    ))```",,
6.35962E+17,oofoe#4869,2021-10-20,"Is there really anything else to worry about in ""normal"" (non quasi-quote) usage? (Aside from symbol, string and number.)",,
6.35962E+17,oofoe#4869,2021-10-20,"@Ben Kenobi and @Alex Knauth , thanks for your help! You've been immortalized in a commit log!",,salute (1)
5.24323E+17,Ben Kenobi#5683,2021-10-20,I cant think of anything immediately. Quasi-quote is remarkably similar but with a case for unquote to allow for evaluation.,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,Oh wait,,
5.24323E+17,Ben Kenobi#5683,2021-10-20,Does urlang support `#hash` syntax?,,
6.35962E+17,oofoe#4869,2021-10-20,"Quick inspection of the docs seem to indicate that it doesn't. It uses special function `ref` to access JavaScript dictionaries, and you can also use standard JavaScript `name.property` syntax. But I didn't immediately see any way to declaratively build dictionaries.",,
6.35962E+17,oofoe#4869,2021-10-20,"Hash notation expands into `(quote #hash((...)))`, so it would make sense that the quote macro should do something useful with it:",https://cdn.discordapp.com/attachments/618895179343986688/900543054669303809/unknown.png,
6.35962E+17,oofoe#4869,2021-10-20,"Apparently, there isn't a `:hash` type specifier...",,
3.5323E+17,Alex Knauth#4895,2021-10-20,"you can use the `hash?` predicate on the result of `syntax-e`, but it's not as convenient I suppose",,
6.35962E+17,oofoe#4869,2021-10-20,Definitely can't do this:,https://cdn.discordapp.com/attachments/618895179343986688/900563458527989790/unknown.png,
6.35962E+17,oofoe#4869,2021-10-20,"If I say I'm doing a #hash, it wants me to specify one...",,
6.35962E+17,oofoe#4869,2021-10-20,"And #hash has higher priority than `(make-hash ...)` , so I can't synthesize it that way.",,
3.5323E+17,Alex Knauth#4895,2021-10-20,I'd say use just `e` but with a `#:when` condition with the `hash?` predicate on the result of `(syntax-e #'e)`,,
6.35962E+17,oofoe#4869,2021-10-20,"Well, I added in this clause just to test it:
```[(_ e) #:when (hash? (syntax-e #'e)) #'""Hash goes here...""]```
And it does _something_, but not quite it:
```(define ht #hash((""apple"" . red)
                    (""banana"" . yellow)))```
Blows up with:
```parse-expr: expected an expression, got #<syntax:game-test.rkt:43:14 #hash((""apple"" . red) (""banana"" . yellow))> in: #hash((""apple"" . red) (""banana"" . yellow))```
Not sure exactly what's killing it. It looks like it might be unhappy with feeding e to syntax-e? I can't immediately find parse-expr, so not sure where that's happening.",,
6.35962E+17,oofoe#4869,2021-10-20,"And of course, because I'm getting the hash as a whole, I miss out on the magical `e ...` processing of the individual hash element assignments.",,
1.93202E+17,rocketnia#4517,2021-10-20,"I think `#hash` syntax isn't that useful. There's no way to tell what order the subexpressions should evaluate in... although in this case, you're quoting them anyway, so there's no evaluation order to worry about...",,
1.93202E+17,rocketnia#4517,2021-10-20,"but yeah, it'll require some explicit iteration",,
1.93202E+17,rocketnia#4517,2021-10-20,probably a `for/list` over the hash entries to build a list of arguments for a JavaScript plain-object-building or `Map`-building function,,
3.5323E+17,Alex Knauth#4895,2021-10-20,that was without `quote` being used at all right?,,
1.93202E+17,rocketnia#4517,2021-10-20,hmm? you mean the evaluation order concern?,,
1.93202E+17,rocketnia#4517,2021-10-20,ohh,,
1.93202E+17,rocketnia#4517,2021-10-20,"you mean the `(define ht #hash...)`, right? XD",,
6.35962E+17,oofoe#4869,2021-10-20,Yeah.,,
6.35962E+17,oofoe#4869,2021-10-20,I didn't realize that #hash could be out of order. I thought it could be handy way to make a dictionary. I should probably follow the OP's lead here and maybe make a new construction to build those.,,
6.35962E+17,oofoe#4869,2021-10-20,This is definitely taking me down a rabbit-hole.,,
1.93202E+17,rocketnia#4517,2021-10-20,"I like `quote`, but not for data. I would use it if I wanted to represent s-expression-based program code as a first-class value in a JavaScript program. For data, I'd probably use `array` and such.",,
6.35962E+17,oofoe#4869,2021-10-20,"The Urlang examples include a little video game with a `struct` macro which might be useful if I need to go that far. I just thought if I could hack #hash in real quick it could be cool, but I think I'll abandon for now. Thanks for taking a look!",,
1.93202E+17,rocketnia#4517,2021-10-20,"I think non-quoted uses of hash syntax can cause some design conundrums. There's the evaluation order question, and then there's the question of whether the keys can be expressions and, if so, what people should do if they want to specify two keys with an identical expression like `i++`. I think there are various workable answers to these.

In a language with textual syntax, the evaluation order question and the `i++` key question are no problem to answer, because a hash-constructing expression is represented by an ordered string, not a hash.

In an s-expression language, using a list-based syntax like `(hash ...)` to build a hash dodges those questions in the same way.

Essentially, I think the trouble with `#hash(...)` syntax is that it turns into a hash before evaluation, which is too soon.

Anyway, sorry for some kinda aimless rambling. :-p",,"üçâ (1),üëç (1)"
2.64024E+17,Eutro#0016,2021-10-21,"fortunately as good functional programming people the evaluation order shouldn't matter too much, right? ;)",,
2.64024E+17,Eutro#0016,2021-10-21,"I'm not a fan of `#hash()`, but when I do use it it's in a quasiquote.",,
2.64024E+17,Eutro#0016,2021-10-21,"!rkt eval ```
`#hash((x . ,(+ 1 2)) (y . ,(* 3 4)))
```",,
8.02004E+17,r16#4581,2021-10-21,#hash((x . 3) (y . 12)),,
2.64024E+17,Eutro#0016,2021-10-21,"you cannot, unfortunately, do ```
`#hash(,@alist)
``` which I think is a bit disappointing",,
1.93202E+17,rocketnia#4517,2021-10-21,"I think this is one of the available directions, yeah :)",,
5.24323E+17,Ben Kenobi#5683,2021-10-21,"Does anyone (haskellers esp.) know if there is a standard name for the function
```haskell
f ; g = \x -> f . (g x)
```
(I used semicolon because it resembled . for composition, and because i don‚Äôt know the name)
(Edit parens make the order of ops more clear)",,
6.46114E+17,samth#3420,2021-10-21,@Ben Kenobi that might be the S combinator?,,
6.46114E+17,samth#3420,2021-10-21,wait no that's not right,,
8.14743E+16,jimpjorps#0001,2021-10-21,in F# that‚Äôd be called the backwards composition operator <<,,
8.14743E+16,jimpjorps#0001,2021-10-21,not sure about other languages,,
6.46114E+17,samth#3420,2021-10-21,https://hoogle.haskell.org/?hoogle=%28b+-%3E+c%29+-%3E+%28t+-%3E+a+-%3E+b%29+-%3E+t+-%3E+a+-%3E+c&scope=set%3Astackage,,
3.58051E+17,hazel#0271,2021-10-21,"I've always called this ""precompose""",,
3.58051E+17,hazel#0271,2021-10-21,I don't know how standard that is,,
5.24323E+17,Ben Kenobi#5683,2021-10-21,Looks like standard is just ‚ÄúcomposeN‚Äù with N arguments to g prior to f? I‚Äôll double check later.,,
5.24323E+17,Ben Kenobi#5683,2021-10-21,Aka `.*`,,
2.17712E+17,gomma#4017,2021-10-21,Does anybody know of like a conan or something and where i might find him,,
8.14743E+16,jimpjorps#0001,2021-10-21,?,,
8.14743E+16,jimpjorps#0001,2021-10-21,"the barbarian, o'brien, detective, which conan are you talking about",,
2.17712E+17,gomma#4017,2021-10-21,nvm found him,,
2.17712E+17,gomma#4017,2021-10-21,Conal,,
2.17712E+17,gomma#4017,2021-10-21,sorry,,
2.17712E+17,gomma#4017,2021-10-21,"I should have asked that in #off-topic too, my bad",,
3.29023E+17,nixin72#3554,2021-10-21,"Conan O'brien, the Barbarian Detective",https://cdn.discordapp.com/attachments/618895179343986688/900840181559619624/9407b6dff8256a8cf7d2657778015bb644cf4908_full.png,
5.24323E+17,Ben Kenobi#5683,2021-10-21,New d&d and/or call of Cthulhu char‚Ä¶,,ü¶ë (1)
1.93202E+17,rocketnia#4517,2021-10-21,"That sounds right. The semicolon is commonly used for ""blackboard order"" composition, though: `f ; g = g . f`",,
5.24323E+17,Ben Kenobi#5683,2021-10-21,"The definition of compose2 is interesting‚Ä¶
```haskell
.* = (.) . (.)
```",,
5.24323E+17,Ben Kenobi#5683,2021-10-21,Going to have to study that one‚Ä¶,,
5.24323E+17,Ben Kenobi#5683,2021-10-21,"Oh that was actually easy; each line follows from the next for the reason given in brackets.
```
[ (.) . (.) ]
[ compose compose compose ] { subst `f . g` with `compose f g` }
[ \f, compose (compose f) ] { compose f g = \x, f (g x) }
[ \f g, compose (compose f) g ] { eta expansion }
[ \f g x, (compose f) (g x) ] { compose f g = \x, f (g x) }
[ \f g x, compose f (g x) ] { compose is curried }
[ \f g x, f . (g x) ] { unsubst }
```",,
2.66505E+17,notjack#9941,2021-10-21,"it's one of those definitions that, in my experience, is usually understood in a five-part journey:

1. what the hell?
2. I think I get it
3. I totally get it
4. this is beautiful and elegant and everybody should learn this
5. actually, what the hell? nobody should have to learn this.

the transition from step 4 to step 5 occurs as you try teaching this to other people repeatedly",,"üëç (2),üòÑ (3)"
7.94955E+17,Laurent O#6627,2021-10-22,"Others on the list: Y-combinator, the lambda Quine, transpose (although this one is actually useful), what else?",,
2.75501E+17,Plane#0324,2021-10-22,`unfoldr` with `uncons`? lol,,
7.94955E+17,Laurent O#6627,2021-10-22,is unfoldr elegant?,,
2.75501E+17,Plane#0324,2021-10-22,with `uncons` it is,,
2.27443E+17,Decabytes#9761,2021-10-22,"I'm having issues with the file-exists? method on my Windows 10 machine. I have a file structure like this
main-dir
  main.rkt
  test-directory
    file_1.txt
    file_2.txt
    file_3.txt
    file_4.txt
    file_5.txt

(define list-files (directory-list ""test-directory""))
'(#<path:file_1.txt> #<path:file_2.txt> #<path:file_3.txt> #<path:file_4.txt> #<path:file_5.txt>)

and I noticed that this returns false
(file-exists? (car list-files))  -> #f

I tried this just in case
(file-path (path->complete-path (car list-files)))

But this still returns #f
(path->complete-path (car list-files))

when I looked at the value of file-path it's actually 
#<path:c:\home\racket-scripts\main-dir\file_1.txt>

and it's nesting file_1.txt under main-dir, not under test-directory like I would expect. Does anyone know why?",,
5.24323E+17,Ben Kenobi#5683,2021-10-22,"directory-list only gives basenames by default. There‚Äôs an argument (keyword, I believe) to make it return built paths that work more like you‚Äôre expecting",,
8.14743E+16,jimpjorps#0001,2021-10-22,,https://cdn.discordapp.com/attachments/618895179343986688/901271995705069618/unknown.png,
2.27443E+17,Decabytes#9761,2021-10-22,ahh I was using #:build instead of #:build? that's why it was failing on me. Good to know. I'm surprised it isn't the default. Thanks @Ben Kenobi  @jimpjorps !,,salute (1)
5.24323E+17,Ben Kenobi#5683,2021-10-23,Urlang  has it's own equivalent of jsx for working with react https://github.com/soegaard/urlang/blob/master/urlang/react/urx.rkt,,üëÄ (1)
6.35962E+17,oofoe#4869,2021-10-23,"He's got a number of cool things in there (that I'm mostly ignoring right now because of the very narrow scope of current application). I'm hoping to investigate more after the jam closes. The ""for"" loop constructs are very nice to have if you haven't looked at those yet.",,
6.35962E+17,oofoe#4869,2021-10-23,"Right now, the fact that I can write reasonably idiomatic Lisp (for my values of idio(cy)) and have it transformed into reasonably understandable JavaScript is just magic!",,üî• (2)
2.64024E+17,Eutro#0016,2021-10-23,unfortunately with X->JS languages you still have to deal with the flaws of JS :meowwarp:,,
2.64024E+17,Eutro#0016,2021-10-23,at least with Clojure I can debug the internals on the JVM,,
2.64024E+17,Eutro#0016,2021-10-23,e.g. no arity errors,,
2.34164E+17,python#3213,2021-10-23,"that's why i like wasm, it's sorta the only second language on the web rn",,
2.34164E+17,python#3213,2021-10-23,"it doesn't have all the flaws of JS, but it has other problems",,
2.64024E+17,Eutro#0016,2021-10-23,unfortunately wasm doesn't have very good JS interop,,
2.34164E+17,python#3213,2021-10-23,yeah,,
2.64024E+17,Eutro#0016,2021-10-23,with no reference types,,
2.34164E+17,python#3213,2021-10-23,pretty limiting,,
2.64024E+17,Eutro#0016,2021-10-23,also awful for garbage collected languages,,
2.34164E+17,python#3213,2021-10-23,"fortunately, my current project does almost everything in wasm, so i just have to write some interface JS code",,
2.34164E+17,python#3213,2021-10-23,yeah that too,,
2.34164E+17,python#3213,2021-10-23,"also, the flow control of wasm is very limiting",,
2.34164E+17,python#3213,2021-10-23,but the funclets proposal looks very promising imo,,
2.66505E+17,notjack#9941,2021-10-23,more importantly you can't manipulate the DOM from wasm,,üëÜ (2)
2.34164E+17,python#3213,2021-10-23,"yeah, all interatction code still needs to be in JS unfortunately üòï",,
2.66505E+17,notjack#9941,2021-10-23,"so you pretty much only get to write your algorithm-heavy domain logic code in it, you can't write any of the actual frontend make-stuff-show-up glue code in it",,
2.34164E+17,python#3213,2021-10-23,that's one good thing about it,,
2.34164E+17,python#3213,2021-10-23,but it's also good because you can very easily compile exisiting C code to wasm,,
2.34164E+17,python#3213,2021-10-23,(what i'm working on right now),,
2.66505E+17,notjack#9941,2021-10-23,frightening thought,,üíØ (1)
2.34164E+17,python#3213,2021-10-23,it's a pretty fun project,,
2.64024E+17,Eutro#0016,2021-10-23,at least it's not _unsafe_ unsafe :meowsmile:,,meow (1)
2.34164E+17,python#3213,2021-10-23,i'm compiling sqlite to wasm to make a little database playground entirely on browser client side,,
2.66505E+17,notjack#9941,2021-10-23,omg,,
2.66505E+17,notjack#9941,2021-10-23,I think I saw a similar project recently,,
2.66505E+17,notjack#9941,2021-10-23,https://phiresky.github.io/blog/2021/hosting-sqlite-databases-on-github-pages/,,
2.34164E+17,python#3213,2021-10-23,"i was using a website on w3 schools in class on thursday, but it was pretty garbage, so i'm making my own",,
2.34164E+17,python#3213,2021-10-23,"i have sqlite running without libc in wasmtime now, so i basically just have interface code left to write",,
5.24323E+17,Ben Kenobi#5683,2021-10-23,"A class website engine I contributed to during my TA-ship ran a SQL db in memory (pure JS implementation, I believe). This sounds‚Ä¶ better‚Ä¶",,
5.24323E+17,Ben Kenobi#5683,2021-10-23,"(The db was for interactive quizzes: ""write a query to X"")",,
2.34164E+17,python#3213,2021-10-23,"yeah, that's what the website i was using was doing too",,
2.34164E+17,python#3213,2021-10-23,but having a fully featured database like SQLite running in memory will be cool i think,,
7.14999E+17,gingerydoo#7461,2021-10-23,Did anyone build Racket for pinephone yet?,,
7.14999E+17,gingerydoo#7461,2021-10-23,Specifically `aarch64`,,
7.14999E+17,gingerydoo#7461,2021-10-23,"Relevant, but unsure if up to date https://groups.google.com/g/racket-dev/c/TaU3S0GZZbo/m/jtPD4IVTBwAJ",,
2.27443E+17,Decabytes#9761,2021-10-23,I'm writing a set of tests that require me to create a bunch of files and directories. I do this through a setup function. When I run the corresponding cleanup function I get a win_err=5 permission error for the delete-file process. I checked my (current-force-delete-permissions) value and it returns #t. Is there anything else I can do to make the files I create for the test deleteable?,,
6.88091E+17,mflatt#6350,2021-10-23,"Using `delete-directory/files` instead of `delete-file` (even though you only want to delete one file) may help. On Windows, `delete-directory/files` performs an elaborate dance to be able to delete more files.",,
2.27443E+17,Decabytes#9761,2021-10-23,Thank you that seemed to work!,,
4.66395E+17,oaktownsam#0815,2021-10-23,"Not a pinephone, but I've been using Racket on RPi 4 since last year.  Currently running an older snapshot build.
```
sam@nintendog:~$ racket -V ; uname -a
Welcome to Racket v8.2.0.6 [cs].
Linux nintendog 5.11.0-1021-raspi #22-Ubuntu SMP PREEMPT Wed Oct 6 17:30:38 UTC 2021 aarch64 aarch64 aarch64 GNU/Linux
```",,
4.66395E+17,oaktownsam#0815,2021-10-23,Actually not a prebuilt.  I compiled it from the builtpkgs source distribution.,,
2.75501E+17,Plane#0324,2021-10-24,"i don't have a pinephone.  that said, i'm really looking forward to the pinephone pro!  so this is something i'd like to tinker with when i get the pro",,
2.27443E+17,Decabytes#9761,2021-10-25,fyi I think the racket google group has a spam post in it. I reported it,,
3.58051E+17,hazel#0271,2021-10-25,this happens a lot,,
2.64024E+17,Eutro#0016,2021-10-25,"hey @notjack could you maybe possibly perhaps review my Rebellion PRs ü•∫ 
https://github.com/jackfirth/rebellion/pull/513
https://github.com/jackfirth/rebellion/pull/514",,
2.14881E+17,Moinate#6061,2021-10-25,Where are issues with BSL supposed to be filed?,,
2.14881E+17,Moinate#6061,2021-10-25,"Try this: `(check-within (sqrt 19) 4.4 .01)`. Do you get:
>       Actual value #i4.358898943540674 is not within 0.01 of expected value #<image>.
at line 1, column 0",,
6.46114E+17,samth#3420,2021-10-25,"@Moinate that bug has been fixed, but I would report other bugs at https://github.com/racket/htdp/issues",,
2.14881E+17,Moinate#6061,2021-10-25,thx. i couldn't think of how to discover the correct place,,
2.66505E+17,notjack#9941,2021-10-25,saw em but I've been on vacation all weekend (and stressing about getting ready for racketcon),,
2.66505E+17,notjack#9941,2021-10-25,@Eutro would it be alright if I looked at them after racketcon is over?,,
7.14999E+17,gingerydoo#7461,2021-10-25,"@Eutro @notjack If it's alright with you two, I can do a review pass.",,
7.14999E+17,gingerydoo#7461,2021-10-25,I'd only comment on implementation details since I'm not educated on any of Rebellion's design nuances,,
2.66505E+17,notjack#9941,2021-10-25,That's good with me,,
7.14999E+17,gingerydoo#7461,2021-10-25,@Eutro You make beautiful diffs. Thank you for the nice reading.,,meowsmile (1)
4.83487E+17,jest#6646,2021-10-25,"https://docs.racket-lang.org/handin-server/Checker.html , can the racket handin-server/checker be used without needing to set up the server for it ? i just wanna run some unit tests and spit out a score without needing a registry of users n such",,
2.17743E+17,Kurinoku#9847,2021-10-25,"how can one generate an identifier that is spliced? by spliced i mean like struct where in drracket parts of the identifier has an arrow to the name of the structure and the other to the field, or like the colon notation in syntax-parse",,
2.66505E+17,notjack#9941,2021-10-25,use `format-id` and set `#:subs?` to `#true`,,
2.17743E+17,Kurinoku#9847,2021-10-25,oooh thank you!,,
2.08605E+17,soegaard#9269,2021-10-26,Submit a bug report if you find anything odd!,,
2.08605E+17,soegaard#9269,2021-10-26,This is indeed a problem.,,
6.46114E+17,samth#3420,2021-10-26,basically you have to run the server for anything. patches to improve that are welcome. :),,üòÆ (1)
2.75501E+17,Plane#0324,2021-10-26,i really love the color in the repl!,,
2.75501E+17,Plane#0324,2021-10-26,"it works well.  using alacritty on linux, with `TERM=xterm` rather than `alacritty` since the latter isn't present in terminfo on servers i ssh to",,
2.75501E+17,Plane#0324,2021-10-26,i like that i got color and didn't have to do anything,,
2.75501E+17,Plane#0324,2021-10-26,now i just need to learn how to swap the bindings for `()` and `[]`,,
4.83487E+17,jest#6646,2021-10-26,"```racket
(define x 2)
(define (f x) 4)
```
discord has never added the racket lang into the tripple backtick for lang highlighting codeblocks right ?",,
4.83487E+17,jest#6646,2021-10-26,awww it didnt  üòî ... gotta use scheme,,
4.83487E+17,jest#6646,2021-10-26,wonder if we could dm the devs to support racket,,
8.14743E+16,jimpjorps#0001,2021-10-26,"if I remember right, discord uses highlight.js for that, so they'd be the ones to issue a pull request to",,
4.83487E+17,jest#6646,2021-10-26,"for those that teach htdp, do you guys keep a copy of the template in a comment ? the edx course by ubc seems to do that but im not sure what the value of that really is",,
8.65656E+17,temp shade#2273,2021-10-27,question? would the htdp curriculum be considered more rigorous than other programming language courses per se?,,
2.14881E+17,Moinate#6061,2021-10-27,"no. well, depends a lot on what you compare it to. 
 it's better support - its distinction is that it offers a process for students to go through that will lead them to do things they don't know how to do when they begin",,
8.14743E+16,jimpjorps#0001,2021-10-27,"yeah, I don't know if I'd say more rigorous, but it's aimed at a more fundamental level, it's specifically about the process of design rather than fluency in any particular language",,
2.14881E+17,Moinate#6061,2021-10-27,If somehow you have not seen this: https://cs.brown.edu/~sk/Publications/Papers/Published/fffk-htdp-vs-sicp/paper.pdf,,
2.81975E+17,Aeva#1234,2021-10-27,with a title like that its a shame they don't have a play on the cover,,
8.65656E+17,temp shade#2273,2021-10-27,"So everything from ""III Abstraction - VI Accumulators"" are still considered introductory topics in CS? They seem like dense topics the way they are presented in the book.",,
8.65656E+17,temp shade#2273,2021-10-27,"Compared to any programming books/course I've experienced, I don't think there were any that dived into as much detail about these topics the way ""htdp"" does.",,
8.65656E+17,temp shade#2273,2021-10-27,"Other than ""PAPL""/""SICP"" obviously",,
8.14743E+16,jimpjorps#0001,2021-10-27,"the terminology's different but it's still pretty fundamental stuff as far as I know, though maybe not given the same weight or focus or treated as a distinct topic",,
8.14743E+16,jimpjorps#0001,2021-10-27,like a lot of the material in the abstraction chapter is stuff that would be mentioned in passing or you'd be expected to intuit from learning about functions or modules in a specific language,,
8.14743E+16,jimpjorps#0001,2021-10-27,"like why code repetition is undesirable, how to refactor a function to make it more general, how to best use local definitions, etc",,
8.14743E+16,jimpjorps#0001,2021-10-27,"like that paper Moinate linked says, the authors are big on taking what's generally transmitted implicitly in usual beginner CS courses and making it explicit",,
8.65656E+17,temp shade#2273,2021-10-27,"Right, I feel like it is heavily described in detail",,
8.14743E+16,jimpjorps#0001,2021-10-27,"there's a lot of ""common sense"" stuff in the freshman CS syllabus that a lot of students miss because they don't know that they're missing it, and they end up caught up in learning syntax rather than structure",,üëç (2)
8.65656E+17,temp shade#2273,2021-10-27,Good stuff nonetheless,,
8.65656E+17,temp shade#2273,2021-10-27,"For example, they may miss some basic requirements. Finally, if
they don‚Äôt thing about expected results first, they may just be happy if their

program outputs something that looks close to the desired result.",,
8.65656E+17,temp shade#2273,2021-10-27,I found a spelling mistake in the text @Moinate where do I submit for correction?,,
2.14881E+17,Moinate#6061,2021-10-27,heck if I know... just post it here and somebody can file an issue,,
8.65656E+17,temp shade#2273,2021-10-27,"section 2.3 subsection 3 line 6 ""thing"" instead of ""think""",,
8.65656E+17,temp shade#2273,2021-10-27,right lol I've posted corrections to openstax before so yeah,,
2.14881E+17,Moinate#6061,2021-10-27,"https://htdp.org/2021-5-4/Book/index.html
> Please send reports about mistakes to authors @ htdp.org",,
8.65656E+17,temp shade#2273,2021-10-27,"okay I sent it, but I'm not sure if that was an old version or if it was already revised.",,
8.65656E+17,temp shade#2273,2021-10-27,thanks,,
8.14743E+16,jimpjorps#0001,2021-10-27,was the error in HTDP or the research paper? because that paper has to be like 20 years old at this point,,
8.14743E+16,jimpjorps#0001,2021-10-27,and I don't think they're soliciting corrections on it,,
8.65656E+17,temp shade#2273,2021-10-27,research paper,,
8.65656E+17,temp shade#2273,2021-10-27,"probably not, but hey I'm sure they received that email a number of times by now",,
8.65656E+17,temp shade#2273,2021-10-27,"Matthias Felleisen just responded with ""thanks"" to my email about the correction. lol",,
4.83487E+17,jest#6646,2021-10-27,oh shoot,,
4.83487E+17,jest#6646,2021-10-27,https://github.com/racket/htdp/blob/6d8926510bd48aaeec3f6dba9364f3d08e8e1601/htdp-lib/2htdp/private/image-more.rkt#L1002,,
4.83487E+17,jest#6646,2021-10-27,"think all I need to do is to remove this check: 
```scheme
    [(text? atomic-shape)
     (error 'flip ""cannot flip shapes that contain text"")]
```
and we can be able to flip emoji in htdp/image",,
4.83487E+17,jest#6646,2021-10-27,unsure how to get racket to require my local modified copy of htdp though,,
4.83487E+17,jest#6646,2021-10-27,or is the source downloaded somewhere already,,
4.83487E+17,jest#6646,2021-10-27,"aww... seems like its not as easy as deleting that 1 line..
```scheme
../../usr/share/racket/pkgs/htdp-lib/2htdp/private/image-more.rkt:964:21: flip-atomic: broke its own contract
  promised: np-atomic-shape?
  produced: #<void>
  in: the range of
      (-> np-atomic-shape? np-atomic-shape?)
  contract from: (function flip-atomic)
  blaming: (function flip-atomic)
   (assuming the contract is correct)
  at: <pkgs>/htdp-lib/2htdp/private/image-more.rkt:966:18
```",,
4.83487E+17,jest#6646,2021-10-27,or do i have to do something else ...,,
4.83487E+17,jest#6646,2021-10-27,lemmie see if i can do in cario first with C,,
4.83487E+17,jest#6646,2021-10-27,so cairo can flip it just fine so i guess its a matter of translating how to do so into racket,,
2.14881E+17,Moinate#6061,2021-10-28,I think that failure indicates that there was no case in the `cond` that matched.,,
6.87923E+17,even4void#5391,2021-10-28,chat ##scheme-links set auto_join false,,
6.87923E+17,even4void#5391,2021-10-28,chat ##scheme-racket set auto_join false,,
6.87923E+17,even4void#5391,2021-10-28,"Wrong window, sorry for the noise ;-)",,
5.24323E+17,Ben Kenobi#5683,2021-10-28,Feedback welcome: https://pkgd.racket-lang.org/pkgn/package/scribble-lp2-manual,,
2.14881E+17,Moinate#6061,2021-10-28,"you know discord has a ""Delete Message"" under the 3 dots menu by a post....",,
2.14881E+17,Moinate#6061,2021-10-28,Does anybody know why BSL has only the 1 input version of `random` and not `(random low high)`?,,
6.46114E+17,samth#3420,2021-10-28,@Moinate I think just simplicitly -- you can just add `low` to `(random (- high low))`,,
2.14881E+17,Moinate#6061,2021-10-28,"possibly because it was undesirable to introduce a function with more than one ""correct signature""?",,
2.14881E+17,Moinate#6061,2021-10-28,"or maybe it is a case of ""don't teach beginners to look for complex tools that do everything... teach them to solve problems with the tools they have""",,
2.14881E+17,Moinate#6061,2021-10-28,maybe that is the 'simplicity' reason,,
2.75501E+17,Plane#0324,2021-10-28,"simplicity is good, it's hard to learn a lot of things at the same time",,
2.14881E+17,Moinate#6061,2021-10-28,"agreed, just asking because i watched a bunch of people look up ""random"" in the help desk and then have the top hit ""fail""",,
2.75501E+17,Plane#0324,2021-10-28,oh no!,,
2.75501E+17,Plane#0324,2021-10-28,i actually thought there was something that would restrict the search results to `lang/htdp-beginner` or such,,
2.75501E+17,Plane#0324,2021-10-28,but i don't teach racket and don't have much experience with this,,
2.14881E+17,Moinate#6061,2021-10-28,that would be interesting but might get confusing  too...,,
2.75501E+17,Plane#0324,2021-10-28,"a-ha it's the ""set context"" thingy.",,
2.75501E+17,Plane#0324,2021-10-28,,https://cdn.discordapp.com/attachments/618895179343986688/903381738238140426/unknown.png,
2.75501E+17,Plane#0324,2021-10-28,"with the context set, the right `random` does come up first",,
2.75501E+17,Plane#0324,2021-10-28,"now, i thought DrRacket would actually set the context automatically . . .",,
2.75501E+17,Plane#0324,2021-10-28,"but if not, it isn't too hard to set the context",,üëç (1)
5.24323E+17,Ben Kenobi#5683,2021-10-28,"This may have come up before, but is the Datalog REPL mentioned at <https://docs.racket-lang.org/datalog/index.html> currently broken? I keep getting things like `?: only allowed inside datalog in: (? (fib 10 N))` (after pasting in the sample fib program, clicking Run, and typing `fib(10, N)?` at the prompt). Relatedly, I'm still trying to figure out how to call Racket `map` in a datalog program.",,
4.66395E+17,oaktownsam#0815,2021-10-28,I don't think it works right.  I got a DrRacket stack trace after trying to evaluate `fib` by itself from the example.,,
4.66395E+17,oaktownsam#0815,2021-10-28,8.1 CS on windows,,
4.66395E+17,oaktownsam#0815,2021-10-28,~~maybe the sexp syntax works?~~ or not.,,
5.24323E+17,Ben Kenobi#5683,2021-10-28,"I don't mind using the racket api, though racklog seems to be more what I want anyway (looking for a racket use-able prolog replacement). Shame the racklog number tower requires bound vars, though‚Ä¶ always thought that was a mistake in prolog. Oh well. If I can get my boggle solver going in racklog, I'll be happy.",,
7.94955E+17,Laurent O#6627,2021-10-29,"Just out of curiosity, would you care to expand on what  the ""number tower requires bound vars"" means and how it's a problem?",,
5.24323E+17,Ben Kenobi#5683,2021-10-29,"Sure. This essay <https://www.metalevel.at/prolog/clpz> captures the power of relation-based numerics, and also (‚ÄúLegacy Predicates‚Äù at the end) discuses some issues with Prolog‚Äôs moded versions. Afaict racklog uses the same model as the legacy variants. Some more information: <https://www.swi-prolog.org/pldoc/man?predicate=%3D%3A%3D/2>, <https://www.swi-prolog.org/pldoc/doc_for?object=(is)/2>",,
5.24323E+17,Ben Kenobi#5683,2021-10-29,"In other words, any use of those moded versions tends to infect the relation using them, so that it cannot be used in all (or as many) directions. For example, defining a list length relation without clpz makes it impossible to run the relation in certain directions as shown in the essay",,
7.94955E+17,Laurent O#6627,2021-10-29,I see,,
5.24323E+17,Ben Kenobi#5683,2021-10-29,"If you don‚Äôt need that ability, then (_e.g._) using racket‚Äôs length is fine‚Äîbut you have to be aware of that ‚Äúmode,‚Äù which is a slight loss of generality",,
5.24323E+17,Ben Kenobi#5683,2021-10-29,"So, I want to build a boggle solver, and the way I want to do it is to have a relation between the board and a word (path) in the board. I haven‚Äôt fleshed this out yet, but by using concrete racket functions I can probably get one mode (does the board have this specific word?) going quickly. But if the relation is purely logical/relational, then that same relation allows other queries: what words does this board have? What boards have this word? Etc.",,
7.94955E+17,Laurent O#6627,2021-10-29,"Makes sense.
Have you looked at Rosette? It's more like constraint satisfaction programming, but expressing your constraints should be easy I guess",,
7.94955E+17,Laurent O#6627,2021-10-29,"But yeah, it's not as satisfying as bidirectional relations",,
7.94955E+17,Laurent O#6627,2021-10-29,(it should be fast though),,
5.24323E+17,Ben Kenobi#5683,2021-10-29,"I looked at rosette during my ms, but havent really dived into it. My grasp is that it helps turn an interpretation function into (something like) a relation? I could be mixing that up with the kanren work from friedman and co.",,
4.66395E+17,oaktownsam#0815,2021-10-29,You also may want to take a look at minikanren,,
5.24323E+17,Ben Kenobi#5683,2021-10-29,"Yeah, I need to do that more than I have. I barely scratched the surface of either.",,
5.24323E+17,Ben Kenobi#5683,2021-10-29,"OTOH, here's a working boggle solver in pure SWI Prolog (when I finish this massive blog post, I'll explain it further). It doesn't work to generate boards, but it implements both ""is this word on the board"" and ""find a word on the board"" (which obviously generalizes to ""find all words"" on the board).  If I can get reasonably efficient assoc-lists working in racklog, I think I can port the whole thing.
```prolog
% vim: ft=prolog

:- module(boggle, [make_board/2, board_has_word/2]).

:- use_module(library(assoc)). % assoc-list (AVL trees) predicates
:- use_module(library(clpfd)). % #= and related constraints
:- use_module(library(lists)). % member
:- use_module(library(apply)). % maplist, foldl
:- use_module(library(yall)). % [x]>>f(x) lambda syntax

product(As, Bs, Cs) :-
    findall(A-B, (member(A, As), member(B, Bs)), Cs).

range(N, L) :-
    NN #= N-1,
    bagof(X, between(0, NN, X), L).

coords(N, Coords) :-
    range(N, ToN),
    product(ToN, ToN, Coords).

square(Xss, N) :-
    length(Xss, N),
    maplist([Xs]>>length(Xs, N), Xss).

make_board_fold_helper(Chars, X-Y, Acc, New) :-
    nth0(X, Chars, Row),
    nth0(Y, Row, Char),
    put_assoc(X-Y, Acc, Char, New).

make_board(Chars, B) :-
    square(Chars, N),
    coords(N, Coords),
    empty_assoc(B0),
    foldl(make_board_fold_helper(Chars), Coords, B0, B).

% +B, ?W
board_has_word(B, W) :-
    assoc_to_keys(B, Cs),
    member(C, Cs),
    board_has_word(B, W, C).

board_has_word(_, [], _).

board_has_word(B, [First|W], X-Y) :-
    get_assoc(X-Y, B, First),
    member(DX, [-1, 0, 1]),
    member(DY, [-1, 0, 1]),
    NewX #= X + DX,
    NewY #= Y + DY,
    del_assoc(X-Y, B, _, NewB),
    board_has_word(NewB, W, NewX-NewY).
```",,
4.83487E+17,jest#6646,2021-10-30,"any of ya'll know of a good book that introduces building a lisp? all the parsing, tokenizing, etc ?",,
7.73175E+17,meowüé∫#2842,2021-10-31,"https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours
https://pages.lip6.fr/Christian.Queinnec/WWW/LiSP.html
https://www.t3x.org/s9book/index.html & https://www.t3x.org/clc/index.html & https://www.t3x.org/lsi/index.html",,
7.73175E+17,meowüé∫#2842,2021-10-31,Also Happy Hallowe'en everymeow :meowloween:,,
2.08605E+17,soegaard#9269,2021-10-31,Queinnec's book is excellent. Can't recommend it enough.,,plusone (1)
2.17712E+17,gomma#4017,2021-10-31,!,,
2.17712E+17,gomma#4017,2021-10-31,d√£k!,,
7.73175E+17,meowüé∫#2842,2021-10-31,I came across this earlier also: http://pages.cs.wisc.edu/~horwitz/CS704-NOTES/4.LISP-INTERP.html,,
7.73175E+17,meowüé∫#2842,2021-10-31,The only complaint I heard about the LiSP book is that the garbage collector implementation is very outdated.,,
4.66395E+17,oaktownsam#0815,2021-10-31,Macros seem a bit rough in there too.,,
4.66395E+17,oaktownsam#0815,2021-10-31,"I mean they cover a lot about expand time vs run time, but not too much on hygiene.",,
4.66395E+17,oaktownsam#0815,2021-10-31,IIRC (I can't find it right now) the GC was no worse than the one in SICP,,
4.66395E+17,oaktownsam#0815,2021-10-31,But yeah probably not industrial strength GC,,
4.66395E+17,oaktownsam#0815,2021-10-31,"Ok so in the C implementation (the only reference to GC I've found) it pretty much says ""we're not going to implement a GC"" and that the reader could adapt the Boehm GC library to what they implement.",,
2.08605E+17,soegaard#9269,2021-10-31,"Garbage Collection is not the focus of LiSP.
Also, there is too much to say on the topic üôÇ
https://www.amazon.de/-/en/Richard-Jones/dp/1420082795/ref=sr_1_2?dchild=1&keywords=garbage+collection&qid=1635706703&sr=8-2",,
4.66395E+17,oaktownsam#0815,2021-10-31,Yes that is the GOAT GC book,,
4.66395E+17,oaktownsam#0815,2021-10-31,"Also good (but dated and obvs not as comprehensive as the Jones Book) is this survey of GC Techniques
http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.306.9738&rep=rep1&type=pdf",,
2.27443E+17,Decabytes#9761,2021-10-31,Dumb question. Does Racket have a built in way of indexing a list? My brief read through the docs was not fruitful. Essentially I want to do (list-ref my-list 0 10),,
3.58051E+17,hazel#0271,2021-10-31,"*indexing* a list, or *slicing* a list? what operation do you want to do",,
3.58051E+17,hazel#0271,2021-10-31,"also, if you're working with indices, you probably want a vector, not a list",,
2.27443E+17,Decabytes#9761,2021-10-31,Slicing the list would be a better word. I.E If I have a list '(1 2 3 4 5) then I can do (slice my-list 1 3) and get back '(2 3 4),,
3.58051E+17,hazel#0271,2021-10-31,"1. you probably want a vector
2. `(vector-copy my-vec 1 3)`",,
3.58051E+17,hazel#0271,2021-10-31,"indexing lists is O(n), indexing vectors is O(1)",,
2.27443E+17,Decabytes#9761,2021-10-31,Thanks!,,
3.58051E+17,hazel#0271,2021-10-31,!rkt eval (vector-copy #(1 2 3 4 5 6 7 8 9 10) 1 3),,üëç (1)
8.02004E+17,r16#4581,2021-10-31,#(2 3),,
7.94955E+17,Laurent O#6627,2021-11-01,"If you want to stick with lists, you can also combine `drop` and `take`",,
7.94955E+17,Laurent O#6627,2021-11-01,"If your first index is 0, you only need `take`, and this will as fast on lists as on vectors",,
7.94955E+17,Laurent O#6627,2021-11-01,"(more generally, `(take (drop lst a) b)` is about as fast for list as `vector-copy` when a<=b, roughly)",,
3.58051E+17,hazel#0271,2021-11-01,"my thought process is that if you need to slice you probably need to index somewhere later, too",,üëç (1)
3.58051E+17,hazel#0271,2021-11-01,but yeah,,
7.94955E+17,Laurent O#6627,2021-11-01,In general you're probably right,,
7.94955E+17,Laurent O#6627,2021-11-01,I was just giving additional info üôÇ,,
5.24323E+17,Ben Kenobi#5683,2021-11-01,<https://benknoble.github.io/blog/2021/10/27/boggle/> (also submitted for racket news inclusion),,üëç (1)
4.83487E+17,jest#6646,2021-11-02,wasnt there a paper or something about SCIP that said the majority of students kinda didnt understand the class?,,
2.75501E+17,Plane#0324,2021-11-02,not sure if you're thinking of this one <https://cs.brown.edu/~sk/Publications/Papers/Published/fffk-htdp-vs-sicp-journal/paper.pdf>,,
2.75501E+17,Plane#0324,2021-11-02,this is the one about sicp and htdp,,
5.24323E+17,Ben Kenobi#5683,2021-11-03,"And it does mention that the content is not well suited for some students, since it is math/EE heavy",,
5.24323E+17,Ben Kenobi#5683,2021-11-03,Or ‚Äúdomain‚Äù might be a better term,,
4.62028E+17,StephenD#5938,2021-11-03,I have wondered for a long time if the title was a nod to ‚ÄòHow to Solve It‚Äô by George P√≥lya?,,
2.14881E+17,Moinate#6061,2021-11-03,"The title of SICP? Can you explain the connection you're seeing to Polya's book? (Which I can't say I know well, admittedly.)",,
6.46114E+17,samth#3420,2021-11-03,@StephenD How to Solve It was defintely an influence on HtDP,,plusone (1)
1.84841E+17,Aperiodic Orbit#8099,2021-11-03,"Is there any packages or languages that just make standard racket more concise? Not a complaint about the detailed function names in the base language mind you, they make things very clear. I just like the idea of making racket(/scheme)  a little more flexible for code golfing (not to the extremes of perl or JS ofc). Would be happy to do it on my own too but just thought I'd check if that's necessary",,
2.08605E+17,soegaard#9269,2021-11-03,I can't recall seeing a project in that direction.,,
8.14743E+16,jimpjorps#0001,2021-11-03,there's little things like rackjure or fancy-app for specific kinds of shorthands but nothing to overhaul it in such a way,,
8.14743E+16,jimpjorps#0001,2021-11-03,I would like to see a racket-APL though,,
2.75501E+17,Plane#0324,2021-11-03,The point-free stuff would be good for code golf,,
2.75501E+17,Plane#0324,2021-11-04,are people excited for racketcon?,,
5.24323E+17,Ben Kenobi#5683,2021-11-04,_waves hands_ yes!,,
4.1228E+17,xgqt#8370,2021-11-04,"~~Whats the license of the Racket logo?~~
MIT/Apache apparently -- https://github.com/racket/icons",,
4.83487E+17,jest#6646,2021-11-04,who organizes racketcon and does it cost any money to attend?,,
6.88091E+17,mflatt#6350,2021-11-04,"Jay McCarthy organizes, and the virtual conference is free",,üëç (1)
5.24323E+17,Ben Kenobi#5683,2021-11-04,https://con.racket-lang.org,,
4.83487E+17,jest#6646,2021-11-04,i hope there's a state of racket conference like last year!,,
5.24323E+17,Ben Kenobi#5683,2021-11-04,"Sunday at 10am @samth has ""State of Racket"" as a talk",,
4.83487E+17,jest#6646,2021-11-04,there is :D,,
4.66395E+17,oaktownsam#0815,2021-11-04,Oh wow DST time change is this weekend too,,
4.40139E+17,Parnikkapore#2806,2021-11-04,"What's the use of `member` over, say, `findf`?",,
4.66395E+17,oaktownsam#0815,2021-11-04,`member` is from an older time ...,,
4.66395E+17,oaktownsam#0815,2021-11-04,`findf` will find a single item.  The `member` functions find the item and return it and the rest of the list.,,
4.1228E+17,xgqt#8370,2021-11-04,"findf is higher on the list of the ""best"" function names
""`find f***`""",,
4.66395E+17,oaktownsam#0815,2021-11-04,"`member` and friends comes from MacLisp/CL/Scheme.  In those, with mutable lists, you could use `member` to find an element sublist and then use `set-car!` to replace the element.",,
4.66395E+17,oaktownsam#0815,2021-11-04,"Re: Racketcon, you can go into Gather now and perfect your Avatar if you want.",,
3.58051E+17,hazel#0271,2021-11-04,oh god I have to talk to people this weekend,,
6.46114E+17,samth#3420,2021-11-04,https://tenor.com/view/watchmen-gif-8794746,,üòÜ (1)
4.66395E+17,oaktownsam#0815,2021-11-05,RacketCon Biergarten going on now https://gather.town/app/POxm4HbriLKltrzP/racketlang,,
4.40139E+17,Parnikkapore#2806,2021-11-06,"Ah, `set-car!`. Thanks!",,
2.36947E+17,jeapostrophe#4261,2021-11-06,The RacketCon stream will be starting shortly... about 45minutes!,,
2.36947E+17,jeapostrophe#4261,2021-11-06,The stream is now active!,,
4.62028E+17,StephenD#5938,2021-11-06,I've had trouble using the stream via gather - but the youtube link works well https://www.youtube.com/racketlang/,,
2.75501E+17,Plane#0324,2021-11-06,the yt link doesn't seem to be up right now,,
4.62028E+17,StephenD#5938,2021-11-06,between talks,,
2.75501E+17,Plane#0324,2021-11-06,i thought you would be able to see an archive after it was done,,
2.75501E+17,Plane#0324,2021-11-06,i don't really know how youtube streams work,,
4.62028E+17,StephenD#5938,2021-11-06,people are hallway chatting in gather town,,
4.62028E+17,StephenD#5938,2021-11-06,try this https://youtu.be/1mOhCuSJI60 to see the last talk,,
2.75501E+17,Plane#0324,2021-11-06,ooh,,
2.75501E+17,Plane#0324,2021-11-06,thank you!,,
4.62028E+17,StephenD#5938,2021-11-06,üòÑ,,
3.58051E+17,hazel#0271,2021-11-06,*ahem*,,
3.58051E+17,hazel#0271,2021-11-06,soup,,
3.58051E+17,hazel#0271,2021-11-06,I am consuming a Microwave Quinoa Bowl‚Ñ¢Ô∏è before my talk,,
4.62028E+17,StephenD#5938,2021-11-06,üòã,,
4.62028E+17,StephenD#5938,2021-11-06,Enjoy!,,
5.24323E+17,Ben Kenobi#5683,2021-11-06,The talk at racketcon on Qi might give some inspiration here,,
3.58051E+17,hazel#0271,2021-11-06,the funny thing is that Qi would 100% work with Sawzall and might actually be more interesting than just threading,,
2.36947E+17,jeapostrophe#4261,2021-11-06,That's why I put the talks together üôÇ,,
3.58051E+17,hazel#0271,2021-11-06,nice catch,,
3.58051E+17,hazel#0271,2021-11-06,tempted to think about how this could make grouping more natural,,
4.66395E+17,oaktownsam#0815,2021-11-06,It's the year of flows.  Bogdan's talk will probably have them too,,
7.94955E+17,Laurent O#6627,2021-11-06,Use the flow Luke!,,
2.36947E+17,jeapostrophe#4261,2021-11-06,Yup üôÇ,,
5.24323E+17,Ben Kenobi#5683,2021-11-06,Been meaning to rewrite slack-archive-viewer (again) to use a more functional flow anyways‚Ä¶ now feeling challenged to do it with Qi üòÑ,,
2.36947E+17,jeapostrophe#4261,2021-11-06,The next stream is starting !,,
4.66395E+17,oaktownsam#0815,2021-11-06,Ok the secret thread of this set of talks are the class system üòÑ,,
2.36947E+17,jeapostrophe#4261,2021-11-06,Yup üôÇ,,
4.66395E+17,oaktownsam#0815,2021-11-06,Racket 8.3 is released.,,meowblushcool (4)
2.75501E+17,Plane#0324,2021-11-06,yay!,,
4.83487E+17,jest#6646,2021-11-06,"flagged it out of date on arch! hope they update it soon, i remember sometimes it would take an entire month",,
3.58051E+17,hazel#0271,2021-11-06,oh boy I have to recompile okay,,
4.83487E+17,jest#6646,2021-11-06,OH,,
4.83487E+17,jest#6646,2021-11-06,wait how long does it take to recompile ?,,
3.58051E+17,hazel#0271,2021-11-06,too long,,
4.83487E+17,jest#6646,2021-11-06,i was gonna ask if you could compile with updated cairo and pango and other deps to test lol,,
4.83487E+17,jest#6646,2021-11-06,üòî,,
3.58051E+17,hazel#0271,2021-11-06,i compile racket from source because circumstances,,
4.83487E+17,jest#6646,2021-11-06,iirc i remeber reading it was about ~1.3 hours,,
3.58051E+17,hazel#0271,2021-11-06,"something like that, yeah",,
3.58051E+17,hazel#0271,2021-11-06,"it's more like 45 minutes on my machine, but i have 24gb ram and a ryzen 7",,ü§§ (2)
4.83487E+17,jest#6646,2021-11-06,"wait, ~1.3hrs , does that include drracket?",,
3.58051E+17,hazel#0271,2021-11-06,yes,,
4.83487E+17,jest#6646,2021-11-06,how long does it take to compile just plain racket/base,,
3.58051E+17,hazel#0271,2021-11-06,don't know,,
3.58051E+17,hazel#0271,2021-11-06,I just run `make` and let it go,,
4.83487E+17,jest#6646,2021-11-06,i gots ryzen5 lol,,
4.83487E+17,jest#6646,2021-11-06,wish i had threadripper tho,,
4.83487E+17,jest#6646,2021-11-06,wonder how long it takes on that,,
3.58051E+17,hazel#0271,2021-11-06,I don't really know anything about consumer electronics,,
3.58051E+17,hazel#0271,2021-11-06,I just have my ThinkPad and a bottle of water,,
4.83487E+17,jest#6646,2021-11-06,are the racket con vids buffering hard for you guys?,,
1.67708E+17,KevinSjoberg#9758,2021-11-07,"Hey there! I'm a self-taught developer who have been working professionally with Ruby, JavaScript and other web-dev technologies for the past 10 years. I'm really interested in learning me some scheme (think Racket) but I'm somewhat unsure how to get started.

Any ideas? I've gotten recommendation from reading SCIP to HTDP to other books entirely. It's all a bit overwhelming.",,
7.94955E+17,Laurent O#6627,2021-11-07,"Start here maybe: https://docs.racket-lang.org/quick/index.html
Then the first sections of this: https://docs.racket-lang.org/guide/index.html",,
1.67708E+17,KevinSjoberg#9758,2021-11-07,@Laurent O thank you for the recommendations. Generally I tend to like something more hands-on where I solve problems. I find it much easier learning a new language. I can always reference the language documentation when needed. üôÇ,,
4.62028E+17,StephenD#5938,2021-11-07,"In that case - what would you like to do?
We have a bunch of *working* __starter templates__ at https://github.com/racket-templates

Don‚Äôt hesitate to ask questions if you get stuck - or just can‚Äôt find what you need in the frankly enormous documentation.",,
1.67708E+17,KevinSjoberg#9758,2021-11-07,Right. I got some good recommendations on IRC that match what I‚Äôm after. I‚Äôll look into SCIP and Beautiful Racket!,,
4.62028E+17,StephenD#5938,2021-11-07,bear in mind the SICP is 25+ years old and refers to a version of r5rs scheme specific to the book - you will need to use the compatibility language library `#lang sicp` instead of true Racket.,,
1.67708E+17,KevinSjoberg#9758,2021-11-07,"Oh, I see. Would you say it‚Äôs still worth it? Are there alternatives? Are the takeaways still applicable even those the syntax is different? How different are we speaking? Would it make my Racket learning harder?",,
6.87833E+17,grey#8674,2021-11-07,"HtDP is a recent text that teaches using Racket and was designed to address the shortcomings of SICP. Therefore, I would suggest reading HtDP first. However, despite its flaws, SICP is still a pretty good book and it presents several powerful ideas, some of which are only recently gaining traction in industry.",,
6.87833E+17,grey#8674,2021-11-07,"@KevinSjoberg Racket is a very versatile language, so what you should read depends on what you want to do. Indeed, Racket is actually an ecosystem of languages, and Beautiful Racket teaches you how to add new languages to that ecosystem.",,
6.87833E+17,grey#8674,2021-11-07,"If you‚Äôre interested in web dev, then https://docs.racket-lang.org/continue/index.html is a good resource. In any case, I agree that the Racket With Pictures tutorial is a good way to get acquainted with the basic syntax and feel of the Racket language.",,
1.67708E+17,KevinSjoberg#9758,2021-11-07,"Yeah, that makes sense. Given I‚Äôve only programmed on a high level (web dev) and is self taught (no formal CS degree) I‚Äôve taken an interest in lower level programming. From bits and memory to compilers and language development. I do have some FP knowledge (e.g., I understand recursion, tail call optimization, higher order functions and so on), but I‚Äôd like to expand on it all. I heard good things about SICP since it touches on much of what I mentioned before (e.g., CS stuff). Now, since I haven‚Äôt read the book yet I‚Äôm solely basing all this on other‚Äôs recommendations.",,
1.67708E+17,KevinSjoberg#9758,2021-11-07,If there are better suited alternatives (from a Racket perspective) I‚Äôd pursue those instead.,,
4.62028E+17,StephenD#5938,2021-11-07,"As an experienced developer I think you could skip the book and just use the core docs - the guide and reference - and maybe the ‚ÄòMore‚Äô tutorial https://docs.racket-lang.org/more/index.html , and dive straight into building your project of choice.",,
4.62028E+17,StephenD#5938,2021-11-07,"If you want to build languages then Beautiful Racket is a good resource 
If you want to do other things maybe check out what others have posted in #show-and-tell to see what fits your interests",,üëç (1)
4.62028E+17,StephenD#5938,2021-11-07,"Another great resource is the second edition of PLAI:
http://cs.brown.edu/courses/cs173/2012/book/",,
4.62028E+17,StephenD#5938,2021-11-07,Also free,,
1.67708E+17,KevinSjoberg#9758,2021-11-07,"Yeah, for learning Racket I think you're correct. I guess what I'm asking is if the concepts/takeaways in SICP are worth it even if I do them in Racket. I've heard good things about SICP for self-taught developers and I mainly chose Racket because I've heard good things about it.",,
1.67708E+17,KevinSjoberg#9758,2021-11-07,"And, like I mentioned earlier. Perhaps HtDP is a better fit (given it uses Racket already). I have no idea how they compare to each other.",,
1.67708E+17,KevinSjoberg#9758,2021-11-07,"That looks interesting, indeed!",,
4.62028E+17,StephenD#5938,2021-11-07,In that case start here to do SICP https://docs.racket-lang.org/sicp-manual/Installation.html,,
4.62028E+17,StephenD#5938,2021-11-07,I‚Äôd say HTDP is complimentary to SICP and definitely worth a look - bear in mind it uses Teaching Languages most easily used from inside DrRacket. The teaching languages are subsets of `#lang racket` so it‚Äôs not like you are learning scratch or logo,,üëç (1)
1.67708E+17,KevinSjoberg#9758,2021-11-07,Thank you. This was all super helpful. Appreciate it! üôÇ,,
4.62028E+17,StephenD#5938,2021-11-07,Also If you use Emacs the best experience is with Racket Mode,,
4.62028E+17,StephenD#5938,2021-11-07,And racket-xp-mode https://www.racket-mode.com/#racket_002dxp_002dmode,,
5.24323E+17,Ben Kenobi#5683,2021-11-07,Shameless plug for https://github.com/benknoble/vim-racket,,meowsmile (2)
4.62028E+17,StephenD#5938,2021-11-07,"75 minutes till Sam Tobin-Hochstadt opens day 2 with 
‚ÄòThe State of Racket‚Äô",,
2.36947E+17,jeapostrophe#4261,2021-11-07,RacketCon's first session of the day will start in about 30 minutes!,,
4.62028E+17,StephenD#5938,2021-11-07,its live,,
4.62028E+17,StephenD#5938,2021-11-07,https://www.youtube.com/watch?v=73dDj_z66qo,,
2.36947E+17,jeapostrophe#4261,2021-11-07,The next RacketCon stream is about to start üôÇ,,
2.36947E+17,jeapostrophe#4261,2021-11-07,It will be https://www.youtube.com/watch?v=MBXikXeP8GM,,
2.36947E+17,jeapostrophe#4261,2021-11-07,The next session is starting @ https://www.youtube.com/watch?v=u3aquEMKiP8,,
2.75501E+17,Plane#0324,2021-11-07,ooh shrubbery talk!,,
2.75501E+17,Plane#0324,2021-11-07,oh it's neat you can do `#lang shrubbery` and see how things parse,,
3.79445E+17,joohnym#9531,2021-11-07,There's also this course: https://my.eng.utah.edu/~cs3520/f20/schedule.html,,
3.79445E+17,joohnym#9531,2021-11-07,"and there's another one on Coursera, albeit a bit old",,
8.14743E+16,jimpjorps#0001,2021-11-07,it doesn‚Äôt have a structured intro course for it yet but the Exercism track for Racket has some good practice problems,,
1.83482E+17,0x6C697370#4074,2021-11-07,"I've been reading Sam's dissertation about the theory behind typed scheme (typed racket). One of the things that's different about typed racket than, say, most other statically typed languages that I'm aware of (haskell, rust, java, etc.) is that, in typed racket, you can use union types to put multiple types of values in the same container. For instance, in typed racket, we could write:
```scheme
(: my-list (Listof (U String Integer)))
(define my-list
  '(""Hello, world!"" 42))
```
But in haskell, we'd have to wrap our list elements in a new datatype:
```haskell
data MyListElement = S String | N Int deriving Show
myList :: [MyListElement]
myList = [S ""Hello, world!"", N 42]
```
Is there a specific name for languages that are like typed racket in this respect? The closest thing I can come up with is ""languages with union types"". I'd like to be able to read more about this distinction but I don't know where to start.

Oh, and if anyone knows any other statically typed languages that are like typed racket in this respect, I'd love to hear about them. The only one I can think of off the top of my head is typescript.",,
2.64024E+17,Eutro#0016,2021-11-08,"Union types are interesting because they work best with existing runtime type tags, which a lot of statically typed languages don't have",,
2.64024E+17,Eutro#0016,2021-11-08,"or, well, duck typed languages like TS I guess",,
2.64024E+17,Eutro#0016,2021-11-08,"So C++ has `std::variant` that adds this type tag, but obviously you have to be explicit",,
2.64024E+17,Eutro#0016,2021-11-08,"Rust has enums which are product types, like Haskell, so you have to be explicit again",,
2.64024E+17,Eutro#0016,2021-11-08,it does have `union` but that's unsafe because you need to manually ensure you're using the correct type,,
1.83482E+17,0x6C697370#4074,2021-11-08,"Thanks for those examples---I'd forgotten about `std::variant`'s existence. The fact that you can ""turn on"" union types in languages that generally do not emit runtime tags was something that I hadn't considered.",,
1.83482E+17,0x6C697370#4074,2021-11-08,"Aren't rust's enums enumerations, not product types? I thought that rust's product types were tuples (a,b), (a,b,c), etc. I could be misunderstanding something, though.",,
2.64024E+17,Eutro#0016,2021-11-08,"eh not product types, sum types",,
2.64024E+17,Eutro#0016,2021-11-08,the names are unintuitive to me,,
1.83482E+17,0x6C697370#4074,2021-11-08,"Yeah, I'm not supper happy with the names either >.<",,
2.64024E+17,Eutro#0016,2021-11-08,"it makes _sense_, as sets, product types are the Cartesian product (new cardinality is the product), while sum types are the disjoint union (new cardinality is the sum)",,üëç (2)
3.11137E+17,KeldonAlleyne#6590,2021-11-08,TypeScript and Python (with type hinting) allows union types (you can even restrict string values to a set list in TS),,
2.64024E+17,Eutro#0016,2021-11-08,do Python's even count if they're practically just comments üòõ,,
3.11137E+17,KeldonAlleyne#6590,2021-11-08,"They're not just comments ... it looks like this

```Python
def foo(bar: Union[Optional[int], List[Union[str, int, Optional[Giraffe]]]]) -> Optional[float]:
    # ...
```",,
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-11-08,"I think by ""just comments"" they meant that those annotations have weak guarantees",,
3.58051E+17,hazel#0271,2021-11-08,https://twitter.com/onfiv/status/1397332816598212610/photo/1,,üòÇ (4)
3.11137E+17,KeldonAlleyne#6590,2021-11-08,,https://cdn.discordapp.com/attachments/618895179343986688/907280629626970203/unknown.png,
6.46114E+17,samth#3420,2021-11-08,"I don't think there's a name for this kind of language, any more than there's a name for ""languages with sum types"". But some other languages that have union types: several Java-improvement languages: Scala, Ceylon. Then there are a bunch of gradually-typed languages: Typescript, Flow, Hack, and a number of academic languages: Cduce, Whiley",,üëç (1)
3.58051E+17,hazel#0271,2021-11-08,...yeah,,
3.58051E+17,hazel#0271,2021-11-08,Python's type annotations still don't do anything though,,
3.58051E+17,hazel#0271,2021-11-08,you have to pair it with mypy or something,,
3.58051E+17,hazel#0271,2021-11-08,hence they're basically just comments without some tool to read them,,
3.11137E+17,KeldonAlleyne#6590,2021-11-08,"Yes, you're right ... it triggers an assertion in unit tests (via pytest running in PyCharm) but they pass through prod",,
8.60042E+17,bogdan#5654,2021-11-08,"They are available at runtime, though, so the tools don't have to be external. This lets you do fun stuff like: https://moltenframework.com/components.html#request-components and https://moltenframework.com/index.html#request-validation",,
5.06301E+17,xoxo#7837,2021-11-08,has anyone here interviewed w kpmg?,,
5.06301E+17,xoxo#7837,2021-11-08,"ik its not racket specific but if so, id love to hear abt ur experience",,
5.06301E+17,xoxo#7837,2021-11-08,if this isnt allowed sorry,,
8.14743E+16,jimpjorps#0001,2021-11-08,"probably a question that'd be better served in a more general venue, anyway",,
1.83482E+17,0x6C697370#4074,2021-11-08,"Thanks for the pointers, now I've got a lot more to read about :).",,
8.1766E+17,jessealama#2319,2021-11-09,can an admin set up a #web channel for talking about web programming?,,
4.66395E+17,oaktownsam#0815,2021-11-09,done #web,,üëç (2)
4.62028E+17,StephenD#5938,2021-11-09,"Hi all
Please check out the Racket Discourse https://racket.discourse.group/",,üëç (2)
8.14743E+16,jimpjorps#0001,2021-11-09,looks good,,
2.75501E+17,Plane#0324,2021-11-09,this does look really nice https://racket.discourse.group/t/new-sexp-comment-fade-really-looks-nice/62,,
2.75501E+17,Plane#0324,2021-11-09,"it seems like a great way to satisfy both parties from the earlier discussion.  you can tell it's a comment because it's faded out, but you can still see its structure via syntax highlighting",,üíØ (1)
4.66395E+17,oaktownsam#0815,2021-11-09,Added Discourse links to the Reddit sidebar etc.,,üëç (3)
5.24323E+17,Ben Kenobi#5683,2021-11-10,"Really feeling like there has to be an easier way to do this (this particular example is silly, but still)",,
5.24323E+17,Ben Kenobi#5683,2021-11-10,"```scheme
#lang racket

(require syntax/parse/define)

(define-syntax-parse-rule (m f:keyword . e)
  #:with real-f (datum->syntax #'f (string->symbol (keyword->string (syntax->datum #'f))))
  (real-f . e))

(m #:+ 1 2 3)
```",,
4.66395E+17,oaktownsam#0815,2021-11-10,"You could make a syntax class, but it's still about the same amount of conversions",,
7.94955E+17,Laurent O#6627,2021-11-10,"it doesn't look too complicated to me üôÇ You may want to give `#'e` for the context though, so the resulting `+` has the same context as the expressions",,
5.24323E+17,Ben Kenobi#5683,2021-11-10,"It just seems like (a) `keyword->symbol` is a missing but obvious transform to provide and (b) transforming a syntactic element but keeping its context is a natural thing to want (though, as Laurent points out, maybe I actually want to change the context). Without thinking about it further, (b) actually sounds like a functor's map operation; if we take syntax to be the functor, it might be convenient to have the corresponding map.",,
5.24323E+17,Ben Kenobi#5683,2021-11-10,"Aside: are there things other than keywords that unambiguously be in either of the marked places below? (Not semantically, only syntactically, so that it would be possible to disambiguate between one of the uses below and the 2 normal define forms)
```scheme
(define #:something x 1)
(define (foo bar) #:something-else body ‚Ä¶)
```",,
6.46114E+17,samth#3420,2021-11-10,`format-id` will make that shorter,,
5.24323E+17,Ben Kenobi#5683,2021-11-10,"(My real goal is to prototype some kind of unified define-transformer syntax, so that instead of a million individual `define-foo` forms, we have a single `define` with pluggable transformations‚Ä¶ maybe that's crazy‚Ä¶)",,
7.94955E+17,Laurent O#6627,2021-11-10,"though it won't turn the keyword into a symbol, will it?",,
7.94955E+17,Laurent O#6627,2021-11-10,(or it's more magical than I thought),,
6.46114E+17,samth#3420,2021-11-10,right it won't do the `keyword->string` for you,,
3.5323E+17,Alex Knauth#4895,2021-11-10,I mean I'd probably just pull `(datum->syntax #'f (string->symbol (keyword->string (syntax->datum #'f))))` out into a helper function `stx-kw->id`,,
5.24323E+17,Ben Kenobi#5683,2021-11-10,"Yeah, `format-id` works:
```scheme
#lang racket

(require syntax/parse/define
         (for-syntax racket/syntax))

(define-syntax-parse-rule (m f:keyword . e)
  #:with real-f (format-id #'f ""~a"" (syntax->datum #'f))
  (real-f . e))

(m #:+ 1 2 3)
```",,
5.24323E+17,Ben Kenobi#5683,2021-11-10,still gives 6,,
3.5323E+17,Alex Knauth#4895,2021-11-10,I've ended up defining a `stx-kw->id` multiple times for different projects,,
5.24323E+17,Ben Kenobi#5683,2021-11-10,"Though as Laurent said, I have to think about the ramifications of which context to use.",,
5.24323E+17,Ben Kenobi#5683,2021-11-10,(Thanks all),,
4.66395E+17,oaktownsam#0815,2021-11-10,IIRC as part of Carl Eastlund's utility package there are a bunch of keyword helpers including `keyword->symbol`,,
4.66395E+17,oaktownsam#0815,2021-11-10,<https://docs.racket-lang.org/mischief/keyword.html#%28def._%28%28lib._mischief%2Fkeyword..rkt%29._keyword-~3esymbol%29%29>,,
4.66395E+17,oaktownsam#0815,2021-11-10,Mischief,,
3.5323E+17,Alex Knauth#4895,2021-11-10,But the main thing the syntax version does is carry over the lexical context and source location from the syntax object,,plusone (2)
5.24323E+17,Ben Kenobi#5683,2021-11-10,"This seems natural:
```scheme
(begin-for-syntax
  (define (syntax-map f stx)
    (datum->syntax stx (f (syntax->datum stx)))))
```",,
5.24323E+17,Ben Kenobi#5683,2021-11-10,"If `format-id` wasn't there, the macro could use
```scheme
#:with real-f (syntax-map (compose1 string->symbol keyword->string) #'f)
```",,
1.93202E+17,rocketnia#4517,2021-11-10,"That's not a functor map, since `(syntax-map identity stx)` isn't the identity. It causes syntax object wrappers further inside `stx` to be removed, and I think it replaces the outermost syntax object wrapper with one that doesn't have the source location or syntax property information of the original. I think `(datum->syntax stx (f (syntax-e stx)) stx stx)` will fix these issues.",,plusone (1)
3.5323E+17,Alex Knauth#4895,2021-11-10,Oh yeah I made a helper function for that called `restx`,,
3.5323E+17,Alex Knauth#4895,2021-11-10,That restored the syntax object wrappers further inside,,
3.5323E+17,Alex Knauth#4895,2021-11-10,Such that `(restx stx (syntax->datum stx))` is as equivalent as I can possibly make to `stx`,,
1.93202E+17,rocketnia#4517,2021-11-10,Is that reliable? How do you know which subforms to give which wrappers to?,,
3.5323E+17,Alex Knauth#4895,2021-11-10,by `syntax-e` and recursive traversal,,
1.93202E+17,rocketnia#4517,2021-11-10,"in a case like `(restx stx (reverse (syntax->datum #((a) (b) (c (d))))))`, does it swap the wrappers for `(a)` and `(c (d))`? Where does the wrapper for `(d)` go, and what is it replaced with?",,
3.5323E+17,Alex Knauth#4895,2021-11-10,"Ah, assuming `stx` is the `#'((a) (b) (c (d)))` thing, it would wrap the new first element `(c (d))` with the ctx from old first element `(a)`",,
1.93202E+17,rocketnia#4517,2021-11-11,"oops, you're right, I should've said...",,
1.93202E+17,rocketnia#4517,2021-11-11,"```scheme
(let ([stx #'((a) (b) (c (d)))])
  (restx stx (reverse (syntax->datum stx))))
```",,
6.77457E+17,Dex#3277,2021-11-11,"Hey there I got a quick question / brain teaser for god-tier continuation folks:
Long time ago I wrote a virus in x86 assembly which reused its own code multiple times. It used what I called at the time 'self-modifying code'. Basically, you have a chunk of code that runs once, then a couple of instruction patch the chunk of code in RAM, then run it again. I wonder if that'd be possible to do using continuations in Racket. Say I define a procedure that does one thing, save a continuation, then modify this procedure to do something slightly different. Run the modified chunk again. Would it be possible to do this?",,
5.24323E+17,Ben Kenobi#5683,2021-11-11,"I‚Äôm not sure how to modify a procedure (perhaps `(set! f (lambda ‚Ä¶))`?), but I also suspect (for no reason at all) that the captured continuation would continue from exactly where it was, unmodified.",,
5.24323E+17,Ben Kenobi#5683,2021-11-11,"Interesting Q though. I‚Äôm still fuzzy on some aspects of programming with continuations, so grain of salt^",,
2.08605E+17,soegaard#9269,2021-11-11,"A closure consists of a representation of the free variables and (a pointer to) the code to run.
In principle you could find the memory address of the closure and change the pointer.

On some architectures the OS blocks writes to pages that contain executable code.
This is sometimes referred to as ""W^X""  (Write exclusive-or Execute). 
On such architectures it would be difficult to achieve your goal - also in assembly.

https://security.stackexchange.com/questions/18936/what-attacks-does-a-wx-policy-prevent-against",,
2.08605E+17,soegaard#9269,2021-11-11,(BTW - Using the FFI you can peek and poke memory addresses.),,
2.64024E+17,Eutro#0016,2021-11-11,iirc in chez scheme first class continuations straight up save the call stack so you might be able to poke around in them,,
7.14999E+17,gingerydoo#7461,2021-11-11,What collections are defined by `racket-minimal`?,,
7.14999E+17,gingerydoo#7461,2021-11-11,"`racket`, `file`, `syntax`, ...?",,
6.46114E+17,samth#3420,2021-11-11,"```
[samth@huor:~/sw/plt (master) plt] cd racket/collects/
[samth@huor:~/sw/plt/racket/collects (master) plt] ls
drwxr-xr-x - samth 24 Feb 12:19 acks
drwxr-xr-x - samth 30 Aug 13:45 compiler
drwxr-xr-x - samth 21 May  2019 data
drwxr-xr-x - samth 21 May  2019 db
drwxr-xr-x - samth 21 May  2019 dynext
drwxr-xr-x - samth 28 Jun 21:40 ffi
drwxr-xr-x - samth 18 Oct 10:15 file
drwxr-xr-x - samth 21 May  2019 info
drwxr-xr-x - samth 21 May  2019 info-domain
drwxr-xr-x - samth 19 Aug 12:07 json
drwxr-xr-x - samth 19 Aug 12:07 launcher
drwxr-xr-x - samth  7 Oct 12:21 net
drwxr-xr-x - samth 21 Oct 15:17 openssl
drwxr-xr-x - samth 28 Jun 21:40 pkg
drwxr-xr-x - samth 27 Oct  2019 planet
drwxr-xr-x - samth  8 Nov 13:05 racket
drwxr-xr-x - samth 21 May  2019 raco
drwxr-xr-x - samth 21 May  2019 reader
drwxr-xr-x - samth 21 May  2019 realm
drwxr-xr-x - samth 21 May  2019 s-exp
drwxr-xr-x - samth 24 Aug 09:39 setup
drwxr-xr-x - samth 18 Oct 10:15 syntax
drwxr-xr-x - samth 17 Mar 11:51 version
drwxr-xr-x - samth 14 Apr  2020 xml
```",,
7.14999E+17,gingerydoo#7461,2021-11-11,So `racket/collects` is unmodified in a full installation? Nice.,,
7.14999E+17,gingerydoo#7461,2021-11-11,Thank you,,
6.46114E+17,samth#3420,2021-11-11,Not sure what you mean,,
7.14999E+17,gingerydoo#7461,2021-11-11,"I was asking about `racket-minimal` in particular. If it's just that directory listing, wouldn't that imply the directory is the same in a full installation?",,
7.14999E+17,gingerydoo#7461,2021-11-11,I'm assuming you aren't using a minimal installation.,,
2.08605E+17,soegaard#9269,2021-11-11,"FWIW   You can find the same list here:
https://github.com/racket/racket/tree/master/racket/collects",,
6.46114E+17,samth#3420,2021-11-11,"@gingerydoo that directory is part of the source tree, and it has all the code that goes in the collections",,
6.88091E+17,mflatt#6350,2021-11-11,"Just to agree: Yes, that's right. All packages are added outside of the ""collects"" tree.",,
9.06964E+17,countvajhula#9049,2021-11-12,"Hello folks! Hope this is the right place to post about this.

I've volunteered to edit the videos from RacketCon. They're coming along nicely, but it'd be great to have a ""profesh"" RacketCon logo to use as a lead in / trail out. I created one as a placeholder using the standard Racket lambda logo, but I'm happy to sub in a better logo if anyone here has real skills with this. If you want to see how things look at the moment, here's a link to the first video (the Keynote on Codespells): 

https://1drv.ms/v/s!AnWu3nlILBkya-Q9AxLGLYJJ-BE

[I'm hearing an audio artifact ""welcome to racketcon everyone-one"" near the beginning -- I don't see that happen locally so not sure, it might be something to do with the web player on OneDrive]

I'll probably be finalizing the videos and rendering them in the next couple of days, so if you're able to create a logo please let me know so I can know to wait.

Thanks!

P.S. I may post each video as it's done in the Discourse forum (https://racket.discourse.group/), in case you want to be up on the latest or want to offer feedback üôÇ",,plusone (2)
4.62028E+17,StephenD#5938,2021-11-12,CodeSpells is live on twitch doing racket,,
4.62028E+17,StephenD#5938,2021-11-12,,https://cdn.discordapp.com/attachments/618895179343986688/908779166734905344/IMG_3928.png,
4.62028E+17,StephenD#5938,2021-11-12,https://www.twitch.tv/codespells,,
7.14999E+17,gingerydoo#7461,2021-11-12,@countvajhula This is incredibly nice of you!,,plusone (1)
9.06964E+17,countvajhula#9049,2021-11-12,"haha, thank you for saying so @gingerydoo . There's so much good content in there, felt wrong for it to be wrapped up in layers of conference logistics",,‚ù§Ô∏è (2)
4.62028E+17,StephenD#5938,2021-11-12,I‚Äôm really interested in what packages are popular? Is there a way of finding out what most people use?,,
4.62028E+17,StephenD#5938,2021-11-12,"Cur, the proof assistant is the most starred repo on GitHub https://github.com/search?l=&o=desc&q=language%3Aracket&s=stars&type=Repositories",,
4.62028E+17,StephenD#5938,2021-11-12,Most used packages?,,
4.1228E+17,xgqt#8370,2021-11-13,"Hi! So I added some debugging to Collector2 and just kindof poking around, checking why pkgs get filtered.

Here I have a list of pkgs that have something wrong with their URL.
Will there pkgs get purged? Some of them have NO METADATA data on the pkg server website... So I guess their maintainers also left?

@samth @mflatt",https://cdn.discordapp.com/attachments/618895179343986688/909267355278930020/unknown.png,
3.38034E+17,sorawee#6299,2021-11-13,See also: https://github.com/racket/racket-pkg-website/issues/60 and https://github.com/racket/pkg-index/pull/29,,
3.38034E+17,sorawee#6299,2021-11-13,I'm not sure why your program thinks that `libsqlite3-x86_64-win32` has a problem though. It works fine for me: https://pkgs.racket-lang.org/package/libsqlite3-x86_64-win32,,
4.1228E+17,xgqt#8370,2021-11-13,"yes, that is wrong on my side as I had not implemented package creation for tarball source URL",,
4.1228E+17,xgqt#8370,2021-11-13,"but that one would be excluded by Collector2 either way since it is ""platformed"" (bundles binaries for a certain platform)",,
4.83487E+17,jest#6646,2021-11-14,is the package server down r ight now?,,
4.83487E+17,jest#6646,2021-11-14,cant install png-image or anything else,,
4.83487E+17,jest#6646,2021-11-14,oh,,
4.83487E+17,jest#6646,2021-11-14,"yeah i cant install any packages... anyone else got the problem? if anyone is on arch, can you try installing drcomplete or  png-image ? if it doesnt work ill flag it on the arch repos",,
2.75501E+17,Plane#0324,2021-11-14,i'm not on arch but i'm able to install packages fine via raco,,
4.83487E+17,jest#6646,2021-11-14,"yeah it works now, idk why it took such a while ü§î , maybe its just my net",,
4.62028E+17,StephenD#5938,2021-11-14,I've posed the results at https://racket.discourse.group/t/what-are-the-most-used-packages/108/6?u=spdegabrielle,,
2.14881E+17,Moinate#6061,2021-11-14,Didn‚Äôt appreciate until now that this could be used for ‚Äúgood package discovery‚Äù,,
3.79445E+17,joohnym#9531,2021-11-15,"I just speculated elsewhere that I didn't think threading is used that much. I guess I was wrong, haha",,ü§£ (1)
6.77457E+17,Dex#3277,2021-11-15,"@Ben Kenobi I was thinking more along the lines of switching a syntax object with another, at a high level. There could be some meaningful applications to this technique. Continuations open up many possibilities, but what one could find limiting is the fact that the contents of the continuation cannot be modified once it's registered. This idea joins closures in the sense that closure can store state, and what I'm thinking that just like we can update a closure's stored state, one should be able to update a continuation's stored code.",,
3.38034E+17,sorawee#6299,2021-11-15,"I think the keyword that you are looking for is ""reflective"". See e.g. https://www.ics.uci.edu/~jajones/INF102-S18/readings/17_Smith84.pdf",,
6.77457E+17,Dex#3277,2021-11-15,@sorawee I think you‚Äôre right. Thank you for the link.,,
6.49482E+17,Gonza#0538,2021-11-15,hellow any can help me in some exercises,,
8.14743E+16,jimpjorps#0001,2021-11-15,"yeah, ask in #help with what the problem is, what you've tried so far and where you're stuck",,
4.26612E+17,pi0#4955,2021-11-15,Redefine your mylength to find the length of a list recursively (include sublists). `# (mylength '(1 2 (3 4 5))  ==> 5`,,
4.26612E+17,pi0#4955,2021-11-15,"not sure how to do recursion, if someone can kindly assist?",,
3.5323E+17,Alex Knauth#4895,2021-11-15,"The way I learned how to do recursion, using the Design Recipe from How to Design Programs, starts with a data definition.
The input data for this `mylength` function isn't just ""a list"", it has more complex structure than that:
can you describe that with a data definition?",,
3.5323E+17,Alex Knauth#4895,2021-11-15,"For example a normal list of numbers would have a data definition like this:
```
A ListofNumber is one of:
 - '()
 - (cons Number ListofNumber)
```",,
3.5323E+17,Alex Knauth#4895,2021-11-15,"but if it can contain sublists as well, it changes into a kind of arbitrary-arity tree structure",,
3.5323E+17,Alex Knauth#4895,2021-11-15,"Oh, and probably move this to #help",,
4.26612E+17,pi0#4955,2021-11-15,"yes sir, moving there",,
4.83487E+17,jest#6646,2021-11-15,"installing a racket package is taking upwards to 10+ mins for me... and my internet is really fast, is anyone else having this problem? am I being rate limted or something? i have no idea whats going on...",,
6.46114E+17,samth#3420,2021-11-15,@jest what package?,,
4.83487E+17,jest#6646,2021-11-15,"think all of em, drcomplete, png-image, pollen",,
4.83487E+17,jest#6646,2021-11-15,"```
Resolving ""pollen"" via https://download.racket-lang.org/releases/8.3/catalog/
Resolving ""pollen"" via https://pkgs.racket-lang.org
Downloading repository https://github.com/mbutterick/pollen.git commit cf7fbccc90aec320c45cccde22856b373f8e08ff
The following uninstalled packages are listed as dependencies of pollen:
   txexpr
   sugar
   markdown
   rackjure
Would you like to install these dependencies? [Y/n/a/c/?] a
00: Resolving ""txexpr"" via https://download.racket-lang.org/releases/8.3/catalog/
01: Resolving ""sugar"" via https://download.racket-lang.org/releases/8.3/catalog/
02: Resolving ""markdown"" via https://download.racket-lang.org/releases/8.3/catalog/
01: Resolving ""sugar"" via https://pkgs.racket-lang.org
00: Resolving ""txexpr"" via https://pkgs.racket-lang.org
02: Resolving ""markdown"" via https://pkgs.racket-lang.org
Resolving ""rackjure"" via https://download.racket-lang.org/releases/8.3/catalog/
Resolving ""rackjure"" via https://pkgs.racket-lang.org
Using cached16303712131630371213115 for https://github.com/mbutterick/txexpr.git
Using cached16303712131630371213777 for https://github.com/mbutterick/sugar.git
Using cached16184304541618430454983 for git://github.com/greghendershott/markdown
Using cached16184304551618430455722 for github://github.com/greghendershott/rackjure/master
The following uninstalled packages are listed as dependencies of markdown
and they will be installed:
   parsack
   threading-lib
   sexp-diff-lib
02: Resolving ""parsack"" via https://download.racket-lang.org/releases/8.3/catalog/
01: Resolving ""threading-lib"" via https://download.racket-lang.org/releases/8.3/catalog/
```",,
4.83487E+17,jest#6646,2021-11-15,"tried installing pollen and i think its been half an hour, started at 12:55 and now its 1:26",,
4.83487E+17,jest#6646,2021-11-15,"oh right, lemmie dual boot to windows and install a package from there and see if its still an issue... if it is, its my network probably, if not.... then i dont know..",,
6.46114E+17,samth#3420,2021-11-15,I just installed drcomplete and it was instant,,
4.83487E+17,jest#6646,2021-11-15,huh..,,
2.08605E+17,soegaard#9269,2021-11-15,"Which step is slow? Fetching the catalog or the packages or compiling them?
Without anything to go on - I'd consider doing a `raco setup`  . Not sure it will help though.",,
4.83487E+17,jest#6646,2021-11-15,"the resolving step, probably fetching, interestingly its really fast on windows",,
4.83487E+17,jest#6646,2021-11-15,trying to spit out json and i get : ```write-json: expected argument of type <legal JSON value>; given: 57/16```,,
4.83487E+17,jest#6646,2021-11-15,how do i get racket to print out decimal numbers rather than fractional?,,
3.38034E+17,sorawee#6299,2021-11-15,Probably `exact->inexact` will be enough?,,
1.93202E+17,rocketnia#4517,2021-11-15,"the documentation for `write-json` says the input is a `jsexpr?`, and the numbers supported by `jsexpr?` are `(or/c exact-integer? (and/c inexact-real? rational?))`

Racket's meaning for `rational?` is a little odd, effectively ""a real number other than a NaN or infinity""

so the important part is that since this is fractional, it should be inexact for `write-json` to support it",,
2.08605E+17,soegaard#9269,2021-11-16,"@jest  Could it be some kind of internet configuration issue, say, something to do with certificates? If there is a timeout, then it explains why the transfer picks up after a while.",,
4.83487E+17,jest#6646,2021-11-16,"yeah, i havent touched my internet configuration settings as far a i can remmeber,",,
4.83487E+17,jest#6646,2021-11-16,"maybe an update in arch changed something..... ill try to get on another network to test this out
edit: tested on a vpn connection and it works way faster... also tested on my laptop also running arch and i get the same result.. so probably some update in arch is making it slow, does anyone know how i can diagnose the slowness to file a report?",,
2.75501E+17,Plane#0324,2021-11-16,"can you see what it's blocking on? like, `strace -o trace.out raco pkg install ...` perhaps?",,
4.83487E+17,jest#6646,2021-11-16,"```
fcntl(1, F_GETFL)                       = 0x2 (flags O_RDWR)
fcntl(1, F_SETFL, O_RDWR|O_NONBLOCK)    = 0
write(1, ""Resolving \""png-image\"" via https:""..., 55) = 55
fcntl(1, F_SETFL, O_RDWR)               = 0
newfstatat(AT_FDCWD, ""/home/a/.local/share/racket/"", 0x7fffaa773b20, 0) = -1 ENOENT (No such file or directory)
newfstatat(AT_FDCWD, ""/home/a/.racket/"", {st_mode=S_IFDIR|0755, st_size=4096, ...}, 0) = 0
newfstatat(AT_FDCWD, ""/home/a/.racket/8.3/pkgs/config.rktd"", 0x7fffaa773b70, 0) = -1 ENOENT (No such file or directory)
newfstatat(AT_FDCWD, ""/etc/racket/config.rktd"", {st_mode=S_IFREG|0644, st_size=667, ...}, 0) = 0
openat(AT_FDCWD, ""/etc/racket/config.rktd"", O_RDONLY|O_NONBLOCK) = 7
newfstatat(7, """", {st_mode=S_IFREG|0644, st_size=667, ...}, AT_EMPTY_PATH) = 0
read(7, "";; generated by unixstyle-instal""..., 4096) = 667
lseek(7, 0, SEEK_CUR)                   = 667
lseek(7, 0, SEEK_CUR)                   = 667
... LOTTA LSEEKS = 667
```",,
4.83487E+17,jest#6646,2021-11-16,"```
epoll_ctl(6, EPOLL_CTL_DEL, 7, NULL)    = 0
epoll_wait(6, [], 1, 0)                 = 0
poll([{fd=7, events=POLLOUT}], 1, 0)    = 1 ([{fd=7, revents=POLLOUT|POLLERR|POLLHUP}])
poll([{fd=7, events=POLLOUT}], 1, 0)    = 1 ([{fd=7, revents=POLLOUT|POLLERR|POLLHUP}])
getsockopt(7, SOL_SOCKET, SO_ERROR, [ETIMEDOUT], [4]) = 0
close(7)                                = 0
socket(AF_INET6, SOCK_STREAM, IPPROTO_TCP) = 7
fcntl(7, F_SETFL, O_RDONLY|O_NONBLOCK)  = 0
connect(7, {sa_family=AF_INET6, sin6_port=htons(443), sin6_flowinfo=htonl(0), inet_pton(AF_INET6, ""2606:4700:3030::ac43:bc5a"", &sin6_addr), sin6_scope_id=0}, 28) = -1 EINPROGRESS (Operation now in progress)
poll([{fd=7, events=POLLOUT}], 1, 0)    = 0 (Timeout)
epoll_ctl(6, EPOLL_CTL_ADD, 7, {events=EPOLLOUT, data={u32=7, u64=7}}) = 0
poll([{fd=7, events=POLLOUT}], 1, 0)    = 0 (Timeout)
poll([{fd=7, events=POLLOUT}], 1, 0)    = 0 (Timeout)
poll([{fd=7, events=POLLOUT}], 1, 0)    = 0 (Timeout)
epoll_wait(6, [], 1, 0)                 = 0
poll([{fd=7, events=POLLOUT}, {fd=6, events=POLLIN}, {fd=4, events=POLLIN}], 3, -1) = 2 ([{fd=7, revents=POLLOUT|POLLERR|POLLHUP}, 
```",,
4.83487E+17,jest#6646,2021-11-16,"```
{fd=6, revents=POLLIN}])
read(4, 0x7fffaa773bfe, 10)             = -1 EAGAIN (Resource temporarily unavailable)
epoll_wait(6, [{events=EPOLLOUT|EPOLLERR|EPOLLHUP, data={u32=7, u64=7}}], 1, 0) = 1
epoll_ctl(6, EPOLL_CTL_DEL, 7, NULL)    = 0
epoll_wait(6, [], 1, 0)                 = 0
poll([{fd=7, events=POLLOUT}], 1, 0)    = 1 ([{fd=7, revents=POLLOUT|POLLERR|POLLHUP}])
poll([{fd=7, events=POLLOUT}], 1, 0)    = 1 ([{fd=7, revents=POLLOUT|POLLERR|POLLHUP}])
getsockopt(7, SOL_SOCKET, SO_ERROR, [ETIMEDOUT], [4]) = 0
close(7)                                = 0
socket(AF_INET, SOCK_STREAM, IPPROTO_TCP) = 7
fcntl(7, F_SETFL, O_RDONLY|O_NONBLOCK)  = 0
connect(7, {sa_family=AF_INET, sin_port=htons(443), sin_addr=inet_addr(""172.67.188.90"")}, 16) = -1 EINPROGRESS (Operation now in progress)
poll([{fd=7, events=POLLOUT}], 1, 0)    = 0 (Timeout)
epoll_ctl(6, EPOLL_CTL_ADD, 7, {events=EPOLLOUT, data={u32=7, u64=7}}) = 0
poll([{fd=7, events=POLLOUT}], 1, 0)    = 0 (Timeout)
poll([{fd=7, events=POLLOUT}], 1, 0)    = 0 (Timeout)
poll([{fd=7, events=POLLOUT}], 1, 0)    = 0 (Timeout)
epoll_wait(6, [], 1, 0)                 = 0
poll([{fd=7, events=POLLOUT}, {fd=6, events=POLLIN}, {fd=4, events=POLLIN}], 3, -1) = 2 ([{fd=7, revents=POLLOUT}, {fd=6, revents=POLLIN}])
read(4, 0x7fffaa773bfe, 10)             = -1 EAGAIN (Resource temporarily unavailable)
epoll_wait(6, [{events=EPOLLOUT, data={u32=7, u64=7}}], 1, 0) = 1
epoll_ctl(6, EPOLL_CTL_DEL, 7, NULL)    = 0
epoll_wait(6, [], 1, 0)                 = 0
poll([{fd=7, events=POLLOUT}], 1, 0)    = 1 ([{fd=7, revents=POLLOUT}])
poll([{fd=7, events=POLLOUT}], 1, 0)    = 1 ([{fd=7, revents=POLLOUT}])
getsockopt(7, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
getpid()                                = 29696
getpid()                                = 29696
openat(AT_FDCWD, ""/etc/ssl/cert.pem"", O_RDONLY) = 8
newfstatat(8, """", {st_mode=S_IFREG|0444, st_size=205581, ...}, AT_EMPTY_PATH) = 0
read(8, ""# ACCVRAIZ1\n-----BEGIN CERTIFICA""..., 4096) = 4096
```",,
4.83487E+17,jest#6646,2021-11-16,,https://cdn.discordapp.com/attachments/618895179343986688/910262606206480384/message.txt,
4.83487E+17,jest#6646,2021-11-16,i should probably past this all as 1 log mb.... the file file is 127MB so trying to isolate the relvant parts,,
2.75501E+17,Plane#0324,2021-11-16,"so what you can do is, `tail -f trace.out`, then run your strace, and if it's hanging somewhere for a long time, you can see what it's doing right at that moment",,
2.75501E+17,Plane#0324,2021-11-16,instead of looking through the file after it's done,,
2.75501E+17,Plane#0324,2021-11-16,(the `tail -f` will notice when the file starts getting overwritten so you can do it ahead of time),,
2.75501E+17,Plane#0324,2021-11-16,i was guessing there would be relevant syscalls when you can see it blocking for a long time,,
2.08605E+17,soegaard#9269,2021-11-16,"The ip associated with fd=7 above is 172.67.188.90, which points to cloudflare.",,
2.08605E+17,soegaard#9269,2021-11-16,Plane's idea (to see exactly where the time out) sounds as a great first step.,,
7.18469E+17,PerpetualPerception#5804,2021-11-16,Hello everybody!,,
7.18469E+17,PerpetualPerception#5804,2021-11-16,Does anybody know how to combine two quotes in Racket?,,
7.18469E+17,PerpetualPerception#5804,2021-11-16,Like if I have `'hello` and `'world` can I do something like `(append 'hello 'world)` to get `'helloworld`?,,
7.18469E+17,PerpetualPerception#5804,2021-11-16,@jeapostrophe @notjack ?,,
2.66505E+17,notjack#9941,2021-11-16,do you know how to append two strings?,,
7.18469E+17,PerpetualPerception#5804,2021-11-16,`(string-append str1 str2)`,,
7.18469E+17,PerpetualPerception#5804,2021-11-16,Right?,,
7.18469E+17,PerpetualPerception#5804,2021-11-16,So I tried this: `(quote (string-append (~v 'hello) (~v 'world)))` but that doesn't work,,
2.66505E+17,notjack#9941,2021-11-16,"`quote` is for turning the literal code you wrote into symbols. to turn the value _produced_ when you _run_ that code into a symbol, use `string->symbol` instead of `quote`.",,
7.18469E+17,PerpetualPerception#5804,2021-11-16,Thanks a lot!,,
7.18469E+17,PerpetualPerception#5804,2021-11-16,I was gonna ask how to turn symbols to string too but I figured it must be `(symbol->string)` lol,,
2.66505E+17,notjack#9941,2021-11-16,yup üòÑ,,
2.08605E+17,soegaard#9269,2021-11-16,!rkt eval (~a 'foo 'bar),,
2.08605E+17,soegaard#9269,2021-11-16,!rkt eval (~a 'foo 'bar),,
4.62028E+17,StephenD#5938,2021-11-16,IVYMI: https://racket-news.com/2021/11/racket-news-issue-55.html,,
4.62028E+17,StephenD#5938,2021-11-16,The next issue of The Racket News is planned for publication during week 46. Contributions welcome! https://github.com/pmatos/racket-news/issues,,
4.83487E+17,jest#6646,2021-11-16,how do i check whats consuming the most memory in racket?,,
6.46114E+17,samth#3420,2021-11-16,What sort of answer are you looking for?,,
6.46114E+17,samth#3420,2021-11-16,"Probably the answer is dump-memory-stats, which perhaps might be better visualized in @bogdan's profiler",,
6.46114E+17,samth#3420,2021-11-16,An alternative answer might be custodians,,
4.83487E+17,jest#6646,2021-11-17,"nevermind, i found my memory problem....",,
4.83487E+17,jest#6646,2021-11-17,it was something dumb lol,,
4.62028E+17,StephenD#5938,2021-11-17,"@templyinger-gravinge wrote

> In a perfect world, this category would evolve into a FAQ, and save time both for askers and answerers!

At https://racket.discourse.group/t/about-the-questions-answers-category/72?u=spdegabrielle

I agree with the sentiment - a lot of people here make a tremendous effort to help new learners on #help 
I know some of the questions are quite specific, but if you do start to notice frequently asked questions I‚Äôd encourage you to make a question topic, and answer it on https://racket.discourse.group/",,
4.83487E+17,jest#6646,2021-11-17,"is there a remove-duplicates for vector type built in the standard library? cause i cant seem to find it, only one that takes lists",,
3.58051E+17,hazel#0271,2021-11-17,no,,
3.58051E+17,hazel#0271,2021-11-17,"```scheme
(define (vector-remove-duplicates vec)
  (define seen (mutable-set))
  (for/vector ([v (in-vector vec)]
               #:unless (set-member? seen v))
    (set-add! seen v)
    v))
```",,
3.58051E+17,hazel#0271,2021-11-17,this gets passed around in my `util.rkt` that seems to end up in every project,,
4.83487E+17,jest#6646,2021-11-17,ahh thanks,,
4.83487E+17,jest#6646,2021-11-17,"another question, is there a .push() to add to the end of a vector?",,
3.58051E+17,hazel#0271,2021-11-17,vectors are not growable,,
4.83487E+17,jest#6646,2021-11-17,i only see the one that sets given an index,,
4.83487E+17,jest#6646,2021-11-17,ohhh,,
4.66395E+17,oaktownsam#0815,2021-11-17,you'd have to `vector-copy` and then set,,
3.58051E+17,hazel#0271,2021-11-17,you might want `data/gvector`,,
3.58051E+17,hazel#0271,2021-11-17,"but that has caveats (namely stuff which takes vectors won't take gvectors, also they aren't thread safe)",,
2.75501E+17,Plane#0324,2021-11-17,"alternatively you could use transducers 
```scheme
(require rebellion/streaming/transducer
         rebellion/collection/vector)

(transduce v (deduplicating) #:into (into-vector))
```",,"üòÆ (1),meowsmile (1),üòÅ (1)"
5.24323E+17,Ben Kenobi#5683,2021-11-17,"Are there any jsexpr->struct like functions out there? Couldnt find one, but may not have been searching the right things. I think hash->struct would do the trick as well.",,
4.66395E+17,oaktownsam#0815,2021-11-17,"I think there may be, but part of the problem is that struct types don't know the names of the fields generally .",,
5.24323E+17,Ben Kenobi#5683,2021-11-17,"Hm. I may be generating the code anyway with an external tool, so I could _conceivably_ generate the converters. Or I'll just stick with jsexprs.",,
5.24323E+17,Ben Kenobi#5683,2021-11-17,"Unrelated: when using `do-dfs`/`do-bfs` from `graph`, I would really like to
- have access to the accumulator in the `visit?` predicates (to prune the search tree when some bit of state lets me decide I can ignore a path). My current workaround involves defining mutables (because I change them on `#:prologue`) and using those everywhere as accumulators, which means I have to be careful with mutable state/&c (_e.g._, undoing the mutation on `#:epilogue`). If I had access to the accumulator, those would just be part of the accumulator and could be immutable.

- have access to `$visited` predicates like in `bfs`, but for `dfs`, especially when writing custom `vist?` predicates. I want to augment the default but not replace it entirely, and re-implementing it from scratch feels icky. Combined with the above, I basically have a mutable-set defined outside the `do-dfs` that I add/remove from manually (using `#:prologue` and `#:epilogue`).

Have others run into similar issues when using graph? What do you do? (Can share more code/context if needed; it's yet another boggle solver, this time to learn how to use `graph`. Vertices are coordinates in the board; I have separate hashes for turning a coordinate into the letter on the board and for turning a letter into coordinates where it's located. Edges are paths between letters.)",,
2.66505E+17,notjack#9941,2021-11-17,you can make a macro that does it if you know the struct type,,salute (1)
2.66505E+17,notjack#9941,2021-11-17,yesssssss,,
5.24323E+17,Ben Kenobi#5683,2021-11-18,"Here's a stumper: calling `(read-eval-print-loop)` at the REPL ""just works"". Put the same form in a `#lang racket/base` file and run `racket file.rkt`: suddenly, no `#%top-interaction` is bound (nor `#%app`). `racket -I racket/base file.rkt` doesn't fix it either. I was hoping to be able to define some bindings and launch a REPL with those bindings available without special flags (so that running the module ""just works""). Any tips?",,
6.46114E+17,samth#3420,2021-11-18,you need to set current-namespace,,
5.24323E+17,Ben Kenobi#5683,2021-11-18,_doh_. Is that documented anywhere?,,
5.24323E+17,Ben Kenobi#5683,2021-11-18,"Also, isn't current-namespace already set?",,
5.24323E+17,Ben Kenobi#5683,2021-11-18,Ignore that; I'm now reading the docs and see that the initial current-namespace is not really connected to the currently executing code,,
5.24323E+17,Ben Kenobi#5683,2021-11-18,"I got it, thanks. I'm going to post an initial solution on discourse, too.",,
8.73834E+17,alxshen#7084,2021-11-18,,https://cdn.discordapp.com/attachments/618895179343986688/910913153087438939/IMG_20211118_161235722_HDR2.jpg,plusone (2)
8.73834E+17,alxshen#7084,2021-11-18,Newiest book acquisition. You can now flame me üî• üî• üî• .,,
2.75501E+17,Plane#0324,2021-11-18,are you learning scheme for the first time?  i hope you enjoy it (:,,
7.14999E+17,gingerydoo#7461,2021-11-18,Ditto. I'm not sure why we'd flame you for studying.,,
4.62028E+17,StephenD#5938,2021-11-18,If you are using Racket to work through the book might need to use `#lang r5rs` to get a version of scheme that matches the book https://docs.racket-lang.org/guide/standards.html#%28part._r5rs%29,,
4.62028E+17,StephenD#5938,2021-11-18,Also relevant https://docs.racket-lang.org/guide/intro.html#%28part._use-module%29,,
4.62028E+17,StephenD#5938,2021-11-18,@alxshen if you run into difficulties we have a #help channel üòÄ,,
4.62028E+17,StephenD#5938,2021-11-18,Wow there is a package specifically to support this book! https://docs.racket-lang.org/manual@simply-scheme/index.html,,
8.73834E+17,alxshen#7084,2021-11-19,I thought all truth was contained in htdp and one should have no books beside it.,,ü§î (1)
2.66505E+17,notjack#9941,2021-11-19,nah we're more interested in encouraging people to read htdp than discouraging people from reading everything else. no book is perfect for everyone.,,plusone (3)
4.62028E+17,StephenD#5938,2021-11-19,"There are many nice books 
I‚Äôm a fan of 'Lisp In Small Pieces‚Äô by Christian Queinnec, PLAI by S.K. (http://cs.brown.edu/courses/cs173/2012/book/)

SICP is also popular.",,
3.5323E+17,Alex Knauth#4895,2021-11-19,Oh yeah PLAI is as awesome book,,
4.62028E+17,StephenD#5938,2021-11-19,"Book / chapter / paper club starts 1 December - details here: 
https://racket.discourse.group/t/book-chapter-paper-club/158?u=spdegabrielle",,
5.24323E+17,Ben Kenobi#5683,2021-11-19,"Random q: does anyone know if the `wrap` argument to `make-derived-parameter` is invoked to save the current value during `parameterize`? IOW, is a parameter invoked to save the current value during `parameterize`? I'll be testing to see if it is in a little while, but if anyone happens to know it would save me some time. cc @mflatt perhaps?",,
6.88091E+17,mflatt#6350,2021-11-19,"No, the old value does not go back through the wrapper",,
5.24323E+17,Ben Kenobi#5683,2021-11-19,"Quick testing agrees, thanks!",,
4.62028E+17,StephenD#5938,2021-11-20,"Been watching https://www.pldi21.org/prerecorded_hopl.K1.html and wondering what it means for racket/rhombus ambitions, and my own pl design ambitions. Especially interested in the breakdowns of what programmers are. (Specially the bit with the Python slide wrt rhombus )",,
4.62028E+17,StephenD#5938,2021-11-20,Is rhombus a Better python? And what makes it better?,,
4.62028E+17,StephenD#5938,2021-11-20,Qi tutorial and Jay‚Äôs challenge: https://racket.discourse.group/t/qi-tutorial-and-jays-challenge/162?u=spdegabrielle,,
1.55457E+17,Rubix#7306,2021-11-20,I'm a self-taught Haskell programmer. I'm trying to learn Racket. I've got Dr. Racket up and running on my Linux machine. What books/websites/videos should I use?,,
1.93202E+17,rocketnia#4517,2021-11-20,"Personally, I like the resources at the top of https://docs.racket-lang.org/, particularly the Racket Guide.",,
3.58051E+17,hazel#0271,2021-11-20,"yeah, if you're already an FPer you can probably go off the docs",,
1.55457E+17,Rubix#7306,2021-11-20,I guess I'll just read through the official docs.,,
3.58051E+17,hazel#0271,2021-11-20,"the tutorials are pretty good but brief, you can figure out what doesn't make sense and then go to the guide",,
3.58051E+17,hazel#0271,2021-11-20,I tried to learn Haskell first and Racket just kind of came gradually and naturally -- its syntax kind of melts if you understand how to do functional stuff,,
1.55457E+17,Rubix#7306,2021-11-20,"As I wrote in the introductions channel, I've been doing Haskell programming for 3 years and got 8th place on the private Haskell Advent of Code leaderboard.",,plusone (1)
1.93202E+17,rocketnia#4517,2021-11-20,https://github.com/racket/racket/wiki/Racket-resources,,
1.93202E+17,rocketnia#4517,2021-11-20,^ this links a few more options,,
1.55457E+17,Rubix#7306,2021-11-20,Thanks so much Nia.,,
1.55457E+17,Rubix#7306,2021-11-20,@rocketnia Is it fine if I shorten your name in that way?,,
1.93202E+17,rocketnia#4517,2021-11-20,"oh yes, please do XD",,
1.55457E+17,Rubix#7306,2021-11-20,Will do.,,
1.93202E+17,rocketnia#4517,2021-11-20,"for completeness's sake, there are many more links in #resources, including this pinned link to a pretty extensive list of Scheme and Racket books: https://erkin.party/scheme/bibliography/",,
1.55457E+17,Rubix#7306,2021-11-20,"As a gal who has used Vim for the past 8-ish years, the lack of vim bindings in Dr. Racket is really screwing with me right now. Is there anything I can do to remedy this?",,
1.93202E+17,rocketnia#4517,2021-11-20,"that sounds like something @Ben Kenobi would know about. I understand there's some way to use Vim with rich editing support for Racket through some combination of https://github.com/benknoble/vim-racket, ALE, and https://github.com/jeapostrophe/racket-langserver",,plusone (1)
1.55457E+17,Rubix#7306,2021-11-20,"Actually, in the past year, I've switched over to mainly using Emacs with Evil-Mode (Essentially Vim emulated in Emacs). As such I'm looking at Sid's awesome Symex.el package along with Racket-Mode.
https://github.com/countvajhula/symex.el",,
1.93202E+17,rocketnia#4517,2021-11-20,"I recently tried VS Code with racket-langserver and was impressed with its support for jumping to definitions and such. A lot of people use racket-xp-mode for Emacs... and no idea how well you'd like this train of thought, but I suppose there are probably ways to get VS Code or Emacs to feel more like Vim. XD",,
1.93202E+17,rocketnia#4517,2021-11-20,"oh yeah, I guess racket-xp-mode might be relevant :)",,
1.55457E+17,Rubix#7306,2021-11-20,"As I learned just today, Sid made both Symex-Mode *and* the new Qi library.",,
1.93202E+17,rocketnia#4517,2021-11-20,what brings you to Racket? was it Qi?,,
1.55457E+17,Rubix#7306,2021-11-20,"No, it wasn't Qi at all. It was actually a previous professor of mine (she taught CS 211, a beginning CS class at the university I attended) who strongly encouraged me to read SICP (Structure and Interpretation of Computer Programs). In order to fully digest that book I thought it best to also learn a Lisp/Scheme variant. After doing some research I found that Racket looked like it would be the most interesting and force me to think in new ways. I think that, once I learn how to master them, the language oriented features of Racket will dramatically change the way I code.",,
1.55457E+17,Rubix#7306,2021-11-20,Do you know how to install racket-xp-mode? Or is Emacs not really your thing?,,
1.93202E+17,rocketnia#4517,2021-11-20,"Sorry, I'm a bit of an outlier who's mostly used boring GUI text editors (Notepad++ and Kate) for my Racket programming.",,
1.55457E+17,Rubix#7306,2021-11-20,I see. That does sound like a bit of an odd thing in this community.,,
1.93202E+17,rocketnia#4517,2021-11-20,"At one point, IDEs frustrated me with slow autocomplete and na√Øve formatting rules that made it harder to write the programs I was trying to write.

Then I spent some time prioritizing development workflows that I could happily pick up and continue with from a device that had only simple text editors, a web browser, and no libraries except what I could write for myself. I moved from Racket to JavaScript for all my projects. I wanted to write code that would be useful to as many people as possible, even people in that kind of situation.

But I think that this principled abandonment of good things made me less familiar than I should be with using other tools. Nowadays, even in a JavaScript context, to swear off using build systems and package managers just because I can't write them myself and run builds in the browser would mean living under a rock. I gave up and used npm a while ago, and then I switched to Racket because I finally realized I was doing all my development on computers where I could actually install it. XD",,
1.93202E+17,rocketnia#4517,2021-11-20,"I checked out Agda a couple of years ago and got a setup working in Atom, but then didn't do much with it. I've tried it with Emacs before, too, but all my habits are with Notepad-style keybindings, and I haven't gotten over that hurdle yet.",,
3.79445E+17,joohnym#9531,2021-11-20,I think racket-xp-mode comes with racket-mode,,
1.93202E+17,rocketnia#4517,2021-11-20,Now I'm trying to give VS Code a chance because of its prevalence in front-end industry stuff.,,
3.79445E+17,joohnym#9531,2021-11-20,so if you install racket-mode you should be covered,,
1.55457E+17,Rubix#7306,2021-11-20,That's what I think too. I can't find racket-xp-mode in MELPA,,
3.79445E+17,joohnym#9531,2021-11-20,"yeah, just install racket mode. It works really well",,
1.55457E+17,Rubix#7306,2021-11-20,I will do that.,,
1.55457E+17,Rubix#7306,2021-11-20,"I love your ideals, but I cannot bring myself to be without editor support.",,
1.55457E+17,Rubix#7306,2021-11-21,"So, in the Haskell world, people often use a `foo.cabal` file, where foo is the project name, to list out all the dependencies a project needs. And then one can use a command line tool called Cabal to build the project and pull in all the listed dependencies. Does there exist an equivalent system for this in Racket? And if so, how can I do use said feature?",,
3.58051E+17,hazel#0271,2021-11-21,"raco, specifically raco pkg",,
3.58051E+17,hazel#0271,2021-11-21,https://docs.racket-lang.org/pkg/index.html,,
1.55457E+17,Rubix#7306,2021-11-21,Would it be possible to have all my required packages listed in a stand-alone file in the project's root directory and then have `raco pkg` parse that to figure out which dependencies I want?,,
3.58051E+17,hazel#0271,2021-11-21,"yeah, that's `info.rkt`",,
1.55457E+17,Rubix#7306,2021-11-21,Thanks Hazel.,,
1.55457E+17,Rubix#7306,2021-11-21,@hazel Does that guide you've linked explain what the syntax of `info.rkt` is?,,
3.58051E+17,hazel#0271,2021-11-21,"yeah, section 4, ""package metadata""",,
1.55457E+17,Rubix#7306,2021-11-21,Thanks.,,
1.55457E+17,Rubix#7306,2021-11-21,"So, I have the following very simple `info.rkt` file for testing purposes:
```
#lang info
(define collection ""sicp-exercises"")
(define deps '(""sicp"" ""graph""))```",,
1.55457E+17,Rubix#7306,2021-11-21,What I'd like to do is use `raco` to somehow get a repl with those two packages in scope so I can test out functions from those packages.,,
1.55457E+17,Rubix#7306,2021-11-21,But the issue is that I'm not sure how to do so.,,
1.55457E+17,Rubix#7306,2021-11-21,"I know that `raco pkg install <pkg-name>` installs stuff, but I don't want to have install all the packages manually one by one.",,
1.55457E+17,Rubix#7306,2021-11-21,@StephenD Do you know what the right way to do this is?,,
2.64024E+17,Eutro#0016,2021-11-21,"`raco pkg install` in the directory with `info.rkt` will install the deps for the user, then those packages will be available in any REPL you start",,
1.55457E+17,Rubix#7306,2021-11-21,Really? That should just work?,,
2.64024E+17,Eutro#0016,2021-11-21,"Racket doesn't really have project-specific dependencies, so if you needed that kind of segregation you'd have to segregate it the Unix way by making a new user",,
2.64024E+17,Eutro#0016,2021-11-21,otherwise packages are installed either for the user or the installation,,
1.55457E+17,Rubix#7306,2021-11-21,Hmm... I see. That's interesting. Do you know why Racket lacks project specific dependencies?,,
2.64024E+17,Eutro#0016,2021-11-21,"I don't know myself, but I'd guess that it's just not usually necessary",,
3.79445E+17,joohnym#9531,2021-11-21,I didn't even know Haskell did that. I thought it was mostly a Python thing,,
1.55457E+17,Rubix#7306,2021-11-21,Yeah. Haskell does that.,,
2.64024E+17,Eutro#0016,2021-11-21,it's common in compiled languages where you have to have dependencies available to compile against,,
2.64024E+17,Eutro#0016,2021-11-21,"even Python's packages are installation/user-wide by default, only venvs segregate the mess slightly",,
1.55457E+17,Rubix#7306,2021-11-21,"@hazel Hey, so I was searching past messages in this Discord server to see if anyone here used NixOS and it seems like you do. I also use NixOS. I've been trying to figure out what the best way handle installing Racket dependencies in NixOS is. What's your take on this? How do you manage Racket dependencies in your projects?",,
4.62028E+17,StephenD#5938,2021-11-21,We really need some posts like the 'A Note to Readers with Lisp/Scheme Experience' in the Guide that covers some other popular languages https://docs.racket-lang.org/guide/intro.html#%28part._use-module%29,,
4.62028E+17,StephenD#5938,2021-11-21,"* Coming to Racket from Javascript
* Coming to Racket from Clojure
* Coming to Racket from Haskell
* Coming to Racket from Java 
* Coming to Racket from C#
* Coming to Racket form Python
* Coming to Racket from Ruby
* Coming to Racket from C/C++
I could do 'Coming to Racket from MUMPS` but I think there is a limited audience ü§£",,plusone (1)
4.62028E+17,StephenD#5938,2021-11-21,If there were things that surprised you when 'coming from *n*' let me know and I'll make a wiki page for it.,,
2.75501E+17,Plane#0324,2021-11-21,you could write a post asking if anyone wants to share their experiences coming from language X or Y,,üíØ (1)
5.24323E+17,Ben Kenobi#5683,2021-11-21,"Yep, I use vim with this combo. Having lsp support through ale is pretty nice. @Rubix if you try it and something is missing please let me know! Adding support for more langs is a goal, but I want to avoid maintaining too many syntax files myself if possible. Fortunately, the particular way that my racket plugin sets filetypes means new langs just need new ftplugins/syntax/etc. If they‚Äôre not too different from an existing lang it‚Äôs even easier (_e.g._, a one liner in my vimrc at work added support for a lang I‚Äôm making there).",,
6.46178E+17,L√Æm Ts√∫-thu√†n#0805,2021-11-21,"I have tried using nix for racket project, but after all, I still use raco",,
4.62028E+17,StephenD#5938,2021-11-21,Great idea I‚Äôm on it,,
4.62028E+17,StephenD#5938,2021-11-21,https://racket.discourse.group/t/experiences-coming-from-other-languages-to-racket/170?u=spdegabrielle,,
6.46114E+17,samth#3420,2021-11-21,@Rubix who was the professor who encouraged you to try racket?,,
1.55457E+17,Rubix#7306,2021-11-21,"No one you would have heard of, I would think. And I'd rather no share, because she only teaches at one university, and I don't want to reveal my location. Sorry.",,
6.46114E+17,samth#3420,2021-11-21,"Ok, I'll keep my surmises to myself then.",,
2.75501E+17,Plane#0324,2021-11-21,thanks for posting that.  really good replies already!  it feels like the discourse group is going well,,üòÄ (1)
2.75501E+17,Plane#0324,2021-11-21,"i personally like it.  i don't really like using google groups or reddit that much .  i had the google group set to send me email, but of course as was pointed out in the talk, there was the weird italian spam",,
2.75501E+17,Plane#0324,2021-11-21,so i've finally unsubscribed from that and set up discourse to email me,,
4.62028E+17,StephenD#5938,2021-11-21,Thanks for the good idea - all credit to you @Plane,,
3.29023E+17,nixin72#3554,2021-11-21,"So I wanted functions from my Racket file to be available for import without my `(define cli-args (command-line ...))` running, so I moved that inside a module like
```scheme
(module+ main
  (define cli-args
    (command-line
      ...)))
```
And that works fine when running `racket main.rkt ...args`, but if I try doing `raco pkg install` to install my package with raco, then try doing `raco proj ...args`, it never seems to enter the main and just exists without doing anything. What's the best way to handle this? Should I just be taking all the logic and dumping it into another file that the main then requires and just forget about needing to put that all into another module?",,
2.64024E+17,Eutro#0016,2021-11-21,you have to tell the command to initialise the main module,,
2.64024E+17,Eutro#0016,2021-11-21,Like this <https://github.com/eutro/advent-of-code-racket/blob/a518361f068053c3b413a22d3294e847c69723e3/info.rkt#L10>,,
3.29023E+17,nixin72#3554,2021-11-21,"Ahh perfect, thank you! That works now üëç",,
3.29023E+17,nixin72#3554,2021-11-21,How long do you generally have to wait after pushing changes to a package for them to be available?,,
4.62028E+17,StephenD#5938,2021-11-21,4-8 hours,,
4.62028E+17,StephenD#5938,2021-11-21,I don‚Äôt actually know but it is usually done in 4-8 hours,,
1.55457E+17,Rubix#7306,2021-11-21,"I'm really excited to be in the Racket community, because I feel that we need more women in CS in general.",,üëç (1)
1.55457E+17,Rubix#7306,2021-11-21,"I'm also trying to teach my sister Python, but she's 8 and the textual interface of Python is still too much for her to deal with. It also doesn't help that I barely know the language myself.",,
1.55457E+17,Rubix#7306,2021-11-21,"She said to me about a month ago, ""When I get older, I want to be programmer like you! Can you please teach me?"". It warms my heart to see her take after me in this way.",,‚ú® (3)
1.55457E+17,Rubix#7306,2021-11-21,"Like, she knows that I can make the computer generate the pretty pictures (I've been doing a lot of work with the Mandlebrot set recently) and she wants to make the pretty pictures too.",,
2.64024E+17,Eutro#0016,2021-11-21,we can make pretty pictures with @r16 !,https://cdn.discordapp.com/attachments/618895179343986688/912144471972536350/Screenshot_20211122-005509-616.png,
2.64024E+17,Eutro#0016,2021-11-21,we don't have the trick here though,,
1.55457E+17,Rubix#7306,2021-11-21,That's a pretty picture indeed!,,
7.18552E+17,jatta#5605,2021-11-22,"Is it possible to implement `quote` in terms of `quasiquote`  and `unquote`, (for a language that doesn't have `quote`)?",,
7.94955E+17,Laurent O#6627,2021-11-22,if after each unquote you add a quasiquote you should get the behaviour of quote I guess,,
7.18552E+17,jatta#5605,2021-11-22,ah that makes sense,,
5.24323E+17,Ben Kenobi#5683,2021-11-22,"With no unquotes, qq is quote.",,
3.58051E+17,hazel#0271,2021-11-22,I don't think they're equivalent if you wanna quote a comma,,
3.58051E+17,hazel#0271,2021-11-22,"!rkt eval (quote ,)",,
8.02004E+17,r16#4581,2021-11-22,":warning: stderr:
trick:1:8: read-syntax: unexpected `)`
  context...:
   /usr/local/racket/collects/racket/sequence.rkt:41:0: sequence->list
   /home/r16bot/r16/evaluator.rkt:63:2: run-evaluation
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:413:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:511:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:914:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:910:5: loop",,
3.58051E+17,hazel#0271,2021-11-22,"oh, nevermind",,
3.58051E+17,hazel#0271,2021-11-22,"!rkt eval (quote 2 , 3)",,
8.02004E+17,r16#4581,2021-11-22,":warning: stderr:
trick:1:0: quote: bad syntax
  in: (quote 2 (unquote 3))
  location...:
   trick:1:0
  context...:
   /home/r16bot/r16/evaluator.rkt:71:4: not-module
   /home/r16bot/r16/evaluator.rkt:63:2: run-evaluation
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:413:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:511:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:914:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:910:5: loop",,
3.58051E+17,hazel#0271,2021-11-22,yeah it's just bad syntax,,
3.58051E+17,hazel#0271,2021-11-22,"okay, Ben's right",,
2.75501E+17,Plane#0324,2021-11-22,"i think you can implement `quasiquote` if you have `quote`, but i don't think it works the other way.  at least, i am not sure how you would write `'unquote` in terms of `quasiquote`",,
3.58051E+17,hazel#0271,2021-11-22,!rkt eval `unquote,,
8.02004E+17,r16#4581,2021-11-22,unquote,,
3.58051E+17,hazel#0271,2021-11-22,like that,,
2.75501E+17,Plane#0324,2021-11-22,oh,,
2.75501E+17,Plane#0324,2021-11-22,it's that easy huh,,
2.75501E+17,Plane#0324,2021-11-22,i guess you could take either one as fundamental then?,,
6.46114E+17,samth#3420,2021-11-22,It's harder to make this work: `'(unquote (+ 1 2))`,,
5.24323E+17,Ben Kenobi#5683,2021-11-22,"I see lookup-errno: symbol -> integer in the ffi. Is there an inverse? Something like errno.h‚Äôs perror, to go integer->symbol for display?",,
2.75501E+17,Plane#0324,2021-11-22,drracket on wslg,https://cdn.discordapp.com/attachments/618895179343986688/912516508696068156/unknown.png,ü•≥ (4)
4.62028E+17,StephenD#5938,2021-11-23,Windows subsystem for linux?,,
4.62028E+17,StephenD#5938,2021-11-23,ooooh!  https://github.com/microsoft/wslg,,
5.24323E+17,Ben Kenobi#5683,2021-11-23,Turns out I really just wanted exn-message üôÇ,,
3.11137E+17,KeldonAlleyne#6590,2021-11-23,"At her age I had little trouble grasping BASIC ... it's worth checking out the Usborne 1980s Computer Books https://usborne.com/gb/books/computer-and-coding-books

This is what I started out reading in the mid-90s at around her age. It gave me a sense of knowing how it all worked and what I could do with it even though I didn't have a computer ... it's powerful stuff and what's great is that computers were so much simpler back then that the books were able to teach children how to program in machine code (not even assembler, but raw machine code!) ...

Alternatively, you could try Scratch. There are some good books on Scratch for young children.

Another option is Turtle Academy - https://turtleacademy.com/",,
2.66505E+17,notjack#9941,2021-11-23,I learned BASIC on a TI graphing calculator because I wanted to make text adventure RPGs and also fake syntax error menus that you couldn't exit.,,meowsmile (3)
2.75501E+17,Plane#0324,2021-11-23,"i learned basic on the c64 around that age, and i think i had largely moved onto pascal by the time i was 10",,
2.75501E+17,Plane#0324,2021-11-23,in fact i still have my pascal code from back then!,,
2.75501E+17,Plane#0324,2021-11-23,"i wasn't a very *good* programmer at that age, but i made games and i had lots of fun",,
2.75501E+17,Plane#0324,2021-11-23,"having fun -> you are motivated and engaged with the material -> you spend more time learning, a virtuous cycle",,
2.75501E+17,Plane#0324,2021-11-23,i think it is really fun when you can do something and see the effects of it right away,,
8.14743E+16,jimpjorps#0001,2021-11-23,"yeah, the visual languages like Scratch are really good for that for kids",,
2.75501E+17,Plane#0324,2021-11-23,i know i did Logo when i was little but i don't remember at what age,,
2.75501E+17,Plane#0324,2021-11-23,at the time i enjoyed it i am pretty sure,,
8.14743E+16,jimpjorps#0001,2021-11-23,the middle school I went to used MicroWorlds Logo which has a bunch of bells and whistles for making movies and games,,
8.14743E+16,jimpjorps#0001,2021-11-23,looks like it still exists,,
2.75501E+17,Plane#0324,2021-11-23,stencyl is another one,,
4.62028E+17,StephenD#5938,2021-11-23,"Don‚Äôt forget Pyret and Hedy both modern (actively developed& supported)  https://www.hedycode.com/ http://pyret.org/index.html

Pyret especially draws from Python (py geddit) 
And has a new free book that moves to Python in the second part. https://dcic-world.org/2021-08-21/index.html",,
2.34164E+17,python#3213,2021-11-23,"When I was 8 I learned scratch, and that was a good starting point, but LOGO was how I really got into programming.",,üëç (1)
2.08605E+17,soegaard#9269,2021-11-23,Logo? I just got a flashback. I remember trying Logo on the Commodore 64. But I expect you tried a newer version. NetLogo perhaps?,,
1.55457E+17,Rubix#7306,2021-11-23,"Wow, there really are a lot of programming languages I could teach my sister. I don't know which one to choose.",,
2.08605E+17,soegaard#9269,2021-11-23,"@Rubix  The teaching materials (book) is often more important than the language. Especially if you are learning a language on your own. But your sister is lucky she has you to ask, when she get stuck.

Kids often find physical things fun to program. How about a MicroBit?
https://microbit.org/",,
1.55457E+17,Rubix#7306,2021-11-23,Yeah. I think that might be a good way to teach her.,,
2.08605E+17,soegaard#9269,2021-11-23,"Also I am sure you can find something that interest her at Hour of Code. They have a lot of shorter activities ready to use.
https://hourofcode.com/dk/learn",,
2.08605E+17,soegaard#9269,2021-11-23,"Apropos Logo, I like the ""Elsa on skates"" activity.",,plusone (1)
1.55457E+17,Rubix#7306,2021-11-23,"Oh god. My sister loves Frozen and Elsa especially. She dressed up as Elsa for Halloween and she often sings ""Let It Go"" at home.",,
2.08605E+17,soegaard#9269,2021-11-23,üôÇ,,
1.55457E+17,Rubix#7306,2021-11-23,"Actually, I just actually just asked her if she wanted to try some coding things with Elsa, and she got so so excited and began jumping around so much. I think I'll be doing those coding exercises with her.",,"üëç (2),ü•∞ (1)"
1.55457E+17,Rubix#7306,2021-11-23,Is this a good way to teach her the basic coding concepts?,,
1.55457E+17,Rubix#7306,2021-11-23,I'm worried that my sister will be too entranced by Elsa to actually fully grasp the coding concepts.,,
2.08605E+17,soegaard#9269,2021-11-23,"I wouldn't worry about that. If she thinks it is fun, she is more likely to try programming again.",,plusone (1)
1.55457E+17,Rubix#7306,2021-11-23,"Yeah, that makes sense.",,
4.66395E+17,oaktownsam#0815,2021-11-23,I think the first OO program I read (in a magazine) was a text adventure in LOGO.,,üëç (2)
2.34164E+17,python#3213,2021-11-23,the version i used was called FMS LOGO for windows XP,,üëç (1)
2.08605E+17,soegaard#9269,2021-11-23,Didn't know about that one.,,
2.34164E+17,python#3213,2021-11-23,it has a ton of fancy features and bindings to windows apis,,
2.34164E+17,python#3213,2021-11-23,"my favorite was the perspective mode adding roll and pitch to your turtle, so that it could move in projected 3d space üòÑ",,
2.08605E+17,soegaard#9269,2021-11-23,Sort of what @Bracktus  was experimenting with the other day?,,
2.34164E+17,python#3213,2021-11-23,"a bit, yeah",,
2.34164E+17,python#3213,2021-11-23,"i also vaguely remember seeing a non-euclidean geometry demo on that old pc somewhere, but i don't remember it",,
2.34164E+17,python#3213,2021-11-23,it probably wasn't part of the logo thing,,
2.34164E+17,python#3213,2021-11-23,"i was about 10, kinda hard to remember now",,
8.14743E+16,jimpjorps#0001,2021-11-23,sounds like something from Geometer's Sketchpad,,
3.5323E+17,Alex Knauth#4895,2021-11-23,Wait does Geometer's Sketchpad have non-euclidean stuff?,,
8.14743E+16,jimpjorps#0001,2021-11-23,I remember it having simulations of Poincare's disk and such,,
2.34164E+17,python#3213,2021-11-23,what i remember was a 3d thing where could fly through a regular tiling of dodecahedron(?) shaped rooms,,
2.34164E+17,python#3213,2021-11-23,"normally, dodecahedrons don't regularily tile, but it bent the rules a bit",,
2.75501E+17,Plane#0324,2021-11-23,for me i think it was c64 logo as well,,
2.75501E+17,Plane#0324,2021-11-23,although my memory of it is a bit fuzzy,,
2.75501E+17,Plane#0324,2021-11-23,i loved the c64.  i decided that `œÄ` was a hamster and i made lots of games starring that hamster,,üêπ (1)
2.34164E+17,python#3213,2021-11-23,cute,,
4.62028E+17,StephenD#5938,2021-11-23,Basic on a ‚Äòdick smith system 80. (Australian Trs-80 clone) b&w television,,
4.66395E+17,oaktownsam#0815,2021-11-23,TI-99/4A over here,,plusone (1)
8.9146E+17,Starnes04#1672,2021-11-23,well theres a new racket version.. anything exciting?,,
4.40139E+17,Parnikkapore#2806,2021-11-23,"^ Obligatory mention of the excellent The Great Logo Adventure book, a light and nicely long introduction to imperative turtle programming",,
1.55457E+17,Rubix#7306,2021-11-23,"Suppose I have a variadic function like `hash`, and a list of values. How do I ""splice"" the list values into the function so that I can call it properly?",,
8.14743E+16,jimpjorps#0001,2021-11-23,`(apply f xs)` takes a list `xs` and provides it to `f` as its arguments,,
8.14743E+16,jimpjorps#0001,2021-11-23,so like `(apply hash '(1 2 3 4))` produces `'#hash((1 . 2) (3 . 4))`,,
2.66505E+17,notjack#9941,2021-11-23,IMO `apply` isn't something you should need to use ideally,,
1.55457E+17,Rubix#7306,2021-11-23,@notjack What should I do instead of using `apply`?,,
2.66505E+17,notjack#9941,2021-11-23,"@Rubix sometimes you have to use it. But in the ideal case, whatever variadic function you're using should have an alternate version that accepts a sequence. Sadly many variadic standard library functions don't have sequence accepting equivalents.",,
1.55457E+17,Rubix#7306,2021-11-23,Does there exist a sequence based way to make a hash?,,
1.55457E+17,Rubix#7306,2021-11-23,"Actually, `make-immutable-hash` does what I want.",,
2.66505E+17,notjack#9941,2021-11-23,Yup that's the way,,
2.66505E+17,notjack#9941,2021-11-23,There's also `for/hash`,,
1.55457E+17,Rubix#7306,2021-11-23,Yeah. I saw that. That's cool too.,,
3.38034E+17,sorawee#6299,2021-11-24,Two interfaces per function don't seem ideal though?,,
3.38034E+17,sorawee#6299,2021-11-24,"It's practically needed because variadic functions are inefficient. It will need to allocate the argument list. But without this constraint, I see no reason why we should have many different interfaces that do the same thing.",,
2.66505E+17,notjack#9941,2021-11-24,"There's going to be two interfaces either way. `(apply f args)` and `(f x y z)` are different interfaces from the user's perspective. That's why people ask ""how do I call this variadic function with a list?"" in the discord and slack so often. If they weren't different interfaces, that wouldn't be so non-obvious.",,
2.66505E+17,notjack#9941,2021-11-24,better to just give a name to it and make it work for sequences imo,,plusone (1)
2.66505E+17,notjack#9941,2021-11-24,(as opposed to just lists),,
1.55457E+17,Rubix#7306,2021-11-24,"Sorry for being an ignorant gal, but this is something I'm confused about.",,
3.38034E+17,sorawee#6299,2021-11-24,"It's one more function to document. One more surface to make a mistake. Etc.

IMO, it's great that they ask ""how do I call this variadic function with a list?"". They learn it once, and they can use it on all functions. Compare that with the situation where a library forgets to provide a list variant, and users are now confused on what to do.",,plusone (1)
2.66505E+17,notjack#9941,2021-11-24,no worries at all :) I definitely agree it's confusing,,
2.66505E+17,notjack#9941,2021-11-24,It's more work for API providers and less work for API consumers,,
2.66505E+17,notjack#9941,2021-11-24,plus often times a sequence-accepting function can be smarter than a variadic one,,
2.66505E+17,notjack#9941,2021-11-24,"for example it's impossible for a variadic function to accept an infinite sequence, even if it could logically short circuit somehow",,
1.55457E+17,Rubix#7306,2021-11-24,"So, I have a project with the following hierarchy: ```
/home/rubix/rkt/sicp
‚îú‚îÄ‚îÄ info.rkt
‚îî‚îÄ‚îÄ src
    ‚îú‚îÄ‚îÄ common
    ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ foo.rkt
    ‚îî‚îÄ‚îÄ test.rkt

2 directories, 3 files```How can I, in the file `test.rkt`, require the things provided by `foo.rkt`? Can I just put `(require common/foo)` in `test.rkt`?",,
3.38034E+17,sorawee#6299,2021-11-24,"`(require ""common/foo.rkt"")`",,
2.75501E+17,Plane#0324,2021-11-24,are you writing code with `#lang sicp` right now?,,
3.38034E+17,sorawee#6299,2021-11-24,"Good point. With `#lang sicp`, probably `(#%require ""common/foo.rkt"")` (untested)",,
1.55457E+17,Rubix#7306,2021-11-24,"I am going to be doing the SICP exercises shortly in `#lang SICP`, but I'd like to know how to do this sort of thing in `#lang racket`, for future projects.",,
3.58051E+17,hazel#0271,2021-11-24,remove the `#%`,,
3.58051E+17,hazel#0271,2021-11-24,for not sicp,,
1.55457E+17,Rubix#7306,2021-11-24,Thanks Hazel.,,
2.75501E+17,Plane#0324,2021-11-24,"`require` is the form you generally want to use.  it is part of `#lang racket` and tends to be part of other langs which are based on `#lang racket`.  when you compile a racket program, the `require` form is expanded to use the internal `#%require` form; you typically would not use this form directly",,
2.75501E+17,Plane#0324,2021-11-24,"`sicp` is a simpler language which isn't really aware of racket's package system, so it doesn't have a `require` form.  so you can fall back to using the internal `#%require` form directly, although i think the idea is that in the `sicp` language you probably are not requiring things typically",,
2.75501E+17,Plane#0324,2021-11-24,"of course if you want to, you can do so anyway",,
2.75501E+17,Plane#0324,2021-11-24,"in the `sicp` and `r5rs` languages, i believe the reason `require` is not provided is to avoid breaking programs that use the name `require`.  but `#%require` is still available and it is not bad to use it if you want to",,
2.75501E+17,Plane#0324,2021-11-24,(i hope that was helpful and didn't confuse things more.  lol),,
2.08605E+17,soegaard#9269,2021-11-24,@sorawee  Would it be a good idea to provide the real `require` in `#lang sicp` ?,,
8.14743E+16,jimpjorps#0001,2021-11-24,"there are some programs in chapter 4 of SICP that use a function named `require` for its discussion of nondeterministic computing, so I think that's the reasoning for not defining it",,
8.14743E+16,jimpjorps#0001,2021-11-24,"and any alias for it would be the same thing as saying ""just type `#%require`"" in the manual",,
2.75501E+17,Plane#0324,2021-11-24,"the real `require` has a slightly different behavior, right?",,
2.08605E+17,soegaard#9269,2021-11-24,Yes. When `require` is expanded the expansion contains `#%require`. The inside of `#%require` is restricted to a simple subset of what `require` can handle.,,
2.75501E+17,Plane#0324,2021-11-24,"so because the behavior is different it is slightly different than saying ""just type `#%require`"" i think.  but practically i don't think it has been an issue anyone has run into and complained about?",,
8.14743E+16,jimpjorps#0001,2021-11-24,probably,,
8.14743E+16,jimpjorps#0001,2021-11-24,"if you're requiring heavy duty use of `require` you should probably be using #lang racket instead, I assume is the thinking",,
2.75501E+17,Plane#0324,2021-11-24,yeah i think most uses of `#lang sicp` wouldn't use racket's `require` at all,,
1.93202E+17,rocketnia#4517,2021-11-24,"you can require `require` with `#%require`, right?",,
2.75501E+17,Plane#0324,2021-11-24,the racket `require` i think is hidden inside one of the private racket files,,
2.75501E+17,Plane#0324,2021-11-24,https://github.com/racket/racket/blob/6a92199412e18d509b3a4a9dd86541268a7a55e8/racket/collects/racket/private/reqprov.rkt#L253,,
2.75501E+17,Plane#0324,2021-11-24,i guess you could `(#%require racket/private/reqprov)` (eek!!),,
2.75501E+17,Plane#0324,2021-11-24,it is a little chicken-and-egg because you can't `(#%require (only-in ... require))`,,
3.38034E+17,sorawee#6299,2021-11-25,"```
(#%require (only racket require))
```

works",,
3.38034E+17,sorawee#6299,2021-11-25,"Pro: good for transitioning to Racket
Con: backward incompatibility

So... yeah, I don't know. I don't have a strong opinion.",,
2.75501E+17,Plane#0324,2021-11-25,oh really?  i didn't know about that!,,
2.75501E+17,Plane#0324,2021-11-25,thank you,,
2.75501E+17,Plane#0324,2021-11-25,that is much better,,
2.08605E+17,soegaard#9269,2021-11-25,FWIW with normal `require` it is called `only-in`.,,
1.55457E+17,Rubix#7306,2021-11-25,I'm looking for a nice concise tutorial on how to use `structs` in Racket. Can someone help me figure this out?,,
4.62028E+17,StephenD#5938,2021-11-25,Maybe https://docs.racket-lang.org/guide/define-struct.html ?,,
1.55457E+17,Rubix#7306,2021-11-25,That looks good on a first glance. I'll have dig into it when it's not 3:30 in the morning and I'm not super tired.,,
4.62028E+17,StephenD#5938,2021-11-25,üëç,,
1.55457E+17,Rubix#7306,2021-11-25,Being able to define your own data structures is the bread and butter of programming.,,üíØ (1)
8.14743E+16,jimpjorps#0001,2021-11-25,https://www.coursera.org/lecture/programming-languages-part-b/datatype-programming-in-racket-with-structs-putRS this video goes over it pretty well too,,
2.27443E+17,Decabytes#9761,2021-11-25,"If I have a function that takes four color values (RGBA) is it possible to get a Racket list with four values to be passed as four separate arguments to the function? I.E

(my-functions '(#xFF #x00 #x00 #xFF)) -> (my-functions #xFF #x00 #x00 #xFF)",,
6.46114E+17,samth#3420,2021-11-25,You want the apply function,,
2.27443E+17,Decabytes#9761,2021-11-25,Aha that was what I was looking for. Thank you!,,
2.66505E+17,notjack#9941,2021-11-26,"inspired by the anagram question in #help, today I am amused that you can check if two strings are anagrams with `(equal? (sequence->multiset str1) (sequence->multiset str2))`",,
1.55457E+17,Rubix#7306,2021-11-26,What's a multiset?,,
2.66505E+17,notjack#9941,2021-11-26,it's a set that's allowed to contain duplicates,,
2.66505E+17,notjack#9941,2021-11-26,the order still doesn't matter though,,
4.66395E+17,oaktownsam#0815,2021-11-26,What is the complexity of comparing two multisets?,,
1.55457E+17,Rubix#7306,2021-11-26,Are strings considered sequences?,,
4.66395E+17,oaktownsam#0815,2021-11-26,"!rkt eval
```
(sequence? ""abc123"")
```",,
8.02004E+17,r16#4581,2021-11-26,#t,,
4.66395E+17,oaktownsam#0815,2021-11-26,Yes,,
1.55457E+17,Rubix#7306,2021-11-26,"!rkt eval ```(for/list [x ""abc123""] (x))```",,
8.02004E+17,r16#4581,2021-11-26,":warning: stderr:
trick:1:11: for/list: bad sequence binding clause
  at: x
  in: (for/list (x ""abc123"") (x))
  location...:
   trick:1:11
  context...:
   /usr/local/racket/collects/racket/private/for.rkt:1555:4: try-next
   /home/r16bot/r16/evaluator.rkt:71:4: not-module
   /home/r16bot/r16/evaluator.rkt:63:2: run-evaluation
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:413:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:511:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:914:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:910:5: loop",,
1.55457E+17,Rubix#7306,2021-11-26,Hmm? Why did that fail?,,
1.55457E+17,Rubix#7306,2021-11-26,"!rkt eval ```(for/list [x ""abc123""] x)```",,
8.02004E+17,r16#4581,2021-11-26,":warning: stderr:
trick:1:11: for/list: bad sequence binding clause
  at: x
  in: (for/list (x ""abc123"") x)
  location...:
   trick:1:11
  context...:
   /usr/local/racket/collects/racket/private/for.rkt:1555:4: try-next
   /home/r16bot/r16/evaluator.rkt:71:4: not-module
   /home/r16bot/r16/evaluator.rkt:63:2: run-evaluation
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:413:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:511:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:914:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:910:5: loop",,
1.55457E+17,Rubix#7306,2021-11-26,IDK how to make that work.,,
3.5323E+17,Alex Knauth#4895,2021-11-26,"`([x ""abc123""])`",,
1.55457E+17,Rubix#7306,2021-11-26,Ah. I see.,,
1.55457E+17,Rubix#7306,2021-11-26,"!rkt eval ```(for/list ([x ""abc123""]) x)```",,
8.02004E+17,r16#4581,2021-11-26,(a b c 1 2 3),,
2.75501E+17,Plane#0324,2021-11-26,yay,,
1.55457E+17,Rubix#7306,2021-11-26,Is that the right output? It looks a bit wrong. Shouldn't that list be quoted?,,
2.75501E+17,Plane#0324,2021-11-26,at the repl it looks better,,
2.75501E+17,Plane#0324,2021-11-26,"```scheme
> (for/list ([x ""abc123""]) x)
'(#\a #\b #\c #\1 #\2 #\3)
```",,
2.75501E+17,Plane#0324,2021-11-26,i don't know much about the bot,,
1.55457E+17,Rubix#7306,2021-11-26,Ah. Cool. So it's a list of chars?,,
3.5323E+17,Alex Knauth#4895,2021-11-26,Does r16 use display instead of print?,,
2.75501E+17,Plane#0324,2021-11-26,"you can also write explicitly:
```scheme
(for/list ([x (in-string ""abc123"")])
  x)
```",,
1.55457E+17,Rubix#7306,2021-11-26,Does that have better performance or is it equivalent?,,
2.75501E+17,Plane#0324,2021-11-26,"racket has the notion of ""sequences"" here",,
4.66395E+17,oaktownsam#0815,2021-11-26,Better.,,
1.55457E+17,Rubix#7306,2021-11-26,Oh? Why is that?,,
4.66395E+17,oaktownsam#0815,2021-11-26,When some forms like `in-string` are used in a `for` loop it is rewritten into string access operations instead of generic sequence operations.,,
4.66395E+17,oaktownsam#0815,2021-11-26,"I think it even uses the ""unsafe"" variant operations (because they are used safely) which are even faster.",,
2.66505E+17,notjack#9941,2021-11-26,Linear in the number of unique keys,,
2.64024E+17,Eutro#0016,2021-11-26,it `display`s the return values,,
1.55457E+17,Rubix#7306,2021-11-26,Ah. That makes a lot of sense.,,
1.55457E+17,Rubix#7306,2021-11-26,Does there exist an equivalent `(in-list xs)` form?,,
2.64024E+17,Eutro#0016,2021-11-26,yes,,
2.64024E+17,Eutro#0016,2021-11-26,`(in-list xs)`,,
2.75501E+17,Plane#0324,2021-11-26,the docs for `in-list` and `in-string` mention they can give better performance,,
2.75501E+17,Plane#0324,2021-11-26,<https://docs.racket-lang.org/reference/sequences.html#%28def._%28%28lib._racket%2Fprivate%2Fbase..rkt%29._in-list%29%29>,,
2.75501E+17,Plane#0324,2021-11-26,there are a bunch of similar functions,,
4.66395E+17,oaktownsam#0815,2021-11-26,A good way to see all of them is to just search for `in-` in the documentation,,
7.18552E+17,jatta#5605,2021-11-27,"I heard something about ""@ notation"", where can I read about that?",,
7.18552E+17,jatta#5605,2021-11-27,"related to writing prose in string literals, I think",,
4.66395E+17,oaktownsam#0815,2021-11-27,https://docs.racket-lang.org/scribble/reader.html,,
4.66395E+17,oaktownsam#0815,2021-11-27,"It's part of Scribble, but can be used separately",,
4.66395E+17,oaktownsam#0815,2021-11-27,also https://docs.racket-lang.org/scribble/reader-internals.html#%28mod-path._at-exp%29,,
7.18552E+17,jatta#5605,2021-11-27,thanks,,
4.62028E+17,StephenD#5938,2021-11-27,I especially like the regex trick https://www.greghendershott.com/2015/08/at-expressions.html,,plusone (1)
1.55457E+17,Rubix#7306,2021-11-27,"Is it possible to extend the size of a vector once it's been created, to add new elements to the end, or is that just a fool's errand?",,
2.75501E+17,Plane#0324,2021-11-27,"vectors are not resizable, but there is a gvector data structure package available <https://docs.racket-lang.org/data/gvector.html>",,
2.75501E+17,Plane#0324,2021-11-27,i think the caveats are that it is not thread-safe and has a hard-coded growth factor of 2,,
2.75501E+17,Plane#0324,2021-11-27,and that it can't be used by something which expects a vector.  so several caveats with that,,
4.66395E+17,oaktownsam#0815,2021-11-27,"If you need to stick with vectors you can make a bigger vector and `vector-copy!` your old vector into the new one.  Or use `build-vector`.

```scheme
(define new-vector (build-vector new-size (lambda (i) (if (< i old-size) (vector-ref old-vector i) #f))))
```",,
2.75501E+17,Plane#0324,2021-11-27,yes i have been doing that rather than using gvectors,,
2.75501E+17,Plane#0324,2021-11-28,i think it is a bit faster using `vector-copy!` but the `build-vector` solution seems more nice and functiony,,
2.75501E+17,Plane#0324,2021-11-28,out of curiosity i tested them both and they were close enough i don't think it would usually matter,,
4.66395E+17,oaktownsam#0815,2021-11-28,I think at the extreme `vector-copy!` probably is probably better.,,
4.66395E+17,oaktownsam#0815,2021-11-28,That's just rough intuition,,
2.75501E+17,Plane#0324,2021-11-28,"yeah i assumed that so i never tried `build-vector`, but after you posted the code i thought i'd try it",,
2.75501E+17,Plane#0324,2021-11-28,i was actually surprised they were pretty close!,,
4.66395E+17,oaktownsam#0815,2021-11-28,"Like `build-vector` another secretly imperative way would be to:
```scheme
(for/vector #:length new-size ([v (in-vector old-vector)]) v)
```
(ed. corrected keyword)",,
2.75501E+17,Plane#0324,2021-11-28,ooh,,
2.75501E+17,Plane#0324,2021-11-28,that's fancy,,
2.75501E+17,Plane#0324,2021-11-28,i can learn a lot in this chat :D,,
2.75501E+17,Plane#0324,2021-11-28,"it's fun because i know all the tools involved, but i just don't think to use them in the same ways",,
1.55457E+17,Rubix#7306,2021-11-28,What value is placed in the new slots with this method of extension?,,
4.66395E+17,oaktownsam#0815,2021-11-28,The `for/vector` one is probably a little faster than the `build-vector` because it will use `unsafe-vector-ref`.,,
2.75501E+17,Plane#0324,2021-11-28,`0`,,
4.66395E+17,oaktownsam#0815,2021-11-28,It defaults to 0 but you can specify a `#:fill` value,,
4.66395E+17,oaktownsam#0815,2021-11-28,Oh also faster because it doesn't traverse the whole new vector,,
2.75501E+17,Plane#0324,2021-11-28,it's faster than making a new vector and using `vector-copy!`,,
2.75501E+17,Plane#0324,2021-11-28,"that was actually something which felt like a gap in the standard library to me.  it felt like there should be a function that makes a new vector, with an old vector as its first old-vector-size elements",,
2.75501E+17,Plane#0324,2021-11-28,"but i can replace my `make-vector` + `vector-copy!` code now, so i don't have to create a bunch of `#f`s and mutate them",,
2.75501E+17,Plane#0324,2021-11-28,feels a lot cleaner!,,
1.55457E+17,Rubix#7306,2021-11-28,"Alright, I have a question on a new topic. I'd like a tutorial on how the Racket macro system works. Does anyone know of a good tutorial I might use for this? I'm coming from Haskell and I already understand most of base Racket.",,
2.75501E+17,Plane#0324,2021-11-28,"the tutorial i found most helpful was Greg Hendershott's *Fear of Macros*:
<https://www.greghendershott.com/fear-of-macros/index.html>",,
2.75501E+17,Plane#0324,2021-11-28,"the thing that was tricky for me coming into Racket is that it has multiple macro systems.  the newest and nicest system is `syntax-parse`, and you will also run into `syntax-rules` and `syntax-case`",,
2.75501E+17,Plane#0324,2021-11-28,racket's been around a while and newer things have been developed over time,,
2.75501E+17,Plane#0324,2021-11-28,so at first i found that a bit confusing.  but `syntax-parse` is nice,,
1.55457E+17,Rubix#7306,2021-11-28,Are `syntax-rules` and `syntax-case` different from `syntax-parse`???,,
2.75501E+17,Plane#0324,2021-11-28,this tutorial sort of starts with the other stuff and works its way up,,
2.75501E+17,Plane#0324,2021-11-28,"yes, if you just want to write macros i think `syntax-parse` is the best choice",,
2.75501E+17,Plane#0324,2021-11-28,"it is kind of like `syntax-case`, but with types",,
1.55457E+17,Rubix#7306,2021-11-28,At some point I'm gonna want to learn how to write a new `#lang`. But first I just wanna learn the macro system.,,
2.75501E+17,Plane#0324,2021-11-28,matthew butterick wrote a book approaching racket from the point of view of someone who 1) has never used racket and 2) wants to write a `#lang` https://beautifulracket.com/,,plusone (1)
1.55457E+17,Rubix#7306,2021-11-28,I might look into that later.,,
2.75501E+17,Plane#0324,2021-11-28,i think it's an excellent book although i personally tried to take a little bit of a different approach to learning the `#lang` stuff,,
3.5323E+17,Alex Knauth#4895,2021-11-28,"I think the Syntax Parse introduction, tutorials, and examples are a better place to start",,
3.5323E+17,Alex Knauth#4895,2021-11-28,Fear of Macros is great,,
3.5323E+17,Alex Knauth#4895,2021-11-28,and may be important for understanding what's going on,,
2.75501E+17,Plane#0324,2021-11-28,one thing i really did like from the book is `#lang brag` (of course using this does not require reading the book) https://docs.racket-lang.org/brag/,,
3.5323E+17,Alex Knauth#4895,2021-11-28,but Syntax Parse really is amazing,,
2.75501E+17,Plane#0324,2021-11-28,"i felt like Fear of Macros was really good for me because it helped me get from the point of ""i am typing magic incantations, i hope they cast the right spell"" to ""hey i kinda know what i'm doing! whee""",,"plusone (1),üòÄ (1)"
3.5323E+17,Alex Knauth#4895,2021-11-28,"Maybe read the first 3 parts of Fear of Macros, but in part 4 when it gets to Syntax Case, just know that Syntax Parse is better",,plusone (1)
2.75501E+17,Plane#0324,2021-11-28,"the introduction sorta starts out by saying ""here's syntax-parse.  look at the ways it is better than `define-syntax-rule`!""  so, as a brand new person who didn't know anything about racket macros, i got a little lost there",,
2.75501E+17,Plane#0324,2021-11-28,i feel like it's good to just have a general awareness of the other stuff so you have some context to read the docs on `syntax-parse`,,
4.66395E+17,oaktownsam#0815,2021-11-28,"I think this is a nit, but I like to think there is one macro system (relatively recently rewritten) and several matching systems (`syntax-rules`, `syntax-case`, and `syntax-parse`) that sit on top of it",,
2.75501E+17,Plane#0324,2021-11-28,"oh, so the ""one macro system"" is stuff like `syntax-e`",,
1.55457E+17,Rubix#7306,2021-11-28,All I know about macros in a LISP like programming language is that Common Lisp uses `defmacro`.,,
2.75501E+17,Plane#0324,2021-11-28,did you learn any CL?,,
1.55457E+17,Rubix#7306,2021-11-28,No. I know nothing in CL except for the tiny little bit I just stated. I have no idea how CL's `defmacro` works. I only know that it exists.,,
4.66395E+17,oaktownsam#0815,2021-11-28,Kinda.  Primitives like that and the expander itself.  One thing is that the matchers are not (that much) magic and we could implement a different matcher/transformer without messing with the guts of Racket.,,
1.55457E+17,Rubix#7306,2021-11-28,"So, is *Fear Of Macros* a good starting resource for me?",,
3.5323E+17,Alex Knauth#4895,2021-11-28,"Yeah, especially the first 3 parts of it are a good foundation",,
2.75501E+17,Plane#0324,2021-11-28,i felt like the author's style made it easy for me to learn from.  i liked it.  (i've been using racket for over a year now but i'm much newer to racket than many of the people here!  so this is from the perspective of someone who only learned to use racket macros maybe half a year ago),,
1.55457E+17,Rubix#7306,2021-11-28,Basically what I know about macros is that you can loosely think of macros as a function which is run at compile time and take an AST as input and returns another AST as output.,,
1.55457E+17,Rubix#7306,2021-11-28,"Look, I'm the new girl around here. I only wrote my first line of Racket today.",,
1.55457E+17,Rubix#7306,2021-11-28,"So, *Fear of Macros* is a good thing me to learn from, right?",,
4.66395E+17,oaktownsam#0815,2021-11-28,Yes.  Another good one (with exercises) is https://rmculpepper.github.io/malr/,,
7.18552E+17,jatta#5605,2021-11-28,@Rubix you mentioned a sibling who wanted to learn programming. I've heard good things about https://scratch.mit.edu/ . Have yall looked into that?,,
1.55457E+17,Rubix#7306,2021-11-28,"Yeah, it was my 8 year old sister who wants to become a programmer.",,
1.55457E+17,Rubix#7306,2021-11-28,"I haven't looked into Scratch, but I should",,
7.18552E+17,jatta#5605,2021-11-28,I haven't tried it myself but I'd be curious to hear what it's like for an 8-year-old or her teacher,,
4.66395E+17,oaktownsam#0815,2021-11-28,"I'm a fan of Scratch and other ""piece"" based programming.  It allows the user to not have to memorize the syntax of a bunch of forms.",,
4.62028E+17,StephenD#5938,2021-11-28,https://snap.berkeley.edu/,,"üëç (1),plusone (1)"
4.62028E+17,StephenD#5938,2021-11-28,Continuations for Children,,
4.62028E+17,StephenD#5938,2021-11-28,https://snap.berkeley.edu/about,,
3.5323E+17,Alex Knauth#4895,2021-11-28,`chaperone-of?` on mutable pairs?,,
3.5323E+17,Alex Knauth#4895,2021-11-28,"> `(chaperone-of? v1 v2)`
> For values that include no chaperones or other impersonators, `v1` and `v2` can be considered chaperones of each other if they are `equal?`, except that corresponding mutable vectors, boxes, strings, byte strings, and mutable structures within `v1` and `v2` must be `eq?`.

I would have expected the ""mutable structures"" bit to include `mpair`s",,
3.5323E+17,Alex Knauth#4895,2021-11-28,But `(chaperone-of? (mcons 1 2) (mcons 1 2))` produces true,,
3.5323E+17,Alex Knauth#4895,2021-11-28,I don't know of any chaperone contracts that use mutable pairs,,
3.5323E+17,Alex Knauth#4895,2021-11-28,But if they do and they allow this that seems very wrong to be,,
3.5323E+17,Alex Knauth#4895,2021-11-28,"I wanted to define an `equal-always?` that behaved such that
```
(equal-always? a b) <=> (‚àÉ v, (chaperone-of? a v) && (chaperone-of? b v))
```
but I also wanted `equal-always?` on two different mutable pair references that happen-to-be-equal-now, to return false... I just expected that `chaperone-of?` already behaved the way I wanted here",,
6.88091E+17,mflatt#6350,2021-11-28,"I agree that mpairs should be in the list with mutable vectors, etc.  CS `chapeone-of?` is the wrong one, and BC does the right thing. I'll push a repair.",,"üçâ (1),racketflat (2)"
7.18552E+17,jatta#5605,2021-11-28,"Oh that's cool: `Snap!` is ""Scheme Disguised as Scratch""",,
7.18552E+17,jatta#5605,2021-11-28,I wonder if it's still easy to learn,,
2.34164E+17,python#3213,2021-11-28,yo this looks awesome!,,
2.34164E+17,python#3213,2021-11-28,about to relive my childhood programming experience real quick,,
2.34164E+17,python#3213,2021-11-28,once i remember how scratch works üòÖ,,
1.55457E+17,Rubix#7306,2021-11-28,What does `...` mean in macros?,,
3.38034E+17,sorawee#6299,2021-11-28,"It doesn't have a meaning by itself. But under macros that have ""patterns"", `...` usually means ""match zero or more"".",,
1.55457E+17,Rubix#7306,2021-11-28,I see.,,
3.38034E+17,sorawee#6299,2021-11-28,"it can also be used in a ""template"", to mean, ""construct this thing multiple times""",,
2.75501E+17,Plane#0324,2021-11-28,"there is also `...+` (""match one or more"") in `syntax/parse`",,
2.14881E+17,Moinate#6061,2021-11-28,"It is, as long as you don‚Äôt want to do advanced stuff. Advanced stuff is difficult more or less by definition. The ‚Äúmanual‚Äù is over the top pretty fast (I think it shows how to define an OO system based on closures), but at some point maybe it‚Äôs cool to see some absurdly high level programming.",,racket (2)
1.55457E+17,Rubix#7306,2021-11-28,"What's up with parameters? How do they work? I'm looking at the racket code for the Intcode interpreter (simple esolang created for Advent Of Code 2019, see the specs here: https://esolangs.org/wiki/Intcode), and I'm not able to understand how the parameters are used, or what they do.",,
2.75501E+17,Plane#0324,2021-11-29,the racket guide has a good introduction https://docs.racket-lang.org/guide/parameterize.html,,
2.75501E+17,Plane#0324,2021-11-29,they are essentially a way to do dynamic scoping rather than lexical,,
2.75501E+17,Plane#0324,2021-11-29,you can compare it to haskell's `Reader` monad,,
2.75501E+17,Plane#0324,2021-11-29,it's probably easiest to understand just by reading some examples to see how it's used,,
2.75501E+17,Plane#0324,2021-11-29,so hopefully the guide's examples are easier to learn from than the intcode interpreter's,,
1.55457E+17,Rubix#7306,2021-11-29,Oh? It is? Interesting.,,
1.55457E+17,Rubix#7306,2021-11-29,"Alright, after having read the docs, I can see the relationship between this and the `Reader` monad.",,
1.55457E+17,Rubix#7306,2021-11-29,Are streams in Racket lazy by default?,,
1.55457E+17,Rubix#7306,2021-11-29,"Also, is there a way to take two or more streams and combine them into a new stream using a given function f?",,
2.75501E+17,Plane#0324,2021-11-29,`for/stream` would be the most ergonomic way,,
1.55457E+17,Rubix#7306,2021-11-29,Oh? There's no way to do this?,,
2.75501E+17,Plane#0324,2021-11-29,"```
(for/stream ([x some-stream]
             [y another-stream])
  (f x y))
```",,
2.75501E+17,Plane#0324,2021-11-29,you want to lazily combine them?,,
1.55457E+17,Rubix#7306,2021-11-29,Will that work even if one of the given streams is infinite? Will I still be able to pull values off the returned stream?,,
2.75501E+17,Plane#0324,2021-11-29,"```scheme
(define (f x y)
  (begin
    (displayln (~a ""Side effect! x="" x "" y="" y))
    (* x y)))

(define s
  (for/stream ([x (in-naturals)]        ; infinite stream
               [y (in-list '(4 5 6))])
    (f x y)))

```
at the repl:
```scheme
> (stream-first s)
Side effect! x=0 y=4
0
> (stream-first (stream-rest s))
Side effect! x=1 y=5
5
```",,
1.55457E+17,Rubix#7306,2021-11-29,"Now, I'm wondering if I could write a function/macro called `stream-combine` that would take a function `f` and any number of streams and make a `for/stream` loop like above, but with `f` taking the next element from all of the streams.",,
2.75501E+17,Plane#0324,2021-11-29,it will work fine even if all the streams are infinite,,
1.55457E+17,Rubix#7306,2021-11-29,"Basically I want to generalize this to taking any number of input streams by binding more identifiers in the `for/stream` loop, and passing them into `f`.",,
2.75501E+17,Plane#0324,2021-11-29,"but if there is a finite stream as input, the output stream will end as the shortest input stream ends",,
1.55457E+17,Rubix#7306,2021-11-29,That's exactly what I expect to have happen.,,
2.75501E+17,Plane#0324,2021-11-29,`stream`s and the `for` forms are designed to go together in racket,,
1.55457E+17,Rubix#7306,2021-11-29,Nice.,,
1.55457E+17,Rubix#7306,2021-11-29,"Now, how would you make this `stream-combine` function/macro thing?",,
2.75501E+17,Plane#0324,2021-11-29,have you used `syntax/parse` yet?,,
2.75501E+17,Plane#0324,2021-11-29,"you want to write a macro that produces a `for/stream` that takes any number of streams as input, and a variadic function to call on them?",,
3.38034E+17,sorawee#6299,2021-11-29,See https://stackoverflow.com/questions/59232050/varadic-zip-in-racket/59232230#59232230,,
2.75501E+17,Plane#0324,2021-11-29,do i understand correctly?,,
1.55457E+17,Rubix#7306,2021-11-29,Yes. This is what I want.,,
1.55457E+17,Rubix#7306,2021-11-29,"And yeah, I have used `syntax/parse` before.",,
1.55457E+17,Rubix#7306,2021-11-29,"```
(for/stream ([x some-stream]
             [y another-stream])
  (f x y))


(for/stream ([x some-stream]
             [y another-stream]
             [z yet-another-stream])
  (f x y z))


(for/stream ([x some-stream]
             [y another-stream]
             [z yet-another-stream]
             [w another-different-stream)])
  (f x y z w))```I want a way to generalize this pattern to any number of streams and a variadic function.",,
1.55457E+17,Rubix#7306,2021-11-29,"I'm not sure if this can be done as a function, so having it be a macro is fine.",,
4.66395E+17,oaktownsam#0815,2021-11-29,I think you can do it as a function but without `for/stream`,,
1.55457E+17,Rubix#7306,2021-11-29,I don't need to use `for/stream` here. I just need something that gives the same results.,,
4.66395E+17,oaktownsam#0815,2021-11-29,Unfortunately `stream-map` only takes a single stream,,
1.55457E+17,Rubix#7306,2021-11-29,Basically I'm looking for `(define (stream-combine f . streams) ...body-here...)`,,
3.38034E+17,sorawee#6299,2021-11-29,"```
(define (stream-combine f . streams)
  (for/stream ([args (apply my-zip streams)])
    (apply f args)))

(stream->list (stream-combine list
                              '(4 5 6)
                              (in-naturals)
                              '(7 8 9 10)))

;; outputs '((4 0 7) (5 1 8) (6 2 9))
```

where `my-zip` is given in the StackOverflow post.",,
4.66395E+17,oaktownsam#0815,2021-11-29,"Something like (untested)
```scheme
(define (stream-combine f ss)
  (cond
    [(any-empty? ss) empty-stream]
    [else 
      (stream-cons (apply f (map stream-first ss))
                   (stream-combine f (map stream-rest ss)))]))
```",,
1.55457E+17,Rubix#7306,2021-11-29,"Yeah, that looks good.",,
2.75501E+17,Plane#0324,2021-11-29,"i wrote a macro to do it, although i'm not sure if there is an advantage to doing it as a macro",,
1.55457E+17,Rubix#7306,2021-11-29,"I don't need it as a macro, but I'm curious to see what you came up with.",,
2.75501E+17,Plane#0324,2021-11-29,maybe doing it as a macro allows the `in-list` etc forms to be used directly in the `for` form so that it can be more efficient?  i don't know if that applies,,
2.75501E+17,Plane#0324,2021-11-29,"i wrote
```scheme
(define-syntax-parser combine-streams
  #:track-literals
  [(_ (stream:expr ...+) func:id)
   #:with (value ...) (generate-temporaries #'(stream ...))
   #'(for/stream ([value stream] ...)
       (func value ...))])
```",,
1.55457E+17,Rubix#7306,2021-11-29,What does `#:track-literals` do?,,
2.75501E+17,Plane#0324,2021-11-29,"that is actually a really good question.  lol.  i don't know if it actually does anything in this example, but i've had it as a habit to always include in my syntax/parse macros",,
2.75501E+17,Plane#0324,2021-11-29,"because (without answering your question yet), my understanding is, it's considered a nice little thing that unfortunately could not be made default behavior without breaking some backwards compatibility",,
2.75501E+17,Plane#0324,2021-11-29,so i included it in this macro without thinking about it,,
1.55457E+17,Rubix#7306,2021-11-29,How do the `...` and `...+` things work?,,
3.38034E+17,sorawee#6299,2021-11-29,"`#:track-literals` makes disappearing literals still be able to draw arrows correctly in the Check Syntax protocol

For example, consider:

```
(require syntax/parse/define)

(define-syntax-parser my-cond
  [(_ [q a] ... [{~literal else} ae])
   #'(cond
       [q a] ...
       [else ae])])

(my-cond
 [#t 1]
 [else 2])
```

If you hover over `else` in DrRacket, there won't be an arrow saying where `else` comes from. But with `#:track-literals`, there will be an arrow",,
2.75501E+17,Plane#0324,2021-11-29,"they are analogous to kleene star and kleene plus:
`...` is ""zero or more of the previous thing"" and 
`...+` is ""one or more of the previous thing""",,
1.55457E+17,Rubix#7306,2021-11-29,How does Racket know how to correctly plug in the correct values into correct spots?,,
2.75501E+17,Plane#0324,2021-11-29,thank you!  that is very helpful.  i had forgotten exactly what it did and i included it without thinking about it,,
3.38034E+17,sorawee#6299,2021-11-29,nvm lol,,
4.66395E+17,oaktownsam#0815,2021-11-29,I cheated and didn't want to use `apply` more than once.,,
1.55457E+17,Rubix#7306,2021-11-29,Is `apply` bad?,,
4.66395E+17,oaktownsam#0815,2021-11-29,"Nah, I just don't like to use it a lot",,
2.75501E+17,Plane#0324,2021-11-29,"the `...`s have to match up, if that is what you mean",,
2.75501E+17,Plane#0324,2021-11-29,"if you were asking for more information about how it works under the hood, i don't know.  lol.  but the source code is available",,
1.55457E+17,Rubix#7306,2021-11-29,I see.,,
1.55457E+17,Rubix#7306,2021-11-29,"Basically, in the template, you are using `...` in a number of places. You have `value ...` and `stream ...` for a start. Then you have `[value stream] ...` a bit later. How does Racket know that each binding instance in the `for/stream` should be one thing from the value bit and one thing from the stream bit?",,
2.75501E+17,Plane#0324,2021-11-29,"but for example in this macro (perhaps not the world's best macro) it matches:
```scheme
(_ (stream:expr ...+) func:id)
```
- the name of the macro is matched by `_` (it is not used)
- then it matches one or more expressions and places them in `stream ...`
- last it matches an identifier and places it in `func`

then this part
```scheme
#:with (value ...) (generate-temporaries #'(stream ...))
```
creates temporaries named `value ...`, with one `value` for each `stream` in the input it matched earlier

then it outputs:
```scheme
#'(for/stream ([value stream] ...)
    (func value ...))
```
the first `...` matches up with the `stream ...` and `value ...` both, and 
the second `...` matches up with the `value ...`",,
1.55457E+17,Rubix#7306,2021-11-29,"So, in other words, it's basically magic. Got it.",,
2.75501E+17,Plane#0324,2021-11-29,oh,,
2.75501E+17,Plane#0324,2021-11-29,to me it is,,
2.75501E+17,Plane#0324,2021-11-29,lol,,
2.75501E+17,Plane#0324,2021-11-29,but!!  you can definitely learn how it works internally by looking at the source,,
2.75501E+17,Plane#0324,2021-11-29,another tool you can use is DrRacket's macro stepper  (even if you aren't using DrRacket normally) to see what its behavior is step-by-step,,
2.75501E+17,Plane#0324,2021-11-29,"i learned enough about macros to write the macros i wanted, but i'm certainly not an expert",,
1.55457E+17,Rubix#7306,2021-11-29,What does the `#:with` bit of `define-syntax-parser` do?,,
2.75501E+17,Plane#0324,2021-11-29,ah i needed that because of `generate-temporaries`,,
2.75501E+17,Plane#0324,2021-11-29,are you still working through Fear of Macros?,,
1.55457E+17,Rubix#7306,2021-11-29,Yes.,,
1.55457E+17,Rubix#7306,2021-11-29,"So, `generate-temporaries` is sorta like `gensym` from CL, right?",,
2.64024E+17,Eutro#0016,2021-11-29,well there's also actual `gensym` in Racket,,
1.55457E+17,Rubix#7306,2021-11-29,"So, why would you want to use `generate-temporaries`?",,
3.5323E+17,Alex Knauth#4895,2021-11-29,"Sometimes the randomness in `gensym` makes some things in macros harder, and `generate-temporaries` makes for more predictable, deterministic compilation, I think",,
1.55457E+17,Rubix#7306,2021-11-29,Thank you Alex.,,
2.75501E+17,Plane#0324,2021-11-29,"i see, you meant ""why would you use it rather than `gensym`""",,
3.5323E+17,Alex Knauth#4895,2021-11-29,Also it's just convenient to use something that produces an identifier instead of a symbol,,
1.55457E+17,Rubix#7306,2021-11-29,"I'm still a new racket gal, so all of this is new to me. Haskell doesn't really have meta-programming in this way.",,
3.5323E+17,Alex Knauth#4895,2021-11-29,"The identifier that `generate-temporary` produces has a fresh ""scope"" on it that makes it distinct from other identifiers even if they happen to have the same ""name""",,
2.75501E+17,Plane#0324,2021-11-29,"there is a really good talk called ""Bindings as Sets of Scopes"" by the way.  you can watch it online.  i think you might find it helpful while you're learning about racket's macros",,
2.75501E+17,Plane#0324,2021-11-29,(maybe later?  not sure when to recommend watching it),,
2.75501E+17,Plane#0324,2021-11-29,i've found that some of the best documents teaching about racket are actually some of the talks that are online,,
2.75501E+17,Plane#0324,2021-11-29,i think there was also a really good talk about the module system which really helped me understand the design of it,,
1.55457E+17,Rubix#7306,2021-11-29,"Also, what does `#'` do? Why do some macros need it and others don't? The following doesn't need it, and I'm not sure why. ```(define-syntax-rule (assert expr)
  (unless expr
    (error 'assert ""Assertion failed: ~s"" (quote expr))))```",,
1.93202E+17,rocketnia#4517,2021-11-29,"The way `...` matches up is that each pattern variable (bound by a `syntax-case` or `syntax-parse` pattern, and used in a `syntax` template) is actually bound to compile-time information, like a local macro. I believe this information says what variable to find its actual run time value in, but it also says what the ellipsis depth is for that pattern variable. In a `syntax` template, pattern variables that appear need to appear under the same number of `...`. Other variables (not bound to pattern variable information) just get repeated, but pattern variables get their matches iterated over.",,
1.93202E+17,rocketnia#4517,2021-11-29,`define-syntax-rule` basically expands into a `syntax-case` pattern and a `syntax` template,,
1.93202E+17,rocketnia#4517,2021-11-29,`#'foo` is shorthand for `(syntax foo)`,,
1.55457E+17,Rubix#7306,2021-11-29,"So, what determines when a quote `'` is needed?",,
1.93202E+17,rocketnia#4517,2021-11-29,hmm?,,
1.55457E+17,Rubix#7306,2021-11-29,I feel like it's gonna take me a long while to remember which forms need quoted data and which don't.,,
4.66395E+17,oaktownsam#0815,2021-11-29,Generally if you are running some code at expand time you need to use the quote.  If it's just pattern variables in a template you don't.,,
1.93202E+17,rocketnia#4517,2021-11-29,"I believe `syntax-rules` is the standard R5RS macro system... it's not terribly expressive because it doesn't allow the use of regular Scheme procedures, so `syntax-case` and `syntax` are a slightly more verbose system that lets you insert arbitrary code in between doing the match and generating the result",,
1.93202E+17,rocketnia#4517,2021-11-29,`define-syntax-rule` is a shorthand for a short `syntax-rules` definition,,
1.55457E+17,Rubix#7306,2021-11-29,Oh. I see. That makes sense.,,
1.55457E+17,Rubix#7306,2021-11-29,"Nia, you are a much cleverer girl than me. Thanks for the advice.",,
1.55457E+17,Rubix#7306,2021-11-29,Can I have a function pattern match on quoted data?,,
1.55457E+17,Rubix#7306,2021-11-29,"```(define-syntax-rule (assert expr)
  (unless expr
    (error 'assert ""Assertion failed: ~s"" (quote expr))))```Here, this macro uses quote twice. Once for assert and once for the expr. Why is quote needed there?",,
1.55457E+17,Rubix#7306,2021-11-29,"Also, can I replace the `(quote expr)` with `'expr`?",,
3.5323E+17,Alex Knauth#4895,2021-11-29,yeah,,
1.93202E+17,rocketnia#4517,2021-11-29,yes,,
3.5323E+17,Alex Knauth#4895,2021-11-29,"`'` quote prevents that expression from being evaluated, or in this case prevents it from being evaluated the second time",,
1.93202E+17,rocketnia#4517,2021-11-29,"the reason is that this is trying to display the source expression in the error message. If it weren't quoted, the expression would evaluate",,
1.55457E+17,Rubix#7306,2021-11-29,What does the `'assert` bit do in that `error` call?,,
3.5323E+17,Alex Knauth#4895,2021-11-29,"if you had `expr` without the quote both times, then it would evaluate `expr` twice: once for the condition, and a second time to determine what value to put in the error message",,
3.5323E+17,Alex Knauth#4895,2021-11-29,of the `'assert` in the error message just puts the text `assert:` in the error message,,
1.93202E+17,rocketnia#4517,2021-11-29,"the error message will show up like

```
assert: Assertion failed: (blah blah)
```",,
1.93202E+17,rocketnia#4517,2021-11-29,it's conventional for that first part to be the name of the operation that's reporting the error,,
1.93202E+17,rocketnia#4517,2021-11-29,"and names of operations are usually symbols, not arbitrary strings, so the input `error` takes for that is usually(?) a symbol",,
1.55457E+17,Rubix#7306,2021-11-29,"```macro.rkt> (assert (equal? 5 (length '(a b c))))
; assert: Assertion failed: (equal? 5 (length (quote (a b c))))``` I assume this is only able to print out the source code directly because I have quoted the expr in the macro.",,üçâ (1)
1.55457E+17,Rubix#7306,2021-11-29,"Is there a guide to Racket format strings and things like ""~s"" that I can read up on?",,
3.5323E+17,Alex Knauth#4895,2021-11-29,The documentation for what `~s` does is in `fprintf` I think,,
1.55457E+17,Rubix#7306,2021-11-29,What does the watermelon reaction mean?,,
1.93202E+17,rocketnia#4517,2021-11-29,I wonder as well :),,
1.55457E+17,Rubix#7306,2021-11-29,@Alex Knauth Care to explain?,,
3.5323E+17,Alex Knauth#4895,2021-11-29,I like watermelon,,üçâ (7)
1.55457E+17,Rubix#7306,2021-11-29,Ah. I see.,,
2.75501E+17,Plane#0324,2021-11-29,"hey, me too!",,
3.5323E+17,Alex Knauth#4895,2021-11-29,And the watermelon emoji kinda looks like a smile,,
3.5323E+17,Alex Knauth#4895,2021-11-29,"I like it better than the normally ""like"" and ""smile"" emojis",,
1.55457E+17,Rubix#7306,2021-11-29,I love that.,,
3.5323E+17,Alex Knauth#4895,2021-11-29,Anyway `~s` corresponds to `write`,,
3.5323E+17,Alex Knauth#4895,2021-11-29,More information on what `write` means at https://docs.racket-lang.org/reference/printing.html,,
1.55457E+17,Rubix#7306,2021-11-29,And I assume that just prints out exactly the thing I've passed into?,,
2.75501E+17,Plane#0324,2021-11-29,i would also link to https://docs.racket-lang.org/guide/read-write.html,,üçâ (1)
7.14999E+17,gingerydoo#7461,2021-11-29,"For literals, yes, in the sense that the formatted string can be `read` into the same value. Some structure types, particularly ones that hide their internals, print with an un`read`able `#<>` form.",,
7.14999E+17,gingerydoo#7461,2021-11-29,The `#:prefab` structure type modifier promotes the type to one the reader can understand.,,
2.14881E+17,Moinate#6061,2021-11-29,"I stopped using the abbreviations like `define-syntax-rule` ... I prefer the ""basic"" `define-syntax` plus `syntax-parse`... I prefer consistency over abbreviations. (Even though admittedly the abbreviation is ""shorter"" and ""reduces boilerplate"".) So I always need to add `#'` but I don't wonder about it.",,
3.5323E+17,Alex Knauth#4895,2021-11-29,I mean I'd rather use `define-syntax-parse-rule` or `define-syntax-parser`,,
3.38034E+17,sorawee#6299,2021-11-29,"Yeah, I really want another version of `define-syntax-parse-rule` that doesn't automatically `syntax`",,
3.38034E+17,sorawee#6299,2021-11-29,"Frequently I only need one arm, so `define-syntax-parser` is kinda overkill. But I want to use stuff like `syntax/loc`, so `define-syntax-parse-rule` is not that appropriate either",,
3.38034E+17,sorawee#6299,2021-11-29,"I can always do 

```
(define-syntax-parse-rule (...)
  #:with out (syntax/loc ... ...)
  out)
```

But it can be simpler than that üôÇ",,
2.14881E+17,Moinate#6061,2021-11-29,"Any opinion on the (non-)desirability of a `beginner-=` function for BSL that throws an error when given only one argument (like beginner multiplication)? 
Inspired by `(= 0)` returning true (forgotten variable)",,
3.38034E+17,sorawee#6299,2021-11-29,"Yeah, I think that's not intended. The doc seems to indicate that there should be at least two args",,
8.14743E+16,jimpjorps#0001,2021-11-29,"I think it's a good idea, I can't really think of a typical beginner use case where you'd want `(= x)` for anything",,
2.14881E+17,Moinate#6061,2021-11-29,Yeah if they aren‚Äôt `apply`-ing it doesn‚Äôt seem like it should come up.,,
5.24323E+17,Ben Kenobi#5683,2021-11-29,"I have a half-baked idea of ""define transformers"" so that all those things are `(define #:some-keyword ‚Ä¶)` üôÇ",,
7.14999E+17,gingerydoo#7461,2021-11-29,"I never heard the term ""arm"" before. Is that referring to an internal definition context following some clause,  or is it more general than that?",,
4.66395E+17,oaktownsam#0815,2021-11-29,General.  `(if <test> <true-arm> <false-arm>)`,,üëç (1)
4.66395E+17,oaktownsam#0815,2021-11-29,`cond` and the syntax ones are more like octopi though.,,
4.66395E+17,oaktownsam#0815,2021-11-29,"`when` and `unless` are shorthand/abbreviations for ""one-armed if""",,
7.14999E+17,gingerydoo#7461,2021-11-29,"I see. One more thing confuses me about the rough translations in my head.

```
(when test ...) ==> (if test ((lambda () ...)) (void))
(define-syntax-rule (id ...) ...) => (define-syntax id (syntax-rules ...))
```

I was confused because the arms expand differently, and I wasn't sure if that was important to the definition of ""arm.""",,
7.14999E+17,gingerydoo#7461,2021-11-29,"It seems like ""arm"" just means ""the stuff I don't abbreviate for you here.""",,
1.55457E+17,Rubix#7306,2021-11-29,"Is it possible to make my own numeric data structure and override + and *, and whatever else is needed, for instances of that structure?",,
4.66395E+17,oaktownsam#0815,2021-11-29,"The easy way is to define your new operators in a module `operators.rkt` and then `provide` your new operators renamed:
```
#lang racket/base

(provide (rename-out [my-plus +]
                     [my-subt -])))

;; define my-plus and my-subt
;; ...
```

And then any module that `(require ""operator.rkt"")` will use your `+` and `-`",,
1.55457E+17,Rubix#7306,2021-11-29,Yeah... That's a little awkward. I want to be able to use `+` for integers and `+` for my custom data-type in the same module.,,
4.66395E+17,oaktownsam#0815,2021-11-29,If you define `my-plus` over numbers and your custom type it should work.,,
1.55457E+17,Rubix#7306,2021-11-29,Hmm. I think I'll just use something like `my-add`,,
4.66395E+17,oaktownsam#0815,2021-11-29,"```scheme
;; use first parameter for dispatch
(define (my-add v . vs)
  (cond
    [(number? v) (apply + v vs)]
    [(my-type? v) (apply do-my-type-add v vs)]
    [else (error 'my-add ""oops: ~v"" v)]))
```",,
1.93202E+17,rocketnia#4517,2021-11-29,"A more seamless way to do operations that dispatch at run time in Racket is to use generic interfaces (`define-generics`). But the built-in `+` and `*` don't do that kind of user-extensible dispatch, so it would still be at least as much work as what SamPh described.",,plusone (1)
1.93202E+17,rocketnia#4517,2021-11-29,(to define new operators that do that dispatch),,
4.66395E+17,oaktownsam#0815,2021-11-29,"Yeah a generic interface can provide a lot of the scaffolding and is more of a ""type oriented"" system, and the example I provided is more ""operation oriented""",,
7.14999E+17,gingerydoo#7461,2021-11-30,"To add: Racket generics aren't the kind of generics you'd see in strongly typed languages, where a type is used as a static argument for compile-time code generation. Racket generics are more of a dispatching mechanism that reacts to instances of structure types.

On that note, there's nothing stopping you from binding a generic method to a `+` that forwards operands to appropriate implementations. You just have to be careful not to shadow Racket's own `+` where it matters.",,
4.66395E+17,oaktownsam#0815,2021-11-30,"Yes, Racket generic methods are like https://en.wikipedia.org/wiki/Generic_function",,plusone (1)
5.21715E+17,Magister Ludi#5611,2021-11-30,"The brag package has a function defined like this in the docs: 
`(parse-to-datum [source] token-source)`
but I thought that optional function args had to be at the end of the arglist. How do I define an equivalent function so I can replace this one?",,
6.46114E+17,samth#3420,2021-11-30,"Here's how I would write an equivalent function:
```
(define parse-to-datum
  (case-lambda
    [(token-source) (parse-to-datum #f token-source)]
    [(source token-source) (do-something-with source token-source)]))
```",,
5.21715E+17,Magister Ludi#5611,2021-11-30,Thank you. This works.,,
8.14743E+16,jimpjorps#0001,2021-11-30,"that actually answers a question I had before but forgot to ask, neat",,
5.24323E+17,Ben Kenobi#5683,2021-12-01,"Reposting from Slack for eyes: 

Design-level question: I have an API spec from which I can generate racket code (swagger + mustache templates, I think). The API lives on different hosts‚Äîmost of the time, the client specifies that they want a particular host (and the racket package implementing the client requires this) . But some API routes have reasonable defaults (e.g., a random host or all of them in a particular subset). I would like the racket package to, when the host is not specified, if a default is available, use it.

The problem is, I don‚Äôt think mustache templates are powerful enough for this (the mapping of routes to default host types is external to the spec).

How would you solve this? Vote with emoji and/or comment
1. Find a way to include the default metadata in the swagger spec so that code generation can use it. 
2. Wrap the generated code by hand, and maintain it carefully.
3. Fix the API (how?).
4. Something else.",,2Ô∏è‚É£ (1)
4.23133E+17,"Techno Chess, Atomic variation#1325",2021-12-01,aren't mustache templates powerful enough for anything using the lambda feature?,,
5.24323E+17,Ben Kenobi#5683,2021-12-01,"But the incoming data is a YAML document, and (without writing a custom swagger generator), I'm not sure it's possible to put a lambda in the data.",,
4.66395E+17,oaktownsam#0815,2021-12-01,"I said 2, but is there a way you could make the code generate something like:
```scheme
(define (api-call-X #:host [host (default-host-for-api-call-X)] rest ...)
  ...)
```

And then have `default-host-from-api-call-X` be a parameter or function you manage manually in a separate module.",,
4.66395E+17,oaktownsam#0815,2021-12-01,If it is nonsensical for a particular api call to have a default the function could signal an error.,,
5.24323E+17,Ben Kenobi#5683,2021-12-01,"Hm, that is a potential option, but I'm actually managing the hosts dynamically at the moment, so I don't want it to be a parameter in the function. But your idea to a magic function call is intriguing",,
4.66395E+17,oaktownsam#0815,2021-12-01,parameters and functions have the same access so it's easy to switch between üôÇ,,
5.24323E+17,Ben Kenobi#5683,2021-12-01,"Sorry, to clarify: the host is `parameter?`, so I don't it want to show up as an argument in the function call üôÇ a little overloaded terminology there.",,
4.72311E+17,Sundewman#8349,2021-12-02,"I have simple scheme question that I can't seem to properly write
At The New Spicy Chicken shack, you can buy chicken nuggets in portions of 4 pieces or 13 pieces. Write a Scheme function isPossibleToBuy that takes an integer n and returns true if it is possible to buy n pieces, or false otherwise
Im trying to do this recursively",,
4.62028E+17,StephenD#5938,2021-12-02,"Hi 

Can you show us your code? If we can see what you have already done we can help spot issues.

It would also be helpful if you could tell us 
- What exactly are you struggling with?
- What approaches have you tried to solve it?
- Which scheme are you using? Or is it one of the student/teaching languages in DrRacket?",,
4.72311E+17,Sundewman#8349,2021-12-02,So it is a self made scheme interpreter where I essentially coded it in Java to be able to use Scheme,,
4.72311E+17,Sundewman#8349,2021-12-02,and it basically has everything and yes one sec let me get my rough code idea,,
4.72311E+17,Sundewman#8349,2021-12-02,"```
(define isPossibleToBuy
  (lambda (n)
    (if(or(= n 4)(= n 13))
     #t
    (isPossibleToBuy (- n 4))))
```",,
4.72311E+17,Sundewman#8349,2021-12-02,my rough code,,
4.72311E+17,Sundewman#8349,2021-12-02,obviously doesnt work for a few good reason but my approach was essentially subtract all 4's and all 13's until it either equals 4 or 13 but I can't figure out how to do those operations separately,,
4.72311E+17,Sundewman#8349,2021-12-02,my scheme I wrote in Java has most things,,
4.72311E+17,Sundewman#8349,2021-12-02,"scheme I wrote only has Literals

The only numbers supported are integers, like 42, or 13.
The only other type is a boolean, which is true or false.",,
4.72311E+17,Sundewman#8349,2021-12-02,"```
(define (yes n)
  (if(=(or(modulo n 4)(modulo n 13))0)
   #t
  (if(< n 0)
   #f
  (yes(- n 4)))))
```",,
4.72311E+17,Sundewman#8349,2021-12-02,how could I handwrite modulo?,,
4.72311E+17,Sundewman#8349,2021-12-02,in this?,,
4.72311E+17,Sundewman#8349,2021-12-02,because it works but my interpreter doesn't have modulo,,
2.08605E+17,soegaard#9269,2021-12-02,"```
(define (rem a b)
  (if (> a b)
      (rem (- a b) b)
      a))
```",,
2.08605E+17,soegaard#9269,2021-12-02,The remainder for integer division of a with b.,,
2.08605E+17,soegaard#9269,2021-12-02,You can write modulo by looking at signs and then calling the remainder function.,,
2.08605E+17,soegaard#9269,2021-12-02,I always forget how the signs in modulo works.,,
4.72311E+17,Sundewman#8349,2021-12-02,so how would I implement this within my function I guess,,
4.72311E+17,Sundewman#8349,2021-12-02,because I need to do it all within one function,,
2.75501E+17,Plane#0324,2021-12-02,"i think it could help to talk through how you'd solve the problem, what steps you could do, for example if you wanted to solve the problem by hand, before writing the code",,
2.75501E+17,Plane#0324,2021-12-02,"then once you have an idea of how to solve the problem, you can tackle the problem of translating that method into code",,
4.72311E+17,Sundewman#8349,2021-12-02,The issue now though feels like I know how to solve it like I have the solution and it works but I need to find a way to implement the modulo within this function?,,
2.75501E+17,Plane#0324,2021-12-02,since you're only dealing with postiive quantities remainder and modulo should be equivalent operations for you,,
2.75501E+17,Plane#0324,2021-12-02,no?,,
4.72311E+17,Sundewman#8349,2021-12-02,also don't have remainder in my interpreter,,
4.72311E+17,Sundewman#8349,2021-12-02,lmao,,
4.72311E+17,Sundewman#8349,2021-12-02,it is dumb but you are right,,
2.75501E+17,Plane#0324,2021-12-02,"well, soegaard wrote remainder above",,
4.72311E+17,Sundewman#8349,2021-12-02,I think imma just use remainder and see if I can ave a helper function,,
4.72311E+17,Sundewman#8349,2021-12-02,because idk how to without a helper,,
4.72311E+17,Sundewman#8349,2021-12-02,of some sort,,
4.72311E+17,Sundewman#8349,2021-12-02,"```
(define (yes n)
  (if(=(or(modulo n 4)(modulo n 13))0)
   #t
  (if(< n 0)
   #f
  (yes(- n 4)))))
```",,
4.72311E+17,Sundewman#8349,2021-12-02,nvm I realized this doesn't work,,
4.72311E+17,Sundewman#8349,2021-12-02,got it working,,
4.72311E+17,Sundewman#8349,2021-12-02,thank you,,
2.08605E+17,soegaard#9269,2021-12-02,"I suddenly realized that there this type of question has been analyzed in number theory.
The Frobenius number of 4 and 13 is 35 according to WolframAlpha.
That means that all numbers from 36 and greater can be written as sums of 4 and 13.
Since there is only a finite amount of numbers below 36 it is possible to analyze them one at a time and write the solution as:

    (or (= n 4) (= n 8) (= n 12) (= n 13 ) ...all cases here... (> n 35))",,
2.08605E+17,soegaard#9269,2021-12-02,Probably not the intended solution though.,,
2.14881E+17,Moinate#6061,2021-12-03,"I have mixed feelings about the resources going to Wiki. It's good they are in a more permanent location. I think they lost valuable opinionated commentary - now it's just a wall of links with in most cases very little info in the descriptions. I'm less likely to pursue something like that. 

The most useful addition for me would be an opinionated commentary column where people who have used (or at least looked at!) the source say something about it.",,plusone (4)
7.14999E+17,gingerydoo#7461,2021-12-03,"I agree, although I'd caution against an implementation that adds operational overhead, namely content moderation. Some of the links in #resources were not of direct benefit to Racket programmers, and acted more like ads, or were so subjective as to be #off-topic. I removed one of my own posts from the Wiki for that reason.

And considering we've spent months waiting for the spammer in the mailing lists to stop screaming about something related to Nazis, there appear to be gaps of time where volunteers are unavailable for certain administrative duties. Commentary requires moderation, whereas dumb links can be proofread, approved, and forgotten about. I think it makes sense to repurpose #resources _as the home of the discussions you're talking about_. We can pin, make threads, archive, and the moderation overhead remains equivalent-ish.",,plusone (1)
7.14999E+17,gingerydoo#7461,2021-12-03,"Also: Believe it or not, it took me 6.5 hours to produce that page.",,üëè (1)
7.14999E+17,gingerydoo#7461,2021-12-03,"Transcription of the export data was non-trivial, and it appeared that keeping commentary made it _harder_ to understand the content because you can't easily preserve all the embeds and visuals that Discord adds (Let alone going from a conversational format to a reference format)",,
7.14999E+17,gingerydoo#7461,2021-12-03,I can understand centralizing the discussions along with the links... I just don't see how that happens without asking moderators to look over at GitHub too.,,
1.50946E+17,Nan0Scho1ar#6423,2021-12-04,"Is there somewhere which explains why `round` behaves in such a strange way?
Specifically this:  `Returns the integer closest to x, resolving ties in favor of an even number`
```lisp
(round 2.5) ;; Returns 2.0
(round 3.5) ;; Returns 4.0
```",,
3.38034E+17,sorawee#6299,2021-12-04,It's actually a very common rounding method: https://en.wikipedia.org/wiki/Rounding#Round_half_to_even,,
3.38034E+17,sorawee#6299,2021-12-04,"The point is to eliminate bias, IIUC",,
1.50946E+17,Nan0Scho1ar#6423,2021-12-04,Or at least shift that bias towards even rather than positive,,
2.14881E+17,Moinate#6061,2021-12-04,"This was a very interesting post.... I knew about the behavior but hadn't thought that the conclusion was that rounding was the wrong thing to do in certain situations. Combining trig with image construction could result in a situation where you have two almost-the-same images. Ordinary math class rounding would solve this problem... but racket has ""numerical analysis rounding"" which won't solve the problem.
```scheme
(define s19 (square 19 ""solid"" ""blue""))
(define s18.99 (square 18.99 ""solid"" ""blue""))
(image=? s18.99 s19)
```",,
4.62028E+17,StephenD#5938,2021-12-04,And very much appreciated,,
1.56786E+17,williewillus#8490,2021-12-04,"re wiki, this is semi off topic but has anything other than gh wikis been considered?",,
1.56786E+17,williewillus#8490,2021-12-04,github wiki's interface is positively awful,,
4.62028E+17,StephenD#5938,2021-12-04,Yes it is not the best. The selling point is it is free.,,
2.08605E+17,soegaard#9269,2021-12-04,Also no setup - and users already have logins.,,
8.14743E+16,jimpjorps#0001,2021-12-04,"is github's wiki that bad, it doesn't seem much different than mediawiki",,
8.14743E+16,jimpjorps#0001,2021-12-04,at least on the editing/creation side,,
1.56786E+17,williewillus#8490,2021-12-04,organization on gh wikis is terrible,,
1.56786E+17,williewillus#8490,2021-12-04,"as in, there *is* no organization",,
1.56786E+17,williewillus#8490,2021-12-04,"the sidebar is a long, long, long list of pages, most of which are irrelevant",,
3.38034E+17,sorawee#6299,2021-12-04,"That is about the content though, right? Not about software. So it's fixable",,
8.14743E+16,jimpjorps#0001,2021-12-04,"ah yeah I see what you mean, there's no way to make a hierarchy of pages for that widget",,
4.62028E+17,StephenD#5938,2021-12-04,You can structure the sidebar - but I only learnt about it a couple of weeks ago,,
8.14743E+16,jimpjorps#0001,2021-12-04,"the custom sidebar the racket wiki has is nice, but the auto-generated pages list above it is a mess",,
4.62028E+17,StephenD#5938,2021-12-04,I does have 172 pages,,
4.62028E+17,StephenD#5938,2021-12-04,Needs a prune,,
4.62028E+17,StephenD#5938,2021-12-04,Did anyone here attend the meet-up ?,,
9.03801E+17,pognotfound#1461,2021-12-04,is there racket for Android,,
4.62028E+17,StephenD#5938,2021-12-04,"Termux is one way I believe

https://github.com/racket/racket/wiki/Android",,
9.03801E+17,pognotfound#1461,2021-12-05,are racket lists passed by reference,,
2.64024E+17,Eutro#0016,2021-12-05,"it doesn't matter, you can't mutate them",,
2.64024E+17,Eutro#0016,2021-12-05,"almost all racket values are references, though",,
2.64024E+17,Eutro#0016,2021-12-05,pointers to some memory on the heap,,
2.64024E+17,Eutro#0016,2021-12-05,or occasionally integers masquerading as pointers,,
2.08605E+17,soegaard#9269,2021-12-05,"@pognotfound  The phrase ""passed by"" refers to how functions are passed their arguments. In Racket lists are passed like all other values.
https://lists.racket-lang.org/users/archive/2014-July/063516.html",,
9.03801E+17,pognotfound#1461,2021-12-05,aww,,
2.08605E+17,soegaard#9269,2021-12-05,You can make a list of boxes though.,,
2.64024E+17,Eutro#0016,2021-12-05,or a box of a list üò≥,,
9.03801E+17,pognotfound#1461,2021-12-05,"what's special with boxes
we can mutate them?",,
2.08605E+17,soegaard#9269,2021-12-05,Yes. A box holds one value. And you can mutate the box so it holds another value.,,
5.24323E+17,Ben Kenobi#5683,2021-12-05,"There are also mutable pairs, but i think I‚Äôve only seen them in the wild one",,
5.24323E+17,Ben Kenobi#5683,2021-12-05,Otoh vectors are very biased towards mutability,,
3.5323E+17,Alex Knauth#4895,2021-12-06,"I'm curious, in what situations does ""double hashing"", using `equal-secondary-hash-code` or `hash2-proc`, need to be used?

Why does `equal?`-based hashing have 2 hashing functions, while `eq?` and `eqv?`-based hashing each only have 1 hashing function?",,
2.34164E+17,python#3213,2021-12-06,I believe its so that they can use 2-choice hashing,,
2.34164E+17,python#3213,2021-12-06,https://en.wikipedia.org/wiki/2-choice_hashing,,üç¥ (1)
2.14881E+17,Moinate#6061,2021-12-06,learned something new every day!,,
3.5323E+17,Alex Knauth#4895,2021-12-06,"Okay, thanks!
I would have thought the collisions it would need to deal with would be just as likely for `eq?` and `eqv?` as for `equal?`, but I don't really know why...

but the thing I was wondering behind that was whether the ""double hashing"" was any part of the answer to ""mutable key mutated in a way that changes the hash code between insertion and lookup"", and it seems the answer to that is probably no?

I still don't know what the implementation does for that, but whatever it is, it sounds like double hashing would not be sufficient.",,
2.34164E+17,python#3213,2021-12-06,"Honestly, I don't understand the algorithm, but the presence of two hashing functions just makes me think it's 2-choice hashing",,
1.35871E+17,Drakonis#1712,2021-12-06,https://coalton-lang.github.io/20211010-introducing-coalton/ well this is very impressive,,
6.88091E+17,mflatt#6350,2021-12-06,"The BC mutable hash table implementations use double hashing instead of a collision alist. Originally, my measurements said double hashing was significantly better, but I bet the gap became small to nonexistent over the years as the (main) hash functions improved.",,
6.88091E+17,mflatt#6350,2021-12-06,"Internally, there are also secondary hash functions to go with `eq?` and `eqv?`. But no one ever seemed to need them, probably because no one ever needs to implement new ones of those. The secondary `equal?` hashing function was exposed for the benefit of writing new `equal?` hashing functions on new structure types.",,üçâ (1)
1.35871E+17,Drakonis#1712,2021-12-06,common lisp is some impressive stuff,,
2.08605E+17,soegaard#9269,2021-12-06,"Can anyone spot what I am doing wrong here?

I am using `:do-in` to define sequence syntax so I eventually can write:
```
(for/list ([(i j) (in-lexicographic-order #(0 0) #(3 3))]) (list i j))
```
to generate `((0 0) (0 1) ... (3 3))` .

Below the first test of a one dimensional version:
```
> (for/list ([(x) (in-lexicographic-order #(1) #(4))]) x)
'(1 2 3)
> (for/list ([(i) (in-lexicographic-order #(1) #(4))]) i)
; /Users/soegaard/tmp/arrays.rkt:682:15: i: identifier's binding is ambiguous
;   in: i
;   context...:
```

The problem is that it breaks, when the user happens to use `i` as the identifier.

Am I doing something wrong or is this a bug in `define-sequence-syntax`?

The definition is:
```
(define-sequence-syntax in-lexicographic-order
  (lambda () #'in-lexicographic-order/proc)
  (lambda (stx)
    (syntax-case stx ()
      [[(a) (_in-lexicographic-order ls us)]
       #'[(a)
          (:do-in
           ([(l) (vector-ref ls 0)] [(u) (vector-ref us 0)]) ; outer
           #t                                                ; outer check
           ([i l])                                           ; loop id and loop expr
           (< i u)                                           ; pos guard
           ([(a) i])                                         ; inner id
           #t
           #t
           [(+ i 1)])]]
      [_ #f])))
```",,
3.38034E+17,sorawee#6299,2021-12-06,"Interesting, it's only a problem at the top-level, not in a module",,
2.08605E+17,soegaard#9269,2021-12-06,Oh...,,
2.08605E+17,soegaard#9269,2021-12-06,But why would that make a difference?,,
3.38034E+17,sorawee#6299,2021-12-06,The example in the doc also has the same issue after slight adjustment,,
3.38034E+17,sorawee#6299,2021-12-06,"!rkt eval
```scheme
(define-sequence-syntax in-digits
    (lambda () #'in-digits/proc)
    (lambda (stx)
      (syntax-case stx ()
        [[(d) (_ nat)]
         #'[(d)
            (:do-in
              ([(n) nat])
              values
              ([i n])
              (not (zero? i))
              ([(j d) (quotient/remainder i 10)])
              #t
              #t
              [(- i 1)])]]
        [_ #f])))
(define in-digits/proc values)
(println (for/list ([j (in-digits 12)]) j))
(println (for/list ([i (in-digits 12)]) i))
```",,
8.02004E+17,r16#4581,2021-12-06,"'(2 1 0 9 8 7 6 5 4 3 2 1)


:warning: stderr:
trick:15:18: i: identifier's binding is ambiguous
  in: i
  context...:
   #(260089 macro) #(260098 intdef) #(260102 local) #(260104 intdef)
   #(260106 local) #(260119 intdef) [common scopes]
  matching binding...:
   local
   #(260089 macro) [common scopes]
  matching binding...:
   local
   #(260098 intdef) #(260102 local) [common scopes]
  common scopes...:
   #(0 module) #(259984 module top-level) #(260092 local)
   #(260093 intdef) #(260095 local) #(260097 local)
  location...:
   trick:15:18
  context...:
   /home/r16bot/r16/evaluator.rkt:81:10: loop
   /home/r16bot/r16/evaluator.rkt:98:7
   /home/r16bot/r16/evaluator.rkt:63:2: run-evaluation
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:413:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:511:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:914:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:910:5: loop",,
3.38034E+17,sorawee#6299,2021-12-06,"I guess somewhere in `for` implementation, `syntax-local-introduce` is incorrectly applied (or _not_ applied)",,
2.08605E+17,soegaard#9269,2021-12-06,Sounds likely.,,
2.08605E+17,soegaard#9269,2021-12-06,I suppose I could use `syntax-local-introduce` myself on the `i` used in the loop - but it would be better if it were automatic.,,
4.66395E+17,oaktownsam#0815,2021-12-06,"I think this may be the same if you use `syntax-local-introduce` (and works):
```scheme
(define-sequence-syntax in-digits
  (lambda () #'in-digits/proc)
  (lambda (stx)
    (syntax-case stx ()
      [[(d) (_ nat)]
       (with-syntax ([i (format-id stx ""i"")])
         #'[(d)
            (:do-in
             ([(n) nat])
             values
             ([i n])
             (not (zero? i))
             ([(j d) (quotient/remainder i 10)])
             #t
             #t
             [(- i 1)])])]
      [_ #f])))
```",,
2.08605E+17,soegaard#9269,2021-12-06,That suddenly computes a different result than the original in-digits.,,
2.08605E+17,soegaard#9269,2021-12-06,"The new one:
```
> (for/list ([x (in-digits 3)]) x)
'(3 2 1)
```",,
2.08605E+17,soegaard#9269,2021-12-06,I don't see why though.,,
4.66395E+17,oaktownsam#0815,2021-12-06,Wow.  I just added the one line üôÇ,,
2.08605E+17,soegaard#9269,2021-12-06,Yeah - this is mysterious.,,
4.66395E+17,oaktownsam#0815,2021-12-06,weird they both produce `'(3 2 1)` for me,,
2.08605E+17,soegaard#9269,2021-12-06,I didn't try the original. Let's see.,,
2.08605E+17,soegaard#9269,2021-12-06,The original works for me  (I am using Racket 7.5).,,
4.66395E+17,oaktownsam#0815,2021-12-06,Racket 8.3.0.8,,
3.38034E+17,sorawee#6299,2021-12-06,I'm a bit confused. What's the original result of `in-digits` for you?,,
2.08605E+17,soegaard#9269,2021-12-06,"```
> (for/list ([x (in-digits 3)]) x)
'(3)
```",,
3.38034E+17,sorawee#6299,2021-12-06,"Oh, is that `in-digits` from the documentation, or the one I posted above?",,
3.38034E+17,sorawee#6299,2021-12-06,What you posted is the expected result from the documentation. But I modified it slightly to make it return `'(3 2 1)`,,
2.08605E+17,soegaard#9269,2021-12-06,Errr. From the docs I think.,,
2.08605E+17,soegaard#9269,2021-12-06,Missed that!,,
2.08605E+17,soegaard#9269,2021-12-06,I thought you changed the names only.,,
9.03801E+17,pognotfound#1461,2021-12-07,"how do I make a variable macro
like how to do this in racket```c
#define ONE 1
#define TWO 2
```",,
2.64024E+17,Eutro#0016,2021-12-07,"1. you would not, just define it as a variable
2. `(define-syntax (ONE stx) #'1)`",,
3.58051E+17,hazel#0271,2021-12-07,yeah just don't do that,,
3.58051E+17,hazel#0271,2021-12-07,"Racket doesn't have C-preprocessor like stuff where it scans through your code and replaces THING with something else, literally
this is because this approach sucks",,
3.5323E+17,Alex Knauth#4895,2021-12-07,"better to just define a variable...
but if you ever actually want to do this I'd recommend
```
(define-syntax ONE (make-variable-like-transformer #'1))
```
instead",,
2.66505E+17,notjack#9941,2021-12-07,and only do that if you know for certain that `(define ONE 1)` isn't what you want,,
2.08605E+17,soegaard#9269,2021-12-07,"@pognotfound   A piece to the puzzle: The compiler looks for variables that are never mutated (i.e. never changes value). So if `(define ONE 1)`  is used in a module and all places where ONE is used are references, then the value 1 will be substituted for ONE at compile time.

Of course, if you want to write `TIME` instead of `(current-time)`, then you will need a so-called  identifier macro. https://docs.racket-lang.org/guide/pattern-macros.html#%28part._.Identifier_.Macros%29",,
1.35871E+17,Drakonis#1712,2021-12-07,@gingerydoo are there any new developments regarding denxi?,,
5.06301E+17,xoxo#7837,2021-12-07,really quick question,,
5.06301E+17,xoxo#7837,2021-12-07,wait oops,,
6.46114E+17,samth#3420,2021-12-07,"For people here who don't read the mailing list/discourse, we/I am looking for help maintaining the package server; see https://gist.github.com/samth/27f38f7ee27a3f0b868af8d35fe0514e for more.",,üéâ (2)
7.18552E+17,jatta#5605,2021-12-08,Is there a way to implement `(veryquote (1 #;(9) 2))` that returns `(veryquote (1 #;(9) 2))`?,,
3.38034E+17,sorawee#6299,2021-12-08,"No if you require `veryquote` to be a macro in `#lang racket`, because `#;` is read (and discarded) at read-time, which is even before macro expansion. But if you have your own `#lang`, you can do it by preserving `#;` in your reader.",,"üëç (1),plusone (1)"
3.38034E+17,sorawee#6299,2021-12-08,"Actually, there's one possible workaround if you want `veryquote` to be a macro in `#lang racket`: if you can ask users to save the Racket file to disk first, then you can extract the source location information and read the file from disk.",,
3.58051E+17,hazel#0271,2021-12-08,terrible. thank you,,
3.38034E+17,sorawee#6299,2021-12-08,"This is what Rosette does to print synthesized code, btw lolol",,
4.83487E+17,jest#6646,2021-12-08,"```scheme
(map (lambda (path)
       (define command
         (list ""-o"" ""out"" ""-t"" (path->string path)))
       (define-values (sp out in err)
         (apply subprocess (append (list #f #f #f ""/mnt/z/sprite_tools/cutting"") command)))
       #f) png-files)
```
question, im using racket to batch script cli some png files and this eats up all 16GB of my ram and lags for a while... am i supposed to not spawn 400 subprocesses?",,
4.83487E+17,jest#6646,2021-12-08,or is it cause i didnt close the subprocesses?,,
3.38034E+17,sorawee#6299,2021-12-08,Yes. Do you really need `subprocess`? `system`/`system*` is generally better to use if it can be used.,,
4.83487E+17,jest#6646,2021-12-08,"```
Important: All ports returned from subprocess must be explicitly closed, usually with close-input-port or close-output-port.
```",,
4.83487E+17,jest#6646,2021-12-08,"no not really, i didnt know i could system / system*",,
4.83487E+17,jest#6646,2021-12-08,someone told me to use subprocess when running cli apps so thanks,,
4.83487E+17,jest#6646,2021-12-08,"so how do i use it?
```scheme
(system* ""/mnt/z/sprite_tools/cutting"" ""-o out -t test.png"")

;ERRROR: converter: the ""-o"" option needs 1 argument, but 0 provided
```",,
4.83487E+17,jest#6646,2021-12-08,"ohhh `(system* command arg ...) ` , so i assume i dont put it all in 1 string",,
3.38034E+17,sorawee#6299,2021-12-08,Yep,,
4.83487E+17,jest#6646,2021-12-08,sweet thanks. is that all i need to do? i dont need to close anything?,,
3.38034E+17,sorawee#6299,2021-12-08,Nope. It's automatically closed. That's why you should prefer it if you don't need the flexibility that `subprocess` / `process` provides,,
4.83487E+17,jest#6646,2021-12-08,alright sweet,,
4.83487E+17,jest#6646,2021-12-08,thanks a lotüòò,,
2.75501E+17,Plane#0324,2021-12-08,"you know what would be neat?  having a list of academic papers and talks / presentations related to various features in Racket, all in one place.  is there such a thing already?",,
2.75501E+17,Plane#0324,2021-12-08,"has anyone made a macro that lets you create a struct instance, supplying the variables by name instead of by position?",,
2.75501E+17,Plane#0324,2021-12-08,"like `struct-copy`, but you're making a new struct instead of modifying an old one",,
2.14881E+17,Moinate#6061,2021-12-08,"For fun? If not just for entertainment, Rebellion lets you give constructor arguments by keyword.",,
2.75501E+17,Plane#0324,2021-12-08,oh!  of course rebellion would have it,,
2.75501E+17,Plane#0324,2021-12-08,you could say that all of the stuff i do in racket is for fun.  although i write programs that are useful to me while i'm having fun (:,,
2.14881E+17,Moinate#6061,2021-12-08,"i guess i meant, sounds like a good motivation to have fun with macro writing
but if you're working on some other fun problem like AoC and just wanted the feature it would be different",,
2.75501E+17,Plane#0324,2021-12-08,but yeah it would just be more ergonomic for me often to be able to use named arguments rather than positional,,
2.14881E+17,Moinate#6061,2021-12-08,"what would you want it to look like, anyway?
`(circle (radius 10) (color ""blue""))`?",,
2.14881E+17,Moinate#6061,2021-12-08,"I can see why people like keywords args - looks better `(circle #:radius 10 #:color ""blue"")` but it's not quite the same",,
2.75501E+17,Plane#0324,2021-12-08,do you dislike how `struct-copy` looks right now?,,
2.14881E+17,Moinate#6061,2021-12-08,"i don't use it to change a lot of fields at once, so it seems fine",,
2.75501E+17,Plane#0324,2021-12-08,in my imagination it was like this:,,
2.75501E+17,Plane#0324,2021-12-08,"```scheme
(struct posn (x y) #:transparent)
(struct-copy posn (posn 1 2) [x 3] [y 4])     ; => (posn 3 4)
(struct-new  posn            [x 3] [y 4])     ; => (posn 3 4)
```",,
2.75501E+17,Plane#0324,2021-12-08,although i wasn't really thinking too much about the exact syntax,,
2.14881E+17,Moinate#6061,2021-12-08,i haven't written any struct macros but i have ptsd from finding out about some 9 element vector hiding behind every struct (lol),,
2.14881E+17,Moinate#6061,2021-12-08,so hopefully there are better helper functions than munging around with that data structure,,
2.14881E+17,Moinate#6061,2021-12-08,"iirc there are, at one point i wished i had found them earlier, didn't learn how to use them",,
2.75501E+17,Plane#0324,2021-12-08,"i think half of the time spent on this `struct-new` macro would be on error checking, to make sure you have one of each field",,
2.75501E+17,Plane#0324,2021-12-08,@Moinate what is the rebellion thingy i should be looking for?,,
2.14881E+17,Moinate#6061,2021-12-08,i'm thinking of https://docs.racket-lang.org/rebellion/Record_Types.html,,
2.14881E+17,Moinate#6061,2021-12-08,"none of that stuff works on ""old school"" structs, I don't think",,
6.46114E+17,samth#3420,2021-12-08,There is not such a thing currently. I recommend creating a wiki page/a github repo for collecting them!,,
6.46114E+17,samth#3420,2021-12-08,@Plane i would start with papers here: https://www2.ccs.neu.edu/racket/pubs/ https://www.cs.utah.edu/~mflatt/publications/index.html https://users.cs.northwestern.edu/~robby/pubs/ etc,,
2.75501E+17,Plane#0324,2021-12-08,thank you!,,
2.08605E+17,soegaard#9269,2021-12-08,@Plane  https://racket-lang.org/learning.html,,
2.08605E+17,soegaard#9269,2021-12-08,"@samth 
Just in case you haven't seen it.",https://cdn.discordapp.com/attachments/618895179343986688/918230411019165726/unknown.png,
2.66505E+17,notjack#9941,2021-12-08,dammit this made me realize resyntax probably won't work on unsaved files lol,,mew (3)
3.38034E+17,sorawee#6299,2021-12-08,"I made one, here: https://github.com/sorawee/my-utils/blob/master/struct.rkt. See examples in the test module at the end.",,
3.38034E+17,sorawee#6299,2021-12-08,"Note that I made this before the struct field info feature was introduced, so it probably can be rewritten to make it more hygienic",,
3.38034E+17,sorawee#6299,2021-12-08,"See also: https://docs.racket-lang.org/syntax-parse-example/index.html#%28part._.Java.Script-.Inspired_.Dictionary_.Syntax%29 (which provides similar features, but it uses `hash` instead of `struct`)",,
6.46114E+17,samth#3420,2021-12-08,"Yeah, I don't know what's wrong with their server",,üëç (1)
2.75501E+17,Plane#0324,2021-12-08,"thank you!  and i learned about `kw-make-struct` from looking at your code, i didn't know about that either",,
2.75501E+17,Plane#0324,2021-12-08,btw i am really liking the new `#;` highlighting,,
7.14999E+17,gingerydoo#7461,2021-12-08,"Yes, although indirect. My last RacketCon speech covers this. Right now I'm neck deep in Mes and POSIX.",,
4.83487E+17,jest#6646,2021-12-08,"ello, anyone good with 2htdp image?",,
4.83487E+17,jest#6646,2021-12-08,"```scheme

(require 2htdp/image)

(define spritesheet (beside
                     (rectangle 32 32 'solid 'red)
                     (rectangle 32 32 'solid 'blue)))

(define spritesheet-width (image-width spritesheet))
(define spritesheet-height (image-height spritesheet))

(define spritesheet-width-tiles (/ spritesheet-width 32))
(define spritesheet-height-tiles (/ spritesheet-height 32))

; i dice up the sprite sheet into 32x32 squares, for simplicity i just grab the blue one here from the rectangle made above
(define blue (crop 32 0 32 32 spritesheet))

; move the blue one by 8 pixels to the right, but you will see I get the red rectangle clipping into the frame!!
(place-image/align blue 8 0 'left 'top (rectangle  32 32 'solid 'transparent))
```
I'm using 2htdp/image to run some batch operations on my spritesheet for my game and I run into this issue where `blue` is not a new image, it's an alias to the spritesheet, so its shifting the entire sprite sheet, thus the red rectangle is clipping in",,
6.46114E+17,samth#3420,2021-12-08,@jest see https://docs.racket-lang.org/teachpack/2htdpimage-guide.html#%28part._nitty-gritty%29,,
4.83487E+17,jest#6646,2021-12-08,"ahh, so `32.5` fixed to the crop frame width fixed it, thanks",,
4.83487E+17,jest#6646,2021-12-08,"kinda confused by this:
> colors in all of the pixels enclosed by the square starting at the upper left corner of (0,0) and going down to the upper left corner of (10,10),
, shouldnt it be bottom right corner? or am i not understanding...",,
2.08605E+17,soegaard#9269,2021-12-08,I think it should have been bottom right.,,
3.38034E+17,sorawee#6299,2021-12-08,"IIUC

> The image library treats coordinates as if they are in the upper-left corner of each pixel

So drawing from (0, 0) to (10, 10) is ""starting at the upper left corner of (0,0) and going down to the upper left corner of (10,10),""",,
4.83487E+17,jest#6646,2021-12-08,im confused lol,,
4.83487E+17,jest#6646,2021-12-08,oh wait,,
4.83487E+17,jest#6646,2021-12-08,"ok i think i get it, this is all below the scale of pixels",,
3.38034E+17,sorawee#6299,2021-12-08,"If you go to bottom right, then the width and height would be 11, I think?",,
4.83487E+17,jest#6646,2021-12-08,"kind of unnatural to see that ""upper left to upper left"" lol...",,
2.75501E+17,Plane#0324,2021-12-08,half-open ranges are nice,,
2.75501E+17,Plane#0324,2021-12-08,"there is a famous note by dijkstra to help understand why you might want to express a range as 0 ‚â§ x < 10
https://www.cs.utexas.edu/users/EWD/transcriptions/EWD08xx/EWD831.html",,
4.83487E+17,jest#6646,2021-12-08,"i need to do an image-mask of sorts, e.g given 1 image overlayed onto a 2nd image, mask out all the pixels that have color only in image #1 over image #2, `image->color-list` seems to do that i think? given an image, return the rgba values of every pixel from top left to bottom right",,
4.83487E+17,jest#6646,2021-12-08,2htdp image is pretty great!,,
2.14881E+17,Moinate#6061,2021-12-08,Sounded like a job for map-image which isn‚Äôt exactly 2htdp. https://github.com/racket/picturing-programs,,
2.75501E+17,Plane#0324,2021-12-08,"just happened across this:
https://blog.jverkamp.com/series/racket-roguelike/",,
4.83487E+17,jest#6646,2021-12-09,is there a vector-memf? e.g one that takes in a lambda to find something,,
4.83487E+17,jest#6646,2021-12-09,findf i mean,,
2.66505E+17,notjack#9941,2021-12-09,there isn't. a `sequence-findf` would be handy though,,
2.66505E+17,notjack#9941,2021-12-09,sure wish someone would implement one,,
4.83487E+17,jest#6646,2021-12-09,"ahh, i thought it was just racket not wanting to bloat the standard lib",,
2.66505E+17,notjack#9941,2021-12-09,"nah, racket just over-prioritizes list operations at the expense of all other sequence types",,
2.75501E+17,Plane#0324,2021-12-09,"something like this?
```scheme
(define (sequence-findf proc seq)
  (for/first ([elem seq]
              #:when (proc elem))
    elem))
```",,
2.66505E+17,notjack#9941,2021-12-09,yup,,
3.38034E+17,sorawee#6299,2021-12-09,"Be careful that `seq` could have `#f` in it, and `for/first` returns `#f` when it can't find an element.",,
2.75501E+17,Plane#0324,2021-12-09,"oh, where `findf` would skip over the `#f`",,
3.38034E+17,sorawee#6299,2021-12-09,"well, `findf` also has the same problem, I think",,
2.75501E+17,Plane#0324,2021-12-09,oh... yeah i was testing it,,
2.75501E+17,Plane#0324,2021-12-09,i was trying to make it behave like `findf`,,
2.75501E+17,Plane#0324,2021-12-09,i actually don't typically use `findf`,,
3.38034E+17,sorawee#6299,2021-12-09,"Yeah, my personal rule is, don't use `findf` if the list can contain `#f`",,
2.75501E+17,Plane#0324,2021-12-09,"thanks, that's something i had never really considered before",,
4.83487E+17,jest#6646,2021-12-09,"```scheme
(define x ""1_2_3_4"")

(string-split x ""_"" #:trim? #f #:repeat? #f)
```
how do i produce the list `(list ""1"" ""_2_3_4"")` using something form the standard lib?",,
4.83487E+17,jest#6646,2021-12-09,"guess ill just find the index of the first ""_"" and do it manually.... kind of thought repeat would do this",,
4.83487E+17,jest#6646,2021-12-09,and stop on first match,,
3.38034E+17,sorawee#6299,2021-12-09,Are you OK with regex?,,
3.38034E+17,sorawee#6299,2021-12-09,"!rkt eval
```scheme
(match-define (pregexp #px""^(.*?)_(.*)$"" (list _ xs ...)) ""1_2_3_4"")
```",,
8.02004E+17,r16#4581,2021-12-09,‚Äã,,
3.38034E+17,sorawee#6299,2021-12-09,"!rkt eval
```scheme
(match-define (pregexp #px""^(.*?)_(.*)$"" (list _ xs ...)) ""1_2_3_4"")
xs
```",,
8.02004E+17,r16#4581,2021-12-09,(1 2_3_4),,
3.38034E+17,sorawee#6299,2021-12-09,ughh,,
3.38034E+17,sorawee#6299,2021-12-09,"!rkt eval
```scheme
(match-define (pregexp #px""^(.*?)_(.*)$"" (list _ xs ...)) ""1_2_3_4"")
(~s xs)
```",,
8.02004E+17,r16#4581,2021-12-09,"(""1"" ""2_3_4"")",,
3.38034E+17,sorawee#6299,2021-12-09,`#:repeat?` means this:,,
3.38034E+17,sorawee#6299,2021-12-09,"!rkt eval
```scheme
(list (string-split ""1__2"" ""_"" #:repeat? #f)
      (string-split ""1__2"" ""_"" #:repeat? #t))
```",,
8.02004E+17,r16#4581,2021-12-09,((1  2) (1 2)),,
3.38034E+17,sorawee#6299,2021-12-09,"!rkt eval
```scheme
(~s (list (string-split ""1__2"" ""_"" #:repeat? #f)
          (string-split ""1__2"" ""_"" #:repeat? #t)))
```",,
8.02004E+17,r16#4581,2021-12-09,"((""1"" """" ""2"") (""1"" ""2""))",,
4.83487E+17,jest#6646,2021-12-09,thanks m8,,
1.35871E+17,Drakonis#1712,2021-12-09,perhaps that might be the wrong priority?,,
1.35871E+17,Drakonis#1712,2021-12-09,"i mean, its certainly a cool thing, but its not strictly necessary for building a distribution with",,
6.35203E+17,Zoogley#8396,2021-12-09,how do u indent racket,,
6.35203E+17,Zoogley#8396,2021-12-09,in discord,,
3.38034E+17,sorawee#6299,2021-12-09,What do you mean?,,
3.38034E+17,sorawee#6299,2021-12-09,"When you write code between triple backticks, the text becomes monospace, and that allows you to put spaces in manually accurately.",,
3.38034E+17,sorawee#6299,2021-12-09,You can also copy code from other text editors after auto indenting the code,,
3.38034E+17,sorawee#6299,2021-12-09,Or you can use the formatter command (self-promotion :P),,
3.38034E+17,sorawee#6299,2021-12-09,Not sure if this is what you are asking for,,
6.35203E+17,Zoogley#8396,2021-12-09,Yeah i just mean colour coded like,,
6.35203E+17,Zoogley#8396,2021-12-09,oh hes using a command,,
3.38034E+17,sorawee#6299,2021-12-09,"Yeah, just put code between triple backticks. After the first triple backtick, you can write `scheme` for additional syntax highlight",,
6.35203E+17,Zoogley#8396,2021-12-09,oh thank you,,
3.38034E+17,sorawee#6299,2021-12-09,"```
(define a 1)
```",,
3.38034E+17,sorawee#6299,2021-12-09,"```scheme
(define a 1)
```",,
6.35203E+17,Zoogley#8396,2021-12-09,have an exam tomorrow just gonna copy my functions to a channel for revision,,
3.38034E+17,sorawee#6299,2021-12-09,May I suggest doing so at the #help channel?,,
3.38034E+17,sorawee#6299,2021-12-09,And please read the description there first,,
6.35203E+17,Zoogley#8396,2021-12-09,oh no as in,,
6.35203E+17,Zoogley#8396,2021-12-09,my own server,,
6.35203E+17,Zoogley#8396,2021-12-09,or do u want to see it or something?,,
3.38034E+17,sorawee#6299,2021-12-09,"Oh, got it. I thought you are gonna ask something about your code",,
6.35203E+17,Zoogley#8396,2021-12-09,nah im g haha thanks anyway,,
7.18552E+17,jatta#5605,2021-12-09,"I'm reading about `equal? eq? eqv? =` https://docs.racket-lang.org/reference/Equality.html#%28part._model-eq%29 . Is there something more I can read about equality operators, the differences between them, etc? perhaps a paper?",,
3.5323E+17,Alex Knauth#4895,2021-12-09,What questions do you have?,,
7.18552E+17,jatta#5605,2021-12-09,"at the moment, ""why are there so many"" üôÇ",,
3.5323E+17,Alex Knauth#4895,2021-12-09,"well different data types have different notions of equality
for numbers you might want to consider the exact integer `1` the same as the floating-point number `1.0`",,üëç (1)
3.38034E+17,sorawee#6299,2021-12-09,"@Alex Knauth also has a great write-up at https://stackoverflow.com/a/61584806/718349 already, too",,üëç (1)
3.5323E+17,Alex Knauth#4895,2021-12-09,for some other data structures like lists you might want to look deeply inside them to consider them equal if all their elements are equal,,
3.5323E+17,Alex Knauth#4895,2021-12-09,"and for some mutable data structures you might only want to consider them the same if their pointers are the same, or if ""when you mutate one, the other is mutated as well""",,
3.5323E+17,Alex Knauth#4895,2021-12-09,"Ah, there's a broken link in my Stack Overflow answer there (Edit: fixed now)",,
5.24323E+17,Ben Kenobi#5683,2021-12-09,"This seems like stuff @gingerydoo might be interested in, but also like it could be a neat project to implement for the racket community: https://github.com/crev-dev/crev",,ü§ó (1)
4.26612E+17,pi0#4955,2021-12-09,what do you guys use scheme for?,,
4.26612E+17,pi0#4955,2021-12-09,i mean what real life apps?,,
9.03801E+17,pognotfound#1461,2021-12-09,"for learning programming
other than that i don't think scheme has any practical uses",,
4.26612E+17,pi0#4955,2021-12-09,oh,,
4.26612E+17,pi0#4955,2021-12-09,but why not C,,
4.26612E+17,pi0#4955,2021-12-09,or Java?,,
4.26612E+17,pi0#4955,2021-12-09,"python, Javascript?",,
4.26612E+17,pi0#4955,2021-12-09,i really like this channel,,
4.26612E+17,pi0#4955,2021-12-09,its the best support i have gotten,,
4.26612E+17,pi0#4955,2021-12-09,unfortunately my school teaches java,,
4.26612E+17,pi0#4955,2021-12-09,for just about everything,,
4.26612E+17,pi0#4955,2021-12-09,and this is the only semester i will use scheme,,
8.14743E+16,jimpjorps#0001,2021-12-09,"scheme's perfectly practical, it's just part of a language family that got eclipsed in the 90s by the C-like languages",,
6.87833E+17,grey#8674,2021-12-09,Scheme is used as a scripting language in different places. The video game studio NaughtyDog uses Racket as the scripting language for their games.,,
6.87833E+17,grey#8674,2021-12-09,Hacker News is built with Racket.,,
8.14743E+16,jimpjorps#0001,2021-12-09,there's a fair number of places using the various flavors of lisp for various purposes too,,
3.79445E+17,joohnym#9531,2021-12-09,I don't think it's Racket. I think they have their own in-house flavor of Lisp.,,
9.03801E+17,pognotfound#1461,2021-12-09,"c and java is hard
python and javascript is ok but scheme is simpler",,
3.38034E+17,sorawee#6299,2021-12-09,See https://www.youtube.com/watch?v=oSmqbnhHp1c,,
9.03801E+17,pognotfound#1461,2021-12-09,though simpler doesn't mean easier,,
3.79445E+17,joohnym#9531,2021-12-09,Interesting. I've seen some more recent presentations from them and the code snippets they had on the slides did not look like Racket,,
3.79445E+17,joohnym#9531,2021-12-09,Though it could have been,,
4.26612E+17,pi0#4955,2021-12-09,wow writing an entire game in scheme,,
4.26612E+17,pi0#4955,2021-12-09,i wish you guys offered support for other courses,,
4.26612E+17,pi0#4955,2021-12-09,too,,
4.26612E+17,pi0#4955,2021-12-09,perhaps we can create a separate channel?,,
4.26612E+17,pi0#4955,2021-12-09,fingers crossed,,
9.03801E+17,pognotfound#1461,2021-12-09,its not scheme,,
9.03801E+17,pognotfound#1461,2021-12-09,its racket,,
4.26612E+17,pi0#4955,2021-12-09,ah,,
8.14743E+16,jimpjorps#0001,2021-12-09,"there's been a resurgence in interest in functional languages after a couple decades of OO reigning supreme, and Scheme is ideal for teaching it because its syntax is simple and it doesn't have the formal overhead of typechecking like a language like Haskell does",,
8.14743E+16,jimpjorps#0001,2021-12-09,"languages like Java have been slowly adopting features and ideas that functional languages have had since the '80s, so it's nice to know how the other half lives even if you never venture outside enterprise programming ever again",,
3.79445E+17,joohnym#9531,2021-12-09,"From what I remember, Naughty Dog uses C++ as the backbone of their game engine, and Lisp/Scheme/Racket for scripting",,
5.24323E+17,Ben Kenobi#5683,2021-12-09,"I mean, I'm writing a program at work that was envisioned as a CLI, but when you really look at interaction patterns you actually want a REPL, and you want to automate, so you need a scripting language‚Ä¶ and so then you just want to build the whole thing in racket, since building the scripting language nets you a repl & cli as programs in that language ü§Ø",,
3.38034E+17,sorawee#6299,2021-12-09,"One reason why Racket is attractive for teaching is that teachers can use a language that is designed specifically for teaching, to give a better error message, better tooling supports, etc.",,
5.24323E+17,Ben Kenobi#5683,2021-12-09,"But that is racket, not scheme /pedant (re: my comment)",,
8.14743E+16,jimpjorps#0001,2021-12-09,personally racket was the stepping stone I needed to finally solidify a bunch of stuff I had half-learned in school but never really learned how to apply,,
8.14743E+16,jimpjorps#0001,2021-12-09,"I like functional programming because it's a wider view, it's less about the steps to do something and more about what you want the final result to be",,
9.03801E+17,pognotfound#1461,2021-12-09,anyone here use squeak?,,
5.24323E+17,Ben Kenobi#5683,2021-12-09,"@jimpjorps that to me often is less tedious. I just don't often care about how it gets done, and want to think about the problem at a higher level. FP generally tends to build layers of higher-levels in ways that feel like languages, and of course LOP just, well, builds languages.",,
9.03801E+17,pognotfound#1461,2021-12-09,just asking,,
8.14743E+16,jimpjorps#0001,2021-12-09,"I've used Pharo, which is in the same family",,
9.03801E+17,pognotfound#1461,2021-12-09,its a bit confusing at first,,
8.14743E+16,jimpjorps#0001,2021-12-09,"yeah, the interface is a bit much all at once",,
4.66395E+17,oaktownsam#0815,2021-12-09,I've used both.  Squeak is like a zen garden that you can load up and tend and make stunning things in.  Pharo still allows that but they put more focus on being able to rebuild those things in other images than the one it originated in.,,
4.66395E+17,oaktownsam#0815,2021-12-09,"So Pharo is more ""business"" and reproducible",,
8.14743E+16,jimpjorps#0001,2021-12-09,"there are too many interesting languages out there, please add 2 more hours to the day so I can have time for them",,
4.66395E+17,oaktownsam#0815,2021-12-09,"Those ""classic"" image smalltalks are so great to wander around too.  If you want to figure out how some bit is implemented it's all there in the image.  You just ""Inspect it"" and ""Browse it""",,
2.75501E+17,Plane#0324,2021-12-09,"racket is a general-purpose language.  there are lots of programs you could write in just about any general purpose language, depending on which one you like",,üíØ (3)
2.75501E+17,Plane#0324,2021-12-09,i'm sure a lot of people write tiny programs all the time to solve little tasks here and there,,
2.75501E+17,Plane#0324,2021-12-09,"i'm one of those people, and i've written them in lots of different languages over the years",,
2.75501E+17,Plane#0324,2021-12-09,lately i've settled on racket because it's fairly easy to use it and i think it's fun,,
2.75501E+17,Plane#0324,2021-12-09,"racket does have a lot of unique strengths, i think, like making little gui programs",,
2.75501E+17,Plane#0324,2021-12-09,"but really, for a lot of programs, you can use whatever language you like.  i just happen to like racket (:",,üíØ (1)
4.83487E+17,jest#6646,2021-12-09,"it was actually going to be the scripting language for oculus VR to make web-scale applications https://youtu.be/ydyztGZnbNs , so there's nothing stopping anyone from using this over any other language, other than if you really need to go ham on embedded and low level",,
9.03801E+17,pognotfound#1461,2021-12-09,hmm `(read)` only takes first expression lol,https://cdn.discordapp.com/attachments/618895179343986688/918724336108597288/unknown.png,
9.03801E+17,pognotfound#1461,2021-12-09,how can i make it read multiple expressions,,
3.38034E+17,sorawee#6299,2021-12-09,You can loop until you get `eof-object?`,,
3.38034E+17,sorawee#6299,2021-12-09,"Alternatively, use `(sequence->list (in-port))`, which essentially does what I described above for you",,racketflat (1)
2.66505E+17,notjack#9941,2021-12-10,continuing discussion of: https://discord.com/channels/571040468092321801/812451168194002984/918756659575279636,,
2.66505E+17,notjack#9941,2021-12-10,"I'd like to see this:
```scheme
(special-block
  (parameterize! current-input-port (open-input-string! ""hello world""))
  ... some code ...)
```
where `parameterize!` and `open-input-string!` cooperate with `special-block` to wrap `... some code ...` with the necessary cleanup work",,
3.38034E+17,sorawee#6299,2021-12-10,"Just my personal thought, but I hate cooperating macros like this",,
3.38034E+17,sorawee#6299,2021-12-10,"Wrapping solves every problem, but it looks like a hack. Can we solve this problem without wrapping stuff in another layer?",,
3.38034E+17,sorawee#6299,2021-12-10,which is what I alluded to in https://github.com/racket/rhombus-prototype/issues/85,,
2.66505E+17,notjack#9941,2021-12-10,Yeah I would much rather there be a way to get it to work without requiring you shove in a `special-block` macro everywhere,,
2.66505E+17,notjack#9941,2021-12-10,I gave a shot at building something more extensible here https://gist.github.com/jackfirth/95c66eeede00ff3c2c8a195638b44447,,
3.38034E+17,sorawee#6299,2021-12-10,FYI: I got `do-stuff: unbound identifier in: do-stuff`. Commenting that blocks makes it run fine though,,
2.66505E+17,notjack#9941,2021-12-10,"haven't looked at that code in some time, heh",,
2.66505E+17,notjack#9941,2021-12-10,fixed,,üëç (1)
2.75501E+17,Plane#0324,2021-12-10,i've been working on a really weird bug,,
1.93202E+17,rocketnia#4517,2021-12-10,"I don't like when it takes more than one macro to do something that Parendown does with one. Once at least one general operation is known that automatically works with the existing stuff, the option to define N new variants of standard operations that are special-block-aware seems like busywork.",,
2.75501E+17,Plane#0324,2021-12-10,"i have some code . . . 
```scheme
#lang racket/base

(require racket/file
         with-struct)

(displayln (find-files (Œª (x) x) ""in""))
```
and basically it just calls `find-files`, and sometimes it seems to skip over files in subdirectories:
```
crystal@wings:~/l$ racket tmp.rkt
(in in\test in\test\balloon1.png in\tmp in\tmp\icespike.png)
crystal@wings:~/l$ racket tmp.rkt
(in in\test in\test\balloon1.png in\tmp in\tmp\icespike.png)
crystal@wings:~/l$ racket tmp.rkt
(in in\test in\tmp)
crystal@wings:~/l$ racket tmp.rkt
(in in\test in\tmp)
crystal@wings:~/l$ racket tmp.rkt
(in in\test in\tmp)
crystal@wings:~/l$ racket tmp.rkt
(in in\test in\test\balloon1.png in\tmp in\tmp\icespike.png)
crystal@wings:~/l$ racket tmp.rkt
(in in\test in\tmp)
```",,
2.75501E+17,Plane#0324,2021-12-10,"if i remove the `(require with-struct)`, it seems to find all the files every time",,
2.75501E+17,Plane#0324,2021-12-10,"and `with-struct` is um, well, it's a little thing i made which is probably not the world's finest package, but i have no idea how it could be affecting `find-files`",,
2.75501E+17,Plane#0324,2021-12-10,"once in a while it goes into one of the directories and not the other
```
crystal@wings:~/l$ racket tmp.rkt
(in in\test in\test\balloon1.png in\tmp in\tmp\icespike.png)
crystal@wings:~/l$ racket tmp.rkt
(in in\test in\test\balloon1.png in\tmp)
```",,
2.75501E+17,Plane#0324,2021-12-10,my brain is currently in the process of exploding,,
1.93202E+17,rocketnia#4517,2021-12-10,what kind of a library is `with-struct`?,,
2.75501E+17,Plane#0324,2021-12-10,i think it's a weird wsl thing.  i can't reproduce this behavior on my debian box,,
2.75501E+17,Plane#0324,2021-12-10,<https://github.com/plane/with-struct>,,
2.75501E+17,Plane#0324,2021-12-10,"you can see what it does if you look in `tests`, it's a little thing i was making before when i was playing with jay mccarthy's `struct-define`",,
2.75501E+17,Plane#0324,2021-12-10,"my guess is it's not the actual code in `with-struct`, but some second-order interaction as a result of requiring it",,
2.75501E+17,Plane#0324,2021-12-10,"it is *definitely* a weird wsl thing.  i tried it just now on a normal windows path instead of a wsl path, and it's working properly",,
1.93202E+17,rocketnia#4517,2021-12-10,I'm not seeing anything in that library that could cause this,,
1.93202E+17,rocketnia#4517,2021-12-10,unless it's somehow the interaction Racket has with the library files themselves when it requires them,,
1.93202E+17,rocketnia#4517,2021-12-10,do you have that library linked in a certain way? like do you have a linked local copy that you maintain in a wsl path?,,
2.75501E+17,Plane#0324,2021-12-10,"i was just going to say that yes, `with-struct` is a locally linked package on the wsl filesystem",,
1.93202E+17,rocketnia#4517,2021-12-10,"not that I could diagnose issues too far at this low level, but maybe investigating that would narrow down to a good bug report",,
2.75501E+17,Plane#0324,2021-12-10,"it's interesting, though, because i don't know if i would want to file a bug report with racket or with the wsl project.  lol",,
2.75501E+17,Plane#0324,2021-12-10,"i'm *guessing* it's not really racket's fault, but i still don't have enough information",,
2.75501E+17,Plane#0324,2021-12-10,"so lessee, there's some strace-like thing in DrMemory i could try",,
2.75501E+17,Plane#0324,2021-12-10,(i'm bad at windows),,
2.75501E+17,Plane#0324,2021-12-10,this is definitely all wsl2 being weird.  lol,,
2.75501E+17,Plane#0324,2021-12-10,"ooh, it's frustrating, because i want to develop this on linux but i need it to work on windows too.",,
9.03801E+17,pognotfound#1461,2021-12-10,"i made a shunting yard parser and evaluator in racket lol
its cool",https://cdn.discordapp.com/attachments/618895179343986688/918798742088478741/unknown.png,üëç (2)
2.75501E+17,Plane#0324,2021-12-10,neat!,,
9.03801E+17,pognotfound#1461,2021-12-10,i will post the source code somewhere if you are interested,,
1.51536E+17,Vindaloo#6460,2021-12-10,"I am, it is interesting.",,
1.51536E+17,Vindaloo#6460,2021-12-10,"I'm still finding time to learn CL and Racket, so I don't know if I will understand much but it's nice how it kinda turned it into stack based code style",,
2.64024E+17,Eutro#0016,2021-12-10,yeah that's the shunting yard algorithm,,
9.03801E+17,pognotfound#1461,2021-12-10,here,https://cdn.discordapp.com/attachments/618895179343986688/918829873139679252/shuntingyard.rkt,‚ù§Ô∏è (1)
1.51536E+17,Vindaloo#6460,2021-12-10,Thank you very much! ^^,,
6.35203E+17,Zoogley#8396,2021-12-10,,https://cdn.discordapp.com/attachments/618895179343986688/918855909319528448/Screenshot_20211210-132510_WhatsApp.jpg,
9.03801E+17,pognotfound#1461,2021-12-10,idk why ada Lovelace and Bernoulli numbers (possibly) appears in the loading screen,,
6.46253E+17,mwarren#6807,2021-12-10,"@pognotfound possibly 'In 1843, Ada Lovelace became the first person to publish what we would now call a computer program, a set of instructions to calculate Bernoulli's Numbers, written for Charles Babbage's unbuilt Analytical Engine'",,plusone (1)
6.46253E+17,mwarren#6807,2021-12-10,and today is Ada Lovelace day,,plusone (1)
8.14743E+16,jimpjorps#0001,2021-12-10,"yeah, it's her birthday anniversary today",,plusone (1)
2.14881E+17,Moinate#6061,2021-12-10,"Would there be any interest in having two help channels, maybe `#help-class` for homework help and `#help-hacker` for the other class of questions? It's selfish really, but there's  a real mix of questions from (1) people still at the stage of learning a design process; and (2) people who dove into some part of the Racket ecosystem and are wondering what they found. -- Should they be separated?",,
8.14743E+16,jimpjorps#0001,2021-12-10,#internals seems kind of like the latter but not really well distinguished as such,,
2.14881E+17,Moinate#6061,2021-12-10,"Aha, I hadn't read that one much.",,
3.38034E+17,sorawee#6299,2021-12-10,"I feel like #help = `#help-class`, and #general = `#help-hacker`",,"üòÅ (3),plusone (1)"
6.46114E+17,samth#3420,2021-12-10,#internals is about the internals of Racket,,
7.14999E+17,gingerydoo#7461,2021-12-10,"Correct. Now since you've asked about my priorities before I want to interject something: I am not being paid, and no one else knows Denxi's source in detail. Until the former changes, any time I dedicate to Denxi is entirely discretionary.",,
7.14999E+17,gingerydoo#7461,2021-12-10,"It remains a hobbyist project, written and maintained by a hobbyist programmer with a job. I'd love to fundraise, but would need to collaborate with a marketing expert to that end. Using money I don't have for the purpose. Are you able to volunteer or educate me in this area?",,
6.35203E+17,Zoogley#8396,2021-12-10,ah just done my exam,,
6.35203E+17,Zoogley#8396,2021-12-10,time to forget about this language sorry guys üíÄ,,
7.14999E+17,gingerydoo#7461,2021-12-10,"@pi0 My programs can be Googled. I'll add my economic and social views re: why I use Lisp, Scheme, or Racket implementations.

Economic: Schemes don't have a reputation for getting you jobs. It can happen, but JavaScript and company are safer bets with high ROI. it makes more sense to side with the ""winners"" in terms of market share. The designs of these languages are normally outside of your control. When you struggle to do something with the language, your choices are to A) participate in standard discussions, B) compensate for the limits by writing more code in that language, or C) switch languages (therefore ecosystems) altogether.  Only option B is feasible for most worker bee programmers.

Social: Racket, Scheme, and Lisp implementations make option C easier, namely by keeping different semantics within the same runtime. Racket took things further by allowing syntax to vary in the same runtime. Socially, this means that it's a lot easier to say ""no, I don't like that"" to anything in the ecosystem, and pivot your code to avoid tradeoffs made for you by another programmer.  When you are wanting to get and keep a job, this isn't as valuable because you're more focused on financial security than keeping your technical options open.

I value the walk-away power that Racket gives me in particular, namely because I can select my own languages to implement designs that represent my own judgement, without necessarily sacrificing everything other people built.",,
7.14999E+17,gingerydoo#7461,2021-12-10,No need to apologize for a personal decision. üôÇ,,
6.35203E+17,Zoogley#8396,2021-12-10,just wondering like in what cases would i use it,,
6.35203E+17,Zoogley#8396,2021-12-10,im thinking of either web dev or cyber sec after i finish uni would i be needing it or?,,
7.14999E+17,gingerydoo#7461,2021-12-10,"My comment above kind of touches on that. It's kind of like learning math (""What do I use this for?"") If you aren't sure, then maybe nothing.

Think of Racket as a tool. Once you move on to use languages that get you a job, etc. you might want more nuanced control over your work. If you do, then you'll reassess your tools. Racket's just where I landed after thinking about what I wanted from a language, but none of my reasons are based on a concrete application.",,
6.35203E+17,Zoogley#8396,2021-12-10,ah fair enough yeah was cool learning it though,,
6.35203E+17,Zoogley#8396,2021-12-10,first lisp language for me anyway,,
2.75501E+17,Plane#0324,2021-12-10,i hope some of the things you learned help you down the road while you're using things other than racket,,plusone (5)
8.14743E+16,jimpjorps#0001,2021-12-10,"you might not use racket again, but there are other similar dynamic functional languages out there like Elixir and Elm that employ a lot of the same concepts, like immutability and recursion",,
2.75501E+17,Plane#0324,2021-12-10,"good luck, whatever you choose to do!",,üíï (2)
8.14743E+16,jimpjorps#0001,2021-12-10,and both of those are gaining popularity in web dev,,
6.35203E+17,Zoogley#8396,2021-12-10,ah fair enough],,
6.35203E+17,Zoogley#8396,2021-12-10,right im off to my next exam good luck yall,,
7.14999E+17,gingerydoo#7461,2021-12-10,Good luck!,,
2.75501E+17,Plane#0324,2021-12-10,"yeah, the world seems to be getting more function-y.  i like it",,
4.26612E+17,pi0#4955,2021-12-10,"@gingerydoo i wish i had more time to invest in racket, i appreciate your help and feedback on it",,
7.05427E+17,Geoff Knauth#5539,2021-12-11,"It's dark, cold and rainy, so I can't fly a glider at the moment, but I can pretend.",https://cdn.discordapp.com/attachments/618895179343986688/919198951566086155/20211211-glide-calculation.png,üíØ (3)
9.03801E+17,pognotfound#1461,2021-12-11,lol,https://cdn.discordapp.com/attachments/618895179343986688/919212027640152094/unknown.png,
7.94955E+17,Laurent O#6627,2021-12-11,You may be interested in [measures](https://github.com/Metaxal/measures),,salute (1)
3.38034E+17,sorawee#6299,2021-12-11,Also https://docs.racket-lang.org/measures-with-dimensions/,,üëç (2)
2.14881E+17,Moinate#6061,2021-12-11,I think this SG note is worth a pin. https://discord.com/channels/571040468092321801/618895179343986688/918954553167200347,,
4.62028E+17,StephenD#5938,2021-12-11,Pinned a message.,,
3.5323E+17,Alex Knauth#4895,2021-12-11,"Huh, I don't think I ever added Statute Miles or Nautical Miles to that",,
3.5323E+17,Alex Knauth#4895,2021-12-11,"I have the molar mass of Samarium, and of course I have Nanometers and Kilometers",,
4.66395E+17,oaktownsam#0815,2021-12-11,@StephenD did you forget https://racket.discourse.group/t/social-racket-council/358/6 ?,,
4.66395E+17,oaktownsam#0815,2021-12-11,I'm the only one here AFAICT so I don't think much is missed üòõ,,
3.5323E+17,Alex Knauth#4895,2021-12-11,"Oh, I did add `nautical-mile` but didn't provide a shortened version to `nm` because Nanometers",,
4.62028E+17,StephenD#5938,2021-12-11,yes I cforgot aking bread,,
3.5323E+17,Alex Knauth#4895,2021-12-11,"The normal `mile` is exactly 1.609344 `kilometer`s, but a U.S. statute mile is apparently about 1.609347 kilometers. Weird.",,
3.5323E+17,Alex Knauth#4895,2021-12-11,"Ah, okay
> In October 2019, U.S. National Geodetic Survey and National Institute of Standards and Technology announced their joint intent to retire the U.S. survey foot and U.S. survey mile, as permitted by their 1959 decision, with effect from the end of 2022",,
1.35871E+17,Drakonis#1712,2021-12-11,"i feel i should apologize about the way i came across, i did not mean to say that you have to work on it full time",,
7.14999E+17,gingerydoo#7461,2021-12-11,No worries.,,
1.35871E+17,Drakonis#1712,2021-12-11,"i'm not exactly qualified to help, but i could help out a bit",,
1.35871E+17,Drakonis#1712,2021-12-11,i do appreciate the work you've done,,
7.14999E+17,gingerydoo#7461,2021-12-11,"Thank you, and really, it's no trouble. I was just saying why I might not advance Denxi much every now and then. It's a decent-sized project now.",,
3.5323E+17,Alex Knauth#4895,2021-12-11,"I just got a new Mac and trying to build Racket from source on it, I ran into this error:
```
checking build system type... Invalid configuration `arm64-apple-darwin21.1.0': machine `arm64-apple' not recognized
configure: error: /bin/sh ../../../cs/c/../../lt/config.sub arm64-apple-darwin21.1.0 failed
```
I looked up parts of the error message online and found this comment on a github issue:
https://github.com/vector-im/element-web/issues/19486#issuecomment-987072990
> Found the problem! It is the homebrew `coreutils` that is the culprit! especially the `uname` in that version of `coreutils`
> I removed it and then Element built normally
For me I hadn't installed homebrew `coreutils`, instead there was nixpkgs `coreutils`, but the same thing applied. I uninstalled the coreutils from `nix-env`, and the build seemed to get farther this time, getting through those points in the build with:
```
checking build system type... aarch64-apple-darwin21.1.0
checking host system type... aarch64-apple-darwin21.1.0
checking target system type... aarch64-apple-darwin21.1.0
```

The next error I've run into is:
```
Undefined symbols for architecture arm64:
  ""_main"", referenced from:
     implicit entry/start for main executable
ld: symbol(s) not found for architecture arm64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[9]: *** [../bin/pb/scheme] Error 1
```
But searching that online I still don't know what to do.
The best clue I have is some warnings before that error that also mention `ld`:
```
ld: warning: ignoring file ../boot/pb/main.o, building for macOS-arm64 but attempting to link with file built for unknown-x86_64
ld: warning: ignoring file ../lz4/lib/liblz4.a, building for macOS-arm64 but attempting to link with file built for macOS-x86_64
ld: warning: ignoring file ../zlib/libz.a, building for macOS-arm64 but attempting to link with file built for macOS-x86_64
```
Does anyone recognize what's going wrong?",,
3.38034E+17,sorawee#6299,2021-12-11,"FWIW, I use Mac M1 without Nix, and there's no problem with building Racket from source, except that I couldn't run some executable GUI programs (e.g. DrRacket).",,
3.5323E+17,Alex Knauth#4895,2021-12-11,"Huh. Should I look at uninstalling some more Nix things beyond `coreutils`, at least so they‚Äôre not in the default profile? Would that help?",,
3.53953E+17,zardoz#4281,2021-12-11,why dont repl's get filled with the functions of a file after i require them,,
3.53953E+17,zardoz#4281,2021-12-11,is this the immutable repl thing or am i being dumb with provide and require,,
3.53953E+17,zardoz#4281,2021-12-11,or am i being dumb with geiser instead of using the binds to evaluate stuff to test it,,
1.93202E+17,rocketnia#4517,2021-12-11,"hmm, does the file you `require` have a `provide` in it? Maybe so, because you did mention `provide`, but I think forgetting `provide` is one easy way to end up not having all the definitions you're expecting in scope",,‚òùÔ∏è (1)
3.58051E+17,hazel#0271,2021-12-11,"you should use racket-mode and racket-xp-mode instead of geiser, probably",,
3.53953E+17,zardoz#4281,2021-12-11,even things added to provide dont show up on the repl,,
3.53953E+17,zardoz#4281,2021-12-11,idek why,,
3.53953E+17,zardoz#4281,2021-12-11,i think i didn't quote them,,
3.53953E+17,zardoz#4281,2021-12-11,so only it would have returned anon functions/smth else,,
4.66395E+17,oaktownsam#0815,2021-12-11,"I'm not familiar with the geiser environment, but did you re-require (or equivalent) the modules?",,
3.53953E+17,zardoz#4281,2021-12-11,i have turned the laptop off but i just use it for the repl within an emacs buffer and some completion benefits,,
3.53953E+17,zardoz#4281,2021-12-11,ill download file anf try it on termux,,
3.53953E+17,zardoz#4281,2021-12-11,ill try it tomorrow,,
3.53953E+17,zardoz#4281,2021-12-11,good night,,
2.75501E+17,Plane#0324,2021-12-11,today i learned about `nested-hash` <https://docs.racket-lang.org/nested-hash/index.html>,,
2.75501E+17,Plane#0324,2021-12-11,this is very convenient for me.  i nominate it for package of the day (:,,
1.56786E+17,williewillus#8490,2021-12-12,are racket hashtables structurally-shared/provide O(1) update like Clojure's?,,
1.56786E+17,williewillus#8490,2021-12-12,the hashset docs clearly state update is constant but the hashtables don't say,,
3.5323E+17,Alex Knauth#4895,2021-12-12,I thought it was technically O(log(n)) but with such a high base on the log that most people think of it as constant,,
3.5323E+17,Alex Knauth#4895,2021-12-12,"I finally tracked down what command it was running and in which directory: in this directory relative to the git repo:
```
racket/src/build/cs/c/ChezScheme/pb/c
```
running this command:
```
gcc -I/usr/local/opt/openblas/include -g -O2 -Wall -I/usr/local/opt/openblas/include -DOS_X -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough  -o ../bin/pb/scheme ../boot/pb/main.o ../boot/pb/libkernel.a ../zlib/libz.a ../lz4/lib/liblz4.a -L/usr/local/opt/openblas/lib -Wl,-headerpad_max_install_names -ldl -lm -framework CoreFoundation -liconv -lncurses
```
I wanted to track that down because part of the error message said `(use -v to see invocation)` so if I try adding `-v` to that command in the same location...
uh, I think what it's talking about is this?
```
 ""/Library/Developer/CommandLineTools/usr/bin/ld"" -demangle -lto_library /Library/Developer/CommandLineTools/usr/lib/libLTO.dylib -dynamic -arch arm64 -platform_version macos 12.0.0 12.0 -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -o ../bin/pb/scheme -L/usr/local/opt/openblas/lib -L/usr/local/lib ../boot/pb/main.o ../boot/pb/libkernel.a ../zlib/libz.a ../lz4/lib/liblz4.a -headerpad_max_install_names -ldl -lm -framework CoreFoundation -liconv -lncurses -lSystem /Library/Developer/CommandLineTools/usr/lib/clang/13.0.0/lib/darwin/libclang_rt.osx.a
ld: warning: ignoring file ../boot/pb/main.o, building for macOS-arm64 but attempting to link with file built for unknown-x86_64
ld: warning: ignoring file ../zlib/libz.a, building for macOS-arm64 but attempting to link with file built for macOS-x86_64
ld: warning: ignoring file ../lz4/lib/liblz4.a, building for macOS-arm64 but attempting to link with file built for macOS-x86_64
Undefined symbols for architecture arm64:
  ""_main"", referenced from:
     implicit entry/start for main executable
ld: symbol(s) not found for architecture arm64
```
sorry, I don't have any experience with linker problems so I still have no idea what this means",,
3.5323E+17,Alex Knauth#4895,2021-12-12,"Though maybe it's something else earlier that leads to the error. When I ran the version with `-v` I noticed this line:
```
Target: arm64-apple-darwin21.1.0
```
which I'm wondering might be wrong... the Github issue I linked above said something about `arm64-apple-darwin` being wrong somehow.. that it should have been `aarch64-apple-darwin`... but that was also the issue that said to uninstal `coreutils` to fix it, and I've already done that",,
4.1228E+17,xgqt#8370,2021-12-12,"@Alex Knauth 
`ld: warning: ignoring file ../lz4/lib/liblz4.a, building for macOS-arm64 but attempting to link with file built for macOS-x86_64`
I guess `../lz4/lib/liblz4.a` was already compield? - but in this case not for arm but amd.
Where did you get the source from?
Or maybe the buildsystem didnt detect your architecture and assumess amd64.",,
2.66505E+17,notjack#9941,2021-12-12,this is also called a trie - basically a map from key sequences to values instead of single keys to values,,
2.75501E+17,Plane#0324,2021-12-12,"we used to use tries a lot at a certain company i worked at back in the 90s, storing data on the filesystem as a db with like /k/ke/key",,
2.75501E+17,Plane#0324,2021-12-12,most filesystems at the time performing quite badly with too many nodes in one directory,,
3.5323E+17,Alex Knauth#4895,2021-12-12,"Okay, I deleted some more directories and tried again... I _think_ it's working now?",,
3.5323E+17,Alex Knauth#4895,2021-12-12,"Except yeah, DrRacket doesn't work when building from source anymore, like:
```
dyld[39131]: malformed import table
Abort trap: 6
```",,
3.5323E+17,Alex Knauth#4895,2021-12-12,"now when I run the tests and I see the line
```
(#<procedure:with-input-from-file> #<path:.../racket/collects/packed/apple> #<procedure:read>) ==> APPLE
```
I get scared because I'm afraid it might be an error message telling me something is wrong and the thing wrong is in shouty-caps and it's `APPLE` that's wrong",,
4.62028E+17,StephenD#5938,2021-12-12,"I think the Emacs section of the guide doesn‚Äôt do justice  to Racket Mode and racket-xp-mode. If I was reading it I‚Äôd probably assume geiser was the best choice based on the text alone.
In general this section lacks strengths of each option making it hard for a new user to make an informed choice.",,
4.62028E+17,StephenD#5938,2021-12-12,https://docs.racket-lang.org/guide/Emacs.html,,
4.62028E+17,StephenD#5938,2021-12-12,I feel this is not a good experience for new users who want to use racket with emacs. To that end I‚Äôve started drafting an pr https://github.com/racket/racket/compare/master...spdegabrielle:patch-4,,
4.1228E+17,xgqt#8370,2021-12-12,"sbcl compiler - same energy
(print ""apple"")
;; COMPILED PRINT APPLE",,
3.38034E+17,sorawee#6299,2021-12-12,"I'm glad I'm not the only one who experienced this problem! I can now tell @mflatt that it's not just me.

FWIW, if you really need to run DrRacket, you can use `racket -e '(require drracket)'`",,
3.5323E+17,Alex Knauth#4895,2021-12-12,"Thanks, I can define a command `drracket-head` that does that except using the `racket` from my git checkout",,
3.38034E+17,sorawee#6299,2021-12-12,For reference: https://discord.com/channels/571040468092321801/893314076346826852/910846815631450172,,
6.88091E+17,mflatt#6350,2021-12-12,Does runnning `GRacket.app` directly from the `lib` directory fail in the same way?,,
3.38034E+17,sorawee#6299,2021-12-12,"No, that one can be run just fine.",,
6.88091E+17,mflatt#6350,2021-12-12,Does deleting `DrRacket.app` and running `raco setup -nD` have any affect on running `DrRacket.app` directly?,,
3.38034E+17,sorawee#6299,2021-12-12,Doesn't have any effect. It still fails similarly,,
6.88091E+17,mflatt#6350,2021-12-12,Can you tar up `DrRacket.app` and send it to me?,,
3.5323E+17,Alex Knauth#4895,2021-12-12,That also fails for me (edit: deleting it and running `raco setup -nD`),,
3.38034E+17,sorawee#6299,2021-12-12,"I will zip, cause I don't know how to use tar üò¶",,
6.88091E+17,mflatt#6350,2021-12-12,"Are you using Apple-provided tools with the default settings? I'm trying to figure out whether chained fixups became a linker default with some configuration different from mine, or whether you're using something that enabled them.",,
3.38034E+17,sorawee#6299,2021-12-12,"My environment is Xcode from Apple, and Homebrew for additional stuff. The failure happens after I upgraded Xcode, I think.",,
3.38034E+17,sorawee#6299,2021-12-12,"Well, to clarify on that, I don't have Xcode per se. It's a part of `CommandLineTools` or something like that, installed using `xcode-select --install`",,üõ†Ô∏è (1)
2.08605E+17,soegaard#9269,2021-12-12,Double check that none of you paths contain  /opt/local/lib/,,
3.38034E+17,sorawee#6299,2021-12-12,"```
$ ls /opt/local/lib/
ls: /opt/local/lib/: No such file or directory
```

Is this bad or good?",,
2.08605E+17,soegaard#9269,2021-12-12,That's good. That means you haven't installed macports. It was popular before homebrew.,,üëç (1)
2.08605E+17,soegaard#9269,2021-12-12,"Years ago I had a problems due to unexpected paths.
I wrote:
```
How to build dynamic libraries for Racket on OS X.
==================================================

This document describes how to build the libraries needed for Racket on OS X.
The approach taken here is first to compile the tools needed for the build:

    pkg-config, autoconf, automake, and, libtools

Although not strictly neccessary this approach makes it *much* easier not 
to accidently run into problems due to existing libaries already on your system.
For example: If you spot /opt/local/lib/ in any of your paths, then you are 
probably linking agains the macports versions rather than your own.
```",,
2.08605E+17,soegaard#9269,2021-12-12,Maybe some part of Chez runs something in Homebrew  by accident?,,
6.88091E+17,mflatt#6350,2021-12-12,"I don't why the default is different for me, but now that I know it's about `LC_DYLD_CHAINED_FIXUPS`, I can use `-Wl,-fixup_chains`, and then I do see the same problem.",,
3.38034E+17,sorawee#6299,2021-12-12,"Not sure if it's related: https://developer.apple.com/forums/thread/683596

It looks like this `fixup_chains` thing has become the default in iOS 15, which was released a couple of months ago. I guess there's a similar change for non-iOS stuff too.",,
6.88091E+17,mflatt#6350,2021-12-12,The difference may be that I'm still running 11.0. Probably the fixup_chains default is when the minimum target OS is 12.0 or later.,,
6.88091E+17,mflatt#6350,2021-12-12,I've pushed a change that hopefully fixes the problem.,,üçâ (1)
6.88091E+17,mflatt#6350,2021-12-12,(The fast way to try it is `raco setup -nDK`.),,
3.38034E+17,sorawee#6299,2021-12-12,Thanks!,,
3.38034E+17,sorawee#6299,2021-12-12,Confirm that it works!,,
3.5323E+17,Alex Knauth#4895,2021-12-12,I can also confirm that it works!,,
7.05427E+17,Geoff Knauth#5539,2021-12-12,"I'm trying to understand `se-path*/list`. I thought it would give me in `infos` a list of all matching `info` nodes, but it seems to give me a list containing the contents of just the first matching `info` node. The XML I'm parsing is `Forest_ForestFire_202109261500.cap`. My little test program is:",https://cdn.discordapp.com/attachments/618895179343986688/919662135238352946/Forest_ForestFire_202109261500.cap,
7.05427E+17,Geoff Knauth#5539,2021-12-12,"```#lang racket

(require xml xml/xexpr xml/path gregor racket/list)

(define work-directory ""../TestFiles/20211211/alert-type-1093"")

(current-directory (build-path (current-directory) work-directory))
(define cap-files (find-files (Œª (path) (regexp-match #rx"".*\\.cap$"" path))))

(define (read-cap-files)
  (map (Œª (path)
         (with-input-from-file path
           (Œª ()
             (let* ([xe (xml->xexpr (document-element (read-xml)))]
                    [infos (se-path*/list '(info) xe)]
                    [count (length infos)])
               (list path count infos)))))
       cap-files))

(define xs (read-cap-files))
(define x2 (second xs))
(third x2) ;; yields the contents of a single info node
           ;; but I was expecting a list of 8 info nodes```",,
1.71755E+17,klmn#4295,2021-12-12,"why is this a thing?
```scheme
> (define _ 2)
> _
2
```",,
1.71755E+17,klmn#4295,2021-12-12,"It makes sense, but still",,
3.58051E+17,hazel#0271,2021-12-12,"""it makes sense""",,
3.58051E+17,hazel#0271,2021-12-12,"!rkt eval
```
(define || 3)
(eval (string->symbol """"))
```",,
8.02004E+17,r16#4581,2021-12-12,3,,
3.38034E+17,sorawee#6299,2021-12-12,FWIW:,,
3.38034E+17,sorawee#6299,2021-12-12,"!rkt eval
```scheme
(match-define _ 2)
_
```",,
8.02004E+17,r16#4581,2021-12-12,":warning: stderr:
trick:2:0: _: wildcard not allowed as an expression
  in: _
  location...:
   trick:2:0
  context...:
   /home/r16bot/r16/evaluator.rkt:71:4: not-module
   /home/r16bot/r16/evaluator.rkt:98:7
   /home/r16bot/r16/evaluator.rkt:63:2: run-evaluation
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:413:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:511:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:914:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:910:5: loop",,
1.71755E+17,klmn#4295,2021-12-12,"Not in this case (it looks like both patterns are the same, but not really, context dependent meanings for `_`)
```scheme
> (match* (1 2)
  [(a a) a]
  [(_ _) _])
2
```",,
3.38034E+17,sorawee#6299,2021-12-12,That's because you have `(define _ 2)` earlier.,,
3.38034E+17,sorawee#6299,2021-12-12,"!rkt eval
```scheme
(match* (1 2)
  [(a a) a]
  [(_ _) _])
```",,
8.02004E+17,r16#4581,2021-12-12,":warning: stderr:
trick:3:9: _: wildcard not allowed as an expression
  in: _
  location...:
   trick:3:9
  context...:
   /usr/local/racket/collects/racket/private/stxparam.rkt:61:2: let-local-keys
   /home/r16bot/r16/evaluator.rkt:71:4: not-module
   /home/r16bot/r16/evaluator.rkt:63:2: run-evaluation
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:413:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:511:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:914:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:910:5: loop",,
1.71755E+17,klmn#4295,2021-12-12,ü§¶‚Äç‚ôÇÔ∏è,,
7.05427E+17,Geoff Knauth#5539,2021-12-12,"@Alex Knauth helped me figure out the answer to my question about `se-path*/list`. He uses Matthew Butterick's `txexpr`, package, so I tried that, and it worked much better.
```(define is-info? (Œª (x) (and (txexpr? x) (eq? 'info (get-tag x)))))
... [infos (findf*-txexpr xe is-info?)] ...```
Now I get 8 `info` nodes, and the `info` tag is included at the start of each one.",,
4.1228E+17,xgqt#8370,2021-12-12,"wha...
today I learned",https://cdn.discordapp.com/attachments/618895179343986688/919743487447023646/unknown.png,
3.38034E+17,sorawee#6299,2021-12-12,Rosette has been abusing this `||` for a long time lol,,
4.1228E+17,xgqt#8370,2021-12-12,kawa theoretically display nothing... but if you use write...,https://cdn.discordapp.com/attachments/618895179343986688/919744860683108372/unknown.png,
4.1228E+17,xgqt#8370,2021-12-12,cyclone doesnt do anything,https://cdn.discordapp.com/attachments/618895179343986688/919745210236407808/unknown.png,
4.1228E+17,xgqt#8370,2021-12-12,and guile...,https://cdn.discordapp.com/attachments/618895179343986688/919745376666390599/unknown.png,
2.75501E+17,Plane#0324,2021-12-12,What is the use of the empty symbol?,,
8.14743E+16,jimpjorps#0001,2021-12-12,I don‚Äôt think it‚Äôs so much that it has a use as that it just happens to be valid because of the parsing rules,,
2.75501E+17,Plane#0324,2021-12-12,"but sorawee said that Rosette has been (ab)using it, which sounds like there is a purpose in that context",,
2.75501E+17,Plane#0324,2021-12-12,"the first thing that occurred to me was as an alternative sentinel when data needs to contain `#f`.  (i am not saying to use it this way, just that it occurred to me as being possible)",,
3.38034E+17,sorawee#6299,2021-12-12,"`(|| #t #f)` => `#t`, just like `(&& #t #f)` => `#f`",,
2.75501E+17,Plane#0324,2021-12-12,oh!  i see,,
2.75501E+17,Plane#0324,2021-12-12,lol,,
3.38034E+17,sorawee#6299,2021-12-12,lol indeed,,
3.58051E+17,hazel#0271,2021-12-12,oh my god,,
8.14743E+16,jimpjorps#0001,2021-12-12,beautiful,,
6.87833E+17,grey#8674,2021-12-12,This hurts my soul.,,
3.38034E+17,sorawee#6299,2021-12-12,"Ping @countvajhula, since `relation` and `qi` both have `||`.

There's also https://docs.racket-lang.org/no-vert-bar-lang/ by @Alex Knauth, though I don't think it will be useful for `relation` or `qi`, since it requires changing `#lang`, which might be an unacceptable constraint?",,
9.06964E+17,countvajhula#9049,2021-12-13,"wait, what's the problem here exactly?",,
9.06964E+17,countvajhula#9049,2021-12-13,that string->symbol behavior certainly seems weird... does that mean it's a bad idea to use this as an identifier for some reason?,,
3.38034E+17,sorawee#6299,2021-12-13,"The problem is that you may think that `||` is `||`, but it's actually `<empty>`.

One practical effect is that you can't search for this identifier in the doc, unless you ""quote"" the search term.",,üëÜ (1)
9.06964E+17,countvajhula#9049,2021-12-13,is `<empty>` a symbol with some special meaning?,,
3.38034E+17,sorawee#6299,2021-12-13,"So, I wrote `<empty>` to stand for a symbol with 0 length.",,
9.06964E+17,countvajhula#9049,2021-12-13,"oh okay, I see now",,
3.38034E+17,sorawee#6299,2021-12-13,"Technically, if you want to write `||`, you would need to write `\|\|`, which of course is super ugly. Unless you use `#lang no-vert-bar`",,
9.06964E+17,countvajhula#9049,2021-12-13,"I attempted `(eval (read (open-input-string ""||"")))` after a `(require relation)` and it mapped it to the disjoin function",,
9.06964E+17,countvajhula#9049,2021-12-13,would I be right in assuming that this would only affect cases where users are manually doing a string->symbol conversion? (and I guess at some level the docs search feature is doing that?),,
3.38034E+17,sorawee#6299,2021-12-13,"Yes, because the reader reads that as the empty symbol",,
3.38034E+17,sorawee#6299,2021-12-13,"- `string->symbol` + `eval`
- Macro stuff that inspects symbol name of an identifier
- Doc search",,
9.06964E+17,countvajhula#9049,2021-12-13,"ok so does that mean, that || is the empty symbol, but it is allowed to be used as an identifier - yet it still is the empty symbol (sorry I'm sure I'm being super dense but just want to make sure I understand üòÑ )",,
9.06964E+17,countvajhula#9049,2021-12-13,"and so there can be problems since it would be treated as such in various settings, and I should probably name it something else to steer clear of those cases?",,
3.38034E+17,sorawee#6299,2021-12-13,"!rkt eval
```scheme
(require syntax/parse/define
         (for-syntax racket/syntax))
(define-syntax-parse-rule (test x:id)
  #:with y (format-id this-syntax ""~ax"" #'x)
  (define y 42))
(test abc)
(println abcx)
(test ||)
(println x)
```",,
8.02004E+17,r16#4581,2021-12-13,"42
42",,
3.38034E+17,sorawee#6299,2021-12-13,"!rkt eval
```scheme
(require syntax/parse/define
         (for-syntax racket/syntax))
(define-syntax-parse-rule (test x:id)
  #:with y (format-id this-syntax ""~ax"" #'x)
  (define y 42))
(test ||)
(println ||x)
```",,
8.02004E+17,r16#4581,2021-12-13,42,,
3.38034E+17,sorawee#6299,2021-12-13,lol,,
9.06964E+17,countvajhula#9049,2021-12-13,haha,,
9.06964E+17,countvajhula#9049,2021-12-13,"well, I think I get it, and it sounds like it'd be best to steer clear of this. But fwiw I'm pretty sure I borrowed this convention from the `algebraic` package, so ... this thing is everywhere!",,
9.06964E+17,countvajhula#9049,2021-12-13,what would you recommend? I'm happy to drop support in my libraries if that's the right thing here,,
9.06964E+17,countvajhula#9049,2021-12-13,"or maybe it'd be better to offer a warning in the docs to the effect of, if you're going to be reading in this code and doing any metaprogramming or what have you, please use the written forms of these identifiers instead, e.g. disjoin rather than || - wdyt?",,
3.38034E+17,sorawee#6299,2021-12-13,"That's up to you. Rosette, for instance, will probably not bother with this. But it's also in a better position to change, since it's a `#lang`, meaning it can create a custom reader if it wants to.",,
3.38034E+17,sorawee#6299,2021-12-13,I just pinged you for the FYI,,
9.06964E+17,countvajhula#9049,2021-12-13,"I see. In that case, I think I'll just add a note in the docs for now and revisit later for relation. For Qi, I might just drop it since it's relatively new, and I'd rather keep it tidy from the get-go if possible, and || isn't really that useful for Qi anyway",,
9.06964E+17,countvajhula#9049,2021-12-13,Thank you for the heads up!,,
9.06964E+17,countvajhula#9049,2021-12-13,üëç,,
9.06964E+17,countvajhula#9049,2021-12-13,"ftr, it looks like LaTeX `\parallel` is sometimes used to indicate logical OR (according to wikipedia) and it looks similar, so I used it in Qi. For relation I just left a warning in the docs",,
2.98235E+17,a11ce#0027,2021-12-13,what's the proper 'null'/no value default arg?,,
2.98235E+17,a11ce#0027,2021-12-13,"for example, an optional default value for vector-ref",,
2.98235E+17,a11ce#0027,2021-12-13,anything i can think of has the issue that maybe thats what the user wants,,
2.98235E+17,a11ce#0027,2021-12-13,currently leaning towards an arbitrary symbol but that feels bad,,
2.98235E+17,a11ce#0027,2021-12-13,"```lisp
 
(define (vector2-ref vec pos [default 'no-arg421340978])
  (unless (check-pos vec pos)
    (if (equal? default 'no-arg421340978)
        (raise-user-error ""ref position out of range:"" pos)
        default))
...
```",,
2.98235E+17,a11ce#0027,2021-12-13,(i know this could go in help but its really more of a racket-design question i think),,
3.38034E+17,sorawee#6299,2021-12-13,"If you know that users should not be able to provide something, say `#f`, then you can default it to that value.",,
3.38034E+17,sorawee#6299,2021-12-13,"Otherwise, a common trick is as follows:

```scheme
(define unset-sym (gensym))
(define (v-ref vec pos [default unset-sym])
  (if (eq? default unset-sym)
      <user does not provided the argument>
      <user provides the argument>))
```",,plusone (1)
3.38034E+17,sorawee#6299,2021-12-13,`gensym` has a property that the generated symbol will be unique `eq`-wise. So you can be sure that clients of the library won't be able to get a hand on this `unset-sym` (unless you intentionally leak it),,
2.98235E+17,a11ce#0027,2021-12-13,ha thats funny,,
2.98235E+17,a11ce#0027,2021-12-13,just cause its like the correct/fancy version of my idea,,
2.98235E+17,a11ce#0027,2021-12-13,"perfect though, ty!",,
2.75501E+17,Plane#0324,2021-12-13,the bridge that lets you access wsl filesystems from windows is quite slow and more importantly not very robust,,
2.75501E+17,Plane#0324,2021-12-13,"i wanted to keep my projects over there because i'm used to doing everything from bash, and having all my files show up executable all the time feels really wonky.  lol",,
2.75501E+17,Plane#0324,2021-12-13,but it turns out that isn't a very good idea.  it works much better keeping the files over on the windows side,,
2.75501E+17,Plane#0324,2021-12-13,"on the performance side, just as an example, i was doing automated comparisons of some timestamps during my build process, and it was 100x slower with the files stored in `\\wsl$\Debian\`",,
2.75501E+17,Plane#0324,2021-12-13,"there are some bizarre bugs on the robustness side too, like returning different permissions on repeated syscalls, seemingly at random",,
2.75501E+17,Plane#0324,2021-12-13,"so if anyone ends up on windows, while i highly recommend wsl, i recommend not trusting it farther than you can throw it",,üç¥ (2)
5.24323E+17,Ben Kenobi#5683,2021-12-13,"In fairness, Qi‚Äôs is a literal in the syntax, not an identifier with a binding, no?",,
3.38034E+17,sorawee#6299,2021-12-13,"Does anyone use Windows?

I'm curious about how other languages handle CRLF issues when reading a line.

For example, Python has the binary and text mode when opening a file. So I suppose `.readline()` is context dependent on the mode. 

What does `sys.stdin.readline()` do? Will it strip CR out?",,
2.08605E+17,soegaard#9269,2021-12-13,"@sorawee  Check the comment by `akefay`.
https://www.reddit.com/r/Racket/comments/r62krw/please_fix_readline/hmuayy9/?context=3",,
2.08605E+17,soegaard#9269,2021-12-13,"I think a reasonable solution would be to have two differet ""read a line"" functions.
The current one for file handling.
And one called `interactive-read-line`.",,
3.38034E+17,sorawee#6299,2021-12-13,"Well, there are two issues in Python (and previous versions of Racket). One is that the stdin and the prompt are in the same stream. Note that this is no longer the case in Racket HEAD, since Racket switched to use `expeditor`.

Another issue is about CRLF handling, and it's unclear from that thread what's actually going on. The REPL indicates that it's actually running on Linux, not Windows.",,
3.38034E+17,sorawee#6299,2021-12-13,"I think a good test would be to put:

```python
import sys
print(sys.stdin.readline())
```

in a file, run it on Windows, and see if there's a CR character.",,
8.14743E+16,jimpjorps#0001,2021-12-13,tried it and it doesn't look like there was,,
3.38034E+17,sorawee#6299,2021-12-13,Interesting. Thanks for the help!,,
8.14743E+16,jimpjorps#0001,2021-12-13,reading this guy's post and I really do not understand his declaration that changing how `read-line` works will bring new Racket users in by the boatload,,
8.14743E+16,jimpjorps#0001,2021-12-13,"just say you think it's annoying, cripes",,
3.38034E+17,sorawee#6299,2021-12-13,"I sympathize with wanting `read-line` to work out of the box. `(read-line (current-input-port) 'any)` is not great to type. The poster has been saying this for years, I think. But it is definitely overly aggressive.",,
8.14743E+16,jimpjorps#0001,2021-12-13,I think the solution of just adding another command that's an alias for `(read-line (current-input-port) 'any)` is fine,,
3.38034E+17,sorawee#6299,2021-12-13,@mflatt is this an acceptable compromise?,,
8.14743E+16,jimpjorps#0001,2021-12-13,"there's already other convenience commands like that, like port->lines and such",,
3.38034E+17,sorawee#6299,2021-12-13,"I'm thinking about `read-line*` which also consumes a port and a mode and simply call `read-line`, but the mode defaults to `'any`.",,
8.14743E+16,jimpjorps#0001,2021-12-13,maybe something like `port->line` but that's bikeshedding at that point,,üëç (1)
2.14881E+17,Moinate#6061,2021-12-13,we certainly have ended up with too many helper / convenience methods in other areas,,
6.88091E+17,mflatt#6350,2021-12-13,"This seems like more trouble than it's worth to me, but I wouldn't fight a `real-line*` addition to `racket/port` and a documentation change for `read-line` to encourage `read-line*`.",,üëç (1)
4.66395E+17,oaktownsam#0815,2021-12-13,I have so many IO problems/slowness with Windows I mainly just play games on that system now.,,
2.75501E+17,Plane#0324,2021-12-13,"i try to do as much development work on linux as i can.  (used to be freebsd, but i jumped ship in 2011 lol)",,
2.75501E+17,Plane#0324,2021-12-13,somehow i just can't get comfortable developing on windows,,
4.66395E+17,oaktownsam#0815,2021-12-13,I inherited a Dell laptop recently and have just been running Xubuntu and having a grand time.,,
2.75501E+17,Plane#0324,2021-12-13,i'm running linux mint at the moment,,
2.75501E+17,Plane#0324,2021-12-13,"i haven't really kept up with the various distros out there so i'm not sure what i'd run on a new box, all of my systems here have something debian-derived (or just debian itself)",,
2.75501E+17,Plane#0324,2021-12-13,sometimes i want to go back to fvwm and pretend it's the 90s,,
4.66395E+17,oaktownsam#0815,2021-12-13,I got on Debian for personal systems in 2000ish and have been on various ubuntu since it came out.,,
2.75501E+17,Plane#0324,2021-12-13,i'm pretty used to ubuntu.  but it did go through a period of years where it broke my audio in a different way on every single update,,
4.66395E+17,oaktownsam#0815,2021-12-13,"Yeah, there was a period where I had no linux running (except on virtualbox) and now hardware almost works without having to do research first.",,
2.75501E+17,Plane#0324,2021-12-13,"i'm hoping to get a pinephone pro, and they've gone with manjaro + kde plasma mobile for their official software",,
2.75501E+17,Plane#0324,2021-12-13,so that'll probably be my next linux box.  lol,,
2.75501E+17,Plane#0324,2021-12-13,it is pretty nice now.  lately it's been windows that's broken my audio on updates,,üòÑ (3)
3.88744E+17,velcrovan#2900,2021-12-13,"I had the same thought. Also a silly to talk about the ‚ÄúOS with the most users‚Äù in the context of an inconvenience that affects only people who read console input, likely 0.0001% of Windows users",,
8.14743E+16,jimpjorps#0001,2021-12-13,"yeah, I'm on windows and I have not run into that issue since all the i/o I do is with files",,
3.88744E+17,velcrovan#2900,2021-12-13,I use Racket on Windows at work and never even thought about this,,
2.14881E+17,Moinate#6061,2021-12-13,"I agree, I think you should just ignore this `read-line` person. 
IIUC, it's somebody who got bit by something they did not expect.",,üëç (1)
9.06964E+17,countvajhula#9049,2021-12-13,@Ben Kenobi yeah I wasn't sure if that might make a difference so I changed it just to be on the safe side ü§∑,,
5.24323E+17,Ben Kenobi#5683,2021-12-13,Gave a demo at work recently using vim to send commands to tmux; turned the one-off script to launch the demo into a #lang because /shrug https://pkgd.racket-lang.org/pkgn/package/tmux-vim-demo,,
4.83487E+17,jest#6646,2021-12-13,is there a version of `string-contains?` that tells it where to start? basically i need to find 2 occurences of a word in a big blob of text,,
8.14743E+16,jimpjorps#0001,2021-12-13,"not directly, but you could do string-contains? on a substring",,
4.83487E+17,jest#6646,2021-12-13,would need to get the index of where the word ends,,
3.5323E+17,Alex Knauth#4895,2021-12-13,Assuming you know which index to start... yeah,,
8.14743E+16,jimpjorps#0001,2021-12-13,or use regexp-match instead,,
4.83487E+17,jest#6646,2021-12-13,üòì,,
4.83487E+17,jest#6646,2021-12-13,always gotta read the regex docs lol,,
4.83487E+17,jest#6646,2021-12-13,so it takes me a little,,
3.5323E+17,Alex Knauth#4895,2021-12-13,"Okay here's what I would do. Use `regexp-match-positions` but don't use any of the actual regexp syntax, use `regexp-quote` to avoid all of that",,plusone (1)
4.83487E+17,jest#6646,2021-12-13,"another question, `bytes->string/utf-8` , doesn't split on new line `\n`s ?",,
3.5323E+17,Alex Knauth#4895,2021-12-13,"And once you have the ending position from `regexp-match-positions`, use that to get the substring for the second one",,
3.5323E+17,Alex Knauth#4895,2021-12-13,"You could even define a helper function `string-contains?/positions`, (which can use `regexp-match-positions` and `regexp-quote` internally) so that when you call that you don't have to think about regexps",,
3.5323E+17,Alex Knauth#4895,2021-12-13,"The Wish-List entry for that helper function might look like
```
;; string-contains?/position : String String -> (cons Natural Natural) | #f
;; Checks whether `s` includes `contained` at any location, and if it does, produces a pair with the position of `contained` as a substring of `s`. Otherwise produces false.
(define (string-contains?/position s contained)
  ....)
```",,
3.5323E+17,Alex Knauth#4895,2021-12-13,"And it's worth noting that `string-contains?` itself could basically be defined like this:
```
(define (string-contains? s contained)
  (regexp-match? (regexp-quote contained) s))
```
(I had the `racket/string` version mixed up with the BSL version at first... the argument order is different, and this argument order comes from `racket/string`, but the body using regexp-match/quote comes from the definition in BSL)",,
4.66395E+17,oaktownsam#0815,2021-12-13,"It turns a `bytes?` encoded in utf-8 into a `string?`  I think the only ""special"" thing it does is it may error on invalid encoding.",,
4.66395E+17,oaktownsam#0815,2021-12-13,(or it replaces the bad encoding with an error character if specified),,
2.66505E+17,notjack#9941,2021-12-13,"late to the party but please don't call it `read-line*` üòÖ `read-line-interactively` perhaps? has a clearer purpose, makes grammatical sense, and would show up in scribble search results when searching `read-line`",,
3.38034E+17,sorawee#6299,2021-12-13,"There's nothing interactive about it though. The consensus seems to be that `'any` is genuinely a better default (and that's why newer stuff like `in-lines` defaults to `'any`).

Using suffix `*` like this also has a precedent before, like `call-with-output-file*`.",,
2.66505E+17,notjack#9941,2021-12-13,"that's a _bad_ precedent, though",,
2.66505E+17,notjack#9941,2021-12-13,"it's not even like `!` where there's at least some agreed-upon interpretation of what tacking `!` onto a name is supposed to mean (broadly: ""here be dragons"")",,
6.87833E+17,grey#8674,2021-12-13,"I only understand `foo*` as, `foo`, but the *other* one. It doesn‚Äôt mean much.",,
3.38034E+17,sorawee#6299,2021-12-13,"I'm open for suggestion for a better name, but I don't think I would use `read-line-interactively`.",,
2.66505E+17,notjack#9941,2021-12-13,`read-line-leniently` perhaps?,,
2.66505E+17,notjack#9941,2021-12-13,or perhaps `read-line-cross-platform`,,
2.66505E+17,notjack#9941,2021-12-13,or just `read-any-line`,,
3.38034E+17,sorawee#6299,2021-12-13,`read-line-any`?,,plusone (1)
2.66505E+17,notjack#9941,2021-12-13,yeah that works,,
3.5323E+17,Alex Knauth#4895,2021-12-13,yeah that or `read-line/any`,,
1.93202E+17,rocketnia#4517,2021-12-13,"sticking with `(read-line _ 'any)` seems good to me, at least compared to any alternatives",,
1.93202E+17,rocketnia#4517,2021-12-14,"I forgot, I actually can see a purpose to having a different set of macros for use in statement or threading clause contexts than for use in expression contexts. Namely, it seems likely that the front-end design of the macro might differ a little between these variants, having a different indentation style, different GUI syntax widgets, or differently formatted error messages. I think there's value in having all the same syntaxes work in both places, but there's also value in polishing up each place with a tailored treatment of each syntax",,
3.38034E+17,sorawee#6299,2021-12-14,I like `read-line/any`,,
3.38034E+17,sorawee#6299,2021-12-14,"But the next question is, should the mode be adjustable?",,
3.38034E+17,sorawee#6299,2021-12-14,One good thing about `read-line*` is that `#:mode` still can be provided. It just has a more sensible default.,,
3.38034E+17,sorawee#6299,2021-12-14,"But with the name `read-line/any`, it would be weird if the mode is not `'any`",,
2.66505E+17,notjack#9941,2021-12-14,if you're going that route I suggest naming it `read-line` and putting it somewhere like `racket/port` and just updating the docs for the original `read-line` to say it's deprecated and users should migrate to the one in `racket/port`,,
3.38034E+17,sorawee#6299,2021-12-14,"> The bindings documented in this section are provided by the racket/port and racket libraries, but not racket/base.",,
2.66505E+17,notjack#9941,2021-12-14,oops,,
2.66505E+17,notjack#9941,2021-12-14,maybe `racket/read` or something?,,
2.66505E+17,notjack#9941,2021-12-14,just _some_ other module,,
2.66505E+17,notjack#9941,2021-12-14,or maybe `racket/port2`,,
3.38034E+17,sorawee#6299,2021-12-14,"oh no, that's honestly even more horrifying than the name `read-line*`",,
2.66505E+17,notjack#9941,2021-12-14,"heh, fair",,
3.38034E+17,sorawee#6299,2021-12-14,Never thought before that naming is hard /s,,
2.66505E+17,notjack#9941,2021-12-14,"alternative ideas:
- `read-line2`
- change the default of `read-line` and add a `read-line` function to a `compatibility/` module with the old default",,
2.66505E+17,notjack#9941,2021-12-14,maybe `resyntax` could automate migration here somehow,,
4.83487E+17,jest#6646,2021-12-14,so im using 2htdp to scale some images up and now i want to pipe them into base64-encode so i can inline them an html page,,
4.83487E+17,jest#6646,2021-12-14,how does one do that :0? do i have to save the file to disk since i cant find how to convert the scaled image to bytes,,
4.83487E+17,jest#6646,2021-12-14,"oh, i can use `convert` from `(require file/convertible)`",,
8.1766E+17,jessealama#2319,2021-12-14,"if one visits the racket/racket repo on GitHub, it looks like the latest release is 8.1 (should be 8.3):",https://cdn.discordapp.com/attachments/618895179343986688/920230805123502110/Screen_Shot_2021-12-14_at_09.27.46.png,
8.1766E+17,jessealama#2319,2021-12-14,^ @samth I believe you took care of this last time (I think I mentioned it). Is there any kind of automation we can set up to support this kind of bookkeeping?,,
1.55457E+17,Rubix#7306,2021-12-14,@countvajhula Let's say xs is a list. I can clearly write something like `(- (apply max xs) (apply min xs))` Does Flow have some way to write this without referencing xs twice? Basically this is the S combinator from the SKI combinators.,,
7.94955E+17,Laurent O#6627,2021-12-14,`(apply - (map (lambda (proc) (apply proc xs)) (list max min)))` :p,,mew (1)
2.75501E+17,Plane#0324,2021-12-14,"it looks so fancy with `fancy-app`
```scheme
(apply - (map (apply _ xs) (list max min)))
```",,
2.75501E+17,Plane#0324,2021-12-14,honestly i don't know why it is so fun to write a function over and over in different ways sometimes,,
7.94955E+17,Laurent O#6627,2021-12-14,"```scheme
(define (map-apply arg . procs)
  (map (Œª (proc) arg)
       procs))

(apply - (map-apply xs max min))
```",,
7.94955E+17,Laurent O#6627,2021-12-14,"I've had uses  for this `map-apply` several times, I guess I should add it to my collection",,
2.64024E+17,Eutro#0016,2021-12-14,"it looks so fancy in Haskell:
`(-) . maximum <*> minimum`",,mew (1)
7.94955E+17,Laurent O#6627,2021-12-14,and so readable üòÑ,,
2.64024E+17,Eutro#0016,2021-12-14,of course :meowsmile:,,
2.64024E+17,Eutro#0016,2021-12-14,there's a quicker algorithm to find the minimum and maximum of a list at once :mew:,,
2.64024E+17,Eutro#0016,2021-12-14,with `3n/2` comparisons always :meowsmile:,,
7.94955E+17,Laurent O#6627,2021-12-14,"Using lim_{Œ±->infty} x_i^Œ± / \sum_j x_j^Œ± you don't even need *any* comparison, you just pick Œ± large enough and then get the index of the first component that's non-zero.",,
7.94955E+17,Laurent O#6627,2021-12-14,"(of course to make it numerically stable you need to first find the max, but hey)",,
9.06964E+17,countvajhula#9049,2021-12-14,@Rubix sure! One way is `(~> (xs) ‚ñ≥ (-< max min) -)`,,
1.55457E+17,Rubix#7306,2021-12-14,I see. That seems like like a lot of characters.,,
9.06964E+17,countvajhula#9049,2021-12-14,without symbols: `(~> (xs) sep (tee max min) -)`,,
9.06964E+17,countvajhula#9049,2021-12-14,"(if that's what you meant by ""characters"")",,
1.55457E+17,Rubix#7306,2021-12-14,"No. What I meant was ""That seems longer/more complex than the Haskell equivalent""",,
9.06964E+17,countvajhula#9049,2021-12-14,"well, actually they're not _quite_ the same, since the Qi version here actually passes in the input list whereas the haskell one doesn't",,
9.06964E+17,countvajhula#9049,2021-12-14,actual equivalent: `(~> ‚ñ≥ (-< max min) -)` üôÇ,,
9.06964E+17,countvajhula#9049,2021-12-14,that's as close as it's gonna get,,
9.06964E+17,countvajhula#9049,2021-12-14,"and actually, it has the Haskell version beat by 1 character!",,
1.55457E+17,Rubix#7306,2021-12-14,I'm now a slightly more educated lady. Thanks for that.,,
9.06964E+17,countvajhula#9049,2021-12-14,lol of course :p,,
2.75501E+17,Plane#0324,2021-12-14,this is very nifty!,,
1.55457E+17,Rubix#7306,2021-12-14,"@countvajhula also, as an Emacs Evil user, I'm in love with your Symex mode.",,
9.06964E+17,countvajhula#9049,2021-12-14,"(one caveat though: this is the Qi expression, but in order to run it from within Racket you need to enter Qi via an interface macro, so in Racket you would need to prefix with ‚òØ)",,
1.55457E+17,Rubix#7306,2021-12-14,Yes. I know that.,,
9.06964E+17,countvajhula#9049,2021-12-14,"@Rubix thanks, I'm really glad to hear that!",,
9.06964E+17,countvajhula#9049,2021-12-14,"btw, I think you commented on the symex blog post recently? Unless that was another Rubix?",,
1.55457E+17,Rubix#7306,2021-12-14,"No, that was me.",,
9.06964E+17,countvajhula#9049,2021-12-14,"In which case, I responded a few days ago -- just wanted to make sure you didn't miss it since I don't really know if it notifies people of responses...",,
1.55457E+17,Rubix#7306,2021-12-14,"It took me about 15 minutes to wrap my mind around how the Symex mode works, but now I can't imagine editing Racket code any other way.",,‚ù§Ô∏è (1)
1.55457E+17,Rubix#7306,2021-12-14,"Yeah, I've seen the response.",,
1.55457E+17,Rubix#7306,2021-12-14,I also use Rigpa.el and Line mode and Word mode are things I use all the time when working with Haskell,,
1.55457E+17,Rubix#7306,2021-12-14,Working with those modes is super easy because the keybindings are so similar to the default Vim bindings of HJKL for moving the cursor around.,,
1.55457E+17,Rubix#7306,2021-12-14,Thank you for making these wonderful Emacs packages.,,
2.64024E+17,Eutro#0016,2021-12-14,"Ah yes, the constant-time-because-infinity-is-constant approach",,üëç (1)
9.06964E+17,countvajhula#9049,2021-12-14,"ooh now that is very interesting. I often wonder how many people are really using Rigpa since it isn't on MELPA. And I introduced a couple of bugs a few months ago while making some er, ""improvements""... that I haven't gotten around to fixing. I feel guilty about that, lol",,
1.55457E+17,Rubix#7306,2021-12-14,"Yeah. I used straight.el to pull the code directly from github and compile it for me. It works super well for me. straight.el interfaces very well with use-package, which makes for a very nice setup experience.",,
9.06964E+17,countvajhula#9049,2021-12-14,"ah nice, that's great. do you use View mode by any chance?",,
1.55457E+17,Rubix#7306,2021-12-14,"No. I'm not sure what that does. I assume it provides the same functionality as `M-x text-scale-adjust` does. And since I'm so used to using `text-scale-adjust`, I never remember that View Mode exists.",,
1.55457E+17,Rubix#7306,2021-12-14,"But also, I don't change the text size very often. Only when I'm showing things to my sister who has a bit worse eyesight than me.",,
9.06964E+17,countvajhula#9049,2021-12-14,"ah okay, that makes sense then! yeah it's mainly for zooming and things like that. It has the bug I mentioned - so, that would explain why you haven't come after me with a pitchfork yet.",,
1.55457E+17,Rubix#7306,2021-12-14,"I must be really tired, because I thought a pitchfork was a special kind of way to fork a Github repo and I was confused for a bit. Then I realized you mean an actual pitchfork and you thought I was gonna be a one person mob.",,ü§£ (2)
1.55457E+17,Rubix#7306,2021-12-14,"Granted, it is 2:55am here.",,
2.66505E+17,notjack#9941,2021-12-14,"to play the pointful programmer's pedantic advocate, I prefer writing `xs` twice because `xs` is short and the alternative solutions are more indirect. and if you mean that the problem is when `xs` is a complex expression, then might I humbly suggest:
```scheme
(define xs (complex-expression))
(- (apply max xs) (apply min xs))
```",,
1.55457E+17,Rubix#7306,2021-12-14,"Yeah, I know what you mean. I could also use a let there.",,
2.66505E+17,notjack#9941,2021-12-14,oh hey it's 2:55am here too,,
9.06964E+17,countvajhula#9049,2021-12-14,"pedantic professor, surely?",,
1.55457E+17,Rubix#7306,2021-12-14,I'm in Seattle.,,
9.06964E+17,countvajhula#9049,2021-12-14,2:55 here too,,
2.66505E+17,notjack#9941,2021-12-14,"I considered prosecutor, but that alliteration appeared alarmingly aggressive",,üíØ (1)
2.66505E+17,notjack#9941,2021-12-14,california south bay here,,
9.06964E+17,countvajhula#9049,2021-12-14,you mean you pondered prosecutor?,,
2.66505E+17,notjack#9941,2021-12-14,precisely,,
2.75501E+17,Plane#0324,2021-12-14,"i have a habit of playing with syntax and learning about the ways things can be expressed, separately from writing actual code where i decide what the clearest way to communicate something is",,meow (2)
9.06964E+17,countvajhula#9049,2021-12-14,"I'm in Oakland usually, but on vacation in Sonoma atm, still Bay Area",,üëã (1)
2.75501E+17,Plane#0324,2021-12-14,"so for the former, i just try to have fun and learn what all my options are",,
2.66505E+17,notjack#9941,2021-12-14,"oh yes, keep all of my advice away from the ears of experimentalists",,
2.66505E+17,notjack#9941,2021-12-14,I will wither their minds in the name of readability,,
2.66505E+17,notjack#9941,2021-12-14,"alternatively, a function:
```scheme
(define (largest-difference xs)
  (- (apply max xs) (apply min xs)))
```",,
1.55457E+17,Rubix#7306,2021-12-14,Yes. There are many ways of doing this. I see that now.,,
2.66505E+17,notjack#9941,2021-12-14,possibilities!,,
2.66505E+17,notjack#9941,2021-12-14,they're exciting to have and relieving to ignore,,
2.66505E+17,notjack#9941,2021-12-14,I should write about data structures,,
9.06964E+17,countvajhula#9049,2021-12-14,"well, sleep is exciting to ignore but relieving to have right now, so I'm off. Good night y'all üò¥",,
2.66505E+17,notjack#9941,2021-12-14,yeah that's a _way_ better decision than mine,,
2.66505E+17,notjack#9941,2021-12-14,night!,,
2.75501E+17,Plane#0324,2021-12-14,rest well!,,
1.55457E+17,Rubix#7306,2021-12-14,My decision was to drink way to much soda and stay up learning APL. Why do I torment myself with this Unicode nightmare? IDK. I'm not a clever woman.,,
9.06964E+17,countvajhula#9049,2021-12-14,üòÜ,,
2.66505E+17,notjack#9941,2021-12-14,"many people believe APL to stand for A Programming Language, when in fact it stands for A Painful Lesson",,
2.64024E+17,Eutro#0016,2021-12-14,"as the pedantic professor of pointful programming, how do you enjoy my solutions to Advent of Code (in H*skell)? I've rewritten (almost) all of them point-free <https://github.com/eutro/aoc2021/tree/master/src>",,
2.66505E+17,notjack#9941,2021-12-14,"> ```haskell
> putStrLn $ show $ length $ filter id $ zipWith
> ```
yup that's haskell alright",,
2.66505E+17,notjack#9941,2021-12-14,"> ```haskell
> . (($) >>= (.) . ($ (>>)) . (.) . flip (.))
> ```
I'm impressed you only managed to use one word on this line",,
2.66505E+17,notjack#9941,2021-12-14,all in all: hell yeah,,meowsmile (1)
2.64024E+17,Eutro#0016,2021-12-14,"There's a `. (.) . (.) (,) . (&)` in Day 8",,
2.64024E+17,Eutro#0016,2021-12-14,I'm quite proud of it,,
1.55457E+17,Rubix#7306,2021-12-14,What the heck does this do?,,
1.55457E+17,Rubix#7306,2021-12-14,"I actually understand this. It takes a function of type (a -> b -> Bool), a list of items of type A and a list of items of type B. It runs the function pairwise on the elements and counts how many times True was a result and then it writes that to the console.",,
6.46253E+17,mwarren#6807,2021-12-14,-++,,
2.64024E+17,Eutro#0016,2021-12-14,"`(.) (,) . (&)`
=> `\x -> (.) (,) (x&)`
=> `\x -> (,) . (x&)`
=> `\x y -> (,) (x&y)`
=> `\x y -> (,) (y x)`
=> `\x y z -> (y x, z)`
(edit: I got the arguments the wrong way around initially)",,
2.64024E+17,Eutro#0016,2021-12-14,and then that's piped into more `(.)`s and it's all good fun,,
1.55457E+17,Rubix#7306,2021-12-14,That's so weird!,,
6.46114E+17,samth#3420,2021-12-14,"We could automate that, potentially, either as part of the release process (contacting John Clements, the release manager, is the best way to do that) or automatically with github actions (perhaps with a trigger for creating git tags).",,
2.64024E+17,Eutro#0016,2021-12-14,"then
`(.) . (.) (,) . (&)`
=> `(.) . (\x y z -> (y x, z))`
=> `\u -> (.) ((\x y z -> (y x, z)) u)`
=> `\u -> (.) (\y z -> (y u, z))`
=> `\u v -> (.) (\y z -> (y u, z)) v`
=> `\u v -> (\y z -> (y u, z)) . v`
=> `\u v w -> (\y z -> (y u, z)) (v w)`
=> `\u v w z -> (v w u, z)`",,
6.46114E+17,samth#3420,2021-12-14,I just created releases for 8.2 and 8.3.,,
2.75501E+17,Plane#0324,2021-12-14,"i think the `$`s are fairly readable, but the `. (.) . (.) (,) . (&)` is a complete mystery to me",,
4.83487E+17,jest#6646,2021-12-14,"how does one add !DOCTYPE to make this work?
```scheme
(require xml)

(xexpr->string
            '((!DOCTYPE html) ; this crashes xexpr->string
              (html
               (head (meta ((charset ""utf-8""))) (title ""Saying hi""))
               (body
                (p ""Hi world!"")
                (ul
                 (li (ul (li ""hello!""))))))))
```",,
4.83487E+17,jest#6646,2021-12-14,or do i just string-append that after I convert the `(html)` part and i cant have it embedded in,,
6.46114E+17,samth#3420,2021-12-14,you can create an XML `document?` which contains a `doctype?`,,
2.75501E+17,Plane#0324,2021-12-14,"oh no, did someone get their discord account taken over?",,
6.46114E+17,samth#3420,2021-12-14,I deleted the message,,
6.46114E+17,samth#3420,2021-12-14,@jos your account may have been hacked,,
7.18552E+17,jatta#5605,2021-12-14,"How much do people use contracts, typed racket, algebraic racket, in real code?",,
8.14743E+16,jimpjorps#0001,2021-12-14,"in my experience, contracts are pretty common especially when making libraries or interfaces for other people to use, typed racket is mainly used with `racket/math` or other similar libraries where the static type checks help improve performance, algebraic racket is a research language",,üëç (1)
8.1766E+17,jessealama#2319,2021-12-15,I think dedox would appreciate knowing that his Algebraic Racket is being used,,plusone (1)
8.1766E+17,jessealama#2319,2021-12-15,"I use contracts for most of my untyped code, and some of my work is done entirely in Typed Racket",,
8.1766E+17,jessealama#2319,2021-12-15,"some people do well with contract-free coding, but I *need* contracts (or types, in the case of Typed Racket) to help me think about my code and give me guardrails for when I refactor or otherwise change my own code",,
8.1766E+17,jessealama#2319,2021-12-15,sometimes I look at a big untyped and uncontracted module and am amazed at the brain genius that did all that without contracts,,
8.1766E+17,jessealama#2319,2021-12-15,"like ""How is that possible I can't even""",,
1.55457E+17,Rubix#7306,2021-12-15,"Yeah, Jesse, I feel that way.",,
2.64024E+17,Eutro#0016,2021-12-15,"there's contracts on the stdlib functions so I don't need them, they'll error out for me when I make a type error anyway :meowsmile:",,
7.94955E+17,Laurent O#6627,2021-12-15,My secret recipe is almost entirely based on the ancestral notion of unwavering laziness,,
8.1766E+17,jessealama#2319,2021-12-15,"""I can't be bothered"" ü§£",,
8.1766E+17,jessealama#2319,2021-12-15,"I remember at RacketCon 2018 I showed off some code and someone said something like ""wow, look at all those nice contracts!"" The comment surprised me because I thought contracts were pretty widely used. ""Wait, you don't use contracts?"" I wonder if I might be in a minority",,
7.94955E+17,Laurent O#6627,2021-12-15,In all cases you're on the right side of the fence üòâ,,
8.1766E+17,jessealama#2319,2021-12-15,"the funny thing is, for me contracts are a developer tool that help me think about my code and test it. I generally don't want contracts being checked at runtime. Indeed, I wish there were a contract-free version of `racket/base` where, as far as possible, all contracts are stripped, even from standard library functions like `+`",,plusone (1)
8.1766E+17,jessealama#2319,2021-12-15,free agent Racket (sports analogy for professional baseballers who are currently not tied down by a contract with a team),,
7.94955E+17,Laurent O#6627,2021-12-15,Check #:uncontracted-submodule from `contract-out`,,üëç (1)
8.1766E+17,jessealama#2319,2021-12-15,I want `#lang uncontracted/racket/base`,,plusone (1)
7.94955E+17,Laurent O#6627,2021-12-15,Sometimes I write the function signatures in comments,,
7.94955E+17,Laurent O#6627,2021-12-15,"when there are messy lists of lists of lists, usually right before I change them to structs",,
3.38034E+17,sorawee#6299,2021-12-15,Do you know `(#%declare #:unsafe)`? It's kind of `#lang uncontracted/racket/base`,,üßê (1)
7.94955E+17,Laurent O#6627,2021-12-15,"But it's not documented, is it?",,
8.1766E+17,jessealama#2319,2021-12-15,https://this-plt-life.tumblr.com/post/36425232996/when-i-try-to-structure-data-in-scheme,,
7.94955E+17,Laurent O#6627,2021-12-15,haha,,
7.94955E+17,Laurent O#6627,2021-12-15,"Ah, here: https://docs.racket-lang.org/reference/module.html#%28form._%28%28quote._~23~25kernel%29._~23~25declare%29%29",,
7.94955E+17,Laurent O#6627,2021-12-15,"Is that for the module only, or does it apply to the whole Racket chain of operations?",,
3.38034E+17,sorawee#6299,2021-12-15,"Only for that module, I think",,
7.94955E+17,Laurent O#6627,2021-12-15,"right, so not really what we're looking for",,
7.94955E+17,Laurent O#6627,2021-12-15,"I'm happy with my program to crash without feedback, as long as I can restart it with safety checks and make it raise exceptions",,üíØ (1)
8.1766E+17,jessealama#2319,2021-12-15,fast-n-crash Racket,,
3.38034E+17,sorawee#6299,2021-12-15,"Well, `#lang uncontracted/racket/base` would be module-specific too, but yes, I get what you are trying to say.",,
8.1766E+17,jessealama#2319,2021-12-15,"true, good point -- I guess this is more like a custom Racket variant, not just a #lang",,
2.75501E+17,Plane#0324,2021-12-15,i didn't know about that.  i knew about `racket/unsafe/ops`,,
3.38034E+17,sorawee#6299,2021-12-15,"Perhaps it's possible to create a macro that expands to `(#%declare #:unsafe)` when the command-line is something, and `(begin)` when the command-line option is something else?",,
2.75501E+17,Plane#0324,2021-12-15,"you would have to recompile all of your dependencies then, wouldn't you?",,
3.38034E+17,sorawee#6299,2021-12-15,"yes, and you need to use the macro everywhere, too, for the scheme to work",,
8.1766E+17,jessealama#2319,2021-12-15,"I guess it *could* be a #lang, but the expander would be really invasive, probably unlike how we normally think of #lang. It would rewrite all `require`d code into the new #lang, too, thereby transitively stripping contracts",,
2.75501E+17,Plane#0324,2021-12-15,"this is spooky
```scheme
> (unsafe-vector-ref #(foo bar) 0)
'foo
> (unsafe-vector-ref #(foo bar) 1)
'bar
> (unsafe-vector-ref #(foo bar) 2)
'#(#<procedure:slow-extract-procedure> #<procedure:do-impersonate-ref> #<procedure:do-impersonate-set!>)
> (unsafe-vector-ref #(foo bar) 3)
#<struct-type>
> (unsafe-vector-ref #(foo bar) 4)
#f
> (unsafe-vector-ref #(foo bar) 5)
'#(foo bar)
> (unsafe-vector-ref #(foo bar) 6)
'()
> (unsafe-vector-ref #(foo bar) 7)
(#f #f ...)
```",,üòØ (1)
7.94955E+17,Laurent O#6627,2021-12-15,I think we should just swap the contract library(ies) to mock ones to build a racket-crash variant,,
7.94955E+17,Laurent O#6627,2021-12-15,There's a lot of code with custom checks like `unless... raise-argument-error` though,,
8.1766E+17,jessealama#2319,2021-12-15,"heh, I guess that kind of thing might well be a consequence of trashing contracts. Imagine this kind of spookiness *everywhere*",,
2.75501E+17,Plane#0324,2021-12-15,"my current approach is to use unsafe functions only in very specific places, because i probably need racket to protect me from myself",,
2.75501E+17,Plane#0324,2021-12-15,"if there's one thing writing C for 30 years has taught me, it's that i can't be trusted",,
2.75501E+17,Plane#0324,2021-12-15,"(at this point i think pretty much everyone is bad at C, because C is not human-friendly, so i'm not trying to be hard on myself when i say that)",,
7.94955E+17,Laurent O#6627,2021-12-15,"I want strong contracts when developing, no contracts when running myself, and possibly weak contracts when used by others",,
7.94955E+17,Laurent O#6627,2021-12-15,"Though it depends what I'm developing of course, but a number of my programs are like that. For GUI stuff, I don't mind strong contracts usually, apart from sensitive operations",,
8.1766E+17,jessealama#2319,2021-12-15,in my case the motivation for dropping (or limiting) contracts is to make my Racket-powered web sites faster,,
2.75501E+17,Plane#0324,2021-12-15,i've never tried universally disabling contracts.  i try to use unsafe ops explicitly when it makes a significant difference,,plusone (1)
2.75501E+17,Plane#0324,2021-12-15,"the other time unsafe ops can be good, i think, is when you have redundant checks around them",,
2.75501E+17,Plane#0324,2021-12-15,so you don't end up paying the performance penalty multiple times,,
2.75501E+17,Plane#0324,2021-12-15,i have some code like that right now,,
8.1766E+17,jessealama#2319,2021-12-15,"yeah, true",,
7.94955E+17,Laurent O#6627,2021-12-15,"yeah, sometimes if you compose andmaps you can end up with quadratic time even for cases where it should be linear",,
2.75501E+17,Plane#0324,2021-12-15,"that reminds me of the fun blog, now dormant: https://accidentallyquadratic.tumblr.com/",,üëÅÔ∏è (1)
4.66395E+17,oaktownsam#0815,2021-12-15,"I've never noticed performance problems with stdlib contracts, generally it's with 3rd party libraries.",,
2.75501E+17,Plane#0324,2021-12-15,i noticed the new repl doesn't like it if i type japanese into it.  the old one doesn't mind,,
4.66395E+17,oaktownsam#0815,2021-12-15,expeditor?,,
2.75501E+17,Plane#0324,2021-12-15,yeah that,,
4.66395E+17,oaktownsam#0815,2021-12-15,Now is probably a good time to report bugs before they cut the next release.,,
2.75501E+17,Plane#0324,2021-12-15,me struggling https://www.quarplet.com/expeditor.mkv,,
2.75501E+17,Plane#0324,2021-12-15,"let's see, is expeditor a separate github project . . .",,
2.75501E+17,Plane#0324,2021-12-15,found it! <https://github.com/racket/expeditor/issues>,,
2.75501E+17,Plane#0324,2021-12-15,"i reported it, thanks (:",,
2.75501E+17,Plane#0324,2021-12-15,"it's not a big deal, i can just use the drracket repl for now",,
2.14881E+17,Moinate#6061,2021-12-15,idea: add to some conspicuous place like racket repo sidebar a link to pkgs.racket-lang.org with instructions to lookup packages there to find the place for bug reports. (maybe this is stopping 0 people),,
4.66395E+17,oaktownsam#0815,2021-12-15,Bugs fixed in snapshots == less bugs for newbs/students,,üòÄ (1)
2.75501E+17,Plane#0324,2021-12-15,oh!  i don't mean that i don't want it fixed.  i think it would be nice (:,,
2.75501E+17,Plane#0324,2021-12-15,bugs fixed = yay,,
2.75501E+17,Plane#0324,2021-12-15,"i am just always mindful that i'm not the boss of anyone in the community, and i don't want to impose",,
4.66395E+17,oaktownsam#0815,2021-12-15,I think I was projecting.  I sometimes skip making bugs because it feels like more effort than workaround,,üëÄ (1)
7.14999E+17,gingerydoo#7461,2021-12-15,"Does `string-length` iterate over the input string every time, or is the length a hidden property of the string?",,
3.5323E+17,Alex Knauth#4895,2021-12-15,"I think it's an intrinsic property of the string, similar to how vector length is an intrinsic property of the vector",,plusone (1)
7.14999E+17,gingerydoo#7461,2021-12-15,"I opted for a small experiment.  You're right.

```Welcome to Racket v8.2 [cs].
> (define s (time (build-string #e1e8 (const #\.))))
cpu time: 1796 real time: 1797 gc time: 167
> (time (string-length s))
cpu time: 0 real time: 0 gc time: 0
100000000
> 
```",,
4.66395E+17,oaktownsam#0815,2021-12-15,There is discussion about changing the string representation to UTF-8 which could make this not true.  AIUI there would be a lot of announcement before such a change is made.,,
9.03801E+17,pognotfound#1461,2021-12-15,that would make the string immutable?,,
9.03801E+17,pognotfound#1461,2021-12-15,bc you can't change length,,
3.5323E+17,Alex Knauth#4895,2021-12-15,"The length of a Racket string is always immutable, but most strings in Racket are mutable because you can change the character at each index",,
9.03801E+17,pognotfound#1461,2021-12-15,how about vectors?,,
3.5323E+17,Alex Knauth#4895,2021-12-15,Likewise the length of a vector is immutable but most vectors are mutable by changing the element at each index,,
9.03801E+17,pognotfound#1461,2021-12-15,hmm,,
9.03801E+17,pognotfound#1461,2021-12-15,you can't push element to vectors,,
9.03801E+17,pognotfound#1461,2021-12-15,sad üò¢,,
3.5323E+17,Alex Knauth#4895,2021-12-15,"Right now in Racket Strings are pretty close to ‚Äùvectors of characters""",,
3.5323E+17,Alex Knauth#4895,2021-12-15,"And yeah, both are fixed-length",,
2.66505E+17,notjack#9941,2021-12-15,"nominality helps with this a lot, by which I mean you can take structural contracts like `(-> (list foo?) (list bar?))` and replace them with a nominal `foo-bar-transform?` predicate by defining a struct type and only doing the wrapping once, in the struct's constructor",,plusone (1)
4.66395E+17,oaktownsam#0815,2021-12-15,but then you pay the wrapping cost,,
4.66395E+17,oaktownsam#0815,2021-12-15,which can be cheaper,,
2.66505E+17,notjack#9941,2021-12-15,yup,,
6.87833E+17,grey#8674,2021-12-15,"It‚Äôs possible to define a new vector type that can be pushed to, by transparently allocating a new vector with a greater capacity. However, in practice, this won‚Äôt be necessary, except in particular use cases. Indeed, Racketeers can do just fine using only immutable vectors.",,
6.46114E+17,samth#3420,2021-12-15,Switching to UTF8 would not mean that `string-length` was linear time. It just means that indexing is not constant time.,,plusone (1)
4.66395E+17,oaktownsam#0815,2021-12-15,"I wasn't sure if storing the string length (vs. the byte length) was something that would be in a ""field""",,
2.66505E+17,notjack#9941,2021-12-15,what _is_ the length of a string anyway,,
2.66505E+17,notjack#9941,2021-12-15,"(not in racket, just like, semantically)",,ü§Ø (1)
3.5323E+17,Alex Knauth#4895,2021-12-15,"bytes, unicode code points, extended grapheme clusters... dependent on which version of unicode you're running, it's complicated",,
6.46114E+17,samth#3420,2021-12-15,https://hsivonen.fi/string-length/,,"üç¥ (1),üçâ (1)"
2.66505E+17,notjack#9941,2021-12-15,"excellent, thank you",,
4.83487E+17,jest#6646,2021-12-15,"question before i try to write this, there is no `image=?` in 2htdp that compares all the pixels of a given image? i",,
4.83487E+17,jest#6646,2021-12-15,cant seem to find it myself,,
3.5323E+17,Alex Knauth#4895,2021-12-15,"For some reason it's not in `2htdp/image` but it is in BSL itself:
https://docs.racket-lang.org/htdp-langs/beginner.html#%28def._htdp-beginner._%28%28lib._lang%2Fhtdp-beginner..rkt%29._image~3d~3f%29%29",,
4.83487E+17,jest#6646,2021-12-15,"ohhh that explains a lot lol, i was scrolling thorugh 2htdp/image docs swearing there was an image=? before ...",,
4.83487E+17,jest#6646,2021-12-15,that should be exposed to 2htdp image.... though i guess ill just write it manually via bitmap->color-list for now,,
3.5323E+17,Alex Knauth#4895,2021-12-15,If you want to use it outside the teaching languages you can require it from `lang/imageeq`,,
4.83487E+17,jest#6646,2021-12-15,not sure what the syntax is for how to require it piece wise,,
4.83487E+17,jest#6646,2021-12-15,"nonetheless, ill just file an issue now",,
3.5323E+17,Alex Knauth#4895,2021-12-15,As in `lang/imageeq` is a module just to provide `image=?`,,
4.83487E+17,jest#6646,2021-12-15,"ohh, but i need both 2htdp/image and image=? , so i get this: 
```scheme
(require lang/imageeq)
(require 2htdp/image)

. module: identifier already required
  also provided by: lang/imageeq in: image?
> 
```",,
3.5323E+17,Alex Knauth#4895,2021-12-15,I don't know why `lang/imageeq` also provides `image?` or why it's version of `image?` would be an incompatible binding with the one from `2htdp/image`,,
7.14999E+17,gingerydoo#7461,2021-12-16,"!rkt eval (string-length ""ü§¶üèº‚Äç‚ôÇÔ∏è"")",,
8.02004E+17,r16#4581,2021-12-16,5,,
3.5323E+17,Alex Knauth#4895,2021-12-16,"!rkt eval (bytes-length #""ü§¶üèº‚Äç‚ôÇÔ∏è"")",,
8.02004E+17,r16#4581,2021-12-16,":warning: stderr:
trick:1:14: read-syntax: character `ü§¶` is out of range in byte string
  context...:
   /usr/local/racket/collects/racket/sequence.rkt:41:0: sequence->list
   /home/r16bot/r16/evaluator.rkt:63:2: run-evaluation
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:413:0: call-with-limits
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:511:0: call-with-custodian-shutdown
   /usr/local/racket/collects/racket/private/more-scheme.rkt:148:2: call-with-break-parameterization
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:914:7
   /usr/local/racket/share/pkgs/sandbox-lib/racket/sandbox.rkt:910:5: loop",,
3.5323E+17,Alex Knauth#4895,2021-12-16,"!rkt eval (bytes-length (string->bytes/utf-8 ""ü§¶üèº‚Äç‚ôÇÔ∏è""))",,
8.02004E+17,r16#4581,2021-12-16,17,,
7.14999E+17,gingerydoo#7461,2021-12-16,üòÉ,,
9.03801E+17,pognotfound#1461,2021-12-16,number of characters that a string have,,meowsmile (2)
2.75501E+17,Plane#0324,2021-12-16,"i noticed i can do this
```scheme
(match-define (list a b)
  (prompt
   (abort
    (list 2 3))))
```
but not this
```scheme
(define-values (a b)
  (prompt
   (abort
    (values 2 3))))    ;; result arity mismatch
```",,
2.75501E+17,Plane#0324,2021-12-16,so right now i have a function returning a list which i would kind of prefer to return values,,
2.75501E+17,Plane#0324,2021-12-16,(i'm using a helper function to return values anyway),,
3.38034E+17,sorawee#6299,2021-12-16,One thing I have been meaning to ask: does this mean string-suffix? will no longer take time proportional to the suffix argument?,,
3.38034E+17,sorawee#6299,2021-12-16,"Similarly, substring would not take time proportional to the length of the output, right?",,
2.64024E+17,Eutro#0016,2021-12-16,"naively you can still compare just the UTF-8 bytes at the end, I think",,
2.64024E+17,Eutro#0016,2021-12-16,"this might give an unexpected result when comparing, say ""üá≠üá∫"" and ""üá∫"" for example",,
2.64024E+17,Eutro#0016,2021-12-16,I wonder,,
2.75501E+17,Plane#0324,2021-12-16,"well, i suppose that's okay, as long as you expect the unexpected",,
2.64024E+17,Eutro#0016,2021-12-16,"!rkt eval (string-suffix? ""üá≠üá∫"" ""üá∫"")",,
8.02004E+17,r16#4581,2021-12-16,#t,,ü§£ (3)
2.64024E+17,Eutro#0016,2021-12-16,:meowsmile:,,
9.03801E+17,pognotfound#1461,2021-12-16,someone help #help,,
7.94955E+17,Laurent O#6627,2021-12-16,"Here's a stress test showing how inefficient `andmap` can be: https://gist.github.com/Metaxal/21256e7733c96f083a36c4bf52ed525e
I'm not sure how structural contracts would help?",,
7.94955E+17,Laurent O#6627,2021-12-16,"TLDR: `andmap`: 166s, `my-andmap`: 7ms",,üëÄ (2)
8.1766E+17,jessealama#2319,2021-12-16,perhaps push a change to andmap?,,
7.94955E+17,Laurent O#6627,2021-12-16,"I guess that would be somewhat backward incompatible since `my-andmap` allows for improper lists, or lists of different lengths",,
2.75501E+17,Plane#0324,2021-12-16,i substituted in `for/and` and it was just slightly slower than `my-andmap`,,
7.94955E+17,Laurent O#6627,2021-12-16,"Sure, but my issue is with the hefty hidden cost of contracts, and both `my-andmap` and `for/and` check less. The right way to do it would be to lift the `length` contract check or memoize it",,
7.94955E+17,Laurent O#6627,2021-12-16,But that has a memory cost too of course,,
2.75501E+17,Plane#0324,2021-12-16,"i was just curious to see, since well, those hidden costs you're talking about are hidden, and i don't have a good awareness of them",,üëç (1)
2.66505E+17,notjack#9941,2021-12-16,are you sure it's not because `andmap` supports any number of lists instead of only two lists?,,
7.94955E+17,Laurent O#6627,2021-12-16,"That's not the issue no, since you can 'easily' extend `my-andmap` to support arbitrarily many lists and still not need to check for lengths",,
2.08605E+17,soegaard#9269,2021-12-16,"@Laurent O  Do you get the same result if you require this `andmap` directly?
https://github.com/racket/racket/blob/448b77a6629c68659e1360fbe9f9e1ecea078f9c/racket/collects/racket/private/map.rkt#L100",,
2.08605E+17,soegaard#9269,2021-12-16,There is a fast path for the case  `(andmap f xs ys)` so your `(andmap = l1 l2)` ought to be fast.,,
2.08605E+17,soegaard#9269,2021-12-16,Sans contracts at least.,,
4.66395E+17,oaktownsam#0815,2021-12-16,"I think this depends on if strings will support things like having a character index.

I'm wondering if there should be a basic everyday use string type and (for lower level) some unicode functions that work over bytes",,
8.14743E+16,jimpjorps#0001,2021-12-16,"I think that's how Rust and Swift and a couple other languages do it, there's a String type that's a stream/iterator/etc of graphemes and a generic vector type for bytes",,
7.94955E+17,Laurent O#6627,2021-12-16,"It's still slow, but it's because there's still a length check here: https://github.com/racket/racket/blob/448b77a6629c68659e1360fbe9f9e1ecea078f9c/racket/collects/racket/private/map.rkt#L124",,
2.08605E+17,soegaard#9269,2021-12-16,Time for a PR?,,
2.08605E+17,soegaard#9269,2021-12-16,Does BC and CS behave the same?,,
7.94955E+17,Laurent O#6627,2021-12-16,No time for a PR unfortunately,,
7.94955E+17,Laurent O#6627,2021-12-16,I think BC behaves the same yes,,
2.75501E+17,Plane#0324,2021-12-16,yes i just tried on BC,,
2.08605E+17,soegaard#9269,2021-12-16,Is it a trade-off between short and long lists?,,
7.94955E+17,Laurent O#6627,2021-12-16,"but again, this would be backward incompatible, unless one provides a unsafe-andmap",,
7.94955E+17,Laurent O#6627,2021-12-16,I don't see why it would be,,
2.08605E+17,soegaard#9269,2021-12-16,"I missed the part where your version is backward incompatible in the `(f xs ys)` case.
Your version also detects the situation, where the lists are of different lengths.
That seems to be the important part.
Whether improper lists are detected - well - that doesn't seem to be important for me at least.",,
7.94955E+17,Laurent O#6627,2021-12-16,"Right. It's also ""positive backward compatible"" in the sense that if it didn't raise exceptions before, the new version will not do so either.",,
7.94955E+17,Laurent O#6627,2021-12-16,It detects different lengths only when it gets there. It may still return a result even if lists are of different lengths if the result is `#f`,,
2.08605E+17,soegaard#9269,2021-12-16,Ah - I missed that part.,,
2.08605E+17,soegaard#9269,2021-12-16,But I think that is an improvement üòâ,,plusone (1)
7.94955E+17,Laurent O#6627,2021-12-16,"Yeah, contracts probably shouldn't change the complexity order of the underlying program",,
2.66505E+17,notjack#9941,2021-12-16,"sigh, if only getting the size of a list was a constant-time operation",,
1.50946E+17,Nan0Scho1ar#6423,2021-12-16,Cache it :P,,
2.66505E+17,notjack#9941,2021-12-16,"because they're persistent linked lists, that comes with its own problems üò¶ specifically the memory costs of adding a size field to every single node in every linked list",,
3.38034E+17,sorawee#6299,2021-12-16,"Another possibility is having the current list as an internal structure, and the actual list will be a wrapper that contains the length information and this internal structure. This means as long as you don't hold on to too many lists, you can garbage collect many wrappers. Still bad though, IMO.",,
8.1766E+17,jessealama#2319,2021-12-17,couldn't we keep track of the length-so-far in a separate parameter?,,
8.1766E+17,jessealama#2319,2021-12-17,it sounds like someone should just do a PR to get the ball rolling. Looking at you @Laurent O üôÉ,,
8.1766E+17,jessealama#2319,2021-12-17,"if we keep track of the length-so-far of the two lists, we can generate a useful error message, like: ""first list has length 42, second list has length at least 43""",,
8.1766E+17,jessealama#2319,2021-12-17,"(what I'm suggesting is to avoid a preflight length check, if we're trying to keep this thing as fast as possible)",,
4.66395E+17,oaktownsam#0815,2021-12-17,Any termux users/experts here?,,
7.14999E+17,gingerydoo#7461,2021-12-17,`in-directory` alternative that works as a data stream?,,
1.50946E+17,Nan0Scho1ar#6423,2021-12-17,"I use termux, but not really an expert",,üëç (1)
4.66395E+17,oaktownsam#0815,2021-12-17,I'm looking at updating the racket package,,
4.66395E+17,oaktownsam#0815,2021-12-17,But I think I have the info I need from their wiki,,
1.50946E+17,Nan0Scho1ar#6423,2021-12-17,I didn't even realize Racket was available on termux,,
4.66395E+17,oaktownsam#0815,2021-12-17,It is but is version 7.4,,
1.50946E+17,Nan0Scho1ar#6423,2021-12-17,Is building from source an option? I've done that with a few things,,
2.64024E+17,Eutro#0016,2021-12-17,I don't think building from source works very well,,
4.66395E+17,oaktownsam#0815,2021-12-17,The current package seems fairly straightforward building from source.  I'm going to just use BC for now.,,
4.66395E+17,oaktownsam#0815,2021-12-17,which is what is there now just an older version,,
4.66395E+17,oaktownsam#0815,2021-12-17,I have a feeling it's on 7.4 due to the relicensing... üòî,,
2.75501E+17,Plane#0324,2021-12-18,"darn, discord search is down",,
2.75501E+17,Plane#0324,2021-12-18,"(or at least, none of my searches work!)",,
2.75501E+17,Plane#0324,2021-12-18,"i know i've asked twice already where `module->exports` is, because for some reason my poo r brain can't seem to remember that particular name",,
2.75501E+17,Plane#0324,2021-12-18,so i really wanted to find it by searching instead of asking a third time.  but i found it by looking at my own code lol,,
2.75501E+17,Plane#0324,2021-12-18,i think a `provides?` form would be nice,,
2.75501E+17,Plane#0324,2021-12-18,"```scheme
#lang racket/base

(require racket/match)

(define (provides? module-name symbol-name)
  (define (requested-symbol? s)
    (string=? (symbol->string s)
              (symbol->string symbol-name)))
  (define-values (exports _)
    (module->exports module-name #f))
  (for/or ([i (in-list (car exports))])
    (match i
      [(list (? requested-symbol? symbol) _) #t]
      [_                                     #f])))

(provides? 'racket/unsafe/ops
           'unsafe-f32vector-ref)
```",,
2.75501E+17,Plane#0324,2021-12-18,i had some trouble wrangling the output of `module->exports` lol,,
3.38034E+17,sorawee#6299,2021-12-18,Personally I would use `dynamic-require` instead,,
2.75501E+17,Plane#0324,2021-12-18,oh really,,
3.38034E+17,sorawee#6299,2021-12-18,"```scheme
#lang racket

(define (provides? mod name)
  (dynamic-require mod name (Œª () #f)))

(provides? 'racket/unsafe/ops 'unsafe-f32vector-ref)
;=> #f
(provides? 'racket/unsafe/ops 'unsafe-vector-ref)
;=> #<procedure:unsafe-vector-ref>
```",,
2.75501E+17,Plane#0324,2021-12-18,oh!  that is so much better,,
2.75501E+17,Plane#0324,2021-12-18,thank you,,
2.75501E+17,Plane#0324,2021-12-18,"i want to use my `unsafe-f32vector-ref` if it's available, but have the program still work when only `f32vector-ref` is available",,
2.75501E+17,Plane#0324,2021-12-18,yay it works,,
9.03801E+17,pognotfound#1461,2021-12-18,racket has oop lol,https://cdn.discordapp.com/attachments/618895179343986688/921786303291457576/unknown.png,
9.03801E+17,pognotfound#1461,2021-12-18,cool,,
8.14743E+16,jimpjorps#0001,2021-12-18,yes,,
8.14743E+16,jimpjorps#0001,2021-12-18,it's Multi-Paradigm‚Ñ¢Ô∏è,,
8.14743E+16,jimpjorps#0001,2021-12-18,if you ever use the gui library that's all classes,,
9.03801E+17,pognotfound#1461,2021-12-18,racket convention for class is so different,,
9.03801E+17,pognotfound#1461,2021-12-18,class is suffixed with `%`,,
9.03801E+17,pognotfound#1461,2021-12-18,and not capitalized,,
6.87833E+17,grey#8674,2021-12-18,An important thing to note is that OOP is not built into Racket. The class system is implemented in part of the standard library.,,
9.03801E+17,pognotfound#1461,2021-12-18,but the convention is quite different,,
8.14743E+16,jimpjorps#0001,2021-12-18,different from what,,
5.24323E+17,Ben Kenobi#5683,2021-12-18,"I think pognotfound is referring to the _naming_ convention of using `%`/`<%>` vs., say, Java/C#",,
9.03801E+17,pognotfound#1461,2021-12-18,^,,
8.14743E+16,jimpjorps#0001,2021-12-18,different things are different,,
9.03801E+17,pognotfound#1461,2021-12-18,"if most languages use the same convention why have to be different
imagine a language where strings are written `[hello]` or `(hello)` instead of `'hello'` or `""hello""`",,
9.03801E+17,pognotfound#1461,2021-12-18,^,,
8.14743E+16,jimpjorps#0001,2021-12-18,I am capable of reading the conversation without you jingling your keys in front of me like I'm 2,,
7.14999E+17,gingerydoo#7461,2021-12-18,"Classes are values in Racket, so this isn't fully equivalent.",,
3.58051E+17,hazel#0271,2021-12-18,"I mean, there aren't really other languages that use the naming convention `name?` for predicates and `name!` for mutation functions.",,
3.58051E+17,hazel#0271,2021-12-18,"we choose to be different because:
1. basically everything is a value, so distinctions kind of melt
2. we allow more characters in our identifiers than most languages",,plusone (3)
3.58051E+17,hazel#0271,2021-12-18,if you put `!` or `?` in an identifier in Java it'll yell at you,,
2.75501E+17,Plane#0324,2021-12-18,"i don't know how far back all of the naming conventions date, but lisp and scheme are quite old and come from an era before c-like syntax became so common across popular languages, so i think many of the decisions were made when people had different expectations",,
2.75501E+17,Plane#0324,2021-12-18,racket (formerly PLT Scheme) inherits a lot from scheme,,
2.75501E+17,Plane#0324,2021-12-18,i've always really liked the way identifiers look in racket,,
2.75501E+17,Plane#0324,2021-12-18,i like `this-stuff`,,
2.75501E+17,Plane#0324,2021-12-18,it's easier to type and looks nice,,racketflat (1)
3.5323E+17,Alex Knauth#4895,2021-12-18,"These are the 2 places you've asked before if you're wondering:
https://discord.com/channels/571040468092321801/667522224823205889/910679835196678165
https://discord.com/channels/571040468092321801/667522224823205889/856650770728484926",,
2.75501E+17,Plane#0324,2021-12-18,thank you! i was having problems with search earlier,,
2.75501E+17,Plane#0324,2021-12-18,"you probably saw this, but sorawee helped me write a better `provides?` function",,
2.75501E+17,Plane#0324,2021-12-18,"(well, by ""helped me write"", i basically mean ""wrote for me"")",,
3.5323E+17,Alex Knauth#4895,2021-12-18,well whoever wrote `dynamic-require` did most of the work,,
2.75501E+17,Plane#0324,2021-12-18,"yes, i didn't know about that function",,
2.75501E+17,Plane#0324,2021-12-18,there's always more stuff in racket i don't know about yet,,
3.5323E+17,Alex Knauth#4895,2021-12-18,The only potential problem I see with it is: what if that symbol is provided by the module with the value `#false`?,,
5.24323E+17,Ben Kenobi#5683,2021-12-18,"Yeah, it might be better to wrap the `dynamic-require` in `with-handlers`; I've done that before, one sec",,
3.5323E+17,Alex Knauth#4895,2021-12-18,"well what I would do is have a gensym representing ""notfound""",,
2.75501E+17,Plane#0324,2021-12-18,"oh!  that is a good point.  that possibility doesn't affect my use case, so sorawee's solution works well for me.  but `#false` as a special value seems to lead to cases like this a lot in racket",,
5.24323E+17,Ben Kenobi#5683,2021-12-18,"Oh wait I see, `with-handlers` doesn't solve that problem. Nvm",,
3.5323E+17,Alex Knauth#4895,2021-12-18,"Use ""detecting the gensym for notfound"" for the case where you return `#false`, and everything else probably just return `#true`, not the provided value",,
3.5323E+17,Alex Knauth#4895,2021-12-18,"Oh, the other thing I would be wondering about is macros",,
3.5323E+17,Alex Knauth#4895,2021-12-18,"like `(provides? 'racket/base 'lambda)` fails with ""bad syntax"" at runtime",,
2.75501E+17,Plane#0324,2021-12-18,"i can show you my actual code, which is umm . . . well, it works!",,
2.75501E+17,Plane#0324,2021-12-18,"ohh, i misread this at first",,
3.5323E+17,Alex Knauth#4895,2021-12-18,sometimes I'm a bit of a perfectionist with these things...,,
5.24323E+17,Ben Kenobi#5683,2021-12-18,"Here's a macro that attempts to mirror a macro in another file. It wasn't written by me and it uses `syntax-rules`. You can ignore all the `produce-report/exit` stuff, probably.
```scheme
(define-syntax mirror-macro
  (syntax-rules (from)
    [(_ macro-name from base-filename)
     (define-syntax macro-name
       (syntax-rules ()
         [(_ E (... ...))
          (with-handlers ([exn:fail?
                           (lambda (e)
                             (produce-report/exit
                              `#hasheq((score . 0)
                                       (output . ,(string-append ""Run failed with error\n""
                                                                 (exn-message e))))))])
            (define bfn base-filename)
            (define filename (build-path (submission) bfn))
            (if (file-exists? filename)
                (with-handlers ([exn:fail?
                                 (lambda (e)
                                   (produce-report/exit
                                    `#hasheq((score . 0)
                                             (output . ,(string-append ""Loading failed with error\n""
                                                                       (exn-message e))))))])
                  (eval '(macro-name E (... ...))
                        (module->namespace
                         (begin
                           (dynamic-require filename #f)
                           filename))))
                (produce-report/exit
                 `#hasheq((score . 0)
                          (output . ,(string-append ""File "" bfn "" not found: please check your submission""))))))]))]))
```",,
2.75501E+17,Plane#0324,2021-12-18,"well, if you make a nice general solution to something it can make a nice library function (:",,
5.24323E+17,Ben Kenobi#5683,2021-12-18,"Here was a sample usage
```scheme
#lang racket

(require rackunit) ;; WARNING: Use the test- forms, NOT the check- forms!

(require ""lib-grade.rkt"")

(mirror-macro foo from ""student-code.rkt"")
(mirror-macro lett from ""student-code.rkt"")
(mirror-macro with-a-kwd from ""student-code.rkt"")
(mirror-macro mycond from ""student-code.rkt"")

(define-test-suite macro-tests
  (test-equal? ""foo""
               (foo)                 ;; note that `foo` comes from student-code.rkt
               ""hello this is foo"")
  (test-equal? ""lett""
               (lett ([x 3]
                      [y 4])
                     (+ x y))
               7)
  (test-equal? ""with-a-kwd""
               (with-a-kwd this x that) ;; note that `x` comes from student-code.rkt
               3)
  (test-equal? ""mycond immediate else""
               (mycond [else 23])
               23)
  (test-equal? ""mycond eventual else""
               (mycond [false 4]
                       [true 6]
                       [else 9])
               6))

(generate-results macro-tests)
```",,
5.24323E+17,Ben Kenobi#5683,2021-12-18,"Only sharing bc it might be useful. I haven't even really looked at how it works, except I think it evaluates the macro usage in the other module's namespace. Wish I could collapse those snippets.",,
2.75501E+17,Plane#0324,2021-12-18,hypothetically you could start a thread and collapse it.  but yesterday when i wanted to collapse a large snippet i put it in a gist instead,,plusone (1)
3.5323E+17,Alex Knauth#4895,2021-12-18,"or you could change it to ""sharing a file"" and collapse that to only a few lines preview",,
2.75501E+17,Plane#0324,2021-12-18,oh!  that's a good idea too,,
2.75501E+17,Plane#0324,2021-12-18,"```scheme
(define unsafe?-f32vector-set!
  (or (module-provides? 'racket/unsafe/ops
                        'unsafe-f32vector-set!)
      f32vector-set!))
```
this is how i was using `provides?` in my code",,
2.75501E+17,Plane#0324,2021-12-18,"that seemed to have a little performance penalty, though",,
3.5323E+17,Alex Knauth#4895,2021-12-18,I wonder if this could work better as a macro?,,
2.75501E+17,Plane#0324,2021-12-18,"so i decided to write a macro to do that instead.  i struggled a bit with the macro, though.  i came up with:
```scheme
(define-syntax-parser unsafe?-f32vector-set!
  [(_ vec index value)
   
   #:do
     [(define provides?
        (module-provides? 'racket/unsafe/ops
                          'unsafe-f32vector-set!))]
     
   #:with set
     (format-id #'f32vector-set!
                ""~a""
                (cond
                  [provides? ""unsafe-f32vector-set!""]
                  [else      ""f32vector-set!""]))
     
   #'(set vec index value)])
```",,
3.5323E+17,Alex Knauth#4895,2021-12-18,If you're worried about the...,,
3.5323E+17,Alex Knauth#4895,2021-12-18,"Oh, that's not what I was thinking",,
3.5323E+17,Alex Knauth#4895,2021-12-18,"I was thinking of something that would either import the unsafe version if exists, or import the safe version otherwise.. renaming whichever one to the one you want",,
2.75501E+17,Plane#0324,2021-12-18,that does sound nice,,
2.75501E+17,Plane#0324,2021-12-18,"i'm not sure how to do that, though!",,
2.75501E+17,Plane#0324,2021-12-18,"while i was writing this macro, the little voice in the back of my head said this is probably not the best way to do it",,
2.75501E+17,Plane#0324,2021-12-18,but it seemed to get rid of my performance penalty (:,,
3.5323E+17,Alex Knauth#4895,2021-12-18,"Like
```
(require (combine-in/override
           (only-in racket/unsafe/ops [unsafe-f32vector-set! unsafe?-f32vector-set!])
           (only-in ffi/vector [f32vector-set! unsafe?-f32vector-set!])))
```
or something like that",,
3.5323E+17,Alex Knauth#4895,2021-12-18,or would a name like `combine-in/fallback` be better?,,
3.5323E+17,Alex Knauth#4895,2021-12-18,"yeah because the first `only-in` itself will fail, it will need to catch that and fall back on the 2nd one",,
3.5323E+17,Alex Knauth#4895,2021-12-18,I think it would work better with a more permissive `allow-in` rather than the strict `only-in`,,
3.5323E+17,Alex Knauth#4895,2021-12-18,"As in
```
(require (combine-in/fallback
          (allow-in racket/unsafe/ops [unsafe-f32vector-set! unsafe?-f32vector-set!])
          (allow-in ffi/vector [f32vector-set! unsafe?-f32vector-set!])))
```",,
3.5323E+17,Alex Knauth#4895,2021-12-18,I think I'll add these to my `reprovide-lang` package,,
3.5323E+17,Alex Knauth#4895,2021-12-18,"If you happen to be interested in how I implemented it:
https://github.com/AlexKnauth/reprovide-lang/blob/master/reprovide-lang-lib/reprovide/require-transformer/combine-in-fallback.rkt",,
2.75501E+17,Plane#0324,2021-12-18,"neat!  this is my first time reading code for a require transformer, so it took me a little time to read through it",,
2.75501E+17,Plane#0324,2021-12-18,i also installed it and am using it already.  lol,,
2.75501E+17,Plane#0324,2021-12-18,"i'm always surprised how many modules i can remove with DrRacket's ""remove unused requires"" check after refactoring",,
2.75501E+17,Plane#0324,2021-12-18,it would be neat if there were a way to run the same check outside drracket,,
2.75501E+17,Plane#0324,2021-12-18,so i could scan my whole project,,
2.75501E+17,Plane#0324,2021-12-18,oh!,,
2.75501E+17,Plane#0324,2021-12-18,maybe i can do it with `drracket-tool-lib`?,,
